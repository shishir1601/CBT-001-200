$\INMR01      &      REVNODE      REVIEW      NODE      USER      201401
            \INMR02          IEBCOPY        /                         &
&                       REVIEW  REVIEW  PANELS \INMR02          INMCOPY        /
                 "4                   \INMR03        /                &
{  _    & &            "8    Vs              L        h              \  i Q   0
  "   "
 
 
                               REVHB01   REV@PRIM                   ]    TRIDJK
   REVFAQ           p              TRIDJKA   REVHBDT                ?        TRI
DJK    REVHBGN            |   ?   <    TRIDJK    REVHB00                ^
 TRIDJK    REVHB01                  "        TRIDJK                  REVHB05A  R
EVHB02                    \    TRIDJK    REVHB03                ^        TRIDJK
   REVHB04                ?        TRIDJK    REVHB04A                        TRI
DJK    REVHB05                ^        TRIDJK      REVHB05A               ^
   TRIDJK                  REVHB07C  REVHB05B               ^        TRIDJK    R
EVHB06                ?        TRIDJK    REVHB07                         TRIDJK
   REVHB07A               ?        TRIDJK    REVHB07B                 ?        T
RIDJK    REVHB07C               ?        TRIDJK                  REVHB10   REVHB
07D               ?        TRIDJK    REVHB07E                        TRIDJK    R
EVHB07F                        TRIDJK    REVHB08                ?        TRID  J
K    REVHB09                "   )    TRIDJK    REVHB10                         T
RIDJK                  REVHE02   REVHB11                ^        TRIDJK    REVHB
12                ^        TRIDJK    REVHEDT                         TRIDJK    R
EVHE00                  ^        TRIDJK    REVHE01                ?        TRIDJ
K    REVHE02                         TRIDJK                  REVHE05B  REVHE03
                       TRIDJK    REVHE04                         TRIDJK    REVHE
04A                          TRIDJK    REVHE05                         TRIDJK
 REVHE05A                        TRIDJK    REVHE05B                        TRIDJ
K                  REVHJDT   REVHE06                         TRIDJK    REVHE07
                  .    TRIDJKA   REVHE08                           TRIDJK    REV
HE09                ?        TRIDJK    REVHE10                         TRIDJK
 REVHJDT                ?        TRIDJK                  REVHO00   REVHJ00
          ?        TRIDJK    REVHJ01                           TRIDJK    REVHJ02
                "        TRIDJK    REVHJ03                "        TRIDJK    REV
HODT                |        TRIDJK    REVHO00                ^        TRIDJK
               REVHO06   REVHO01                         TRIDJK    REVHO  02
                     TRIDJK    REVHO03                |        TRIDJK    REVHO04
                |        TRIDJK    REVHO05                |        TRIDJK    REV
HO06                ?        TRIDJK                  REVHP02   REVHO07
      |          TRIDJK    REVHO08                ?        GREG      REVHPDT
            |        TRIDJK    REVHP00                ^        TRIDJK    REVHP01
                         TRIDJK    REVHP02                         TRIDJK
           REVHUDT   R  EVHP03                         TRIDJK    REVHP04
        |        TRIDJK    REVHP05                |        TRIDJK    REVHP06
            |        TRIDJK    REVHP07                         GREG      REVHUDT
                |        TRIDJK                    REVHU05   REVHU00
    ^        TRIDJK    REVHU01                |        TRIDJK    REVHU02
                 TRIDJK    REVHU03                |        TRIDJK    REVHU04
            |        TRIDJK    REVHU05                  |        TRIDJK
                   REVHU06                |        TRIDJK    REVHU07
    ? &      GREG      REVLOGO          p     ?        GREG      REVPANEL
        |        GREG
                                                      "      )ATTR
                                                               ! TYPE(TEXT) COLO
R(WHITE) HILITE(USCORE)                                        { TYPE(NT)
                                                                 @ TYPE(ET)
                                                                 # TYPE(DT)
                                                               )BODY CMD( ) WIND
OW(60,3)                                                       {     @The REV  I
EW FAQ is located at:                      {                     {
                                           {                     {     !http://w
ww.prycroft6.com.au/REVIEW/revfaq.html+    {                     )INIT
                                                                     &ZUP = REVF
AQ                                                                   &ZWINTTL =
'REVIEW FAQ'                                                         &ZCMD = ' '
                           O                                           &CMD = '
'                                                                    )END
                                                                          "
        "      )ATTR DEFAULT(%+_)
                   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                     + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                     _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                     ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) P
AD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                   )BODY EXPAND(\\)
                   %TUTORIAL+-\-\-[REVIEW Detailed Information+-\-\-%TUTORIAL
                   %OPTION  ===>_ZCMD
                    +
 
                        Detailed information for the[REVIEW+c  ommand processor
is contained              in the TSO HELP member for[REVIEW.+ This member reside
s in the SYSHELP          concatenation.   Enter one of the following commands t
o view the HELP           member in 3270 full screen mode.
 
                              %TSO FSHELP REVIEW+
                              %TSO HEL REVIEW+
 
                           )INIT
                           )PROC
                          ^  )END
                                  "             "     {)ATTR DEFAULT(%+_)
                                                           % TYPE(TEXT) INTENS(H
IGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(H
IGH) COLOR(YELLOW)                                           + TYPE(TEXT) INTENS
(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INT
ENS(HIGH) CAPS(OFF)                                            # AREA(SCRL) EXTE
ND(ON)                                                     )BODY EXPAND(\\)
                                                           %TUTORIAL+-\-\-[REVIE
W Gene  ral Information+-\-\-%TUTORIAL                       %OPTION  ===>_ZCMD
                                                            ++
                                                             #SCRLAREA ---------
---------------------  -----------------------------------#    )AREA SCRLAREA
                                                               +
                                                               +The[REVIEW+comma
nd allows a data set or UNIX entity   to be examined at a        +3270 TSO termi
nal in full screen mode.  Both disk and tape files may be        +REVIEWed.  Loa
d module members with a residence mode of ANY are shown          +in high intens
ity or green in the member list.  SCLM-managed memb  ers           +are flagged
with an equals ('=') sign in the member list.  When looking        +at file data
, a 'K' may be shown in the "ruler" heading line to denote         +the first an
d last, or only, column(s) of VSAM record keys.  On color            +terminals
the portion of the "ruler" line corresponding to record keys         +is shown i
n red.  If the record format indicates printer carriage              +control ch
aracters then an 'A' or an 'M' as appropriate may be shown in        +column 1 o
f   the "ruler" heading line.                                          +
                                                                       [REVIEW+c
an format records according to Assembler data structure                +source c
ode supplied by   the user. [REVIEW+can also format system               +relate
d data such as SMF records, EREP data, VTOC entries, tape                +labels
 and load module structure and identification data. [REVIEW+             +can fo
rmat the directories of ZIP fil  es created by PKZIP, Info-ZIP,            +WinZ
IP, etc.                                                                   +
                                                                           [REVI
EW+can display the history of program objects   residing in PDSE             +da
ta sets or UNIX files, including compilation and program bind                +ti
mestamps.                                                                    +
                                                             +                 [
REVIEW+can display pictures in 1-bit (black-and-white), 4-b  it
 +(16 colors) and 8-bit (256 colors) single-plane ".PCX" (ZSoft
 +Paintbrush) files on a terminal with 3270 graphics capabilities.
 +
   [REVIEW+can process a single data set or a pre-allocated file
   +concatenation.  Partitioned files can be sequentialized,
   +offloaded in PDSLOAD (IEBUPDTE-like) format, or searched for
   +speci  fic or picture-masked data.  Load modules can be offloaded
     +into a sequential format, and can be delinked into object decks.
     +Sequential offload files can be processed to restore members
     +into partitioned d  ata sets.
       +
       [REVIEW+can process the system PARMLIB concatenation.
       +
         [REVIEW+has three (3) different directory displays.  They are:
         +    1)%PDS+type - for a PDS, a data PDSE, and concatenated
         +       files of any sort of PDS and/or PDSE.
           +    2)%PDSE+type - for an unconcatenated program object PDSE.
           +    3)%UNIX+type - for UNIX directories and files in
           +       hierarchical file structures.
             +
             [REVIEW+can process UNIX files such as HFS (Hierarchical File Syste
m)           +files.
               +
               [REVIEW+allows access to, and the saving of, data by data content
,              +data beyond I/O errors and end-of-file markers, and data from
               +del  eted members of a PDS.
                 +
                 [REVIEW+can convert ASCII data to EBCDIC.
                 +
                   [REVIEW+can be invoked recursively by using the TSO subcomman
d.                 +Swapping between parallel sessions allows access to any nest
ed                 +review session without requir  ing the termination of any ot
her                  +review session.
                     +
                     )INIT                                      G
                       )PROC
                       )END
                        {     "             "     0)ATTR DEFAULT(%+_)
                                                       % TYPE(TEXT) INTENS(HIGH)
 COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH)
 COLOR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW
)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HI
GH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HI
GH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(
HIGH) CAPS(OFF)                                            # TYPE(AB)    FORMAT(
MIX)                                                       " TYPE(ABSL) GE(ON)
                                                       )ABC DESC('Help') MNEM(1)
                                                         PDC PDCTEXT('REVIEW TSO
 full-screen help')                                       ACTION RUN(TSO) PARM('
HEL REVIEW')                                             PDC PDCTEXT('About...')
                                                            ACTION RUN(TUTOR) PA
RM('REVLOGO')                                              PDC PDCTEXT('REVIEW F
AQ')                                                        ACTION RUN(TUTOR) PA
RM('REVFAQ')                                                 )ABCINIT
                                                             .ZVARS=HELP
                                                             )BODY EXPAND(\\)
                                                               \ \# Help
                                                               %TUTORIAL+-\-\-[R
EVIEW Command Processor+-\-\-%TUTORIAL                         %OPTION  ===>_ZCM
D                                                               +%
 ---------------------------------------------                   %
 |                  REVIEW                   |                   %
 ---------------------------------------------                   +
                                                                     [REVIEW+all
ows you to display MVS and Unix files.
                                                                      Members of
 partitioned   data sets, sequential data sets, VSAM data sets,         and Unix
 files can be displayed, and can be scrolled forward, backward,         left, or
 right.
                                                                        The foll
owing topics are presented in sequence, or may be selected by number:    %1+- Ty
pes of data sets               %7+- Display modes (HEX/ASCII/SMF/EREP)   %2+- In
voking[REVIEW+                 %8+- Global   subcommands                   %3+-
Directory display list           %9+- Browse subcommands                   %4+-
Display screen format           %10+- ISPF services (Browse/Edit/View)     %5+-
Scrolling data                  %11+- TSO commands       +                   %6+
-[REVIEW+profile                  %12+- Ending a[REVIEW  +session
                                                                              Th
e following topics will be presented only if selected by number:              %1
3+- General[REVIEW+information      %14+- Detailed[REVIEW+information          )
INIT                                                                           &
ZHTOP = REVHB00                                                                )
PROC
 &ZSE  L = TRANS(&ZCMD  1,REVHB01   2,REVHB02   3,REVHB03   4,REVHB04
                        5,REVHB05   6,REVHB06   7,REVHB07   8,REVHB08
                        9,REVHB09  10,REVHB10  11,REVHB11  12,REVHB12
                         13,*REVHBGN 14,*REVHBDT
                            *,'?')
   )END
    {     "             "      )ATTR DEFAULT(%+_)
                                   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(O
N)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                     + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(
ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LE
FT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LE
FT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                                   )BODY EXPAND(\\)
                                   %TUTORIAL+-\-\-[REVIEW Types of Datasets+-\-\
-%TUTORIAL                         %OPTION  ===>_ZCMD
                                    +
 
                                      [REVIEW+can display sequential, partiti  o
ned, partitioned-extended,               VSAM, and Unix HFS (Hierarchical File S
ystem) files that have the               the following characteristics.
 
                                               %Record Formats+- fixed, variable
, or undefined                                                 - blocked or unbl
ocked                                                          - standard or spa
nned                                                             - with or witho
ut printer control characters
                                                 %Data Lengths+  - 1 to 65535 by
tes of data, inclusive
                                             )INIT
                                             )PROC
                                             )END
                                                    "             "     &)ATTR D
EFAULT(%+_)                                                                  % T
YPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ T
YPE(TEXT) INTENS(HIGH) COLOR(YELLOW)                                           +
 TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _
 TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^
 TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                |
 TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
 # AREA(SCRL) EXTEND(ON)                                                     )BO
DY EXPAND(\\)                                                                %TU
TORIAL+-\-\-[REVIEW Invo  king The Command Processor+-\-\-%TUTORIAL            %
OPTION  ===>_ZCMD                                                             +#
SCRLAREA -----------------------------------------------------------------#    )
AREA SCRLAREA
 +
 +       [REVIEW+ 'dsname'  UNIT('unit')  VOLUME('volume')  QUICK  DATA
 +                       TOP('rel-addr')  SUBSYS('subs  ys')  XISPMODE
   +    or
   +       [REVIEW+ 'filename'  FILE  DATA  TOP('rel-addr')  XISPMODE
   +    or
     +       [REVIEW+ 'pathname'
     +
     +%Required+- 'dsname'
       +    or      'filename'  FILE
       +    or      'pathname'  which must begin with a slash
       +    or      no operands for "point and shoot".
       +
         +%Defaults+- TOP(0)
         +            UNIT(SYSALLDA) when VOLUME is specified.
         +
           +%Aliases +- REV, REVVSAM
           +
           +
             +
             + %Operands+-
             +
               + %'dsname'+or%'dsname(member)'+- The data set to be examined.
               + %'filename'+- The DDNAME allocated to the data set to be examin
ed.            + %'pathname'+- The path name of an UNIX directory.             +
                 +
                   +  If the first operand begins with a slash ('/') then it is
deemed to          +  specify an UNIX directory path, and no other operands are
allowed.           +  A specific UNIX file may be specified to directly access t
he data              +  contained in the file.
                     +
                     +  If the first operand does not begin with a slash then it
 is assumed          +  to   be a DSNAME unless it is followed by the keyword 'F
ILE'.                  +
                       +  Specifying the quoted dsname of 'FORMAT4.DSCB' and a V
OLUME                  +  requests that th  e VTOC of that volume be REVIEWed.
                         +
                         +  Specifying the file name of PARMLIB when there is no
 PARMLIB                 +  allocated on a OS/390 1.2 or   later system requests
 that the                  +  logical PARMLIB service be used to[REVIEW+the syst
em PARMLIB                 +  concatenation.
                           +
                             +  If no operands are supplied then[REVIEW+reads th
e screen image               +  and extracts the data set name from the part of
the screen                   +  containing the cursor.  This works in both fulls
creen a  nd line               +  modes, but not under Session Manager which upd
ates the screen                +  before[REVIEW+receives control.  If a data set
 name is not found             +  then normal TSO prompting is commenced except
for a recursive                  + [REVIEW+session where a message is displayed.
                                 +
                                 +  A member name is NOT considered part of the
data set name for                +  "  point and shoot" purposes.
                                   +
                                   +  A UNIX path name cannot be processed by "p
oint and shoot".                   +
                                     %FILE     +- This keyword indicates that th
e first operand is                   +            a FILENAME, not a DSNAME.  Thi
s is useful for looking              +            at a temporary da  ta set or a
t concatenated libraries.              +            A member name may be specifi
ed in the first operand                +            after the DDNAME if the DDNA
ME is allocated to a                   +            PDS.  This allows you to ent
er   'REVIEW SYSPROC(X) F'               +            to look at member 'X' in w
hatever PDS is allocated to              +            DDNAME 'SYSPROC'.
                                         +
                 +                         +            Note that REVIEWing a co
ncatenated sequ  ential file may             +            cause unexpected behav
iour.                                        +
                                             +            The 'FILE' operand may
 be abbreviated to 'F'.                               "     &+
                                                             %VOLUME('volume')+-
 For uncataloged data sets, the volume serial.               +
                                                             +              'VOL
UME' may be abbreviated to 'V'.                                +
                                                               %UNIT('unit')+- F
or uncataloged data sets, the unit type.                       +            T  h
is operand is ignored if 'VOLUME' is not specified.              +            If
 'VOLUME' is specified the default unit is 'SYSALLDA'.           +            Fo
r data sets accessed via the catalog, the unit is                +            de
termined fro  m the catalog entry.                                 +
                                                                   +
'UNIT' may be abbreviated to 'U'.                                  +
                                                                     %TOP('rel-a
ddr')+- This specifies a relative address within the                 +
  data set to be considered as the logical top-of-data.              +
  'TOP' performs the same function as the   'NEWTOP'                   +
    subcommand before the initial display of data.  As with            +
    'NEWTOP', 'rel-addr' is a 1 to 6 hexadecimal digit                 +
    number interpreted as a TTR for disk data sets, or as                +
      a BLOCK IDENTIFIER for tape data sets.  When 0 is                  +
      specified or defaulted to, no special action is taken.             +
      This operand is ignored for VSAM and subsystem data sets.            +
                                                                           +
        'TOP' may be abbreviated to 'T'.                                   +
                                                                           %TTR(
'rel-ad  dr')+- Same as TOP('rel-addr').                                     +
                                                                             %SU
BSYS('subsys')+- For subsystem data sets, this specifies the 1-4             +
          character su  bsystem name.  The subsystem must be active            +
            and allow data set allocation for this to be successful.           +
            The subsystem data set name specified may include a                +
            member name in parenthese  s if appropriate.
 +            This operand is ignored if 'VOLUME' is specified.
 +
 +            'SUBSYS' may be abbreviated to 'S'.
   +
   %QUICK    +- This indicates that if an unquoted data set name was
   +            specified then the name was fully qualified apart f+ rom
     +            the prefix (ie. no trailing qualifier has to be   added).
       +            This saves a search of the catalog to look for trailing
       +            qualifiers which is otherwise performed unconditionally
       +            unless the 'VOLUME' operand was specified.  This operand
         +            is ignored if 'VOLUME' is specified.
         +
         +            The 'QUICK' operand may be abbreviated to 'Q'.
         +
           %DATA     +- This operand has several uses which, in general, mean
           +            that control data is displayed rather than interpreted.
           +            Specif  ically, this operand has seven (7) different
             +            functions depending upon the type of data set being
             +            REVIEWed.
             +
               +            1) For a VSAM component -
               +               'DATA' indicates that control interval informatio
n              +               and DB2 tablespace structure   is not to be inter
preted           +               and that physical blocks are to be shown as-is
without          +               extracting logical records or rows.
                 +
                   +            2) For a VSAM KSDS (Key-Sequenced Data Set) clus
ter -              +               'DATA' indicates that records are to be prese
nted in            +               RBA (Relative Byte Address) or physical order
 rather              +               than in key-sequence order.
                     +
                     +            3) For a partitioned data set -
                     +                 'DATA' indicates that the PDS directory i
s to be                +               REVIEWed as a sequential file, thereby pr
ecluding               +               access to the contents of members.
                       +
                         +            4) For other disk files with fixed length
records -                +               'DATA' indicates that direct access log
ic which can             +               speed up acces  s to different parts of
 the file will             +               not be used.  This logic is employed
by default when            +               RECFM=F, RECFM=FS, or RECFM=FBS unles
s 'DATA' is                +               specified.  It is also used   when RE
CFM=FB and the               +               VTOC indicates more than 256 tracks
 of data unless              +               'DATA' is specified.
                             +               (If this direct access logic is use
d and+  the file               +               does not use standard blocking, i
nco  rrect line                  +               numbers and/or I/O errors could
 possibly occur.                 +               The 'NEWTOP' subcommand (withou
t any operand)                   +               can be used from within[REVIEW+
to make[REVIEW+                           "     -+               start behaving
as if 'DATA' had been specified.)                +
                                                 +            5) For a SUBSYSTEM
 data set with a member included -               +                 'DATA' indica
tes that a sequential file will be                 +               allocated to
the specified member only and data from            +               other members
 will not be accessible.  Use the 'DATA'           +                 operand if
the subsystem data set has members but the           +               subsystem d
oes not support partitioned access.                  +               (Normally,
if 'DATA' was not specified then data from           +               the nominat
  ed member would initially be displayed,              +               but data
from other members could subsequently                  +               be displa
yed by using the 'MEMBER' subcommand.)                 +
                                                         +            6) For a Z
IP file 'DATA' indicates that the ZIP directory          +               will no
t be formatted, but that normal sequential read          +               and dis
play processing will take plac  e.  Only DASD              +               seque
ntial data sets and UNIX files are checked for             +               ZIP f
ormat by REVIEW.                                           +
                                                             +            7) For
 a PCX (Paintbrush) file 'DATA' indicates that               +               pic
ture data is not to be interpreted, but that normal          +               dat
a display processing will take place.  Without the             +               '
DATA' operand[REVIEW+would attempt to display the              +               p
icture image contained in 1-bit, 4-bit or 8-bit color          +               s
ingle-plane PCX file.  (The 'FORMAT OFF' subcommand            +
 can be used from within[REVIEW+to instruct[REVIEW+to            +
 discard the picture data and therefore no longer show           +
 the picture image.  A subsequent 'NEWTOP' subcommand            +
 could be   used to reactivate the image display.)  PCX            +
   files are recognised by data content when the first             +
   record is at least 80 bytes long.  The rendering of             +
   pictures is never atte  mpted when[REVIEW+is running as           +
     an ISPF application.                                            +
                                                                     +
  The 'DATA' operand may be abbreviated   to 'D'.                      +
                                                                       %XISPMODE
+- This specifies that[REVIEW+                                         +
    1) is not to act as an ISPF application and is ther+ efore           +
         to perform terminal I/O and subcommand proce  ssing               +
           natively; and                                                   +
        2) is not to determine terminal capabilities from ISPF             +
           variables but is to issue a Read Partition (Query)                +
             itself if appropriate.                                          +
                                                                             +
          This operand will only affect processing in an ISPF                +
            environment.                                                       +
                                                                               +
            The second function listed above relates to detecting              +
            the gr  aphics capabilities of the TSO terminal.  If you
 +            want[REVIEW+to render graphic images (pictures) in an
 +            ISPF environment then the XISPMODE operand is required
 +            so that[REVIEW+will   detect that the terminal can handle
   +            graphics.  Without this operand,[REVIEW+determines
   +            color, highlighting and graphics escape support from
   +            ISPF, does not perform terminal   I/O for a Query, and
     +            can therefore present non-graphic file data more rapidly.
     +
     +            The 'XISPMODE' operand may be abbreviated to   'X'.
       +
       )INIT
       )PROC                                                                  $
         )END
          {     "             "      )ATTR DEFAULT(%+_)
                                         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                           + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)
 SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) J
UST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) J
UST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF
)                                        )BODY EXPAND(\\)
                                         %TUTORIAL+-\-\-[REVIEW Directory Displa
ys+-\-\-%TUTORIAL                        %OPTION  ===>_ZCMD
                                          +
 
                                             [REVIEW+has three (3) different dir
ect  ory displays.
                                                The following can be selected by
 name:
                                                   %DATA    +- for a PDS, a data
 PDSE, and concatenated                                        files of any sort
 of PDS and/or PDSE.                               %OBJECT  +- for an unconcaten
ated program object PDSE.                            %UNIX    +- for UNIX direct
ories and files in                                               hierarchical fi
le structures.
                                                   )INIT
                                                   )PROC
                                                     &ZSEL = TRANS(&ZCMD  DATA,*
REVHP00  OBJECT,*REVHO00  UNIX,*REVHU00                        s            *,'?
')                                                   )END
                                                          "             "      )
ATTR DEFAULT(%#_)
   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
     $ TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)
     @ TYPE(TEXT) INTENS(HIGH) COLOR(RED) HILITE(USCORE)
     # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
     _ TYPE(INP  UT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
       | TYPE(INPUT) INTENS(HIGH) CAPS(OFF)
   )BODY EXPAND(\\)
     %TUTORIAL#-\-\-[REVIEW Display Screen Format#-\-\-%TUTORIAL
     %OPTION  ===>_ZCMD
    #
 
          The six areas of the[REVIEW#display screen are shown below.
          They are:%(1)#Title,%(2)#Line/Column numbers,%(3)#  Command,
           %(4)#Scroll amount,%(5)#Ruler,%(6)#Data fields.
 
                 .---------------------------------------------------------  ---
--.#               |
  |        %(1)#=> | %AD.HELP(REVIEW) - 37.05 ------------------- Line 1 Col 1 8
0#| <=%(2)#%(3)#=> | %Command ==>@                               %Scroll ==>@CSR
 #| <=%(4)  #%(5)#=> |[1       10        20        30        40        50
 60#|                |[+---+----+----+----+----+----+----+----+----+----+----+--
--+#|                |$*                    TSO HELP FOR 'REVIEW' RELEASE 37.5
 NO#| <=%(6)#        |$)F   Function -
     #|                |$  The REVIEW command allows a data set or UNIX entity t
o be #|                |$  a 3270 TSO terminal in full screen mode.  Both disk a
nd ta#|                |$  may be REVIEW  ed.  If a PDS without a member is spec
ified t#|                |$  member selection list is displayed.  Load module me
mbers w#|                |$  residence mode of ANY are shown in high intensity o
r green#|
                                                  (continued)
                   )INIT
                   )PROC
                     &ZCONT = REVHB04A
                     )END
                          "             "      )ATTR DEFAULT(%+_)
                                                   % TYPE(TEXT) INTENS(HIGH) COL
OR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COL
OR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)  C
OLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH)
CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH)
CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH
) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                   %TUTORIAL+-\-\-[REVIEW Displa
y Screen Format+-\-\-%TUTORIAL                     %OPTION  ===>_ZCMD
                                                    +
 
                                                        The six display screen a
reas shown on   the previous page are:
                                                          (1) -%Title+- identifi
es the name of the data set (and member).  If                   ISPF statistics
are present, the version/mod   level is displayed.
                                                            (2) -%Line/Column nu
mbers+- shows the data line and column numbers                    that are being
 displayed.
                                                              (3) -%Command+- wh
ere subcommands are entered.
                                                                (4) -%Scroll amo
unt+- where the scrolling amount is displayed.  You can               change the
 amount by overtyping the amount field.
                                                                (5) -%Rul  er+-
where the ruler header lines are displayed.
                                                                  (6) -%Data fie
lds+- where the data is displayed.  Each field extends to               the full
 width o  f the display.                                         )INIT
                                                                 )PROC
                                                                 )END
                                                                        "
      "     -)ATTR DEFAULT(%+_)
                 % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                   + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                   _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                   ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD
(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                 )BODY EXPAND(\\)
                 %TUTORIAL+-\-\-[REVIEW Scrolling+-\-\-%TUTORIAL
                 %OPTION  ===>_ZCMD
                  +
 
                     [REVIEW+allows you to scroll up and do  wn through the data
.  If the data is       too wide to fit on the screen, you can also scroll left
and right.
                        To scroll, enter one of the six scroll commands (U  P, D
OWN, LEFT, RIGHT,         TOP or BOTTOM).  Minus, plus, less than, and greater t
han signs are aliases     for UP, DOWN, LEFT, and RIGHT.
 
                            To change the number of lines or columns being scrol
led, change the             scroll amount field.
 
                            The following topics will be presented only if selec
ted by number:                 %1+- Scroll commands
                               %2+- Scroll amount
                           )INIT
                             )PROC
                               &ZSEL = TRANS(&ZCMD  1,*REVHB05A  2,*REVHB05B
                                                    *,n '?')
                               )END
                                    "             "     -)ATTR DEFAULT(%+_)
                                                             % TYPE(TEXT) INTENS
(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS
(HIGH) COLOR(YELLOW)                                           + TYPE(TEXT) INTE
NS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INT
ENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INT
ENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) I
NTENS(HIGH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                             %TUTORIAL+-\-\-[REV
IEW Scroll Commands+-\-\-%TUTORIAL                           %OPTION  ===>_ZCMD
                                                              +
 
                                                                  Use the scroll
 commands (or the defau  lt PF keys) to scroll:
                                                                     %UP    +(PF
7)  - toward the top of the data                                     %DOWN  +(PF
8)  - toward the bottom of the data                                    %LEFT  +(
PF10) - toward the first column of the data                            %RIGHT +(
PF11) - toward the last column of the data
                                                                        Usually,
 you can combine scrolling with other actions by entering a             command
and then pressing a scroll PF key (instead of the ENTER key).           Both the
 action and the scroll will process.
                                                                          If the
 amount in the scroll amount field is not valid when a scroll command     is ent
ered, an error message is displayed.  Either correct the scroll           amount
, o  r take an action other than scrolling.
                                                                         )INIT
                                                                         )PROC
                  n                                                        )END
 
"             "      )ATTR DEFAULT(%+_)
                         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                         [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                           + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                           _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(
RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(
RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                         )BODY EXPAND(\\)
                         %TUTORIAL+-\-\-[REVIEW Scroll Amount+-\-\-%TUTORIAL
                         %OPTION  ===>_ZCMD
                          +
 
                              The scroll amount is displayed on the   terminal s
creen, following the            command field.  You can change the scroll amount
 by typing over the             scroll amount with a new amount.
 
                                  Valid scroll amounts are:
 
                                   %PAGE+to scroll by one page.
 
                                     %HALF+to scroll by half a page.
 
                                       %nnnn+(any number from 1 to 9999) to scro
ll by the specified                          number of lines or columns.
 
                                       %CSR+ to   scroll to the position of the
cursor within the data (or by                  a page if the cursor is outside t
he data or is already                          positioned in the top, bottom, le
ft, or right margin).
                                           %DATA+to scroll by a page minus one l
ine when scrolling up or down                    or by a page minus one column w
hen scrolling left or right.           )INIT                                 Q
                                         )PROC
                                         )END
                                              "             "      )ATTR DEFAULT
(%+_)                                                                  % TYPE(TE
XT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TE
XT) INTENS(HIGH) COLOR(YELLOW)                                           + TYPE(
TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(
INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(
INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(
INP  UT) INTENS(HIGH) CAPS(OFF)                                        )BODY EXP
AND(\\)                                                                %TUTORIAL
+-\-\-[REVIEW Profile+-\-\-%TUTORIAL                                   %OPTION
===>_ZCMD                                                               +
 
                                                                            The[
REVIEW+profile is stored as membe  r%REVPROF+in the library                   al
located to ddname ISPPROF.  The DISPLAY and COLOR commands                    up
date the profile.  The[REVIEW+user profile contains the data display          co
lors, scrolling amount, and the 24 PF Key values   (XISPMODE).
                                                                             )IN
IT                                                                           )PR
OC                                                             %               )
END
    "             "      )ATTR DEFAULT(%+_)
                             % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                             [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                               + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                               _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) CO
LOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) CO
LOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                             )BODY EXPAND(\\)
                             %TUTORIAL+-\-\-[REVIEW Display Modes+-\-\-%TUTORIAL
                             %OPTION  ===>_ZCMD
                              +
 
                                  The subcommands listed below are used   to con
trol the settings of the            various modes and controls for the display.
 
                                    The following topics are presented in sequen
ce, or   may be selected by name:
                                       %HEX    +- to set HEX mode on/off and to
specify a hex display.                 %ASCII  +- to set ASCII mode on/off and t
o specify an ASCII di  splay.            %SMF    +- to set SMF mode on/off and t
o specify a formatted SMF display.       %EREP   +- to set EREP mode on/off and
to specify an formatted EREP display.    %FORMAT +- to format data based on the
data type in the DS or DC statement.
                                       )INIT
                                       )PROC
                                         &ZSEL = TR  ANS(&ZCMD  HEX,REVHB07A   A
SCII,REVHB07B     SMF,REVHB07C                                 EREP,REVHB07D  FO
RMAT,REVHB07E                                                   *,'?')
                                         )END
                                                "             "      )ATTR DEFAU
LT(%#_)                                                                  % TYPE(
TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(
TEXT) INTENS(HIGH) COLOR(YELLOW)                                           $ TYP
E(TEXT) INTENS(HIGH) COLOR(GREEN)                                          @ TYP
E(TEXT) INTENS(HIGH) COLOR(RED) HILITE(USCORE)                             # TYP
E(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYP
E(INP  UT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ T
YPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | T
YPE(INPUT) INTENS(HIGH) CAPS(OFF)                                        )BODY E
XPAND(++)                                                                  %TUTO
RIAL#-+-+-[REVIEW Hex Display Screen Format#-+-+-%TUTORIAL                 %OPTI
ON  ===>_ZCMD                                                             #
 
 
The six areas of the[REVIEW%Hex#display screen are shown below.
They are:%(1)#Title,%(2)#Line/Column numbers,%(3)#  Command,
 %(4)#Scroll amount,%(5)#Ruler,%(6)#Hex data fields.
 
       .---------------------------------------------------------  -----.#
         |                                                              |
 %(1)#=> | %AD.HELP(REVIEW) - 37.05 ------------------- Line 1 Col 1 80#| <=%(2)
#%(3)#=> | %Command ==>@                               %Scroll ==>@CSR #| <=%(4)
  #%(5)#=> |[ 1       5        10        15        20        25        30#|
           |[/\------/\--------/\--------/\--------/\--------/\--------/\#|
           |$5C4040404040404040404040404040404040404040E3E2D640C8C5D3D740#| <=%(
6)#        |$5D  C640C6A49583A389969540604040404040404040404040404040404040#|
             |$4040E3888540D9C5E5C9C5E640839694948195844081939396A6A2408140#|
             |$40408140F3F2F7F040E3E2D640A3859994899581934089954086A4939340#|
             |$40409481A840828  540D9C5E5C9C5E685844B4040C986408140D7C4E240A6#|
               |$404094859482859940A285938583A3899695409389A2A34089A2408489A2#|
               |$40409985A2898485958385409496848540968640C1D5E84081998540A288#|
 
 
         )INIT
         )PROC                                              #
           )END
                "             "     0)ATTR DEFAULT(%#_)
                                         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                           $ TYPE(TEXT) INTENS(HIGH) COLOR(GREEN
)                                          @ TYPE(TEXT) INTENS(HIGH) COLOR(RED)
HILITE(USCORE)                             # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)
 SKIP(ON)                                  _ TYPE(INP  UT) INTENS(HIGH) CAPS(ON)
 JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON)
 JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INPUT) INTENS(HIGH) CAPS(OFF
)                                        )BODY EXPAND(\\)
                                           %TUTORIAL#-\-\-[REVIEW ASCII Display
Screen Format#-\-\-%TUTORIAL               %OPTION  ===>_ZCMD
                                          #
 
                                                The six areas of the[REVIEW%ASCI
I#display screen are shown below.               They are:%(1)#Title,%(2)#Line/Co
lumn numbers,%(3)#  Command,                     %(4)#Scroll amount,%(5)#Ruler,%
(6)#ASCII data fields.
                                                       .------------------------
---------------------------------  -----.#               |
                                        |        %(1)#=> | %TRIDJK.README.TXT on
 WORK15 --------------- Line 1 Col 1 80#| <=%(2)#%(3)#=> | %Command ==>@
                       %Scroll ==>@CSR #| <=%(4)  #%(5)#=> |[1       10        2
0        30        40        50        60#|                |[+---+----+----+----
+----+----+----+----+----+----+----+----+#|                |$Vista TN3270 For Wi
ndows..------------------------....Vista #| <=%(6)#        |$s   a program desig
ned to emulate IBM..standard 3270 series te#|                |$(TCP) environment
..provided by a standard WINSOCK interface.#|                |$ by:....    Tom B
rennan..    523 N. Nora Ave...    West Covi#|                |$f you need supp
ort, enhancements, registration information,.#|                |$ress your opini
on of the product, please..send a note to:...#|                |$oftware.com....
or visit..   ..    www.tombrennansoftware.com#|
                                                         )INIT
                                                         )PROC
                                                         )END
                                                                "             "
    0)ATTR DEFAULT(%#_)
         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
         [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
           $ TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)
           @ TYPE(TEXT) INTENS(HIGH) COLOR(RED) HILITE(USCORE)
           # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
           _ TYPE(INP  UT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
             ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
             | TYPE(INPUT) INTENS(HIGH) CAPS(OFF)
         )BODY EXPAND(\\)
           %TUTORIAL#-\-\-[REVIEW SMF Display Screen Format#-\-\-%TUTORIAL
           %OPTION  ===>_ZCMD
          #
 
                The six areas of the[REVIEW%SMF#display screen are shown below.
                They are:%(1)#Title,%(2)#Line/Column numbers,%(3)#  Command,
                 %(4)#Scroll amount,%(5)#Ruler,%(6)#SMF formatted data fields.
 
                       .--------------------------------------------------------
-  -----.#               |
        |        %(1)#=> | %SYS1.MAN1 on MPSYSF ----------------------- Line 1 C
ol 1 80#| <=%(2)#%(3)#=> | %Command ==>@                               %Scroll =
=>@CSR #| <=%(4)  #%(5)#=> |[1       10        20        30        40        50
       60#|                |[+---+----+----+----+----+----+----+----+----+----+-
---+----+#|                |$ 64 08:56:40 04.022 A1VS RMFGAT   SYS1.RMFMON.DS2.D
ATA    B=#| <=%(6)#        |$ 6  4 08:56:40 04.022 A1VS IEESYSAS SYS1.MAN2.DATA
    VSAM B=#|                |$ 60 08:56:40 04.022 A1VS IEESYSAS SYS1.MAN2
           #|                |$ 42 08:56:40 04.022 A1VS IEESYSAS CLOSE Scroll ri
ght for mor#|                |$ 90 08:56:40 04  .022 A1VS SMF      subtype   6 S
WITCH SMF    #|                |$230 08:56:40 04.022 A1VS RDRH
             #|                |$ 30 08:56:40 04.022 A1VS RDRH     STC26082
        RDRH #|
                         )INIT
                         )PROC
                         )END
                                "             "     0)ATTR DEFAULT(}+_)
                                                         } TYPE(TEXT) INTENS(HIG
H) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIG
H) COLOR(YELLOW)                                           $ TYPE(TEXT) INTENS(H
IGH) COLOR(GREEN)                                          @ TYPE(TEXT) INTENS(H
IGH) COLOR(RED) HILITE(USCORE)                             + TYPE(TEXT) INTENS(L
OW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INP  UT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INPUT) INTEN
S(HIGH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                           }TUTORIAL+-\-\-[REVIE
W EREP Display Screen Format+-\-\-}TUTORIAL                }OPTION  ===>_ZCMD
                                                          +
 
                                                                The six areas of
 the[REVIEW}EREP+display screen are shown below.                They are:}(1)+Ti
tle,}(2)+Line/Column numbers,}(3)+  Command,                     }(4)+Scroll amo
unt,}(5)+Ruler,}(6)+EREP formatted data fields.
                                                                       .--------
-------------------------------------------------  -----.+               |
                                                        |        }(1)+=> | }SYS1
.A1.LOGREC on WLMDW1 ------------------ Line 1 Col 1 80+| <=}(2)+}(3)+=> | }Comm
and ==>@                               }Scroll ==>@CSR +| <=}(4)  +}(5)+=> |[1
     10        20        30        40        50        60+|                |[*DA
TE* TIME-OF-DAY RECTYP CPU-SERIAL# JOB-NAME IDNO VOLUME/L+|                |$XTN
T:0380.00-03CF.0E  LAST-REC:0380.01.03  90%:03C7.0E  DEVT+| <=}(6)+        |$04
 .022 10:18:57.58 LOGREC 0205F1-9672 3-MINUTE CURRENCY RECO+|                |$0
4.022 00:05:46.19 MDR    0205F1-9672           345 LM2548  +|                |$0
4.022 00:18:00.97 MDR    0205F1-9672           343 LM6668  +|                |$0
4.022 00:18:01  .08 MDR    0205F1-9672           344 LM6530  +|                |
$04.022 00:18:45.93 MDR    0205F1-9672           350 LM6458  +|                |
$04.022 00:22:16.85 MDR    0205F1-9672           341 LM2268  +|
                                                                         )INIT
                                                                         )PROC
                                                                         )END
 
"             "      )ATTR DEFAULT(%+_)
                         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                         [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                           + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                           _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(
RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(
RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                             # AREA(SCRL) EXTEND(ON)
                         )BODY EXPAND(\\)
                         %TUTORIAL+-\-\-[REVIEW FORM  AT Subcommand+-\-\-%TUTORI
AL                         %OPTION  ===>_ZCMD
                          ++
                           #SCRLAREA ------------------------------  -----------
------------------------#    )AREA SCRLAREA
 
 
                               +  The%FORMAT+subcommand causes[REVIEW+to format
file data on the               +  screen according to the data structure and typ
es specified in                +  Assembler DS and/or DC statements.  The "ruler
" heading line ab  ove           +  the data is used to show the names of the vi
sible data items, and            +  where room permits the starting column numbe
r of the item is shown           +  directly above the data item name.
                                   +
                                   +  The format of the actual file data remains
 unchanged when HEX ON             +  is active.  When HEX OFF is current, each
data item is formatted             +  according   to the data type in the DS or
DC statement.  The main data         +  types are character, hexadecimal, decima
l, and binary integer.               +
                                     +  The Assembler statemen  ts are read from
 the partitioned data set(s)           +  allocated to the REVFMTS file.  REVFMT
S must be allocated before it          +  can be used by this subcommand.  The T
SO subcommand may be useful in         +  helping to perform this allocation   f
rom within[REVIEW.+ The FMTVAR           +  subcommand can be used to override t
he data type of a specific data          +  item or variable in a dynamic fashio
n.                                       +
                                           +  Note that for variable-length reco
rds, the record descriptor word            +  (RDW) is assumed to be present in
the data structure source, even            +  though the contents of the RDW are
 not shown by[REVIEW.+     +                 +
                                               +  When using this subcommand (as
 opposed to the SMF subcommand) to             +  format SMF records, the follow
ing members of SYS1.MACLIB may be              +  useful, especially after a FIN
DSMF ALL subcommand has been issued:             +     IFASMFR  - type 0
           IAZSMF49 - type 49                    +     IFASMFR1 - type 7
           IFASMFR5 - type 50                    +     IFGSMF14 - type 14 and ty
pe 15      IAZSMF45 - type 52                    +       IGGSMF17 - type 17
             IAZSMF45 - type 53                    +     IFASMFR2 - type 20
             IAZSMF45 - type 54                    +     IGESMF21 - type 21
             IAZSMF45 - type 55                    +     IOSDSMFR - ty  pe 22
               IAZSMF45 - type 56                    +     IAZSMF24 - type 24
               IAZSMF45 - type 57                    +     IAZSMF25 - type 25
               IAZSMF45 - type 58                    +     IAZSMF26 - type 26
                 IDASMF62 - type 62                    +     IFASMFI6 - type 36
                 IGGSMF63 - type 63                    +     IFASMFR4 - type 40
                 IDASMF64 - type 64                    +     IAZSMF43 - type 43
                 IGG  SMF67 - type 67                    +     IAZSMF45 - type 4
5                  IGGSMF68 - type 68                    +     IAZSMF47 - type 4
7                  IGGSMF69 - type 69                    +     IAZSMF48 - type 4
8                  IFASMFR9 - type   80                    +
                                                           +  When[REVIEWing+a V
TOC, the VTOC entries can be formatted by                  +  'FORMAT ON' even w
hen no REVFMTS file allocation is present.                   +
                                                             +  %Syntax+-
                                                             +     FORMAT  'fmtn
ame' / ON / OFF                                              +
                                                               +  %Alias+-
                                                               +     FMT
                                                               +
                                                                 )INIT
                                                                 )PROC
                                                                 &ZCONT = REVHB0
7F             d                                                   )END
                                                                    {     "
        "     0)ATTR DEFAULT(%#_)
                   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                     $ TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)
                     @ TYPE(TEXT) INTENS(HIGH) COLOR(RED) HILITE(USCORE)
                     # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                     _ TYPE(INP  UT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
 PAD(_)                | TYPE(INPUT) INTENS(HIGH) CAPS(OFF)
                   )BODY EXPAND(\\)
                     %TUTORIAL#-\-\-[REVIEW VTOC Formatted Display Screen Format
#-\-\-%TUTORIAL      %OPTION  ===>_ZCMD
                    #
 
                          The six areas of the[REVIEW%VTOC#formatted display scr
een are shown below.      They are:%(1)#Title,%(2)#Line/Column numbers,%(3)#  Co
mmand,                     %(4)#Scroll amount,%(5)#Ruler,%(6)#VTOC data fields.
 
                                 .----------------------------------------------
-----------  -----.#               |
                  |        %(1)#=> | %FORMAT4.DSCB on MPIPLF -------------------
- Line 1 Col 1 80#| <=%(2)#%(3)#=> | %Command ==>@
 %Scroll ==>@CSR #| <=%(4)  #%(5)#=> |[1
    45       46    #|                |[DS1DSNAM
    DS1FMTID DS1DSS#|                |$.........................................
... F4       ......#| <=%(6)#        |$..  .....................................
..... F5       ......#|                |$SYS1.VTOCIX.MPIPLF
      F1       MPIPLF#|                |$NETVIEW.CNMLINK
      F1       MPIPLF#|                |$SYS1.PARMLIB
        F1       MPIPLF#|                |$TCPIP.SEZADES
        F1       MPIPLF#|                |$TCPIP.SEZAXLD1
        F1       MPIPLF#|
                                   )INIT
                                   )PROC
                                   )END
                                          "             "      )ATTR DEFAULT(%+_
)                                                                  % TYPE(TEXT)
INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT)
INTENS(HIGH) COLOR(YELLOW)                                           + TYPE(TEXT
) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPU
T) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPU
T) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP
 UT) INTENS(HIGH) CAPS(OFF)                                            ! AREA(SC
RL) EXTEND(ON)                                                     )BODY EXPAND(
\\)                                                                %TUTORIAL+-\-
\-[REVIEW Glob  al Subcommands+-\-\-%TUTORIAL                        %OPTION  ==
=>_ZCMD                                                             ++
                                                                     !SCRLAREA -
-----------------------------  -----------------------------------!    )AREA SCR
LAREA                                                                  +
                                                                       +  These
subcommands are available in all display mod  es of[REVIEW:+             +
                                                                         %  HELP
    +- Request HELP about[REVIEW+and/or its subcommands.                 %  KEYS
    +- Display current Program Function Key values.                        %  ?
      +- Display the release of[REVIEW+that is in use.                     %  TS
O     +- Issue a TSO command.                                              %  RE
CALL  +- Recall previously typed-in commands for optional                    +
           editing and reissuing.                                            %
RETRIEVE+- Same as 'RECALL'.                                                 %
SWAP    +- List or transfer control between parallel sessions.               %
UP      +  - Scroll backwards a specified number of lines or records.          +
             If no operand is specified, the 'scroll' value is used.           +
             This is displayed in the upper right corner.                      +
             Note that s  crolling up to a previous volume or data
 +             set cannot be performed.
 %  DOWN    +- Scroll forwards a specified number of lines or records.
 +             If no operand is specifi  ed, the 'scroll' value is used.
   +             This is displayed in the upper right corner.
   %  TOP     +- Scroll up to the first line or record (on this volume).
   %  BOTTOM  +- Scroll down to the last line or recor  d.
     %  BOT     +- Same as 'BOTTOM'.
     %  END     +- END the command.
     %  CANCEL  +- Same as 'END' but user profile changes are not sav+ ed.
       %  CAN     +- Same as 'CANCEL'.
         %  EXIT    +- Terminate the whole[REVIEW+session.
         %  RETURN  +- Same as 'EXIT'.
         +
  9        )INIT
           )PROC
           )END
            {     "             "      )ATTR DEFAULT(%+_)
                                           % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE
) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLO
W)                                           + TYPE(TEXT) INTENS(LOW)  COLOR(TUR
Q) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON)
 JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON)
 JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(O
FF)                                        )BODY EXPAND(\\)
                                           %TUTORIAL+-\-\-[REVIEW ISPF Services+
-\-\-%TUTORIAL                             %OPTION  ===>_ZCMD
                                            +
 
                                                The%EDIT, BROWSE,+and%VIEW+subco
mmand  s request ISPF services for the            data set or member currently b
eing[REVIEWed.+ These subcommands are only        valid when the current data se
t is an MVS DASD data set.  The ISPF              request will only succeed in a
n ISPF environment.
                                                 )INIT
                                                 )PROC
                                   %               )END
                                                        "             "     })AT
TR DEFAULT(%+_)
 % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
   + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
   _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
   ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
   | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
 )BODY EXPAND(\\)
 %TUTORIAL+-\-\-[REVIEW TSO Commands+-\-\-%TUTORIAL
 %OPTION  ===>_ZCMD
  +
 
      The%SUBMIT+subcommand will submit the   data set or member currently
        being[REVIEWed.+ TSO SUBMIT is invoked.  The data set must be
        sequential or partitioned, and have fixed length 80-byte records.
 
 
          The%TSO+subcommand specifies a TSO command processor to be invoked
          from the[REVIEW+processor.  Commands generating an implicit EXE  C suc
h           as SYSPROC member names and commands immediately prefixed by a perce
nt          sign are supported.
 
           )INIT
           )PROC
           )END
                "             "      )ATTR DEFAULT(%+_)
                                         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                           + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)
 SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) J
UST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) J
UST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF
)                                        )BODY EXPAND(\\)
                                         %TUTORIAL+-\-\-[REVIEW Termination+-\-\
-%TUTORIAL                               %OPTION  ===>_ZCMD
                                          +
 
                                              The%END+subcommand terminates the[
REV  IEW+command, or, if in member              selection mode, returns to the m
ember selection list.  The member               selection list may be bypassed w
ith the EXIT subcommand.
                                                  The%EXIT+subcommand terminates
 the[REVIEW+command, bypassing the                member selection list.
 
                                                    The%CANCEL+subcommand perfor
ms the same processing as the END subcommand        without saving the[REVIEW+us
er profile to disk.  The[REVIEW+user                profile (which contains data
 display colors, scrolling amount and 24 PF           Key values) is normally on
ly rewritten to disk at the END of a[REVIEW+          session if it has been cha
nged during that session.  If a member list has       not been displayed in a se
ssion then the[REVIEW+session is terminated           without s  aving the user
profile.  If a member list has been shown it is         reshown but the user pro
file is no longer considered to have been               altered, even though the
 profile "in-core" still has the changes applied        to it.  Changing the p
rofile at this stage and exiting will cause all           accumulated profile ch
anges for the[REVIEW+session to be saved to disk          unless another CANCEL
is issued.                                             )INIT
             Q                                           )PROC
                                                         )END
                                                              "             "
   )ATTR DEFAULT(%+_)
       % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
       [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
         + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
         _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
         ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
         | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
       )BODY EXPAND(\\)
       %TUTORIAL+-\-\-[REVEDIT Detailed Information+-\-\-%TUTORIAL
       %OPTION  ===>_ZCMD
        +
 
            Detailed information for the[REVEDIT+  option of[REVIEW+is contained
              in the TSO HELP member[REVEDIT.+ This member resides in the SYSHEL
P             concatenation.   Enter one of the following commands to view the H
ELP           member in 3270 full screen mode.
 
                  %TSO FSHELP REVEDIT+
                  %TSO HEL REVEDIT+
 
               )INIT
               )PROC
              ^  )END
                      "             "     0)ATTR DEFAULT(%+_)
                                               % TYPE(TEXT) INTENS(HIGH) COLOR(W
HITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(Y
ELLOW)                                           + TYPE(TEXT) INTENS(LOW)  COLOR
(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS
(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS
(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CA
PS(OFF)                                            # TYPE(AB)    FORMAT(MIX)
                                                   " TYPE(ABSL) GE(ON)
                                               )ABC DESC('Help') MNEM(1)
                                                 PDC PDCTEXT('REVEDIT TSO full-s
creen help')                                      ACTION RUN(TSO) PARM('HEL REVE
DIT')                                            PDC PDCTEXT('About...')
                                                    ACTION RUN(TUTOR) PARM('REVL
OGO')                                              PDC PDCTEXT('REVIEW FAQ')
                                                    ACTION RUN(TUTOR) PARM('REVF
AQ')                                                 )ABCINIT
                                                     .ZVARS=HELP
                                                     )BODY EXPAND(\\)
                                                       \ \# Help
                                                       %TUTORIAL+-\-\-[REVEDIT C
omponent of REVIEW+-\-\-%TUTORIAL                      %OPTION  ===>_ZCMD
                                                        +%               -------
--------------------------------------                   %               |
            REVEDIT                  |                   %               -------
--------------------------------------                   +
                                                              The[REVEDIT+compon
ent of[REVIEW+allows you to create and change                 MVS files.
 
                                                                Members of parti
tioned data sets and sequential data sets can be                edited, and can
be scrolled forward, backward, left, or right.
                                                                The following to
pics are presented in sequence, or may be selected by number:    %1+- Types of d
ata sets               %6+- Global subcommands                   %2+- Invoking[R
EVEDIT+                %7+- Edit p  rimary subcommands             %3+- Director
y display list           %8+- Edit line subcommands                %4+- Display
screen format            %9+- TSO commands                         %5+- Scrollin
g data                  %10+- Ending a[REVEDIT+se+ ssion
 
                                                                      The follow
ing topics will be presented only if selected by number:              %11+- Deta
iled[REVEDIT+information                                               )INIT
                                                                       &ZHTOP =
REVHE00                                                                )PROC
                                                                         &ZSE  L
 = TRANS(&ZCMD  1,REVHE01   2,REVHE02   3,REVHE03   4,REVHE04
                5,REVHE05   6,REVHE06   7,REVHE07   8,REVHE08
                9,REVHE09  10,REVHE10
                 11,*REVHEDT
                    *,'?')                                                 )END
                                                                            {
  "             "     })ATTR DEFAULT(%+_)
                           % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                           [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                             + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                             _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLO
R(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLO
R(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                           )BODY EXPAND(\\)
                           %TUTORIAL+-\-\-[REVEDIT Types of Datasets+-\-\-%TUTOR
IAL                        %OPTION  ===>_ZCMD
                            +
 
                              [REVEDIT+can edit sequential, partition  ed, and p
artitioned-extended              files that have the following characteristics.
 
 
                                       %Record Formats+- fixed or variable
                                                       - blocked or unblocked
                                                       - with or without printer
 control characters
                                         %Data Lengths+  - 1 to 32760 bytes of d
ata, inclusive
                                     )INIT
                                     )PROC
                                     )END
                                          "             "      )ATTR DEFAULT(%+_
)                                                                  % TYPE(TEXT)
INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT)
INTENS(HIGH) COLOR(YELLOW)                                           + TYPE(TEXT
) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPU
T) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPU
T) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP
 UT) INTENS(HIGH) CAPS(OFF)                                        )BODY EXPAND(
\\)                                                                %TUTORIAL+-\-
\-[REVEDIT Invocation+-\-\-%TUTORIAL                               %OPTION  ===>
_ZCMD                                                               +
 
                                                                      [REVEDIT+i
s a fullscreen editor and a c  omponent of[REVIEW.+                     [REVEDIT
+is not a TSO command, but the[REVEDIT+HELP member will be               accesse
d when HELP is requested in a non-ISPF environment.
                                                                          [REVED
IT+allows the editing of MVS data sets residing on direct                  acces
s storage devices (DASD) which may contain records which have              a fix
ed-length or variable-length format.  Currently only non-VS  AM              is
supported.
                                                                             Und
er MVS/ESA and later (including OS/390 and z/OS) data being                    e
dited is held in a data space which can grow with the data up to               t
wo (2) gigabytes in size subject to installation limits implemented            e
ither by design (eg. system exits) or circumstance (eg. insufficient           a
uxiliary   storage to allow processing to continue).
 
  Syntax -
       %UPDATE+
      or, if not in an ISPF environment
         %EDIT+
 )INIT                                 Q
   )PROC
   )END
        "             "      )ATTR DEFAULT(%+_)
                                 % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                   + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON
)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT
) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT
) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                                 )BODY EXPAND(\\)
                                 %TUTORIAL+-\-\-[REVIEW Directory Display Inform
ation+-\-\-%TUTORIAL             %OPTION  ===>_ZCMD
                                  ++
                                   %               -----------------------------
----------------                   %               |               PDS/PDSE
                 |                   %               |       Directory Display I
nformation       |                   %               ---------------------------
------------------                   +
                                          The following topics are presented in
sequence or may be requested              by number:
                                            %1+- Accessing and updating members
                                              %2+- Reading or writing member con
tents to or from a file                       %3+-[REVIEW+directory display cont
rol                                           %4+- Sorting directory entries
                                                %5+- Searching members
                                                %6+-[REVIEW+session control
                                                %7+-[REVIEW+member selection act
ion codes
                                                The following topics will be pre
sented only if selected by number:                %8+- General[REVIEW+informatio
n                                            )INIT
                                               )PROC
                                                 &ZSEL = TRANS(&ZCMD  1,REVHP01
  2,REVHP02   3,REVHP03   4,REVHP04                                   5,REVHP05
  6,RQ EVHP06   7,REVHP07   8,*REVHBGN                                  *,'?')
                                                 )END
                                                      "             "      )ATTR
 DEFAULT(%#_)                                                                  %
 TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [
 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
 $ TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)
 [ TYPE(TEXT) INTENS(HIGH) COLOR(RED)
 ] TYPE(TEXT) INTENS(HIGH) COLOR(BLUE)
 @ TYPE(TEX  T) INTENS(HIGH) COLOR(RED) HILITE(USCORE)
   # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
   _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
   ^ TYPE(INPUT) INTENS(HI  GH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
     | TYPE(INPUT) INTENS(HIGH) CAPS(OFF)
 )BODY EXPAND(\\)
 %TUTORIAL#-\-\-[REVEDIT Display Screen F  ormat#-\-\-%TUTORIAL
   %OPTION  ===>_ZCMD
  #
 
        The six areas of the[REVEDIT#display screen are shown below.
        They are:%(1)#Title,%(2)#Line/Column numbers,%(3)#Command,
       %(4)#Scroll amount,%(5)#Line command fields,%(6)#Data fields.
 
               .--------------------------------------------------------------.#
               |                                                              |
         % (1)#=>|%REVEDIT  AD.HELP(REVEDIT) - 01.01        Columns 00001 00072#
| <=%(2)#% (3)#=>|%Command ===>@                              %Scroll ==>@CSR  #
| <=%(4)#        |[******]***************************** Top of Data ***********#
|                |$00  0001 *                    TSO HELP FOR 'REVEDIT' RELEASE
3#|                |$000002 )F Function -
 #|                |$000003   REVEDIT is a component of REVIEW which is a fullsc
r#|        % (5)#=>|$000004   REVEDI  T is not a TSO command, but this HELP memb
er #| <=%(6)#        |$000005   when HELP is requested in a non-ISPF environment
.  #|                |$000006
   #|                |$000007   REVEDIT allows the   editing of MVS data sets re
sidin#|                |$000008   access storage devices (DASD) which may contai
n rec#|
                                              (continued)
                 )INIT
                 )PROC
                 &ZCONT = REVHE04A
 +                 )END
                      {     "             "      )ATTR DEFAULT(%+_)
                                                     % TYPE(TEXT) INTENS(HIGH) C
OLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) C
OLOR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)
 COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HI
GH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                     %TUTORIAL+-\-\-[REVEDIT Dis
play Screen Format+-\-\-%TUTORIAL                    %OPTION  ===>_ZCMD
                                                      +
 
                                                          The six display screen
 areas shown on   the previous page are:
                                                            (1) -%Title+- identi
fies the name of the data set (and member).  If                   ISPF statistic
s are present, the version/mod   level is displayed.
                                                              (2) -%Line/Column
numbers+- shows the data line and column numbers                    that are bei
ng displayed.
                                                                (3) -%Command+-
where subcommands are entered.
                                                                  (4) -%Scroll a
mount+- where the scrolling amount is displayed.  You can               change t
he amount by overtyping the amount field.
                                                                  (5) -%Lin  e c
ommand fields+- where line commands are entered.
                                                                    (6) -%Data f
ields+- where the data is displayed.  Each field extends to               the fu
ll width o  f the display.                                         )INIT
                                                                   )PROC
                                                                   )END
                                                                          "
        "     -)ATTR DEFAULT(%+_)
                   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                     + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                     _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                     ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) P
AD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                   )BODY EXPAND(\\)
                   %TUTORIAL+-\-\-[REVEDIT Scrolling+-\-\-%TUTORIAL
                   %OPTION  ===>_ZCMD
                    +
 
                       [REVEDIT+allows you to scroll up and d  own through the d
ata. If the data is       too wide to fit on the screen, you can also scroll lef
t and right.
                          To scroll, enter one of the six scroll commands (U  P,
 DOWN, LEFT, RIGHT,         TOP or BOTTOM).  Minus, plus, less than, and greater
 than signs are aliases     for UP, DOWN, LEFT, and RIGHT.
 
                              To change the number of lines or columns being scr
olled, change the             scroll amount field.
 
                              The following topics will be presented only if sel
ected by number:                 %1+- Scroll commands
                                 %2+- Scroll amount
                             )INIT
                               )PROC
                                 &ZSEL = TRANS(&ZCMD  1,*REVHE05A  2,*REVHE05B
                                                      *,n '?')
                                 )END
                                      "             "     -)ATTR DEFAULT(%+_)
                                                               % TYPE(TEXT) INTE
NS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTE
NS(HIGH) COLOR(YELLOW)                                           + TYPE(TEXT) IN
TENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) I
NTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) I
NTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT)
 INTENS(HIGH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                               %TUTORIAL+-\-\-[R
EVEDIT Scroll Commands+-\-\-%TUTORIAL                          %OPTION  ===>_ZCM
D                                                               +
 
                                                                    Use the scro
ll commands (or the defau  lt PF keys) to scroll:
                                                                       %UP    +(
PF7)  - toward the top of the data                                     %DOWN  +(
PF8)  - toward the bottom of the data                                    %LEFT
+(PF10) - toward the first column of the data                            %RIGHT
+(PF11) - toward the last column of the data
                                                                          Usuall
y, you can combine scrolling with other actions by entering a             comman
d and then pressing a scroll PF key (instead of the ENTER key).           Both t
he action and the scroll will process.
                                                                            If t
he amount in the scroll amount field is not valid when a scroll command     is e
ntered, an error message is displayed.  Either correct the scroll           amou
nt, o  r take an action other than scrolling.
                                                                           )INIT
                                                                           )PROC
                    n                                                        )EN
D
  "             "      )ATTR DEFAULT(%+_)
                           % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                           [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                             + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                             _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLO
R(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLO
R(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                           )BODY EXPAND(\\)
                           %TUTORIAL+-\-\-[REVEDIT Scroll Amount+-\-\-%TUTORIAL
                           %OPTION  ===>_ZCMD
                            +
 
                                The scroll amount is displayed on the   terminal
 screen, following the            command field.  You can change the scroll amou
nt by typing over the             scroll amount with a new amount.
 
                                    Valid scroll amounts are:
 
                                     %PAGE+to scroll by one page.
 
                                       %HALF+to scroll by half a page.
 
                                         %nnnn+(any number from 1 to 9999) to sc
roll by the specified                          number of lines or columns.
 
                                         %CSR+ to   scroll to the position of th
e cursor within the data (or by                  a page if the cursor is outside
 the data or is already                          positioned in the top, bottom,
left, or right margin).
                                             %DATA+to scroll by a page minus one
 line when scrolling up or down                    or by a page minus one column
 when scrolling left or right.           )INIT                                 Q
                                           )PROC
                                           )END
                                                "             "      )ATTR DEFAU
LT(%+_)                                                                  % TYPE(
TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(
TEXT) INTENS(HIGH) COLOR(YELLOW)                                           + TYP
E(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYP
E(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYP
E(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYP
E(INP  UT) INTENS(HIGH) CAPS(OFF)                                            ! A
REA(SCRL) EXTEND(ON)                                                     )BODY E
XPAND(\\)                                                                %TUTORI
AL+-\-\-[REVIEW Glob  al Subcommands+-\-\-%TUTORIAL                        %OPTI
ON  ===>_ZCMD                                                             ++
                                                                           !SCRL
AREA ------------------------------  -----------------------------------!    )AR
EA SCRLAREA                                                                  +
                                                                             +
These subcommands are available in all display mod  es of[REVIEW:+             +
                                                                               %
  HELP    +- Request HELP about[REVEDIT.+                                      %
  KEYS    +- Display current Program Function Key values.
 %  ?       +- Display the release of[REVIEW+that is in use.
 %  TSO     +- Issue a TSO command.
 %  RECALL  +- Recall previously typed-in commands for optional
   +             editing and reissuing.
   %  RETRIEVE+- Same as 'RECALL'.
   %  SWAP    +- List or transfer control between parallel sessions.
   %  UP      +  - Scroll backwards a specified number of lines or records.
     +             If no operand is specified, the 'scroll' value is used.
     +             This is displayed in the upper right corner.
     +             Note that s  crolling up to a previous volume or data
       +             set cannot be performed.
       %  DOWN    +- Scroll forwards a specified number of lines or records.
       +             If no operand is specifi  ed, the 'scroll' value is used.
         +             This is displayed in the upper right corner.
         %  TOP     +- Scroll up to the first line or record (on this volume).
         %  BOTTOM  +- Scroll down to the last line or recor  d.
           %  BOT     +- Same as 'BOTTOM'.
           %  END     +- END the command.
           %  CANCEL  +- Same as 'END' but user profile changes are not sav+ ed.
             %  CAN     +- Same as 'CANCEL'.
               %  EXIT    +- Terminate the whole[REVIEW+session.
               %  RETURN  +- Same as 'EXIT'.
               +
        9        )INIT
                 )PROC
                 )END
                  {     "             "     })ATTR DEFAULT(%+_)
                                                 % TYPE(TEXT) INTENS(HIGH) COLOR
(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR
(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)  COL
OR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CA
PS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CA
PS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH)
CAPS(OFF)                                        )BODY EXPAND(\\)
                                                 %TUTORIAL+-\-\-[REVIEW TSO Comm
ands+-\-\-%TUTORIAL                              %OPTION  ===>_ZCMD
                                                  +
 
                                                      The%SUBMIT+subcommand will
 submit the   data set or member currently              being edited.  TSO SUBMI
T is invoked.  The data set must be                     sequential or partitione
d, and have fixed length 80-byte records.
 
                                                          The%TSO+subcommand spe
cifies a TSO command processor to be invoked              from the[REVIEW+proces
sor.  Commands generating an implicit EXE  C such           as SYSPROC member na
mes and commands immediately prefixed by a percent          sign are supported.
 
                                                           )INIT
                                                           )PROC
                                                           )END
                                                                "             "
     )ATTR DEFAULT(%+_)
         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
         [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
           + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
           _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
           ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
           | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
         )BODY EXPAND(\\)
         %TUTORIAL+-\-\-[REVEDIT Termination+-\-\-%TUTORIAL
         %OPTION  ===>_ZCMD
          +
 
              The%END+subcommand instructs[REVEDIT+  to terminate after saving
                any changed data.  If the data cannot be saved then[REVEDIT+will
                not terminate.
 
                  The%EXIT+subcommand performs the same processing as END, excep
t                 that if[REVEDIT+was invoked from a member selection list then
the               member selection list will not be displayed but instead the en
t  ire             [REVIEW+session will end.
 
                    The%CANCEL+subcommand instructs[REVEDIT+to discard all data
                      being edited and terminate.
 
                   )INIT
                   )PROC       s
                     )END
                          "             "      )ATTR DEFAULT(%+_)
                                                   % TYPE(TEXT) INTENS(HIGH) COL
OR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COL
OR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)  C
OLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH)
CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH)
CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH
) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                   %TUTORIAL+-\-\-[REVIEW Direct
ory Display Information+-\-\-%TUTORIAL             %OPTION  ===>_ZCMD
                                                    +
 
                                                        Detailed information for
 the PDSE pro  gram object directory display is           contained in the TSO H
ELP member[REVPDSE.+ This member resides in               the SYSHELP concatenat
ion.   Enter one of the following commands to             view the HELP member i
n 3270 full screen mode.
                                                              %TSO FSHELP REVPDS
E+                                                            %TSO HEL REVPDSE+
 
                                                           )INIT
                                                           )PROC
                                                          ^  )END
                                                                  "
"      )ATTR DEFAULT(%+_)
           % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
           [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
             + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
             _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
             ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
             | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
               # TYPE(AB)    FORMAT(MIX)
               " TYPE(ABSL) GE(ON)
           )ABC DESC('Help') MNEM(1)
             PDC PDCTEXT('REVPDSE TSO full-screen help')
              ACTION RUN(TSO) PARM('HEL REVPDSE')
             PDC PDCTEXT('About...')
                ACTION RUN(TUTOR) PARM('REVLOGO')
               PDC PDCTEXT('REVIEW FAQ')
                ACTION RUN(TUTOR) PARM('REVFAQ')
                 )ABCINIT
                 .ZVARS=HELP
                 )BODY EXPAND(\\)
                   \ \# Help
                   %TUTORIAL+-\-\-[REVIEW Directory Display Information+-\-\-%TU
TORIAL             %OPTION  ===>_ZCMD
                    ++
                     %               -------------------------------------------
--                   %               |          PDSE Program Object
 |                   %                 |       Directory Display Information
   |                   %               -----------------------------------------
----                   +
                          The following topics a  re presented in sequence or ma
y be requested              by number:
                              %1+- Accessing members
                              %2+-[REVIEW+directory display con  trol
                                %3+- Sorting directory entries
                                %4+- Searching members
                                %5+-[REVIEW+session control
                                  %6+- Program object attributes - Part 1
                                  %7+- Program object attributes - Part 2
                                  %8+-[REVIEW+member selection action codes
             +
                                    The following topics will be presented only
if selected by number:                %9+- Detailed PDSE program object director
y display information            )INIT
                                   )PROC
                                     &ZSEL = TRANS(&ZCMD  1,REVHO01   2,REVHO02
  3,REVHO03   4,REVHO04                                   5,REVHO05   6,REVHO06
  7,REVHO07   8,REVHO08                                     9,*REVHODT  *,'?')
                                     )END
                                      {     "             "     -)ATTR DEFAULT(%
+_)                                                                  % TYPE(TEXT
) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT
) INTENS(HIGH) COLOR(YELLOW)                                           + TYPE(TE
XT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(IN
PUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(IN
PUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(IN
P  UT) INTENS(HIGH) CAPS(OFF)                                        )BODY EXPAN
D(\\)                                                                %TUTORIAL+-
\-\-[REVIEW Accessing Members+-\-\-%TUTORIAL                         %OPTION  ==
=>_ZCMD                                                               +
 
                                                                        Subcmd
 Aliases  Function
                                                                         %SELECT
   S  SEL  +Choose a member for[REVIEW+and review it.
            eg.%s aProgram+starts a[REVIEW+Bro  wse of member%aProgram.+
              eg.%s POSTING+ starts a[REVIEW+Browse of member%POSTING.+
                                                                           %BROW
SE   B       +Choose a member for ISPF Browse and browse it.
                An ISPF environment is required for this subcommand.
                eg.%bRoWsE mIxIt+starts an ISPF Browse of member%mIxIt.+
 
 
                  Note that the operand specifying the member name
                  is not automatically folded to upper case, and
                    has a maximum length of eight (8) characters.
 
 )INIT
 )PROC                    n
   )END
        "             "      )ATTR DEFAULT(%+_)
                                 % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                   + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON
)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT
) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT
) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                                 )BODY EXPAND(\\)
                                 %TUTORIAL+-\-\-[REVIEW Controlling the Display+
-\-\-%TUTORIAL                   %OPTION  ===>_ZCMD
                                  +
 
                                    Subcmd   Aliases  Function
 
                                     %DOWN             +Scroll down towards the
bottom of the list.                  %UP               +Scroll up towards the to
p of the l  ist.                       %BOTTOM           +Same as%DOWN MAX.+
                                       %TOP              +Same as%UP MAX.+
 
                                         %LOCATE LOC LIST L+Scroll the display t
o position the first entry name                             (or ID name if SORT
ID is in effect) starting with                              the string matching
the subcommand operand.
                                           %IFIND    RFIND   +Scroll the display
 to position the next (or first)                              tagged entry at th
e top of the display.
                                             %TAGFLIP  TF      +Untag all tagged
 entries and tag all untagged entries.
                                             %RESET    RES     +Untag   all entr
ies.
                                               %REFRESH  REF     +Refresh the en
try list from DASD.  Tags are discarded.       )INIT
     Q                                           )PROC
                                                 )END
                                                      "             "     &)ATTR
 DEFAULT(%+_)                                                                  %
 TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [
 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
 + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
 _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
 ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
 | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)                                        )
BODY EXPAND(\\)                                                                %
TUTORIAL+-\-\-[REVIEW Sorting the Entries+-\-\-%TUTORIAL                       %
OPTION  ===>_ZCMD
+
 
  Subcommand        Function
 
   %SORT NAME        +Sort the list into ascending name order.
 
     %SORT CHA         +Sort the list into descending change timestamp order.
     %SORT DATE        +Sort the list into descending change timestamp order.
 
       %SORT SIZE        +Sort the list into descending size order.
 
       %SORT TTR         +Sort the list into ascending MLT or TTR order.  This i
s                           the order that the members were saved into the PDSE.
 
         %SORT ID          +Sort the list into ascending user/job order.
         %SORT JOB           +Sort the list into ascending user/job order.
           %SORT USER        +Sort the list into ascending user/job order.
 
           %SORT SSI         +Sort t  he list into ascending SSI order.
             %SORT VER         +Sort the list into ascending SSI order.
             )INIT
             )PROC                                 h
               )END
                    "             "      )ATTR DEFAULT(%+_)
                                             % TYPE(TEXT) INTENS(HIGH) COLOR(WHI
TE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YEL
LOW)                                           + TYPE(TEXT) INTENS(LOW)  COLOR(T
URQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(O
N) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(O
N) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS
(OFF)                                        )BODY EXPAND(\\)
                                             %TUTORIAL+-\-\-[REVIEW Searching Me
mbers+-\-\-%TUTORIAL                         %OPTION  ===>_ZCMD
                                              +
 
                                                Subcmd   Aliases  Function
 
                                                 %SEARCH   FIND  F +Causes the p
resentation of a data entry panel where the                         search param
eters are to be entere  d.
                                                                      If any mem
bers are tagged only tagged members are searched.
                                                                        After th
e search, members with matching data will be                            tagged,
and will be the only members tagged.                 )INIT
                                                       )PROC
                                                       )END
                                                            "             "
 )ATTR DEFAULT(%+_)
     % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
     [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
       + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
       _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
       | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
     )BODY EXPAND(\\)
     %TUTORIAL+-\-\-[REVIEW Session Control+-\-\-%TUTORIAL
     %OPTION  ===>_ZCMD
      +
 
        Subcmd   Aliases  Function
 
         %EXIT     END  =X +Terminate the[REVIEW+session.
         %CANCEL   CAN     +Terminate the[REVIEW+session witho  ut updating your
 profile.
           %SWAP LIST        +Display a list of parallel[REVIEW+sessions.
           %SWAP             +Swap to the second most recent[REVIEW+session.
             %SWAP #           +Swap to the[REVIEW+session number%#+where%#+is a
                                decimal number which can be obtained from%SWAP L
IST.+
               %TSO      TSS     +Invoke the Command Processor named by the oper
and.                              If the named command is[REVIEW+a parallel sess
ion                               is started.
 
                 )INIT
                 )PROC
                 )END
                        "             "      )ATTR DEFAULT(%+_)
                                                 % TYPE(TEXT) INTENS(HIGH) COLOR
(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR
(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)  COL
OR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CA
PS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CA
PS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH)
CAPS(OFF)                                        )BODY EXPAND(\\)
                                                 %TUTORIAL+-\-\-[REVIEW Program
Object Attributes (1)+-\-\-%TUTORIAL             %OPTION  ===>_ZCMD
                                                  +
 
                                                         %AMd+- Addressing mode
of program.
                                                     %A24+- 24-bit addressing mo
de.                                                  %A31+- 31-bit addressing mo
de.                                                    %ANY+- either addressing
mode.                                                  %OV +- Segment Overlay pr
ogram which must have 24-bit addressing mode.
                                                               %At+ - Additional
 program attribute - display precedence order as listed.
                                                         %NX +- Program is Not e
Xecutable.  It cannot be fetched into storage.             %NE +- Program is Not
 Editable.  It cannot be reprocessed by the Binder.        %SC +- Program is in
Scatter format - unlikely for a program object.            %OL +- Program is Onl
y Loadable.  It can only be fetched by a LOAD macro.       %PG +- Progr  am requ
ires Page alignment.  It is loaded on a 4K page boundary.    %TS +- Program obje
ct contains Test Symbol information to assist debugging.     %NM +- Program is N
ot Migratable.  It cannot be converted to a load module.
                                                               )INIT
                                                               )PROC
                                                               )END
                                                                      "
    "      )ATTR DEFAULT(%+_)
               % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
               [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                 + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                 _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                 ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_
)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
               )BODY EXPAND(\\)
               %TUTORIAL+-\-\-[REVIEW Program Object Attributes (2)+-\-\-%TUTORI
AL             %OPTION  ===>_ZCMD
                +
 
                       %RU+ - Program reusability level.
 
                   %RU+ - Program is serially reusable.
                   %RN+ - Program is serially reusable, and reenterable.
                     %RF+ - Program is serially reusable, reenterable, and refre
shable.
 
                             %V+  - Program Management Version of the program ob
ject.
                       %d + - Program object is DLL-enabled.
 
 
                          The names of aliases which can be hidden are shown in
parentheses.
                           %*+after the real name indicates that the 8-byte real
 or primary name was        generated by the Binder, and that the long alias nam
e is the alternative        primary name, that is, t  he primary name specified
on the bind.
 
                             )INIT                                 Q
                               )PROC
                               )END
                                    "             "      )ATTR DEFAULT(%+_)
                                                             % TYPE(TEXT) INTENS
(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS
(HIGH) COLOR(YELLOW)                                           + TYPE(TEXT) INTE
NS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INT
ENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INT
ENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) I
NTENS(HIGH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                             %TUTORIAL+-\-\-[REV
IEW Directory Display Information+-\-\-%TUTORIAL             %OPTION  ===>_ZCMD
                                                              +
 
                                                                  Detailed infor
mation for the PDS/PDSE   directory display is contained            in the TSO H
ELP member[REVPDS.+ This member resides in the SYSHELP              concatenatio
n.   Enter one of the following commands to view the HELP           member in 32
70 full screen mode.
                                                                        %TSO FSH
ELP REVPDS+                                                             %TSO HEL
 REVPDS+
                                                                     )INIT
                                                                     )PROC
                                                                    ^  )END
                                                                            "
          "     -)ATTR DEFAULT(%+_)
                     % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                     [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                       + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                       _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
 PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                         # TYPE(AB)    FORMAT(MIX)
                         " TYPE(ABSL) GE(ON)
                     )ABC DESC('Help') MNEM(1)
                       PDC PDCTEXT('REVPDS TSO full-screen help')
                        ACTION RUN(TSO) PARM('HEL REVPDS')
                       PDC PDCTEXT('About...')
                          ACTION RUN(TUTOR) PARM('REVLOGO')
                         PDC PDCTEXT('REVIEW FAQ')
                          ACTION RUN(TUTOR) PARM('REVFAQ')
                           )ABCINIT
                           .ZVARS=HELP
                           )BODY EXPAND(\\)
                             \ \# Help
                             %TUTORIAL+-\-\-[REVIEW Directory Display Informatio
n+-\-\-%TUTORIAL             %OPTION  ===>_ZCMD
                              ++
                               %               ---------------------------------
------------                   %               |               PDS/PDSE
           |                   %                 |       Directory Display Infor
mation       |                   %               -------------------------------
--------------                   +
                                    The following topics a  re presented in sequ
ence or may be requested              by number:
                                        %1+- Accessing and updating members
                                        %2+- Reading or writing member co  ntent
s to or from a file                       %3+-[REVIEW+directory display control
                                          %4+- Sorting directory entries
                                          %5+- Searching members
                                            %6+-[REVIEW+session control
                                            %7+-[REVIEW+member selection action
codes
                       +                    The following topics will be present
ed only if selected b  y number:                %8+- Detailed PDS/PDSE directory
 display information                       )INIT
                                           )PROC
                                               &ZSEL = TRANS(&ZCMD  1,REVHP01
2,REVHP02   3,REVHP03   4,REVHP04                                   5,REVHP05
6,REVHP06   7,REVHP07   8,*REVHPDT                                  *,'?')
                                             )END  <
                                                {     "             "      )ATTR
 DEFAULT(%+_)                                                                  %
 TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [
 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
 + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
 _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
 ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
 | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)                                        )
BODY EXPAND(\\)                                                                %
TUTORIAL+-\-\-[REVIEW Accessing and Updating Members+-\-\-%TUTORIAL            %
OPTION  ===>_ZCMD
+
 
  Subcmd   Aliases  Function
 
   %SELECT   S  SEL  +Choose a member for[REVIEW+and review it.
                      eg.%s member01+starts a[REVIEW+Bro  wse of member%MEMBER01
.+
     %UPDATE   U       +Choose a member for[REVEDIT+and edit it.
                        eg.%u member01+starts a[REVIEW+Edit of member%M  EMBER01
.+
       %BROWSE   B       +Choose a member for ISPF Browse and browse it.
                          eg.%b member01+starts an ISPF Browse of member%MEMBER0
1.+
         %EDIT     E       +Choose a member for ISPF Edit and edit it.
                            eg.%e member01+starts an ISPF Edit of member%MEMBER0
1.+
           %VIEW     V       +Choose a member for ISPF View and view it.
                              eg.%v member01+starts an ISPF View of member%MEMBE
R01.+      )INIT                    V
             )PROC
             )END
                  "             "      )ATTR DEFAULT(%+_)
                                           % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE
) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLO
W)                                           + TYPE(TEXT) INTENS(LOW)  COLOR(TUR
Q) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON)
 JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON)
 JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(O
FF)                                        )BODY EXPAND(\\)
                                           %TUTORIAL+-\-\-[REVIEW Transferring M
ember Contents+-\-\-%TUTORIAL              %OPTION  ===>_ZCMD
                                            +
 
                                              Subcmd   Aliases  Function
 
                                               %PDSLOAD  PDS     +Write new memb
er contents from sequential input.                                PDSLOAD (or RE
VLMOD for load modul  es) will be invoked.
                                                 %OFFLOAD  OFF     +Copy members
 to a sequential file with%./+control records.                      Sort into TT
R order first to preserve aliases.
                                                   %SEQLOAD  SEQ     +Copy membe
r contents to a sequential file.                                      This is no
t available when the record format is undefined.
                                                     %DELINK   DL      +Delink l
oad modules and produce object decks.                                   The DELI
NKI program will be invoked.  Segment overlay                             progra
ms and program objects cannot be processed.            )INIT
                                                       )PROC
                                                       )END
                                                              "             "
   )ATTR DEFAULT(%+_)
       % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
       [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
         + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
         _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
         ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
         | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
       )BODY EXPAND(\\)
       %TUTORIAL+-\-\-[REVIEW Controlling the Display+-\-\-%TUTORIAL
       %OPTION  ===>_ZCMD
        +
 
          Subcmd   Aliases  Function
 
           %DOWN             +Scroll down towards the bottom of the list.
           %UP               +Scroll up towards the top of the l  ist.
             %BOTTOM           +Same as%DOWN MAX.+
             %TOP              +Same as%UP MAX.+
 
               %LOCATE LOC LIST L+Scroll the display to position the first entry
 name                             (or ID name if SORT ID is in effect) starting
with                              the string matching the subcommand operand.
 
                 %IFIND    RFIND   +Scroll the display to position the next (or
first)                              tagged entry at the top of the display.
 
                   %TAGFLIP  TF      +Untag all tagged entries and tag all untag
ged entries.
                   %RESET    RES     +Untag   all entries.
 
                     %REFRESH  REF     +Refresh the entry list from DASD.  Tags
are discarded.       )INIT                                 Q
                       )PROC
                       )END
                            "             "      )ATTR DEFAULT(%+_)
                                                     % TYPE(TEXT) INTENS(HIGH) C
OLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) C
OLOR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)
 COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HI
GH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                     %TUTORIAL+-\-\-[REVIEW Sort
ing the Entries+-\-\-%TUTORIAL                       %OPTION  ===>_ZCMD
                                                      +
 
                                                        Subcommand        Functi
on
                                                         %SORT NAME        +Sort
 the list into ascending name order.
                                                           %SORT CHA         +So
rt the list into descending change timestamp order.        %SORT DATE        +So
rt the list into descending change timestamp order.
                                                             %SORT SIZE        +
Sort the list into descending size order.
                                                             %SORT TTR         +
Sort the list into ascending TTR order.  This is
  the order that the members were saved into the PDS.
                                                               %SORT ID
 +Sort the list into ascending UserId order.                   %SORT USER
   +Sort the list into ascending UserId order.
                                                                 %SORT SSI
   +Sort the list into ascending SSI or VV.MM order.             %SORT VER
   +Sort t  he list into ascending SSI or VV.MM order.             )INIT
                                                                   )PROC
                                                                   )END
                                                                          "
        "      )ATTR DEFAULT(%+_)
                   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                     + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                     _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                     ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) P
AD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                   )BODY EXPAND(\\)
                   %TUTORIAL+-\-\-[REVIEW Searching Members+-\-\-%TUTORIAL
                   %OPTION  ===>_ZCMD
                    +
 
                      Subcmd   Aliases  Function
 
                       %SEARCH   FIND  F +Causes the presentation of a data entr
y panel where the                         search parameters are to be entere  d.
 
                                            If any members are tagged only tagge
d members are searched.
                                              After the search, members with mat
ching data will be                            tagged, and will be the only membe
rs tagged.                 )INIT
                             )PROC
                             )END
                                  "             "      )ATTR DEFAULT(%+_)
                                                           % TYPE(TEXT) INTENS(H
IGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(H
IGH) COLOR(YELLOW)                                           + TYPE(TEXT) INTENS
(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INT
ENS(HIGH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                           %TUTORIAL+-\-\-[REVIE
W Session Control+-\-\-%TUTORIAL                           %OPTION  ===>_ZCMD
                                                            +
 
                                                              Subcmd   Aliases
Function
                                                               %EXIT     END  =X
 +Terminate the[REVIEW+session.                                %CANCEL   CAN
 +Terminate the[REVIEW+session witho  ut updating your profile.
                                                                 %SWAP LIST
   +Display a list of parallel[REVIEW+sessions.                  %SWAP
   +Swap to the second most recent[REVIEW+session.                 %SWAP #
     +Swap to the[REVIEW+session number%#+where%#+is a
      decimal number which can be obtained from%SWAP LIST.+
                                                                     %TSO      T
SS     +Invoke the Command Processor named by the operand.
        If the named command is[REVIEW+a parallel session
        is started.
                                                                       )INIT
                                                                       )PROC
                                                                       )END
                                                                              "
            "      )ATTR DEFAULT(%+_)
                       % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                       [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                         + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                         _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RE
D)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RE
D) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                       )BODY EXPAND(\\)
                       %TUTORIAL+-\-\-[REVIEW Directory Display Information+-\-\
-%TUTORIAL             %OPTION  ===>_ZCMD
                        +
 
                            Detailed information for the Unix dir  ectory displa
y is contained                in the TSO HELP member[REVUNIX.+ This member resid
es in the SYSHELP             concatenation.   Enter one of the following comman
ds to view the HELP           member in 3270 full screen mode.
 
                                  %TSO FSHELP REVUNIX+
                                  %TSO HEL REVUNIX+
 
                               )INIT
                               )PROC
                              ^  )END
                                      "             "     -)ATTR DEFAULT(%+_)
                                                               % TYPE(TEXT) INTE
NS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTE
NS(HIGH) COLOR(YELLOW)                                           + TYPE(TEXT) IN
TENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) I
NTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) I
NTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT)
 INTENS(HIGH) CAPS(OFF)                                            # TYPE(AB)
 FORMAT(MIX)                                                       " TYPE(ABSL)
GE(ON)                                                         )ABC DESC('Help')
 MNEM(1)                                                         PDC PDCTEXT('RE
VUNIX TSO full-screen help')                                      ACTION RUN(TSO
) PARM('HEL REVUNIX')                                            PDC PDCTEXT('Ab
out...')                                                            ACTION RUN(T
UTOR) PARM('REVLOGO')                                              PDC PDCTEXT('
REVIEW FAQ')                                                        ACTION RUN(T
UTOR) PARM('REVFAQ')                                                 )ABCINIT
                                                                     .ZVARS=HELP
                                                                     )BODY EXPAN
D(\\)                                                                  \ \# Help
                                                                       %TUTORIAL
+-\-\-[REVIEW Directory Display Information+-\-\-%TUTORIAL             %OPTION
===>_ZCMD                                                               ++
                                                                         %
         ---------------------------------------------                   %
         |                   Unix                    |                   %
           |       Directory Display Information       |                   %
           ---------------------------------------------                   +
                                                                              Th
e following topics a  re presented in sequence or may be requested
by number:
  %1+- Accessing entries
  %2+-[REVIEW+directory display con  trol
    %3+- Sorting directory entries
    %4+- Searching files
    %5+-[REVIEW+session control
      %6+- Entry attribute flags
      %7+-[REVIEW+entry selection action codes
                                                                 +
      The following topics will be presented only if selected b  y number:
          %8+- Detailed Unix directory display information
     )INIT
     )PROC
         &ZSEL = TRANS(&ZCMD  1,REVHU01   2,REVHU02   3,REVHU03   4,REVHU04
                              5,REVHU05   6,REVHU06   7,REVHU07   8,*REVHUDT
                              *,'?')
       )END  <
          {     "             "      )ATTR DEFAULT(%+_)
                                         % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                           + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)
 SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) J
UST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) J
UST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF
)                                        )BODY EXPAND(\\)
                                         %TUTORIAL+-\-\-[REVIEW Accessing and Up
dating Entries+-\-\-%TUTORIAL            %OPTION  ===>_ZCMD
                                          +
 
                                            Subcmd   Aliases  Function
 
                                             %SELECT   S  SEL  +Choose an entry
for[REVIEW+and review it.
                                               %BROWSE   B       +Choose a file
for ISPF Browse and browse it.                                    An ISPF enviro
nment is required for this subcommand.
                                                 %EDIT     E       +Choose a fil
e for ISPF Edit and edit it.                                        An ISPF envi
ronment is required for this subcommand.
                                                   %/pathname        +Jump direc
tly to a path and[REVIEW+it.
 
 
                                                                        Note tha
t the operand specifying the entry or file                              is not a
utomatically folded to upper case.
                                                       )INIT
                                                       )PROC
                                                       )END
                                                              "             "
   )ATTR DEFAULT(%+_)
       % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
       [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
         + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
         _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
         ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
         | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
       )BODY EXPAND(\\)
       %TUTORIAL+-\-\-[REVIEW Controlling the Display+-\-\-%TUTORIAL
       %OPTION  ===>_ZCMD
        +
 
          Subcmd   Aliases  Function
 
           %DOWN             +Scroll down towards the bottom of the list.
           %UP               +Scroll up towards the top of the l  ist.
             %BOTTOM           +Same as%DOWN MAX.+
             %TOP              +Same as%UP MAX.+
 
               %LOCATE LOC LIST L+Scroll the display to position the first entry
 name                             (or ID name if SORT ID is in effect) starting
with                              the string matching the subcommand operand.
 
                 %IFIND    RFIND   +Scroll the display to position the next (or
first)                              tagged entry at the top of the display.
 
                   %TAGFLIP  TF      +Untag all tagged entries and tag all untag
ged entries.
                   %RESET    RES     +Untag   all entries.
 
                     %REFRESH  REF     +Refresh the entry list from DASD.  Tags
are discarded.       )INIT                                 Q
                       )PROC
                       )END
                            "             "      )ATTR DEFAULT(%+_)
                                                     % TYPE(TEXT) INTENS(HIGH) C
OLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) C
OLOR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)
 COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HI
GH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                     %TUTORIAL+-\-\-[REVIEW Sort
ing the Entries+-\-\-%TUTORIAL                       %OPTION  ===>_ZCMD
                                                      +
 
                                                        Subcommand        Functi
on
                                                         %SORT NAME        +Sort
 the list into ascending name order.
                                                           %SORT CHA         +So
rt the list into descending change timestamp order.        %SORT MOD         +So
rt the list into descending change timestamp order.
                                                             %SORT CRE         +
Sort the list into descending create timestamp order.
                                                             %SORT ACC         +
Sort the list into descending access timestamp order.
                                                               %SORT SIZE
 +Sort the list into descending size order.
                                                               %SORT ID
   +Sort the list into ascending owner name order.               %SORT OWNER
   +Sort the list into ascending owner name order.               %SORT USER
   +Sort the list into ascending owner name order.
                                                                   )INIT
                                                                   )PROC
                                                                   )END
                                                                          "
        "      )ATTR DEFAULT(%+_)
                   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                     + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                     _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                     ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) P
AD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                   )BODY EXPAND(\\)
                   %TUTORIAL+-\-\-[REVIEW Searching Members+-\-\-%TUTORIAL
                   %OPTION  ===>_ZCMD
                    +
 
                      Subcmd   Aliases  Function
 
                       %SEARCH   FIND  F +Causes the presentation of a data entr
y panel where the                         search parameters are to be entere  d.
 
                                            If any entries are tagged only tagge
d files are searched.
                                              After the search, files with match
ing data will be                              tagged, and will be the only entri
es tagged.                 )INIT
                             )PROC
                             )END
                                  "             "      )ATTR DEFAULT(%+_)
                                                           % TYPE(TEXT) INTENS(H
IGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(H
IGH) COLOR(YELLOW)                                           + TYPE(TEXT) INTENS
(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTEN
S(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INT
ENS(HIGH) CAPS(OFF)                                        )BODY EXPAND(\\)
                                                           %TUTORIAL+-\-\-[REVIE
W Session Control+-\-\-%TUTORIAL                           %OPTION  ===>_ZCMD
                                                            +
 
                                                              Subcmd   Aliases
Function
                                                               %EXIT     END  =X
 +Terminate the[REVIEW+session.                                %CANCEL   CAN
 +Terminate the[REVIEW+session witho  ut updating your profile.
                                                                 %SWAP LIST
   +Display a list of parallel[REVIEW+sessions.                  %SWAP
   +Swap to the second most recent[REVIEW+session.                 %SWAP #
     +Swap to the[REVIEW+session number%#+where%#+is a
      decimal number which can be obtained from%SWAP LIST.+
                                                                     %TSO      T
SS     +Invoke the Command Processor named by the operand.
        If the named command is[REVIEW+a parallel session
        is started.
                                                                       )INIT
                                                                       )PROC
                                                                       )END
                                                                              "
            "     &)ATTR DEFAULT(%+_)
                       % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                       [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                         + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                         _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RE
D)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RE
D) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                       )BODY EXPAND(\\)
                       %TUTORIAL+-\-\-[REVIEW UNIX Entry Attributes+-\-\-%TUTORI
AL                     %OPTION  ===>_ZCMD
                        +
 
                                     The first flag of the Mode F  lags is the F
ile Type.
 
                                        Flag  Indicated Attribute
 
                                            %d+ Directory
                                            %c+ Character Special file
                                              %-+ Regular file
                                              %p+ Named Pipe (FIFO) Special file
                                              %l+ Symbolic Link
                                                %b+ Block Special file
                                                %s+ Socket file
                                                %e+ External Link
                                                  %n+ Non-Share Address Space pr
ogram                                             %A+ APF Authorised program
                                                  %N+ APF Authorised and Non-Sha
re AS                                             %t+ Sticky   bit on (shown as
last flag of Mode Flags)
                                     )INIT
                                     )PROC                                 h
                                       )END
                                            "             "     &)PANEL KEYLIST(
REVKEYL,REV)                                                     )ATTR
                                                                    01  TYPE(CHA
R)    INTENS(LOW)  COLOR(BLUE)                                        02  TYPE(C
HAR)    INTENS(LOW)  COLOR(RED)                                       03  TYPE(C
HAR)    INTENS(LOW)  COLOR(PINK)                                      04  TYPE(C
HAR)    INTENS(LOW)  COLOR(GREEN)                                     05  TYPE(C
H  AR)    INTENS(LOW)  COLOR(TURQ)                                      06  TYPE
(CHAR)    INTENS(LOW)  COLOR(YELLOW)                                    07  TYPE
(CHAR)    INTENS(LOW)  COLOR(WHITE)                                     11  TYPE
(CHAR)    INTENS  (LOW)  COLOR(BLUE)    HILITE(BLINK)                     12  TY
PE(CHAR)    INTENS(LOW)  COLOR(RED)     HILITE(BLINK)                     13  TY
PE(CHAR)    INTENS(LOW)  COLOR(PINK)    HILITE(BLINK)                     14  TY
PE(CHAR)    INTENS(LOW)  COLOR(  GREEN)   HILITE(BLINK)                     15
TYPE(CHAR)    INTENS(LOW)  COLOR(TURQ)    HILITE(BLINK)                     16
TYPE(CHAR)    INTENS(LOW)  COLOR(YELLOW)  HILITE(BLINK)                     17
TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   HILI  TE(BLINK)                     21
  TYPE(CHAR)    INTENS(LOW)  COLOR(BLUE)    HILITE(REVERSE)                   22
  TYPE(CHAR)    INTENS(LOW)  COLOR(RED)     HILITE(REVERSE)                   23
  TYPE(CHAR)    INTENS(LOW)  COLOR(PINK)    HILITE(REVERSE)
24  TYPE(CHAR)    INTENS(LOW)  COLOR(GREEN)   HILITE(REVERSE)
25  TYPE(CHAR)    INTENS(LOW)  COLOR(TURQ)    HILITE(REVERSE)
26  TYPE(CHAR)    INTENS(LOW)  COLOR(YELLOW)  HILITE(REVERSE)
  27  TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   HILITE(REVERSE)
  31  TYPE(CHAR)    INTENS(LOW)  COLOR(BLUE)    HILITE(USCORE)
  32  TYPE(CHAR)    INTENS(LOW)  COLOR(RED)     HILITE(USCORE)
  33  TYPE(  CHAR)    INTENS(LOW)  COLOR(PINK)    HILITE(USCORE)
    34  TYPE(CHAR)    INTENS(LOW)  COLOR(GREEN)   HILITE(USCORE)
    35  TYPE(CHAR)    INTENS(LOW)  COLOR(TURQ)    HILITE(USCORE)
    36  TYPE(CHAR)    INTE  NS(LOW)  COLOR(YELLOW)  HILITE(USCORE)
      37  TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   HILITE(USCORE)
      41  TYPE(CHAR)    INTENS(LOW)  COLOR(BLUE)    GE(ON)
      42  TYPE(CHAR)    INTENS(LOW)  COLO  R(RED)     GE(ON)
        43  TYPE(CHAR)    INTENS(LOW)  COLOR(PINK)    GE(ON)
        44  TYPE(CHAR)    INTENS(LOW)  COLOR(GREEN)   GE(ON)
        45  TYPE(CHAR)    INTENS(LOW)  COLOR(TURQ)    GE  (ON)
          46  TYPE(CHAR)    INTENS(LOW)  COLOR(YELLOW)  GE(ON)
          47  TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   GE(ON)
          51  TYPE(CHAR)    INTENS(LOW)  COLOR(BLUE)    GE(ON) HILITE(B+ LINK)
            52  TYPE(CHAR)    INTENS(LOW)  COLOR(RED)     GE(ON) HILI  TE(BLINK)
              53  TYPE(CHAR)    INTENS(LOW)  COLOR(PINK)    GE(ON) HILITE(BLINK)
              54  TYPE(CHAR)    INTENS(LOW)  COLOR(GREEN)   GE(ON) HILITE(BLINK)
              55  TYPE(CHAR)    INTENS(LOW)  COLOR(TURQ)    GE(ON) HILITE(BLINK)
                56  TYPE(CHAR)    INTENS(LOW)  COLOR(YELLOW)  GE(ON) HILITE(BLIN
K)              57  TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   GE(ON) HILITE(BLIN
K)              61  TYPE(CHAR)    INTENS(LOW)  COLOR(BLUE)    GE(ON) HILITE(REVE
RSE)            62    TYPE(CHAR)    INTENS(LOW)  COLOR(RED)     GE(ON) HILITE(RE
VERSE)            63  TYPE(CHAR)    INTENS(LOW)  COLOR(PINK)    GE(ON) HILITE(RE
VERSE)            64  TYPE(CHAR)    INTENS(LOW)  COLOR(GREEN)   GE(ON) HILITE(RE
VERSE)            65  TYPE(CHAR)      INTENS(LOW)  COLOR(TURQ)    GE(ON) HILITE(
REVERSE)            66  TYPE(CHAR)    INTENS(LOW)  COLOR(YELLOW)  GE(ON) HILITE(
REVERSE)            67  TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   GE(ON) HILITE(
REVERSE)            71  TYPE(CHAR)    INTENS(LOW)    COLOR(BLUE)    GE(ON) HILIT
E(USCORE)             72  TYPE(CHAR)    INTENS(LOW)  COLOR(RED)     GE(ON) HILIT
E(USCORE)             73  TYPE(CHAR)    INTENS(LOW)  COLOR(PINK)    GE(ON) HILIT
E(USCORE)             74  TYPE(CHAR)    INTENS(LOW)  COLOR(GREEN  )   GE(ON) HIL
ITE(USCORE)             75  TYPE(CHAR)    INTENS(LOW)  COLOR(TURQ)    GE(ON) HIL
ITE(USCORE)             76  TYPE(CHAR)    INTENS(LOW)  COLOR(YELLOW)  GE(ON) HIL
ITE(USCORE)             77  TYPE(CHAR)    INTENS(LOW)  COLOR(WHITE)   GE(ON) HI
 LITE(USCORE)             0A  TYPE(DATAIN)  INTENS(LOW)  COLOR(GREEN)
                          0B  TYPE(DATAIN)  INTENS(HIGH) COLOR(RED)
                          0C  TYPE(DATAOUT) INTENS(LOW)  COLOR(BLUE)
                            0D  TYPE(DATAOUT) INTENS(HIGH) COLOR(WHITE)
                            $   TYPE(OUTPUT)  INTENS(HIGH) COLOR(WHITE) JUST(ASI
S) CAPS(OFF)                %   TYPE(TEXT)    INTENS(HIGH) COLOR(WHITE)
                            +     TYPE(TEXT)    INTENS(LOW)
                              _   TYPE(INPUT)   INTENS(HIGH) COLOR(RED) CAPS(OFF
) JUST(LEFT) HILITE(USCORE)   #   AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)
                           )BODY WIDTH(&ZSCR  EENW) EXPAND(\\)
                             $REVLN1
                             %Command ===>_ZCMD\ \
           %Scroll ===>_REVS+#REVBUF,REVSHDW  -------------  -\-\---------------
------------------------------#)INIT
                                .HELP   = &REVHELP
                                &ZHTOP  = &REVHELP
                                  .CURSOR = &REVCSR
                                  .CSRPOS = &REVPOS
                                  .ALARM = &REVALRM
         +                         )PROC
                                      &REVLVL = LVLINE(REVBUF)
                                      &REVCSR = .CURSOR
                                      &REVPOS = .CSRPOS
                                        {     "       &REVPFK = .PFKEY
                                                     )END
                                                          "             "     -)
ATTR DEFAULT(%+_)
   % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
   [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
     + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
     _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
     ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
     | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
   )BODY EXPAND(\\)
   %TUTORIAL+-\-\-[REVIEW Member Selection Codes+-\-\-%TUTORIAL
   %OPTION  ===>_ZCMD
    +
 
      Code  Function
 
       %   S +Browse the member with[REVIEW.+ This is the default
              selection code when the cursor is placed on th  e leader dot.
 
         %   /+[REVIEW+the member with the%DATA+operand.
 
           %   B +Browse the member with ISPF Browse.
 
           %   R +Reset or untag the member.
             %   T +Tag the member for display control purposes, or for
                    later processing by SEARCH, OFFLOAD, SEQLOAD or DELINK.
 
             %   H +Displ  ay program history.
               %   M +Display program map.
               )INIT
               )PROC                    n
                 )END
                      "             "      )ATTR DEFAULT(%+_)
                                               % TYPE(TEXT) INTENS(HIGH) COLOR(W
HITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR(Y
ELLOW)                                           + TYPE(TEXT) INTENS(LOW)  COLOR
(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CAPS
(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS
(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CA
PS(OFF)                                        )BODY EXPAND(\\)
                                               %TUTORIAL+-\-\-[REVIEW Entry Sele
ction Codes+-\-\-%TUTORIAL                     %OPTION  ===>_ZCMD
                                                +
 
                                                  Code  Function
 
                                                   %   S +Browse the entry conte
nts with[REVIEW.+ This is the default                     selection code when th
e cursor is placed on th  e leader dot.
                                                     %   /+[REVIEW+the entry con
tents with the%DATA+operand.
                                                       %   A+[REVIEW+the entry c
ontents - if a file treat as an                              %ASCII text+file.
 
                                                         %   B +Browse the regul
ar file with ISPF Browse.                                %   E +Edit the regular
 file with ISPF Edit.
                                                         %   R +Reset   or untag
 the member.                                               %   T +Tag the member
 for display control purposes, or for                             later processi
ng by SEARCH.
                                                             %   H +Display prog
ram history.                                                 %   M +Display prog
ram map.                                                     )INIT
                   Q                                           )PROC
                                                               )END
                                                                    "
  "     })ATTR
           ! TYPE(TEXT) COLOR(WHITE) HILITE(USCORE)
           { TYPE(NT)
             @ TYPE(ET)
             # TYPE(DT)
             | AREA(SCRL) EXTEND(ON)
           )BODY CMD( ) W  INDOW(60,10)
             {     @Unlicensed Materials - Property of the Free World  {
             {                                                         {
             {     !http://www.cbttape.o  rg/ftp/cbt/CBT134.zip+         {
               {                                                         {
               @      Weapon Masters present and past...
               |S1                                                         |
                 )AREA S1
                 #        Greg Price
                 #        John Kalinich
                   #        Bruce Leland
                   #        Tony Watson
                   #        Bill Godfrey
                     )INIT
                       &ZUP = REVLOGO
                       &ZWINTTL = 'REVIEW Command'
                         &ZCMD = ' '
                         &CMD = ' '
                       )END
                            "             "      )ATTR DEFAULT(%+_)
                                                     % TYPE(TEXT) INTENS(HIGH) C
OLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) C
OLOR(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)
 COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH
) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HI
GH) CAPS(OFF)                                            ! AREA(SCRL) EXTEND(ON)
                                                     )BODY EXPAND(\\)
                                                     %TUTORIAL+-\-\-[REVEDIT Edi
  t Primary Subcommands+-\-\-%TUTORIAL                 %OPTION  ===>_ZCMD
                                                      ++
                                                       !SCRLAREA ---------------
---------------  -----------------------------------!    )AREA SCRLAREA
                                                         +
                                                            These primary subcom
mands are available while edit  ing file data:
                                                           %  LEFT     +- Scroll
 to the left a specified number of columns.                            +  If no
operand is specified, the 'scroll' value is u  sed.          %  RIGHT    +- Scro
ll to the RIGHT a specified number of columns.                           +  If n
o operand is specified, the 'scroll' value is used.          %  LOCATE   +- Disp
lay the specified record number.                                           +  (R
elative record number only, not sequence numbers.)             %  CAPS ON  +- En
sure all data entered is translated to upper case.             %  CAPS OFF +- En
sure the case of entered data is not changed.                  %  CAPS       +-
Toggle the CAPS setting.                                         %  COLS ON  +-
Activate the column marker.                                      %  COLS OFF +-
Deactivate the column marker.                                    %  COLS     +-
Toggle the   display of the column marker.                         %  COPY     +
- Import the contents of a data set into the edited data.          %  CREATE   +
- Create a new data set or member with edit session data.          %  PROF ON  +
- Activate the profile se  ttings display.                           %  PROF OFF
 +- Deactivate the profile settings display.                         %  PROF
 +- Toggle the display of the profile settings.                      %  HEX ON
 +- Display the data in hexadecimal and   character formats.           %  HEX OF
F  +- Display the data in character format.                            %  HEX
   +- If HEX currently on, turn it off.  If off, turn it on.           %  HI OFF
   +- Turns off syntax highlighting.                   +                 %  HI A
SM   +- Activates Assembler source code syntax highli  ghting.             %  HI
 JCL   +- Activates JCL source code syntax highlighting.                   %  HI
 AUTO  +- Activates syntax highlighting for JCL and Assembler
       +  source whenever they are detected.                                 %
FIND     +- Search until the specified data or pattern is found.             %
FINDNOT  +- Search until the specified data or pattern is not found.         %
IFIND    +- Repeat the previous FIND or FINDNOT or EXCLUDE or EXNOT.         %
CHA  NGE   +- Find and then change a specified character string.               %
  ICHANGE  +- Repeat the previous CHANGE.                                      %
  DELETE   +- Delete excluded or nonexcluded lines.                            %
  EXCLUDE  +- Excl  ude lines from display.
 %  EXNOT    +- Exclude lines from display that do not contain the string.
 %  FLIP     +- Toggle the exclusion status of every data record.
 %  STATS    +- Set whether membe  r statistics are to be stored or not.
   %  LEVEL    +- Set the modification level of the member statistics.
   %  VERSION  +- Set the version level of the member statistics.
   %  NUMBER   +- Set sequence numbering on or o  ff.
     %  UNNUM    +- Clear sequence numbers from the data.
     %  REDO     +- Undo an 'UNDO'.
     %  RENUM    +- Resequence the data records.
       %  NULLS ON +- Replace trailing blanks with 3270 null characters.
       %  NULLS OFF+- Preserve trailing blanks.
       %  REPLACE  +- Replace a data set or member with edit session data.
         %  RESET    +- Clear all line commands and cancel all exclusions.
         %  SORT     +- Sort records into a different order based on data conten
t.       %  SUBMIT   +- Submit the data set or MEMBER being edited.
                       +  TSO SUBMIT is invoked.
           %  UNDO     +- Undo a change to the data being edited or viewed.
           %  UNDO ON  +- Enable UNDO.
           %  UNDO OFF +- Di  sable UNDOa nd release UNDO resources.
             %  ZAP      +- Control whether PDS members with fixed-length record
s                        +  that have an unchanged record count at save time are
                         +  to be stored in   the same location (using update-in
-place)                    +  to save disk space, or not.
               )INIT
               )PROC
                 )END
                  {     "             "      )ATTR DEFAULT(%+_)
                                                 % TYPE(TEXT) INTENS(HIGH) COLOR
(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR
(YELLOW)                                           + TYPE(TEXT) INTENS(LOW)  COL
OR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(HIGH) CA
PS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CA
PS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH)
CAPS(OFF)                                            ! AREA(SCRL) EXTEND(ON)
                                                 )BODY EXPAND(\\)
                                                 %TUTORIAL+-\-\-[REVEDIT Edi  t
Line Subcommands+-\-\-%TUTORIAL                    %OPTION  ===>_ZCMD
                                                  +
                                                      These line subcommands are
 available   while editing file data:
                                                     %  I +- Insert line (to ins
ert 1 or more lines of new data).                    %  D +- Delete line (to del
ete 1 line, several lines,   or a block of lines).     %  R +- Repeat line (to r
epeat a single line 1 or more times,                   %    +               or t
o repeat a block of lines 1 or more times).            %  C +- To identify the s
ource of a copy operation.                               %  M +- To identify the
 source of a move operation.                             %  A +- To identify the
 destination of a move/copy operation.                   %  B +- To identify the
 destination of a move/copy operation.                     %  O +- To identify t
he destination of a move/copy overlay operation.           %  ) +- Shift right o
ne or more columns.                                        %  ( +- Shift left on
e or more columns.                                         %  X +- Excl  ude one
 line, several lines, or a block of lines.                   %  F +- Show the fi
rst line(s) from a block of excluded lines.                  %  L +- Show the la
st line(s) from a block of excluded lines.                   %  S +- Show the li
nes fr  om a block of excluded lines.                          %  W +- Lowercase
, to change text from uppercase to lowercase.                  %  U +- Uppercase
, to change text from lowercase to uppercase.                  % TF +- Text flow
, to flow text to the   end of a paragraph.                      % TS +- Text sp
lit, to split a text line at the cursor to allow insertion.      )INIT
                                                                 )PROC
                                    #                              )END
                                                                        "
      "      )ATTR DEFAULT(%+_)
                 % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                 [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                   + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                   _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
                   ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD
(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                 )BODY EXPAND(\\)
                 %TUTORIAL+-\-\-[REVIEW Job Output Listings+-\-\-%TUTORIAL
                 %OPTION  ===>_ZCMD
                  +
 
                      Detailed information for REVIEWing jo  b output on JES spo
ol is contained         in the TSO HELP member[REVOUT.+ This member resides in t
he SYSHELP              concatenation.   Enter one of the following commands to
view the HELP           member in 3270 full screen mode.
 
                            %TSO FSHELP REVOUT+
                            %TSO HEL REVOUT+
 
                         )INIT
                         )PROC
                        ^  )END
                                "             "     })ATTR DEFAULT(%+_)
                                                         % TYPE(TEXT) INTENS(HIG
H) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIG
H) COLOR(YELLOW)                                           + TYPE(TEXT) INTENS(L
OW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(INPUT) INTENS(
HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(
HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INP  UT) INTEN
S(HIGH) CAPS(OFF)                                            # TYPE(AB)    FORMA
T(MIX)                                                       " TYPE(ABSL) GE(ON)
                                                         )ABC DESC('Help') MNEM(
1)                                                         PDC PDCTEXT('REVOUT T
SO full-screen help')                                       ACTION RUN(TSO) PARM
('HEL REVOUT')                                             PDC PDCTEXT('About...
')                                                            ACTION RUN(TUTOR)
PARM('REVLOGO')                                              PDC PDCTEXT('REVIEW
 FAQ')                                                        ACTION RUN(TUTOR)
PARM('REVFAQ')                                                 )ABCINIT
                                                               .ZVARS=HELP
                                                               )BODY EXPAND(\\)
                                                                 \ \# Help
                                                                 %TUTORIAL+-\-\-
[REVIEW Job Output Listings+-\-\-%TUTORIAL                       %OPTION  ===>_Z
CMD                                                               ++
                                                                   %
   ---------------------------------------------                   %
   |                 REVIEW                    |                   %
     |            Job Output Listings            |                   %
     ---------------------------------------------                   +
                                                                        The foll
owing topics a  re presented in sequence or may be requested              by num
ber:                                                                        %1+-
 Job output list display format                                             %2+-
 Job output list subcommands                                                  %3
+- Job processing selection codes
                                                                            The
following topics will be presented only if s  elected by number:
%4+- Detailed Job Output Listing information                               )INIT
                                                                           )PROC
                                                           +                   &
ZSEL = TRANS(&ZCMD  1,REVHJ01   2,REVHJ02   3,REVHJ03   4  ,*REVHJDT
                      *,'?')                                                   )
END
{     "             "      )ATTR DEFAULT(%+_)
                               % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                               [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                                 + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                                 _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
COLOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                                   ! AREA(SCRL) EXTEND(ON)
                               )BODY EXPAND(\\)
                               %TUTORIAL+-\-\-[REVOUT Prim  ary Subcommands+-\-\
-%TUTORIAL                       %OPTION  ===>_ZCMD
                                ++
                                 !SCRLAREA ------------------------------  -----
------------------------------!    )AREA SCRLAREA
                                   +
                                      These primary subcommands are available fr
om the j  ob list display:
                                     %  STATUS   +- Issue a search for a differe
nt job name.                         )INIT
                                       )PROC
                                       )END
                                            "             "      )ATTR DEFAULT(%
+_)                                                                  % TYPE(TEXT
) INTENS(HIGH) COLOR(WHITE) SKIP(ON)                                 [ TYPE(TEXT
) INTENS(HIGH) COLOR(YELLOW)                                           + TYPE(TE
XT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)                                  _ TYPE(IN
PUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(IN
PUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(IN
P  UT) INTENS(HIGH) CAPS(OFF)                                            ! AREA(
SCRL) EXTEND(ON)                                                     )BODY EXPAN
D(\\)                                                                %TUTORIAL+-
\-\-[REVOUT Line   Subcommands+-\-\-%TUTORIAL                          %OPTION
===>_ZCMD                                                             +
                                                                          These
line subcommands are available   from the job list display:
                                                                         %  S +-
 Look at available job output. [REVIEW+will be used.                     %  P +-
 Purge job output.  A batch job will also be c  ancelled.                  %  O
+- Release job output for printing.                                        %
+  A new SYSOUT class can be specified in the Q column.                    %  C
+- Cancel a job before or during execution.                                  %
  +  The job will not be purged.                                             )IN
IT                                                                           )PR
OC                                                                          ^  )
END
    "             "     &)ATTR DEFAULT(%+_)
                             % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
                             [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
                               + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
                               _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) CO
LOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) CO
LOR(RED) PAD(_)                | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
                                 ! AREA(SCRL) EXTEND(ON)
                             )BODY EXPAND(\\)
                             %TUTORIAL+-\-\-[REVIEW Brow  se Subcommands+-\-\-%T
UTORIAL                        %OPTION  ===>_ZCMD
                              ++
                               !SCRLAREA ------------------------------  -------
----------------------------!    )AREA SCRLAREA
                                 +
                                    These subcommands are available while[REVIEW
ing+fi  le data.
                                   %  LEFT     +- Scroll to the left a specified
 number of columns.                            +  If no operand is specified, th
e 'scroll' value is u  sed.          %  RIGHT    +- Scroll to the RIGHT a specif
ied number of columns.                           +  If no operand is specified,
the 'scroll' value is used.          %  LOCATE   +- Display the specified record
 number.                                           +  (Relative record number on
ly, not sequence numbers.)             %  HEX ON   +- Display the screen in hexa
decimal.                               %  HEX OFF  +- Display the screen in char
acter mode.                            %  HEX        +- If HEX currently on, tur
n it off.  If off, turn it on.           %  FIND     +- Search until the specifi
ed data or pattern is found.             %  FINDSMF  +- Search for an SMF record
 type and optionally sub-type.           %  FINDNOT  +- Search unt  il the speci
fied data or pattern is not found.         %  IFIND    +- Repeat the previous FI
ND or FINDNOT operation.                   %  RESET    +- Deactivate line exclus
ion caused by the ALL or REST                          +  operand of a FIND or F
I  NDNOT subcommand.                         %  FULL ON  +- Use full EBCDIC tran
slation for display with using any                       +  APL characters.
                                             %  FULL OFF +- Use the standard 327
0 keyboard chara  cter set for display.        %  FULL     +- If FULL is on, tur
n it off.  If off, turn it on.                 %  ASCII ON +- Specifies that ASC
II data is being[REVIEWed+and that                         +  characters are to
be translated to EBCDIC before + being                       +  displayed.  Note
 that search arguments to the   'FIND' and                     +  'FINDNOT' comm
ands typed in while in ASCII mode are                          +  translated to
ASCII.                                             %  ASCII OFF+ - Leave the cha
racters to be displayed in EBCDIC.                   %  ASCII    +- If ASCII is
on, turn it off.  If off, turn it on.                %  DISP T   +- Display TN/T
11-like EBCDIC text characters where possible.                   +  This is simi
lar to 3278T in ISPF.                                %  DIS  P A   +- Display AP
L/EBCDIC characters where possible.                                +  This is si
milar to 3278A in ISPF.                                %  DISP     +- Toggle bet
ween DISP T and DISP A.                                %  DIR      +- Disp  lay
the directory of the partitioned data set or file                    +  currentl
y being[REVIEWed.+                                       %  MEMBER   +- Switch t
o a specified member within the same                                 +  partitio
ned data   set (or concatenation thereof)                              +  as the
 current member.                                           %  NEWTOP   +- Specif
y a relative physical address to be considered                         +  as the
 top-of-data.  This is u  seful for looking past                         +  I/O
errors, end-of-file markers, and at deleted members.                     +  It i
s also useful for directly viewing data a long way                       +  from
 the start without reading all the prec  eding records.        %  SUBMIT   +- Su
bmit the file or MEMBER being[REVIEWed.+                                   +  TS
O SUBMIT is invoked.                                                       +  Th
e data set must be sequential or partitioned,                                +
and have fixed length 80-byte records.                           %  SMF ON   +-
If SMF data is being examined, convert the record                            +
to eye-readable format.                                          %  S  MF OFF  +
- Undo 'SMF ON'.                                                   %  SMF      +
- If SMF is currently on, turn it off.  If off, turn it on.        %  EREP ON  +
- If LOGREC data is being examined, convert the record                         +
  to   eye-readable format.                                          %  EREP OFF
 +- Undo 'EREP ON'.                                                  %  EREP
 +- If EREP is currently on, turn it off. If off, turn it on.        %  FORMAT
 +- Format file dat  a according to Assembler data definition
   +  source code in the nominated member of the REVFMTS file.
   +  VTOC entries can be formatted without the REVFMTS file.          %  FMT OF
F  +- Suspend record formatting.    Disable picture rendering.           %  FMT
ON   +- Resume record formatting.                                        %  FMTV
AR   +- Manually specify the data type of a data item.                   %  APPE
ND   +- Copy[REVIEWed+data starting from the firs+ t record shown
       +  on the screen to an output file.  Dat  a is to be appended
         +  to any existing data in the output file.                         %
COPYOUT  +- Copy[REVIEWed+data starting from the first record shown
         +  on the screen to an output file.  Any data in the   output
      "     {            +  file will be overwritten and lost.
             %  PICDATA  +- Cause Assembler source statements containing picture
                         +  image data to be written to a file.
             %    EDIT     +- Process the current data set with ISPF EDIT.
               %  BROWSE   +- Process the current data set with ISPF BROWSE.
               %  VIEW     +- Process the current data set with ISPF VIEW.
               %  UPDATE   +-   Process the current data set with REVEDIT, the f
ullscreen                    +  editor component of[REVIEW.+
                 %  RTF      +- COPYOUT print files with message and ASM text co
loring.          )INIT                      T
                   )PROC
                   )END
                        "             "      )ATTR DEFAULT(%#_)
                                                 % TYPE(TEXT) INTENS(HIGH) COLOR
(WHITE) SKIP(ON)                                 [ TYPE(TEXT) INTENS(HIGH) COLOR
(YELLOW)                                           $ TYPE(TEXT) INTENS(HIGH) COL
OR(GREEN)                                          @ TYPE(TEXT) INTENS(HIGH) COL
OR(RED) HILITE(USCORE)                             # TYPE(TEXT) INTENS(LOW)  COL
OR(TURQ) SKIP(ON)                                  _ TYPE(INP  UT) INTENS(HIGH)
CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INTENS(HIGH)
CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INPUT) INTENS(HIGH)
CAPS(OFF)                                        )BODY EXPAND(\\)
                                                   %TUTORIAL#-\-\-[REVOUT Job Li
st Display#-\-\-%TUTORIAL                          %OPTION  ===>_ZCMD
                                                  #
 
                                                         .----------------------
------------------------------------------------.#       | %REVOUT   TRIDJK
                                     LINE 1 OF 2# |        | %COMMAND ===>@
                                %SCROLL ===>@CS # |        | $S Q JOBNAME  JOBID
ENT STATUS          STEPNAME PROCSTEP   CPU-TIME# |        | $' ' TRIDJK   TSU32
280 ON OUTPUT QUEUE                               # |        | $' ' TRIDJK   TSU
00194 EXECUTING       LOGDED                 48.74# |        .------------------
----------------------------------------------------.#          | |
                                                                  | |
                                                                  | |
                                                                  | +------%SYSO
UT class (for release)#                                           +----  ----%Jo
b selection code (S, P, O, C)#                               )INIT
                                                             )PROC
                                                             )END
                                                                    "
  "      )ATTR DEFAULT(%+_)
             % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
             [ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
               + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
               _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
               ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
               | TYPE(INP  UT) INTENS(HIGH) CAPS(OFF)
             )BODY EXPAND(\\)
             %TUTORIAL+-\-\-[REVIEW Member Selection Codes+-\-\-%TUTORIAL
             %OPTION  ===>_ZCMD
              +
 
                Code  Function
 
                 %   S +Browse the member with[REVIEW.+ This is the default
                        selection code when the cursor is placed on th  e leader
 dot.
                   %   /+[REVIEW+the member with the%DATA+operand.
 
                     %   U +Edit the member with[REVEDIT.+
 
                     %   B +Browse the member with ISPF Browse.
                       %   E +Edit the member with ISPF Edit.
                       %   V +View the member with ISPF View.
 
                       %   D +Delet  e a member from an unconcatenated PDS (not
PDSE).                   %   R +Restore a deleted member, or reset (untag) a tag
ged member.              %   T +Tag the member for display control purposes, or
for                             later processing b  y SEARCH, OFFLOAD, SEQLOAD o
r DELINK.
                           %   H +Display program history.
                           )INIT                                 Q
                             )PROC
                             )END
                                  "             "     &)ATTR DEFAULT(%+_)
                                                           # TYPE(AB)    FORMAT(
MIX)                                                       % TYPE(TEXT)  INTENS(
HIGH) COLOR(WHITE) SKIP(ON)                                  [ TYPE(TEXT)  INTEN
S(HIGH) COLOR(YELLOW)                                        + TYPE(TEXT)  INTEN
S(LOW)  COLOR(TURQ) SKIP(ON)                                 { TYPE(OUTPUT) INTE
NS(HIGH)  COLOR(WHITE)                                       _ TYPE(INP  UT) INT
ENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)                       ^ TYPE(INPUT) INT
ENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)                | TYPE(INPUT) INT
ENS(HIGH) CAPS(OFF)                                            " TYPE(ABSL) GE(O
N)                                                           )ABC DESC('RefList'
) MNEM(1)                                                    PDC DESC('Current D
ata Set List &ZDSCURT.') MNEM(1) ACC(CTRL+ALT+P)              ACTION RUN(ISRRLIS
T) PARM('PL1')                                                 PDC DESC('Current
 Library List &ZDSCURLT.') MNEM(2) ACC(CTRL+SHIFT+P)            ACTION RUN(ISRRL
IST) PARM('LL1')                                               PDC DESC('List of
 Personal Data Set Lists') MNEM(1) P  DSEP(ON) ACC(CTRL+ALT+O)    ACTION RUN(ISR
RLIST) PARM('PL2')                                               PDC DESC('List
of Personal Library Lists') MNEM(2) ACC(CTRL+SHIFT+O)             ACTION RUN(ISR
RLIST) PARM('LL2')                                                 )ABCINIT
                                                                   .ZVARS=REFLIS
T                                                                        VGET (Z
CURTB ZCURLTB) PROFILE                                                     IF (&
ZCURTB = &Z) &ZDSCURT = &Z                                                 ELSE
&ZDSCURT= '(&ZCURTB)'                                                      IF (&
ZCURLTB = &Z) &ZDSCURLT = &Z                                               ELSE
&  ZDSCURLT= '(&ZCURLTB)'                                              )ABC DESC
('RefMode') MNEM(2)                                                    PDC DESC(
'List Execute') UNAVAIL(ZRM1) MNEM(1) ACTION RUN(ISRRLIST) PARM('BEX') PDC DESC(
'List Retrieve')   UNAVAIL(ZRM2) MNEM(2) ACTION RUN(ISRRLIST) PARM('BRT'))ABCINI
T                                                                        .ZVARS=
REFMODE                                                                    VGET
(ZBLIST) PROFILE                                                             IF
(&ZBLIST = 'EXECUTE')                                                          &
zrm1 = 1                                                                       &
zrm2 = 0
 &refmode = 2                                                                  E
LSE
 &zrm1 = 0                                                   +
   &zrm2 = 1
     &refmode = 1
 )ABC DESC('Help') MNEM(1)
 PDC PDCTEXT('REVIEW command tutorial')
    ACTION RUN(TUTOR) PARM('REVHB00')
   PDC PDCTEXT('REVIEW TSO full-screen help')
    ACTION RUN(TSO) PARM('HEL REVIEW')
   PDC PD  CTEXT('About...')
      ACTION RUN(TUTOR) PARM('REVLOGO')
     PDC PDCTEXT('REVIEW FAQ')
      ACTION RUN(TUTOR)   PARM('REVFAQ')
       )ABCINIT
       .ZVARS=HELP
       )BODY EXPAND(\\)
         %# RefList# RefMode# Help+
         "----------------------------------------------------------------------
---------+\ \[REVIEW Command Processor\ \
           %Command ===>_ZCMD
          ++
           %ISPF Library:
             +   Project%===>_PRJ1    %
             +   Library%===>_LIB1    %
             +   Type   %===>_TYP1    %
               +   Member %===>_MEM1    %
               +
               %Other Partitioned, Sequential, VSAM, Unix HFS File, or ddname FI
LE:            +     Data Set Name  %===>|DSN1
              {Z +   Volume Serial  %===>_VOL1  +  (If not cataloged)
                 +   Options        %===>_OPT1
                %+  [REVIEW+CP Nam  e %===>_CMD1    +
                   )INIT
                     .ZVARS = '(DSN1IND)'
                     .CURSOR = DSN1
                       .NRET = ON
                       IF (&REVPDSN = &Z)
                         .CURSOR = MEM1
                         IF (&REVPDSN ^= &Z)
                           .CURSOR = DSN1
                         .HELP   = REVHB00                                     +
                           &ZHTOP  = REVHB00
                             &MEM1 = &Z
                             &DSN1 = &REVPDSN
                             &VOL1 = &REVPVOL
                                    "     &  &CMD1 = &REVPCMD
                                             IF (&CMD1 = &Z)  &CMD1 = 'REVIEW'
                                           )REINIT
                                               .CURSOR = DSN1
                                               .NRET = ON
                                               IF (&DSN1 ^= &Z)
                                                 &DSN1 = &R  EVPDSN
                                                   &VOL1 = &REVPVOL
                                                   &MEM1 = &Z
                                                 REFRESH (*)
                                                 )PROC
                                                   /* Start NRETRIEV code */
                                                   .NRET = OFF
                                                     IF (&ZVERB = NRETRIEV)
                                                       VGET (ZCURTB,ZCURLTB) PRO
FILE                                                   IF (.CURSOR NE DSN1 AND .
CURSOR NE VOL1)                                            .NRET = LIB
                                                           IF (&ZNRLIB = YES)
                                                             .CURSOR = MEM1
                                                               &PRJ1 = &ZNRPROJ
                                                               &LIB1 = &ZNRGRP1
                                                               &TYP1 = &ZNRTYPE
                                                                 &MEM1 = &ZNRMEM
                                                                 &DSN1 = &Z
                                                                 &VOL1 = &Z
                                                                 .MSG   = ISRDS0
13                                                               ELSE .MSG = ISR
DS011                                                          ELSE
                                                                 .NRET = DSN
                                                                   IF (&ZNRDS =
YES)                                                                 .CURSOR = D
SN1                                                                  &DSN1 = &ZN
RODSN                                                                  &VOL1 = &
ZNRVOL                                                                 .MSG = IS
RDS014                                                               ELSE .MSG =
 ISRDS012                                                          /* End NRETRI
EV code */
                                                                   /* Start RefL
ist code */                                      +                   VGET (ZRDSN
 ZRVOL) SHARED                                                         IF (&ZRDS
N ^= ' ')                                                                &DSN1 =
 &ZRDSN                                                                  VGET (Z
REFVOLM) PROFILE                                                           IF (&
ZREFVOLM = 'ON')                                                             &VO
L1 = &ZRVOL                                                                ELSE
                                                 /* OW15849*/                  &
VOL1 = &Z                                          /* OW15849*/              &ZD
SVOL = &VOL1                                                                 .CU
RSOR = DSN1                                                                  &ZR
DSN = ' '                                                                      &
ZRVOL = ' '                                                                    V
PUT (ZRDSN ZRVOL) SHARED                                                       V
PUT (ZDSVOL) SHARED
 VGET (ZBLIST) PROFILE
 IF (&ZBLIST ^= 'EXECUTE') .MSG = ISRDS003                                     V
GET (DSALSEL) SHARED
 IF (&DSALSEL ^= ' ')
   VGET (DSA1,DSA2,DSA6,DSA7) SHARED
   &PRJ1 = &DSA1
     &LIB1 = &DSA2
     &TYP1 = &DSA6
     &MEM1  = &DSA7
       &DSN1 = ' '
       &VOL1 = ' '
       &DSALSEL = ' '
         VPUT (DSALSEL) SHARED
         .CURSOR = MEM1
         VGET (ZBLIST) PROFILE
         IF (&ZBLIST ^  = 'EXECUTE') .MSG = ISRDS003
         /* End RefList code */
 
         &REVPDSN = &DSN1
           &REVPVOL = &VOL1
           &REVPCMD = &CMD1
           VPUT (PRJ1 LIB1 TYP1) PROFILE
             VPUT (REVPDSN REVPVOL REVPCMD) SHARED
 
             IF (&DSN1 = &Z)                                       +
                 VER (&PRJ1,NB,DSNAME)
                   VER (&LIB1,NB,DSNAME)
                   VER (&TYP1,NB,DSNAME)
                   IF (&MEM1 = &Z)
                        "            &OPT2 = 0
                                   ELSE
                                     VER (&MEM1,DSNAME,MSG=ISRE090)
                                       &OPT2 = 1
                                     IF (&VOL1 ^= &Z) .MSG=ISRE094
 
                                   IF (&DSN1 ^=   &Z)
                                        &RFC = TRUNC(&DSN1,1)          /* If fir
st character    */                      IF (&RFC = '''')               /*   of D
SN is "'" check */                         &RREM = .TRAIL                /*   to
 see if last "'"  */                         &RREM2 = TRUNC(&RREM,'''')  /*   is
 missing.         */                         IF (&RREM2 = &RREM)         /* If l
ast "'" missing   */                            &DSN1 = '&DSN1&RFC'      /*
add it to the end.  */                      IF (&VOL1 = &Z)
                                               &OPT2 = 2
                                            IF (&VOL1 ^= &Z)
                                                 &OPT2 = 3
                                           &ZSEL = TRANS(&OPT2,
                                                         0,'CMD(&CMD1 ''&PRJ1..&
LIB1..&TYP1'' &OPT1)'                                      1,'CMD(&CMD1 ''&PRJ1.
.&LIB1..&TYP1(&MEM1)'' &OPT1)'                             2,'CMD(&CMD1 &DSN1 &O
PT1)'                                                      3,'CMD(&CMD1 &DSN1 VO
L(&VOL1) &OPT1)'                                            ' ',' '
                                                             *,'?' )
                                             )FIELD
                                               FIELD(DSN1s ) IND(DSN1IND) LEN(10
23)                                            )END
                                                    "       \INMR06
