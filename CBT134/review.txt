*                    TSO HELP FOR 'REVIEW' RELEASE 42.1    JANUARY 2009
)F Function -
  The REVIEW command allows a data set or UNIX entity to be examined at
  a 3270 TSO terminal in full screen mode.  Both disk and tape files
  may be REVIEWed.  If a PDS without a member is specified then a
  member selection list is displayed.  Load module members with a
  residence mode of ANY are shown in high intensity or green in the
  member list.  SCLM-managed members are flagged with an equals ('=')
  sign in the member list.  When looking at file data, a 'K' may be
  shown in the "ruler" heading line to denote the first and last, or
  only, column(s) of record keys.  On color terminals the portion of
  the "ruler" line corresponding to record keys is shown in red.  If
  the record format indicates printer carriage control characters then
  an 'A' or an 'M' as appropriate may be shown in column 1 of the
  "ruler" heading line.
 
  REVIEW can format records according to Assembler data structure
  source code supplied by the user.  REVIEW can also format system
  related data such as SMF records, EREP data, VTOC entries, tape
  labels and load module structure and identification data.  REVIEW
  can format the directories of ZIP files created by PKZIP, Info-ZIP,
  WinZIP, etc.
 
  REVIEW can display the history of program objects residing in PDSE
  data sets or UNIX files, including compilation and program bind
  timestamps.
 
  REVIEW can display pictures in 1-bit (black-and-white), 4-bit
  (16 colors) and 8-bit (256 colors) single-plane ".PCX" (ZSoft
  Paintbrush) files on a terminal with 3270 graphics capabilities.
 
  REVIEW can display pictures in 1-bit (black-and-white), 4-bit
  (16 colors), 8-bit (256 colors), 16-bit (high color), 24-bit or
  32-bit (true color) uncompressed single-plane ".BMP" (Windows or
  OS/2 Bitmap) files on a terminal with 3270 graphics capabilities.
 
  (Colors in color pictures will be coarsely rendered in 3270 colors.)
 
  REVIEW can process a single data set or a pre-allocated file
  concatenation.  Partitioned files can be sequentialized,
  offloaded in PDSLOAD (IEBUPDTE-like) format, or searched for
  specific or picture-masked data.  Load modules can be offloaded
  into a sequential format, and can be delinked into object decks.
  Sequential offload files can be processed to restore members
  into partitioned data sets.
 
  REVIEW can process the system PARMLIB concatenation.
 
  REVIEW can process UNIX files such as HFS (Hierarchical File System)
  files.
 
  REVIEW can operate as an ISPF dialog.
 
  REVIEW allows access to, and the saving of, data by data content,
  data beyond I/O errors and end-of-file markers, and data from
  deleted members of a PDS.
 
  REVIEW can convert ASCII data to EBCDIC.
 
  REVIEW can be invoked recursively by using the TSO subcommand.
  Swapping between parallel sessions allows access to any nested
  REVIEW session without requiring the termination of any other
  REVIEW session.
 
  The 'REVED' command is a way of invoking REVIEW and setting the
  default action for non-VSAM data sets to edit with REVEDIT instead
  of browse with REVIEW.  Using REVED with a sequential data set
  name immediately starts a REVEDIT session.  Using REVED with a
  partitioned data set name alters the meaning of the 'S' selection
  code to mean edit (with REVEDIT) rather than browse (with REVIEW).
 
  It is intended that the installation authorize 'REVVSAM' to allow the
  REVIEWing of VSAM components for problem diagnosis by programming
  support staff.  Normally, VSAM KSDS, ESDS, RRDS, VRRDS and LINEAR
  clusters, paths, alternate indices and their components can be
  REVIEWed without this authorization, with logical records being
  extracted from controlintervals for non-LINEAR organizations.  If a
  DB2 tablespace is REVIEWed, each row from a table in the tablespace
  will be presented as a logical record, independently from any DB2
  activity.
 
  The 'REVVSAM' command is intended to allow the browsing of physical
  VSAM components (ie. VSAM objects with VTOC entries) even with
  corrupt or missing data in a CATALOG, VVDS or CI control flags.
  APF authority is also required to REVIEW subsystem data sets.
)X Syntax -
         REVIEW  'dsname'  UNIT('unit')  VOLUME('volume')  QUICK  DATA
                        TOP('rel-addr')  SUBSYS('subsys')  XISPMODE
     or
         REVIEW  'filename'  FILE  DATA  TOP('rel-addr')  XISPMODE
     or
         REVIEW  'pathname'
 
  Required - 'dsname'
     or      'filename'  FILE
     or      'pathname'  which must begin with a slash
     or      no operands for "point and shoot".
 
  Defaults - TOP(0)
             UNIT(SYSALLDA) when VOLUME is specified.
 
  Aliases  - REV, REVED, REVVSAM
)O Operands -
)P 'dsname' or 'dsname(member)' - The data set to be examined.
   'filename' - The DDNAME allocated to the data set to be examined.
   'pathname' - The path name of an UNIX directory.
 
   If the first operand begins with a slash ('/') then it is deemed to
   specify an UNIX directory path, and no other operands are allowed.
   A specific UNIX file may be specified to directly access the data
   contained in the file.
 
   If the first operand does not begin with a slash then it is assumed
   to be a DSNAME unless it is followed by the keyword 'FILE'.
 
   Specifying the quoted dsname of 'FORMAT4.DSCB' and a VOLUME
   requests that the VTOC of that volume be REVIEWed.
 
   Specifying the file name of PARMLIB when there is no PARMLIB
   allocated on a OS/390 1.2 or later system requests that the
   logical PARMLIB service be used to REVIEW the system PARMLIB
   concatenation.
 
   If no operands are supplied then REVIEW reads the screen image
   and extracts the data set name from the part of the screen
   containing the cursor.  This works in both fullscreen and line
   modes, but not under Session Manager which updates the screen
   before REVIEW receives control.  If a data set name is not found
   then normal TSO prompting is commenced except for a recursive
   REVIEW session where a message is displayed.
 
   ISPF users may like to load
       TSO REV) MODE(FSCR
   into a PF key for easy access to "point and shoot", although
       TSO REV
   provides the same functionality since OS/390 2.10.  Similarly,
       TSO REV
   can be loaded into a REVIEW Program Function key.
 
   A member name is NOT considered part of the data set name for
   "point and shoot" purposes.
 
   A UNIX path name cannot be processed by "point and shoot".
 
))FILE     - This keyword indicates that the first operand is
             a FILENAME, not a DSNAME.  This is useful for looking
             at a temporary data set or at concatenated libraries.
             A member name may be specified in the first operand
             after the DDNAME if the DDNAME is allocated to a
             PDS.  This allows you to enter 'REVIEW SYSPROC(X) F'
             to look at member 'X' in whatever PDS is allocated to
             DDNAME 'SYSPROC'.
 
             Note that REVIEWing a concatenated sequential file may
             cause unexpected behaviour.
 
             The 'FILE' operand may be abbreviated to 'F'.
 
))VOLUME('volume') - For uncataloged data sets, the volume serial.
 
             'VOLUME' may be abbreviated to 'V'.
 
))UNIT('unit') - For uncataloged data sets, the unit type.
             This operand is ignored if 'VOLUME' is not specified.
             If 'VOLUME' is specified the default unit is 'SYSALLDA'.
             For data sets accessed via the catalog, the unit is
             determined from the catalog entry.
 
             'UNIT' may be abbreviated to 'U'.
 
))TOP('rel-addr') - This specifies a relative address within the
             data set to be considered as the logical top-of-data.
             'TOP' performs the same function as the 'NEWTOP'
             subcommand before the initial display of data.  As with
             'NEWTOP', 'rel-addr' is a 1 to 6 hexadecimal digit
             number interpreted as a TTR for disk data sets, or as
             a BLOCK IDENTIFIER for tape data sets.  When 0 is
             specified or defaulted to, no special action is taken.
             This operand is ignored for VSAM and subsystem data sets.
 
             'TOP' may be abbreviated to 'T'.
 
))TTR('rel-addr') - Same as TOP('rel-addr').
 
))SUBSYS('subsys') - For subsystem data sets, this specifies the 1-4
             character subsystem name.  The subsystem must be active
             and allow data set allocation for this to be successful.
             The subsystem data set name specified may include a
             member name in parentheses if appropriate.
             This operand is ignored if 'VOLUME' is specified.
 
             'SUBSYS' may be abbreviated to 'S'.
 
))QUICK    - This indicates that if an unquoted data set name was
             specified then the name was fully qualified apart from
             the prefix (ie. no trailing qualifier has to be added).
             This saves a search of the catalog to look for trailing
             qualifiers which is otherwise performed unconditionally
             unless the 'VOLUME' operand was specified.  This operand
             is ignored if 'VOLUME' is specified.
 
             The 'QUICK' operand may be abbreviated to 'Q'.
 
))DATA     - This operand has several uses which, in general, mean
             that control data is displayed rather than interpreted.
             Specifically, this operand has seven (7) different
             functions depending upon the type of data set being
             REVIEWed.
 
             1) For a VSAM component -
                'DATA' indicates that control interval information
                and DB2 tablespace structure is not to be interpreted
                and that physical blocks are to be shown as-is without
                extracting logical records or rows.
 
             2) For a VSAM KSDS (Key-Sequenced Data Set) cluster -
                'DATA' indicates that records are to be presented in
                RBA (Relative Byte Address) or physical order rather
                than in key-sequence order.
 
             3) For a partitioned data set -
                'DATA' indicates that the PDS directory is to be
                REVIEWed as a sequential file, thereby precluding
                access to the contents of members.
 
             4) For other disk files with fixed length records -
                'DATA' indicates that direct access logic which can
                speed up access to different parts of the file will
                not be used.  This logic is employed by default when
                RECFM=F, RECFM=FS, or RECFM=FBS unless 'DATA' is
                specified.  It is also used when RECFM=FB and the
                VTOC indicates more than 256 tracks of data unless
                'DATA' is specified.
                (If this direct access logic is used and the file
                does not use standard blocking, incorrect line
                numbers and/or I/O errors could possibly occur.
                The 'NEWTOP' subcommand (without any operand)
                can be used from within REVIEW to make REVIEW
                start behaving as if 'DATA' had been specified.)
 
             5) For a SUBSYSTEM data set with a member included -
                'DATA' indicates that a sequential file will be
                allocated to the specified member only and data from
                other members will not be accessible.  Use the 'DATA'
                operand if the subsystem data set has members but the
                subsystem does not support partitioned access.
                (Normally, if 'DATA' was not specified then data from
                the nominated member would initially be displayed,
                but data from other members could subsequently
                be displayed by using the 'MEMBER' subcommand.)
 
             6) For a ZIP file 'DATA' indicates that the ZIP directory
                will not be formatted, but that normal sequential read
                and display processing will take place.  Only DASD
                sequential data sets and UNIX files are checked for
                ZIP format by REVIEW.
 
             7) For a PCX (Paintbrush) file 'DATA' indicates that
                picture data is not to be interpreted, but that normal
                data display processing will take place.  Without the
                'DATA' operand REVIEW would attempt to display the
                picture image contained in 1-bit, 4-bit or 8-bit color
                single-plane PCX file.  (The 'FORMAT OFF' subcommand
                can be used from within REVIEW to instruct REVIEW to
                discard the picture data and therefore no longer show
                the picture image.  A subsequent 'NEWTOP' subcommand
                could be used to reactivate the image display.)  PCX
                files are recognised by data content when the first
                record is at least 80 bytes long.  The rendering of
                pictures is never attempted when REVIEW is running as
                an ISPF application.
 
             The 'DATA' operand may be abbreviated to 'D'.
 
))XISPMODE - This specifies that REVIEW
             1) is not to act as an ISPF application and is therefore
                to perform terminal I/O and subcommand processing
                natively; and
             2) is not to determine terminal capabilities from ISPF
                variables but is to issue a Read Partition (Query)
                itself if appropriate.
 
             This operand will only affect processing in an ISPF
             environment.
 
             The second function listed above relates to detecting
             the graphics capabilities of the TSO terminal.  If you
             want REVIEW to render graphic images (pictures) in an
             ISPF environment then the XISPMODE operand is required
             so that REVIEW will detect that the terminal can handle
             graphics.  Without this operand, REVIEW determines
             color, highlighting and graphics escape support from
             ISPF, does not perform terminal I/O for a Query, and
             can therefore present non-graphic file data more rapidly.
 
             The 'XISPMODE' operand may be abbreviated to 'X'.
 
))PFK      - This is not an operand, but a description of
             the Program Function Keys used by this command.
             PFK1  - HEL     PFK2  - SWAP LIST  PFK3  - END
             PFK4  - TSO     PFK5  - RFIND      PFK6  - FULL
             PFK7  - UP      PFK8  - DOWN       PFK9  - SWAP
             PFK10 - LEFT    PFK11 - RIGHT      PFK12 - RECALL
             PFK13 - TOP     PFK14 - BOTTOM     PFK15 - END
             PFK16 - SMF     PFK17 - RFIND      PFK18 - EREP
             PFK19 - UP      PFK20 - DOWN       PFK21 - HEX
             PFK22 - ASCII   PFK23 - TSO REV    PFK24 - RECALL
             These can be changed using the PFK# subcommand, but the
             changes are in effect only until the command ends unless
             a profile data set is allocated to DDNAME 'ISPPROF'.
             Example: 'PFK6 RIGHT 1' would make PFK6 'RIGHT 1'.
)S Subcommands -
 ----------------------- GLOBAL SUBCOMMANDS ---------------------------
 
 These subcommands are available in all display modes of REVIEW:
 
   HELP    - Request HELP about REVIEW and/or its subcommands.
             This will be intercepted by ISPF if REVIEW is
             running as an ISPF dialog.
   HEL     - Same as 'HELP' except ISPF will not intercept it.
   FSHELP  - Same as 'HEL'.
   FSH     - Same as 'HEL'.
   KEYS    - Display current Program Function Key values.
   ?       - Display the release of REVIEW that is in use.
   TSO     - Issue a TSO command.
   TSS     - Same as 'TSO'.
   PFK#    - Set Program Function Key '#' to a specified value.
   PFK0    - Set Program Function Keys to default values.
   RECALL  - Recall previously typed-in commands for optional
             editing and reissuing.
   RETRIEVE- Same as 'RECALL'.
   SWAP    - List or transfer control between parallel sessions.
   UP      - Scroll backwards a specified number of lines or records.
             If no operand is specified, the 'scroll' value is used.
             This is displayed in the upper right corner.
             Note that scrolling up to a previous volume or data
             set cannot be performed.
   '-'     - Same as 'UP'.
   DOWN    - Scroll forwards a specified number of lines or records.
             If no operand is specified, the 'scroll' value is used.
             This is displayed in the upper right corner.
   '+'     - Same as 'DOWN'.
   TOP     - Scroll up to the first line or record (on this volume).
   BOTTOM  - Scroll down to the last line or record.
   BOT     - Same as 'BOTTOM'.
   END     - END the command.
   CANCEL  - Same as 'END' but user profile changes are not saved.
   CAN     - Same as 'CANCEL'.
   EXIT    - Terminate the whole REVIEW session.
   RETURN  - Same as 'EXIT'.
   =X      - Same as 'EXIT' when not running as an ISPF dialog.
 
 ------------------- REVIEW-DATA MODE SUBCOMMANDS ---------------------
 
 These subcommands are available while REVIEWing file data:
 
   LEFT    - Scroll to the left a specified number of columns.
             If no operand is specified, the 'scroll' value is used.
   '<'     - Same as 'LEFT'.
   RIGHT   - Scroll to the RIGHT a specified number of columns.
             If no operand is specified, the 'scroll' value is used.
   '>'     - Same as 'RIGHT'.
   LIST    - Display the specified record number.
             (Relative record number only, not sequence numbers.)
   L       - Same as 'LIST'.
   LOC     - Same as 'LIST'.
   LOCATE  - Same as 'LIST'.
   HEX ON  - Display the screen in hexadecimal.
   HEX OFF - Display the screen in character mode.
   HEX     - If HEX currently on, turn it off.  If off, turn it on.
   FIND    - Search until the specified data or pattern is found.
   F       - Same as 'FIND'.
   FINDSMF - Search for an SMF record type and optionally sub-type.
   FS      - Same as 'FINDSMF'.
   FINDNOT - Search until the specified data or pattern is not found.
   FN      - Same as 'FINDNOT'.
   RFIND   - Repeat the previous FIND or FINDNOT operation.
   IFIND   - Same as 'RFIND'.
   RESET   - Deactivate line exclusion caused by the ALL or REST
             operand of a FIND or FINDNOT subcommand.
   RES     - Same as 'RESET'.
   FULL ON - Use full EBCDIC translation for display with using any
             APL characters.
   FULL OFF- Use the standard 3270 keyboard character set for display.
   FULL    - If FULL is on, turn it off.  If off, turn it on.
   ASCII ON- Specifies that ASCII data is being REVIEWed and that
             characters are to be translated to EBCDIC before being
             displayed.  Note that search arguments to the 'FIND' and
             'FINDNOT' commands typed in while in ASCII mode are
             translated to ASCII.
   ASCII OFF- Leave the characters to be displayed in EBCDIC.
   ASCII   - If ASCII is on, turn it off.  If off, turn it on.
   DISP T  - Display TN/T11-like EBCDIC text characters where possible.
             This is similar to 3278T in ISPF.
   DISP A  - Display APL/EBCDIC characters where possible.
             This is similar to 3278A in ISPF.
   DISP    - Toggle between DISP T and DISP A.
   DISPLAY - Same as 'DISP'.
   DIR     - Display the directory of the partitioned data set or file
             currently being REVIEWed.
   MEMBER  - Switch to a specified member within the same
             partitioned data set (or concatenation thereof)
             as the current member.
   MEM     - Same as 'MEMBER'.
   NEWTOP  - Specify a relative physical address to be considered
             as the top-of-data.  This is useful for looking past
             I/O errors, end-of-file markers, and at deleted members.
             It is also useful for directly viewing data a long way
             from the start without reading all the preceding records.
   SUBMIT  - Submit the file or MEMBER being REVIEWed.
             TSO SUBMIT is invoked.
             The data set must be sequential or partitioned,
             and have fixed length 80-byte records.
   SUB     - Same as 'SUBMIT'.
   SMF ON  - If SMF data is being examined, convert the record
             to eye-readable format.
   SMF OFF - Undo 'SMF ON'.
   SMF     - If SMF is currently on, turn it off.  If off, turn it on.
   EREP ON - If LOGREC data is being examined, convert the record
             to eye-readable format.
   EREP OFF- Undo 'EREP ON'.
   EREP    - If EREP is currently on, turn it off. If off, turn it on.
   FORMAT  - Format file data according to Assembler data definition
             source code in the nominated member of the REVFMTS file.
             VTOC entries can be formatted without the REVFMTS file.
   FMT     - Same as 'FORMAT'.
   FMT OFF - Suspend record formatting.  Disable picture rendering.
   FMT ON  - Resume record formatting.
   FMTVAR  - Manually specify the data type of a data item.
   FV      - Same as 'FMTVAR'.
   COLOR # - Set the data display color to color number '#'.
   COLOR ON- Turn on 7-color/extended highlighting mode.
             This may give errors on some older model terminals.
   COLOR OFF- Turn off 7-color/extended highlighting mode.
   COLOR   - If COLOR is on, turn it off.  If off, turn it on.
   COLOUR  - Same as 'COLOR'.
   APPEND  - Copy REVIEWed data starting from the first record shown
             on the screen to an output file.  Data is to be appended
             to any existing data in the output file.
   ADD     - Same as 'APPEND'.
   TACKON  - Same as 'APPEND'.
   COPYOUT - Copy REVIEWed data starting from the first record shown
             on the screen to an output file.  Any data in the output
             file will be overwritten and lost.
   CUTOFF  - Same as 'COPYOUT'.
   CUT     - Same as 'COPYOUT'.
   CUTOVER - Same as 'COPYOUT'.
   RTF     - COPYOUT print files with message and ASM text coloring.
   PICDATA - Cause Assembler source statements containing picture
             image data to be written to a file.
   EDIT    - Process the current data set with ISPF EDIT.
   BROWSE  - Process the current data set with ISPF BROWSE.
   VIEW    - Process the current data set with ISPF VIEW.
 
 --------------- DIRECTORY ENTRY LIST MODE SUBCOMMANDS ----------------
 
   To see the list of available subcommands and valid entry selection
   action codes when REVIEW is displaying directory entries, type
   'FSHELP' (or 'FSH' or 'HEL') and press <ENTER>.
 
   REVIEW has three (3) different directory displays.  They are:
      (1) "PDS" type - for a PDS, a data PDSE, and concatenated
          files of any sort of PDS and/or PDSE.
      (2) "PDSE" type - for an unconcatenated program object PDSE.
      (3) "UNIX" type - for UNIX directories and files in
          hierarchical file structures.
 
   The list of available subcommands and valid entry selection codes
   depends on the type of active directory display.  The 'FSHELP'
   command will cause the valid options for that display type to be
   shown.
 
   When REVIEW is running as an ISPF application, the HELP subcommand
   will be intercepted by ISPF.
 
   The default value of PF1 is intended to provide access to this
   TSO HELP member which is primarily intended to document subcomands
   available while REVIEWing file contents (as opposed to directories).
 
 These subcommands are available while REVIEWing directories:
 
   BROWSE  - Causes ISPF Browse to be invoked to process the specified
   /B        member or file.
 
   DELINK  - (For load modules only.  Not for program objects.)
   /DL       This subcommand instructs REVIEW to delink load modules
             and write object "decks" to a sequential data set.
 
             The subject PDS must have RECFM=U and must not be a PDSE.
 
             Only tagged members are delinked, unless there are no
             tagged members in which case ALL MEMBERS are delinked.
 
             REVIEW will attach the DELINKI program from CBT file 90
             to perform the delink function.  Fixed-length 80-byte
             records are written.  Note that SCATTER and OVERLAY
             programs will NOT be handled correctly.
 
             If the resultant object data is relinked, the new load
             modules may not be bit-for-bit copies of the original
             load modules, even though they should be functionally
             equivalent.  That is, reconstructed load modules may be
             reblocked and/or reordered.
 
   EDIT    - (Not for program objects.)
   /E        Causes ISPF Edit to be invoked to process the specified
             member or file.
 
   OFFLOAD - (Not for program objects or UNIX files.)
   /OFF      This subcommand instructs REVIEW to offload PDS members
             to a sequential file.  Offloading can be performed for
             a partitioned data set or concatenation with ANY record
             format.
 
             The output RECFM will be overridden to FB or VB as
             appropriate.  The output LRECL will be overridden to
             the PDS LRECL or 80, whichever is greater.  If the PDS
             has an undefined record format then fixed-length
             80-byte records will be written.
 
             Members will be offloaded in member selection list
             order, and will be preceded by an IEBUPDTE-like
             './ ADD ' control statement.  IEBUPDTE-like './ ALIAS '
             statements are also generated only if the member list is
             sorted into TTR-order, and only for aliases whose
             corresponding real member is also offloaded.  Note that
             only the first occurrence of a given member name in a
             concatenation can be offloaded.
 
             OVERLAY programs cannot be offloaded by OFFLOAD.
 
             Only tagged members are offloaded, unless there are no
             tagged members in which case ALL MEMBERS are offloaded.
 
             If the first two (2) data bytes of a record are './'
             then they will be translated to '><' on output.
 
   PDSLOAD - (Not for program objects or UNIX files.)
   /PDS      This subcommand instructs REVIEW to process sequential
             input and load the data into members of the library
             being REVIEWed, which must not be a concatenation.
 
             The user is prompted with a panel to specify the data
             set containing the sequential input, whether ISPF
             statistics are to be generated, and an optional
             member name selection mask.
 
             The input is expected to be data created by OFFLOAD
             or a compatible offload process.
 
             REVIEW will attach the PDSLOAD program from CBT file 93
             (or the REVLMOD program if the PDS RECFM=U) to perform
             the reload operation.
 
             Load modules reconstructed by this subcommand will be
             bit-for-bit copies of the original load modules.  No
             reblocking is performed for load modules.
 
             See PDSLOAD documentation for details on fixed- and
             variable-length record format combinations, and record
             truncation and extension actions.
 
   REFRESH - This subcommand instructs REVIEW to update in-storage
   /REF      directory information with the latest data from disk.
             It will reset the tag status of all entries.
 
   RESET   - This subcommand instructs REVIEW to untag all entries
   /RES      without re-reading entry list data from disk.
 
   RFIND   - Position the directory display so that the next tagged
   /IFIND    entries is the top entry shown.  If there are no entries
             tagged the number of PDS directory blocks read is shown.
 
   SEARCH  - This subcommand instructs REVIEW to search PDS or PDSE
   /FIND/F   member contents, or UNIX file contents for specified data.
             When entered, the user will be presented with a data
             entry screen in which to specify the search type, the
             data to be searched for, an optional column range where
             the data must reside, optional modifiers, and, for PDS
             and PDSE data sets, a member name mask field which can
             be used to restrict the search to members with certain
             name patterns.
 
   SELECT  - Specify a PDS or PDSE member, or UNIX file to be
   /SEL/S    browsed using REVIEW.
 
   SEQLOAD - (For PDS and PDSE data sets only.  Not for UNIX files.)
   /SEQ      This subcommand instructs REVIEW to offload PDS members
             to a sequential file.  Offloading can only be performed
             for fixed-length and variable-length record files.  The
             output RECFM will be overridden to FB or VB as
             appropriate.  The output LRECL will be overridden to
             the PDS LRECL.  Members will be offloaded in member
             selection list order.  Note that only the first
             occurrence of a given member name in a concatenation
             can be offloaded.
 
             If NO MEMBERS are tagged then ALL MEMBERS are offloaded.
 
      Note:  'SEQLOAD' performs the same processing as 'OFFLOAD'
             except that no IEBUPDTE-like control statements are
             generated, './' is not translated on output, and the
             minimum output LRECL of 80 required by 'OFFLOAD' for
             IEBUPDTE compatibility is not required by 'SEQLOAD'.
             'SEQLOAD' cannot process RECFM=U libraries.
 
   SORT    - Causes the displayed directory entries to be reordered
             according to the specified criterion.  Use 'HELP' to
             see the available sort categories.
 
   TAGFLIP - This subcommand instructs REVIEW to toggle the tag status
   /TF       for every entry in the selection list.  Tagged entries
             will become untagged, while entries which were untagged
             will be tagged.
 
   UPDATE  - (Not for program objects or UNIX files.)
   /U        Causes REVEDIT to be invoked to process the specified
             member.
 
   VIEW    - (Not for program objects or UNIX files.)
   /V        Causes ISPF View to be invoked to process the specified
             member.
 
 
 ------------- DIRECTORY ENTRY LIST MODE SELECTION CODES --------------
 
 These selection codes can be used to select an entry for processing
 from a directory entry display:
 
   /       - Selection code for selecting an entry to be REVIEWed
             from a PDS or PDSE member list or UNIX directory list
             as if the 'DATA' operand had been specified.  Normally,
             the DATA operand precludes access to PDS and PDSE member
             contents, and the DATA operand cannot be specified on
             an UNIX REVIEW request.  This selection code performs the
             same function as the 'S' selection code except that the
             DATA operand is deemed to have been specified.  This
             will prevent REVIEW from attempting to interpret data
             content such as pictures and ZIP file directories.  '/'
             and 'S' are identical when used to navigate the UNIX
             directory structure.
 
   A       - Selection code for selecting a UNIX file to be REVIEWed.
             This code instructs REVIEW to treat the file as an ASCII
             text file.  ASCII-to-EBCDIC translation is activated,
             and a new line is triggered by an ASCII LF character
             (x'0A') or an ASCII CRLF string (x'0D0A').  (EBCDIC text
             files employ the EBCDIC NL character (x'15') to trigger
             a new line.)
 
   B       - Selection code for selecting an entry to be browsed
             from a PDS or PDSE member list, or UNIX directory list.
             ISPF/PDF Browse is used.  This will only work if the
             file is acceptable to ISPF/PDF Browse and only in an
             ISPF environment.  This will not work if the 'REVIEW'
             command is issued from 'READY' mode.
 
   E       - Selection code for selecting an entry to be edited
             from a PDS or PDSE member list, or UNIX directory list.
             ISPF/PDF Edit is used.  This will only work if the
             file is acceptable to ISPF/PDF Edit and only in an
             ISPF environment.  This will not work if the 'REVIEW'
             command is issued from 'READY' mode.
 
   H       - Selection code for extracting and displaying the history
             of a program.
 
             For a load module (in a PDS) the normal display is merely
             scrolled right to show the first page of REVIEW's CESD
             formatting.  The formatted display of a CESD record can
             be up to fifteen (15) pages wide (one page width per
             symbol).  The formatted display of CESD blocks can also
             show data from IDR blocks.  The string '(go DOWN for
             data)' is shown when IDR data is not available and not
             all IDR blocks have been read.  To remedy this simply
             scroll down so that all IDR blocks are read and cached by
             REVIEW, then scroll up again to the desired CESD block.
 
             For a program object (in a PDSE or UNIX file) the Binder
             API is invoked to access IDR data which is then
             formatted and shown with one item per line.  The last
             display record will usually contain the program bind
             (link edit) IDR data, including the date and time of
             the bind.
 
   M       - Selection code for extracting and displaying the map of
             a program object.  This code is not available in the
             ordinary PDS member list display.
 
             For a program object (in a PDSE or UNIX file) the Binder
             API is invoked to access ESD or MAP data which is then
             formatted and shown with one item per line.
 
             For Version 1 Program Objects ESD class data - which is
             compatible with OS load module structure - is displayed.
 
             For other versions of Program Objects MAP class data is
             displayed.  The first field shown is the MAP entry type
             which may be indented to indicate hierarchical level.
             The MAP entry types are:
               M - Module
               C - Class
               O - Overlay segment (V1 only so shouldn't be seen)
               S - Section (within Class)
               P - Part (within Class)
               L - Label (within Section)
               X - Text extent (within Section or Part)
               E - End-of-module
 
   D       - Selection code for deleting a member from an
             unconcatenated PDS (not a PDSE) such that it can be
             restored by the R selection code.
 
   R       - Selection code for restoring a deleted member and for
             resetting the tag status of an entry.  All tags can be
             cleared by REFRESH and RESET.  REFRESH will also clear
             display entries for deleted members meaning that they
             cannot be restored by the R selection code.
 
   S       - Selection code for selecting an entry to be REVIEWed
             from a PDS or PDSE member list, or UNIX directory list.
             When a UNIX subdirectory entry is selected REVIEW treats
             this as a navigation request, and replaces the displayed
             entries with entries from the selected subdirectory.
 
             With the 'REVED' TSO command selecting a PDS member with
             'S' specifies that the member should be edited with
             REVEDIT.
 
             'S' is the default selection code, and is assumed
             when the cursor is placed on an entry selection input
             field but no character is typed.
 
   T       - Selection code for tagging an entry for later processing.
             Tagged entries are shown in high intensity or reverse
             video in the entry list.  For PDS and PDSE data sets,
             if any members are tagged, then only tagged members are
             processed during offload (see OFFLOAD and SEQLOAD),
             delink (see DELINK) and search (see SEARCH) operations.
             For UNIX files, if any entries are tagged then only
             tagged files are processed during search operations.
             Further, tagging an entry may be useful for display
             control purposes when the entry list is large as RFIND
             can be used to locate the next tagged entry.  All tags
             can be cleared by REFRESH and RESET.
 
   V       - Selection code for selecting an entry to be viewed
             from a PDS or PDSE member list.  ISPF/PDF View is used.
             This will only work if the file is acceptable to
             ISPF/PDF View and only in an ISPF environment.  This
             will not work if the 'REVIEW' command is issued from
             'READY' mode.
 ----------------------------------------------------------------------
=HELP=HEL=FSHELP=FSH
)F Function -
  The HELP subcommand provides function, syntax, and operand
  information on the 'REVIEW' command and its subcommands.
)X Syntax -
         HELP   'subcommand name'
                FUNCTION  SYNTAX  OPERANDS('keyword list')  ALL
                POSITIONAL('operand number') MSG('msgid')
  Aliases  - HEL, FSHELP, FSH
  Required - None.
  Defaults - ALL if FUNCTION, SYNTAX, and OPERANDS not specified.
  Note     - If HELP is entered without any operands a list of
             subcommands of the current command will be displayed.
  Note     - 'keyword list' is optional when OPERANDS is used.
)O Operands -
)P 'subcommand name'
           - Name of the subcommand of 'REVIEW' to be explained.
))FUNCTION - Function data is to be displayed.
))SYNTAX   - Format is to be displayed.
))OPERANDS('keyword list')
           - Operand description is to be displayed.  If
             'keyword list' is present, only those keyword descriptions
             are to be displayed.
    'keyword list'
           - Keywords separated by commas, blanks, or tabs.
))ALL      - Function, syntax, and operand descriptions are to be
             displayed.
))POSITIONAL('operand number')
           - A description of the positional operand specified is to
             be displayed.
))MSGID('msgid')
           - A description of the message identified by msgid is to be
             displayed.
=MEMBER=MEM
)F   The MEMBER subcommand switches to a different member in the same
  PDS or concatenation thereof. It is only valid for partitioned files.
)X Syntax -
     MEMBER 'membername'
 
 Alias    - MEM
 Defaults - None.
 Required - None.
)O Operands -
)P 'membername' - Specifies the name of a new MEMBER to be displayed.
=DIR
)F   The DIR subcommand causes the member list of the PDS being
  REVIEWed to be displayed.  It is only valid for partitioned files.
  Its main use is to allow access to the member list when the
  member being REVIEWed was accessed directly and an END command
  would terminate the REVIEW session.
)X Syntax -
     DIR
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=FIND=F
)F   The FIND subcommand positions the screen to a text string.
 
  FIND notes:
   1.  A search argument is required.  A single unquoted asterisk
       may be used to specify the same argument as was last used.
   2.  The first operand is always treated as the search argument.
   3.  The search argument determines whether the search is case
       sensitive, case insensitive or for a picture string, or
       for a string of hexadecimal digits byte-aligned with two
       digits per data byte.
   4.  Quotation marks are required whenever the string type needs
       to be specified.
   5.  Quotation marks are optional for the default string type
       unless the string contains one or more blank characters.
   6.  Operands specifying various keywords and/or column numbers
       may be supplied in any order after the search argument.
   7.  Searches for picture strings are not allowed in ASCII mode.
   8.  If currently in ASCII mode a text or character string specified
       in the command will be translated to ASCII.
   9.  The 'REST' and 'ALL' operands causes lines failing the match
       criteria to be excluded from view.  No place marker lines for
       this exclusion are shown.  This exclusion is cancelled by
       other FIND/FINDNOT commands, and by 'UP' (including 'UP
       MAX'), 'LIST', 'BOTTOM' and 'RESET'.  It is NOT cancelled by
       'DOWN' or 'TOP', by 'LEFT' or 'RIGHT' scrolling or by
       formatting subcommands.
)X Syntax -
     FIND 'string'  'column-1'  'column-2'
                     FIRST / NEXT / PREV / LAST / REST / ALL
                     PREFIX / SUFFIX / WORD
 
 Alias    - F
 Defaults - NEXT
 Required - 'string'
)O Operands -
)P 'string'  - Specifies the data and data type to locate.
              Quoted strings may have the string type indicated
              before the leading quote or after the trailing quote.
              String types are:
 
              C - Character for case sensitive search.
 
              T - Text for case insensitive search.
 
              X - Hexadecimal digits (byte-aligned and two to a byte).
 
              P - Picture data where special mask characters represent
                  various categories of data.  Valid picture masks are:
                     ^ - any non-blank character.
                     $ - any special character.
                     = - any character.
                     # - any decimal numeric character.
                     - - any non-numeric character.
                     @ - any alphabetic character.
                     > - any upper case alphabetic character.
                     < - any lower case alphabetic character.
                     . - any non-displayable character.
                  Non-mask characters represent themselves, with
                  matching of specific alphabetics being case
                  insensitive.
 
              Unquoted strings and strings without a string type
              specified are treated as character (type C) strings,
              which requests a case insensitive search.
 
)P 'column-1' - Optional, specifies first or only column to search.
)P 'column-2' - Optional, specifies last column where the string
              may end.
))FIRST   - Search forward from the start of the file or member.
))NEXT    - Search forward from the current location.
))PREV    - Search backward from the current location.
))LAST    - Search backward from the end of the file or member.
))REST    - Search forward from the current location
              for all occurrences, excluding lines without the string.
))ALL     - Search forward from the start of the file or member
              for all occurrences, excluding lines without the string.
))PREFIX  - Search for the string only at the start of a
              word longer than the string.  PRE for short.
))SUFFIX  - Search for the string only at the end of a
              word longer than the string.  SUF for short.
))WORD    - Search for the string only when it starts at the start
              of a word and ends at the end of a word.
=FINDSMF=FS
)F   The FINDSMF subcommand positions the screen to an SMF record
     of the requested type and optionally also subtype.  It is only
     of practical value when SMF data is being REVIEWed.
 
  FINDSMF notes:
   1.  The first or only search argument specifying the SMF record
       type must be a single unquoted decimal number between 0
       and 255 inclusive.
   2.  An optional additional numeric operand is allowed.
       It is a second search argument specifying the SMF record
       subtype and must be a single unquoted decimal number
       between 0 and 255 inclusive.
   3.  Subtype searches for system records (0 to 127) are only
       allowed for record types known to have subtypes.  Subtype
       searches for user records (128 to 255) are allowed without
       validation.
   4.  No validity checking is performed on the specified subtype.
       Hence it is possible to search for a subtype which does not
       exist.
   5.  The first operand is required.
   6.  A search will be performed even for non-SMF data.
   7.  Obviously a column operand is not applicable.
   8.  A non-numeric operand of 'FIRST', 'NEXT', 'PREV', 'LAST',
       'REST' or 'ALL' may be entered to indicate the search
       direction and starting location.
)X Syntax -
   FINDSMF 'type' 'subtype'   FIRST / NEXT / PREV / LAST / REST / ALL
 
 Alias    - FS
 Defaults - same string and direction <or> NEXT (if string specified)
 Required - 'type'
)O Operands -
)P    'type' - Specifies the decimal SMF record type.
               Unquoted decimal integer in the 0 to 255 range.
)P 'subtype' - Specifies the decimal SMF record subtype.  Optional.
               Unquoted decimal integer in the 0 to 255 range.
               eg. "FS 30 NEXT" or "FS 30"
                    will search for any type 30 SMF record.
               eg. "FS 30 NEXT 5" or "FS 30 5 NEXT" or "FS 30 5"
                    will search for a type 30 subtype 5 SMF record.
))FIRST   - Search forward from the start of the file or member.
))NEXT    - Search forward from the current location.
))PREV    - Search backward from the current location.
))LAST    - Search backward from the end of the file or member.
))REST    - Search forward from the current location
              for all occurrences, excluding other record types.
))ALL     - Search forward from the start of the file or member
              for all occurrences, excluding other record types.
=FINDNOT=FN
)F   The FINDNOT subcommand positions the screen to a text string
  which does NOT match the search argument.
 
  The notes listed under FIND also apply to FINDNOT.
)X Syntax -
   FINDNOT 'string'  'column-1'  'column-2'
                      FIRST / NEXT / PREV / LAST / REST / ALL
                      PREFIX / SUFFIX / WORD
 
 Alias    - FN
 Defaults - NEXT
 Required - 'string'
)O Operands -
)P 'string'  - Specifies the character data to mismatch.
)P 'column'  - Optional, specifies a column number to search.
              eg. "FN ' ' 70"
                   will search for a non-blank in column 70.
              eg. "FN ' ' ALL"
                   will only show records with non-blanks.
))FIRST   - Search forward from the start of the file or member.
))NEXT    - Search forward from the current location.
))PREV    - Search backward from the current location.
))LAST    - Search backward from the end of the file or member.
))REST    - Search forward from the current location
              for all occurrences, excluding other lines.
))ALL     - Search forward from the start of the file or member
              for all occurrences, excluding other lines.
=RFIND=IFIND
)F   The RFIND subcommand repeats the previous FIND or FINDNOT
  operation.  No operands are allowed.  It is expected that RFIND
  will be used as the default meaning of a PFK such as PF5 or PF17.
)X Syntax -
     RFIND
 
 Alias    - IFIND
 Defaults - Same operation, string and direction.
 Required - None.
)O Operands - None.
=RESET=RES
)F   The RESET subcommand deactivates line exclusion caused by the
  REST and ALL operands of any FIND or FINDNOT subcommand.  The
  first file data line displayed on the screen (ie. the location
  line number) remains unchanged.
)X Syntax -
     RESET
 
 Alias    - RES
 Defaults - None.
 Required - None.
)O Operands - None.
=UP=-
)F   The UP subcommand moves the screen up the specified number of
  lines; if no operand is entered, the scroll amount is used.
)X Syntax -
     UP 'amount'
 
 Aliases  - UP, -
 Defaults - Scroll amount
 Required - None.
)O Operands -
)P 'amount' - Specifies the number of lines to move the screen.
              It must be a decimal number, or 'HALF' ('H') or
              'PAGE' ('P') or 'CSR' ('C') or 'MAX' ('M').
=DOWN=+
)F   The DOWN subcommand moves the screen down the specified number
  of lines; if no operand is entered, the scroll amount is used.
)X Syntax -
     DOWN 'amount'
 
 Aliases  - DOWN, +
 Defaults - Scroll amount
 Required - None.
)O Operands -
)P 'amount' - Specifies the number of lines to move the screen.
              It must be a decimal number, or 'HALF' ('H') or
              'PAGE' ('P') or 'CSR' ('C') or 'MAX' ('M').
=LEFT=<
)F   The LEFT subcommand moves the screen left the specified number of
  columns; if no operand is entered, the scroll amount is used.
)X Syntax -
     LEFT 'amount'
 
 Aliases  - LEFT, <
 Defaults - Scroll amount
 Required - None.
)O Operands -
)P 'amount' - Specifies the number of lines to move the screen.
              It must be a decimal number, or 'HALF' ('H') or
              'PAGE' ('P') or 'CSR' ('C') or 'MAX' ('M').
=RIGHT=>
)F   The RIGHT subcommand moves the screen right the specified number
  of columns; if no operand is entered, the scroll amount is used.
)X Syntax -
     RIGHT 'amount'
 
 Aliases  - RIGHT, >
 Defaults - Scroll amount
 Required - None.
)O Operands -
)P 'amount' - Specifies the number of lines to move the screen.
              It must be a decimal number, or 'HALF' ('H') or
              'PAGE' ('P') or 'CSR' ('C') or 'MAX' ('M').
=TOP
)F   The TOP subcommand moves the screen to the first line of the
  data set or member.  It differs from 'UP MAX' when line exclusion
  is active in that line exclusion is not cancelled.  In this case,
  TOP can be used to view the results of a "FIND ALL" search from
  the start without the need to reissue the "FIND ALL" command.
)X Syntax -
     TOP
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=BOTTOM=BOT
)F   The BOTTOM subcommand moves the screen to the last line of the
  data set or member.
)X Syntax -
     BOTTOM
 
 Alias    - BOT
 Defaults - None.
 Required - None.
)O Operands - None.
=FULL
)F   The FULL subcommand specifies whether character data is displayed
  using full EBCDIC translation or only standard 3270 keyboard
  characters.  If turned on then only code-points that usually cause
  screen errors are deemed to be undisplayable.  If turned off then
  all characters not on a "standard" keyboard are deemed to be
  undisplayable.  (In character mode, undisplayable bytes are
  represented by a period ('.').)  Terminals with APL support may
  have normally unprintable characters displayed from the APL
  character set instead when in 'FULL OFF' mode, equivalent to one of
  the 3278A or the 3278T terminal display modes of ISPF, depending
  on the value set by the DISPLAY subcommand.
)X Syntax -
     FULL ON / OFF
 
 Aliases  - None.
 Defaults - opposite mode
 Required - None.
)O Operands -
))ON       - Specifies that all code points X'40' to X'FE' and some
             below X'40' are displayable characters.
))OFF      - Specifies that only keyboard and possibly APL
             characters are displayable.
=DISPLAY=DISP
)F   The DISPLAY subcommand specifies whether character data shown
  in FULL OFF mode is TEXT EBCDIC (as per TN and T11 print trains)
  or not.  This subcommand can be used to improve the readability
  of the data being REVIEWed.  The current setting is shown in the
  message area of the top screen line after the KEYS subcommand is
  issued.  The DISPLAY setting is saved in the user profile data set.
)X Syntax -
     DISPLAY A / T
 
 Alias    - DISP
 Defaults - opposite mode
 Required - None.
)O Operands -
))A        - Specifies that data code points are to be displayed
             from the standard character set if keyboard characters,
             or possibly from the graphic (APL) character set if not
             keyboard characters.  The graphic character set is not
             available on some terminals.  This mode is similar to
             the ISPF 3278A display mode.
))T        - Specifies that the "text" character set (similar to the
             TN and T11 print trains) is to be used for character
             code point interpretation.  Characters from the primary
             (standard) and alternate (graphic/APL) character sets
             may be used as appropriate in order to assist in data
             representation.  This mode is similar to the ISPF 3278T
             display mode, and is helpful in reading syntax diagrams.
=KEYS=?
)F   The KEYS subcommand displays the current Program Function Key
  values.  Each PF Key (1 to 24) has a default value which may
  be changed with the PFK command.
)X Syntax -
     KEYS
 
 Alias    - ?
 Defaults - None.
 Required - None.
)O Operands - None.
=ASCII
)F   The ASCII subcommand specifies whether character data is displayed
  using ASCII-to-EBCDIC translation or is to be treated as EBCDIC
  characters.  Only HEX-OFF displays are affected.  If turned on then
  system-supplied translation is carried out.  The internal bit
  patterns of previously entered FIND command strings are not altered,
  but FIND text strings entered while ASCII is turned on are translated
  to ASCII before search processing.  If turned on during CUTOFF or
  APPEND processing then output data will be translated from ASCII to
  EBCDIC before being written to the output file.
)X Syntax -
     ASCII ON / OFF
 
 Aliases  - None.
 Defaults - Opposite mode.
 Required - None.
)O Operands -
))ON       - Specifies that ASCII data is being REVIEWed and should
             be translated to EBCDIC before being displayed.
))OFF      - Specifies that the data is to be shown as-is in EBCDIC.
=RECALL
)F   The RECALL subcommand causes previously typed-in commands to be
  displayed in the primary input area where they may be changed if
  required and then reissued.  Note that single character input strings
  and text implied by PFK usage are not recallable.  The first command
  recalled is the most recently typed in command.  Consecutive RECALL
  commands cause increasingly older commands to be recalled.
)X Syntax -
     RECALL
 
 Alias    - The DUP character (X'1C').
 Defaults - None.
 Required - None.
)O Operands - None.
=PFK
)F   The PFK subcommand changes PFK definitions for the duration of
  the REVIEW session; to change a PFK, a subcommand such as
  'PFK6 RIGHT 1'  is entered to change PFK6 to 'RIGHT 1'.
 
  By default, the PF KEYS are defined as the following:
              PFK1  - HEL     PFK2  - SWAP LIST  PFK3  - END
              PFK4  - TSO     PFK5  - RFIND      PFK6  - FULL
              PFK7  - UP      PFK8  - DOWN       PFK9  - SWAP
              PFK10 - LEFT    PFK11 - RIGHT      PFK12 - RECALL
              PFK13 - TOP     PFK14 - BOTTOM     PFK15 - END
              PFK16 - SMF     PFK17 - RFIND      PFK18 - EREP
              PFK19 - UP      PFK20 - DOWN       PFK21 - HEX
              PFK22 - ASCII   PFK23 - TSO REV    PFK24 - RECALL
 
  Changes to the PFK assignments may be saved in the profile data set.
)X Syntax -
     PFK## 'newpfdata'
 
 Aliases  - None.
 Defaults - None.
 Required - nn and 'newpfdata'
)O Operands -
)P  ##      - Specifies the PF Key to be modified.
              ## is a 1 or 2 decimal digit number in the range of
              0 to 24 inclusive.  Numbers from 1 to 24 specify a
              particular Program Function Key.  If ## is 0 then
              all 24 PF Keys will be assigned their default values.
 
 'newpfdata'- Specifies the new subcommand for this PF Key.
=HEX
)F   The HEX subcommand specifies the display mode (character or
  hexadecimal) for data.  If HEX is entered without operands, the
  current HEX mode is switched to the opposite HEX mode.
)X Syntax -
     HEX  ON / OFF
 
 Aliases  - None.
 Defaults - Opposite mode.
 Required - None.
)O Operands -
))ON       - Specifies that data should be displayed in HEX mode.
))OFF      - Specifies that data should be displayed in character mode.
=SMF
)F   The SMF subcommand specifies whether or not SMF records are
  to be converted to eye-readable summary format or not.  It is
  only of practical use if SMF records are being REVIEWed.  If SMF
  is entered without operands the current SMF mode is switched to
  the opposite SMF mode.  Note that activating SMF formatting
  deactivates EREP formatting.
)X Syntax -
     SMF  ON / OFF
 
 Aliases  - None.
 Defaults - Opposite mode.
 Required - None.
)O Operands -
))ON       - Specifies that SMF data should be interpreted.
))OFF      - Specifies that SMF data should not be interpreted.
=EREP
)F   The EREP subcommand specifies whether or not environmental
  records (originally from SYS1.LOGREC) are to be converted to
  eye-readable summary format or not.  It is only of practical
  use if LOGREC records are being REVIEWed.  If EREP is entered
  without operands the current EREP mode is switched to the
  opposite EREP mode.  Note that activating EREP formatting
  deactivates SMF formatting.
)X Syntax -
     EREP  ON / OFF
 
 Aliases  - None.
 Defaults - Opposite mode.
 Required - None.
)O Operands -
))ON       - Specifies that EREP data should be interpreted.
))OFF      - Specifies that EREP data should not be interpreted.
=FORMAT=FMT
)F   The FORMAT subcommand causes REVIEW to format file data on the
  screen according to the data structure and types specified in
  Assembler DS and/or DC statements.  The "ruler" heading line above
  the data is used to show the names of the visible data items, and
  where room permits the starting column number of the item is shown
  directly above the data item name.
     The format of the actual file data remains unchanged when HEX ON
  is active.  When HEX OFF is current, each data item is formatted
  according to the data type in the DS or DC statement.  The main data
  types are character, hexadecimal, decimal, and binary integer.
     The Assembler statements are read from the partitioned data set(s)
  allocated to the REVFMTS file.  REVFMTS must be allocated before it
  can be used by this subcommand.  The TSO subcommand may be useful in
  helping to perform this allocation from within REVIEW.  The FMTVAR
  subcommand can be used to override the data type of a specific data
  item or variable in a dynamic fashion.
     Note that for variable-length records, the record descriptor word
  (RDW) is assumed to be present in the data structure source, even
  though the contents of the RDW are not shown by REVIEW.
     When using this subcommand (as opposed to the SMF subcommand) to
  format SMF records, the following members of SYS1.MACLIB may be
  useful, especially after a FINDSMF ALL subcommand has been issued:
     IFASMFR  - type 0                   IAZSMF49 - type 49
     IFASMFR1 - type 7                   IFASMFR5 - type 50
     IFGSMF14 - type 14 and type 15      IAZSMF45 - type 52
     IGGSMF17 - type 17                  IAZSMF45 - type 53
     IFASMFR2 - type 20                  IAZSMF45 - type 54
     IGESMF21 - type 21                  IAZSMF45 - type 55
     IOSDSMFR - type 22                  IAZSMF45 - type 56
     IAZSMF24 - type 24                  IAZSMF45 - type 57
     IAZSMF25 - type 25                  IAZSMF45 - type 58
     IAZSMF26 - type 26                  IDASMF62 - type 62
     IFASMFI6 - type 36                  IGGSMF63 - type 63
     IFASMFR4 - type 40                  IDASMF64 - type 64
     IAZSMF43 - type 43                  IGGSMF67 - type 67
     IAZSMF45 - type 45                  IGGSMF68 - type 68
     IAZSMF47 - type 47                  IGGSMF69 - type 69
     IAZSMF48 - type 48                  IFASMFR9 - type 80
 
     When REVIEWing a VTOC, the VTOC entries can be formatted by
  'FORMAT ON' even when no REVFMTS file allocation is present.
)X Syntax -
     FORMAT  'fmtname' / ON / OFF
 
 Alias    - FMT
 Defaults - Opposite mode.
 Required - None.
)O Operands -
)P 'fmtname' - Specifies the member name of the REVFMTS file which
               is to be read for data structure information in the
               form of Assembler DS and/or DC statements.  Once read
               the format is held in memory until overlayed by a
               subsequent FORMAT request or REVIEW terminates.
               Optionally, the format name may be quoted.
))ON         - Specifies that the in-storage format that was read
               due to a previous FORMAT request is to be used
               again to format the data display.
))OFF        - Specifies that special formatting of file data is
               to be suspended.
=FMTVAR=FV
)F   The FMTVAR subcommand allows a user to override the data type
  of a data item or variable in a data structure previously read
  into memory by a FORMAT subcommand.  This is sometimes useful to
  enhance the viewability of some items.
)X Syntax -
     FMTVAR  'varname'  'type'
 
 Alias    - FV
 Defaults - None.
 Required - 'varname' and 'type'
)O Operands -
)P 'varname' - Specifies the name of the data item or variable which
               is to have its data type specified.  Note that data
               items which have no name (because there was no label
               in the defining Assembler statement) cannot have their
               data type changed by this subcommand.
)P 'type'    - Specifies the data type which is to now be used to
               format the specified data item.  This operand must be
               a single character.  Valid types are:
 
               C - Characters.
                   Can be translated to EBCDIC when ASCII is ON.
                   Default for Assembler definition type C.
 
               Z - Zoned decimal.
                   Same as C but leading '0's are shown as blanks.
                   Default for Assembler definition type Z.
 
               X - Hexadecimal.
                   Each byte is shown as two hexadecimal digits.
                   Default for Assembler definition types
                   A, B, D, E, L, Q, S, V, X, and Y.
 
               P - Packed decimal.
                   Each byte is shown as two hexadecimal digits.
                   Leading zeros are shown as blanks.
                   If the last four bits of the item are a valid
                   packed decimal sign then it is shown as a
                   blank for hex A, C, E, and F to denote positive,
                   and as a '-' (minus sign) for hex B and D to
                   denote negative.
                   Default for Assembler definition type P.
 
               I - Signed binary integer.
                   The item is treated as a twos-complement binary
                   integer and converted to decimal for display.
                   A leading minus sign will be used when the first
                   bit of the item is a '1' indicating a negative
                   number.
                   The maximum length supported is four (4) bytes.
                   Default for Assembler definition types
                   F and H when two or four bytes long.
 
               U - Unsigned binary integer.
                   The item is treated as a non-negative binary
                   integer and converted to decimal for display.
                   The maximum length supported is four (4) bytes.
                   Default for Assembler definition types
                   F and H when one or three bytes long.
=COLOR=COLOUR
)F   The COLOR subcommand specifies whether or not data is to be
  displayed using 3270 extended highlighting and extended color,
  and which color is to be used for actual data display.  Colors
  for formatting mode, character mode and hexadecimal mode may be
  independently selected.  This command may cause errors on some
  terminals depending on terminal type and network definitions.
  If no operands are entered then the color mode is switched to
  the opposite mode.
 
  The data display colors may be saved in the profile data set.
)X Syntax -
     COLOR  ON / OFF / #
 
 Alias    - COLOUR
 Defaults - Opposite mode.
 Required - None.
)O Operands -
))ON      - Specifies that 3270 data stream extensions may be used.
            This may be rejected if the terminal is known to not
            support color or extended highlighting.
))OFF     - Specifies that 3270 data stream extensions may not be used.
))#       - Specifies the color to be used for actual data.
 
            If specified when formatting is active then this color is
            used when the record display is the result of formatting.
 
            Otherwise, when record formatting is OFF:
            If specified while in character mode then this color is
            used in character mode.  If specified while in hexadecimal
            mode then this color is used in hexadecimal mode.
 
            If specified while a picture image is being displayed, then
            a) the "white" pixels of a black-and-white image are shown
               in this color, or
            b) all non-black pixels of a color image displayed using
               programmed symbols are shown in this color unless the
               color number is 7 whereupon all colors are shown
               correctly, or
            c) the color number is used to control which color planes
               GDDM will be requested to display.
            The picture color is NOT saved in the profile data set,
            and defaults to 7 (neutral).
 
            # must be a single hexadecimal digit and may be rejected
            if it is known that the color is not supported by the
            terminal.  The possible colors and their codes are:
               1 - Blue                9 - Deep blue
               2 - Red                 A - Orange
               3 - Pink                B - Purple
               4 - Green               C - Pale green
               5 - Turquoise           D - Pale turquoise
               6 - Yellow              E - Grey
               7 - Neutral             F - White
                  (Codes 0 and 8 (Black) are not allowed.)
                  (Codes 9 to F are only for 16-color terminals.)
=SWAP
)F   The SWAP subcommand specifies which parallel REVIEW session
  is to become the current session.  It can also list the started
  REVIEW sessions which are eligible to become the current session.
  A parallel REVIEW session is created when the REVIEW TSO subcommand
  (not the ISPF TSO subcommand) is used to create a recursive REVIEW
  session.  The nesting order of these sessions can be changed by SWAP.
)X Syntax -
     SWAP   LIST / #
 
 Aliases  - None.
 Default  - 1
 Required - None.
)O Operands -
))LIST    - Specifies that all parallel REVIEW sessions are to be
            listed in SWAP target session number order.
))#       - Specifies the decimal number of the target REVIEW session
            that is to be swapped with the current session.  The
            current session is always session 0, so the 'SWAP 0'
            subcommand is a no-operation.
=SUBMIT=SUB
)F   The SUBMIT subcommand invokes TSO SUBMIT for the file or member
  being REVIEWed.  This subcommand is invalid unless the file is
  sequential or partitioned, and has fixed length 80-byte records.
)X Syntax -
     SUBMIT
 
 Alias    - SUB
 Defaults - None.
 Required - None.
)O Operands - None.
=TSO=TSS
)F   The TSO subcommand specifies a TSO command processor to be
  invoked from the REVIEW processor.  Commands generating an implicit
  EXEC such as SYSPROC member names and commands immediately prefixed
  by a percent sign (%) are supported.
)X Syntax -
     TSO  'command' 'operands'
 
 Alias    - TSS
 Defaults - None.
 Required - 'command'
)O Operands -
)P 'command'  - Specifies a TSO command to be executed.
 
)P 'operands' - Specifies any desired operands for this TSO command.
=LIST=L=LOC=LOCATE
)F   The LIST subcommand repositions the screen to the relative line
  number entered.
)X Syntax -
     LIST 'lineno'
 
 Aliases  - L, LOC, LOCATE
 Defaults - None.
 Required - lineno
)O Operands -
)P 'lineno' -  Specifies the relative line number to which the screen
               is to be positioned.
=NEWTOP
)F   The NEWTOP command allows the specification of an arbitrary
  relative physical address to be considered as the top-of-data.
  This is useful for viewing data beyond I/O errors and end-of-file
  markers that would normally be encountered, for viewing the
  contents of deleted PDS members, and for resynchronizing the
  REVIEW session with a file that is currently being updated.
  It is also useful for directly viewing data a long way from the
  start of the file without reading all the preceding records.
)X Syntax -
     NEWTOP 'rel-addr'
 
 Aliases  - None.
 Defaults - 0
 Required - None.
)O Operands -
)P 'rel-addr' - a 1 to 6 hexadecimal digit number specifying a
     relative physical address.  For disk files this specifies a
     relative TTR.  For tape files this specifies a relative block
     number.  A value of zero specifies that the real top-of-data
     address is to be used and previously acquired end-of-file and
     record location information is to be dropped.
  ** Note that 0 is the only operand allowed when viewing VSAM
     files, and in this case NEWTOP merely performs a CLOSE
     followed by an OPEN to drop all pre-loaded buffers.
  ** Also note that the subcommand sequence
            HEX ON
            RIGHT MAX
            HEX OFF
     can be used to display the relative physical address of each
     logical record in NEWTOP operand format.  For spanned records
     the address of the last segment is shown.
=APPEND=ADD=TACKON
)F   The APPEND subcommand causes REVIEW to write records from the
  data being REVIEWed to an output data set.  Records are written
  consecutively from the first record shown on the screen until
  the requested number of records has been copied or end-of-file is
  reached.  When complete, the first record AFTER the copied records
  is made the new top-of-screen record.  The APPEND subcommand
  performs the same processing as the COPYOUT subcommand except that
  the output file is opened for EXTEND, so that data is appended to
  any data already residing in the output file.
  ** Note that PDS members cannot be extended.
     A major advantage that the COPYOUT and APPEND subcommands provide
  is the ability to copy data that has been rendered inaccessible by
  I/O errors.  Data beyond an I/O error can be REVIEWed with the use
  of the NEWTOP subcommand.  Any data that can be REVIEWed can be
  copied and saved to an intermediate file for data reclamation.
     Another feature of COPYOUT and APPEND is selectivity.  Not only
  can records be selected by manually scrolling to a specific record
  and cutting a specific number of records, but selectivity can be
  automated with FIND ALL and FINDNOT ALL.  Only records eligible
  for display can be copied, so FIND ALL and FINDNOT ALL subcommands
  can be used to exclude records based on their data content not
  only from display but also from offloading by COPYOUT and APPEND.
     Further, data copied from an ASCII file can be converted to EBCDIC
  by specifying ASCII ON before commencing the COPYOUT operation.
     The user will be prompted with a data entry panel to specify the
  output data set.
)X Syntax -
     APPEND 'record-count'
 
 Aliases  - ADD, TACKON
 Defaults - copy to end-of-file.
 Required - None.
)O Operands -
)P 'record-count'
              - Specifies the number of records to be copied.
                If not specified then data is copied until end-of-file
                is reached or forced by an I/O error.
=COPYOUT=CUTOFF=CUT=CUTOVER
)F   The COPYOUT subcommand causes REVIEW to write records from the
  data being REVIEWed to an output data set.  Records are written
  consecutively from the first record shown on the screen until
  the requested number of records has been copied or end-of-file is
  reached.  When complete, the first record AFTER the copied records
  is made the new top-of-screen record.  The COPYOUT subcommand
  performs the same processing as the APPEND subcommand except that
  the output file is opened for OUTPUT, so that data already residing
  in the output file is overwritten and lost.
     A major advantage that the COPYOUT and APPEND subcommands provide
  is the ability to copy data that has been rendered inaccessible by
  I/O errors.  Data beyond an I/O error can be REVIEWed with the use
  of the NEWTOP subcommand.  Any data that can be REVIEWed can be
  copied and saved to an intermediate file for data reclamation.
     Another feature of COPYOUT and APPEND is selectivity. Not only
  can records be selected by manually scrolling to a specific record
  and cutting a specific number of records, but selectivity can be
  automated with FIND ALL and FINDNOT ALL.  Only records eligible
  for display can be copied, so FIND ALL and FINDNOT ALL subcommands
  can be used to exclude records based on their data content not
  only from display but also from offloading by COPYOUT and APPEND.
     Further, data copied from an ASCII file can be converted to EBCDIC
  by specifying ASCII ON before commencing the COPYOUT operation.
     The user will be prompted with a data entry panel to specify the
  output data set.
)X Syntax -
     COPYOUT 'record-count'
 
 Aliases  - CUTOFF, CUT, CUTOVER
 Defaults - copy to end-of-file.
 Required - None.
)O Operands -
)P 'record-count'
              - Specifies the number of records to be copied.
                If not specified then data is copied until end-of-file
                is reached or forced by an I/O error.
=RTF
)F   The RTF subcommand performs the same function as COPYOUT
  but only processes print files.  The output data is a Rich Text
  Format (RTF) file containing pagination data from carriage control
  characters, and print coloring information assigned by REVIEW.
     The color information in the RTF file will broadly match that
  shown by REVIEW on the screen.  Colors are determined by message
  identifier recognition and by Assembler listing syntax highlighting.
     A file being REVIEWed is deemed a print file if it is job output
  being processed by REVOUT, or if it has A or M carriage control
  in the record format.  Further, the maximum logical record length
  must be less than 256.
     The output file is suitable for a text transfer to a distributed
  platform system where it can be transformed into other file types
  such as Adobe's Portable Document Format (PDF).
     The user will be prompted with a data entry panel to specify the
  output data set.  Consult the information for COPYOUT above for
  further details.  ** Note that there is no RTF version of APPEND.
)X Syntax -
     RTF 'record-count'
 
 Aliases  - None.
 Defaults - copy to end-of-file.
 Required - None.
)O Operands -
)P 'record-count'
              - Specifies the number of records to be copied.
                If not specified then data is copied until end-of-file
                is reached or forced by an I/O error.
=PICDATA
)F   The PICDATA subcommand causes REVIEW to write fixed-length
  80-byte records to a specified data set.  The records are Assembler
  source statements containing data necessary to recreate the image
  which is currently being displayed by REVIEW.  The user will be
  prompted to supply a data set name.
     This subcommand is only valid when REVIEW can display the image
  contained in a picture file.  Its use provides a mechanism for
  exporting an image into other application source code.
     If REVIEW is displaying the picture with programmed symbols,
  the file will contain the data necessary to load the symbols
  (18 bytes per format type-1 symbol) plus data regarding symbol
  placement in the picture.
     If REVIEW issues calls to GDDM to display the picture, the
  data will contain the bitmaps passed to GDDM via GSIMG calls.
     Data for blue, red and green planes will be written for color
  images, whereas only one plane is used for black-and-white images.
)X Syntax -
     PICDATA
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=BROWSE
)F   The BROWSE subcommand requests ISPF to BROWSE the data set or
  member currently being REVIEWed.  This subcommand is only valid
  when the current data set is an MVS DASD data set.  It is not
  valid for an UNIX file or a data set being treated as a ZIP file.
  The ISPF request will only succeed in an ISPF environment.
)X Syntax -
     BROWSE
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=EDIT
)F   The EDIT subcommand requests ISPF to EDIT the data set or
  member currently being REVIEWed.  This subcommand is only valid
  when the current data set is an MVS DASD data set.  It is not
  valid for an UNIX file or a data set being treated as a ZIP file.
  The ISPF request will only succeed in an ISPF environment.
)X Syntax -
     EDIT
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=VIEW
)F   The VIEW subcommand requests ISPF to VIEW the data set or
  member currently being REVIEWed.  This subcommand is only valid
  when the current data set is an MVS DASD data set.  It is not
  valid for an UNIX file or a data set being treated as a ZIP file.
  The ISPF request will only succeed in an ISPF environment.
)X Syntax -
     VIEW
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=CANCEL=CAN
)F   The CANCEL subcommand performs the same processing as the END
  subcommand without saving the REVIEW/FSHELP user profile to disk.
  The REVIEW/FSHELP user profile (which contains data display colors,
  scrolling amount and 24 PF Key values) is normally only rewritten to
  disk at the END of a REVIEW session if it has been changed during
  that session.  If a member list has not been displayed in a session
  then the REVIEW session is terminated without saving the user
  profile.  If a member list has been shown it is reshown but the user
  profile is no longer considered to have been altered, even though the
  profile "in-core" still has the changes applied to it.  Changing the
  profile at this stage and exiting will cause all accumulated profile
  changes for the REVIEW session to be saved to disk unless another
  CANCEL is issued.
)X Syntax -
     CANCEL
 
 Alias    - CAN
 Defaults - None.
 Required - None.
)O Operands - None.
=END
)F   The END subcommand terminates the REVIEW command, or, if in
  member selection mode, returns to the member selection list.
  The member selection list may be bypassed with the EXIT subcommand.
)X Syntax -
     END
 
 Aliases  - None.
 Defaults - None.
 Required - None.
)O Operands - None.
=EXIT=RETURN==X
)F   The EXIT subcommand terminates the REVIEW command, bypassing
  the member selection list.
)X Syntax -
     EXIT
 
 Aliases  - RETURN, =X
 Defaults - None.
 Required - None.
)O Operands - None.
