-\INMR01      &      ORIGNODE      ORIGUID      DESTNODE      DESTUID      20140
130003349       ?\INMR02          IEBCOPY        Y                         &
                             GREG  REVIEW  DATA \INMR02          INMCOPY
Y                                      \INMR03        Y                &
 {  _      &            "8    Vs                                     n Q&
 
 
 
                            MINIZIP#  $$README                     <  GREG
$REVC370                        GREG      LOADCLST                        GREG
    LOADHELP                        GREG      LOADLOAD                        GR
EG      MINIZIP#           "     "        GREG                              OFFL
MOD            |   |        GREG      OFFLSAMP           |   |        GREG
REVLMOD          r ^   ?     3  GREG      REVLSAMP               |        GREG
    REVNOTES         q              GREG        REVPROF
                                     0//GREGO    JOB (),G.PRICE,CLASS=A,MSGCLASS
=X,MSGLEVEL=(1,1),                    //             NOTIFY=GREG
                                      //*
                                      /  /*  SAMPLE JOB STREAM TO PERFORM IN BAT
CH WHAT AN 'OFFLOAD'                    //*  SUBCOMMAND OF 'REVIEW' DOES INTERAC
TIVELY ON TSO, WHICH                    //*  IS TO SEQUENTIALISE LOAD MODULES IN
TO FIXED-LENGTH 80-BYTE                 //*  RECORDS S  O THEY CAN BE RESTORED V
IA A CARD READER OR OTHER                 //*  MEANS NOT REQUIRING THE TRANSMIT
AND RECEIVE COMMANDS OF TSO/E.            //*
                                          //*  RUN 'OFFLMOD' WITHOUT   PARAMETER
S/OPERANDS IN BATCH OR TSO                  //*  TO GET OPERAND/PARM DESCRIPTION
.  NOTE THAT FILES CAN BE                   //*  REFERENCED BY DDNAME OR DSNAME.
                                            //*
                                              //STEP1   EXEC PGM=OFFLMOD,PARM='/
/DDN:SYSUT1 //DSN:GREG.FB80.DATA'             //STEPLIB  DD  DSN=GREG.REVIEW.LOA
D,DISP=SHR                                    //STDOUT   DD  SYSOUT=*
                                                //SYSUT1   DD  DSN=GREG.UTIL.LOA
D,DISP=SHR                                      //
                                                //SYSUT2   DD  DSN=GREG.FB80.DAT
A,DISP=SHR                                                                  /***
*****************************************************************            * O
FFLMOD: V1.0, (c) 2003 Jason Winter - but with unrestricted use *            *
                                                                *              *
           Compile with the JCC C compiler for MVS.               *            *
                                                                  *            *
    Components of design from the public domain REVIEW command.   *            *
************  *******************************************************/
 
#include <stdio.h>
#include <string.h>
  #include <time.h>
 
  #define maxdirent 2500 /* Enlarge as req  uired, space for member names */
 
    #define endmark "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    #define SKIP_MASK ((int) 0x1F)
      #define ALIAS_MASK ((int) 0x80)
      #define TTRN_MASK ((int) 0x60)
 
        static long pdscount;   /* How many members found */
 
        static char * pdsalias; /* 1=alias, 0=member */
          static char * pdsname;  /* member/alias name */
          static int  * pdsttrz;  /* location of member */
          static int  * pdsttrs;  /* stow ttrs data */
          static char   * pdsinfo;  /* stow info & ttrn */
            static int  * pdsdlen;  /* raw stow data length */
            static char * pdsdata;  /* raw stow data */
 
              /* readdir: loads a pds directory into the buffers above */
              static long readdir (char * pds) {
                  long   i;
                    long   j;
                    FILE * fh;
                    char   line [256];
                      char   tstr [9];
                      char * a;
                      char * name;
                        short  b;
                                      short  count;
                                      short  skip;
                                      long   quit;
                                        int    info_byte;
                                        short  l;
 
                                        fh = fopen   (pds, "rb,klen=0,lrecl=256,
blksize=256,recfm=u,force");              if (fh == NULL) {
                                              printf ("Error opening directory i
n %s\n", pds);                                return (1);
                                            };
 
                                            fread (&l, 1, 2, fh); /* Skip U leng
  th */
                                              pdscount = 0;
 
                                                quit = 0;
                                                while (fread (line, 1, 256, fh)
== 256) {
                                                      a = &(line [2]);
                                                      b = ((short *)&(line [0]))
 [0];                                                 count = 2;
                                                        while (count < b) {
 
                                                            if (memcmp (a, endma
rk, 8) == 0) {                                                    quit = 1;
                                                                  break;
                                                              };
 
                                                                name = a;
                                                                a += 8;
 
                                                                  pdsttrz [pdsco
unt] = (((int *)a) [0]) & 0xFFFFFF00;                             a += 3;
 
                                                                    pdsinfo [pds
count] = *a;                                                        info_byte =
(int)(*a);                                                          a++;
 
 
    skip = (info_byte & SKIP_MASK) * 2;
 
    if ((info_byte & ALIAS_MASK) == 0) {
 
          pdsalias [pdscount] = 0;
 
            i = (info_byte & TTRN_MASK) >> 5;
            j = 0;
            while (j < i) {
                pdsttrs   [(pdscount * 3) + j] =
                      (((int *)a) [j]) & 0xFFFFFF00;
                  j++;
              };
                while (j < 3)
                    pdsttrs [(pdscount * 3) + j++] = -1;
 
              } else
                  pdsalias [pdscount] = 1;
 
                if (skip)
                    memcpy (&(pdsdata [pdscount * 62]), a, skip);
                pdsdlen [pdscount] = skip;
 
                  strncpy (tstr, name, 8);
                  j = 7;
                    while (tstr [j] == ' ') j--;
                    tstr [++j] = 0;
 
                    strcpy (&(pds  name [pdscount * 9]), tstr);
 
                      if (++pdscount == maxdirent) {
                          quit = 1;
                            break;
                        };
 
                          a += skip;
 
                          count += (8 + 4 + skip);
                        };
 
                                      if (quit) break;
 
                                        fread (&l, 1, 2, fh); /* Skip U length *
/                                   };
 
                                    fclose (fh  );
                                      return (0);
                                  };
 
                                    /* dumpstart: creates the member header */
                                    static void dumpstart (FILE * fh, char * mem
ber) {                                  long i;
                                          char dline [81];
 
                                          sprintf (dline, "./ ADD NAME=%s", memb
er);                                        i = strlen (dline);
                                            while (i != 80) dline [i++] = ' ';
 
                                              fwrite (dline, 1, 80, fh);
                                          };
 
                                            /* dumpalias: creates a header for a
n alias to a member */                      static void dumpalias (FILE * fh, ch
ar * member) {                                  long i;
                                                char dli  ne [81];
 
                                                  sprintf (dline, "./ ALIAS NAME
=%s", member);                                    i = strlen (dline);
                                                    while (i != 80) dline [i++]
= ' ';
                                                    fwrite (dline, 1, 80, fh);
                                                  };
 
                                                  /* dumpnote: creates a marker
for TTR directory inf  ormation */                  static void dumpnote (FILE *
 fh, char n) {                                          long i;
                                                        char dline [81];
 
                                                                        sprintf
(dline, "./ NOTE%c", n);                                                i = strl
en (dline);                                                             while (i
 != 80) dline [i++] = ' ';
                                                                          fwrite
 (dline, 1, 80, fh);                                                  };
 
                                                                        /* dumps
eq: converts U style records into FB80 records */                       static v
oid dumpseq (FILE * fh, char * data, long len) {                            long
 i;                                                                           lo
ng lenleft;                                                                   ch
ar dline [81];
 
memset (dline, ' ', 80);
dline [80] = 0;
 
  i = len;
  fwrite (&i, 1, 4, fh);
 
    lenleft = 76;
 
    i = 0;
      while (len != 0) {
 
          if (len >= lenleft) {
                fwrite (&(data [i]), 1, lenleft, fh);
                len -= lenleft;
                i += lenleft;
            } else {
                  fwrite (&(data [i]), 1, len, fh);
                  fwrite (dline, 1, lenleft - len, fh);
                  len = 0;
                };
 
                lenleft = 80;
              };
          };
 
            /* dumpstow: creates the stow data header */
                          static void dumpstow (FILE * fh, long m) {
                              long i;
                              char dline [81];
 
                                sprintf (dline, "./ STOW DATA=");
 
                                i = strlen   (dline);
                                  while (i != 80) dline [i++] = ' ';
 
                                  dline [13] = pdsinfo [m  ];
 
                                    if (pdsdlen [m])
                                        memcpy (&(dline [14]), &(pdsdata   [m *
62]), pdsdlen [m]);
                                      fwrite (dline, 1, 80, fh);
                                  };
 
                                    /* dumpend: creates the end record */
                                    static void dumpend (FILE * fh) {
                                          long   i;
                                          char   dline [81];
                                          time_t ltime;
                                            struct tm * today;
                                            char   tstr [40];
 
                                            time (&l  time);
                                              today = localtime (&ltime);
                                              strftime (tstr, 39, "%H:%M ON %y/%
m/%d", today);
                                                sprintf (dline,
                                                    "./ ENDUP       \"REVIEW\" P
DS MEMBER OFFLOAD AT %s", tstr);                i = strlen (dline);
                                                  while (i != 80) dline [i++] =
' ';
                                                  fwrite (dline, 1, 80, fh);
                                                };
 
                                                long main (int argc, char * argv
 [], char * argp []) {                                long   i;
                                                                    long   mptr
= 0;                                                                int    note;
                                                                    int    h;
                                                                      FILE * fh;
                                                                      FILE * fho
;                                                                     char   mem
ber [9];                                                              char   fil
  e [260];                                                              short  l
;                                                                       long   o
fflded = 0;                                                             long   o
ffalia = 0;                                                               long
 argument;                                                                char *
 lmod;
                                                                            if (
argc < 3) {
printf ("You must supply a pds-name and seq-name:\n");
printf ("OFFLMOD //DSN:SYS1.LOADLIB //DSN:SYS  2.REVLMOD {MEMBERS}\n");
  printf ("Produces SYS2.REVLMOD containing SYS1.LOADLIB programs.\n");
  printf ("Optional MEMBER name(s) offloads the matching member(s).\n");
  printf ("Any alias's are automatically offloaded with the   member.\n");
    return (1);
};
 
  lmod = (char *)malloc (32761);
 
  pdsalias = (char *)malloc (maxdirent);
  pdsname   = (char *)malloc (maxdirent * 9);
    pdsttrz = (int *)malloc (maxdirent * 4);
    pdsttrs = (int *)malloc (maxdirent * 3 * 4);
    pdsinfo = (char *)mal  loc (maxdirent);
      pdsdlen = (int *)malloc (maxdirent * 4);
      pdsdata = (char *)malloc (maxdirent * 62);
 
        if ((lmod == NULL) ||
            (pdsalias == NULL) ||
            (pdsname == NULL) ||
              (pdsttrz == NULL) ||
              (pdsttrs == NULL) ||
              (pdsinfo == NULL) ||
                (pdsdlen == NULL) ||
                              (pdsdata == NULL)) {
 
                              printf ("Unable to allocate buffers, no memory lef
t.\n");
                                if (lmod) free (lmod);
 
                                if (pd  salias) free (pdsalias);
                                  if (pdsname) free (pdsname);
                                  if (pdsttrz) free (pdsttrz);
                                  if (pdsttrs) free (  pdsttrs);
                                    if (pdsinfo) free (pdsinfo);
                                    if (pdsdlen) free (pdsdlen);
                                    if (pdsdata) free (pdsdata);
 
                                      return (1);
                                  };
 
                                    sprintf (file, "%s", argv [1]);
                                    strupr (file);
 
                                      if (readdir (file) != 0) {
                                          return (1);
                                        };
 
                                        sprintf (file, "%s", argv [2]);
                                        strupr (  file);
 
                                          fho = fopen (file, "wb");
                                          if (fho == NULL) {
                                                printf ("Unable to open output s
equential file: %s\n", file);                   return (1);
                                            };
 
                                              if (argc >= 4) {
                                                  strncpy (member, argv [3], 8);
                                                    member [8] = 0;
                                                    strupr (member);
                                                    argument = 4;
                                                  } else {
                                                                    member [0] =
 0;                                                             };
 
                                                                  while (1) {
 
                                                                      while ((mp
tr < pdscount) && (pdsalias [mptr]))                                      mp  tr
++; /* Skip alias entries here */
                                                                        if (mptr
 < pdscount) {
                                                                              if
 ((member [0]) && /* searching for a particular member? */
  (strcmp (member, &(pdsname [mptr * 9])) != 0)) {
 
    /* not the one */
    mptr++;
    continue; /* then go back to the top   of the main loop */
  };
                                                                              }
else {
 
    if ((member [0]) &&
        (argument < argc)) {
 
          strncpy (member, argv [argument++], 8);
          member [8] = 0;
            strupr (member);
 
            mptr = 0;
            continue;
          };
 
          break;
        };
 
        sprintf (file, "%s(%s)", argv [1], &(pdsnam  e [mptr * 9]));
          strupr (file);
          fh = fopen (file, "rb");
          if (fh != NULL) {
 
                              dumpstart (fho, &(pdsname [mptr * 9]));
 
                              h = _fileno (fh); /* Get low-level io handle for J
CC's __note */
                                while (fread (&l, 1, 2, fh) == 2) {
 
                                      /*(For WRITING: - not done in this program
, */                                  /* use __note after all bytes have been wr
itten) */
                                      /* For READ  ING: */
                                        /* The best place to NOTE is somewhere
                                           in the middle of a U type record */
                                        note = (__note (h) & 0xF  FFFFF00);
 
                                          fread (lmod, 1, l, fh); /* read the re
cords data */
                                            dumpseq (fho, lmod, l); /* dump the
record */
                                            i = 0;        /* Check if this recor
d requires a N  OTE... */                     while (i < 3) {
                                                  if (note == pdsttrs [(mptr * 3
) + i]) break;                                    i++;
                                                };
                                                if (++i != 4) dumpnote (fho, i +
 '0');                                      };
 
                                              fclose (fh);
 
                                              dumpstow (fho  , mptr);
 
                                                printf ("Added member: %s\n", &(
pdsname [mptr * 9]));                           offlded++;
 
                                                  i = 0;
                                                  while (i < pdscount) {
 
                                                        if ((pdsalias [i]) &&
                                                            (pdsttrz [i] == pdst
trz [mptr])) {
                                                                            dump
alias (fho, &(pdsname [i * 9]));
                                                                            dump
stow (fho, i);
                                                                              pr
intf ("Added alias:  %s\n", &(pdsname [i * 9]));                              of
falia++;                                                                    };
                                                                            i++;
                                                                        };
 
                                                                      } else {
 
                                                                          printf
 ("Can't open input fi  le: %s\n", file);                               };
 
                                                                        if (memb
er [0])                                                                       mp
tr = pdscount;  /* signal to look for next member */                      else
                                                                              mp
tr++;           /* just keep offloading members */                      };
 
                                                                        dumpend
(fho);
                                                                          fclose
 (fho);
                                                                          printf
 (  "Finished processing %d file(s), %d alias(s) (of %d).\n",
    offlded, offalia, pdscount);
                                                                            free
 (lmod);
                                                                              fr
ee (pdsalias);                                                                fr
ee (pdsname);
free (pdsttrz);
free (pdsttrs);
free (pdsinfo);
  free (pdsdlen);
  free (pdsdata);
 
    return (0);
|{           &};
                                        REVLMOD  TITLE ' R E V L M O D '
                                        ****************************************
*******************************         *
                              *         *           REVLMOD - RECONSTRUCT LOAD M
ODULES INTO PROGRAM PDS         *         *                   FROM CARD IMAGE IN
PUT WRITTEN BY REVIEW           *         *
                                *         **************  **********************
***********************************         *
                                            *        WRITTEN BY: GREG PRICE
                                            *        DATE WRITTEN: JUNE   6 1999
 FOR REVIEW R31.0.                            *        DATE UPDATED: AUGUST 14 2
003 FOR REVIEW R37.0.                         *        ATTRIBUTES: RE-ENTRANT. (
AMODE AND RMODE MUST BE 24.)                  *        PURPOSE: REVIEW CAN OFFLO
AD LOA  D MODULES TO A SEQUENTIAL               *                 FILE WITH FIXE
D-LENGTH 80-BYTE RECORDS.  THIS                 *                 PROGRAM CAN RE
AD THIS SEQUENTIAL FILE TO                      *                 RECONSTRUCT TH
E ORIGINAL LOAD MODUL  ES.                        *                 ALTHOUGH THI
S PROGRAM CAN BE CONSIDERED TO BE                 *                 BATCH UTILIT
Y, IT IS ANTICIPATED THAT IT WILL                 *                 NORMALLY BE
INVOKED FROM THE REVIEW TSO COMMAND                 *                 PROCESSOR
VIA THE =PDSLOAD SUBCOMMAND OF REVIEW.              *                 IT WAS WRI
TTEN TO PERMIT THE TRANSFER OF LOAD                 *                 MODULES BE
TWEEN DISCONNECTED OS-FAMILY MAINFRAME                *                 SYSTEMS
WHICH MAY NOT HAVE THE TSO/E RECEIVE AND              *                 TRANSMIT
 COMMANDS AVAILABLE, SO THAT THE AUTHOR               *                 DOES NOT
 HAVE TO MAINTAIN OBJECT DECK COLLECTIONS             *                   TO SUP
PORT OLD MVS AND NON-IBM MVS-LIKE SYSTEMS.              *        WARNING: ALTHOU
GH THE SEQUENTIAL INPUT MAY LOOK LIKE INPUT             *                 FOR IE
BUPDTE, IT IS NOT SUITABLE FOR PROCESSING               *                 BY THE
   IEBUPDTE OR PDSLOAD PROGRAMS.  THE DATA                *                 FORM
AT IS KNOWN ONLY BY THE MEMRDWRT ROUTINE OF               *                 THE
REVIEW2 CSECT AND THIS PROGRAM.  THE CONTROL              *                 STAT
EMENT FORMAT IS   KNOWN ONLY BY THE REVOFFLD                *                 CS
ECT AND THIS PROGRAM.                                       *
                                                            *        LOG OF CHAN
GES:                                                          *  R35.3  20MAR01
- CHANGES TO ALLOW ASSEMBLY BY IFOX00.        GP@HC           *  R37.0  14AUG03
- ADD SERIALIZATION LOGIC BASED ON LINKAGE EDITOR.            *
- USE DEVICE MAXIMUM INSTEAD OF 32760.          GP@P6                    EJECT
                                                                              R0
       EQU   0                                                                R1
       EQU   1                                                                R2
       EQU   2                                                                R
 3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU     6
  R7       EQU   7
  R8       EQU   8
  R9       EQU   9
    R10      EQU   10
    R11      EQU   11
    R12      EQU   12
      R13      EQU   13
      R14      EQU   14
      R15      EQU   15
                 EJECT
        ************************************************************
        *                                                          *
          *         INITIALIZATION                                   *
          *                                                          *
          ************************************************************
                     SPACE
            REVLMOD  CSECT
            *REVLMOD AMODE 24                  AMODE 31 WOULD LIMIT REVLMOD TO M
VS          *REVLMOD RMO  DE 24
                       USING PSA,0
                       USING REVLMOD,R15
                       B     @LOADMOD
                         DROP  R15                 REVLMOD
                         DC    AL1(23),CL23'REVLMOD R37.0 &SYSDATE '
                @SIZE    DC    0F'0',AL1(2),AL3(@DATAL  )
                           DC    C'<DYN'             FLAG DYNAMIC AREA SUBPOOL A
ND SIZE           @LOADMOD STM   R14,R12,12(R13)
                           LR    R11,R15
                             USING REVLMOD,R11
                             LR    R2,R1               COPY PLIST ADDRESS
                             L     R0,@SIZE
                               GETMAIN R,LV=(0)
                                             LR    R4,R1
                                             LA    R5,@BUFFER-@DATA    NO NEED T
O CLEAR BPAM BUFFER                          SLR   R15,R15             PROBABLY
A NO-OP                                        MVCL  R4,R14              CLEAR W
ORKING-STORAGE                                 ST    R13,4(,R1)
                                               ST    R1,8(,R13)
                                               LR      R13,R1
                                                 USING @DATA,R13
                                                 MVI   MEMSEL,C'*'         SELEC
T ALL MEMBERS BY DEFAULT                         MVC   MEMSEL+1(7),  MEMSEL
                                                   L     R1,0(,R2)           POI
NT TO PARM                                         LH    R0,0(,R1)           GET
 LENGTH OF PARM                                    LTR   R0,R0
                                                     BZ    PARMX
                                                     LA    R1,2(,R1)           P
OINT TO PARM DATA                                    CH    R0,=H'3'            I
S PARM LONG ENOUG  H FOR NEW?                          BL    PARMM
 NO, BYPASS COMPARE                                    CLC   0(3,R1),=C'NEW'
 IS IT NEW, AS PER IEBUPDTE?                           BNE   PARMM
 NO                                                      LA    R1,3(,R1)
   YES, TOLERATE BUT IGNORE                              SH    R0,=H'3'
                                                         BZ    PARMX
                                                           CLI   0(R1),C','
                                                           BNE   PARMERR
                                                           LA    R1,1(,R1)
     POINT PAST COMMA                                      SH      R0,=H'1'
                                                             BZ    PARMX
                                                    PARMM    CH    R0,=H'3'
       LONG ENOUGH FOR S(X ?                                 BL    PARMERR
         NO                                                    CLC   0(2,R1),=C'
S('      IS IT S( ?                                            BNE   PARMERR
         NO, BRANCH                                            LA    R1,2(,R1)
         YES  , POINT PAST PAREN                                 SH    R0,=H'2'
                                                                 LA    R15,MEMSE
L                                                                LA    R14,MEMSE
L+8                                                       PARMML   CLI   0(R1),C
')'                                                                BE    PARMX
                                                                   CR    R15,R14
             IS MEMBER NAME TOO LONG?                                BNL   PARMM
IG             YES, IGNORE EXTRA CHARACTERS
   MVC   0(1,R15),0(R1)      COPY ONE BYTE OF MEMBER NAME
   LA    R15,1(,R15)
   LA    R1,1(,R1)                                                        P  ARM
MIG  BCT   R0,PARMML
     B     PARMX                                                            PARM
ERR  WTO   'REVLMOD - INVALID PARAMETER IGNORED',ROUTCDE=(11)               PARM
X    DS      0H
       EJECT                                                                  **
**********************************************************                    *
                                                           *
*         INITIALIZE THE DCBS                              *
*                                                          *
****************************************  ********************
           SPACE
           MVC   SYSIND(SYSINL),SYSINS
           MVC   SYSUT2D(SYSUT2L),SYSUT2S
             MVC   UT2DECBD(UT2DECBL),UT2DECBS
             TM    0(R2),X'80'         ANY DDNAME OVERRIDES?
             BO    PARM2X              NO, ONLY ONE PARAMETER
               L     R1,4(,R2)           POINT TO SECOND PARAMETER
               LA    R1,0(,R1)           ENSURE ADDRESS FORMAT
               LTR   R1,R1               ZERO POINTER?
                 BZ    PARM2BAD            YES, NO OVERRIDES SUPPLIED
                 CLI   0(R1),0             LENGTH LESS THAN 256?
                 BNE   PARM2BAD            NO
                 TM      1(R1),7             MULTIPLE OF EIGHT?
                   BNZ   PARM2BAD            NO
                   CLI   1(R1),8*5           SYSIN SLOT PRESENT?
                   BL    PARM2X                NO
                     CLI   34(R1),0   (8*4+2)  SYSIN OVERRIDE SPECIFIED?
                     BE    PARM2I              NO
                     MVC   SYSIND+40(8),34(R1) YES  , COPY IT INTO DCB
              PARM2I   CLI   1(R1),8*9           SYSUT2 SLOT PRESENT?
                       BL    PARM2X              NO
                       CLI   66(R1),0   (8*8+2)  SYSUT2 OVERRIDE   SPECIFIED?
                         BE    PARM2X              NO
                         MVC   SYSUT2D+40(8),66(R1)  YES, COPY IT INTO DCB
                         B     PARM2X              DDNAME OVERRIDE PROCESSING CO
  MPLETE          PARM2BAD WTO   'REVLMOD - INVALID DDNAME OVERRIDE PARAMETER IG
NORED',  +                                     ROUTCDE=(11)
                                PARM2X   DS    0H
                                         SPACE 2
                                *  *********************************************
**************                    *
             *                    *         PERFORM SERIALIZATION
             *                    *
               *                    ********************************************
****************                             SPACE
                                             LA    R12,SYSUT2D           POINT T
O THE OUTPUT DCB                               USING IHADCB,R12
                                               L     R5,DCBEXLST         SAVE EX
IT LIST                                        LA    R0,JFCB
                                                 ST    R0,WORK+4
                                                 MVI   WORK+4,128+X'07'    READ
JFCB EXIT                                        LA    R0,WORK+4
                                                   ST    R0,DCBEXLST
                                                   MVI   WORK,X'80'
                                                   RDJFCB ((R12)),MF=(E,WORK)
                                                     ST    R5,DCBEXLST         R
ESTORE EXIT LIST                                     TM    JFCBIND2,JFCSHARE   S
HARED DATA SET?                                      BNO   SHAREOK             N
O, EXCLUSIVE ACCESS IN OS IMAGE                        OI    FLAGS,SHRDSET
 YES, FLAG THIS                               SHAREOK  L     R4,PSATOLD
 POINT TO THE CURRENT TCB                              L     R4,TCBTIO-TCB(,R4)
 POINT TO THE TIOT                                     USI  NG TIOT1,R4
                                                         LA    R4,TIOENTRY
   POINT TO THE FIRST TIOT ENTRY                         DROP  R4
   TIOT1                                                 USING TIOENTRY,R  4
                                                           SLR   R5,R5
     CLEAR FOR INSERT                             DDNAMELP CLC   TIOEDDNM,DCBDDN
AM   FOUND THE OUTPUT ENTRY?                               BE    GOTDDENT
     YES                                                     ICM   R5,1,TIOELNGH
       NO, GET THE ENTRY LENGTH                              BZ    ENQOKAY
       MISSING DD - LET OPEN CATCH IT                        AR    R4,R5
       POINT TO THE NEX  T TIOT ENTRY                          B     DDNAMELP
         GO CHECK IT                                  GOTDDENT ICM   R5,7,TIOEFS
RT       POINT TO THE UCB                                      BZ    ENQOKAY
         CANNOT BE PERMANENT DASD DATA   SET                     DROP  R4
           TIOENTRY                                                            C
LI   18(R5),X'20'        VERIFY DASD DEVICE CLASS                              B
NE   ENQOKAY             CANNOT BE PERMANENT DASD DATA SET                     S
T    R5,$UCBADDR         SAVE DASD UCB ADDRESS
 TM    17(R5),X'20'        SHARED DASD?
 BNO   ENQORNOT            NO, NO NEED FOR HARDWARE RESERVE
 OI    FLAGS,SHRDASD       YES, FLAG THIS
 MVC     RESD,RESS           LOAD RESERVE TEMPLATE
   RESERVE (SYSIEWLP,JFCB,E,44,SYSTEMS),RET=NONE,UCB=$UCBADDR,   +
         MF=(E,RESD)
   B     ENQOKAY               RESERVE NOW PERFORMED                        ENQO
RNOT TM    FLAGS,SHRDSET       SHARED DATA SET?
     BNO   ENQOKAY             NO, NO NEED FOR HARDWARE RESERVE
     MVC   ENQD,ENQS           LOAD   ENQ TEMPLATE
       ENQ   (SYSIEWLP,JFCB,E,44,SYSTEM),RET=NONE,MF=(E,ENQD)                 EN
QOKAY  DS    0H                  SERIALIZATION NOW DONE
       SPACE 2
************************************************************
*                                                          *
*         OPEN THE DCBS                                    *
  *                                                          *
  ************************************************************
           SPACE
             DEVTYPE DCBDDNAM,$DEVTYPE
             MVI   WORK,X'80'
             OPEN  (SYSIND,INPUT),MF=(E,WORK)
             MVI     WORK,X'80'
               OPEN  (SYSUT2D,OUTPUT),MF=(E,WORK)
               SPACE 2
      *************************  ***********************************
        *                                                          *
        *         ACQUIRE INPUT AND WRITE MEMBER CONTENTS          *
        *                                                            *
          ************************************************************
                   SPACE
                   MVC   MAXBLKSI,DCBBLKSI   REMEMBER MAXIMUM   BLOCK SIZE
            READLOOP EQU   *
                     SLR   R3,R3               NOTHING TO PROCESS YET
                     SLR   R10,R10             CLEAR ERROR NUMBER
              DATALOOP EQU   *
                                     GET   SYSIND,INREC
                                     LA    R0,80               GET MAXIMUM DATA
LENGTH IN RECORD                     LA    R5,INREC            POINT TO START OF
 POSSIBLE DATA                         LTR   R3,R3               CURRENTLY PROCE
SSING A BLOCK?                         BP    COPYCARD            YES
                                       CLC   =C'./',INREC        CONTROL RECORD?
                                       BE      CNTLREC             YES
                                         TM    FLAGS,CALIAS        PROCESSING AL
IAS?                                     BO    NOSTOW              YES, MISSING
STOW                                     LA    R10,1                 SET ERROR N
UMBER                                      TM    FLAGS,CADD+CSTOW    CURRENTLY P
ROCESSING A MEMBER?                        BNM   DATAEROR            NO, DATA FO
RMAT ERROR SO QUIT                         LA    R4,@BUFFER          NO, R  ESET
 OUTPUT BUFFER CURSOR                        LA    R10,2               SET ERROR
 NUMBER                                      ICM   R3,15,INREC         GET LENGT
H OF NEW BLOCK                               BNP   DATAEROR            NONSENSIC
AL, SO QU  IT                                  LA    R10,3               SET ERR
OR NUMBER                                      CH    R3,MAXBLKSI         GREATER
 THAN MAXIMUM?                                 BH    DATAEROR            YES, SO
 QUIT                                            STH   R3,DCBBLKSI         SET B
LOCK LENGTH FOR ACCESS METHOD                    LA    R0,76               GET M
AXIMUM DATA LENGTH IN RECORD                     LA    R5,INREC+4          POINT
 TO START OF POSSIBLE DATA                COPYCARD LR    R2,R3               NO,
 GET LENGTH OF THIS BLOCK                          CR    R2,R0               IS
BLOCK WITHIN THIS CARD IMAGE?                      BNH   GOTDATLN            YES
                                                   LR      R2,R0               N
O, SO GET LENGTH WHICH IS                   GOTDATLN SR    R3,R2               U
PDATE BYTES TO GO FOR THIS BLOCK                     BCTR  R2,0                D
ECREMENT FOR EXECUTE                                 EX    R2,PUTCHUN  K
 MOVE INPUT DATA TO OUTPUT BUFFER                      LA    R4,1(R2,R4)
 ADJUST OUTPUT BUFFER CURSOR                           LTR   R3,R3
 NEED MORE DATA FOR THIS BLOCK?                        BP    DATALOOP
 YES  , GO GET SOME                                      TM    FLAGS,CSEL
   IS THIS MEMBER SELECTED?                              BZ    READLOOP
   NO, SKIP THE WRITE                                    WRITE UT2DECBD,SF,SYSUT
2D,@BUFFER,'S',MF=E                                        CHECK UT2DECBD
     WAIT FOR THE WRITE                                    NOTE  SYSUT2D
     GET THE WRITTEN BLOCK ADDRESS                         ST    R1,TTRZ
     SAVE IT FOR LATER                                       B     READLOOP
       GO GET MORE INPUT                                          PUTCHUNK MVC
 0(0,R4),0(R5)       <<< EXECUTED >>>                                      SPACE
 2                                                                **************
**********************************************                    *
                                               *                    *         PR
OCESS CONTROL STATEMENTS                       *                    *
                                               *                    ************
**  **********************************************                             S
PACE                                                                  CNTLREC  L
A    R10,4               SET ERROR NUMBER                                      C
LI   INREC+2,C' '          DOES THE CONTROL STMT HAVE A LABEL?
 BNE   DATAEROR            YES, DATA FORMAT ERROR SO QUIT
 CLC   INREC+3(9),=C'ADD NAME='
 BE    CTLADD
   CLC   INREC+3(6),=C'ENDUP '
   BE    CTLENDUP
   LA    R10,1               SET ERROR NUMBER
     TM    FLAGS,CADD          CURRENTLY PROCESSING A MEMBER?
     BZ    DATAEROR            NO, DATA FORMAT ERROR SO QUIT
     CLC   INREC+3(10),=C'STOW DATA='
       BE    CTLSTOW
       TM    FLAGS,CALIAS        PROCESSING ALIAS?
       BO    NOSTOW              YES, MISSING STOW
         CLC   INREC+3(6),=C'NOTE1 '
         BE    CTLNOTE1
         CLC   INREC+3(6),=C'NOTE2 '
         BE      CTLNOTE2
           CLC   INREC+3(11),=C'ALIAS NAME='
           BE    CTLALIAS
           LA    R10,5                 SET ERROR NUMBER
             B     DATAEROR            UNKNOWN CONTROL STATEMENT SO QUIT
             SPACE
    CTLADD   MVC   PDS2NAME,INREC+12   COP  Y MEMBER NAME
               OI    FLAGS,CADD          ./ ADD PROCESSED
               NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH NEW MEMBER
               NI    FLAGS,255-CSEL      RESET SELECTION   FLAG
                 MVI   TTR1+3,X'FF'        FLAG TTR1 NOT YET SET
                 MVI   TTR2+3,X'FF'        FLAG TTR2 NOT YET SET
                 LA    R3,STOWENTY         POINT TO MEMBER NAME
                   LA    R4,MEMSEL           POINT TO SELECTION MASK
                                 LA    R0,8                GET MEMBER NAME LENGT
H                       MASKLOOP CLI   0(R4),C'*'          GENERIC CHARACTER MAT
CH?                              BE    MASKNEXT            YES, THIS CHARACTER M
ATCHES                             CLI   0(R4),C'?'          GENERIC CHARACTER M
ATCH?                              BE    MASKNEXT            YES, THIS CHARACTER
 MATCHES                           CLI   0(R4),C'%'          GENERIC CHARACTER M
ATCH?                              BE      MASKNEXT            YES, THIS CHARACT
ER MATCHES                           CLC   0(1,R4),0(R3)       SPECIFIC CHARACTE
R MATCH?                             BNE   READLOOP            NO, UNSUCCESSFUL
MATCH                       MASKNEXT LA    R3,1(,R3)             POINT TO NEXT B
YTE OF ITEM                            LA    R4,1(,R4)           POINT TO NEXT B
YTE OF MASK                            BCT   R0,MASKLOOP         TEST NEXT BYTE
                              MASKEXIT OI    FLAGS,CSEL          SELEC  T THIS M
EMBER                                    B     READLOOP
                                         SPACE
                                CTLNOTE1 MVC   TTR1,TTRZ           COPY NOTE DAT
A FOR   DIRECTORY ENTRY                    MVI   TTR1+3,0            FLAG TTR1 S
ET                                         B     READLOOP
                                           SPACE
                                    CTLNOTE2 MVC   TTR2,TTRZ           COPY NOTE
 DATA FOR DIRECTORY ENTRY                    MVI   TTR2+3,0            FLAG TTR2
 SET                                         B     READLOOP
                                               SPACE
                                      CTLSTOW  MVC   PDS2INDC(63),INREC+13
                                               TM    PDS2INDC,PDS2NTTR   ANY NOT
ED TTRS TO SUPPLY?                             BZ      NOTESOK             NO
                                                 LA    R10,6               SET E
RROR NUMBER                                      CLI   TTR1+3,0            FIRST
 NOTED TTR SET?                                  BNE   DATAEROR              NO,
 MISSING STATEMENT SO QUIT                         MVC   PDS2TTRT,TTR1       COP
Y FIRST NOTED TTR                                  CLI   TTR2+3,0            SEC
OND NOTED TTR SET?                                 BNE   NOTESOK             NO
                                                     MVC   PDS2TTRN,TTR2       C
OPY SECOND NOTED TTR                        NOTESOK  NI    FLAGS,255-CALIAS
                                                     OI    FLAGS,CSTOW         .
/ STOW PROCESSE  D                                     TM    FLAGS,CSEL
 IS THIS MEMBER SELECTED?                              BZ    READLOOP
 NO, SKIP THE STOW                                     STOW  SYSUT2D,STOWENTY,R
                                                         LTR   R15,R15
   WAS THE MEMBER REPLACED?                                            BZ    REA
DLOOP            YES, CONTINUE                                         CH    R15
,=H'8'           WAS THE MEMBER ADDED?                                 BE    REA
DLOOP            YES, CONTINUE                                           LA    R
10,7               SET ERROR NUMBER                                      B     D
ATAEROR                                                                  SPACE
                                                                CTLALIAS MVC
 PDS2NAME,INREC+14   COPY ALIAS MEMBER NAME                                LA
 R10,8               SET ERROR NUMBER                                      TM
 FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?                         BNO
 DATAEROR              NO, CAN'T PROCESS ALIAS YET                           NI
   FLAGS,255-CSTOW     NEED A STOW TO FINISH ALIAS                           OI
   FLAGS,CALIAS        ./ ALIAS PROCESSED                                    B
   READLOOP                                                                    S
PACE                                                                  CTLENDUP T
M    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?                         B
O    ALLDONE             YES, ALL DONE                                  NOSTOW
 LA    R10,8               SET ERROR NUMBER
 SPACE 2                                                                ********
****************************************************                      *
                                                     *                    *
    HANDLE ERROR CONDITIONS                          *                    *
                                                     *                      ****
********************************************************
     SPACE                                                                  DATA
EROR LR    R1,R10              COPY ERROR NUMBER
     BCT  R  R1,0                CONVERT TO INDEX NUMBER
       SLL   R1,6                MULTIPLY BY 64 FOR INDEX
       LA    R1,ERRMSGS(R1)      POINT TO ERROR MESSAGE
       LA    R0,64                 GET MESSAGE LENGTH
         TPUT  (1),(0),R           SHOW MESSAGE ON TERMINAL
         LA    R10,2000(,R10)      GET PROGRAM RETURN CODE
         ST    R10,RETCODE         SAV  E FOR TERMINATION
           SPACE 2
  ************************************************************
  *                                                            *
    *         CLOSE THE DCBS                                   *
    *                                                          *
    ************************************************************
               SPACE
                    ALLDONE  MVI   WORK,X'80'
                             CLOSE (SYSIND),MF=(E,WORK)
                             MVI   WORK,X'80'
                               CLOSE (SYSUT2D),MF=(E,WORK)
                               SPACE 2
                      **********************************************************
**                    *
   *                    *         TERMINATE SERIALIZATION
   *                    *
   *                    ***************************  ***************************
******                             SPACE
                                   TM    FLAGS,SHRDASD       NEED A HARDWARE REL
EASE?                              BNO   DEQENQ              NO
                                     MVC   DQRD,DQRS           LOAD DEQ TEMPLATE
                                     DEQ   (SYSIEWLP,JFCB,44,SYSTEMS),RET=NONE,U
CB=$UCBADDR,       +                       MF=(E,DQRD)
                                       B     DEQOKAY
                              DEQENQ   TM    FLAGS,SHRDSET       ANYTHING TO DEQ
?                                      BNO   DEQOKAY             NO
                                         MVC   DQED,DQES           LOAD DEQ TEMP
LATE                                     DEQ   (SYSIEWLP,JFCB,44,SYSTEM),RET=NON
E,MF=(E,DQED)                   DEQOKAY  DS    0H
                                           SPACE 2
                                  **********************************************
**************                    *
             *                    *         TE  RMINATE
               *                    *
               *                    ********************************************
****************                             SPACE
                                               L     R2,RETCODE
                                               DROP  R12                 IHADCB
                                               LR    R1,R13
                                                 L     R13,4(,R13)
                                                 L     R0,@SIZE
                                                 FREEMAIN R,LV=(0),A=(1)
                                                   LR    R15,R2
                                                   L     R14,12(,R13)
                                                   LM    R0,R12,20(R13)
                                                     BR    R14
                                                                   SPACE 2
                                                          **********************
**************************************                    *
                                     *                    *           DCB OPEN E
XIT                                    *                    *
                                       *                    ********************
****************************************                             SPACE
                                                                       USING IHA
DCB,R1                                                        UT2OPNX  ICM   R3,
3,DCBBLKSI       IS OUTPUT BLOCK SIZE ZERO?                            BPR   R14
                   NO, RETURN IF POSITIVE                                MVC   D
CBBLKSI,DTMAXBLK   YES, SET IT TO MAXMIMUM                               BR    R
14                 RETURN                                                DROP  R
13,R1              @DATA  , IHADCB                                         TITLE
 '  R E V L M O D   -   C O N S T A N T S  '                      SYSUT2XL DC
 0F'0',X'85',AL3(UT2OPNX)                                                  SPACE
                                                                    RESS     RES
ERVE (SYSIEWLP,0,E,44,SYSTEMS),RET=NONE,UCB=0,MF=L                  RESL     EQU
   *-RESS                                                           ENQS     ENQ
   (SYSIEWLP,0,E,44,SYSTEM),RET=NONE,MF=L                             ENQL     E
QU   *-ENQS                                                           DQRS     D
EQ   (SYSIEWLP,0,44,SYSTEMS),RET=NONE,UCB=0,MF=L                      DQRL     E
QU   *-DQRS                                                             DQES
 DEQ   (SYSIEWLP,0,44,SYSTEM),RET=NONE,MF=L                             DQEL
 EQU   *-DQES
 SPACE
 PRI  NT NOGEN
   SPACE                                                                  SYSINS
   DCB   DDNAME=SYSIN,MACRF=(GM),DSORG=PS,RECFM=FB,LRECL=80,     +
         EODAD=CTLE  NDUP                                                   SYSI
NL   EQU   *-SYSINS
     SPACE                                                                  SYSU
T2S  DCB   DDNAME=SYSUT2,MACRF=(W)  ,DSORG=PO,RECFM=U,EXLST=SYSUT2XL          SY
SUT2L  EQU   *-SYSUT2S
       SPACE
       WRITE UT2DECBS,SF,MF=L
UT2DECBL EQU   *-UT2DECBS
         SPACE
         DS    0D
  SYSIEWLP DC    CL8'SYSIEWLP'
                         LTORG
                         SPACE
                ERRMSGS  DS    0D
                           DC    CL64'DATA FORMAT ERROR - MISSING ./ ADD CONTROL
 STATEMEN+                       T            '
                           DC    CL64'DATA FORMAT ERROR - NON-POSITIVE LENGTH IN
DICATOR E+                         NCOUNTERED   '
                             DC    CL64'DATA FORMAT ERROR - LENGTH INDICATOR VAL
UE LARGER T+                       HAN BLKSIZE  '
                             DC    CL64'DATA FO  RMAT ERROR - CONTROL STATEMENT
FOUND TO HAVE+                        A LABEL     '
                               DC    CL64'DATA FORMAT ERROR - UNRECOGNISED CONTR
OL STATEMENT +                                    '
                                 DC    CL64'DATA FORMAT ERROR - MISSING ./ NOTE1
 CONTROL STATEM+                       ENT          '
                                 DC    CL64'STOW ERROR - CHECK DIRECTORY CAPA  C
ITY              +                                    '
                                   DC    CL64'DATA FORMAT ERROR - MISSING ./ STO
W CONTROL STATEME+                       NT           '
                                     SPACE
                                     DS    0D
                                     DC    CL16' END OF REVLMOD '
                                       DS    0D                  END OF CSECT
                                       TITLE '  R E V L M O D   -   D S E C T S
 '                            @DATA    DSECT
                                       DS      18F                 REGISTER SAVE
AREA                            WORK     DS    D
                                $DEVTYPE DS    2F                  OUTPUT FROM D
EVTYPE                          DTMAXBLK EQU   *-2,2                 MAXIMUM BLO
CK SIZE FOR DEVICE                INREC    DS    CL80
                                  SYSIND   DS    0F,XL(SYSINL)
                                  SYSUT2D  DS    0F,XL(SYSUT2L)
                                    UT2DECBD DS    0F,XL(UT2DECBL)
                                    $UCBADDR DS    A                   UCB ADDRE
SS OF OUTPUT DEVICE                 MEMSEL   DS    CL8
                                      STOWENTY DS    CL80
                                               ORG   STOWENTY
                                               IHAPDS PDSBLDL=NO,DSECT=NO
                                                 ORG
                                                      TTRZ     DS    F
         NOTE SAVE AREAS                              TTR1     DS    F
                                                      TTR2     DS    F
                                                      R  ETCODE  DS    F
                                                        MAXBLKSI DS    H
                                                        FLAGS    DS    X
                                                        CADD     EQU     X'80'
             PROCESSED ./ ADD CONTROL STMT                CSTOW    EQU   X'40'
             PROCESSED ./ STOW CONTROL STMT               CALIAS   EQU   X'20'
             PROCESSED ./ ALIAS CONTROL STMT              CSEL     EQU   X'10'
               SELECT THIS MEMBER                           *        EQU   X'08'
               SPARE                                        *        EQU   X'04'
               SPARE                                        SHRDASD  EQU   X'02'
               OUTPU  T DASD IS SHARED                        SHRDSET  EQU   X'0
1'               OUTPUT DISP=SHR                              ENQDEQWA DS    0F
                 RESERVE/ENQ/DEQ PARAMETER LIST               RESD     DS    XL(
RESL)                                                                    ORG   E
NQDEQWA                                                         ENQD     DS    X
L(ENQL)                                                                  ORG   E
NQDEQWA                                                           DQRD     DS
 XL(DQRL)                                                                  ORG
 ENQDEQWA                                                         DQED     DS
 XL(DQEL)                                                                    ORG
                                                                    JFCB     DS
   0F                                                                        IEF
JFCBN LIST=NO                                                       @BUFFER  DS
     0D                  BPAM WRITE BUFFER ADDRESS                    @BUFLEN  E
QU   32760               BPAM WRITE BUFFER LENGTH                     @DATAL   E
QU   @BUFFER-@DATA+@BUFLEN                                                     S
PACE
 DCBD  DSORG=PO,DEVD=DA
 SPACE
 IHAPSA DSECT=YES
   SPACE
   IKJTCB DSECT=YES,LIST=NO
   SPACE                                                                    MYTI
OT   DSECT
     IEFTIOT1
     SPACE 2
       END   REVLMOD                                                           {
                          //GREGL   JOB  CLASS=A,NOTIFY=GREG,MSGCLASS=X
                          //*
                          //*  SAMPLE JOB TO RECONSTRUCT LOAD MODULES OFFLOADED
BY THE                    /  /*  'REVIEW' TSO COMMAND OR THE 'OFFLMOD' UTILITY.
                            //*
                            //*  PROGRAM OBJECTS AND SEGMENT OVERLAY PROGRAMS CA
NNOT BE PROCESSED.          //*
                              //STEP1   EXEC PGM=REVLMOD
                              //SYSUT2   DD  DSN=SYS1.PPLIB,DISP=SHR
                              //*  NOTE: CHOOSE 2 CHARACT  ERS FOR DLM WHICH DO
NOT APPEAR IN                   //*        THE FIRST 2 COLUMNS OF ANY DATA RECOR
D.                              //SYSIN    DD  DATA,DLM=@$
                                 ....    binary 80-byte records produced   by RE
VIEW Offload or OFFLMOD                                       TIR:     {REVPROF
                  a ^         REVIEW                   y     k   a
       a       B         E         [ ! %   h p w Q         ZPF01     HELP ZPF02
    SPLIT ZPF03     END ZPF04     RETURN ZPF05     RFIND ZPF0  6     RCHANGE ZPF
07     UP ZPF08     DOWN ZPF09     SWAP ZPF10     LEFT ZPF11     RIGHT ZPF13
 HELP ZPF14     SPLIT ZPF15     END ZPF16     RETURN ZPF17     RFIND ZPF18     R
CHANGE ZPF19     UP ZPF20     DOWN ZPF21     SWAP ZPF22     LEFT ZPF23     R  IG
HT ZPFCTL    USER ZPF12     RETRIEVE ZPF24     RETRIEVE SCIN      PAGE ZKLUSE
 Y ZVERMOD   43000 ZSAREAP   SES ZSAREA1   SES ZHTOP     ISR00003 ZHINDEX   ISR9
1000 PSCR      PAGE ZSAREA2   SES INITFLAG  0 CMDFLAG   0 CMDDIR    OFF NETVFLAG
  0          [           Z 9             ^ > =       A }     9
       B N U 2           + * ,   g o w   E M T 2                   c l s   J  4
     KEYLISTN  REVKEYL KEY1DEF   HELP KEY1LAB   Help KEY1ATR   LONG KEY2DEF   SP
LIT KEY2LAB   Split KEY2AT  R   LONG KEY3DEF   END KEY3LAB   End KEY3ATR   LONG
KEY4DEF   TSO KEY4LAB   TSO KEY4ATR   LONG KEY5DEF   IFIND KEY5LAB   Ifind KEY5A
TR   LONG KEY6DEF   ICHANGE KEY6LAB   ICHANGE KEY6ATR   LONG KEY7DEF   UP KEY7LA
B   Up KEY7ATR   LONG KEY8DEF   DOWN KEY8  LAB   Down KEY8ATR   LONG KEY9DEF   S
WAP KEY9LAB   Swap KEY9ATR   LONG KEY10DEF  LEFT KEY10LAB  Left KEY10ATR  LONG K
EY11DEF  RIGHT KEY11LAB  Right KEY11ATR  LONG KEY12DEF  CRETRIEV KEY12LAB  CRetr
iev KEY12ATR  LONG KEY13DEF  TOP KEY13LAB  Top KEY13ATR    LONG KEY14DEF  BOTTOM
 KEY14LAB  Bottom KEY14ATR  LONG KEY15DEF  END KEY15LAB  End KEY15ATR  LONG KEY1
6DEF  SMF KEY16LAB  SMF KEY16ATR  LONG KEY17DEF  IFIND KEY17LAB  Ifind KEY17ATR
 LONG KEY18DEF  EREP KEY18LAB  EREP KEY18ATR  LONG KEY19DEF  UP KEY19LA  B  Up K
EY19ATR  LONG KEY20DEF  DOWN KEY20LAB  Down KEY20ATR  LONG KEY21DEF  HEX KEY21LA
B  Hex KEY21ATR  LONG KEY22DEF  ASCII KEY22LAB  ASCII KEY22ATR  LONG KEY23DEF  T
SO REV) MODE(FSCR KEY23LAB  TSO REV KEY23ATR  SHORT KEY24DEF  CRETRIEV KEY24LAB
 Cretr  iev KEY24ATR  LONG KEYHELPN  ISRHELPEYHELPN  ISRHELP
                      Using zip and unzip:
                      --------------------
 
                      T  he usage message is displayed when either program is ex
ecuted as a batch EXEC  or as a TSO command processor (in TSO "alloc fi(stdout)
da(*)" is required.)
                        Usage : minizi  p -abco zipfile files_to_add
                          -a opens files_to_add in text-translated mode and conv
erts EBCDIC to ASCII.     -b zips files without length indicators (use with V,VB
 or U datasets only).     -c chooses the alternate co  de-page 037 instead of th
e default 1047.             -o specifies that all files_to_add are Partition Org
anised datasets and         that all members/alias's in each dataset should be z
ipped.                      SYSUT1 and zipfile need to be allocated   as F/FB wi
th any LRECL and BLKSIZE.
                              Usage : miniunz -aclv zipfile dest_file file_to_ex
tract                         -a opens files in text-translated mode and convert
s A  SCII to EBCDIC.            -c chooses the alternate code-page 037 instead o
f the default 1047.             -l or -v only lists statistics and files in the
zip archive.                    If no file_to_extract is specified, all files ar
e extracted and                   the destination file will have (member) automa
tically appended.
                                  Usage Notes:
                                    ------------
 
                                    minizip has additional options "-0" to "-9"
which select how aggressively the   algorithms c  heck for better compression.
"-0" stores the files with no         compression.
 
                                      All specified filenames d  efault to DD st
yle names, to specify full pathnames    of MVS datasets use the following conven
tion: //DSN:SYSX.DATASET.NAME
                                        If the DD name or DSN refers to a Part
itioned Organised dataset, then member    names can be added as usual eg. "MYDDN
AME(MYMEMBER)"  When zipping with the     "-o" PO dataset option, do not specify
 a member name as a file_to_add.  When    unzipping all members of a zipfile by
not specifyin  g a file_to_extract, do      not specify a member as the dest_fil
e.
                                            When zipping files on the MVS platfo
rm, a comment is added with   each zipped     file to indicate the dataset forma
t from where the data came.  This includes                 }an initial character
 which describes any conversion 'A' is ASCII, 'E' is        for the default of n
o conversion or EBCDIC data, and 'B' stands for the         special zip mode whe
re only the raw dataset data is stored.  The initial        c  haracter is follo
wed by a comma (",") then the recfm and lrecl.  The 'B' mode  is not really for
general use - but programmers may find it handy.
                                                              eg.
                                                                "E,FB80"
                                                                "A,VB8192"
 
                                                                  When listing t
he contents of zip files with -v in miniunz, the comment, if it   exists, is dis
played after the filename within braces "{" & "}".
                                                                    When using t
ext-translated mode, MSDOS style CRLF text files are converted to   just LF when
 unzipping files.  This conversion is not performed in reverse when zipping text
 files on the MVS platform - the resultin  g text files must be later converted
(eg. by using WinZip and a program like WordPad) if the Windows       platform i
s the target.  Note *nix platforms expect only LF characters in       text files
.
                                                                        There is
 no provision in minizip to UPDATE an existing zip file.
                                                                          Enjoy
your free zip and unzip for MVS.                                          Jason
Winter.
 
                    //LOADHELP JOB CLASS=A,MSGCLASS=X,COND=(0,NE),NOTIFY=HERC01
                    //*
                    //*  THIS JOB COPIES THE REVIEW/RFE TSO HELP MEMBERS INTO SY
S2.HELP             /  /*
                      //*  CHANGE HERC01 TO THE RELEVANT HIGH LEVEL QUALIFIER
                      //*
                      //STEP1   EXEC   PGM=IEBCOPY
                        //SYSPRINT DD  SYSOUT=*
                        //SYSUT1   DD  DSN=HERC01.REVIEW.HELP,DISP=SHR
                        //SYSUT2   DD  DSN=SYS2.HEL  P,DISP=SHR
                          //SYSIN    DD  *
                            COPY INDD=((SYSUT1,R)),OUTDD=SYSUT2
                            COPY INDD=((SYSUT2,R)),OUTDD=SYSUT2   O
                            /*
                            //
                                                      //LOADLOAD JOB CLASS=A,MSG
CLASS=X,COND=(0,NE),NOTIFY=HERC01                     //*
                                                      //*  THIS JOB COPIES THE R
EVIEW/RFE TSO PROGRAMS INTO SYS2.CMDLIB               /  /*
                                                        //*  CHANGE HERC01 TO TH
E RELEVANT HIGH LEVEL QUALIFIER                         //*
                                                        //STEP1   EXEC   PGM=IEB
COPY                                                      //SYSPRINT DD  SYSOUT=
*                                                         //SYSUT1   DD  DSN=HER
C01.REVIEW.LOAD,DISP=SHR                                  //SYSUT2   DD  DSN=SYS
2.CMD  LIB,DISP=SHR                                         //SYSIN    DD  *
                                                              COPY INDD=((SYSUT1
,R)),OUTDD=SYSUT2                                             COPY INDD=((SYSUT2
,R)),OUTDD=SYSUT2   O                                         /*
                                                              //
 
        //LOADCLST JOB CLASS=A,MSGCLASS=X,COND=(0,NE),NOTIFY=HERC01
        //*
        //*  THIS JOB COPIES THE REVIEW/RFE CLIST MEMBERS INTO SYS1.CMDPROC
        /  /*
          //*  CHANGE HERC01 TO THE RELEVANT HIGH LEVEL QUALIFIER
          //*
          //*  YOU MAY W  ANT TO ADD A %REVINIT STATEMENT TO YOUR CURRENT
            //*  LOGON INITIAL CLIST
            //*
            //STEP1   EXEC PGM=IEBCOPY
              //SYSPRINT DD  SYSOUT=*
              //SYSUT1   DD  DSN=HERC01.REVIEW.CLIST,DISP=SHR
              //SYSUT2   DD  DSN=SYS1.CMDPROC,DISP=SHR
                //SYSIN    DD  *
                  COPY INDD=((SYSUT1,R)),OUTDD=SYSUT2
                  COPY INDD=((SYSUT2,R)),OUTDD=SYSUT2                I
                  /*
                  //
                                            REVIEW Release Notes for Release 44.
0
                                            REVIEW is a 3270 fullscreen TSO comm
and processor for MVS.                      R  EVIEW also functions correctly un
der TSS on MSP systems.
                                              The source for REVIEW is available
 on the CBT MVS tape,                         and is in the   public domain, as
is the data contained herein.
                                                The REVIEW home page and FAQ are
 can be accessed from                           http://www.prycroft6.com.au
 
                                                  Bug reports welcome.
 
                                                    Enjoy.  GP@P6
                                                    Email - service2@prycroft6.c
om.au                                               For the current email addres
s visit                                               http://www.prycroft6.com.a
u/contact.html
 
                                                        R26.0 notes:
 
                                                        This release has built-i
n support for the FSHELP and FSH aliases of HEL,          and includes the new '
FORMAT"/'FMT' and 'FMTVAR'/'FV' subcommands.              Note also that '=X' an
d '=CAN' are now valid member list subcommands.
 
                                                            R27.0 notes:
 
                                                            This release allows
PDS s  earching with '=SEARCH' from the directory list.       Use '=HELP' to see
 what is available from the directory list.                   REMEMBER - if any
members are tagged then only these members will be            searched (or offlo
aded).  Use '=RESET'   to untag all members.
 
                                                                R28.0 notes:
 
                                                                  This release i
ntroduces the "point-and-shoot" capability                        which is trigg
ered by invoking REVIEW with no operands.                           REVIEW does
a read buffer to get the DSNAME under the
  cursor.  This works from the TSO READY prompt (except
  for Session Manager which updates the screen before
  REVIEW gets control) and in fullscreen mode.
 
    For best results under ISPF, set up a PF key with
             TSO REV) MODE(FSCR
    exactly as sho  wn above.
 
      You also may wish to set up a REVIEW PF key with
               TSO REV
        to allow point-and-shoot recursive REVIEWs.
 
        Note that a recursive REVIEW with no ope  rands is
          terminated unless a point-and-shoot DSNAME is found.
          This is to avoid TSO prompting with no ability to
          interrupt out of it.
 
            Also note that for point-and-shoot purposes, a
            member name is NOT considered to be part of a DSNAME.
 
              R28.1 allows the S member selection code even for
              same-named members in a concatenation.
 
                R28.2 restores the terminal to line mode when
                "point 'n' shoot" can't process a data set.
                Also, PF5/17   can now find the first member in
                  a member list if it is tagged.
 
                  R29.0 makes the FIND, F a  nd FINDNOT subcommands case insensi
tive.               FINDCHR, FC and FCN remain case sensitive.
                    FINDPIC, FP and FPN have been added.  eg. FP ###  looks for
3 digits.           These commands can all be selected fro  m the member list to
 search               the whole file (one or more PDSs).
                      A RACROUTE is now issued for non-pre-allocated non-VSAM da
ta sets on            ACF2 systems to avoid leaving a data set allocated   after
 a S913 abend.          (OPEN ABEND EXIT processing handles this for RACF system
s since R26.0.)         The screen buffer has been enlarged so that REVIEW may n
ow actually             work on a 62 by 160 screen (logic added 4 and a half yea
rs ago).
                                        R29.1 no longer displays ?? under AC for
 unauthorized program objects.
                                        R29.2 fixes case insensitive searches wi
th ASCII ON.  Picture searches          a  re not allowed with ASCII ON.  Case i
nsensitivity is ignored if there          are no alphabetics in the search argum
ent, thus speeding up searches.           =SEARCH status indicators are improved
.
                                            R29.3 fixes ZAP IDR formatting when
ESDID values are invalid.
                                            R29.4 fixes recursion detec  tion, f
ixes searching for data specified             with no trailing quote, and allows
 the use of double-quotes for                 quoting strings.  Eg. FIND "=C'FRE
D',"
                                                R29.5 enhances DEBUG output for
diagnosis purposes.
                                                R29.6 fixes 2 possible S0C4 prob
lems with unexpectedl  y long input,              and allows finding a quote cha
racter.  Eg. FIND '    and FIND "
                                                  Note that REVSMF has minor upd
ates for formatting CICS and STOTEK                 silo (SLSS) SMF records.
 
                                                    R29.7 fixes SUB.  (SUBMIT st
ill worked.)
                                                      R29.8 fixes RDW handling f
or non-VSAM DSECT formatting.
                                                      Note that RE  VSMF can ext
ract some WLM service class statistics                  from type 72 subtype 3 R
MF SMF records.
                                                        R29.9 fixes an error han
d  ling QUERY TGET data lengths longer than 256           bytes.  The extra data
 length overlaid the display translate table              which caused corrupted
 data display and sometimes caused terminal               errors requiring TSO s
ession cancellat  ion.  (The reported observation           was with CM/2 termin
al emulation under OS/2.)  And now a word about             IDRs in load modules
:                                                                Data from IDRs
is formatted when REVIEWing ass  ociated CESD                      blocks (when
scrolled right past the block itself) and when                     REVIEWING the
 IDRs themselves.  Translation and User IDRs                       are each a si
ngle logical record which can be spanned over                        many physic
al records.  For these 2 types only the last entry
   is formatted so that for simple load modules with few CSECTS
   you do not have to scroll right much, if at all.  For load
   modules with many CSECTs it is best to view the CESDs to get
     translation and IDENTIFY details pertaining to each ESD.  This
     data comes from the IDRs located after the CESDs.  Therefore
     the data can only be displayed if scrolling down to these IDRs
     has occur  red.  For simple load modules the first screenful is
       usually sufficient, while for the nucleus, for example, one has
       to scroll down hundreds of lines before scrolling up again to
       get the formatted data  .  (Caching of records does not occur in
         pre-XA systems so only data from blocks on the screen can be
         formatted.)  Only one ESD per CESD record is formatted per
         page, so left/right scrolling acros  s a 15-page area is required
           to see all formatted ESDs in a many-CSECTed program (because
           a CESD can have data about up to 15 ESDs).  (Individual ZAP
           IDR entries are formatted 2 to a page, and also   use left/right
             scrolling to access different entries.)  R29.9 fixes a logic
             error formatting IDR data for ESD entries.  After the screen
             records were processed the last screen record was processed
               again from cache, upsetting the assembly of the logical record.
               A design capacity limitation is still evident when looking at
               a couple of programs from SYS1.LINKLIB (such as ARCCTL) causing
                 display errors when many (hundreds) CSECTs were compiled in the
                 same compilation run.  This is not a problem for the nucleus.
                 The link edit IDR is a fixed-length fixed-format record formatt
ed               by REVI  EW.  OW29593 adds 4 bytes (the time in packed decimal)
 to                it.  R29.9 should now format this IDR layout also.  Since the
                   binder "name" is in plain text, the name will be replaced by
the                HH:MM:SS of the bind   when the data of this extended IDR is
broken               out.
                R29.9 should also fix a couple of bugs in formatting IMS details
.               Personally, I blame bitrot to code not   tested in 10 years.
 
                  R30.0 adds "jump from leader dots" where a member can be selec
ted               by placing the cursor on a member list dot without   actually
typing              the S member selection code.  A VTOC can now be REVIEWed by
specifying          the quoted data set name 'FORMAT4.DSCB' and supplying a volu
me serial           number with the VOLUME operand.  While REVIEWing a VTOC the
form  at-1            DSCBs can be formatted with the FORMAT ON subcommand.  Sup
port for the                        logical PARMLIB service of OS/390 1.2 (and l
ater) is accessed by a              request to REVIEW the PARMLIB file when no P
ARMLIB file is allocated.           (ie. REV PARMLIB F)
 
                                      R30.1 fixes a bug where issuing a command
RECALL on a wide screen               caused all data except the recalled comman
d to be cleared from the              screen.  This   was caused by calculating
the buffer start address                for the wide screen, but leaving the end
 address for an 80-column               screen.  This made the end address less
than the start address, so              an attempt to clear the pri  mary input
area cleared to the end of the            screen and wrapped around to clear the
 top of the screen.
                                          R30.2 fixes a S0C4 abend caused by an
in  correct attempt to restore              the primary command in the TSO ECT a
fter a HELP session had ended.              This was most obvious on recursive H
ELPs with missing HELP data.
                                              R30.3 fixes recursive REVIEW promp
ting problems by turning off                  fullscreen mode, thus allowing lin
e mode replies to prompts.                    The STTMPMD macros were commented
out to allow the receiving of                   messages while in REVIEW under O
S/390 2.4.  These can now be                    reactivated for later releases,
but probably only have an effect                if TSO/E Session Manager is used
.  One user complained that the                   directory area wasn't big enou
gh for a specific PDS so it has been              increased from 512K to 768K.
The "cocktail-shaker" improvement to              bubble sort was added for some
 fixed-offset sorts for PDS directory             sorting to p  rovide some mode
st but perceptible sort time reductions.
                                                    R31.0 provides PDS facilitie
s accessible from the directory display             screen.
                                                      =SETFILE allows the settin
g of the output DDname, so it can                     be changed from SYSUT2.  (
This has no effect on the CUT and ADD                 subcommands of "REVIEW-pro
per".)                                                  =DELINK can now be used
to invoke DELINKI to delink load modules.               =OFFLOAD can now offload
 load modules to fixed-length 80-byte records.          =PDSLOAD can invoke REVL
MOD or PDSLOAD (depending o  n PDS RECFM) to              reload offloaded membe
rs.                                                       =HELP screen split int
o 2 screens.                                              REVSMF no longer link-
edited into REVIEW.  REVSMF made RMODE=ANY  .
                                                                          R32.0
adds ZIP and PCX file handling.  ZIP directories can be formatted         if the
 ZIP file is a DASD sequential file.  ASEXZIPD from ASE can be            invoke
d to unzip data.  <http://www.ase.com.au>  Unzipped data can be           R  EVI
EWed and CUT to an output file.  1-bit, 4-bit and 8-bit single-plane        Pain
tbrush (ZSoft's PCX file format) can be rendered on a 3270 graphics         TSO
terminal.  Character (raster) graphics done by REVIEW.  GDDM called         for
vector gra  phics terminals.  (GDDM base now part of OS/390.  Put the         SA
DMMOD data set in the linklist.)  PICDATA allows the porting of a             pi
cture into other Assembler 3270 applications.  DIV improved a bit for         ZI
P file data handling - pr  eviously overhead increased exponentially
with record number.  (DIV here is REVIEW's internal record caching.)
 
R32.1 fixes IMS ACBLIB offset bugs and a  dds Y2K windowing for IMS
  ACBLIBs which only use 3 bytes (YYDDDF) for the date.
 
  R32.2 fixes 'PDSE' literal overlaying RMODE=24 progra  m size total,
    and using the wrong register to branch after a zip file error.
    Recognition of low-level qualifiers now handles mixed case.
 
      R32.3 handles 8K and 16K DB2 pages sizes.
 
      R33.0 adds the 'H' member selection code to show program history.
        For PDS load modules this is the same as 'S' and scrolling right.
        For PDSE program objects IEWBFDAT is invoked and the results
        (as opposed to the actual member contents) are REVIEWed.
 
          R34.0 replicates nearly all of the PDS facilities for HFS files
          including REVIEW/EDIT/BROWSE, global SEARCH, program history,
          directory SORT, and entry   tagging.  ZIP files are recognised if they
            are HFS files.  HFS PCX files are recognised.  (NULL) is now not
            shown for zero-length records unless HEX or FMT is on.  LRECL=X
            is now supported up to 65535 bytes lon  g.  DB2 rows are now only
              extracted when the first page is recognised as a header page, and
then          any page size should now be handled correctly (assuming it is a
              multiple of 4K).  The slash ('/') selection code wa  s added (for
HFS             and PDS/PDSE) to allow the "specification" of the DATA operand a
t the           member or HFS file level.  '/' can be used to inhibit the defaul
t               processing of ZIP and PCX files.  HFS explorer like navigation i
  s               done by selecting a subdirectory to make the current directory
, or                            PF3 up to parent directory.  PF3 from Root ends
REVIEW.  Example:                  REVIEW /etc/dce  QUICK
                                BUT no operands are allowed so REVIEW attempts t
o show directory                '  /etc/dce  QUICK/' which gets a RC=00000081 RS
N=055E0072 because                it doesn't exist.  So, PF3 which REVIEWs direc
tory '/etc/' with                 the display positioned to 'dce'.  <NEWLINE> an
d <ENTER> selects                 the 'dce' subd  irectory so REVIEW now shows '
/etc/dce/'.
                                    R34.1 fixes the S0C9 abend when the 'SMF' co
mmand is issued.
 
                                      REVIEW has several built-in formats which
are pre-coded examples of             the general DSECT formatting capability.
 
                                        **VTOC** - formats DSCB-1 records.  (DS1
SMSFG improved with R34.0).                        Activate with FMT (or FMT ON)
 when REVIEWi  ng a VTOC.
                                          *DB2TBL* - shows full Row-ID (RID) of
extracted DB2 rows.                                  Automatically activated.
 
                                            *ZIPFILE - formats ZIP central direc
tory records.                                          Automatically activated.
 
                                              *OBJHIST - formats data extracted
by REVIEW from Binder API calls.                         Automatically activated
.
 
                                                "Normal" REVIEWing of data is pe
rformed by the REVIEW2 CSECT.                   This operates in 24-bit a  ddres
sing mode, unless an HFS file is being            REVIEWed, whereupon REVIEW2 re
ceives control from REVHFS in 31-bit              addressing mode.  All USS call
s are done with AMODE=31.  REVHFS                 provides routines for READ, CH
ECK, NOT  E and POINT which are pointed             to by a fake DCB which is us
ed by the standard BSAM macros in REVIEW2.          All Binder dialogs (Fast Dat
a Access for PDSEs; full API for HFS)               take place with AMODE=31.  I
SPLINK is invoked with   AMODE=31 for HFS             files, and AMODE=24 for PD
S/PDSE members.  GDDM is called with AMODE=31.
 
                                                        R35.0 provides another r
eplication of directory processing, this time                         for unconc
atenated PDSE program object data sets.  The REVIEW CSECT             passes con
trol to REVPDSE instead of REVPODIR when a single PDSE with           RECFM=U is
 being REVIEWed.  REVPDSE checks that it is a program object          l  ibrary
- if not control is transferred to REVPODIR.  If it is REVPDSE          performs
 all directory, formatting and command handling.  Why this              duplicat
ion?  Because REVPDSE (actually cloned from REVHFDIR) can               display
long a  lias names, as well as program object-only attributes             which
can be accessed by DESERV like date/time/job, Program Management          versio
n, DLL enablement, etc.  Because REVPDSE only processes program           object
 libraries a few "nor  mal" facilities are not available, such as           deli
nking, offloading and edit.  And because there are no output                faci
lities there is no =SETFILE command.  Each of the three directory           proc
essors (REVPODIR, REVHFDIR and REVPD  SE) has its own set of help             pa
nels accessed with '=?' or '=HELP'.  REVPODIR was designed to fit             de
tails from as many members as possible into its internal storage,             an
d would require a rewrite to handle long member nam  es.  REVPODIR
has several entry formats for use with different member types.
REVHFDIR and REVPDSE have fixed-format internal entries with a
variable-length name at the end.  REVHFDIR acquires 128K (with LOC  =ANY)
  which is retained until the end of the REVIEW session.  REVPODIR and
  REVPDSE acquire from 8K to 768K (variable GETMAIN) below the line.
  After the directory has been read unused space is freed.  As a result,
    for REVPODIR and REVPDSE an =REFRESH causes the whole area to be freed,
    reacquired, and excess freed (so there is room for any new members).
    When a long member name (which must therefore be an alias) is selected
    for REVIEW o  r BROWSE, the real member name (maximum 8 bytes long) is
      passed to REVIEW2 or ISPF, as appropriate.
 
      DESERV code is executed w  ith AMODE=31 for access to GET_ALL buffers
        returned above the line.  The RMODE=24 program size total on the END
        line of the member list only includes RMODE=24 segments of program
        objects with more than one segment.  (  I believe "more than one" means
          "two".  That is, I don't think a program can have more than two
          segments (currently).)
 
            On a OS/390 2.7 system with DFSMS 1.5, pointing SYSLMOD to a PDSE
            yields a PM3 object.  Copying a load module to a PDSE yields a PM1
            object.  When copying to a PDS with ISPF option 3.3 copy the rea  l
              member first, then its aliases (without leaving the member list) t
o                           avoid orphan aliases.  When copying to a PDSE, selec
t the real member           AND all its aliases BEFORE pressing ENTER.
 
                            R  EVSRCH was given a parameter list so it does not
have to be aware of           the working storage structure of REVPODIR and REVP
DSE.  REVHFDIR does           not use the parameter list because it drives the s
earching of HFS files.        When called fr  om REVPDSE, REVSRCH always uses th
e real member name, but         for PDSEs the results are the same (because PDSE
s cannot have orphan            aliases).
 
                                  REVIEW is 20 years old this month (19 Jan 2001
).  Happy Birthday!
                                         And thank you, Bill, for writing   it.
 
 
                                    R36.0 adds things in these areas:
                2002-January          (1) TSO command management;
                                      (2) memory management.
                                      (3) parallel sessions;
                                        (4) ISPF dialog;
                                        (5) UNIX file symbolic links.
 
                                          (1) TSO command feedback is improved b
y reporting any non-zero return           code or abend code in the top line mes
sage after the command has ended.         Also, for systems without TSO/E, the T
SO command is invoked by ATTACH           with SZERO=N  O to insulate REVIEW fro
m abends by the TSO command, and to         avoid abends when the TSO command do
es not restore registers properly.          This is mainly aimed at MVS 3.8 syst
ems because TSOEXEC (supplied by            TSO/E) already provides t  his prote
ction.
                                              (2) SZERO=NO has been added to all
 ATTACH calls by REVIEW subroutines to        maximise memory clean-up by the sy
stem   after a utility has been called.         FREEPOOL macros have been added
after all QSAM CLOSE macros.  This has          been done to conserve region sto
rage which can be exhausted by several          recursive REVIEW sessions, mainl
y observed on 3.8.
                                                  (3) The SWAP command has been
added.  This transforms nested REVIEW             sessions started by TSO REV or
 FSH commands inside REVIEW/FSHELP   into           parallel sessions.  This mak
es the sessions accessible without the need                       to terminate m
ore recent sessions.  SWAP LIST can be used to list the           accessible ses
sions.  This SWAP processing has nothing to do with               the SWAP of IS
PF.
                                                                    (4) In some
cases, REVIEW can be run as an ISPF application.  The               significant
work of adding dialog support to the directory displays             has not been
 d  one, so only files without directories can be REVIEWed            in an ISPF
 display.  So, PDSs, PDSEs, HFS files and partitioned                 subsystem
data sets are excluded.  DSORG=PS,IS,DA,VS data sets can              have their
 data shown by RE  VIEW in an ISPF display.  ISPF split screen          processi
ng is then available, and ISPF handles the TSO subcommand.
                                                                        Prerequi
stes:  1. Install REVPANEL to IS  PPLIB.
         2. Install REVPROF to ISPPROF.
         3. Run on MVS/ESA or later.
                                                                            Sepa
rate from the REVIEW ISPF dialog aspect, other changes are:
                                                                            (a)
When the OS is OS/390 2.10 or later REVIEW will use the new IS  PF            va
riables to access the data set name under the cursor for "point and           sh
oot" invocations rather than relying on ISPF's internal structure             to
 find the screen image and cursor location.  This has the added
benefit of not requiring the MODE(FSCR specification.
 
(b) Also under OS/390 2.10 or later in an ISPF environment REVIEW will
access ISPF   variables to determine extended colour, highlighting and
  graphic escape support instead of issuing a Read Partition (Query)
  to the terminal.  This means (i) that REVIEW will initialize faster,
  and (ii) REVIEW will not   render Paintbrush pictures.
 
    REVIEW now has an 'XISPMODE' (or 'X' for short) operand which causes
    REVIEW to revert to pre-R36.0 behaviou  r in terms of data display
      (ISPF will not be used) and determining screen attributes (a Query
      will be performed if appropriate, thus making available any graphics
      capabilities which would allow the rendering of pic  ture images).
 
        (5) When looking at UNIX directories, if the directory entry is a
        symbolic link then the link value is shown in green.  This shoul  d
          assist UNIX file administration because it can now be seen which files
                        are "real" and which are accessed via symbolic substitut
ion.
 
                        R  36.1, R36.2, R36.3 and R36.4 were small bug fixes in
the main.
                          R36.5 changes ZIP directory formatting to handle 10 de
cimal digits for          the compressed   and uncompressed file sizes, which is
 the required               number of digits to report any value of an unsigned
fullword.
                            R36.5 also adds the 'A' sel  ection code for UNIX fi
les, which instructs          REVIEW to treat the selected file as an ASCII text
 file.  Not only is           ASCII-to-EBCDIC translation activated, but the end
 of line trigger              is changed from the EBCDIC New Line (NL=  x'15') t
o the ASCII Line Feed           (LF=x'0A').  If the LF is immediately preceded b
y a carriage return             (CR=x'0D') then it is also not shown in the disp
lay.
                                  R36.6 fixes subsystem allocation which was pro
bably broken years ago            when support was added to REVIEW VTOCs when th
e data set name of                'FORMAT4.DSCB' was specified.  Bug reported by
 David Welles.
                                    R36.7 fixes IKT00405I SCREEN ERASURE CAUSED
BY ERROR RECOVERY PROCEDURE         after an ISPF Edit or Browse changes the scr
een to a smaller size                 and then REVIEW tries to write data to the
 larger size.  Bug reported           by Mark Zelden who also reported a bug in
REVSMF when formatting SMF            type 250 (TSOMON) records: an S0C4 in REVS
MF would occur because the            target of an   MVC instruction loading a l
iteral used R7 as the base              instead of R6.
 
 
                                          R37 notes
 
                                          R37.0 implements a major internal reog
  anisation.          2003-October
                                            Much of the triplicated code from th
e directory handlers has been unified       into commonly callable routines.  Se
veral facilitie  s only available while in    in "REVIEW data mode" are now avai
lable from directory displays as well.        Examples of such facilities includ
e the TSO and SWAP commands, the ability      to set PFK values, and the ability
 to run as an ISPF dialog.
                                                              The list of CSECTs
 making up the REVIEW command processor are:
                                                              REVIEW   - entry p
oint to perform parsing and initialisation.                   R  EVIEW2  - main
"browse file data" processor.                                   REVPCL   - REVIE
W TSO parsing parameters.                                       HELPCL   - FSHEL
P TSO parsing parameters.                                       REVPDS   - for
merly REVPODIR - format, display and navigate PDS directories.    REVSORTE - PDS
 directory sort enhancer.                                         REVALCO  - all
ocate and serialize sequential output file.                       REVDALO  - fre
e and deq seq  uential output file.                                 REVOFFLD - s
equentialize PDS members.                                           REVSRCH  - s
earch PDS members for data.                                         REVISPF  - i
nvoke ISPF Edit, Browse or V  iew functions.                          REVLOAD  -
 invoke PDSLOAD or REVLMOD to load new PDS members.                   REVDLNK  -
 invoke DELINKI to delink load modules.                               REVDIV   -
 cache reviewed data in virtual storage.                                REVPNS
 - determine point-and-shoot data set name.                             REVHIST
 - invoke Binder to show program history.                               REVIMAGE
 - show picture using raster graphics.                                    REVGDD
M  - show picture using vector graphics.                                  REVUNI
X  - formerly REVHFDIR - format, display and navigate UNIX directories,
     manage UNIX file search, and set up for UNIX data REVIEW.              REVP
DSE  - format, display and navigate PDSE program library directory.         REVH
EAD  - clear screen buffer and initialize common first 2 lines.             REVC
OMM  - perform all TSO terminal communication using ISPF or TPUT/TGET.      REVM
SGS  - h  ouse and retrieve common fullscreen messages.
                                                                              FI
NDHEX, FINDCHR and FINDPIC (and their respective FINDNOT commands) have       be
en dispensed with in fa  vour of specifying the search argument in an
ISPF-like manner.
 
FIND and FINDNOT can now have a search   column range specified, as well as
  one of the PREFIX, SUFFIX and WORD keywords specified.
 
  PDS(E) and UNIX files-in-a-directory SEARCH can exp  loit the new FIND options
.
    VIEW has been added to the EDIT and BROWSE repetoire for invoking ISPF servi
ces.
      REVLMOD has been enhanced to use linkage editor serialisation
                    (QNAME=SYSIEWLP) when updating load libraries to improve dat
a integrity.
                    REVIEW has been enhanced to use ISPF serialisation (QNAME=SP
FEDIT) when         u  pdating sequential or partitioned data sets.
 
                      Directory display subcommands no longer have the '=' prefi
x, and primary        input text is   no longer interpreted as a LOCATE request
specification.
                        Directory displays no longer have a separate set of PFK
values hard-coded.      A SORT command is available   to request the sorting of
directory entries.
                          Some commands such as TSO, =X, KEYS and HELP will beha
ve differently when       REVIEW is running as an ISPF dialog beca  use these co
mmands will be              processed by ISPF.
 
 
                              R38 notes
 
                              R38.0 implements REVEDIT - the REVIEW Editor.
        2004-May
                                The REVEDIT CSECT has been added to supply an ed
itor for PDS members            and sequential data sets.  The 'U' member select
ion code and the                  'UPDATE' primary command will invoke REVEDIT,
as will the 'E' member            selection code and the 'EDIT' primary command
when REVIEW is not                running in an ISPF environment.  Various other
 bug fixes are also               included.
 
                                    The TSO HELP now has several members.  REVED
IT has its own HELP member          as does each of the three   directory displa
ys.  John Kalinich has kindly         coded up numerous ISPF tutorial panels whi
ch can be displayed when a            HELP command is processed by ISPF.
 
                                        This release also sees the introduction
of the REVGEN source member             which sets the values of switches used d
uring conditional assembley.            With the appropriate settings in REVGEN,
 REVIEW can   be assembled on             MVS 3.8 using the Tachyon Legacy Assem
bler and the SYS1.MACLIB and              SYS1.AMODGEN macro libraries from that
 MVS.
                                            See http://www.tachyonsoft.com/ for
the Tachyon Assembler.                                    Macros for BASSM and B
SM are required under MVS 3.8 to assemble REVIEW.
                                                          REVEDIT can use a data
 space to hold data while it is being edited.             A   data space can gro
w to 2GB subject to customisation by IEFUSI.                REVGEN can be set so
 that REVEDIT will use the user region to hold              the data - obviously
 a necessity for MVS 3.8 and other pre-ESA systems.
                                                              R38.1 fixes a few
bugs such as REVIEW accessing new extents after               an UPDATE increase
d the size of the data set, REVEDIT SAVE handling             erased sequence nu
mbers, an  d ERR being a valid abbreviation for                 ERROR on a REVED
IT LOCATE command.  Other changes include the removal           of the DDname op
erand of CUT and APPEND in favour of presenting a               panel to specify
 a data set name, and th  e addition of the COPY command          in REVEDIT.  A
 "point-and-shoot" REVIEW also now works when triggered           from a REVEDIT
 session.
                                                                    R38.2 fixes
a few bugs such as an S0C4 when initializing as an ISPF             application
under SDSF, and fixing the home location of the cursor on           screens with
 more than 80 columns.  A member list sort can now be                 triggered
by placing the cursor on a column heading (as suggested by            John K.) -
 eligible headings have underscores.  The effective uid will          be set to
0 (superuser), RACF permitting, to improve access by REVIEW to          director
ies and files (as suggested by Mark Zelden).  The original              effectiv
e uid is restored by the time any ISPF services are invoked.            REVPANEL
 now has extra attribute codes to allow the display of data             with GE(
ON)   explicitly requested.
                                                                          R38.3
fixes the problem where a cursor-triggered member sort did not            occur
when the end of the   member list was on the screen.  Also, the             Bind
er API processing was cosmetically changed during diagnosis for             prob
lems reported in IBM APARs OA08880 (ABEND0C4) and OA09299 (RC8              REAS
ON CODE 1080003A) which are releva  nt for z/OS 1.5 and 1.6.                  Th
anks to Mark Zelden for detecting and reporting the bugs to IBM.
                                                                              R3
8.4 fixes an S0C4 abend after VSAM OPEN failure -   now the return
and reason codes are displayed properly as before - must have been
bitrot in a recent release.
 
  R38.5 fixes two problems with REVEDIT:
                - an intermittent S0C4 processing line commands.
                - unreliable matching by FIND when PREFIX, SUFFIX or WORD is spe
cified,           especially when ALL is also specified.
 
                  R38.6 fixes an S0C4 when the editor initialises after data was
 found            in the browser.
 
 
                    R39 notes
 
                      R39.0 implements syntax colouring for Assembler and JCL.
2004-December
                      The 'HILITE' (or 'HI') REVEDIT subcomman  d has been added
 to control             whether syntax highlighting is to be activated or not.
The HILITE              setting is saved in the profile if one exists.
 
                          The 'UPDATE' (or 'UPD') operand of 'LOCATE' has been a
dded so that              lines updated in the current edit session can be locat
ed.  This operand         (unlike the other non-numeric operands of LOCATE) is n
ot compatibl  e             with ISPF's Edit.
 
                            R39.1 fixes an S0C4 when HEX ON is used with records
 which do not reach           the end of the screen line - the terminating attri
bute byte code was            being moved into the edited data array corrupting
a pointer instead of          to the screen buffer.  Bug reported by John H. Kei
th.
                                R39.2 makes improvements to PDS-member/UNIX-file
 searches performed             from directory entry list displays.
 
                                  Firstly, the standard PDS directory display no
w can perform searches            for lowercase strings - this was just a plain
bug.
                                    Secondly, another bug where the picture attr
ibute of the search was             not reset for a non-picture search after a p
icture search is fixed.
                                      And thirdly, non-picture case-insensitive
searches have been sped up            to (practically) match the performance of
non-picture case-sensitive            searches.  This is achieved by the simple
expedient of translati  ng              the whole record to uppercase once after
 it is read instead of for                            each compare, thus making
simple compares adequate to find the data.            Note that this does not sp
eed up normal FIND command processing as the          data must be kept untransl
ated for display and other processing.
                                                        R39.3 changes behaviour/
output as follows:                                      - EREP formatting will d
isplay the STCK value in hex if the system                does not hav  e the ST
CKCONV facility (ie. is pre-SP4), and system                abend code digits ha
ve been reduced from 4 to 3.  Also, garbage                 will no longer be le
ft in column 81.                                          - Fix intermittent inc
orrec  t numeric data such as VV.MM when showing              member details - t
his occurred for some members and not others when             shown on some scre
en lines but not others.                                    - A new 'M' selectio
n code is implemente  d to display a module map                 for program obje
cts (both PDSE and UNIX, but not PDS).  (The *OBJMAP*           and *OBJESD* int
ernal formats are used to display the results.)               - REVEDIT will no
longer loop (or perhaps abend) when   an I line command           is on the scre
en while a move/copy is pending, and autoinsert will no           longer occur i
f the cursor is in the line number field of the line.
                                                                  Since the demi
se of JCC the MINIZIP and MINIUNZ load modules are now            included in th
e executable program library.
                                                                    R39.4 adds s
upport for VSAM Extended Addressable access, although               REVIEW only
supports up to 1TB with this change.  Also, RLS=NRI is              now specifie
d internally to maximize access to data controlled by RLS.
 
                                                                      R40 notes
 
                                                                        R40.0 im
plements REVED and REVOUT.                        2006-April
                                                                        REVED is
 simply an alias of REVIEW to   initiate the edit of a sequential         data s
et (instead of having to browse it with REVIEW and issue the EDIT         or UPD
ATE primary command).  The other main difference of REVED is that         the me
aning of the 'S' selection code for PDS membe  rs is to request the         memb
er be edited with REVEDIT instead of being browsed with REVIEW.
                                                                            REVO
UT provides a fullscreen interface to TSO FIB commands so th  at they         ca
n be used to give QUEUE-like or SDSF-like access to job output that
            is independent of the level of MVS and Job Entry Subsystem in use.
            Function depends on the SYSOUTTRAP facility and uses the CLIST calle
d           REVOUTJB which should be installed into SYSPROC.
 
              MVS 3.8 users who wish to use REVOUT may be interested in usermods
 from         http://www.prycroft6.com.au/vs2mods which add CLIST function inclu
ding          SYSOUTTRAP (ZP  60014), and which alter JES2 (ZP60015) and TSO STA
TUS             (ZP60016) so that the TSO STATUS command without any operand ret
urns            the status of all jobs with names of the TSO user's id plus zero
, one,          two and three extra charact  ers (up to a maximum length of eigh
t).  A            JES3 version of the ZP60015 usermod would be needed to provide
 similar          function in a JES3 environment.
 
                    This release also rolls up bug fixes originally intended for
 R39.5,             most notably those debugged by Steven Becquer of Miami-Dade
County              Public Schools I.T.S.
 
                      CSECTs for PDSEs and UNIX have been moved from the REVSUBS
 source               member to a new REVSUBS2 source member.
 
                        REVALCO (which is called for SEQLOAD and OFFLOAD from th
e member list,          and CUT and APPEND from data REVIEW) has been changed su
ch that if                the specified output data set name cannot be found it
will be created.          It will be a sequential data set if no member name was
 supplied, or             a PDS with 20 directory blocks if a member name was su
pplied.  In most          cases the ne  w data set's DCB will match that of the
data set being              REVIEWed.
 
                            R40.1 changes:
                              - correct DMB size count for IMS V6 and V7.
                              - ignore DATA operand for REVED command (do not ed
it PDS directory).            - prevent S0C4 abend of REVOUT if REVO  UTJB CLIST
 is not installed.
                                R40.2 changes:
                                - display found data hidden by ISPF split screen
.                                 - general fixes to scrolling.
 
 
 
                                                  R41 notes
 
                                                  R41.0 rolls up changes from 40
.3 onwards.                 2007-November
                                                    Apart from bug fixes, the ma
in changes include:                                 - show step name and CPU tim
e of active jobs in REVOUT.                         - extract pict  ures from mo
st types of uncompressed Windows/OS2 bitmaps.         - use native 3270 vector g
raphics when available to show pictures.              - session id numbers are n
ow fixed and not relative to current screen.          - current session id shown
   as blue superscript if session is nested.            - cursor position saved
and restored across SWAP commands.                      - make Edit the default
selection action for the REVED command.                 - generate cursor autose
lect 'S' only if   no primary command.                    - improve TSO logic to
 not finish calling CLIST after subcommand CLIST.         - suppress screen size
 switch if screen size already has 80 columns.            - use PDS member DIV c
aching now only of RECFM=U - th  e main purpose               is to allow CESD f
ormatting show IDR details - now also for pre-XA.
                                                            R41.0 enhancements t
o REVEDIT include:                                            - add TF and TS li
ne commands.                                                  - add SORT primary
 command.                                                     - add CREATE and R
EPLACE primary commands.                                        - colon command
prefix applies command to current line. eg. :TS                 - support ASM hi
ghlighting of source code in a jobstream.
                                                                R41.0 enhanc  em
ents for MVS 3.8 also include:
                                                                  REVSMF can now
 format data from MF/1 records (types 70->74).                    Of the SMF rec
ords produc  ed by MVS 3.8, only types 73 and 74                    from MF/1 se
em to be sensitive to left/right scrolling.
                                                                    As of R41.0
REVIEW will override the L  RECL of SYS1.MANX and                     SYS1.MANY
of one thousand with ten thousand because MF/1 can write              records lo
nger than one thousand bytes.  REVIEW will continue                   to overrid
e the blocksize of SYS1.LOGREC of 40 with   1944.
 
                                                                        R41.1 ch
anges REVEDIT to avoid S0C4 abend after a TF line comman  d               in ESA
 (data space) mode, and also adds minor improvements to
        JCL syntax highlighting.
 
 
        R  41.2 fixes some things serious (like S0C4 moving lines to before the
          current top of screen) and not so serious (like the new members added
          by a PDSLOAD into an empty PDS can be seen without having to scroll
          up), and also   adds some features.
 
            REVEDIT can now be invoked in VIEW mode (where data set serializatio
n           is not performed and SAVE i  s disabled) and REVEDIT also now suppor
ts            UNDO and REDO by employing a recovery data set called
              prefix.REVEDIT#.BACKUP where # is the screen number.
 
                Note that recovery is manual, but can be performed by REVIEWing
the             recovery data set, using NEWTOP to access deleted members if the
                existing member is corrupt - not that it should be, u  sing CUT
to                copy the records to a new data set, and editing the new data s
et                and shifting all data to the left to restore proper data align
ment.
                    The recovery data set should be deleted to re-enable UNDO/RE
DO                  (and recovery) for that screen session number.
 
                      UNDO OFF is available to stop undo/recovery processing if
you find              it is adding too much to response time.  And then there is
 UNDO ON              for when you find that the overhead isn't so bad after all
.
 
                        R41.3 fixes an error where the editor tries to move 8 by
tes into 4 bytes        when only 4 were needed.    Because it was at the end of
 a page (most of          the time) the result could be harmless, a mysterious s
torage overlay,           or an S0C4 abend.
 
 
                            R41.4 fixes an S0C4 abend encountered after an UNDO
was requested and           the post-UNDO display position was not Top-of-Data
 (as in UP MAX).              (If the post-UNDO display position was line zero t
here was no problem.)
                              A check of the ISPF panel dynamic area size during
 initializatio  n               (testing that it matched expected results based
on the screen size)                           has been removed in the hope that
this allows more ISPF application             REVIEW sessions on wide screens.
 
 
                                                R41.5 fixes several basic bugs.
 When a block was excluded which                incorporated the current top dis
play line REVEDIT lost track of, well,          reality, so th  ings like line n
umbers became corrupt.  LOCATE by line            number was fixed as it was jus
t plain wrong with excluded lines                 because it invoked UP or DOWN
scrolling which count display lines, not          data records.
 
                                                    As well as OFF, JCL, ASM and
 AUTO, now PLI, CLIST and DATA are valid            operands of HILITE or HI.  S
lash-asteris  k ... asterisk-slash comments           are now highlighted as suc
h, PL/I column 1 and pre-processor statements         are shown in blue, and Ass
embler labels can now have non-trailing               ampersands in other than t
he first position not flagg  ed as an error.
                                                        A leading *PROCESS state
ment with a semicolon is taken to indicate              PL/I source, while one w
ithout a semicolon is taken to indicate                   Assembler source.  MAR
 or MARGINS is not yet parsed.
                                                          JCL validation has bee
n extended in some areas.  The REGION parameter             on EXEC and JOB stat
ements is validated mainly to detect post-XA                values on pre-XA sys
tems.
                                                            For JCL DD s  tateme
nts, plain data set names are validated and                   underscored if cat
aloged and shown in blue if not cataloged.  If a              single volume is s
pecified without parentheses it is length-checked,            and for MVS/370 sy
stems a  n attempt is made to see if it is an online            DASD volume.  If
 it is online it is underscored, and its generic                device type desi
gnation is shown in that line's command area at the             left of the scre
en.
                                                                  There is no cr
oss-checking with the catalog entry vs VOL=SER in the JCL,        nor with the v
olume device type vs the UNIT value i  n the JCL.
 
                                                                    R41.6 change
s include:                                                            - REVEDIT
backup file now uses the userid as the high-level qualifier
    when PROFILE NOPREFIX is in effect.  (Reported/suggested by Sam K.)
    - Screen size now set from ISPF panel size.  (Reported by John K.)
    - REVOUT will now display some rudimentry Assembler syntax highlighting
    w  hen showing Assembler listings.  (Requested by Tom Armstong.)
      - Program object PDSE directory display now
        - has more SORT types (idea by Charles MacNiven).
        - shows PM s  ublevel in superscript (or lower case if ever over 9).
        - Done some work on implementing an INFO subcommand.
 
 
          R41.7 fixes operation as an ISPF application broken when trying to
          handle the case when the line mode screen size (as returned by STSIZE)
          is different from the fullscreen screen   size (as reflected in the
            dimensions of the ISPF panel).  The undocumented global subcommand
            of 'CDE' or 'JPA' has been added.
 
 
              R41.8 fixes:
              - REVOUT Assembler listing syntax highlighting for wide screen.
                - REVEDIT CREATE/REPLACE creating corrupt SPF statistics.
                - REVEDIT CREATE/REPLACE RECFM=V not copying first selected reco
rd.             - screen size not switching for pre-coded 80-column displays.
                  - UNZIP temp unit of 3380 - now 3390 followed by SYSALLDA for
retry.              (It was VIO originally, but large zips could cause auxiliary
                    storage shortages on under-configured pre-SMS systems.)
 
 
                    R41.9 fixes:
                    - 'CHANGE ALL' missed occ  urrences of the FIND string after
 syntax                 highlighting housekeeping used the dynamic translate tab
le work                 area thus overlaying the TRT table used by CHANGE.
                      - REVHIST setup for PDSEs just checked   that DIV was init
ialized                   (as it used to be not so long ago) and if it wasn't is
sued the                  '"REVIEW" internal storage exhausted' message.  Now RE
VHIST                     will issue the DIV GETMAIN call for PDSEs as it d  oes
 for UNIX.
 
 
                            R42 notes
 
                                          R42.0 adds support for DSNTYPE=LARGE d
ata sets.           2008-September
 
                                            R42.1 changes:
                                            - Fix locating a ZIP archive's centr
al directory for DSNTYPE=LARGE.             - Add the 'RTF  ' subcommand to outp
ut coloured print files in RTF                  format.
                                              - Enhance Assembler listing syntax
 highlighting to show literals in               white as REVEDIT syntax h  ighli
ghting does.                                    - Add the 'D' PDS member selecti
on code so that members can be deleted            from the PDS member selection
display such that they can be restored            with an 'R' selection.  This i
s only s  upported for unconcatenated               PDSs and not PDSEs (because
the restore does not work for PDSEs).             - Enhance the 'R' PDS member s
election code to restore members                    deleted with a 'D'.
                                                    - Fix various cosmetic glitc
hes.                                                - Fix PDSE 'H' errors caused
 by erroneous DIV processing.                       - Various internal reorganiz
ational changes such as moving the REC  ALL             stack from the @DATA are
a and placing it into an area which is                  shared by all parallel s
essions, and removing the code to transfer              the RECALL stack ownersh
ip during logical screen SWAP processing.                 Another example is sup
pressing DIV processing during searches of                program libraries - no
 point caching data for a single scan - which             was sometimes a source
 of abends during such searches.                        - Add the un  documented
 'TCB' (alias 'RB') command.
 
                                                          R42.2 changes:
                                                            - Highlight PL/I sou
rce code in editor according to character code                points, and report
 unbalanced parentheses as syntax errors.                   - Allow REVOUT to ru
n as an ISPF appli  cation.
 
                                                              R42.3 changes:
                                                                - Add the 'SCRNA
ME' command to assign a new name to the logical                   screen session
.                                                               - The optional o
perand of the 'SWAP' subcommand can now be 'NEXT  ',                'PREV' or a
session name, in addition to 'LIST' or a session id
  (decimal number) that were previously allowed.
- The default value of PF9 is changed from 'SWAP' to 'SWAP NEXT'.
- An attempt is made to name logical screen sessions automatically.
    Names used are OUT (for REVOUT), HELP (for FSHELP) and the last
    data set name qualifier (if fewer than three qualifiers exist)
    or the second-last data set name qualifier (if more than two
    qualifiers e  xist).  Names shorter than eight characters will have a
      digit (2 - 9) appended to prevent duplicate session names.  A name
      will be left blank rather than creating a duplicate non-blank name.
    - The concurrent or paralle  l session count limit is increased
        from 8 to 16.
      - Add the 'N' PDS member selection code which allows a new name
        to be assigned to an unconcatenated PD  S or data PDSE member.
          The user is prompted to supply the new name when the selection
          code is processed.  Member names containing commas, imbedded
          blanks, or code points less than a blank are reject  ed (message
            will just say REQUEST CANCELLED).  The 26 English letters will
            be folded to upper case.  Apart from these restrictions any
            other code point you can type in will be used as supplied in the
              new member name.  Null or blank input, or input entered with a
              key other than the <enter> key will also cause the request to be
              cancelled.
              - Fix to serialization bug (not supplying the data set name to ENQ
                correctly)  which allowed a member to be deleted, restored or
                renamed while it was being edited.
              - REVEDIT (E  dit and View) is changed to show the search match th
at                the cursor has been positioned to in reverse video, as is done
                  by REVIEW (Browse).
                - The PL/I source margins   columns are extracted from the 'SORM
GIN',               'MAR' or 'MARGINS' settings from leading '*PROCESS' and '%PR
OCESS'              statements for syntax highlighting purposes.
 
 
 
                    R43 notes
 
                      R43.0 introduces RFE - the "REVIEW Front End".
2010-March
                        RFE is a menu framework to allow navigation to the vario
us components                         of the package.  The initial menu options
are:                                  D - "REVLEV" - the data set list utility w
hich is a bit "3.4-ish".              O - "REVOUT" - to access spooled output wh
ich is a bit                                           "QUEUE meets 3.8-ish".
                                        T - "REVTSO" - which is a bit "6-ish".
                                        This may change to a numerical scheme la
ter if enough other options             materialize.
 
                                          To assist RFE operations, the default
for PFK2 is now 'SPLIT' which is          a new global subcommand equ  ivalent t
o 'TSO RFE'.  Note that an initial          RFE option can be specified as an op
erand of 'SPLIT'.
                                            Architecturally, this release sees a
ll B  SM and BASSM instructions               removed from the package.  All cod
e is now intended to run in the               31-bit addressing mode under z/OS,
 although the code has yet to be              compiled and tested under z/OS at
the time of writing  .
                                                RFE is mainly to aid use under M
VS/370, and so the 370 version is               being released first.
 
                                                  The source for the main load m
odule has increased from 49.3 KLOC to             57.8 KLOC.  As well as new CSE
CTs delivering new function, a few                  fixes were also implemented,
 including:                                         - Add EADSCB=OK settings.
                                                    - Reactivate DIV PDS member
data caching under FSHELP to stabilize                scrolling   when )I member
 inclusion is used.                                   - Add extended ISPF stats
recognition (but not necessarily digestion).          - Preserve seconds in time
stamp when processing ISPF stats.                     - Recognize and handle ZI
 P archives in PDS members.                             - When exiting from a RE
VIEW of a zipped file, scroll to place                    that file at the top o
f the zip directory display, instead of                   always reshowing the z
ip directory f  rom the top, which was *very*               annoying when a ZIP
archive contains many screensful of file names.           - Fix "fastpath" which
 was broken and always reported I/O errors.                 It might have been b
roken by the DSNTYPE=LARGE su  pport.                       - Detect screen size
 change dynamically.  This is intended to support             loss of a terminal
 and a LOGON RECONNECT using a terminal with                  different screen d
imensions.                                                    - Assume square br
ackets can be rendered natively with x'AD'/x'BD'.                           - Im
prove STAX processing for MVS/370.                                          - Fi
x an intermittent S0C4 with REVEDIT line command blocks.                    - Fi
x an S0C4 in REVEDIT with 'C * *' and new string never specified.           -
Use userid as 2nd dsname qualifier for UNDO/REDO data set when
the prefix is not equal to the userid.  This will stop other users
with your prefix hogging your UNDO/REDO and CONDENSE data sets.
(CONDENSE is   used by the 'Z' action in REVLEV.)  And you can now tell
  which users are making such data sets under your high-level qualifier.
- Use Merge Sort instead of Bubble Sort for member name and TTR sorts,
  reducing an initial displ  ay of 'REV ISPPLIB F' from minutes in some
    cases to sub-second.  (Sorts of other member attributes still use
    Bubble Sort because the field to be sorted is not fixed.  REVLEV
    uses Merge Sort when sorting the data   set name list.)
    - Add repeated-symbol optimization for triple-plane symbol graphics.
    - Upgrade the 'N' (member rename) action code dialog screen I/O.
 
 
      R43.1 changes:
      - Prevent QSAM I/O error during REVEDIT COPY from crashing off the
          whole REVIEW/RFE environment by adding EROPT=ACC to the DCB so
          that the abend is considered recoverable by the SYNAD exit.
        - Add a member selection list for REVEDIT COPY from a PDS and no
            member name specified.  (This was the chief source of the QSAM I/O
            errors mentioned above.)
          - Report MEMBER NOT FOUND instead of S013-18 for REVEDIT COPY from
            a PDS when   the specified member is not present.
            - Verify that the UNDO/REDO data set does not exist at the start
              of a REVEDIT session before allocating it.  If it does exist then
              report REVVEDIT#.BACKUP   NOT REUSED (where # is the screen number
)               instead of DYNALLOC feedback codes.  It is up to the user to dec
ide             if the data in the pre-existing data set should be used for reco
very.           Any such recovery may well involve m  anually editing a copy of
the               recovery file member and shifting all of the data 12 columns t
o the             left.
                - Do similar for the CONDENSE data set, except that   the messag
e is                ABORTED - CONDENSE FILE EXISTS.  It is up to the user to dec
ide                 if the data in the pre-existing data set should be used for
recovery.           Any such recovery would probably involve using the REVLPDS p
ro  gram.           - Handle full DIV when loading data from REVCATCH - was gett
ing S0C4.                           ("REVCATCH" refers to the way line mode TSO
data is taken from                  SYSOUTTRAP and loaded into DIV for fullscree
n scrollable browsing.              Look at the REVLISTC CLIST to see an example
.)
 
                                    R43.2 fixes the UCB address acquisition from
 the TIOT which became              a bug with the   31-bit addressing conversio
n and which can cause an              S0C4 abend.
 
 
                                        R43.3 fixes the display of prompting pan
els when running as an                  ISPF application.
 
 
                                          R43.4 completes the support necessary
to process VTOCs on EAV                   and data sets residing in EAS which ha
ve format-8 and   format-9                  DSCBs replacing the format-1 DSCB.
 
 
                                              R43.5 fixes more AMODE-31 glitches
 and adds the data set name to                open file details in the display p
roduced by the 'TCB'/'RB' command.            REVHIST has been rewritten to use
the full Binder dialog API in all               cases, and is now called under z
/OS for PDS load modules as well as             PDSE and HFS program objects.  *
*-RED ALERT-** Also fixed is the                REVEDIT data corruption of edite
d data by a CHANGE ALL command which            caused some   data bytes to be o
verlaid with x'FF' when using a data              space to back the data.  Sessi
ons on pre-ESA levels of MVS were not             affected.
 
 
                                                    R43.6 fixes a S0C4 abend whe
n the 'OPERANDS' or 'MSGID' operand of              FSHELP was used.  This was e
xposed whe  n running with AMODE=31.
 
 
                                                        R44 notes
 
                                                        R44.B rolls up changes f
rom 43.6 onwards.                 2012-O  ctober          It is an MVS/370-only
OCO beta or early release prior to GA.
                                                                        Apart fr
om bug fixes, the main changes include:                                 - A new
'SETUNZ' command to specify the file attributes, thereby                    over
riding the information in the ZIP file directory entry.                   - Chan
ges to the way member lists scroll after member selection.                - Usin
g PDS subcommands to produce displays for the 'H' and 'M'                   sele
ction co  de processing of load modules (via the REVUSPDS CLIST).           - Ad
ding the 'BOUNDS' primary command in REVEDIT.                               - Sh
ow data in out-of-bounds columns in blue in REVEDIT.                        - Ad
ding the 'TE' line comm  and for text entry in REVEDIT.                       -
Adding the 'CUT' and 'PASTE' primary commands to REVEDIT.                     -
Recovering from PDS directory I/O errors during INFO processing,
which includes the data set Delete fun  ction in REVLEV (data set list).
- Adding the 'M' action code to REVLEV (data set list).
- Adding LEFT/RIGHT scrolling in REVLEV (data set list) so that all
  information columns can be viewed on insufficiently   wide screens.
 
  The 'BRVS' (or 'B' for short) undocumented operand has been added
  to the REVIEW command.  Its use is intended to allow the browsing
    of virtual storage. When specified, the required first positional
    (data set name) operand is ignored.  The data is displayed under
    the heading of ACTIVE, as per IPCS.  About all it is currently
      good for is browsing the in-core MVS/370 nucleus.
 
      The following z/OS-only fixes were introduced into the code base:
      - For progra  m PDSE directory displays, the member name operand of
          primary commands is now folded to upper case if there are no
          lower case characters in any of the member names.
        - For UNIX directory disp  lays, the entries read from a directory
            are now always sorted before display.  Previously, if the SORT
            order was "sort by name" no sorting was performed, which could
            lead to an out-of-order display depe  nding on subdirectory MOUNT
              points, leading in turn to unexpected behaviour for LOCATE command
s.          Actually, the term "z/OS-only" really means "MVS/ESA or later".
 
 
              R44.0 is the first R44 GA release - with source code.     2014-Jan
uary
                REVIEW now incorporates a GIF decoder which adds GIF files to th
e                             PCX and BMP file formats that can be decoded and d
isplayed on 3270              graphics terminals.  Interlaced and animated GIFs
are supported.                Only one cycle of the animation is currently shown
.  NEWTOP can                 b  e used to manually trigger another cycle.
 
                                When programmed symbols are used for graphics, R
EVIEW prefers to                load the code   points into the internal screen
buffer from which                 the 3270 data stream is built.  This allows 32
70 compression logic              to also be applied to graphics data, and reduc
es the number of                  TPUTs issued.  This scheme   does not work wel
l when the pictures are             large enough to require more code points tha
n all read/write                    storages can provide.  The logic to build th
e 3270 data stream for              these large pictures has probably been b  ro
ken in this release, but              hopefully it will be fixed in due course.
 
                                      REVIEW 'ACTIVE'
                                        will now cause the current contents of v
irtual storage in your TSO              session address space to be browsed.  EQ
UATE and DROP commands have             been added.  LEFT and RIGHT are repurpos
ed in this mode to control                jumping through the storage address tr
ace table.  LPA and JPA loaded            modules, as well as (under z/OS) nucle
us control sections are                   automatically defined as usable symbol
s.  LOC/LIST now understands                storage addresses specified much lik
e as is done in TSO TEST.                   The symbol name 'X' can be used for
the current location, as per IPCS.          '%' and '?' can be used in the field
 preceding each storage word.               No support f  or "above the bar" sto
rage currently exists.
                                              The 'BRVS' operand mentioned above
 has been scrapped.
                                                Browsing z/OS UNIX zip files is
now supported.
                                                Not mentioned under R43 above is
 the v  ertical scroll bar.                       When not running as an ISPF ap
plication, and when the PDS member list           is more than a screenful, colu
mn 80 contains an indicator of the                vertical scroll location of th
e member list.
                                                    In response to a request, me
mber scrolling is now a bit different.              Firstly, the member list scr
olls less.  The cursor is placed bes  ide             the member just processed,
 but that member's jump dot is blanked,                             so <enter> w
ill just restore the cursor to home.  This should mean              that all mem
bers will always be visible when they can all fit in                a single scr
eenful.                                                              [
 
 
                //HERC01R  JOB ,RECV370,CLASS=A,MSGCLASS=X,REGION=6144K,NOTIFY=H
ERC01           //*
                //RECVREV PROC LLQ=
                /  /RDEL    EXEC PGM=IEFBR14
                  //RECVDEL  DD  DSN=HERC01.REVIEW.&LLQ,DISP=(MOD,DELETE),
                  //             UNIT=SYSALLDA,SPACE=(TRK,0)
                  //RECV370 EXEC   PGM=RECV370
                    //RECVLOG  DD  SYSOUT=*
                    //XMITIN   DD  DSN=HERC01.REV.&LLQ..XMI,DISP=SHR
                    //SYSPRINT DD  SYSOUT=*
                      //SYSUT1   DD  DSN=&&SYSUT1,
                      //             UNIT=VIO,
                      //             SPACE=(CYL,(5,1)),
                        //             DISP=(NEW,DELETE,DELETE)
                        //SYSUT2   DD  DSN=HERC01.REVIEW.&LLQ,
                        //             UNIT=SYSALLDA, VOL=SER=??????,
                          //             SPACE=(CYL,(15,2,20),RLSE),
                          //             DISP=(NEW,CATLG,DELETE)
                          //SYSIN    DD  DUMMY
                            //        PEND
                            //*
                            //CLIST   EXEC RECVREV,LLQ=CLIST
                              //DATA    EXEC RECVREV,LLQ=DATA
                              //HELP    EXEC RECVREV,LLQ=HELP
                              //LOAD    EXEC RECVREV,LLQ=LOAD
                              //
                                                          Basic documentation ab
out the REVIEW package                                    ----------------------
----------------------
                                                          R  EVIEW is a decades-
old public domain application intended for                  the TSO environment
running on MVS-family operating systems.
                                                            The Release No  tes
are in member REVNOTES of the REVIEW.DATA data set.
                                                              See below for Inst
allation Notes.
                                                                As of Release 43
:
                                                                (1) All BASSM an
d BSM instructions have   been removed.
                                                                      This means
 that under OS/390 and z/OS REVIEW is now expected                    to run as
a pure 31-bit application.  It also mea  ns that                        REVIEW w
ill no longer run under MVS/XA and MVS/ESA with                         back lev
els of DFP which do not allow AMODE=31 BPAM and SAM.
                                                                          Natura
lly, REVIEW continues to be a pure 24-bit application                     under
MVS/370.
                                                                            Also
 note that REVIEW/RFE is only tested under MVS 3.8J                         and
most supported (at the time) releases of z/OS.
 
                                                                          (2) Th
e REVIEW Front End (RFE) is now introduced.
                                                                              RF
E is a basic menu s  ystem allowing navigation to the various
components of the package.  The initial release of RFE
delivers the "Data Set List" and the "TSO Command" options.
 
                                                                              Th
e REVIEW/RFE package includes the following data sets:
 
- REVIEW.DATA
  This contains a copy of these notes, and intallation process
  samples and other information such as the Release Notes.
 
                - REVIEW.LOAD
                  This contains the load modules of the REVIEW package which get
                  updated each release of REVIEW.
 
                  - REVIEW.CLIST
                    This contains TSO CLISTs, some of which pertain to or are in
voked               by REVIEW/RF  E, and some of which have nothing to do with R
EVIEW.
                    - REVIEW.HELP
                      This contains the members   for the SYSHELP file.  It form
s the                   online documentation of the package outside the ISPF env
ironment.
                      - REVIEW.PANELS
                          This contains ISPF panels which may be of use if you w
ant to                    run REVIEW as an ISPF application.
                        * NOTE: This data set is NOT included in the package   f
or MVS/370.
 
                          Installation Notes
                            ==================
 
                            This package is made available for download as sever
al ZIP archives.
                              Installation Steps:
                              ------------------
 
                                1. Download each ZIP you require.
                                2. UNZIP each archive to acquire the XMIT sequen
tial file.                      3. RECEIVE each XMIT file   to reconstruct a par
titioned data set.                4. Install each PDS as appropriate.
                                     Other members in this data set supply sampl
e jobs for some of these.
 
                                    Sample JCL for uploading a file via a card r
eader:                              --------------------------------------------
-----
 
                                      Assumptions for this scenario are:
                                        (1) The file to be uploaded has fixed-le
ngth 80-byte records.                                 (2) The file is not a job
stream to be submitted, but is simply data.           (3) The file is to be copi
ed into a new data set called                             HERC01.FB80.DATA
                                                      (  4) The carder reader to
 be used is device number 00C.                          (5) The carder reader is
 online to the system but not allocated                     to any other address
 space such as JES2 or JES3.
                                                              [For example, if t
he card reader is known to JES2 as                            "Reader 1" then th
e JES2 operator command                                       $PRDR1
                                                                will "drain" the
 card reader, and so it will be deallocated                     by JES2 (when th
e current work, if any, has finished),                          thus making it a
vailable for allocat  ion by other jobs.]
                                                              //HERC01G  JOB ,GE
NER,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),                        //             REG
ION=4096K,NOTIFY=HERC01                                         //STEP1   EXEC P
GM=IEBGENER                                                     //SYSPRINT DD  S
YSOUT=*                                                         //SYSUT1   DD  U
NIT=00C,DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)                        //SYSUT2   DD
 DSN=HERC01.FB80.DATA,DISP=(NEW,CATLG,DELETE),                    //
 UNIT=SYSALLDA,SPACE=(TRK,(500,20),RLSE),                         //
 DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=3120)                      //SYSIN    D
D  DUMMY                                                            //
 
 
 
                                                                      Performing
 the RECEIVE                                                          ----------
------------
                                                                        For z/OS
, use the TSO/E RECEIVE command to process each XMIT file.
 
                                                                          For MV
S 3.8, a sample job to perform the RECEIVE assumming                      the pr
erequisite RECV370 program is installed now f  ollows:
                                                                            //HE
RC01R  JOB ,RECV370,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),                      //
           REGION=4096K,NOTIFY=HERC01                                         //
*
           }//RECVREV PROC LLQ=
            //RDEL    EXEC PGM=IEFBR14
            //RECVDEL  DD  DSN=HERC01.REVIEW.&LLQ,DISP=(MOD,DELETE),
            /  /             UNIT=SYSALLDA,SPACE=(TRK,0)
              //RECV370 EXEC PGM=RECV370
              //RECVLOG  DD  SYSOUT=*
              //XMITIN   DD    DSN=HERC01.REV&LLQ..XMI,DISP=SHR
                //SYSPRINT DD  SYSOUT=*
                //SYSUT1   DD  DSN=&&SYSUT1,
                //             UNIT=VIO,
                  //             SPACE=(CYL,(5,1)),
                  //             DISP=(NEW,DELETE,DELETE)
                  //SYSUT2   DD  DSN=HERC01.REVIEW.&LLQ,
                    //             UNIT=SYSALLDA, VOL=SER=??????,
                    //             SPACE=(CYL,(15,2,20),RLSE),
                    //             DISP=(NEW,CATLG,DELETE)
                      //SYSIN    DD  DUMMY
                      //        PEND
                      //*
                        //CLIST   EXEC RECVREV,LLQ=CLIST
                        //DATA    EXEC RECVREV,LLQ=DATA
                        //HELP    EXEC RECVREV,LLQ=HELP
                          //LOAD    EXEC RECVREV,LLQ=LOAD
                          //
 
                                       \INMR06
