 \INMR01      &      NODENAME      IBMUSER      A      A      20050807123736
         INMR02          IEBCOPY                                  &        _
                    IBMUSER  COLE  PDS     -  ASM2ZAP  BLKSPTRK  DSCOPY  MACROS
 SCHEDRUN  XREFASM \INMR02          INMCOPY                          "4
          \INMR03                         &         {  _   _  &            "8
 Vs             _ &                         i - 3 }             3 }
 
 
 
             ASM2ZAP     BLKSPTRK    DSCOPY      MACROS      SCHEDRUN    XREFASM
 
 
                                                     _ ./ ADD NAME=ASMJCL   0100
-05218-05218-1502-00038-00038-00000-DBCOLE9            //@DSCOPY  JOB (CSW,UPS),
'540-456-8536',CLASS=A,                        00010000//             MSGLEVEL=(
1,1),NOTIFY=R9999,TIME=1439                    00020000/  /*
                                                 00030000//*
                                                 00040000//*********************
**************************************           00050000//*
                                       *           00060000//* Sample JCL to ass
emble and linkedit the DSCOPY program. *           00070000//*
                                       *           00080000//*******************
******  **********************************           00090000//*
                                                     00100000//ASM     EXEC PGM=
ASMA90,REGION=0M,                                    00110000// PARM='TERM,TEST,
OBJECT,NODECK,LINECOU  NT(109)' <=========LINECOUNT=== 00120000//SYSLIB   DD  DS
N=SYS1.MACLIB,DISP=SHR                                 00130000//         DD  DS
N=SYS1.MODGEN,DISP=SHR                                 00140000//*
                                                         00150000//*************
**********************************************           00160000//*
                                             *           00170000//* The followi
ng MACLIB is available from WWW.COLESOFT.COM *             00180000//*
                                               *           00190000//         DD
  DSN=DBCOLE.MACLIB,DISP=SHR <======================DSN=== 00200000//*
                                               *           0021000  0//*********
**************************************************           00220000//*
                                                             00230000//SYSUT1
DD  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CYL,(15,5)),               00240000//
      DISP=(,PASS)                                             00250000//SYSTERM
  DD  SYSOUT=*                                                 00260000//SYSPRIN
T DD  SYSOUT=*                                                 00270000//SYSLIN
  DD  DSN=&&OBJS  ET,UNIT=DISK,SPACE=(CYL,(1,1),RLSE),           00280000//
        DISP=(MOD,PASS)                                          00290000//SYSIN
    DD  DSN=DBCOLE.DSCOPY.EXPORT(DSCOPY),DISP=SHR <=======DSN=== 00300000//*
                                                                   00310000//LKE
D    EXEC PGM=IEWL,REGION=0M,                                      00320000//
          PARM='TEST,XREF,LET,LIST,NCAL',                          00330000//
          COND=(0,LT)                                                00340000//S
YSLMOD  DD  DSN=DBCOLE.LOAD(DSCOPY),DISP=SHR <================DSN=== 00350000//S
YSUT1   DD  DSN=&&SYSUT1,DISP=(OLD,DELETE)                           00360000//S
YSPRINT DD  SYSOUT=*                                         +         00370000/
/SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)                             0038000
0./ ADD NAME=DSCOPY   0101-05218-05218-1643-01976-01761-00000-DBCOLEA
 DSCOPY   TITLE 'DSCOPY - Description'                         08/05 Z17 DSCOPY
 *********************************************************************** 0  0020
000*                                                                     * 00030
000* The DSCOPY program is copyrighted (c) 1972-2005 by David B. Cole.   * 00040
000* All rights reserved.                                                * 00050
000*                                                                       * 000
60000*********************************************************************** 000
70000*                                                                     * 000
80000* DESCRIPTION                                                           * 0
0090000*                                                                     * 0
0100000* DSCOPY is a general purpose program which copies data sets          * 0
0110000* sequentially.  It allows the u  ser to copy sequential files, BDAM    *
 00120000* files (i.e.  REGIONAL(1) files in PL/I or direct access files in    *
 00130000* FORTRAN), and single members of partitioned data sets from any      *
 00140000* valid input device (e.g. card reader, disk   drive, or tape drive) to
 * 00150000* any valid output device (e.g.  printer, card punch, disk drive, or
 * 00160000* tape drive).  The advantage of this utility over others having the
 * 00170000* same function is that DSCOPY is considerably more effici  ent and
   * 00180000* faster (more that twice as fast as the IBM utility IEBGENER, for
   * 00190000* example).  It takes full advantage of OS data management faciliti
es * 00200000* in order to optimize as much as possible the data transfer rate.
   *   00210000*
     * 00220000* DSCOPY has the following features:
     * 00230000*
     * 00240000* 1.  ) All information needed is specified through JCL or throug
h the  * 00250000*     PARM field. No control dataset (SYSIN, for example) is ne
eded.  * 00260000*
       * 00270000* 2.) DSCOPY can   perform any number of seperate copies in one
 jobstep * 00280000*     (subject, of course, to OS limits on the number of DD c
ards     * 00290000*     permitted within a job or step).
         * 00300000*
           * 00310000* 3.) Input datasets may be sequential, direct, or individu
al members * 00320000*     of partitioned data sets, or a concatenation of any c
ombination * 00330000*     of the above with any combination of   DCB attributes
 (RECFM,     * 00340000*     LRECL, and BLKSIZE).
             * 00350000*
             * 00360000* 4.) Any record format is allowed (fixed, variable, und+
 efined) for   * 00370000*     input, and it may be changed to any other reco  r
d format for     * 00380000*     output. In addition, logical record lengths and
/or block sizes  * 00390000*     may also be changed. All such changes are autom
aticly           * 00400000*     accomodated for (see below).
                   * 00410000*
                   * 00420000* Here is a simple example of the invocation of DSC
OPY:               * 00430000*    //...      JOB CARD       ...
                   * 004400  00*    //*
                     * 00450000*    //A       EXEC PGM=DSCOPY
                     * 00460000*    //SYSPRINT DD  SYSOUT=A
                     * 00470000*    //IN01       DD  DSN=       ... etc.
                       * 00480000*    //OUT01    DD  DSN=       ... etc.
                       * 00490000*    //IN02     DD  DSN=       ... etc.
                       * 00500000*    //OUT02    DD  DSN=         ... etc.
                         * 00510000*    //         .
                         * 00520000*    //         .
                         * 00530000*    //         .
                           * 00540000*    //         etc.
                           * 00550000*
                           * 00560000*******************************************
*******  ********************* 00570000*
                             * 00580000* LEGAL INFORMATION:
                             * 00590000*
                               * 00600000* This program is copyrighted (c) 1972-
2005 by David B. Cole. All     * 00610000* rights reserved.
                               * 00620000*
                               * 0063  0000* This program is distributed freely
and may be reproduced and        * 00640000* redistributed without restriction o
ther than:                       * 00650000*   - This copyright and usage/warran
ty/liability restriction         * 00660000*     sta  tement ("Legal Statement")
 may not be modified or removed.   * 00670000*   - A similar Legal Statement loc
ated in this program's source code * 00680000*     also may not be removed.
                                   * 00690000*
                                     * 00700000* This program is distributed wit
hout warranty of any kind, including * 00710000* (without limitation) warranties
 of merchantability and of fitness   * 00720000* for a particular purpose. It is
 u  p to the user to make his own      * 00730000* determination of the usefulne
ss of this program in his own system.  * 00740000*
                                       * 00750000* The user agrees not to hold e
ither David B. Co+ le or Cole Software,  * 00760000* LLC or any person affiliate
d with Cole Sof  tware, LLC (collectively  * 00770000* "COLE") liable for any in
jury or damage whatsoever.                 * 00780000*
                                           * 00790000* Further, the user agrees
to indemnify COLE against thir  d parties    * 00800000* for any action arising
from the user's use, misuse, modification,   * 00810000* and/or redistribution o
f this program.                              * 00820000*
                                               * 00830000* This program may be m
odified freely so long as all modifications    * 00840000* are clearly marked bo
th internally and externally to distinguish    * 00850000* them from the distrib
uted code and functionality.                   * 00860000*
                                                 * 00870000* As a courtesy, plea
se notify David Cole if you discover any bugs or * 00880000* if you need or have
 made any code changes. (COLE, of course, does   * 00890000* not guarantee   tha
t any future changes or corrections wither will or * 00900000* will not be made.
)                                                  * 00910000*
                                                   * 00920000* Contact informati
on as of A  UG05 is:                                 * 00930000*
                                                     * 00940000*     Name:
          David B. Cole                              * 00950000*     Country:
          USA                                          * 00960000*     Telephone
:           540-456-8536                               * 00970000*     FAX:
            540-456-6658                               * 00980000*     E-mail:
            dbcole@colesoft.com                          * 00990000*     Website
:             www.colesoft.com                           * 01000000*
                                                         * 01010000*     Snail M
ail:          Cole Software                                * 01020000*
                736 Fox Hollow Road                        * 01030000*
                Afton, VA 22920                            * 01040000*
                USA                                        * 01050000*
                                                             * 01060000*********
************************************************************** 01070000*
                                                             * 01080000* PACKAGI
NG:                                                            * 01090000*
                                                               * 01100000* The D
SCOPY.ZIP file contains the following files:                   * 01110000*
                                                                 * 01120000*   -
 DSCOPY.ALC is the assembler source code for the program.        * 01130000*
                                                                 * 01140000*   -
 JCL.TXT is sample JCL for assembli+ ng and link editing the       * 01150000*
   program.                                                          * 01160000*
                                                                     * 01170000*
 All of the files are encoded in ASCII. When uploading them to your  * 01180000*
 mainframe, ASCII-to-EBCDIC translation should b  e enabled.           * 0119000
0*                                                                     * 0120000
0*********************************************************************** 0121000
0*                                                                       * 01220
000* INSTALLATION:                                                       * 01230
000*                                                                     * 01240
000* Assembling DSCOPY will require a macro library available from Cole  * 012
50000* Software's web site (www.colesoft.com). The file there is named     * 012
60000* MACROS.ZIP. You will have to obtain and install these macros before * 012
70000* you will be able to complete the installation of DSCOPY.            * 012
80000*                                                                       * 0
1290000* To install DSCOPY, do the following:                                * 0
1300000*                                                                     * 0
1310000*   - Obtain and inst  all Cole Software's macro library (MACROS.ZIP).  *
 01320000*                                                                     *
 01330000*   - Use WINZIP or PKUNZIP (or whatever) to decompress and extract   *
 01340000*     the DSCOPY.ALC, and JCL.TXT   files from DSCOPY.ZIP.
 * 01350000*
 * 01360000*   - Upload the two files to your mainframe. Make sure that
 * 01370000*     ASCII-to-EBCDIC translation is turned on.
   * 01380000*
   * 01390000*   - Upload the files to a library whose DCB attributes are
   * 01400000*     RECFM=FB, LRECL=80, and BLKSIZE=n*80.
     * 01410000*
     * 01420000*   - Check out the JCL member for sample JCL to assemble and
     * 01430000*     linkedit the DSCOPY program.
     * 0  1440000*
       * 01450000*   - Assemble the DSCOPY member using both system macros and p
rivate * 01460000*     macros available from Cole Software.
       * 01470000*
         * 01480000*   - Linkedit the DSCOPY program into a suitable load librar
y.       * 01490000*
         * 01500000*   - Try it out.
           * 01510000*
           * 01520000***********************************************************
************ 01530000*                               +
             * 01540000* USAGE:
               * 01550000*
               * 01560000*  1.) DDNAMEs for input must be of the form INx where
x is any       * 01570000*      alphameric character string of fro  m 0 to 5 cha
racters in       * 01580000*      length.
                 * 01590000*
                 * 01600000*  2.) DDNAMEs for output must be of the form OUTx wh
e  re x is as in   * 01610000*      (1) above.
                   * 01620000*
                   * 01630000*  3.) Copy operations are performed from each //IN
x DD card to a       * 01640000*      corresponding //OUTx DD card (e.g. from //
INA to //OUTA, from  * 01650000*      //IN9999A to OYT9999A, from //IN to //OUT,
 from //INTRASH to   * 01660000*      //OUTTRASH, etc.). Clearly, there must exi
st a one to one      * 01670000  *      correspondence between the input DD card
s and the output DD    * 01680000*      cards.
                       * 01690000*
                       * 01700000*  4.) Copy o  perations are performed in the o
rder of the ascending    * 01710000*      EBCDIC coalating sequence of x. In the
 following example, the  * 01720000*      copies are performed in the order show
n (*regardless* of the   * 01730000*      sequence in which t  he DD cards are a
ctually presented):        * 01740000*          1st //IN      to //OUT
                           * 01750000*          2nd //INA     to //OUTA
                           * 01760000*          3rd //INTRASH to //OUTTRASH
                             * 01770000*          4th //IN01    to //OUT01
                             * 01780000*          5th //IN02    to //OUT02
                             * 01790000*          6th //IN1     to //OUT1
                               * 01800000*          7th //IN10    to //OUT10
                               * 01810000*          8th //IN2     to //OUT2
                               * 01820000*          9th //IN9999A to //OUT9999A
                                 * 01830000*      Watch out for pitfalls here! N
ote in particular, that a copy   * 01840000*      from //IN10 to //OUT10 will oc
cur *before* a copy from //IN2   * 01850000*      to //OUT2. (This may matter, f
or example, if you're writing to * 018600  00*      tape.)
                                   * 01870000*
                                   * 01880000*  5.) Input block sizes must be av
ailable to DSCOPY from either      * 01890000*      DSCB  s, tape labels, or JCL
. If other necessary DCB parameters  * 01900000*      are missing, then defaults
 are taken (see below).              * 01910000*
                                     * 01920000*  6.) Keyed direct acce+ ss file
s (e.g. PL/I REGIONAL(2) and           * 01930000*      regional(3) f  iles) may
 be copied, but the keys themselves      * 01940000*      won't be copied. The r
esulting output file will be sequential  * 01950000*      unless DSORG=DA is cod
ed in the JCL.                           * 01960000*
                                           * 01970000*  7.) A SYSPRINT DD card (
e.g. //SYSPRINT DD SYSOUT=*) must be       * 01980000*      included in the JCL.
 This DD card specifies a message data set * 01990000*      for DSCOPY.  It's DC
B is DSORG=PS, RECF  M=UA, LRECL=121,        * 02000000*      BLKSIZE=121). Any
attempt to override this is ignored.         * 02010000*
                                             * 02020000*  8.) If any necessary D
CB atributes are missing, then the   following * 02030000*      conversions are
performed:                                     * 02040000*
                                               * 02050000*      a.) If the input
's DSORG is missing, then DSORG=PS is used.    *   02060000*
                                                 * 02070000*      b.) If the out
put's DSORG is missing, then DSORG=PS is used.   * 02080000*
                                                 * 02090000*        c.) If the i
nput's RECFM is missing, then RECFM=U is used.     * 02100000*
                                                   * 02110000*      d.) If the o
utput's RECFM is missing, then the input's RECFM   * 02120000*          is used
 .                                                   * 02130000*
                                                     * 02140000*      e.) If the
 input's BLKSIZE is missing, then an error condition * 02150000*          is rep
orted.                                                 * 02160000*
                                                       * 02170000*      f.) If t
he output's BLKSIZE is missing, then the input's       * 02180000*          BLKS
IZE is used. Exceptions:                                 * 02190000*
                                                         * 02200000*
- If the input's RECFM=V while the output's RECFM<>V     * 02210000*
  then the input's BLKSIZE-4 is used.                      * 02220000*
                                                           * 02230000*
  - If the input's RECFM<>V while the output's RECFM=V,    * 02240000*
    then the input's BLKSIZE+4 is used.                      * 02250000*
                                                             * 02260000*      g.
) If the input's LRECL is missing, then the input's BLKSIZE  * 02270000*
  is used. Exception:                                        * 02280000*
                                                               * 02290000*
      - If the input's RECFM=V, then the input's BLKSIZE-4 is  * 02300000*
        used.                                                  * 02310000*
         +                                                       * 02320000*
  h.) I  f the output's LRECL is missing, then the output's        * 02330000*
        BLKSIZE is used. Exception:                                * 02340000*
                                                                   * 02350000*
          - If the out  put's RECFM=V, then the output's BLKSIZE - 4 * 02360000*
              is used.                                               * 02370000*
                                                                     * 02380000*
      i.) In the case of concatenated   input, any settings that are   * 0239000
0*          made for the output data set that are based on the         * 0240000
0*          characteristics of the input data set, are based on the    * 0241000
0*          chatacteristics of the *first* DD card i  n the input        * 02420
000*          concatenation.                                             * 02430
000*                                                                     * 02440
000*      j.) The above listed conversions are (if required) applie  d in  * 024
50000*          the same order in which they are listed. For example,      * 024
60000*          conversion (f) will be applied before conversion (h).      * 024
70000*                                                                     * 024
80  000*  9.) If the LRECL for the output data set is to be different from   * 0
2490000*      the LRECL for the input data set, then there are three cases:  * 0
2500000*                                                                     * 0
2510000*      A.)   Output's LRECL > input's LRECL:                            *
 02520000*                                                                     *
 02530000*            - In this case, if the output's RECFM=F, then the unused *
 02540000*              portion   of each output record is filled with blanks
 * 02550000*              (I.e. the record is right-padded with blanks).
 * 02560000*
 * 02570000*      b.) Output's LRECL < input's   LRECL *but* the entire input
   * 02580000*          record is still desired in the output data set:
   * 02590000*
   * 02600000*            - In this case, the input record is   spanned onto as
many * 02610000*              output records as is required. Note that this is t
he   * 02620000*              default action.
     * 02630000*
       * 02640000*     c.) Output's LRECL < input's LRECL and only that portion
of the * 02650000*         input record that will fit on one output record is de
sired: * 02660000*
       * 026  70000*           - In this case each input record that is too long
 is      * 02680000*             truncated before it is written to the output da
ta set.  * 02690000*             In order to use this truncation facility, the u
ser must * 02700000*       +       code TRUNCATE in the EXEC statement's PARM= f
ield.      * 02710000*               Notes:
             * 02720000*
             * 02730000*               - If TRUNCATE is coded, then truncation w
ill occur    * 02740000*                   for all copy operations in the jobste
p.             * 02750000*
               * 02760000*               - If truncate is not coded, then spanni
ng will occur  * 02770000*                 for all copy   operations.
                 * 02780000*
                 * 02790000*               - WARNING! If spanning occurs, and th
e output file's  * 02800000*                 RECFM is V or VS, the spa  nning wi
ll *not* be        * 02810000*                 compatible with RECFM=VS!
                   * 02820000*
                   * 02830000* 10.) DSCOPY generates a completion code with the
follo  wing values:  * 02840000*
                     * 02850000*        0  - Execution completed without errors
                     * 02860000*
                       * 02870000*        4  - One of the following "concerns" o
ccurred:               * 02880000*
                       * 02890000*               a.) When DSCOPY was called as a
 subroutine, too many  * 02900000*                     arguements were passed (s
ee below).               * 02910000*
                         * 02920000*               b.) When DSCOPY was called as
 a subroutine, the third * 02930000*                     arguement was invalid (
see below).                * 02940000*
                           * 02950000*               c.) For a //INx or a //OUTx
 DDNAME, a corresponding   * 02960000*                   //OUTx o  r //INx DDNAM
E was not found.             * 02970000*
                             * 02980000*        8  - One or more copy operations
 was either suppressed or    * 02990000*             terminated for some reason.
                               * 03000000*
                               * 03010000*        12 - The program was terminate
d before any copies were       * 03020000*             attempted.
                                 * 03030000*
                                 * 03040000* 11.) PARM FIELD PROCESSING: There a
re several controls that DSCOPY  * 03050000*      accepts via the parm field. Th
e general syntax is:               * 03060000*
                                   * 03070000*        - Their form is either "ke
yword" or "keyword=value".         * 03080000*
                                   * 03090000            _ *        - They may b
e given in any order.                            * 03100000*
                                                 * 03110000*        - They must
be separated from each other by blanks or commas.* 03120000*
                                                   * 03130000*        - Keyword
names must be given in full; abbreviations are not * 03140000*          checked
for.                                               * 03150000*
                                                     * 03160000*        - Also,
redundancies are not checked for; each instance of a * 03170000*          partic
ular keyword overrides and nullifies all prior       * 03180000*          instan
ces.                                                   * 03190000*
                                                       * 03200000*        - Thes
e controls apply to *all* copies performed by DSCOPY.  * 03210000*
                                                         * 03220000*      The fo
llowing controls are supported:                          * 03230000*
                                                         * 03240000*          TR
UNCATE                                                     * 03250000*
When copying long records into output files with short     * 03260000*
LRECLs, this cause DSCOPY to truncate the record. (Omit    * 03270000*
this keyword if you want longs records to be spanned in  to  * 03280000*
  the output file.)                                          * 03290000*
                                                             * 03300000*
  START=number                                               * 0331000  0*
    This causes copying to start with the given input record   * 03320000*
    NUMBER. NUMBER-1 RECORDS ARE SKIPPED. THE DEFAULT IS       * 03330000*
    START=1.                                                   * 03340000*
                                                                 * 03350000*
      STOP=number                                                * 03360000*
      This causes copying to stop after the given input record   * 03370000*
      number IS REAC  HED AND COPIED. (THE FIRST INPUT RECORD,     * 03380000*
        *REGARDLESS* of whether or not it is actually copied, is   * 03390000*
        record number 1.)  The default is to copy until input EOF  * 03400000*
        is reached.                                                  * 03410000*
                                                                     * 03420000*
          COUNT=number                                               * 03430000*
          This causes copying to stop after the gi  ven number of      * 0344000
0*          input records have been copied. The default is to copy     * 0345000
0*          until input EOF is reached.                                * 0346000
0*                                                               +       * 03470
000*          IMPORTANT! When COUNT=number is given, the given   or        * 034
80000*          implied START=number control is incrimented by the given   * 034
90000*          COUNT= value for each successive copy. This makes it       * 035
00000*          easier to segment large files into smaller ones via        * 0
3510000*          suitable multiple copy requests.                           * 0
3520000*                                                                     * 0
3530000*      NOTES:                                                         * 0
3540000*                                                                       *
 03550000*        - If COUNT= and STOP= conflict, then copying will stop at    *
 03560000*          whichever event occurs first.                              *
 03570000*
 * 03580000*        - If COUNT=0 or if STOP= is less than START=, then no
 * 03590000*          records are copied.
 * 03600000*
   * 03610000*        - All numbers are treated as being unsigned 32-bit. They m
ay * 03620000*          range from 0 to 4g.
   * 03630000*
     * 03640000*****************************************************************
****** 03650000*
     * 03660000* TECHNICAL INFORMATION:
       * 03670000*
       * 03680000* 1.) DSCOPY uses QSAM for all I/O.
       * 03690000*
       *   03700000* 2.) Chained scheduling (OPTCD=C) is used wherever possible.
 It is   * 03710000*     not possible for input data sets with RECFM=U. It is al
so not   * 03720000*     possible when the BLKSIZE is sufficiently large and the
 region  * 03730000*       is sufficently small that only one buffer can be gene
rated.     * 03740000*
           * 03750000* 3.) DSCOPY is serially reusable.
           * 03760000*
             * 03770000*
             * 03780000*********************************************************
************** 03790000*
               * 03800000* DYNAMIC INVOCATION:
               * 03810000*
               * 03820000*  DYNAMIC INVOCATION:
                 * 03830000*      "DSCOPY" CAN BE EITHER LINK-EDITED INTO OR DYN
AMICLY INVOKED   * 03840000*      BY A USER'S PROGRAM AND USED AS A SUBROUTINE.
 WHEN THIS IS    * 03850000*      DONE, "DSCOPY" EXPECTS TO BE PASSED UP TO THRE
E A+ RGUEMENTS:    * 03860000*
                     * 03870000*      1.) THE FIRST ARGUEMENT WILL BE USED AS A
PARM FIELD           * 03880000*
                     * 03890000*      2.) THE SECOND ARGUEMENT IS A LIST OF "DDN
AME" PREFIXES TO       * 03900000*          BE USED IN PLACE OF "IN" AND "OUT".
 THE LIST MAY ALSO     * 03910000*          CONTAIN A REPLACEMENT "DDNAME" FOR T
HE "SYSPRINT" DATA     * 03920000*          SET.
                       * 039300  00*
                         * 03940000*      3.) THE THIRD ARGUEMENT IS AN EBCDIC N
UMBER TO BE USED AS      * 03950000*          THE STARTING VALUE OF "X" IN THE M
ESSAGE "COPY # X".       * 03960000*
                           * 03970000*      ANY OR ALL ARGUEMENTS MAY BE EITHER
OMITTED OR NULL IN WHICH   * 03980000*      CASE THE OBVIOUS DEFAULTS WILL BE TA
KEN.                       * 03990000*
                             * 04000000*
                             * 04010000*
                             * 04020000* EXAMPLES OF INVOCATION:
                               * 04030000*
                               * 04040000*
                               * 04050000*     1.) FOR "ASSEMBLER" USERS:
                                 * 04060000*                  .
                                 * 04070000*                  .
                                 * 04080000*                  .
                                   * 04090000*        ALL ARGUEMENTS GIVEN (NOTE
: ANY ARGUEMENTS MAY STILL BE      * 04100000*        NULL):
                                   * 04110000*                  LINK  EP=DSCOPY,
PARAM=(PARM-2,DDNAMES,CPYCNT)      * 0412  0000*
                                     * 04130000*        SOME ARGUEMENTS NOT GIVE
N:                                   * 04140000*                  LINK  EP=DSCOP
Y,PARAM=(,DDNAMES)                   * 04150000*                    .
                                       * 04160000*                  .
                                       * 04170000*                  .
                                       * 04180000*        PARM FIELD GI  VEN:
                                         * 04190000*                  DC    Y(L'
PARM)                            07/96   * 04200000*         PARM     DC    C'TR
UNCATE,COUNT=10000'              07/96   * 04210000*
                                           * 04220000*        NULL PARM FIELD GI
VEN:                                       * 04230000*                  DC    Y(
0)                                 07/96   * 04240000*         PARM     DS    0X
                     +               07/96   * 04250000*
                                               * 04260000*        COMPLETE DDNAM
E LIST GIVEN:                                  * 04270000*         DDNAMES  DC
  Y(48)               LENGTH OF LIST           * 04280000*                  DC
  CL8'INPUT'          CHANGE "IN"   PREFIX TO    * 04290000*         *
                        "INPUT"                  * 04300000*                  DC
    CL8'OUTPUT'         CHANGE "OUT" PREFIX TO   * 04310000*         *
                        "OUTPUT"                   * 04320000*
DC    3XL8'00'            UNUSED ENTRIES           * 04330000*
DC    CL8'PRINTER'        CHANGE "SYSPRINT"        * 04340000*         *
                          DDNAME TO "PRINTER"      * 04350000*
                                                     * 04360000*        PARTIAL
DDNAME LIST GIVEN:                                   * 04370000*         DDNAMES
  DC    Y(16)               LENGTH OF LIST           * 04380000*
    DC    CL8' '              DON'T CHANGE THE "IN"    * 04390000*         *
                              PREFIX                   * 04400000*
    DC    CL8'O'              CHANGE THE "OUT"         * 04410000*         *
                                PREFIX TO "O"            * 04420000*
                                                         * 04430000*        NULL
 DDNAME LIST GIVEN:                                      * 04440000*         DDN
AME   DC    Y(0)                  DDNAME LIST LENGTH       * 04450000*
                                                           * 04460000*        NO
TE: BLANKS AND BINARY ZEROS ARE TREATED EQUVALENTLY IN     * 04470000*        TH
E DDNAME LIST ENTRIES - E.G. " DC CL8'A' " I  S TREATED      * 04480000*
THE SAME WAY AS " DC C'A',XL7'00' ".                         * 04490000*
                                                             * 04500000*
STARTING COPY NUMBER GIVEN:                                    * 04510000*
   CPYCNT   DC    Y(3)                COPY # LENGTH            * 04520000*
            DC    C'200'              STARTING COPY #          * 04530000*
                                                               * 04540000*
    NULL COPY NUMBER GIVEN:                                      * 04550000*
     CPYCNT   DC    Y(0)                CPY # LENGTH             * 04560000*
                                                                 * 04570000*
                                                                   * 04580000*
   2.) FOR "FORTRAN" USERS:                                        * 04590000*
             .                                                     * 04600000*
             .                                                       * 04610000*
               .                                                     * 04620000*
        NOTE THAT THE FIRST ELEMENT IN EACH ARAY DESCRIBED BELOW     * 04630000*
        GIVES THE LENGTH IN BYTES OF TH+ E REMAINDER OF THE ARAY.      * 0464000
0*                                                                       * 04650
000*        PARM FIELD GIVEN:                                            * 04660
000*               INTEGER*2 PARM(9)/8,'TR','UN','CA','TE'/      07/96   * 04670
000*                                                                       * 046
80000*        NULL PARM FIELD GIVEN:                                       * 046
90000*               INTEGER*2 PARM/0/                                     * 047
00000*                                                                       * 0
4710000*        COMPLETE DDNAME LIST GIVEN:                                  * 0
4720000*         C CHANGE "IN" PREFIX TO "ABC"                               * 0
4730000*         C CHANGE "OUT" PREFIX TO "DE"                               * 0
47  40000*         C CHANGE "SYSPRINT" TO "PRT"                                *
 04750000*               INTEGER*2 DDNAME(25)/48,'AB','C ',2*'  ','DE',        *
 04760000*              X15*'  ','PR','T ',2*0/                                *
 04770000*
 * 04780000*        PARTIAL DDNAME LIST GIVEN:
 * 04790000*         C DON'T CHANGE THE "IN" PREFIX
 * 04800000*         C DON'T CHA  NGE THE "OUT" PREFIX
   * 04810000*         C CHANGE "SYSPRINT" TO "PAPER"
   * 04820000*               INTEGER*2 DDNAME(25)/48,20*0,'PA','PE','R ','  '/
   * 04830000*
     * 04840000*        NULL DDNAME LIST GIVEN:
     * 04850000*         C DON'T CHANGE ANY "DDNAME"'S
     * 04860000*               INTEGER*2 DDNAME/0/
       * 04870000*
       * 04880000*        NOTE: TRAILING BLANKS AND TRAILING ZEROS ARE TREATED
       * 04890000*        EQUIVALENTLY IN THE DDNAME LIST ENTRIES - E.G. THE
         * 04900000*        FOLLOWING ARE EQUIVALENT:
         * 04910000*               INTEGER*2 DDNAME(5)/8,'A ',3*'  '/
         * 04920000*               INTEGER*2 DDNAME(5)/8,'A ',3*0/
         * 0  4930000*
           * 04940000*        STARTING COPY NUMBER GIVEN:
           * 04950000*               INTEGER*2 CPYCNT(3)/4,'77','34'/
           * 04960000*
             * 04970000*        NULL COPY NUMBER GIVEN:
             * 04980000*               INTEGER CPYCNT/0/
             * 04990000*               .
               * 05000000*               .
               * 05010000*               .
               * 05020000*        ALL ARGUEMENTS GIVEN (N+ OTE: ANY ARGUEMENTS M
AY STILL BE      * 05030000*        NULL):
                   * 05040000*               CALL DSCOPY(PARM,DDNAME,CPYCNT)
                   * 05050000*
                   * 05060000*        SOME ARGUEMENTS NOT GIVEN:
                     * 05070000*               CALL DSCOPY(PARM)
                     * 05080000*
                     * 05090000*
                       * 05100000*
                       * 05110000* "DSCOPY" "JCL" EXAMPLES:
                       * 05120000*      //... JOB CARD ...
                         * 05130000*      //A EXEC PGM=DSCOPY
                         * 05140000*      //SYSPRINT DD SYSOUT=A
                         * 05150000*      //IN DD *
                         * 05160000  *      DATA CARD 1
                           * 05170000*      DATA CARD 2
                           * 05180000*      .
                           * 05190000*      .
                             * 05200000*      .
                             * 05210000*      DATA CARD N
                             * 05220000*      /*
                               * 05230000*      //OUT DD SYSOUT=A
                               * 05240000*      //* THE ABOVE COPIES THE DATA CA
RDS ONTO THE PRINTER.          * 05250000*
                                 * 05260000*
                                 * 05270000*      //INA DD DSN=DATASET,UNIT=2314
,VOL=SER=DISK,DISP=SHR           * 05280000*      // DD DSN=PDS(MEMBER),UNIT=231
4,VOL=SER=DISK1  ,DISP=SHR         * 05290000*      // DD DSN=PDS(MEMBER1),UNIT=
2314,VOL=SER=DISK1,DISP=SHR        * 05300000*      // DD *
                                   * 05310000*      DATA CARD 1
                                     * 05320000*      DATA CARD 2
                                     * 05330000*      /*
                                     * 05340000*      // DD DSN=DATASET2,UNIT=24
00,VOL=SER=TAPE,DISP=SHR,            * 053500  00*      // DCB=(RECFM=VB,LRECL=2
0,BLKSIZE=7294),LABEL=(2,NL)           * 05360000*      //OUTA DD DSN=DATASET3,U
NIT=SYSDA,SPACE=(TRK,(10,10)),         * 05370000*      // DCB=RECFM=U,DISP=(,PA
SS)                                    * 05380000*      //*   THIS IS AN EXAMPLE
 OF INPUT CONCATINATION, MIXED INPUT     * 05390000*      //* DCB ATRIBUTES, CHA
NGE OF ATRIBUTES FROM THE INPUT DATA     * 05400000*      //* SET TO THE OUTPUT
DATA SET, AND USE OF DEFAULT ATRIBUTES   * 05410000*      //* FOR THE OUTPU+ T D
ATA SET (THE OUTPUT "BLKSIZE" IS ASSUMED   * 05420000*      //* TO BE EQU  AL TO
 THE "BLKSIZE" OF THE FIRST INPUT DATA       * 05430000*      //* SET).
                                             * 05440000*
                                             * 05450000*************************
********  ************************************** 05460000         TITLE 'DSCOPY
-- Change History'                     07/96 DBC 05470000***********************
************************************** 08/05 DBC 05480000*
                                       * 08/05 DBC 05490000* Last Change Date -
August 6, 2005                         * 08/05 DBC 05500000*
                                       * 08/05 DBC 05510000* Repackaged DSCOPY f
or shareware distribution via the        * 08/05 DBC 05520000* Internet.
                                         * 08/05 DBC 05530000*
                                         * 08/05 DBC 05540000* Added a copyright
 statement and summary legalese to the   * 08/05 DBC   05550000* SYSPRINT output
.                                          * 08/05 DBC 05560000*
                                           * 08/05 DBC 05570000* Added a README
file to the distribution package           * 08/05 DBC 05580000* con  taining ex
tensive legalese and a comprehensive         * 08/05 DBC 05590000* installation
and usage instructions.                      * 08/05 DBC 05600000*
                                             * 08/05 DBC 05610000* Ditto for the
 so  rce code: Added extensive legalese,       * 08/05 DBC 05620000* installatio
n instructions, and a reqork of the usage      * 08/05 DBC 05630000* instruction
s.                                             * 08/05 DBC 05640000*
                                                 * 08/05 DBC 05650000* Replaced
all obsolete DBCOLE.MACLIB macros with their     * 08/05 DBC 05660000* current v
ersions so that this program can be successively * 08/05 DBC 05670000* assembler
 using the DBCOLE.MACLIB library   available from  * 08/05 DBC 05680000* www.col
esoft.com.                                         * 08/05 DBC 05690000*
                                                   * 08/05 DBC 05700000* Updated
 obsolete contact information.                       * 08/05 DBC 05710000*
                                                     * 08/05 DBC 05720000*******
****************************************************** 08/05 DBC 05730000
  SPACE 3                                              08/05 DB  C 05740000*****
******************************************************** 07/96 DBC 05750000*
                                                       * 07/96 DBC 05760000* Las
t Change Date - July 18, 1996                          * 07/96 DBC 05770000*
                                                         * 07/96 DBC 05780000* A
dded support for PARM field keywords                     * 07/96 DBC 05790000*
                                                         * 07/96 DBC 05800000* A
dded improved+  statistics messages to the SYSPRINT        * 07/96 DBC 05810000*
 output.                                                     * 07/96 DBC 0582000
0*                                                           * 07/96 DBC 0583000
0* Added unit-of-work commentary headers throughout the      * 07/96 DBC 0584000
0* code.                                                       * 07/96 DBC 05850
000*                                                           * 07/96 DBC 05860
000************************************************************* 07/96 DBC 05870
000         TITLE 'DSCOPY -- $PRINT MACRO  '                             DBC 058
80000         MACRO                                                          058
90000&N       $PRINT &MSGADR                                                 059
00000&N       LA    R15,&MSGADR-1       PNT TO MSG LEN F  LD                   0
5910000         BAL   R14,PUTSYSP         GO TO MSG PRTING ROUTINE             0
5920000         MEND                                                           0
5930000         TITLE 'DSCOPY -- INITAL DEFFINITIONS'
 05940000         GBLA  &MAXBUFS            MAX NUMBER OF BUFFERS
 05950000         GBLA  &MINGET             MIN GETMAIN
 05960000         SPACE 3
 05970  000*MAXBUFS SETA  50                  ALLOW 50 BUFS / DS
   05980000&MAXBUFS SETA  5                   ALLOW 50 BUFS / DS  12/3/79     JR
B  05990000&MINGET  SETA  60*1024+2*((96*&MAXBUFS+2047)/2048*2048)+2*(80+8)   JR
B  06000000*        A  LLOW SPACE FOR:
     06010000*        OPEN, CLOSE, FDR/ABR DS NOT FOUND EXIT,
JRB  06020000*        AND QSAM ROUTINES (60*1024) (WAS 6*1024) )
JRB  06030000*        SUFFICENT 2K B  LOCKS FOR 96 BYTE IOB'S/ICB'S FOR EACH DCB
       06040000*        MINIMAL BUFFER POOLS (FOR EMERGENCIES)
       06050000         SPACE 1
       06060000&MINGET  SETA  (&MINGET+15)/16*16  R  OUND TO DUOBLE-DOUBLE WORD
LENGTH   06070000         SPACE 3
         06080000         #REGS R                                              0
8/05 DBC 06090000         TITLE 'DSCOPY -- INITALIZATION AND PARAM  ETER PROCESS
ING'       06100000DSCOPY   #ENTER SAVTYPE=(LOCAL,    STD NONREENTRANT RSA
 08/05 DBC*06110000               DSCSAVE),           RSA'S NAME
 08/05 DBC*06120000               BASES=2             2 BASES (R13 AND R12)
   08/05 DBC 06130000         MVI   RCD+1,0             ZERO THE RETURN CODE
   08/05 DBC 06140000         MVC   IDDNAME(L'DCBDDNAM),=CL8'IN' INIT DDNAME
             06150000         MVC   ODDNAME(L'DCBDDNAM),=CL8'OUT' INIT DDNAME
             061  60000         MVC   PRTDDNAM,=CL8'SYSPRINT' INIT DDNAME
               06170000         ZAP   CPY#,=P'1'          INIT COPY COUNT
               06180000         MVI   FLAG,0              CLEAR ALL FLAGS
               06190000        +  SPACE 3
       07/96 DBC 06200000****  *************************************************
******** 07/96 DBC 06210000*
       * 07/96 DBC 06220000*             INPUT PARAMETERS PROCESSING
       * 07/96 DBC 06230000*
         * 07/96 DBC 06240000* I ACCEPT UP TO THREE INPUT PARAMETERS:
         * 07/96 DBC 06250000*     1ST - A STANDARD PARM FIELD
         * 07/96 DBC 06260000*     2ND - A SUBSTITUTE DDNAM  E LIST.
           * 07/96 DBC 06270000*     3RD - A STARTING COPY NUMBER.
           * 07/96 DBC 06280000* THE LAST USED PLIST SLOT MUST BE HI-FLAGGED.
           * 07/96 DBC 06290000*
             * 07/96 DBC 06300000* SEE IF I HAVE RECEIVED ANY PARAMETERS AT ALL.
             * 07/96 DBC 06310000*
             * 07/96 DBC 06320000***********************************************
*********  ***** 07/96 DBC 06330000         SPACE 1
                 07/96 DBC 06340000         LTR   R7,R1               COPT PLIST
 PTR; ANY GIVEN? 07/96 DBC 06350000         BZ    NOPARAMS            NOPE; SKIP
 *ALL* THIS      07/96 D  BC 06360000         LM    R2,R4,0(R7)         LOAD THE
 ENTIRE PLIST      07/96 DBC 06370000         SPACE 3
                   07/96 DBC 06380000*******************************************
****************** 07/96 DBC 06390000*
                   * 07/96 DBC 06400000*        2ND PARAMETER PROCESSING: DDNAME
S LIST             * 07/96 DBC 06410000*
                   * 07/96 DBC 06420000* (NOTE, PARM F  IELD ANALYSIS (1ST PARAM
ATER PROCESSING) IS  * 07/96 DBC 06430000* POSTPONED UNTIL AFTER I OPEN SYSPRINT
. THIS IS BECAUSE    * 07/96 DBC 06440000* PARM FIELD PROCESSING WILL GENERATE M
ESSAGES, BUT I DON'T * 07/96 DBC 06450000* KNOW WHAT MY SYSPRINT DDNA  ME IS UNT
IL I CHECK FOR A       * 07/96 DBC 06460000* DDNAMES LIST {2ND PARAMETER}).
                       * 07/96 DBC 06470000*************************************
************************ 07/96 DBC 06480000         SPACE 1
                           07/96 DBC 06490000         LTR   R2,R2
IS THERE A 2ND PARAMETER?  07/96 DBC 06500000         BM    NOPARAMS
NO, SKIP OUT                         06510000         LA    R5,0(,R3)
YES, CLEAR HI BYTE   OF ITS ADR        06520000         LTR   R5,R5
  IS 2ND PARAMETER OMITTED?            06530000         BZ    NODDN
  YES, SKIP OUT                        06540000         TM    7(R7),X'01'
  NO, IS IT 1/2 WD ALIGNED?  07/96   DBC 06550000         BZ    DDNOK1
    YES, CONTINUE                        06560000BDDDN    OI    FLAG,BADDDNM
    NO, SET ERROR FLAG                   06570000         B     NODDN
                                         06580000            _ DDNOK1   LH    R0
,0(,R3)           GET LENGTH OF DDN LIST               06590000         LTR   R0
,R0               IS IT NULL?                          06600000         BZ    NO
DDN               YES, SKIP OUT                        06610000           BM
BDDDN               NO, IT'S INVALID; ERROR              06620000         TM
1(R3),X'07'         NO, IS LEN A MULT OF 8?              06630000         BNZ
BDDDN               NO, ERROR                            06640000         SRL
  R0,3                YES, GET # OF ENTRIES                06650000         SH
  R3,=Y(L'DCBDDNAM-2) PNT TO LIST - 1 ENTRY                06660000         LA
  R5,DDNPTRTB-4       PNT TO OUTPUT PTR TBL - 1 ENTRY      06670000DDNLP    LA
  R3,L'DCBDDNA  M(,R3)  PNT TO NEXT LIST ENTRY               06680000         CL
I   0(R5),X'FF'         AT END OF PTR TBL?                   06690000         BE
    MUSTB0              YES, LIST ENTRY MUST BE 0            06700000         LA
    R5,4(,R5)           NO, P  NT TO NEXT PTR ENTRY            06710000
L     R6,0(,R5)           GET OUTPUT PTR                       06720000
LTR   R6,R6               IS THERE ONE?                        06730000
BZ    MUSTB0              NO, LIST ENTRY MUS  T BE 0             06740000
  OC    0(L'DCBDDNAM,R3),0(R3) NO, IS LIST ENTRY 0?              06750000
  BZ    DDNLPN              YES, GO TO NEXT ENTRY                06760000
  TM    0(R3),X'BF'         NO, IS 1ST BYTE 0 OR BLANK?            06770000
    BZ    BDDDN               YES, ERROR                           06780000
    MVC   0(L'DCBDDNAM,R6),0(R3) NO, MVC NEW DDN TO OUTPUT LOC     06790000
    B     DDNLPN              GO PROCESS NEXT ENTRY                0680000  0MUS
TB0   OC    0(L'DCBDDNAM,R3),0(R3) IS LIST ENTRY 0?                  06810000
      BNZ   BDDDN               NO, ERROR                            06820000DDN
LPN   BCT   R0,DDNLP            YES, GO PROCESS NEXT ENTRY           06830000NOD
DN    DS      0H                                             07/96 DBC 06840000
        SPACE 3                                              07/96 DBC 06850000*
************************************************************ 07/96 DBC 06860000*
                                                             * 07/96 DBC 0687000
0*     3RD PARAMETER PROCESSING: STARTING COPY NUMBER        * 07/96 DBC 0688000
0*                                                           * 07/96 DBC 0689000
0**************************************  *********************** 07/96 DBC 06900
000         SPACE 1                                              07/96 DBC 06910
000         TM    4(R7),X'80'         IS THERE A 3RD PARAMETER?  07/96 DBC 06920
000         BO    NOPARAMS            NO, SKIP OUT                           069
30000         LA    R4,0(,R4)           YES, ZERO HI BYTE OF ADR             069
40000         LTR   R4,R4               IS 3RD PARAMETER OMITTED?            069
50000         BZ    NOCPY#              YES, SKIP OUT                +         0
6960000         TM    11(R7),X'01'        NO, IS 1/2 WD ALIGNED?       07/96 DBC
 06970000         BZ    CPY#OK1             YES, CONTINUE
 06980000BDCPY#   OI    FLAG,BADCPY#        NO, SET ERROR FLAG
 06990000         B     NOCPY#              SKIP OUT
 0  7000000CPY#OK1  LH    R0,0(,R4)           GET PARAMETER LENGTH
   07010000         LTR   R15,R0              SAVE FOR LATER; IS PARAM NULL?
   07020000         BZ    NOCPY#              YES, SKIP OUT
   07030000           BM    BDCPY#              NO, IF NEG. THEN ERROR
     07040000         CH    R0,=Y(4)            NO, IS LENGTH TOO BIG?
     07050000         BH    BDCPY#              YES, ERROR
     07060000CPY#LP   LA    R4,1  (,R4)           NO, PNT TO NEXT DIGIT
       07070000         CLI   1(R4),C'0'          IS IT A DIGIT?
       07080000         BL    BDCPY#              NO, ERROR
       07090000         CLI   1(R4),C'9'            MAYBE, IS IT A DIGIT?
         07100000         BH    BDCPY#              NO, ERROR
         07110000         BCT   R0,CPY#LP           YES, GO CHECK NEXT DIGIT
         07120000         SR    R4,R15              PNT BACK T  O START OF PARAM
           07130000         BCTR  R15,0               GET MACHINE LENGTH
           07140000         EX    R15,CPY#PK          PACK GIVEN VALUE INTO CURR
ENT FLD    07150000NOCPY#   DS    0H
   07/96 DBC 07160000         SPACE 3
   07/96 DBC 07170000***********************************************************
** 07/96 DBC 07180000*
 * 07/96 DBC   07190000*     4TH PARAMETER PROCESSING: TOO MANY PARAMETERS
   * 07/96 DBC 07200000*
   * 07/96 DBC 07210000*********************************************************
**** 07/96 DBC 07220000           SPACE 1
       07/96 DBC 07230000         TM    8(R7),X'80'         ARE THERE EXTRA OPER
ANDS?  07/96 DBC 07240000         BO    NOPARAMS            NO, FINISHED
                 07250000         OI    FL  AG,TOOMP          YES, SET ERROR FLA
G                  07260000NOPARAMS DS    0H
         07/96 DBC 07270000         SPACE 3
         07/96 DBC 07280000******************************  *********************
********** 07/96 DBC 07290000* OPEN SYSPRINT AND INTRODUCE MYSELF.
         * 07/96 DBC 07300000***************************************************
********** 07/96 DBC 07310000         SPACE 1
             07/96 DBC 07320000         OPEN  (SYSPRINT,OUTPUT)   TRY TO OPEN MS
G DATASET    07/96 DBC 07330000         MVI   RCD+1,12            SET BAD RETURN
 CODE        07/96 DBC 07340000         TM    PRTOFLGS,X'10'      WAS OPEN OK?
       +                 07350000         BZ    EXIT                NO, GIVE UP
                           07360000         MVI   RCD+1,0             RESET RETU
RN CODE               JRB  07370000         SPACE 1
                 07/96 DBC 07380000         $PRINT CRIGHT             NAME AND C
OPYRIGHT         08/  05 DBC 07390000         $PRINT LEGAL1             LEGALESE
                   08/05 DBC 07400000         $PRINT LEGAL2             LEGALESE
                   08/05 DBC 07410000         $PRINT LEGAL3             LEGALESE
                   08/05 DBC 074200  00         $PRINT LEGAL4             LEGALE
SE                   08/05 DBC 07430000         $PRINT LEGAL5             LEGALE
SE                   08/05 DBC 07440000         $PRINT LEGAL6             LEGALE
SE                   08/05 DBC 07450000         $P  RINT LEGAL7             LEGA
LESE                   08/05 DBC 07460000         $PRINT SKIP3              WHIT
E SPACE                08/05 DBC 07470000         $PRINT DSCP               PRIN
T TITLE                08/05 DBC 07480000         SPACE 3
                         07/96 DBC 07490000*************************************
************************ 07/96 DBC 07500000* IF PARAMETER PROCESSING ERRORS HAVE
 OCCURRED, THEN        * 07/96 DBC 07510000* EXPLAIN IT TO DUMMY HERE.
                         * 07/96 DBC 07520000***********************************
************************** 07/96 DBC 07530000         SPACE 1
                           07/96 DBC 07540000         TM    FLAG,TOOMP
TOO MANY OPERAN  DS?                   07550000         BZ    #POK
  NO, CONTINUE                         07560000         MVI   RCD+1,4
  YES, SET RET CDE                     07570000         $PRINT TMEIPL
  PRINT ERROR MESSAGE                    07580000#POK     DS    0H
                               07/96 DBC 07590000         SPACE 1
                               07/96 DBC 07600000         TM    FLAG,BADCPY#
    VALID COPY PARAMETER?      07/96 DBC 0761  0000         BZ    C#OK
      YES, CONTINUE                        07620000         MVI   RCD+1,4
      NO, SET RET CODE                     07630000         $PRINT IC#
      PRINT ERROR MESSAGE                  07640000C#OK       DS    0H
                                   07/96 DBC 07650000         SPACE 1
                                   07/96 DBC 07660000         TM    FLAG,BADDDNM
        VALID DDNAME LIST?         07/96 DBC 07670000         BZ    DOK
          YES, CONTINUE                        07680000         MVI   RCD+1,12
          NO, SET RET CODE                     07690000         $PRINT IDL
          PRINT ERROR MSG                      07700000DOK      DS    0H
                                       07/96 DBC 07710000         SPACE 3
                                       07/96 DBC 07720000***********************
************************************** 07/96 DBC 07730000*
                         +             * 07/96 DBC 07740000*    1ST PARAMETER PR
OCESSING (FINALLY): THE   PARM FIELD     * 07/96 DBC 07750000*
                                         * 07/96 DBC 07760000* SEE WHETHER OR NO
T I EVEN HAVE A PARM FIELD. ISSUE AN     * 07/96 DBC 07770000* INFO MESSAGE IF I
 DON'T.                                    * 07/96 DBC 07780000*****************
******************************************** 07/96 DBC 07790000         SPACE 1
                                             07/96 DBC 07800000         LTR   R7
,R7               ARE THERE ANY PARAMETERS   07/96 DB  C 07810000*
                    AT ALL?                    07/96 DBC 07820000         BZ
NOPARM              NO, GO ISSUE MSG           07/96 DBC 07830000         L
R1,0(,R7)           @'PARM FIELD               07/96 DBC 07840000           LA
  R1,0(,R1)           PURIFY THE PARM FIELD PTR  07/96 DBC 07850000         LTR
  R1,R1               IS THERE A PARM FIELD?     07/96 DBC 07860000         BZ
  NOPARM              NO, GO ISSUE MESSAGE       07/96 DBC 07870000         LH
  R  3,0(,R1)           GET L'PARM FIELD           07/96 DBC 07880000         LT
R   R3,R3               IS IT NULL?                07/96 DBC 07890000         BN
Z   GOTPARM             NO, GO CHECK IT OUT        07/96 DBC 07900000         SP
ACE 1                                                07/96 DBC 07910000NOPARM
$PRINT PFN                "PARM FIELD: NONE"         07/96 DBC 07920000
B     PARMZ               DONE HERE                  07/96 DBC 07930000
SPACE 3                                                07/96 DBC 07940000*******
****************************************************** 07/96 DBC 07950000* I'VE
GOT A PARM FIELD. DETERMINE ITS LENGTH, EXTRACT IT,  * 07/96 DBC 07960000* AND U
PCASE IT.                                              * 07/96 DBC 07970000*****
******************************************************** 07/96 DBC 07980000
    SPACE 1                                              07/96 DBC 07990000GOTPA
RM  CL    R3,=A(L'PFTEXT)     IS L'PARM VALID AND        07/96   DBC 08000000*
                                REASONABLE?                07/96 DBC 08010000
      BNH   PLENOK              YES, PROCEED               07/96 DBC 08020000
      $PRINT PFIL               ISSUE ERROR MESSAGE        07/96 DBC 08030000
        MVI   RCD+1,12            I'M GONNA ABORT            07/96 DBC 08040000
        B     PARMZ               BLOW OUTTA HERE            07/96 DBC 08050000P
LENOK   DS    0H                                             07/96 DBC 08060000
        SPACE   1                                              07/96 DBC 0807000
0         OC    PFTEXT-1(*-*),1(R1) (EXECUTED)                 07/96 DBC 0808000
0         EX    R3,*-6              COPY PARM FIELD TO MSG     07/96 DBC 0809000
0*                                    BUFFER AND UPCASE IT.      07/96 DBC 08100
000         SPACE 1                                              07/96 DBC 08110
000         MVI   PFTEXT-1,C' '       CLEAN UP GARBAGE           07/96 DBC 08120
000         CLC   PFTEXT,PFTEXT-1     IS TH+ E PARM FIELD ALL      07/96 DBC 081
30000*                                  B  LANK?                     07/96 DBC 0
8140000         BE    NOPARM              YEP, AIN'T GOT ONE AFTER   07/96 DBC 0
8150000*                                  ALL.                       07/96 DBC 0
8160000         SPACE 3                                                07/96 DBC
 08170000************************************************************* 07/96 DBC
 08180000* OK, NOW IT'S TIME TO SCAN THE PARM FIELD. FIRST, DISPLAY  * 07/96 DBC
 08190000* IT. THEN SET UP BXH SCAN CONTROLS, THEN STRIP OFF LEADING *   07/96 D
BC 08200000* BLANKS AND COMMAS.                                        * 07/96 D
BC 08210000************************************************************* 07/96 D
BC 08220000         SPACE 1                                              07/96 D
BC 082  30000         LA    R0,PFLEN-L'PFTEXT(,R3) L'PARM FIELD MSG        07/96
 DBC 08240000         STC   R0,PF-1             STORE FOR PUTSYSP          07/96
 DBC 08250000         $PRINT PF                 DISPLAY THE PARM FIELD     07/96
 DBC 08260000           SPACE 1                                              07/
96 DBC 08270000         LA    R1,PFTEXT-1         @'UPCASED PARM FIELD -1    07/
96 DBC 08280000         LA    R2,1                BXH INCRIMENT              07/
96 DBC 08290000         ALR   R3,R1                 BXH LIMIT                  0
7/96 DBC 08300000         SPACE 1                                              0
7/96 DBC 08310000PARMLP1  BALR  R14,0               TOL: STRIP LEADING BLANKS  0
7/96 DBC 08320000         BXH   R1,R2,PARMZ           ADVANCE
 07/96 DBC 08330000         CLI   0(R1),C' '          LEADING BLANK?
 07/96 DBC 08340000         BER   R14                 YES, LOOP
 07/96 DBC 08350000         CLI   0(R1),C','          LEADING COMM  A?
   07/96 DBC 08360000         BER   R14                 YES, LOOP
   07/96 DBC 08370000         SPACE 3
   07/96 DBC 08380000***********************************************************
*  * 07/96 DBC 08390000* IDENTIFY THE NEXT KEYWORD
   * 07/96 DBC 08400000*********************************************************
**** 07/96 DBC 08410000         SPACE 1
     07/96 DBC 0  8420000         LA    R4,PARMKEYS-(PKYWORD+1) LOAD KEYWORD TBL
 SCANR 07/96 DBC 08430000         SLR   R5,R5               CLEAR KEYWORD LENGTH
 REG   07/96 DBC 08440000         BALR  R14,0               TOL: KEYWORD TABLE S
CAN    07/96 DBC 08450000           LA    R4,PKYWORD+1(R5,R4) ADVANCE TO NEXT TA
BLE SLOT 07/96 DBC 08460000         IC    R5,PKYEXLEN(,R4)    GET ITS TEXT LENGT
H -1     07/96 DBC 08470000         CLC   PKYWORD(*-*,R4),0(R1) (EXECUTED)
         07/96 DBC 08480000         EX    R5,*  -6              RIGHT TRIAL KEYW
ORD YET?   07/96 DBC 08490000         BLR   R14                 NOT YET, KEEP SC
ANNING     07/96 DBC 08500000         BH    BADPARM             NOPE, MISSED. ER
ROR        07/96 DBC 08510000         SPACE 1                +
             07/96 DBC 08520000         LA    R1,1(R5,R1)           ADVANCE THE
PARM FLD SCANR 07/96 DBC 08530000         SPACE 3
               07/96 DBC 08540000***********************************************
************** 07/96 DBC 08550000* EXTRACT THE KEYWORD'S VALUE/MEANING AND   "ST
ORE" IT INTO   * 07/96 DBC 08560000* THE ASSOCIATED VALUE SINK. DO FLAG KEYWORDS
 FIRST.        * 07/96 DBC 08570000* (THEY'RE EASY.)
               * 07/96 DBC 08580000*********************************************
*********  ******* 07/96 DBC 08590000         SPACE 1
                   07/96 DBC 08600000         ICM   R15,15,PKYSINK(R4)  @'VALUE
SINK; EXIST?       07/96 DBC 08610000         BZ    BADPARM             NOPE; SO
MEHOW I MATCHED    07/96   DBC 08620000*                                  THE TA
BLE DELIMITER        07/96 DBC 08630000         ICM   R4,1,PKYOIFLG(R4)   GET KE
YWORD'S MEANING      07/96 DBC 08640000*                                  FLAG.
IS THERE ONE?        07/96 DBC 08650000           BZ    GET#                NO,
THIS IS NOT A FLAG     07/96 DBC 08660000*                                  KEYW
ORD                    07/96 DBC 08670000         SPACE 1
                       07/96 DBC 08680000         CLI     0(R1),C' '          IS
 DELIMITER OK?           07/96 DBC 08690000         BE    PSETFLAG            YE
S, PROCEED               07/96 DBC 08700000         CLI   0(R1),C','          CH
ECK AGAIN                07/96 DBC 08710000         BNE   BADPARM
NO, ERROR.                 07/96 DBC 08720000         SPACE 1
                           07/96 DBC 08730000PSETFLAG OI    0(R15),*-*
(EXECUTED)                 07/96 DBC 08740000         EX    R4,*-4
STOR  E THE KEYWORD'S        07/96 DBC 08750000*
  MEANING                    07/96 DBC 08760000         B     PARMLP1
  DONE HERE. LOOP TO SCAN    07/96 DBC 08770000*
  FOR THE NEXT KEYW  ORD.      07/96 DBC 08780000         SPACE 3
                               07/96 DBC 08790000*******************************
****************************** 07/96 DBC 08800000* THE KEYWORD HAS A NUMERIC VAL
UE. EXTRACT IT, VCHECK IT,   * 07/  96 DBC 08810000* AND STORE IT.
                               * 07/96 DBC 08820000*****************************
******************************** 07/96 DBC 08830000         SPACE 1
                                 07/96 DBC 088400  00GET#     L     R5,0(,R15)
        GET KEYWORD'S PRIOR VALUE  07/96 DBC 08850000         CLR   R1,R3
        IS THERE ENOUGH ROOM LEFT  07/96 DBC 08860000*
        IN THE PARM FIELD FOR THE  07/96 DBC 08870000*
          KEYWORD TO HAVE A VALUE?   07/96 DBC 08880000         BH    PARMGOT#
          NO, THE KEYWORD HAS A NULL 07/96 DBC 08890000*
          VALUE. LEAVE ITS PRIOR (OR 07/96 DBC 08900000*                       +
            ORIGINAL) VALUE            07/96 DBC 08910000*
              UNDISTURBED.               07/96 DBC 08920000         TM    0(R1),
C'0'          IS THE KEYWORD DIRECTLY    07/96 DBC 08930000*
              FOLLOWED BY A NUMERIC      07/96 DBC 08940000*
                VALUE?                     07/96 DBC 08950000         BNO   PARM
LP3Z            NOPE, THE KEYWORD'S VALUE  07/96 DBC 08960000*
                IS NULL.                   07/96 DBC 08970000         SPACE 1
                                             07/96 DBC 08980000         SLR   R5
,R5               CLEAR THE VALUE ACCUMULATR 07/96 DBC 08990000         BCTR  R1
,0                BACK OFF THE SCANNER A     07/96 DBC 09000000*
                  LITTLE.                      07/96 DBC 09010000         BALR
R14,0               TOL: DECIMAL # EXTRACTION  07/96 DBC 09020000         BXH
R1,R2,PARMGOT#      ADVANCE TO NEXT DIGIT      07/96 DBC 09030000         TM
0(R1),C'0'          IS IT A DIGIT?             07/96 DBC   09040000         BNO
  PARMLP3Z            NO, HOPE IT'S A VALID      07/96 DBC 09050000*
                      DELIMITER.                 07/96 DBC 09060000         M
  R4,=F'10'           DECIMAL SHIFT THE          07/96 DBC 09070000*
                        ACCUMULATER                07/96 DBC 09080000         LT
R   R4,R4               DID 32-BIT OVERFLOW        07/96 DBC 09090000*
                        OCCUR?                     07/96 DBC 09100000         BN
Z   BAD  PARM             YES, ERROR.                07/96 DBC 09110000
IC    R4,0(,R1)           EXTRACT THE DIGIT          07/96 DBC 09120000
N     R4,=X'0000000F'     PURIFY IT.                 07/96 DBC 09130000
ALR   R5,R4                 ACCUMULATE IT; DID A CARRY 07/96 DBC 09140000*
                            OCCUR?                     07/96 DBC 09150000
  BC    3,BADPARM           YES, ERROR.                07/96 DBC 09160000
  BR    R14                 LOOP FOR   NEXT DIGIT        07/96 DBC 09170000
    SPACE 1                                              07/96 DBC 09180000PARML
P3Z CLI   0(R1),C' '          EO-# BUT NOT EO-PARM;      07/96 DBC 09190000*
                              VALID DELIMITER?             07/96 DBC 09200000
      BE    PARMGOT#            YES, PROCEED               07/96 DBC 09210000
      CLI   0(R1),C','          VALID DELIMITER?           07/96 DBC 09220000
      BNE   BADPARM             NO, ERROR.                 07/96 DB  C 09230000
        SPACE 1                                              07/96 DBC 09240000P
ARMGOT# ST    R5,0(,R15)          STORE THE EXTRACTED VALUE  07/96 DBC 09250000
        B     PARMLP1             LOOP FOR NEXT PARM         07/96 DBC 09260000
          SPACE 3                                              07/96 DBC 0927000
0************************************************************* 07/96 DBC 0928000
0* PARM FIELD ERROR. POINT OUT THE ERROR, THEN ABORT.        * 07/96 DBC 0929000
0****************+ ********************************************* 07/96 DBC 09300
000         SPA  CE 1                                              07/96 DBC 093
10000BADPARM  MVC   PFTEXT,PFTEXT-1     CLEAR THE PARM DATA        07/96 DBC 093
20000         MVI   0(R1),C'*'          FLAG THE ERROR POINT       07/96 DBC 093
30000         MVC   PF,=C' ERR  OR-----> '                           07/96 DBC 0
9340000         #TEST SIZE=(L'PF,EQ,13)   DEPENDANCY CHECK           07/96 DBC 0
9350000         $PRINT PF                 DISPLAY THE ERROR MESSAGE  07/96 DBC 0
9360000         MVI   RCD+1,12            SET   "ABORT" RC             07/96 DBC
 09370000PARMZ    DS    0H                                             07/96 DBC
 09380000         SPACE 3                                              07/96 DBC
 09390000***************************************************  ********** 07/96 D
BC 09400000*                                                           * 07/96 D
BC 09410000* END OF ALL PARAMETER PROCESSING. ABORT IF SIGNIFICANT     * 07/96 D
BC 09420000* ERRORS WERE FOUND.                                        * 07  /96
 DBC 09430000*                                                           * 07/96
 DBC 09440000************************************************************* 07/96
 DBC 09450000         SPACE 1                                              07/96
 DBC 09460  000         CLI   RCD+1,8             SHOULD I GIVE UP?          07/
96 DBC 09470000         BNL   CLOSEPRT            YES, DO SO                 07/
96 DBC 09480000         TITLE 'DSCOPY -- COPY PROCESSING SETUP'              07/
96 DBC 09490000**********  *************************************************** 0
7/96 DBC 09500000*                                                           * 0
7/96 DBC 09510000*                COPY PROCESSING SETUP                      * 0
7/96 DBC 09520000*                                                             *
 07/96 DBC 09530000*************************************************************
 07/96 DBC 09540000         SPACE 1
 07/96 DBC 09550000         LA    R1,INDCB            N  O, PNT TO INDCB
             09560000         BAL   R14,GETPFXLN        GO SET INDDNAM COMPARE P
ARAMS        09570000         LA    R1,OUTDCB           PNT TO OUTDCB
             09580000         BAL   R14,GETPFXLN        GO SET OUTDDNA  M COMPAR
E PARAMS       09590000         GETMAIN VC,LA=GETMQTY,A=GETMADR GET CORE FOR BUF
FERS           09600000         LTR   R15,R15             WAS MIN REQUEST GOTTEN
?              09610000         BZ    GTMOK               YES, CONTINUE
                 09620000         MVI   RCD+1,12            NO, SET RET CODE
                 09630000         $PRINT IC                 PRINT ERROR MSG
                 09640000         B     CLOSEPRT            QUIT
                 096  50000GTMOK    L     R1,GETMADR          PNT TO GETMAIN'ED
CORE               09660000         ST    R1,INBUFCB          INIT INPUT BUFFER
PTR                09670000         A     R1,GETMADR+4        PNT TO END OF GOTT
EN CORE            09680000        +  L     R0,GETMQTY          GET AMMOUNT TO G
IVE BACK TO OS       09690000           SH    R0,=Y(2*(80+8))     ADJUST FOR MIN
 BUF REQUIREMENT       09700000         SR    R1,R0               PNT TO START O
F CORE TO FREE         09710000         FREEMAIN R,LV=(0),A=(1)   GIVE OS SOME E
LBOW ROOM              09720000         L     R1  ,GETMADR+4        GET ORIGINAL
 L'GOTTEN CORE 07/96 DBC 09730000         LA    R1,2*(80+8)(,R1)    AJD FOR MIN
BUF REQUIREMENT          09740000         S     R1,GETMQTY          ADJUST FOR F
REED CORE                09750000         ST    R1,GETMADR+4          SAVE LEN F
OR FINAL FREEMAIN          09760000         SRL   R1,1                GET BUF SP
ACE FOR EA DCB             09770000         LR    R0,R1               REPLICATE
                           09780000         A     R1,GETMADR          PNT TO O
UTPUT BUFFER AREA            09790000         ST    R1,OUTBUFCB         INIT OUT
PUT BUFFER PTR               09800000         SH    R0,=Y(8)            ADJUST A
MMOUNT FOR BUF CNTRL BLK     09810000         ST    R0,MAXCR            SAVE FOR
 LATER                         09820000         L     R1,CVTPTR           PNT TO
 CVT                           09830000*        L     R1,CVTTCBP-CVTDSECT(,R1) P
NT TO NEW/OLD TCB PTRS         09840000         L     R1,0(,R1)           POINT
TO TCB POINTER.           JR  B  09850000         L     R1,4(,R1)           PNT
TO OUR TCB                       09860000         L     R1,12(,R1)          PNT
TO TIOT                          09870000         LA    R1,24(,R1)          PNT
TO 1ST DD ENTRY IN TIOT          09880000           ST    R1,TIOTADR          SA
VE IT                              09890000         TITLE 'DSCOPY -- DATASET COP
Y LOOP'                  07/96 DBC 09900000*************************************
************************ 07/96 DBC 09910000*
                         * 07/96 DBC 09920000*                  DATASET COPY LOO
P                        * 07/96 DBC 09930000*
                         * 07/96 DBC 09940000****************************  *****
**************************** 07/96 DBC 09950000         SPACE 1
                             07/96 DBC 09960000COPYLP   NI    FLAG,TRUNC
  CLEAR MOST OF FLAG BYTE              09970000         NI    FLAG2,0
  CLEAR   FLAG BYTE                      09980000         BAL   R14,ITIOT
    GO FIND NEXT INPUT DDNAME            09990000OTIOTLP  BAL   R14,OTIOT
    FIND NEXT OUTPUT DDN TO COPY         10000000ENDTST   TM    FLAG,OUTEND+INEN
D   BOTH DDNAMES MISSIN  G?                10010000         BO    FREECORE
      YES, END OF PROGRAM                  10020000         MVC   COPYTIT+8(3),E
DMSK+8 NO, SET UP -                        10030000         ED    COPYTIT+7(4),C
PY#    COPY TITLE                            10040000         AP    CPY#,=P'1'
        INCR CPY COUNT FOR NEXT              10050000         $PRINT SKIP3
        SKIP A FEW LINES           07/96 DBC 10060000         $PRINT COPYTIT
        PRINT THE COPY TITLE                 10070000            _          CLC
  INWORK(L'DCBDDNAM),OUTWORK IS THE IN/OUT PAIR MATCHED?   10080000         BE
  OPEN                YES, GO START COPYING                10090000         BH
  INMSNG              NO, INPUT DDNAME MISSING             10100000           OI
    FLAG,OUTMISS        NO, FLAG OUTPUT DDNAME MISSING       10110000         B
    PUTDDNMS            CONTINUE                             10120000INMSNG   OI
    FLAG,INMISS         FLAG INPUT DDNAME MISSING            10130000PUTDDNMS MV
I     PRNTM+1,INMISS      SET INPUT DDNAME MISSING TEST MASK   10140000
LA    R2,INDCB            GET INPUT DCB                        10150000
BAL   R14,PRNTDDCC        GO PRINT INPUT DDNAME (IF ANY)       10160000
MVI   PRNTM+1,OUTM  ISS     SET OUTPUT DDNAME MISSING TEST MASK  10170000
  LA    R2,OUTDCB           GET OUTPUT DCB                       10180000
  BAL   R14,PRNTDDCC        GO PRINT OUTPUT DDNAME (IF ANY)      10190000
  TM    FLAG,INMISS         IS IN  PUT DDNAME MISSING?             10200000
    BO    OTIOTLP             YES, GO GET NEXT OUTPUT DDNAME       10210000
    BAL   R14,ITIOT           GO FIND NEXT INPUT DDNAME            10220000
    B     ENDTST              LOOP BACK                              10230000
      SPACE 1                                              07/96 DBC 10240000OPE
N     LA    R8,1                COUNTER INCRIMENT          07/96 DBC 10250000
      SR    R9,R9               INIT INPUT RECORD COUNT    07/9  6 DBC 10260000
        SR    R10,R10             INIT OUTPUT RECORD COUNT             10270000
        SLR   R11,R11             INIT INPUT RECORDS COPIED  07/96 DBC 10280000
        SP    INCNT,INCNT         INIT INPUT DATA SET COUNT            1029000
0         LA    R1,INDCB            PNT TO INPUT DCB                     1030000
0         BAL   R14,DCBINIT         GO (RE)INITALIZE DCB                 1031000
0         LA    R1,OUTDCB           PNT TO OUTPUT DCB                    1032000
0         BAL     R14,DCBINIT         GO (RE)INITALIZE OUTPUT DCB          10330
000         OPEN  (IN,(INPUT,LEAVE),OUT,(OUTPUT,LEAVE)) OPEN DS'S          10340
000         TM    INOFLGS,X'10'       IS THE INPUT DCB OPENED?             10350
000         BZ    NOCOPY                NO, GO SAY SO                        103
60000         TM    OUTOFLGS,X'10'      YES, IS THE OUTPUT DCB OPENED?       103
70000         BZ    NOCOPY              NO, GO SAY SO                        103
80000         TM    FLAG,CPYSUPRS       YES  , SHOULD COPY BE SUPPRESSED?      1
0390000         BZ    OPENOK              NO, GO COPY                          1
0400000NOCOPY   $PRINT CS                 NO, SAY SO                           1
0410000         CLI   RCD+1,8             IS RET CODE HIGH   ENOUCH?
 10420000         BNL   CLOSE               YES, GO MAKE SURE DS'S ARE CLOSED
 10430000         MVI   RCD+1,8             NO, RESET RET CODE
 10440000         B     CLOSE               GO CLOSE THE OTHER DATA SET  +
   10450000         TITLE 'DSCOPY -- COPY ROUTINE'
     10460000************************************************************* 07/96
 DBC 10470000*                                                           * 07/96
 DBC 10480000*               LOGICAL RECORD COPY LOOP                    * 07/96
 DBC 1  0490000*                                                           * 07/
96 DBC 10500000************************************************************* 07/
96 DBC 10510000         SPACE 1                                              07/
96 DBC 10520000OPENOK     NI    FLAG,255-REREAD     TURN OFF REREAD FLAG
         10530000         OI    FLAG2,CONCAT        FLAG ICO CONCAT FOR INEXIT
         10540000         LH    R4,LRECL            GET OUTPUT DATA LENGTH
         10550000         SPACE 1
 07/96 DBC 10560000GET      CL    R9,STOP#            HAVE I COPIED THE STOP
 07/96 DBC 10570000*                                  RECORD?
 07/96 DBC 10580000         BNL   WRAPUP                YES, TERMINATE THIS COPY
   07/96 DBC 10590000         CL    R11,COUNT#          HAVE I COPIED THE REQUIR
ED 07/96 DBC 10600000*                                  NUMBER OF RECORDS?
   07/96 DBC 10610000         BNL   WRAPUP              YES, TERMI  NATE THIS CO
PY   07/96 DBC 10620000         SPACE 1
     07/96 DBC 10630000         GET   IN                  GET AN INPUT RECORD
     07/96 DBC 10640000         TM    FLAG,REREAD         HAS CONCATINATION OCCU
R  ED?           10650000         BZ    NOREREAD            NO, CONTINUE
                 10660000         TM    INOFLGS,X'10'       YES, WAS DATA SET RE
OPENED OK?       10670000         BO    OPENOK              YES, GO REREAD
                   10680000         $PRINT CT                 NO, ISSUE MESSAGE
                   10690000         B     WRAPUP              GO WRAP UP THIS CO
PY                 10700000         SPACE 1
         07/96 DBC 10710000NORE  READ ALR   R9,R8               INCR RECORDS IN
COUNTER    07/96 DBC 10720000         CL    R9,START#           HAVE I REACHED T
HE START   07/96 DBC 10730000*                                  RECORD?
           07/96 DBC 10740000         BL    GE  T                 NOT YET, SKIP
             07/96 DBC 10750000         ALR   R11,R8              COUNT COPIED R
ECORD        07/96 DBC 10760000         LR    R2,R1               SAVE INPUT RCD
 PTR                   10770000         SPACE 1
               07/96 DBC 10780000INGT     B     *-*                 INPUT RECFM
GATE                     10790000         SPACE 1
               07/96 DBC 10800000INU      DS    0H                  INPUT RE  CF
M=U                        10810000INF      LH    R3,INLRECL          INPUT RECF
M=F: GET LRECL             10820000         B     PUT                 GO WRITE R
CD                         10830000         SPACE 1
           +       07/96 DBC 10840000INV      MVC   HWD,0(R2)           INPUT RE
CFM=V: GE  T RCD LENGTH        10850000         LH    R3,HWD              GET LR
ECL                            10860000         SH    R3,=Y(4)            GET DA
TA LENGTH                      10870000         LA    R2,4(,R2)           PNT TO
 DATA FIELD                      10880000         SPACE 1
                       07/96 DBC 10890000PUT      ALR   R10,R8              INCR
 RECORDS OUT COUNTER   07/96 DBC 10900000         LR    R5,R3               SAVE
 INPUT DATA LENGTH               109100  00         CR    R3,R4               CO
MPARE INPUT VS OUTPUT DATA LENGTHS 10920000         BNH   OUTGT               IF
 INPUT NOT LONG, CONTINUE          10930000         LR    R5,R4               EL
SE, ADJUST INPUT LENGTH            10940000         SP  ACE 1
                           07/96 DBC 10950000OUTGT    B     *-*
OUTPUT RECFM GATE                    10960000         SPACE 1
                           07/96 DBC 10970000OUTU     STH   R5,OUTLRE  CL
  SET OUTPUT LRECL                     10980000         PUT   OUT
  GET OUTPUT BUFFER                    10990000         SPACE 1
                             07/96 DBC 11000000MVCRCD   BAL   R14,MVC
  MO  VE RCD TO OUTPUT BUFFER            11010000         ALR   R1,R5
    ADVANCE TO Z'SINK          08/05 DBC 11020000         ALR   R2,R5
    ADVANCE TO Z'SOURCE        08/05 DBC 11030000TRUNCTST TM    FLAG,TRUNC
    DO WE SPAN THE   RECORD?               11040000         BO    GET
      NO, GO GET NEXT RCD                  11050000         SR    R3,R4
      YES, IS RDC TOO LONG?                11060000         BNP   GET
      NO, GO GET NEXT RCD                    11070000         B     PUT
        YES, GO PUT NEXT RD SEGMENT          11080000         SPACE 1
                                   07/96 DBC 11090000OUTF     PUT   OUT
        GET OUTPUT BUFFER                    1110  0000         BAL   R14,MVC
          MOVE RDC TO OUTPUT BUFFER            11110000         ALR   R1,R5
          ADVANCE TO Z'SINK          08/05 DBC 11120000         ALR   R2,R5
          ADVANCE TO Z'SOURCE        08/05 DBC 11130000           LR    R5,R3
            RESTORE INPUT LRECL                  11140000         SR    R5,R4
            COMPARE INPUT VS OUTPUT RCD LENGTHS  11150000         BNM   TRUNCTST
            IF ^ SHORT, GO TST 4 TRUNCATION      11160000         MVI   0(R1),C
 ' '          SET INITAL PAD BLANK                 11170000         LPR   R5,R5
              GET PADDING LENGTH                   11180000         BCTR  R5,0
              DECR FOR INITAL PAD BLANK            11190000         LTR   R5,R5
                WAS INITAL SUFFICENT?                11200000         BNP   GET
                YES, GO GET NEXT RCD                 11210000         LR    R2,R
1               NO, GET SOURCE PAD PTR               11220000         LA    R1,1
(,R1)           GET OUTPUT PA+ D PTR                   11230000         BAL   R1
4,MVC             GO PAD OU  T RCD                       11240000         ALR
R1,R5               ADVANCE TO Z'SINK          08/05 DBC 11250000         ALR
R2,R5               ADVANCE TO Z'SOURCE        08/05 DBC 11260000         B
GET                 GO GET NEXT RCD                        11270000         SPAC
E 1                                              07/96 DBC 11280000OUTV     LA
  R6,4(,R5)           ADJUST FOR LENGTH FIELD              11290000         STH
  R6,HWD              SET UP LENGTH FIELD                    11300000         ST
H   R6,OUTLRECL         SET OUTPUT LRECL                     11310000         PU
T   OUT                 GET OUTPUT BUFFER                    11320000         MV
C   0(4,R1),HWD         MVC LENGTH FIELD TO RECORD           11330000
LA    R1,4(,R1)           PNT PAST LENGTH FIELD                11340000
B     MVCRCD              GO MOVE RECORD TO BUFFER             11350000
TITLE 'DSCOPY -- END OF COPY ROUTINE'                          11360000*********
*******  ********************************************* 07/96 DBC 11370000*
                                                     * 07/96 DBC 11380000*
         END-OF-FILE PROCESSING                      * 07/96 DBC 11390000*
                                                       * 07/96 DBC 11400000* DIS
PLAY THE FOLLOWING:                                    * 07/96 DBC 11410000*   -
 THE 1ST INPUT RECORD# COPIED.                         * 07/96 DBC 11420000*   -
 THE LAST INPUT RECORD# COPIED.                          * 07/96 DBC 11430000*
 - THE NUMBER OF INPUT RECORDS COPIED.                   * 07/96 DBC 11440000*
 - THE NUMBER OF OUTPUT RECORDS WRITTEN.                 * 07/96 DBC 11450000***
****************************************************  ****** 07/96 DBC 11460000
        SPACE 1                                              07/96 DBC 11470000W
RAPUP   MVI   RIO,C'0'            CCC                        07/96 DBC 11480000
        MVC   RIOWHICH(5),=C'FIRST'                          07/96   DBC 1149000
0         MVC   RIOINOUT(L'INNME),INNME                        07/96 DBC 1150000
0         MVI   RIOPLURL,C' '                                  07/96 DBC 1151000
0         MVC   RIOVERB(7),=C'COPIED '                         07/96 DBC 1152000
0           L     R0,START#           #'1ST RECORD COPIED        07/96 DBC 11530
000         BAL   R14,PUTTOTL         COMPLETE AND SEND THE MSG  07/96 DBC 11540
000         SPACE 1                                              07/96 DBC 11550
000         MVI     RIO,C' '            CCC                        07/96 DBC 115
60000         MVC   RIOWHICH(5),=C' LAST'                          07/96 DBC 115
70000         LR    R0,R9               #'LAST RECORD COPIED       07/96 DBC 115
80000         BAL   R14,PUTTOTL           COMPLETE AND SEND THE MSG  07/96 DBC 1
1590000         SPACE 1                                              07/96 DBC 1
1600000         MVC   RIOWHICH(5),=C'TOTAL'                          07/96 DBC 1
1610000         MVI   RIOPLURL,C'S'            +                       07/96 DBC
 11620000         LR    R0,R11              #  'INPUT RECORDS COPIED     07/96 D
BC 11630000         BAL   R14,PUTTOTL         COMPLETE AND SEND THE MSG  07/96 D
BC 11640000         SPACE 1                                              07/96 D
BC 11650000         MVC   RIOINOUT(L'OUTNME),OUTNME                        07/96
 DBC 11660000         MVC   RIOVERB(7),=C'WRITTEN'                         07/96
 DBC 11670000         LR    R0,R10              #'OUTPUT RECORDS WRITTEN   07/96
 DBC 11680000         BAL   R14,PUTTOTL         COMPLETE AND SEND THE MSG    07/
96 DBC 11690000         SPACE 3                                              07/
96 DBC 11700000************************************************************* 07/
96 DBC 11710000* IF A COUNT= VALUE WAS GIVEN, THEN INCRIMENT THE START=    * 07/
96 DBC 117  20000* VALUE BY THE COUNT= VALUE. THIS MAKES IT EASIER TO        * 0
7/96 DBC 11730000* SEGMENT A VERY LARGE DATASET INTO SEVERAL SMALLER ONES    * 0
7/96 DBC 11740000* VIA SUCCESSIVE COPIES.                                    * 0
7/96 DBC 11750000********  *****************************************************
 07/96 DBC 11760000         SPACE 1
 07/96 DBC 11770000         L     R0,COUNT#           GET THE COUNT= VALUE
 07/96 DBC 11780000         CL    R0,=X'  FFFFFFFF'     WAS ONE GIVEN?
   07/96 DBC 11790000         BE    SEGMENTZ            NO, FORGET IT
   07/96 DBC 11800000         SPACE 1
   07/96 DBC 11810000         L     R15,START#            GET START= VALUE
     07/96 DBC 11820000         ALR   R15,R0              INCRIMENT; OVERFLOW?
     07/96 DBC 11830000         BC    12,NEWSTART         NO, PROCEED
     07/96 DBC 11840000         L     R15,=X'FFFFFFFF'    TRUNCATE TO   MAX VALU
E      07/96 DBC 11850000NEWSTART ST    R15,START#          STORE
       07/96 DBC 11860000SEGMENTZ DS    0H
       07/96 DBC 11870000         SPACE 3
         07/96 DBC 11880000*****************************************************
******** 07/96 DBC 11890000* FINALLY, CLUSE THE FILES AND LOOP TO PERFORM NEXT C
OPY.   * 07/96 DBC 11900000*****************************************************
******** 07/96 DBC 1  1910000         SPACE 1
           07/96 DBC 11920000CLOSE    CLOSE (IN,LEAVE,OUT,LEAVE) CLOSE THE DATA
SETS                 11930000         B     COPYLP              GO PERFORM NEXT
COPY       07/96 DBC 11940000           TITLE 'DSCOPY -- END OF PROGRAM ROUTINE'
                       11950000*************************************************
************ 07/96 DBC 11960000*
           * 07/96 DBC 11970000*              END-  OF-PROGRAM PROCESSING
             * 07/96 DBC 11980000*
             * 07/96 DBC 11990000***********************************************
************** 07/96 DBC 12000000         SPACE 1                +
                 07/96 DBC 12010000FREECORE FREEMAIN V,A=GETMAD  R      FREE THE
 BUFFERS                     12020000CLOSEPRT $PRINT SKIP3              SKIP A F
EW MSG LINES       07/96 DBC 12030000         CLI   RCD+1,12            IS RET C
ODE TERMINAL?                12040000         BL    PUTEOP              NO, GO
 PRT NORMAL EOP MSG            12050000         $PRINT PT                 YES, P
UT PGM TERMINATE MSG           12060000         B     GETRCD              GO PRO
CESS RET CODE                  12070000PUTEOP   $PRINT EOP                ISSUE
EOP MSG                          12080000GETRCD   LH    R2,RCD              GET
RETURN CODE                      12090000         MVC   RCDMSG+15(3),EDMSK+8 MOV
E EDIT MASK TO MSG               12100000         CVD   R2,CVDWA            CNVR
T RETURN CODE TO DEC               12110000         ED    RCDMSG+14(4),CVDWA+6 E
DIT RCD INTO MSG                   12120000         $PRINT RCDMSG             IS
SUE RET CODE MSG                   12130000         CLOSE (SYSPRINT,LEAVE)    CL
OSE THE MESSAGE DATA SET           12140000           FREEPOOL SYSPRINT
FREE ITS BUFFERS                     12150000EXIT     DS    0H
RECEIVE BRANCHES                     12160000         LH    R15,RCD
GET THE RETURN CODE        07/96 DBC 12170000         #EXI  T ((R14,R12)),RC=(R1
5) RETURN TO CALLER          08/05 DBC 12180000         TITLE 'DSCOPY -- DCBINIT
 (1ST LEVEL SUBROUTINE) - (RE) INITALI*12190000               ZE DCB''S FOR OPEN
'                                      12200000         USING DCBDSECT,R1
    DECLARE DCB BASE                     12210000DCBINIT  MVI   DCBRECFM,0
    INIT RECFM                           12220000         MVI   DCBOPTCD,0
    INIT OPTCD                           12230000         STH   R9,DCBLRECL
    ZERO   LRECL                           12240000         STH   R9,DCBBLKSI
      ZERO BLKSIZE                         12250000         BR    R14
      RETURN                               12260000         DROP  R1
      KILL DCB BASE                          12270000         TITLE 'DSCOPY -- G
ETPFXLN (1ST LEVEL SUBROUTINE) - GENERATE DD*12280000               NAME COMPARE
 AND SHIFT VALUES'                           12290000         USING DCBDSECT,R1
        DECLARE DCB BASE                       12300000GETPFXLN LA    R0,L'DCBDD
NAM       GET MAX DDNAME LENGTH                12310000         LA    R15,DDNAME
+L'DCBDDNAM PNT TO END OF DDNAME               12320000PFXLNLP  BCTR  R0,0
          DECRIMENT PREFIX LENGTH              123300  00         BCTR  R15,0
            DECRIMENT CHARACTER PTR              12340000         TM    0(R15),X
'BF'        PNTING TO ZERO OR BLANK?             12350000         BNZ   PFXLPND
            NO, BREAK LOOP                       12360000         MV  I   0(R15)
,0            YES, ENSURE TRAILING ZERO            12370000         B     PFXLNL
P             LOOP TO NEXT CHARACTER               12380000PFXLPND  STH   R0,PFX
LN            SAVE PREFIX MACHING LENGTH           12390000         AH    R0,=Y(
1) +            GET ACTUAL LENGTH                    12400000         SLL   R0,3
                  CNVRT TO BIT COUNT                   12410000         STH   R0
,SFXLN            SAVE IT FOR LATER SHIFT LOGICALS     12420000         BR    R1
4                 RETURN                               12430000         DROP  R1
                    KILL DCB BASE                        12440000         TITLE
'DSCOPY -- INEXIT (1ST LEVEL SUBROUTINE) - INPUT DCB EXI*12450000
T'                                                       12460000INEXIT   ST
R14,SAVE14A         SAVE RETURN   ADDRESS                  12470000         LA
  R2,IN               GET DCB ADDRESS                      12480000         USIN
G DCBDSECT,R2         DECLARE DCB BASE                     12490000         MVC
  SAVESA(18*4),0(R13) SAVE THE SAVE AREA                     12500000         OI
    INOFLGS,X'08'       FLAG POSSIBLE INPUT CONCATINATION    12510000         OI
    FLAG,REREAD         FLAG POSSIBLE CONCAT REREAD          12520000         AP
    INCNT,=P'1'         INCR INPUT DATA SET COUNT              12530000
MVC   IN#+19(3),EDMSK+8   MOVE EDIT MASK TO MESSAGE            12540000
ED    IN#+18(4),INCNT     EDIT COUNT INTO MSG                  12550000
$PRINT IN#                PRINT INPUT CONCAT SEQ MSG           12560000
  MVI   DDNMSG,C' '         SET NEXT MSG'S CARRAGE CNTL          12570000
  BAL   R14,PRNTNMES        DO FURTHER PROCESSING                12580000
  BC    8,EXITERR           IF ERROR, QUIT                       12590000
  NI    FLA  G,255-UNITRCD    DON'T CONFUSE OUTEXIT                12600000
    LA    R3,INGT             PNT TO INPUT F, V, OR U GATE         12610000
    BAL   R14,GETRECFM        PROCESS RECFM                        12620000
    OC    INBLKSI,INBLKSI       IS BLKSIZE GIVEN?                    12630000
      BNZ   IPROCLRC            YES, CONTINUE                        12640000
      $PRINT BLKSIERR           NO, PRINT ERROR MESSAGE              12650000
      B     EXITERR             QUIT                                   12660000I
PROCLRC BAL   R14,GETBUFS         GET BUFFERS                          12670000
        BC    8,EXITERR           IF ERROR, QUIT                       12680000
        LH    R14,LRECL           SAVE OUTPUT'S LRECL IC  O CONCAT       1269000
0         STH   R15,LRECL           SET INPUT'S LRECL                    1270000
0         TM    FLAG2,CONCAT        IS THIS A CONCATINATION?             1271000
0         BZ    EXITRTRN            NO, EXIT TO OPEN                       12720
000         LR    R15,R14             YES, GET OUTPUT'S LRECL              12730
000         B     OVSIMSG             GO PRINT DATA LEN COMPARE MSG        12740
000EXITERR  MVI   DCBRECFM,X'C0'      BAD DCB INFORMATION -                12750
000           MVC   DCBBLKSI,=Y(80)      CORRECT DCB SO OPEN WONT ABEND      127
60000         OI    FLAG,CPYSUPRS       FLAG TO SUPPRESS COPYING             127
70000         LA    R3,80               GET BUFFER LENGTH                    127
80000         LA    R+ 5,1                GET BUFNO                            1
2790000         LA      R14,EXITRTRN        GET RETURN ADDRESS
 12800000         ST    R14,SAVE14B         SAVE IT
 12810000         B     ERRBUILD            MAKE OPEN HAPPY: BUILD SOME BUFFERS
 12820000EXITRTRN MVC   0(18*4,R13  ),SAVESA  RESTORE THE SAVE AREA
   12830000LEVL1RET L     R14,SAVE14A         RESTORE RETURN ADDRESS
   12840000         BR    R14                 RETURN
   12850000         DROP  R2                  KIL  L DCB ADDRESSABILITY
     12860000         TITLE 'DSCOPY -- IOERR (1ST LEVEL SUBROUTINE) - SYNAD EXIT
'    12870000IOERR    SYNADAF ACSMETH=QSAM      GET SYNAD MESSAGE
     12880000         L     R13,4(,R13)         RESTORE BASE REG  ISTER
       12890000         CLC   133(3,R1),=AL3(SYSPRINT) IS ERROR ON SYSPRINT?
       12900000         BNE   NOABND              NO, CONTINUE
       12910000         LA    R15,82              YES, GET LENGTH OF WTO
         12920000         SLL   R15,16              SHIFT TO 1ST 1/2 WORD
         12930000         O     R15,=X'00008000'    SET MCS BIT
         12940000         ST    R15,46(,R1)         INIT WTO PREFIX FIELD
         12950  000         LA    R15,X'20'           GET ROUTE CODE (11)
           12960000         ST    R15,128(,R1)        INIT WTO SUFIX FIELD
           12970000         WTO   MF=(E,46(R1))       ISSUE I/O ERROR MSG
           12980000         A  BEND 1,DUMP              GIVE UP
             12990000NOABND   LA    R15,37(,R1)         PNT TO START OF ERROR MS
G            13000000         MVC   0(13,R15),=C'!0I/O ERROR: ' SET MSG LEN & PR
EFIX         13010000         BAL   R14,PUTS  YSP         GO PRINT MSG
               13020000         $PRINT CT                 ISSUE COPY ENDED MSG
               13030000         L     R13,8(,R13)         RESTORE SYNAD SAVE ARE
A PTR          13040000         DROP  R13                 M  AIN BASE NOT USABLE
 AGAIN           13050000         SR    R15,R15             SET NEG R15 TO -
                 13060000         BCTR  R15,0                SIGNEL SYNADRLS
                 13070000         SVC   68                  ISSUE SYNADRLS
                   13080000         USING DSCSAVE,R13         MAIN BASE RESTORED
 BY SYNADRLS       13090000         CLI   RCD+1,8             IS RET CODE ALREAD
Y HIGH?            13100000         BNL   WRAPUP              YES, GO WRAP UP CO
PY                   13110000         MVI   RCD+1,8             NO, SET RET CODE
                     13120000         B     WRAPUP              GO WRAP UP COPY
                     13130000         TITLE 'DSCOPY -- MVC (1ST LEVEL SUBROUTINE
) - CHARACTER MOVING*131  40000                ROUTINE'
                       13150000MVC      #XXC  MVC,                OPERATION
             08/05 DBC*13160000               (R1),               TO POINTER
             08/05 DBC*13170000        +        (R2),               FROM POINTER
               08/05 DBC*13180000                 (R5),               LENGTH
                 08/05 DBC*13190000               MF=SUBROUTINE       FORM TO GE
NERATE           08/05 DBC 13200000         TITLE 'DSCOPY -- OUTEXIT (1ST LEVEL
SUBROUTINE) - OUTPUT DCB E*13210000               XI  T'
                             13220000OUTEXIT  ST    R14,SAVE14A         SAVE RET
URN ADDRESS                  13230000         LA    R2,OUTDCB           PNT TO O
UTPUT DCB                    13240000         USING DCBDSECT,R2           DECLAR
E DCB BASE                     13250000         MVC   SAVESA(18*4),0(R13) SAVE T
HE SAVE AREA                   13260000         MVI   DDNMSG,C'0'         SET NE
XT MSG CARRAGE CONTROL         13270000         BAL   R14,PRNTNMES        GO DO
FU  RTHER PROCESSING             13280000         BC    8,EXITERR           IF E
RROR, QUIT                       13290000         CLI   OUTRECFM,0          IS R
ECFM GIVEN?                      13300000         BNE   RFNTNULL            YES,
 STAY WITH IT                      13310000         MVC   OUTRECFM,INRECFM    NO
, GET INPUT'S RECFM                13320000RFNTNULL TM    FLAG,UNITRCD        UN
IT RECORD DEVICE?                  13330000         BZ    GOGETRFM            NO
, CONTINUE                           13340000         NI    OUTRECFM,255-X'10'
YES, KILL BLOCKING                   13350000GOGETRFM LA    R3,OUTGT
PNT TO OUTPUT F-V-U GATE             13360000         BAL   R14,GETRECFM
GO PROCESS RECFM                     13370000           OC    OUTBLKSI,OUTBLKSI
  IS BLKSIZE GIVEN?                    13380000         BNZ   OPROCLRC
  YES, GO PROCESS                      13390000         OC    OUTBLKSI,INBLKSI
  NO, GET INPUT'S; ALSO OMITTED?       13400000         BZ      EXITERR
    YES, QUIT                            13410000         OC    OUTLRECL,OUTLREC
L   NO, IS LRECL GIVEN?                  13420000         BNZ   OPROCLRC
    YES, GO PROCESS                      13430000         MVC   OUTLRECL,INLR  E
CL    NO, USE INPUT'S                      13440000OPROCLRC BAL   R14,GETBUFS
      GO GET OUTPUT BUFFERS                13450000         BC    8,EXITERR
      IF ERROR, QUIT                       13460000         TM    FLAG,CPYSUPRS
      COPY A  LREADY SUPPRESSED?             13470000         BO    EXITRTRN
        YES, QUIT EXIT                       13480000OVSIMSG  LA    R1,27
        GET MESSAGE LENGTH                   13490000         MVI   RLC+20,C'='
        ASSUME OUT LRECL =   IN LRECL          13500000         CH    R15,LRECL
          CMPR RTRN'ED DATA LEN W INPUT'S      13510000         BE    PUTRLC
          IF =, GO PRINT MSG                   13520000         STH   R15,LRECL
          MUST = OUTPUT DATA LEN                 13530000         BH    OGTI
            IF >, GO MODIFY MSG                  13540000         MVI   RLC+20,C
'<'         LESS; SET MSG                        13550000         LA    R1,L'RLC
            ADJUST MSG LENGTH                    13560000            _
MVC   RLC+44(15),=CL15'WHEN NECESSARY' ADJUST MSG              13570000
MVC   RLC+35(8),=CL8' "SPAN"' ASSUME SPANNING                  13580000
TM    FLAG,TRUNC          DO WE REALLY TRUNCATE ON LONG RCDS?  13590000
  BZ    PUTRLC              NO, GO PRINT MSG                     13600000
  MVC   RLC+35(8),=CL8'TRUNCATE' YES, SAY SO                     13610000
  B     PUTRLC              GO PRINT MSG                         13620000OGTI
  MVI     RLC+20,C'>'         SAY OUTPUT > INPUT                   13630000
    TM    OUTRECFM,X'40'      IS RECFM F?                          13640000
    BO    PUTRLC              NO, GO PRINT MSG                     13650000
    LA    R1,L'RLC              YES, ADJUST MSG LENGTH               13660000
      MVC   RLC+35(24),=C'PAD WITH BLANKS ON RIGHT' ADJ MSG          13670000PUT
RLC   STC   R1,RLC-1            SET MSG LENGTH                       13680000
      $PRINT RLC                PRINT   THE MSG                        13690000
        B     EXITRTRN            GO RETURN TO OPEN                    13700000
        DROP  R2                  KILL DCB ADDRESSABILITY              13710000
        TITLE 'DSCOPY -- PUTTOTL (1ST LEVEL SUBROUTI  NE) - PUT RECORDS *1372000
0               COPIED MESSAGES'                                         1373000
0************************************************************* 07/96 DBC 1374000
0*                                                           * 07/9  6 DBC 13750
000*                    PUTTOTL                                * 07/96 DBC 13760
000*                                                           * 07/96 DBC 13770
000************************************************************* 07/96 DBC 13780
00  0         SPACE 1                                              07/96 DBC 137
90000         USING DCBDSECT,R1         DECLARE DCB BASE                     138
00000PUTTOTL  ST    R14,SAVE14A         SAVE RETURN ADDRESS                  138
10000         MVC     RIOCOUNT+1(L'RIOCOUNT-1),=X'20206B2020206B2020206B202120*1
3820000               '                   XX-GIG EDIT MASK           07/96 DBC 1
3830000         CVD   R0,CVDWA            CNVRT COUNT RO DECIMAL     07/96 DBC 1
3840000         ED    RIOCOUNT,C  VDWA+2    CNVRT TO TEXT              07/96 DBC
 13850000         $PRINT RIO                PRINT THE MESSAGE
 13860000         B     LEVL1RET            GO RETURN
 13870000         DROP  R1                  KIL  L DCB BASE
   13880000         TITLE 'DSCOPY -- TIOTSRCH (1ST LEVEL SUBROUTINE) - DDNAME SE
AR*13890000               CHING ROUTINE'
   13900000ITIOT    MVI   TIOTSMSK+1,INEND    SET INPUT LIST E  XHAUSTED BIT
     13910000         LA    R2,INDCB            PNT TO INPUT DCB
     13920000         B     TIOTSRCH            SEARCH FOR DDNAME
     13930000OTIOT    MVI   TIOTSMSK+1,OUTEND   SET OUTPUT LIST EXHAUSTED TES+ T
 BIT   13940000         LA    R2,OUTDCB           PNT TO OUTPUT DCB
         13950000         USING DCBDSECT,R2         DECLARE DCB BASE
         13960000TIOTSRCH NI    FLAG,255-INMISS-OUTMISS TURN OFF DDNMAE MISSING
BITS     13970000         SR    R0,R0               ZERO FOR GETTING DD ENTRY LE
NGTHS    1  3980000         L     R15,TIOTADR         PNT TO 1ST DD ENTRY
           13990000         MVI   WORK,X'FF'          SET NEW DDNAME TO -
           14000000         MVC   WORK+1(L'DCBDDNAM-1),WORK HIGHEST COALATE
           14010000           MVC   TIOTCLC+1(1),PFXLN+1 GET DDNAME PREFIX LEN
             14020000TIOTLP   AR    R15,R0              PNT TO NEXT DD ENTRY
             14030000         IC    R0,0(,R15)          GET ITS LENGTH
             14040000         LTR   R0,R  0               PAST LAST ENTRY?
               14050000         BZ    TIOTLPND            YES, QUIT LOOP
               14060000TIOTCLC  CLC   DDNAME(*-*),4(R15)  NO, DDNAME HAS PROPER
PREFIX?        14070000         BNE   TIOTLP                NO, LOOP BACK
                 14080000         CLC   DDNAME(L'DCBDDNAM),4(R15) YES, IS DDNAME
 TOO LOW?        14090000         BNL   TIOTLP              YES, LOOP BACK
                 14100000         CLC   WORK(L'DCBDDNAM),4(R15) NO, IS   DDNAME
TOO HIGH?          14110000         BNH   TIOTLP              YES, LOOP BACK
                   14120000         MVC   WORK(L'DCBDDNAM),4(R15) NO, SAVE IT AS
 NEW LOW           14130000         ST    R15,TIOTP           SAVE DD ENTRY PTR
                     14140000         B     TIOTLP              LOOP BACK TO CHE
CK NEXT ENTRY        14150000TIOTLPND MVC   DDNAME(L'DCBDDNAM),WORK SET NEW DDNA
ME                   14160000         CLI   WORK,X'FF'          IS THERE A NEW D
DNAME?                 14170000         BNE   SETSFX              YES, GO ISOLAT
E SUFFIX               14180000TIOTSMSK OI    FLAG,*-*            NO, FLAG DDNAM
E MISSING              14190000SETSFX   LM    R0,R1,DDNAME        GET THE DDNAME
                       14200000           STM   R0,R1,DCBDDNAM      SET DDNAME I
NTO DCB                  14210000         LH    R15,SFXLN           GET SUFFIX S
HIFT VALUE               14220000         SLDL  R0,0(R15)           SHIFT OUT UN
LIKE PREFIX              14230000         STM   R0  ,R1,WORK          SAVE SUFFI
X FOR COMPARES             14240000         OC    WORK(L'DCBDDNAM),=CL8' ' ENSUR
E TRAILING BLANKS          14250000         BR    R14                 RETURN
                           14260000         DROP  R2                    KILL DCB
 ADDRESSABILITY              14270000         TITLE 'DSCOPY -- GETBUFS (2ND LEVE
L SUBROUTINE) - CHK LRECL &&*14280000                BLKSIZE AND GET BUFFERS'
                             14290000         USING DCBDSECT,R2         DECLARE
  DCB BASE                     14300000GETBUFS  ST    R14,SAVE14B         SAVE R
ETURN ADDRESS                  14310000         LH    R3,DCBLRECL         GET LR
ECL                            14320000         LH    R5,DCBBLKSI         GET BL
KSIZE          +                 14330000         TM    DCBRECFM,X'C0'      IS R
ECFM=U?                            14340000         BNM   USETLRCL            YE
S, GO FORCE LRECL=BLKSIZE          14350000         LTR   R3,R3               NO
, LRECL OMITTED?                   14360000         BZ    USETLRCL            YE
S, GO SET IT                         14370000         TM    FLAG,UNITRCD
NO, OUTPUT ON UNIT RCD?              14380000         BO    SETUR
YES, GO SET BLKSIZE                  14390000         TM    DCBRECFM,X'10'
NO, OUTPUT BLOCKED?                  144000  00         BO    PRNTLRCL
  YES, GO PRINT VALUES                 14410000USETLRCL LR    R3,R5
  NO, SET LRECL=BLKSIZE                14420000         TM    DCBRECFM,X'80'
  IS RECFM=V?                          14430000         BO      SETLRCL
    NO, GO PRINT LRECL                   14440000         SH    R3,=Y(4)
    YES, ADJUST LRECL                    14450000SETLRCL  STH   R3,DCBLRECL
    RESET LRECL                          14460000         B     PRNTLRCL
      GO PRINT IT                          14470000SETUR    LR    R5,R3
      NO, SET BLKSIZE=LRECL                14480000         TM    DCBRECFM,X'80'
      RECFM=F?                             14490000         BO    SETBLKSI
      YE  S, CONTINUE                        14500000         LA    R5,4(,R5)
        NO, RECFM=V; ADJUST BLKSIZE          14510000SETBLKSI STH   R5,DCBBLKSI
        RESET THE BLKSIZE                    14520000PRNTLRCL MVC   IOLRL+8(5),=
C'LRECL' SET MSG TO LRE  CL                    14530000         MVC   IOLRL+18(6
),EDMSK+5 MOVE EDIT MASK INTO MSG              14540000         CVD   R3,CVDWA
          CNVRT LRECL TO DEC                   14550000         ED    IOLRL+17(7
),CVDWA+5 EDIT LRECL INTO MSG                    14560000         MVI   IOLRL-1,
L'IOLRL     SET MSG LENGTH                       14570000         $PRINT IOLRL
            PRINT THE MSG                        14580000         MVC   IOLRL+8(
7),=CL7'BLKSIZE' SET MSG TO BLKSIZE              1459  0000         MVC   IOLRL+
18(6),EDMSK+5 MOVE EDIT MASK TO MSG                14600000         CVD   R5,CVD
WA            CNVRT BLKSIZE TO DEC                 14610000         ED    IOLRL+
17(7),CVDWA+5 EDIT BLKSIZE INTO MSG                14620000           $PRINT IOL
RL              PRINT THE MSG                        14630000         TM    DCBR
ECFM,X'C0'      IS RECFM=U?                          14640000         BNM   BUIL
DBUF            YES, GO BUILD BUFFERS                14650000         TM    DCBR
ECF  M,X'80'      NO, IS RECFM=F?                      14660000         BO    TS
TF                YES, GO TEST VALIDITY                14670000         SH    R5
,=Y(8)            NO, RECFM=V, IS BLKSIZE OK?          14680000         BP    TS
TVLRCL              YES, CONTINUE                        14690000         MVC
LENERR+8(7),=CL7'BLKSIZE' NO, SET ERR MSG TO BLKSIZE     14700000         $PRINT
 LENERR             PRINT IT                             14710000         B
L2ERRRET            GO SIGNEL ERR+ OR AND RETURN           14720000TSTVLRCL SH
  R3,=Y(4)            IS LRECL   BIG ENOUGH?                 14730000         BP
    BUILDBUF            YES, GO BUILD BUFFERS                14740000         MV
C   LENERR+8(7),=CL7'LRECL' NO, SET ERR MSG TO LRECL         14750000         $P
RINT LENERR             PRINT THE MSG                          14760000
B     L2ERRRET            GO SIGNEL ERROR AND RETURN           14770000TSTF
SR    R4,R4               ZERO R4 FOR DEVIDE                   14780000
DR    R4,R3               GET BLOCKING FACTOR                    14790000
  LTR   R4,R4               WAS DIVISION EVEN?                   14800000
  BZ    BUILDBUF            YES, GO BUILD BUFFERS                14810000
  $PRINT FIXLNERR           NO, ISSUE ERROR MSG                  14820000
    B     L2ERRRET            GO SIGNEL ERROR AND RETURN           14830000BUILD
BUF NI    DCBBFALN,255-X'01'  TRN OFF BUFFER ALIGN BIT             14840000
    L     R5,MAXCR            GET MAX CORE FOR BUFFERS             14850000
    LH    R  3,DCBBLKSI         GET BLKSIZE                          14860000
      LA    R3,3(,R3)           ROUND -                              14870000
      SRL   R3,2                 UP TO -                             14880000
      SLL   R3,2                    FULLWORD LENGTH                    14890000
        SR    R4,R4               ZERO R4 FOR DEVIDE                   14900000
        DR    R4,R3               GET # OF BUFFERS TO BUILD            14910000
        CH    R5,=Y(&MAXBUFS)     TOO MAN  Y BUFFERS?                    1492000
0         BNH   SETBUF#             NO, GO BUILD THEM                    1493000
0         LH    R5,=Y(&MAXBUFS)     YES, SET MAX # OF BUFS               1494000
0SETBUF#  LA    R4,31               GET MSG LENGTH                         14950
000         CH    R5,=Y(1)            HOW MANY BUFFERS CAN BE BUILT?       14960
000         BNL   BUFGOTN             AT LEAST 1; CONTINUE                 14970
000         $PRINT NOBUFS             NONE, ISSUE ERROR MSG                  149
80000         B     L2ERRRET            GO SIGNEL ERROR AND RETURN           149
90000BUFGOTN  BH    MORETHN1            MORE THAN 1 BUFFER CAN BE BUILT      150
00000         TM    DCBOPTCD,X'20'      ONLY 1 BUF; IS CHN SCHED ON?         150
10000           BZ    MORETHN1            NO, CONTINUE                         1
5020000         NI    DCBOPTCD,255-X'20'  YES, TURN IT OFF                     1
5030000         LA    R4,L'BUF#           ADJ MSG LEN TO SAY SO                1
5040000MORETHN1 MVC     BUF#+1(3),NME       SET MSG NAME
 15050000         MVC   BUF#+20(3),EDMSK+8  MOVE EDIT MASK TO MSG
 15060000         CVD   R5,CVDWA            CNVRT # OF BUFS TO DEC
 15070000         ED    BUF#+19(4),C  VDWA+6  EDIT IT INTO MSG
   15080000         STC   R4,BUF#-1           SET MSG LENGTH
   15090000         $PRINT BUF#               PRINT THE MSG
   15100000ERRBUILD STC   R5,DCBBUFNO         SET B+ UFNO IN DCB
     15110000         LR    R0,R5               G  ET # OF BUFS FOR BUILD
       15120000         SLL   R0,16               SHIFT TO 1ST 1/2 WD
       15130000         OR    R0,R3               OR IN BUFFER LENGTH
       15140000         L     R1,DCBBUFCB         PNT TO BUFFER   AREA
         15150000         BUILD (1),(0)             BUILD THE BUFFERS
         15160000         LR    R15,R3              GET DATA LEN 4 RTN (ASSUMING
 U)      15170000         TM    DCBRECFM,X'C0'      RECFM=U?
           15180000         BNM   LEVL2RET            YES, GO RETURN
           15190000         LH    R15,DCBLRECL        NO, GET DATA LEN FOR RECFM
=F         15200000         TM    DCBRECFM,X'80'      RECFM=F?
           152  10000         BO    LEVL2RET            YES, GO RETURN
             15220000         SH    R15,=Y(4)           NO, RECFM=V; SET DATA LE
N            15230000         B     LEVL2RET            GO RETURN
             15240000           DROP  R2                  KILL DCB ADDRESSABILIT
Y              15250000         TITLE 'DSCOPY -- GETRECFM (2ND LEVEL SUBROUTINE)
 - RECORD FORM*15260000               AT PROCESSING'
               15270000         USING DCBDSE  CT,R2         DECLARE DCB BASE
                 15280000GETRECFM ST    R14,SAVE14B         SAVE RETURN REGISTER
                 15290000         MVC   IOLRL+1(3),NME      SET MSG NAME
                 15300000         MVC   IOLRL+18(6),IOLRL+1  7 CLEAR RECFM CODES
 FROM MSG          15310000         LA    R1,IOLRL+18         PNT TO RECFM CODES
 OUTPUT POINT      15320000         MVI   0(R1),C'U'          ASSUME RECFM=U
                   15330000         MVC   2(2,R3),SU          SET GATE
                     15340000         TM    DCBRECFM,X'C0'      IS RECFM=U?
                     15350000         BM    TESTF               NO, CONTINUE
                     15360000         OI    DCBRECFM,X'C0'      YES, BUE FORCE I
T                      15370000         B     TESTOTHR            GO TEST OTHER
RECFM BITS             15380000TESTF    MVI   0(R1),C'F'          ASSUME RECFM=F
                       15390000         MVC   2(2,R3),SF          SET GATE
                       1  5400000         TM    DCBRECFM,X'80'      IS RECFM=F?
                         15410000         BO    TESTOTHR            YES, GO TEST
 OTHER BITS              15420000         MVI   0(R1),C'V'          NO, RECFM=V
                         15430000           MVC   2(2,R3),SV          SET GATE
                           15440000TESTOTHR LA    R15,5               LOAD LOOP
CONTROL                    15450000RECFMLP  LA    R14,TMASKS-1(R15)   PNT TO TES
TING MASK                  15460000         MVC   RECF  MTM+1(1),0(R14) MOVE IT
TO TM INSTRUCTION            15470000RECFMTM  TM    DCBRECFM,*-*        IS THE B
IT ON?                       15480000         BZ    RECFMLPN            NO, LOOP
                             15490000         LA    R14,RECFMS-1(R15)+    YES, P
NT TO CORRESPONDING CODE       15500000         LA    R1,1(,R1)             INCR
 OUTPUT PTR                      15510000         MVC   0(,R1),0(R14)       MOVE
 CODE TO MSG                     15520000RECFMLPN BCT   R15,RECFMLP         LOOP
 TO NEXT                         15530000         LR    R15,R1              SAVE
 F  OR LATER                       15540000         S     R1,=A(IOLRL-1)      GE
T MSG LENGTH                       15550000         C     R2,=A(IN)           AR
E WE PROCESSING THE INPUT?         15560000         BNE   RECFMSL             NO
, GO PRINT MSG                       15570000         TM    DCBRECFM,X'C0'
YES, IS RECFM=U?                     15580000         BM    RECFMSL
NO, GO PRINT MSG                     15590000         TM    DCBOPTCD,X'20'
YES, IS CHAINED SCHEDULING STILL   ON? 15600000         BZ    RECFMSL
  NO, GO PRINT MSG                     15610000         NI    DCBOPTCD,255-X'20'
  YES, TURN IT OFF                     15620000         MVC   1(32,R15),BUF#+31
  SAY SO                               15630000           LA    R1,32(,R1)
    AJUST MSG LEN                        15640000RECFMSL  STC   R1,IOLRL-1
    SET MSG LENGTH                       15650000         MVC   IOLRL+8(7),=CL7'
RECFM' SET MSG TO RECFM                  15660000         $PRI  NT IOLRL
      PRINT RECFM MSG                      15670000         B     LEVL2RET
      GO RETURN                            15680000         DROP  R2
      KILL DCB ADDRESSABILITY              15690000         TITLE 'DSCOPY --   P
RNTNMES (2ND LEVEL SUBROUTINE) - PROCESS DSN*15700000               AME ETC'
                                             15710000         USING DCBDSECT,R2
        DECLARE DCB BASE                     15720000PRNTNMES ST    R14,SAVE14B
        SAVE   RETURN ADDRESS                  15730000         MVI   PRNTM+1,0
          SET NULL MASK FOR DDNAME PRTING      15740000         LR    R1,R2
          GET DCB ADDRESS FOR DDNAME PRINTING  15750000         BAL   R14,PRNTDD
NM        GO PRINT DDNAME                        15760000         L     R4,TIOTP
            PNT TO DD ENTRY IN TIOT              15770000         SR    R3,R3
            POINT TO ...                    JRB  15780000         ICM   R3,7,17(
R4)         ... UCB.                          JRB  15790000         USING UCBDSE
CT,R3         DECLARE UCB BASE                     15800000         MVC   DSNMSG
+1(3),NME     SET MSG NAME                         15810000         MVC   DSNMSG
+10(3),=C' IS MISSING' INIT MSG                    158200  00         OI    DCBO
PTCD,X'20'      FORCE CHAINED SCHEDULING             15830000         L     R4,D
CBDEBAD         PNT TO OPEN WORK AREA                15840000         USING OPEN
WKA,R4          DECLARE WORK AREA BASE               15850000         CL  C   JF
CBDSNM(9),=CL9'NULLFILE' IS DATA SET A DUMMY?          15860000         BNE   NO
TDUMMY            NO, CONTINUE                         15870000         MVC   DS
NMSG+14(5),=C'DUMMY' YES, SAY SO                       15880000         MVC   DS
NMSG+19+ (32),BUF#+31 SAY NO CHAINED SCHEDULING          15890000         NI
DCBOP  TCD,255-X'20'  PREVENT CHAINED SCHEDULING           15900000         LA
  R5,51               GET MSG LENGTH                       15910000         B
  PUTDSNMG            GO PRINT MSG                         15920000NOTDUMMY TM
  JFCBTSDM,X'20'        IS DATA SET OS SPOOLED?              15930000         BZ
    NOTOSPOL            NO, CONTINUE                         15940000         MV
C   DSNMSG+14(10),=C'OS SPOOLED' YES, SAY SO                 15950000         LA
    R5,24               GET MSG LEN  GTH                       15960000
B     PUTDSNMG            GO PRINT MSG                         15970000NOTOSPOL
TM    UCBTBYT3,UCB3TAPE+UCB3DACC IS DS REALLY A DATA SET?      15980000
BNZ   REALDS              YES, CONTINUE                          15990000
  MVC   DSNMSG+14(11),=C'UNIT RECORD' NO, SAY SO (SORT OF)       16000000
  NI    DCBRECFM,255-X'10'  TURN OFF BLOCKING BIT                16010000
  OI    FLAG,UNITRCD        FLAG UNIT RECORD DEVICE                16020000
    LA    R5,25               GET MSG LENGTH                       16030000
    B     PUTDSNMG            GO PRINT MSG                         16040000REALD
S   TM    JFCBIND2,X'01'      IS DATA SET TEMPORARY?               16050000
      BZ    NOTTEMP             NO, CONTINUE                         16060000
      MVC   DSNMSG+14(9),=C'TEMPORARY' YES, SAY SO                   16070000
      LA    R5,DSNMSG+22        PNT TO LAST NON-BLANK IN MSG         16080000
      B     PDS  MEM              GO SEE IF THERE EXISTS A PDS MEMBER  16090000N
OTTEMP  MVC   DSNMSG+10(3),=C'N =' ADJUST MSG                          16100000
        MVC   DSNMSG+14(44),JFCBDSNM PUT DSN INTO MSG                  16110000
        LA    R5,DSNMSG+58          FIND -                               1612000
0DSNBLP1  BCTR  R5,0                 END -                               1613000
0         CLI   0(R5),C' '            OF -                               1614000
0         BE    DSNBLP1                DSNAME                              16150
000PDSMEM   TM    JFCBIND1,JFCBPMEM+X'02' PDS MEMBER OR GENERATION DS?     16160
000         BZ    SETDSNLN            NO, GO GET MSG LENGTH                16170
000         MVI   1(R5),C'('          YES, ADJ MSG                           161
80000         MVC   2(8,R5),JFCBELNM    PUT ELEMENT NAME INTO MSG            161
90000DSNBLP2  BCTR  R5,0                FIND -                               162
00000         CLI   10(R5),C' '          FIRST -                               1
6210000         BE    DSNBLP2               NON-BLANK                          1
6220000         LA    R5,11(,R5)          POINT TO IT                          1
6230000         MVI   0(R5),C')'          ADJ MSG                              1
6240000SET  DSNLN LA    R6,DSNMSG-1         PNT TO START OF MSG
 16250000         SR    R5,R6               GET MSG LENGTH
 16260000PUTDSNMG STC   R5,DSNMSG-1         SET MSG LENGTH
 16270000         $PRINT + DSNMSG             PRINT THE MESSAGE
   16280000         TM      JFCDSORG,X'02'      IS DATA SET A PDS?
     16290000         BZ    NOTPDS              NO, CONTINUE
     16300000         TM    JFCBIND1,JFCBPMEM   DOES JCL PNT TO 1 MEMBER?
     16310000         BO    NOTPDS                YES, CONTINUE
       16320000         $PRINT PDSERR             NO, PRINT ERROR MSG
       16330000L2ERRRET SR    R0,R0               SET ERROR CC
       16340000         B     LEVL2RET            GO   RETURN
         16350000NOTPDS   LTR   R3,R3               IS THERE A UCB?
         16360000         BZ    ISDUMMY             NO, BYPASS PRINTING MSG
         16370000         MVC   CUUMSG+1(3),NME     YES, SET MSG NAM  E
           16380000         MVC   CUUMSG+L'CUUMSG-3(3),UCBNAME SET CUU ADR INTO
MSG        16390000         $PRINT CUUMSG             PRINT THE MSG
           16400000ISDUMMY  LH    R5,JFCBFLSQ         GET TAPE FILE SEQ NUMBER (
IF   ANY)    16410000         LTR   R5,R5               IS UNIT A TAPE?
             16420000         BZ    NOTTAPE             NO, BYPASS MSG PRINTING
             16430000         MVC   FILESEQ#+1(3),NME   YES, SET MSG NAME
             16440  000         CVD   R5,CVDWA            CNVRT SEQ # TO DEC
               16450000         MVC   FILESEQ#+22(6),EDMSK+5 MOVE EDIT MASK TO M
SG             16460000         ED    FILESEQ#+21(7),CVDWA+5 EDIT FILE SEQ # INT
O MSG          16470000         $  PRINT FILESEQ#           PRINT THE MSG
                 16480000NOTTAPE  LTR   R13,R13             SET SUCCESSFUL CC
                 16490000LEVL2RET L     R14,SAVE14B         RESTORE RETURN ADDRE
SS               16500000         BR    R14                   RETURN
                   16510000         DROP  R2,R3,R4            KILL CONTROL BLOCK
 ADDRESSABILITIES  16520000         TITLE 'DSCOPY -- PRNTDDNM (3RD LEVEL SUBROUT
INE) - PRINT DDNAM*16530000               ES BEING COPIED (IF A  NY)'
                     16540000         USING DCBDSECT,R2         DECLARE DCB BASE
                     16550000PRNTDDCC MVI   DDNMSG,C' '         SET ASA CARRAGE
CONTROL              16560000PRNTDDNM ST    R14,SAVE14C         SAVE THE RETUR
N REGISTER             16570000         MVC   DDNMSG+1(3),NME     GENERATE -
                       16580000         MVC   DDNMSG+14(2),=C': '  THE -
                       16590000         MVC   DDNMSG+16(L'DCBDDNAM),DDNAME DDNAM
E -                      16600000         MVI   DDNMSG+16+L'DCBDDNAM,C' ' MESSAG
E                        16610000PRNTM    TM    FLAG,*-*            IS DDNAME RE
ALLY MISSING?            16620000         BZ    PRTDDNMS            NO, GO PRINT
 MESSAGE                 166  30000         MVC   DDNMSG+14(11),=C' IS MISSING'
RESET THE MESSAGE          16640000         CLI   RCD+1,4             IS RET COD
E >= 4?                    16650000         BNL   PRTDDNMS            YES, GO PR
INT MESSAGE                16660000        +  MVI   RCD+1,4             NO, SET
RET CODE                     16670000PRTD  DNMS $PRINT DDNMSG             ISSUE
THE MESSAGE                    16680000LEVL3RET L     R14,SAVE14C         RESTOR
E RETURN REGISTER              16690000         BR    R14                 RETURN
                               16700000         DROP  R2                    KILL
 DCB BASE                        16710000         TITLE 'DSCOPY -- PUTSYSP (4TH
LEVEL SUBROUTINE) - MESSAGE PRIN*16720000               TING ROUTINE'
                                 16730000PUTSYSP  ST    R14,SAVE14D           SA
VE RETURN REGISTER                 16740000         MVC   PRTLRECL+1(1),0(R15) S
ET MESSAGE LENGTH INTO LRECL       16750000         LA    R0,1(,R15)          PO
INT TO MESSAGE                     16760000         PUT   SYSPRINT,(0)        IS
SUE TH  E MESSAGE                    16770000LEVL4RET L     R14,SAVE14D
RESTORE THE RETURN ADDRESS           16780000         BR    R14
RETURN                               16790000         TITLE 'DSCOPY -- DATA - DC
B''S'                                  16800000         PRINT NOGEN
  DON'T NEED DCB EXPANSIONS            16810000IN       #DCBD DSORG=QS
  DEFINE INDCB NAMES         07/96 DBC 16820000         ORG   INDCB
  ORG TO OVERLAY WITH DCB    08/05 D  BC 16830000IN       DCB   DSORG=PS,MACRF=G
L,EODAD=WRAPUP,EXLST=INEX,EROPT=ACC,    *16840000               SYNAD=IOERR
    INPUT DCB                            16850000INTIOTP  DS    A
    PTR TO CURRENT ENTRY IN ITOT         16860000IN  WORK   DS    2A
      WORK AREA                            16870000IDDNAME  DS    2A
      DDNAME SAVE AREA                     16880000SINU     DC    S(INU)
      INPUT RECFM=U GATE                   16890000SINF     DC      S(INF)
        INPUT RECFM=F GATE                   16900000SINV     DC    S(INV)
        INPUT RECFM=V GATE                   16910000INPFXLN  DS    Y
        DDNAME PREFIX LENGTH                 16920000INSFXLN  DS    Y
          DDNAME PREFIX LEN IN BITS            16930000INNME    DC    CL3' IN'
          DCB NAME                             16940000         SPACE 3
                                               16950000OUT      #DCBD DSORG=QS
          DEFINE   OUTDCB NAMES        08/05 DBC 16960000         ORG   OUTDCB
            ORG TO OVERLAY WITH DCB              16970000OUT      DCB   DSORG=PS
,MACRF=PL,EXLST=OUTEX,EROPT=ACC,SYNAD=IOERR      16980000OUTTIOTP DS    A
            PTR TO CURRENT ENTR  Y IN TIOT         16990000OUTWORK  DS    2A
              WORK AREA                            17000000ODDNAME  DS    2A
              DDNAME SAVE AREA                     17010000SOUTU    DC    S(OUTU
)             OUTPUT RECFM=U GATE                    17020000SOUTF    DC    S(OU
TF)             OUTPUT RECFM=F GATE                  17030000SOUTV    DC    S(OU
TV)             OUTPUT RECFM=V GATE                  17040000OUTPFXLN DS    Y
                DDNAME PREFIX MACHINE LENGTH         17050000            _ OUTSF
XLN DS    Y                   DDNAME PREFIX LENGTH IN BITS         17060000OUTNM
E   DC    CL3'OUT'            DCB NAME                             17070000
    SPACE 3                                                        17080000P  RT
      #DCBD DSORG=QS            DEFINE PRTDCB NAMES        08/05 DBC 17090000
      ORG   PRTDCB              ORG TO OVERLAY WITH DCB              17100000SYS
PRINT DCB   DSORG=PS,MACRF=PM,EROPT=ACC,SYNAD=IOERR,RECFM=UA,       *17110000
              BLKSIZE=121,BUFNO=1,LRECL=121 MSG DCB                    17120000
        PRINT GEN                 END OF DCB'S               07/96 DBC 17130000
        TITLE 'DSCOPY -- DATA - MISCELLANIOUS'               07/96 DBC 17140000C
VDWA    DS    D                     DOUBLE WORD WORK AREA                1715000
0TIOTADR  DS    A                   PTR TO 1ST DD ENTRY IN TIOT          1716000
0SAVESA   DS    18A                 DCB EXIT SAVE AREA SAVE AREA         1717000
0SAVE14A  DS    A                   R14 1  ST LEVEL SAVE AREA              17180
000SAVE14B  DS    A                   R14 2ND LEVEL SAVE AREA              17190
000SAVE14C  DS    A                   R14 3RD LEVEL SAVE AREA              17200
000SAVE14D  DS    A                   R14 4TH LEVEL SAVE   AREA              172
10000GETMADR  DS    2A                  RETURN AREA FOR VARIABLE GETMAIN     172
20000GETMQTY  DC    A(&MINGET,X'FFFFF8') VARIABLE GETMAIN PARAMETERS         172
30000MAXCR    DS    A                   MAX CORE FOR BUFS FOR EA DCB           1
7240000INEX     DC    0A(0),X'85',AL3(INEXIT) INPUT DCB EXIT ADDRESS           1
7250000OUTEX    DC    0A(0),X'85',AL3(OUTEXIT) OUTPUT DCB EXIT ADDRESS         1
7260000         SPACE 1                                                        1
727000  0*        NOTE: THE 4TH BYTE PRECEEDING THE FOLLOWING TABLE MUST NOT BE
 17280000*        X'FF'.
 17290000DDNPTRTB DS    0A                  TABLE FOR CHANGING DDNAMES
 17300000         DC      A(IDDNAME)          INDCB DDNAME ADDRESS
   17310000         DC    A(ODDNAME)          OUTDCB DDNAME ADDRESS
   17320000         DC    3A(0)               NON-APPLICABLE ENTRIES
   17330000         DC    A(PRTDDNAM  )         PRTDCB DDNAME ADDRESS
     17340000         DC    X'FF'               END OF TABLE
     17350000         SPACE 1
     17360000FLAG     DS    X                   FLA  G BYTE
       17370000TRUNC    EQU   X'01'               TRUNCATION COPY FLAG
       17380000INMISS   EQU   X'02'               MISSING INPUT DDNAME FLAG
       17390000BADDDNM  EQU   X'04'               BAD DDNAME LIST
         17400000OUTMISS  EQU   X'04'               MISSING OUTPUT DDNAME FLAG
         17410000BADCPY#  EQU   X'08'               BAD 1ST COPY NUMBER
         17420000REREAD   EQU   X'08'               CONCAT EOF REREAD BIT
 +         17430000INEND    EQU   X'10'               INPUT DDNAMES EXHAUSTED
             17440000TOOMP    EQU   X'10'               TOO MANY PASSED PARAMETE
RS           17450000OUTEND   EQU   X'20'               OUTPUT DDNAMES EXHAUSTED
             17460000UNITRCD  EQU   X'40'               UNIT RECORD DEVICE BEING
 OPENED      1  7470000CPYSUPRS EQU   X'80'               ABEND C03 PROCESSING F
LAG            17480000         SPACE 1
               17490000FLAG2    DS    X                   FLAG BYTE
               17500000CONCAT     EQU   X'01'               POSSIBLE CONCATINATI
ON FLAG          17510000         SPACE 1
                 17520000CPY#PK   PACK  CPY#,2(*-*,R4)      PACK NEW 1ST COPY NU
MBER             17530000HWD      DC    2Y(0  )               RECFM=V LENGTH FIE
LD HOLDER          17540000RCD      DC    Y(0)                RETURN CODE
                   17550000LRECL    DS    Y                   OUTPUT DATA LENGTH
                   17560000CPY#     DC    PL2'0'                NEXT COPY NUMBER
                     17570000INCNT    DC    PL2'0'              INPUT DATA SET C
OUNTER               17580000EDMSK    DC    X'2020206B2020206B202120' EDIT MASK
                     17590000TMASKS   DC    X'0204200810'       RECFM=M,A,  T,S,
B                      17600000RECFMS   DC    C'MATSB'            RECFM CODES
                       17610000         SPACE 3
             07/96 DBC 17620000*************************************************
*********  *** 07/96 DBC 17630000* PARTIAL COPY CONTROLS
             * 07/96 DBC 17640000***********************************************
************** 07/96 DBC 17650000         SPACE 1
               07/96 DBC   17660000         DS    0F
                 07/96 DBC 17670000START#   DC    X'00000001'         START AT N
TH RECORD        07/96 DBC 17680000STOP#    DC    X'FFFFFFFF'         STOP AFTER
 NTH RECORD      07/96 DBC 17690000COUN  T#   DC    X'FFFFFFFF'         COPY N R
ECORDS             07/96 DBC 17700000         SPACE 3
                   07/96 DBC 17710000*******************************************
****************** 07/96 DBC 17720000* PARM FIELD PARS  ING CONTROLS. THE TABLE
MUST BE SORTED BY  * 07/96 DBC 17730000* KEYWORD TEXT.
                   * 07/96 DBC 17740000*****************************************
******************** 07/96 DBC 17750000         SPACE 1
                       07/96 DBC 17760000PARMKEYS DS    0X
                       07/96 DBC 17770000         DC    AL4(COUNT#),AL1(0,5),C'C
OUNT='                 07/96 DBC 17780000         DC    AL4(START#),AL1(0,5),C'S
TART  ='                 07/96 DBC 17790000         DC    AL4(STOP#),AL1(0,4),C'
STOP='                   07/96 DBC 17800000         DC    AL4(FLAG),AL1(TRUNC,7)
,C'TRUNCATE'             07/96 DBC 17810000         DC    AL4(0),AL1(0,0),X'FF'
TABLE DELIMITER    +       07/96 DBC 17820000         SPACE 1
                             07/96 DBC 17830000PKYSINK  EQU   0,4
  @'VALUE SINK               07/96 DBC 17840000PKYOIFLG EQU   PKYSINK+L'PKYSINK,
1 FOR FLAGS, BIT TO TURN ON  07/96 DBC 17850000PKYEXLEN EQU   PKYOIFLG+L'PKYOIFL
G,1 L'KEYWORD TEXT -1        07/  96 DBC 17860000PKYWORD  EQU   PKYEXLEN+L'PKYEX
LEN KEYWORD TEXT               07/96 DBC 17870000         SPACE 3
                               07/96 DBC 17880000*******************************
****************************** 07/96 DBC 178900  00* LOCAL LITERALS
                               * 07/96 DBC 17900000*****************************
******************************** 07/96 DBC 17910000         SPACE 1
                                 07/96 DBC 17920000         LT  ORG ,
        LITTERALS HERE                       17930000         TITLE 'DSCOPY -- D
ATA - MESSAGES'                              17940000         DC    AL1(L'SKIP1)
                                   07/96 DBC 17950000SKIP1    DC    C'  '
                                     07/96 DBC 17960000         SPACE 3
                                     08/05 DBC 17970000         DC    AL1(L'SKIP
3)                                   07/96 DBC 17980000SKIP3    DC    C'- '
                                       07/96 DBC 17990000         SPACE 3
                                       08/05 DBC 18000000         DS    AL1
                                                 18010000IOLRL    DC    C' ***PU
T ******* = ******'                                18020000         DS    CL32
                                                   18030000         SPACE 3
                                         08/05 DBC 18040000         DC    AL1(L'
DDNMSG)                                              18050000DDNMSG   DC    CL25
'****PUT DDNAME'                                     18060000         SPACE 3
                                           08/05 DBC 18070000         DS    AL1
                                                     1808  0000DSNMSG   DC    CL
68' ***PUT DS'                                         18090000         SPACE 3
                                             08/05 DBC 18100000         DC    AL
1(L'CUUMSG)                                            18110000CUUMSG     DC
C' ***PUT FIRST DEVICE ADDRESS IS ***'                   18120000         SPACE
3                                              08/05 DBC 18130000         DS
AL1                                                      18140000BUF#     DC
C' ***P  UT IS ASSIGNED *** BUFFERS - CHAINED SCHEDULING S*18150000
  UPPRESSED'                                               18160000         SPAC
E 3                                              08/05 DBC 18170000         DC
  AL1(L'FILESEQ#)                                            18180000FILESEQ# DC
    C' ***PUT TAPE FILE # = **,***'                          18190000         SP
ACE 3                                              08/05 DBC 18200000         DC
    AL1(L'COPYTIT)                   +                         18210000COPYTIT
DC    C'-COPY # ***'                                             18220000
  SPACE 3                                              08/05 DBC 18230000
  DC    AL1(L'CS)                                                18240000CS
  DC    C'0COPY SUPPRESSED'                                        18250000
    SPACE 3                                              08/05 DBC 18260000
    DC    AL1(L'CT)                                                18270000CT
    DC    C' COPY TERMINATED'                                        18280000
      SPACE 3                                              08/05 DBC 18290000
      DC    AL1(CRIGHT_L)                                  08/05 DBC 18300000CRI
GHT   DC    C'1DSCOPY - Copyright (c) David B. Cole, '     08/05 DBC 18310000
        DC    C'1972-2005. All rights reserved.'             08/05 DBC 18320000C
RIGHT_L EQU   *-CRIGHT                                       08/05 DBC 18330000
        SPACE 3                                              08/05 DBC 18340000
        DC    A  L1(LEGAL1_L)                                  08/05 DBC 1835000
0LEGAL1   DC    C'0This program is distributed '               08/05 DBC 1836000
0         DC    C'without warranty of any kind, '              08/05 DBC 1837000
0         DC    C'including'                                     08/05 DBC 18380
000LEGAL1_L EQU   *-LEGAL1                                       08/05 DBC 18390
000         SPACE 3                                              08/05 DBC 18400
000         DC    AL1(LEGAL2_L)                                    08/05 DBC 184
10000LEGAL2   DC    C' (without limitation) '                      08/05 DBC 184
20000         DC    C'warranties of merchantability '              08/05 DBC 184
30000         DC    C'and of fitness for a'                          08/05 DBC 1
8440000LEGAL2_L EQU   *-LEGAL2                                       08/05 DBC 1
8450000         SPACE 3                                              08/05 DBC 1
8460000         DC    AL1(LEGAL3_L)                                  08/05   DBC
 18470000LEGAL3   DC    C' particular purpose. It is up '              08/05 DBC
 18480000         DC    C'to the user to make his own '                08/05 DBC
 18490000         DC    C'determination'                               08/05 DBC
 18500000L  EGAL3_L EQU   *-LEGAL3                                       08/05 D
BC 18510000         SPACE 3                                              08/05 D
BC 18520000         DC    AL1(LEGAL4_L)                                  08/05 D
BC 18530000LEGAL4   DC      C' of the '                                    08/05
 DBC 18540000         DC    C'usefulness of this program in '              08/05
 DBC 18550000         DC    C'his own system. '                            08/05
 DBC 18560000LEGAL4_L EQU   *-LEGAL4                                         08/
05 DBC 18570000         SPACE 3                                              08/
05 DBC 18580000         DC    AL1(LEGAL5_L)                                  08/
05 DBC 18590000LEGAL5   DC    C'0For additional restric+ tions, see the '      0
8/05 DBC 18600000         DC    C'README file located   in this'
 08/05 DBC 18610000LEGAL5_L EQU   *-LEGAL5
 08/05 DBC 18620000         SPACE 3
 08/05 DBC 18630000         DC    AL1(LEGAL6_L)
   08/05 DBC 18640000LEGAL6   DC    C' program''s '
   08/05 DBC 18650000         DC    C'distribution library '
   08/05 DBC 18660000         DC    C'(originally named DBCOLE.DSCOPY.EXPORT,'
     08/05 DBC 18670000LEGAL6_L EQU   *-LEGAL6
     08/05 DBC 18680000         SPACE 3
     08/05 DBC 18690000         DC    AL1(LEGAL7_L)
     08/05 DBC 187  00000LEGAL7   DC    C' and availble for download from '
       08/05 DBC 18710000         DC    C'www.colesoft.com).'
       08/05 DBC 18720000LEGAL7_L EQU   *-LEGAL7
       08/05 DBC 18730000           SPACE 3
         08/05 DBC 18740000         DC    AL1(L'DSCP)
                   18750000DSCP     DC    C'-DATA SET COPYING PROGRAM'
         08/05 DBC 18760000         SPACE 3
           08/05 DBC 18770000         DC    AL1(L'PFN)
           07/96 DBC 18780000PFN      DC    C' PARM FIELD: NONE'
           07/96 DBC 18790000         SPACE 3
             08/05 DBC 18800000         DC    AL1(PFILLEN)
             07/96 DBC 18810000PFIL     DC    C'0INVALID PARM FIELD LENGTH '
             07/96 DBC 18820000         DC    C'(NEGATIVE OR GREATER THAN 108)
'              07/96 DBC 18830000         #TEST SIZE=(L'PFTEXT,EQ,108) TRUTH CHE
CK             07/96 DBC 18840000PFILLEN  EQU   *-PFIL              L'MSG
               07/96 DBC 18850000         SPACE 3
                 08/05 DBC 18860000         DC    AL1(*-*)
                 07/96 DBC 18870000PF       DC    C'0PARM FIELD: '
                 07/96 DBC 18880000PFTEXT   DC    CL(121-L'PF)' '
                 07/96 DBC 1  8890000PFLEN    EQU   *-PF                MAX L'MS
G                  07/96 DBC 18900000         DC    C' '                TRAILER
                   07/96 DBC 18910000         SPACE 3
                   08/05 DBC 18920000           DC    AL1(L'EOP)
                               18930000EOP      DC    C'-END OF PROGRAM'
                               18940000         SPACE 3
                     08/05 DBC 18950000         DC    AL1(  L'LENERR)
                                 18960000LENERR   DC    C' ERROR: ******* IS TOO
 SMALL FOR RECFM=V'              18970000         SPACE 3
                       08/05 DBC 18980000         DC    AL1(L'FIXLNERR)  +
                                   18990000FIXLNERR DC    C' ERROR: BLK  SIZE MU
ST BE A MULTIPLE OF LRECL FOR RECFM=*19000000               F'
                                     19010000         SPACE 3
                           08/05 DBC 19020000         DC    AL1(L'BLKSIERR)
                                       19030000BLKSIERR DC    C' ERROR: BLKSIZE
NOT GIVEN FOR INPUT DATA SET'          19040000         SPACE 3
                             08/05 DBC 19050000         DC    AL1(L'PDSERR)
                                         19060000PDSERR   DC    C' ERROR: DATA S
ET IS PARTITIONED'                       19070000         SPACE 3
                               08/05 DBC 19080000         DC    AL1(L'NOBUFS)
                                           19090000NOBUFS   DC    C' ERROR: INSU
FFICENT CORE FOR BUFFERS'                  19100000         SPACE 3
                                 08/05 DBC 19110000         DC    AL1(L'IC)
                                           19120000  IC       DC    C' GETMAIN O
F &MINGET BYTES FAILED'                      19130000         SPACE 3
                                   08/05 DBC 19140000         DC    AL1(L'IN#)
                                             19150000IN#      DC      C'0 INPUT
DATA SET # ***'                                19160000         SPACE 3
                                     08/05 DBC 19170000         DC    AL1(IC#LEN
)                                    07/96 DBC 19180000IC#      DC    C' INVALID
   STARTING COPY NUMBER GIVEN - '      07/96 DBC 19190000         DC    C'"1" WI
LL BE USED'                            07/96 DBC 19200000IC#LEN   EQU   *-IC#
                                       07/96 DBC 19210000         SPACE 3
                                         08/05 DBC 19220000         DC    AL1(L'
IDL)                                               19230000IDL      DC    C' INV
ALID DDNAME LIST'                                  19240000         SPACE 3
                                           08/05 DBC 19250000         DC    AL1(
L'IPF)                                               19260000IPF      DC    C' I
NVALID PARM FIELD'                                   19270000         SPACE 3
                                           08/  05 DBC 19280000         DS    AL
1                                                      19290000RLC      DC    CL
59' OUTPUT DATA LENGTH * INPUT - WILL'                 19300000         SPACE 3
                                             08/05 DBC 193100  00         DC
AL1(L'PT)                                                19320000PT       DC
C'-PROGRAM TERMINATED'                                   19330000         SPACE
3                                              08/05 DBC 19340000         DC
  AL1(RIOLEN)                                    07/96 DBC 19350000RIO      DC
  C'*'                CCC: 0/BLANK               07/96 DBC 19360000RIOWHICH DC
  C'*****',C' '       FIRST/LAST/TOTAL           07/96 DBC 19370000RIOINOUT DC
  C'***',C'+ PUT RECORD' IN/OUT                    07/96 DBC 19380000RIOPLURL DC
    C'*',  C' '           S/BLANK                    07/96 DBC 19390000RIOVERB
DC    C'*******',C' = '   COPIED/WRITTEN             07/96 DBC 19400000RIOCOUNT
DC    C' **,***,***,***'                             07/96 DBC 19410000RIOLEN
EQU   *-RIO                                            07/96 DBC 19420000
  SPACE 3                                              08/05 DBC 19430000
  DC    AL1(L'RCDMSG)                                            19440000RCDMSG
  DC    C' RETURN CODE = ***'                                      19450000
    SPACE 3                                              08/05 DBC 19460000
    DC    AL1(L'TMEIPL)                                            19470000TMEIP
L   DC    C' TOO MANY ARGUEMENTS IN PARAMETER LIST - E  XTRA ARGUEME*19480000
            NTS IGNORED'                                             19490000
      TITLE 'DSCOPY -- DSECTS'                                       19500000
      PRINT  NOGEN                                         07/96 DBC   19510000S
YMDEL   DSECT ,                                              07/96 DBC 19520000
        SPACE 3                                              07/96 DBC 19530000D
CBDSECT DSECT                                                          19540000
          #DCBD DSORG=QS                                       08/05 DBC 1955000
0TIOTP    DS    A                   CURRENT DD ENTRY PTR                 1956000
0WORK     DS    2A                  WORK AREA                            1957000
0DDNAME   DS    2A                    DDNAME SAVE AREA                     19580
000SU       DS    S                   RECFM=U GATE SETTING                 19590
000SF       DS    S                   RECFM=F GATE SETTING                 19600
000SV       DS    S                     RECFM=V GATE SETTING                 196
10000PFXLN    DS    Y                   DDNMAE PREFIX MACHINE LEN (BYTES)    196
20000SFXLN    DS    Y                   DDNAME PREFIX LEN (BITS)             196
30000NME      DS    CL3                 DCB NAME                               1
9640000         SPACE 3                                              07/96 DBC 1
9650000CVTDSECT DSECT                                                          1
9660000         CVT   DSECT=YES,LIST=YES                                    JRB
 19670000         SPACE 3                                              07/96 DBC
 19680000UCBDSECT DSECT
 19690000         IEFUCBOB ,
   19700000         SPACE 3                                              07/96 D
BC 19710000OPENWKA  DSECT
   19720000         ORG   OPENWKA+100
   19730000           IEFJFCBN ,
     19740000         SPACE 3                                              07/96
 DBC 19750000         END   ,                                              07/96
 DBC 19760000./ ADD NAME=READ+ ME   0105-05218-05218-1530-00375-00080-00375-DBCO
LEA            The DSCOPY p  rogram is copyrighted (c) 1972-2005 by David B. Col
e. All   00010004rights reserved.
         00020004
         00030004You are reading DBCOLE.DS  COPY.EXPORT(README).
           00040004
           00050004
           00060004
             00070004DESCRIPTION
             00080004
             00090004DSCOPY is a general purpose program which copies da  ta set
s              00100005sequentially.  It allows the user to copy sequential file
s, BDAM files  00110005(i.e.  REGIONAL(1) files in PL/I or direct access files i
n FORTRAN),    00120005and single members of partitioned data sets from any vali
d input   device 00130005(e.g. card reader, disk drive, or tape drive) to any va
lid output       00140005device (e.g.  printer, card punch, disk drive, or tape
drive). The      00150005advantage of this utility over others having the same f
unction is that  00160  005DSCOPY is considerably more efficient and faster (mor
e that twice as    00170005fast as the IBM utility IEBGENER, for example). It ta
kes full advantage 00180005of OS data management facilities in order to optimize
 as much as        00190005possible t  he data transfer rate.
                     00200005
                     00210004DSCOPY has the following features:
                     00220004
                       002300041.) All information needed is specified through J
CL or through the PARM 00240004    field. No control dataset (SYSIN, for example
) is needed.           00250004
                         002600042.) DSCOPY can perform any number of seperate c
opies in one jobstep     00270004    (subject, of course, to OS limits on the nu
mber of DD cards         00280004    permitted within a job or step).
                           00290004
                           003000043.) Input datasets may be sequential, direct,
 or individual members of  00310004    partitioned data sets, or a concatenation
 of any combinati  on of the 00320004    above with any combination of DCB attri
butes (RECFM, LRECL, and     00330004    BLKSIZE).
                             00340004
                             003  500044.) Any record format is allowed (fixed,
variable, undefined) for       00360005    input, and it may be changed to any o
ther record format for output. 00370005    In addition, logical record lengths a
nd/or block sizes may also be  00380005    chan+ ged. All such changes are autom
aticly accomodated for (see      00390004      below).
                                   00400004
                                   00410004Here is a simple example of the invoc
ation of DSCOPY:                   00420004   //...      JOB   CARD       ...
                                     00430004   //*
                                     00440004   //A       EXEC PGM=DSCOPY
                                     00450004   //SYSPRINT DD  SYSOUT=A
                                       00460004   //IN01     DD  DSN=       ...
etc.                                   00470004   //OUT01    DD  DSN=       ...
etc.                                   00480004   //IN02     DD  DSN=       ...
etc.                                     00490004   //OUT02    DD  DSN=       ..
. etc.                                   00500004   //         .
                                         00510004   //         .
                                           00520004   //         .
                                           00530004   //         etc.
                                           00540004
                                             00550004
                                             00560004
                                             00570004LEGAL INFORMATION:
                                             00580004
                                               00590004This program is copyright
ed (c) 1972-2005 by David B. Cole. All rights  00600004reserved.
                                               00610004
                                                 00620004This program is distrib
uted freely and may be reproduced and            00630004redistributed without r
estriction other than:                           00640004  - This copyright and
usage  /warranty/liability restriction statement   00650005    ("Legal Statement
") may not be modified or removed.                 00660005  - A similar Legal S
tatement located in this program's source code     00670005    also may not be r
emoved.                                              00680005
                                                     00690004This program is dis
tributed without warranty of any kind, including     00700005(without limitation
) warranties of merchantability and   of fitness for a 00710005particular purpos
e. It is up to the user to make his own determination  00720005of the usefulness
 of this program in his own system.                    00730005
                                                         00750004The user agrees
 not to hold either David B. Cole or Cole Software, LLC  00760004or any person a
ffiliated with Cole Software, LLC (collectively "COLE")  00770004liable for any
injury or damage whatsoever.                             00780004            %
                                                                       00790004F
urther, the user agrees to indemnify COLE against third parties for    00800005a
ny action arising from the user's use, misuse, modification, and/or    00810005r
  edistribution of this program.                                         0082000
4                                                                        0083000
4This program may be modified freely so long as all modifications are    0084000
5clearly marked   both internally and externally to distinguish them from  00850
005the distributed code and functionality.                                 00860
005                                                                        00870
004As a courtesy, please notif  y David Cole if you discover any bugs or if  008
80004you need or have made any code changes. (COLE, of course, does not      008
90004guarantee that any future changes or corrections wither will or will    009
00004not be made.)                                                             0
0910004                                                                        0
0920004Contact information as of AUG05 is:                                     0
0930004
 00940004    Name:                David B. Cole
 00950004    Country:             USA
 00960004    Telephone:           540-456-8536
   00970004    FAX:                 540-456-6658
   00980004    E-mail:              dbcole@colesoft.com
   00990004    Website:             www.colesoft.com
   0100000  4
     01010004    Snail Mail:          Cole Software
     01020004                         736 Fox Hollow Road
     01030004                           Afton, VA 22920
       01040004                         USA
       01050004
       01060004
         01070004
         01080004PACKAGING:
         01090004
           01100004The DSCOPY.ZIP file contains the following files:
           01110004
           01120004  - DSCOPY.ALC is the assembler source code for the   program
.            01130004
             01140004  - JCL.TXT is sample JCL for assembling and link editing t
he program.  01150004
     +         01160004All of the files are encoded in ASCII. When uploading the
m t  o your      01170004mainframe, ASCII-to-EBCDIC translation should be enable
d.               01180004
                 01190004
                 0  1200004
                   01210004INSTALLATION:
                   01220004
                   01230004Assemb  ling DSCOPY will require a macro library avai
lable from Cole      01240004Software's web site (www.colesoft.com). The file th
ere is named         01250004MACROS.ZIP. You will have to obtain and install the
se macros before you 01260004will be able to com  plete the installation of DSCO
PY.                    01270004
                       01280004To install DSCOPY, do the following:
                       01290004
                         01300004  - Obtain and install Cole Software's macro li
brary (MACROS.ZIP).      01310004
                         01320004  - Use WINZIP or PKUNZIP (or whatever) to de
compress and extract the   01330004    DSCOPY.ALC, and JCL.TXT files from DSCOPY
.ZIP.                      01340004
                           01350004  - Upload the two files to your mainframe. M
ake sure that                01360004    ASCII-to-EBCDIC translation is turned o
n.                           01370004
                             01380004  - Upload the files to a library whose DCB
 attributes are RECFM=FB,      01390004    LRECL=80, and BLKSIZE=n*80.
                               01400004
                               01410004  - Check out the JCL member for sample J
CL to assemble and linkedit    01420004      the DSCOPY program.
                                 01430004
                                 01440004  - Assemble the DSCOPY member using bo
th system macros and private     01450004    macros availa  ble from Cole Softwa
re.                                01460004
                                   01470004  - Linkedit the DSCOPY program into
a suitable load library.           01480004
                                     01490004  - Try it out.
                                     01500004
                                     01510004
                                       01520004
                                       01530004USAGE:
                                       01540004
                       +                 01550004 1.) DDNAMEs for input must be
of the form INx where   x is any           01560005     alphameric character str
ing of from 0 to 5 characters in length.   01570005
                                           01580004 2.) DDNAMEs for output must
be of the form OUTx where x is as in   (1)   01590004     above.
                                             01600004
                                             01610004 3.) Copy operations are pe
rformed from each //INx DD card to a         016200  04     corresponding //OUTx
 DD card (e.g. from //INA to //OUTA, from      01630004     //IN9999A to OYT9999
A, from //IN to //OUT, from //INTRASH to       01640004     //OUTTRASH, etc.). C
learly, there must exist a one to one          01650004     corres  pondence bet
ween the input DD cards and the output DD cards. 01660004
                                                 01670004 4.) Copy operations ar
e performed in the order of the ascending EBCDIC 01680004     coalating sequence
   of x. In the following example, the copies are  01690004     performed in the
 order shown (*regardless* of the sequence in      01700005     which the DD car
ds are actually presented):                        01710005         1st //IN
  to //OUT                                           01720004         2nd //INA
    to //OUTA                                        01730004         3rd //INTR
ASH to //OUTTRASH                                    01740004         4th //IN01
    to //OUT01                                         01750004         5th //IN
02    to //OUT02                                       01760004         6th //IN
1     to //OUT1                                        01770004         7th //IN
10    to //OUT10                                         01780004         8th //
IN2     to //OUT2                                        01790004         9th //
IN9999A to //OUT9999A                                    01800004     Watch out
for pitfalls here! Note in particular, that a copy from  0181  0004     //IN10 t
o //OUT10 will occur *before* a copy from //IN2 to //OUT2. 01820004     (This ma
y matter, for example, if you're writing to tape.)         01830004
                                                           01840004 5.) Inpu  t
block sizes must be available to DSCOPY from either DSCBs,   01850004     tape l
abels, or JCL. If other necessary DCB parameters are         01860005     missin
g, then defaults are taken (see below).                      01870005
                                                               01880004 6.) Keye
d direct access files (e.g. PL/I REGIONAL(2) and regional(3)   01890004     file
s) may be copied, but the keys themselves won't be copied. The 01900004     resu
lting output file will be   sequential unless DSORG=DA is coded  01910004     in
 the JCL.                                                        01920004
                                                                 01930004 7.) A
SYSPRINT DD card (e.g. //SYSPRINT DD SYSO+ UT=*) must be included  01940004
in the JCL. This DD card specifies a me  ssage data set for DSCOPY.  01950004
  It's DCB is DSORG=PS, RECFM=UA, LRECL=121, BLKSIZE=121). Any       01960004
  attempt to override this is ignored.                               01970004
                                                                       01980004
8.) If any necessary DCB atributes are missing, then the following     01990004
    conversions are performed:                                         02000004
                                                                         0201000
4     a.) If the input's DSORG is missing, then DSORG=PS is used.        0202000
4                                                                        0203000
4     b.) If the output's DSORG is missing, then DSORG=PS is used.       0204000
4                                                                          02050
004     c.) If the input's RECFM is missing, then RECFM=U is used.         02060
004                                                                        02070
004     d.) If the   output's RECFM is missing, then the input's RECFM is    020
80004         used.                                                          020
90004                                                                        021
00004     e.) If the input's BLKSI  ZE is missing, then an error condition is  0
2110004         reported.                                                      0
2120004                                                                        0
2130004     f.) If the output's BLKSIZE is missin  g, then the input's BLKSIZE
 02140005         is used. Exceptions:
 02150005
 02160004           - If the input's RECFM=V while the output's   RECFM<>V then
   02170005             the input's BLKSIZE-4 is used.
   02180005
   02190004           - If the input's RECFM<>V while the output's RECFM=V, the
 n   02200004             the input's BLKSIZE+4 is used.
     02210004
     02220004     g.) If the input's LRECL is missing, then the input's BLKSIZE
is   02230004           used. Exception:
       02240004
       02250004           - If the input's RECFM=V, then the input's BLKSIZE-4 i
s      02260005             u  sed.
         02261005
         02270004     h.) If the output's LRECL is missing, then the output's BL
KSIZE is 02280004         used. Exception:
           02290004
           02300004           - If the output's RECFM=V, then the output's BLKSI
ZE - 4 is  02310004             used.                      +
             02320004
               02330004     i.) In the case of concatenated input, any settings
that are made  02340004         for the output data set that are based on the ch
aracteristics  02350004         of the input data set, are based on the   chatac
teristics of the 02360004         *first* DD card in the input concatenation.
                 02370004
                 02380004     j.) The above listed conversions are (if required)
 applie  d in the  02390004         same order in which they are listed. For exa
mple, conversion   02400004         (f) will be applied before conversion (h).
                   02410004
                   024  20004 9.) If the LRECL for the output data set is to be
different from the   02430005     LRECL for the input data set, then there are t
hree cases:          02440005
                     02460004     A.)   Output's LRECL > input's LRECL:
                       02470004
                       02480004           - In this case, if the output's RECFM=
F, then the unused     02490004             portion   of each output record is f
illed with blanks (I.e.  02500004             the record is right-padded with bl
anks).                   02510004
                         02520004     b.) Output's LRECL < input's   LRECL *but*
 the entire input record   02530005         is still desired in the output data
set:                       02540005
                           02560004           - In this case, the input record i
s   spanned onto as many     02570004             output records as is required.
 Note that this is the       02580004             default action.
                             02590004
                               02600004    c.) Output's LRECL < input's LRECL an
d only that portion of the     02610004        input record that will fit on one
 output record is desired:     02620004
                               0  2630004          - In this case each input rec
ord that is too long is          02640005            truncated before it is writ
ten to the output data set. In   02650005            order to use this truncatio
n facility, the user must code   02660005              TRUNCATE in the EXEC stat
ement's PARM= field. Notes:        02670005
                                   02680004              - If TRUNCATE is coded,
 then truncation will occur for    02690005                all   copy operations
 in the jobstep.                     02700005
                                     02710004              - If truncate is not
coded, then spanning will occur for  02720004                all copy operati+ o
ns.                                    02730004
                                         02740004              - WARNING! If spa
nning occurs, and the output file's      02750005                RECFM is V or V
S, the spanning will *not* be compatible 02760005                with RECFM=VS!
                                           02770005
                                           0278000410.) DSCOPY generates a compl
etion code with the following values:      02790004
                                             02800004       0  - Execution compl
eted without errors                          02810004
                                             02820004       4  - One of the foll
owing "concerns" occurred:                     02830004
                                               02840004              a.) When DS
COPY was called as a subroutine, too many      02850004                  argueme
nts were passed (see below).                   02860004
                                                 02870004              b.) When
DSCOPY was called as a subroutine, the third     02880004                  argue
ment was invalid (see below).                    02890004
                                                   02900004              c.) For
 a //INx or a //OUTx DDNAME, a corresponding       02910005                  //O
UTx or //INx DDNAME was not found.                 02920005
                                                     02930004       8  - One or
more copy operations was either suppressed or        02940004            termina
ted for some reason.                                 02950004
                                                       02960004       12 - The p
rogram was terminated before any copies were           02970005            attem
pted.                                                  02971005
                                                         0298000411.) PARM FIELD
 PROCESSING: There are several controls that DSCOPY      02990004     accepts vi
a the parm field. The general syntax is:                 03000004
                                                           03010004       - Thei
r form is either "keyword" or "keyword=value".             03020004
                                                           03030004       - They
 may be given in any order.                                030400  04
                                                             03050004       - Th
ey must be separated from each other by blanks or commas.    03060004
                                                             03070004       - Ke
  yword names must be given in full; abbreviations are not     03080004
checked for.                                                   03090004
                                                               03100004       -
Also, redundanc+ ies are not checked for; each instance of a     03110004
  particular   keyword overrides and nullifies all prior           03120005
    instances.                                                     03121005
                                                                   03130004
  - These controls apply to   *all* copies performed by DSCOPY.      03140004
                                                                     03150004
  The following controls are supported:                              03160004
                                                                       03170004
        TRUNCATE                                                       03180004
        When copying long records into output files with short LRECLs, 03190004
        this cause DSCOPY to truncate the record. (Omit th  is keyword   0320000
5         if you want longs records to be spanned into the output file.) 0321000
5                                                                        0322000
4         START=number                                                     03230
004         This causes copying to start with the given input record       03240
004         number. Number-1 records are skipped. The default is START=1.  03250
004                                                                        03260
004           STOP=number                                                    032
70004         This causes copying to stop after the given input record       032
80005         number is reached and copied. (The first input record,         032
90005         *regardle  ss* of whether or not it is actually copied, is       0
3300005         record number 1.)  The default is to copy until input EOF is   0
3310005         reached.                                                       0
3311005
 03320004         COUNT=number
 03330004         This causes copying to stop after the given number of input
 03340004         records have been copied. The defau  lt is to copy until input
   03350004         EOF is reached.
   03360004
   03370004         IMPORTANT! When COUNT=number is given, the given   or implie
d    03380004         START=number control is incrimented by the given COUNT= va
lue  03390004         for each successive copy. This makes it easier to segment
     03400005         large files into smaller ones via suitable multiple copy
       03410005         requests.
       03411005
       03420004     NOTES:
       03430004
         03440004       - If COUNT= and STOP= conflict, then copying will stop a
t        03450004         whichever event occurs first.
         03460004                +
           03470004       - If   COUNT=0 or if STOP= is less than START=, then n
o records    03480005         are copied.
             03490005
             03500004       - All numbers are   treated as being unsigned 32-bit
. They may     03510004         range from 0 to 4g.
               03520004
               03530004
                 03540004
                 03550004TECHNICAL INFORMATION:
                 03560004
                   035700041.) DSCOPY uses QSAM for all I/O.
                   03580004
                   035900042.) Chained scheduling (OPTCD=C) is used wherever pos
sible. It i  s not   03600004    possible for input data sets with RECFM=U. It i
s also not possible  03610004    when the BLKSIZE is sufficiently large and the
region is            03620005    sufficently small that only one buffer can be g
enerated.            03630  005
                       036400043.) DSCOPY is serially reusable.
                       03650004
                       03660004
                         03670004
                         03680004DYNAMIC INVOCATION:
                         03690004
                           03700004DSCOPY can be invoked as a subroutine by othe
r programs. For details,   03710004see commentary within DSCOPY's sopurce code.
                           03720004
                             03730005./ ADD NAME=XMITMSG  0100-05218-05218-1644-
00048-00048-00000-DBCOLEA            The DSCOPY program is copyrighted (c) 1972-
2005 by David B. Cole. All           rights reserved.
 
                                       This program is distributed freely and ma
y be reproduced and                    redistributed without restriction other t
han:                                       - This copyright and usage/warranty/l
iability restriction statement               ("Legal Statement") may not be modi
fied or removed.                           - A similar Legal Statement located i
n this program's source code                   also may not be removed.
 
                                           This program is distributed without w
arranty of any kind, including             (without+  limitation) warranties of
merchantability and of fitness for a         part  icular purpose. It is up to t
he user to make his own determination          of the usefulness of this program
 in his own system.
                                               The user agrees n  ot to hold eit
her David B. Cole or Cole Software, LLC          or any person affiliated with C
ole Software, LLC (collectively "COLE")          liable for any injury or damage
 whatsoever.
                                                   Further, the user agrees to i
ndemnify COLE against third parties for            any action arising from the u
ser's use, misuse, modification, and/or            redistribution of this progra
m.
                                                     This program may be modifie
d freely so long as all modifications are            clearly marked both interna
lly and externally to disting  uish them from          the distributed code and
functionality.
                                                       As a courtesy, please not
ify David Cole if you discover any bugs or i  f          you need or have made a
ny code changes. (COLE, of course, does not              guarantee that any futu
re changes or corrections wither will or will            not be made.)
 
                                                           Contact information a
s of AUG05 is:
                                                               Name:
      David B. Cole                                              Country:
      USA                                                        Telephone:
      540-456-8536                                               FAX:
      540  -456-6658                                               E-mail:
        dbcole@colesoft.com                                        Website:
        www.colesoft.com
                                                                     Snail Mail:
          Cole Software
          736 Fox Hollow Road
          Afton, VA 22920
            USA
                                                                   For additiona
l information, read the README file.                  ^
                                                                      {
               _ ./ ADD NAME=ASMJCL   0101-99126-99126-0841-00042-00042-00000-DB
COLE6            //ASMBPT   JOB (CSW,UPS),'540-456-8536',CLASS=A,MSGCLASS=D,
         00010002//             MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439
         00020000/  /*
           00050000//*
           00000001//***********************************************************
           00000002//*
 *           00000003//*      SAMPLE JCL TO ASSEMBLE AND LINKEDIT THE BLKSPTRK
 *           00000004//*      PROGRAM.
 *           00000005//*
   *           00000006//*******************************************************
****           00000007//*
               00000008//ASM     EXEC PGM=ASMA90,REGION=0M,
                 00000009// PARM='TERM,TEST,OBJECT,NODECK,LINECOUNT(109),RENT' <
====LINECOUNT===         //SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
                 00000011//         DD  DSN=SYS1.MODGEN,DISP=SHR
                   00000012//*
                   00000013//***************************************************
********           00000014//*
       *             00000015//* THE FOLLOWING MACLIB IS AVAILABLE FROM WWW.COLE
SOFT.COM *           00000016//*
         *           00000018//         DD  DSN=DBCOLE.MACLIB,DISP=SHR <========
==============DSN=== 0000001  9//*
           *           00000020//***********************************************
************           00000021//*
                       00000022//SYSUT1   D  D  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CY
L,(15,5)),               00000023//             DISP=(,PASS)
                         00000024//SYSTERM  DD  SYSOUT=*
                         00000025//SYSPRINT DD  SYSOUT=*
                           00000026//SYSLIN   DD  DSN=&&OBJSET,UNIT=DISK,SPACE=(
CYL,(1,1),RLSE),           00000027//             DISP=(MOD,PASS)
                           00000028//SYSIN    DD  DSN=DBCOLE.EXPORT.BLKSP  TRK(B
LKSPTRK),DISP=SHR <===DSN=== 00000029//*
                             00000030//LKED    EXEC PGM=IEWL,REGION=1024K,
                             00000031//             PARM='RENT,TEST,XREF,LET,LIS
T,NCAL',                       00000032//             COND=(0,LT)
                               00000033//SYSLMOD  DD  DSN=DBCOLE.LOAD,DISP=SHR <
========================DSN=== 00000034//SYSUT1   DD  DSN=&&SYSUT1,DISP=(OLD,DEL
ETE)                   +         00000035//SYSPRINT DD  SYSOUT=*
                                   00000036//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD
,DELETE)                           00000037//SKIPTHIS DD  *
                                   00000038         ALIAS BPT
                                   0  0000039         NAME  BLKSPTRK(R)
                                     00000040./ ADD NAME=BLKSPTRK 0100-99126-991
26-0831-01190-01190-00000-DBCOLE6            BPT      TITLE 'BLKSPTRK -- PHYSICA
L BLOCKS PER DASD TRACK CALCULATER'  00010000******  ***************************
**************************** 11/84 DBC 00020000*
                           * 11/84 DBC 00030000* MODULE NAME = BLKSPTRK.
                           * 11/84 DBC 00040000*
                             * 11/84 DBC 00050000* DESCRIPTIVE NAME = PHYSICAL B
LOCKS PER DASD TRACK         * 11/84 DBC 00060000*                    CALCULATOR
.                            * 11/84 DBC 00070000*
                               * 11/84 DBC 00080000* STATUS = RELEASE 9707.
                               * 07/97 DBC 00090000*
                               * 11/84 DBC 00100000* FUNCTION = A TSO COMMAND TH
AT DISPLAYS TRAC  K CAPACITIES   * 11/84 DBC 00110000*            FOR ANY SET OF
 DASD DEVICES, FOR ANY GIVEN     * 11/84 DBC 00120000*            COMBINATION OF
 KEY LENGTHS, BLOCK SIZES,       * 11/84 DBC 00130000*            AND/OR BLOCK C
OUNTS.                             * 11/84 DBC 00140000*
                                   * 11/84 DBC 00150000* PROCESSOR = OS/VS ASSEM
BLER.                              * 11/84 DBC 00160000*
                                   * 11/84 DBC   00170000* TYPE = TSO COMMAND PR
OCESSOR.                             * 11/84 DBC 00180000*
                                     * 11/84 DBC 00190000* ATTRIBUTES = REENTRAN
T, REFRESHABLE, REUSABLE.            * 11/84 DBC 00200000*
                                       * 11/84 DBC 00210000* AUTHOR = DAVID B. C
OLE.                                   * 11/84 DBC 00220000*
                                       * 11/84 DBC 00230000*****************  **
****************************************** 11/84 DBC 00240000*
                                         * 07/97 DBC 00250000* This program is c
opyrighted (c) 1997 by David B. Cole.    * 07/97 DBC 00260000*
                                           * 07/97 DBC 00270000* This program is
 distributed freely and may be reproduced  * 07/97 DBC 00280000* and redistribut
ed without restriction other than:         * 07/97 DBC 00290000*   - This copyri
ght and usage/warranty/lia  bility           * 07/97 DBC 00300000*     restricti
on statement ("Legal Statement") may not be  * 07/97 DBC 00310000*     modified
or removed.                                  * 07/97 DBC 00320000*   - A similar
 Legal Statement located in this program'+ s   * 07/97 DBC 00330000*     Online
Help file may not be removed.                    * 07/97 DBC 00340000*   - This
program's Online Help File must be installed in  * 07/97 DBC 00350000*     a sui
table "help library" (such as SYS1.HELP) so that * 07/97 DBC 00360000*     users
 may see both the Legal Statement as well as     * 07/  97 DBC 00370000*     usa
ge instruction.                                    * 07/97 DBC 00380000*
                                                   * 07/97 DBC 00390000* This pr
ogram is distributed without warranty of any kind, * 07/97 DBC 004000  00* inclu
ding (without limitation) warranties of              * 07/97 DBC 00410000* merch
antability and of fitness for a particular purpose.  * 07/97 DBC 00420000* It is
 up to the user to make his own determination of the * 07/97 DBC 00430000* usefu
lnes  s of this program in his own system.             * 07/97 DBC 00440000*
                                                       * 07/97 DBC 00450000* The
 user agrees not to hold me ( David B. Cole) liable    * 07/97 DBC 00460000* for
 any damage whatsoe  ver, and the user agrees to         * 07/97 DBC 00470000* i
ndemnify me against third parties for any action arising * 07/97 DBC 00480000* f
rom the user's use, modification, and/or redistribution  * 07/97 DBC 00490000* o
f this program.                                            * 07/97 DBC 00500000*
                                                           * 07/97 DBC 00510000*
 This program may be modified freely so long as all        * 07/97 DBC 00520000*
 modifications are clearly marked both internally   and      * 07/97 DBC 0053000
0* externally to distinguish them from the distributed code  * 07/97 DBC 0054000
0* and functionallity.                                       * 07/97 DBC 0055000
0*                                                           * 0  7/97 DBC 00560
000* As a courtesy, please notify me if you discover any bugs  * 07/97 DBC 00570
000* or if you need or have made any code changes. (I of       * 07/97 DBC 00580
000* of course do not guarantee either that I will or that I   * 07/97 DBC 0059
 0000* will not make any future changes or corrections.)         * 07/97 DBC 006
00000*                                                           * 07/97 DBC 006
10000* My contact information as of JUL97 is:                    * 07/97 DBC 006
20000*                                                             * 07/97 DBC 0
0630000*     Name:                David B. Cole                    * 07/97 DBC 0
0640000*     Country:             USA                              * 07/97 DBC 0
0650000*     Telephone:             540-456-8536                     * 07/97 DBC
 00660000*     FAX:                 540-456-6658                     * 07/97 DBC
 00670000*     E-mail:              davidbcole@aol.com               * 07/97 DBC
 00680000*     Website:             www.cole  soft.com                 * 07/97 D
BC 00690000*                                                           * 07/97 D
BC 00700000*     Snail Mail:          Cole Software                    * 07/97 D
BC 00710000*                          736 Fox Hollow Road  +             * 07/97
 DBC 00720000*                          Afton, VA 22920                    * 07/
97 DBC 00730000*                          USA                              * 07/
97 DBC 00740000*                                                           * 07/
97 DBC 00750000*********************************************************  **** 0
7/97 DBC 00760000         EJECT ,                                              0
7/97 DBC 00770000************************************************************* 1
1/84 DBC 00780000*                                                           * 1
1/84 DB  C 00790000* ENTRY POINT = BLKSPTRK.                                   *
 11/84 DBC 00800000*                                                           *
 11/84 DBC 00810000* ALIAS NAME = BPT.                                         *
 11/84 DBC 00820000*
 * 11/84 DBC 00830000* COMMAND FORMAT = BLKSPTRK (<DEVTYPE> ...)
 * 11/84 DBC 00840000*                  KEYLEN(<KEY_LENGTH> ...)
 * 11/84 DBC 00850000*                    BLKSIZE(<BLOCK_SIZE>|#<BLOCK_COUNT>|0
...) 11/84 DBC 00860000*
   * 11/84 DBC 00870000* ANY NUMBER OF DEVICE TYPES, KEY LENGTHS AND BLOCK SIZES
   * 11/84 DBC 00880000* MAY BE GIVEN. A MATRIX IS D  ISPLAYED SHOWING TRACK
     * 11/84 DBC 00890000* CAPACITIES FOR ALL COMBINATIONS OF THE GIVEN PARAMETE
RS.  * 11/84 DBC 00900000*
     * 11/84 DBC 00910000* THE KEYLEN PARAMETER CAN BE OMITTED IN W  HICH CASE T
HE     * 11/84 DBC 00920000* TRACK CAPACITIES WILL BE CALCULATED FOR BLOCKS WITH
OUT    * 11/84 DBC 00930000* KEYS. EQUIVALENTLY, KEYLEN(0) MAY BE GIVEN.
       * 11/84 DBC 00940000*
         * 11/84 DBC 00950000* THE BLKSIZE PARAMETER ALSO CAN BE OMITTED IN WHIC
H CASE   * 11/84 DBC 00960000* THE SIZE OF THE LARGEST BLOCK (CONSIDERING THE GI
VEN OR   * 11/84 DBC 00970000* OMITTED KEY LENGTH(S)) THAT CAN BE CONTAINED ON A
 TRACK   * 11/84   DBC 00980000* IS DISPLAYED FOR EACH DEVICE TYPE REQUESTED.
           * 11/84 DBC 00990000* EQUIVALENTLY, BLKSIZE(0) MAY BE GIVEN.
           * 11/84 DBC 01000000*
           * 11/84 DBC 01010000*   IF A BLKSIZE VALUE IS GIVEN AS #N (E.G., #6),
 THEN IT IS  * 11/84 DBC 01020000* INTERPRETED AS A BLOCK COUNT INSTEAD OF A BLO
CK SIZE. IN  * 11/84 DBC 01030000* THIS CASE THE BLOCK SIZE DISPLAYED WILL BE TH
E LARGEST    * 11/84 DBC 01040000* FOR WHICH N   BLOCKS CAN FIT ON A TRACK FOR E
ACH DEVICE     * 11/84 DBC 01050000* TYPE REQUESTED (TAKING INTO CONSIDERATION K
EY LENGTH      * 11/84 DBC 01060000* VALUES, IF ANY).
               * 11/84 DBC 01070000*
                 * 11/84 DBC 01080000*******************************************
****************** 11/84 DBC 01090000*
                 * 07/97 DBC 01100000*  Last Change Date - 07/10/97          +
                   * 07/97 DBC 01110000*
                     * 07/97 DBC 01120000*  Reorganized the device data tables a
nd removed unused    * 07/97 DBC 01130000*  fields.
                     * 07/97 DBC 01140000*
                       * 07/97 DBC 01150000*  Added support for 3390, 3995, and
9345 devices.          * 07/97 DBC 01160000*
                       * 07/97 DBC 01170000*  Corrected the residue calculations
 for all devices.      *   07/97 DBC 01180000*
                         * 07/97 DBC 01190000*  Corrected block count calculatio
ns for 2311, 2314, and   * 07/97 DBC 01200000*  2321 devices (devices that use t
olerance factors).       * 07/97 DBC 012  10000*
                           * 07/97 DBC 01220000*********************************
**************************** 07/97 DBC 01230000         EJECT ,
                                       01240000BLKSPTRK   START ,
                                         01250000BPT      EQU   BLKSPTRK
    ALIAS NAME                           01260000         SPACE 3
                                         01270000         #REGS R
      STANDARD REGISTER EQUATES            01280000         EJECT
                                           01290000*****************************
******************************** 07/97 DBC 01300000* Track calculation data for
all I  BM dasd devices.          * 07/97 DBC 01310000***************************
********************************** 07/97 DBC 01320000         SPACE 1
                                   07/97 DBC 01330000CONSTANT DSECT ,
        DEVICE DESCR  IPTIVE DATA              01340000TRKCAP   DS    HL2
          TRACK CAPACITY.            07/97 DBC 01350000FLAG     DS    B
          CONTROL FLAGS              07/97 DBC 01360000DVC2BOV  EQU   X'08'
          OVERHEAD IS SINGLE HALFWO  RD          01370000DVCCELLS EQU   X'10'
            DEVICE IS CELLULAR         11/84 DBC 01380000DVCFTOL  EQU   X'01'
            DEVICE USES TOLERENCE FACTOR         01390000FORMULA2 EQU   X'02'
            CALCULATE TRACK CAPACITIES 07/97 DBC 0  1400000*
              USING "FORMULA 2".         07/97 DBC 01410000         SPACE 1
                                         07/97 DBC 01420000FACTORS  DS    0X
              MISC CALCULATION FACTORS   07/97 DBC 01430000           SPACE 1
                                           07/97 DBC 01440000*******************
****************************************** 07/97 DBC 01450000* The following fie
lds contain overhead data and factors    * 07/97 DBC 01460000* for noncellular d
  evices.                                  * 07/97 DBC 01470000*****************
******************************************** 07/97 DBC 01480000         ORG   FA
CTORS                                        07/97 DBC 01490000ROVRHD   DS    XL
3              +    RECORD OVERHEAD.           07/97 DBC 01500000TOLER    DS
HL2                   TOLERANCE FACTOR.          07/97 DBC 01510000         DS
  X                   RESERVED                   07/97 DBC 01520000         SPAC
E 1                                              07/97 DBC 01530000*************
****************************  ******************** 07/97 DBC 01540000* The follo
wing fields contain overhead data and factors    * 07/97 DBC 01550000* for early
 cellular devices (3375 and 3380).               * 07/97 DBC 01560000***********
*******************************************  ******* 07/97 DBC 01570000
ORG   FACTORS                                        07/97 DBC 01580000DCELLSIZ
DS    X                   DEVICE'S CELL SIZE         07/97 DBC 01590000D3380CO
DS    HL2                 COUNT AREA OVERHEAD        07/97   DBC 01600000D3380KD
O DS    HL2                 KEY OR DATA AREA OVERHEAD  07/97 DBC 01610000
  DS    X                   RESERVED                   07/97 DBC 01620000
  SPACE 1                                              07/97 DBC 01630000  *****
******************************************************** 07/97 DBC 01640000* The
 following fields contain overhead data and factors    * 07/97 DBC 01650000* for
 later cellular devices (3390 and later). The          * 07/97 DBC 01660000* cal
culation   formula is based on information found in "IBM * 07/97 DBC 01670000* 3
990 Storage Control Reference" (GA32-0099-05). The       * 07/97 DBC 01680000* f
ormula is:                                               * 07/97 DBC 01690000*
 ((DL+F6+(F5*2-1)/(F5*2  )*F4+F6+DL+(F1-1))/F1+F2)*F1      * 07/97 DBC 01700000*
  +(((KL+F6+(F5*2-1)/(F5*2)*F4+F6+DL+(F1-1))/F1+F3)*F1)    * 07/97 DBC 01710000*
   *(KL<>0)                                                * 07/97 DBC 01720000*
 where:                                                      * 07/97 DBC 0173000
0*   - DL = l'data                                           * 07/97 DBC 0174000
0*   - KL = l'key                                            * 07/97 DBC 0175000
0*   - F1, ..., F6 are factors given by the "Read Dev  ice     * 07/97 DBC 01760
000*     Characteristics" CCW and are as documented in         * 07/97 DBC 01770
000*     GA32-0099.                                            * 07/97 DBC 01780
000*   - All divisions truncate the remainder.                 * 07/  97 DBC 017
90000* Basically, this formula means:                            * 07/97 DBC 018
00000*   - The minimum allocation unit is a "cell" whose size is * 07/97 DBC 018
10000*     F1 bytes.                                             * 07/97 DBC 018
200  00*   - The count area and its leading gap requires F2-F3     * 07/97 DBC 0
1830000*     cells.                                                * 07/97 DBC 0
1840000*   - The gaps in front of key areas (if any) and data      * 07/97 DBC 0
1850000*     areas   each require F3 cells.                          * 07/97 DBC
 01860000*   - If no key is given, then no overhead is taken for it. * 07/97 DBC
 01870000*   - Data within key areas and data areas have an overhead * 07/97 DBC
 01880000*     of:               +                                     * 07/97 D
BC 01890000*       - F6 bytes p  er area,                                * 07/97
 DBC 01900000*       - Plus F4 bytes for every F5*2 bytes of data.       * 07/97
 DBC 01910000*     Presumedly, this overhead is ECC overhead of some     * 07/97
 DBC 01920000*     sort.                                                   * 07/
97 DBC 01930000************************************************************* 07/
97 DBC 01940000         ORG   FACTORS                                        07/
97 DBC 01950000         DS    X                   DCELLSIZ ("  F1" FACTOR)     0
7/97 DBC 01960000D3390F2  DS    X                   CNT+DATA OVERHEAD (CELLS)  0
7/97 DBC 01970000D3390F3  DS    X                   KEY OVERHEAD (CELLS)       0
7/97 DBC 01980000D3390F4  DS    X                   ECC(?) OHEAD MULTIPLIER
 07/97 DBC 01990000D3390F5  DS    X                   ECC(?) OHEAD DIVISOR/2
 07/97 DBC 02000000D3390F6  DS    X                   ECC(?) OHEAD INCRIMENT
 07/97 DBC 02010000         SPACE 1
 07/97 DBC   02020000         ORG   ,                   RELOCATE HIGH
   07/97 DBC 02030000KDEVSIZE EQU   *-CONSTANT          DDD ENTRY SIZE
             02040000         SPACE 3
             02050000           IKJCPPL ,                 COMMAND PROCESSOR PARA
METER LIST     02060000         SPACE 3
               02070000         IKJPPL ,                  PARSE PARAMETER LIST
               02080000PPLLEN   EQU   *-P  PL               LIST LENGTH
                 02090000         EJECT
                 02100000         #DSA  ,                   DATA STORAGE AREA
                 02110000DSAWORK  DS    D                     WORK AREA
                   02120000DSABUFF  DS    CL80                MESSAGE BUFFER AND
 WORK AREA         02130000DSAECB   DS    A                   ECB USED BY PARSE
                   02140000DSAPDL   DS    A                   PARSE PAR  AMETER
DESCRIPTER LIST PTR  02150000         DS    0A
                     02160000DSAPPL   DS    XL(PPLLEN)          PARSE PARAMETER
LIST                 02170000SAVC3390 DS    10A                 RSA FOR CPA3390
             07/97 DBC 02180000SAVOBPT  DS    5A                  RSA FOR OLDBPT
             07/97 DBC 02190000DSALEN   EQU   *-DSA               DSA LENGTH
                       02200000         EJECT
                         02210000BLKSPTRK #ENTER SAVTYPE=(RENT,DSALEN) STANDARD
REENTRANT ENTRY LINKAGE  02220000         LR    R11,R13             COPY DSA PTR
                         02230000         USING DSA,R11             DECLARE DSA
BASE                     02240000           SPACE 3
                           02250000*        INITIALIZE A PARAMETER LIST FOR PARS
E AND THEN LINK TO IT      02260000         SPACE 1
                           02270000         LR    R+ 2,R1               GET THE
CPPL POINTER                 02280000         USI  NG CPPL,R2             DECLAR
E A BASE FOR IT                02290000         LA    R1,DSAPPL           POINT
TO THE PPL                     02300000         USING PPL,R1              DECLAR
E A BASE FOR IT                02310000         L     R0,CPPLUPT            INIT
IALIZE -                         02320000         ST    R0,PPLUPT            UPT
 POINTER                         02330000         L     R0,CPPLECT          INIT
IALIZE -                         02340000         ST    R0,PPLECT            EC
 T POINTER                         02350000         MVI   DSAECB,0            CL
EAR AN ECB FOR PARSE               02360000         LA    R0,DSAECB           IN
ITIALIZE -                         02370000         ST    R0,PPLECB            E
CB POINTER                           02380000         L     R0,=V(PCL)
INITIALIZE -                         02390000         ST    R0,PPLPCL
 PCL POINTER                         02400000         LA    R0,DSAPDL
INITIALIZE -                           02410000         ST    R0,PPLANS
   PDL POINTER POINTER                 02420000         L     R0,CPPLCBUF
  INITIALIZE -                         02430000         ST    R0,PPLCBUF
   CBUF POINTER                        02440  000         ST    R13,PPLUWA
    INITIALIZE VLDTY CHK WA PTR          02450000         DROP  R2
    RELEASE CPPL BASE                    02460000         DROP  R1
    RELEASE PPL BASE                     02470000         L  INK  EP=IKJPARS
      PARSE THE INVOKING OPERANDS          02480000         LTR   R15,R15
      PARSE OK?                            02490000         BZ    PARSOK
      YES, PROCEED                         02500000         CVD   R15,DSAW  ORK
        NO, CNVRT RC TO DECIMAL              02510000         UNPK  DSABUFF(2),D
SAWORK+6(2) CNVRT TO EBCDIC                  02520000         OI    DSABUFF+1,X'
F0'     FIX THE FUCKING SIGN                 02530000         LA    R4,DSABUFF
        P  OINT TO EBCDIC RC                   02540000         LA    R5,1
          GET ITS MACHINE LENGTH               02550000         LA    R1,PARSFMS
G-1       POINT TO ERROR MSG                   02560000         LR    R3,R15
          SAVE THE RC                            02570000         BAL   R2,TPUTE
RRM         GO ISSUE THE ERROR MSG               02580000         LR    R15,R3
            RESTORE THE RC                       02590000         B     EXITGOOD
            GO RETURN TO TMP                       02600000PARSOK   EQU   *
                                                   02610000         SPACE 3
                                                   02620000*********************
**************************************** 07/97 DBC 026  30000* Display copyright
, legal reference, and title messages.   * 07/97 DBC 02640000*******************
****************************************** 07/97 DBC 02650000         SPACE 1
                                           07/97 DBC 02660000        +  LA    R1
,=C' '                                       07/97 DBC 02670000           LA
R0,1                                           07/97 DBC 02680000         TPUT
(1),(0),R           SEND SPACER                07/97 DBC 02690000         SPACE
1                                              07/97 DBC 02700000         LA
R1  ,COPYRIGH                                    07/97 DBC 02710000         LA
  R0,L'COPYRIGH                                  07/97 DBC 02720000         TPUT
  (1),(0),R           SEND COPYRIGHT STATEMENT   07/97 DBC 02730000         SPAC
E 1                                                07/97 DBC 02740000         LA
    R1,LEGALRF1                                    07/97 DBC 02750000         LA
    R0,L'LEGALRF1                                  07/97 DBC 02760000         TP
UT  (1),(0),R           SEND LEG  AL REFERENCE MSG   07/97 DBC 02770000
SPACE 1                                              07/97 DBC 02780000
LA    R1,LEGALRF2                                    07/97 DBC 02790000
LA    R0,L'LEGALRF2                                    07/97 DBC 02800000
  TPUT  (1),(0),R           SEND REST OF LEGAL REF.    07/97 DBC 02810000
  SPACE 1                                              07/97 DBC 02820000
  LA    R1,=C' '                                       07/97 D  BC 02830000
    LA    R0,1                                           07/97 DBC 02840000
    TPUT  (1),(0),R           SEND SPACER                07/97 DBC 02850000
    SPACE 1                                                        02860000
      LA    R1,TITLE            POINT TO TITLE                       02870000
      LA    R0,TITLEN           GET ITS LENGTH                       02880000
      TPUT  (1),(0),R           SEND IT                              02890000
      SPACE   3                                                        02900000*
************************************************************ 07/97 DBC 02910000*
 Start a triple loop to display a matrix of the requested  * 07/97 DBC 02920000*
 data.                                                       * 07/97 DBC 0293000
0************************************************************* 07/97 DBC 0294000
0         SPACE 1                                              07/97 DBC 0295000
0         L     R3,DSAPDL           @'PARS  E DESCRIPTOR LIST    07/97 DBC 02960
000         LA    R3,PDLDEVT-PDL(,R3) PNT TO DEVICE PARAMETER    07/97 DBC 02970
000*                                  CHAIN                      07/97 DBC 02980
000DEVTLOOP CLI   0(R3),X'FF'         OMITTED VALUE?                         029
90000         BE    DEVTNEXT            YES, LOOP FOR NEXT                   030
00000         MVI   DSABUFF,C' '        NO, CLEAR MSG BUFFER                 030
10000         MVC   DSABUFF+1(TITLEN-1),DSABUFF                                0
3020000         L     R1,0(,R3)           POINT TO DEVTYPE STRING              0
3030000         LH    R15,4(,R3)          GET ITS LENGTH                       0
3040000         BCTR  R15,0               CONVERT TO MACHINE LENGTH            0
3050000            _          MVC   DSABUFF+TITDEVT(*-*),0(R1) (EXECUTED INSTRUC
TION)        03060000         EX    R15,*-6             COPY TO MSG BUFFER
             03070000         IC    R6,0(,R3)           GET THE DDD INDEX
             03080000           N     R6,=X'0000007F'     ISSOLATE IT
               03090000         MH    R6,=Y(KDEVSIZE)     CONVERT TO OFFSET
               03100000         LA    R6,#(R6)            --> DEVICE DESCRIPTER
DATA           03110000         USING   CONSTANT,R6         DECLARE A BASE
                 03120000         SPACE 3
                 03130000         L     R5,DSAPDL           @'PARSE DESCRIPTOR L
IST    07/97 DBC 03140000         LA    R5,PDLKEYL-P  DL(,R5) POINT TO KEYLEN(S)
 CHAIN   07/97 DBC 03150000KEYLLOOP CLI   0(R5),X'FF'         OMITTED ENTRY?
                   03160000         BE    KEYLNEXT            YES, SKIP
                   03170000         MVC   DSABUFF+TITKEYL(3),=X'202  120' NO, ED
IT MASK              03180000         L     R10,0(,R5)          GET KEYLENGTH VA
LUE        07/97 DBC 03190000         CVD   R10,DSAWORK         CONVERT TO DECIM
AL         07/97 DBC 03200000         ED    DSABUFF+TITKEYL-1(4),DSAWORK+6 CNVRT
 T  O EBCDIC           03210000         SPACE 3
                       03220000*************************************************
************ 07/97 DBC 03230000* Capacity Calculation Loop: Extract the next BLK
SIZE       * 07/9  7 DBC 03240000* paremeter and proceed according to whether it
's a block   * 07/97 DBC 03250000* size or a block count.
             * 07/97 DBC 03260000***********************************************
************** 07/97 DBC 0327000  0         SPACE 1
                 07/97 DBC 03280000         L     R4,DSAPDL           @'PARSE DE
SCRIPTOR LIST    07/97 DBC 03290000         LA    R4,PDLBLKS-PDL(,R4) PNT TO BLK
SIZE(S) CHAIN    07/97 DBC 03300000BLKSLOOP CLC     0(4,R4),=4C'*'      OMITTED
ENTRY?             07/97 DBC 03310000         BE    BLKSNEXT            YES, SKI
P                            03320000         MVC   DSABUFF+TITBLKS(5),=X'202020
2120' NO, EDIT MASK          03330000         SPACE 1
                     07/97 DBC 03340000         ICM   R9,15,0(R4)         GET GI
VEN BLKSIZE; DEFAULT WANTED?   03350000         BP    SIZGIVEN            NO, US
E GIVEN VALUE        07/97 DBC 03360000         LA    R15,1               (TR  E
AT "0" AS "#1")        11/84 DBC 03370000         BZ    CNTGIVEN            YES,
 PROCESS AS B(#1)      07/97 DBC 03380000         LPR   R15,R9              NO,
GET N OF B(#N)         11/84 DBC 03390000         SPACE 3
                         07/97 DBC 03400000*************************************
************************ 07/97 DBC 03410000* The user has given a block count an
d wants to know what's * 07/97 DBC 03420000* the largest blksize that will yeald
 that block/track      * 07+ /97 DBC 03430000* count.
                           * 07/97 DBC 03440000*********************************
**************************** 07/97 DBC 03450000         SPACE 1
                             11/84 DBC 03460000CNTGIVEN SR    R9,R9
  CLEAR                      07/97 DBC 0  3470000         ICM   R9,3,TRKCAP
    YES, GET TRACK CAPACITY    11/84 DBC 03480000         SR    R7,R7
    CLEAR                                03490000         TM    FLAG,DVCCELLS
    CELLULAR DEVICE?           11/84 DBC 03500000           BNZ   CNT3380
      YES, USE NEWER FORMULAS    07/97 DBC 03510000         SPACE 1
                                 11/84 DBC 03520000*****************************
******************************** 07/97 DBC 03530000* Count calculation   for pre
-cellular devices.               * 07/97 DBC 03540000***************************
********************************** 07/97 DBC 03550000         LR    R1,R9
        GET TRK CAPACITY           07/97 DBC 03560000         TM    FLAG,DVC2BOV
          LB_OVHD = NLB_OVHD?        11/84 DBC 03570000         BNZ   DFLOHOK
          YES, SKIP                  11/84 DBC 03580000         IC    R7,ROVRHD+
1         GET LB_OVHD                11/84 DBC 03590000         SR    R1,R7
          TAKE AWAY   FROM TRK_CAP     07/97 DBC 03600000         IC    R7,ROVRH
D           GET NLB_OVHD               11/84 DBC 03610000         AR    R1,R7
            ADD TO TRK_CAP TO GET A    07/97 DBC 03620000*
            "VIRTUAL" CAPACITY THAT      07/97 DBC 03630000*
              PRETENDS THAT ALL BLOCKS   07/97 DBC 03640000*
              HAVE EQUAL OVERHEAD.       07/97 DBC 03650000DFLOHOK  DS    0H
                                         07/97 DBC   03660000         SPACE 1
                                           07/97 DBC 03670000         SLR   R0,R
0                                          07/97 DBC 03680000         DR    R0,R
15              GET #'BYTES NEEDED PER RCD 07/97 DBC 03690000           LR    R9
,R1               SAVE                       07/97 DBC 03700000         SPACE 1
                                             07/97 DBC 03710000         LTR   R1
0,R10             ARE RECORDS KEY'D?         07/97 DBC 03720000         BNZ   OL
  DKEYDZ            YES, SKIP                  07/97 DBC 03730000         IC
R7,ROVRHD+2         GET UNKEYED UNDERHEAD      07/97 DBC 03740000         ALR
R9,R7               ADD TO BYTES AVAILABLE FOR 07/97 DBC 03750000*
                      DATA AREA                  07/97 DBC 03760000OLDKEYDZ SR
  R9,R10              DECRIMENT KL FROM SPACE    07/97 DBC 03770000*
                      AVAILABLE FOR THE DL.      07/97 DBC 03780000         SPAC
E 1                                                07/97 DBC 03790000         IC
    R7,ROVRHD           GET NLB_OHEAD              07/97 DBC 03800000         TM
    FLAG,DVC2BOV        IS OVERHEAD GIVEN AS TWO   07/97 DBC 03810000*
                        SINGLE BYTES?        +       07/97 DBC 03820000
BZ    OLDOHDOK            YES, PROCEED                 07/97 DBC 03830000
  ICM   R7,3,ROVRHD         GET OVERHEAD APPLICABLE TO 07/97 DBC 03840000*
                            ALL BLOCKS                 07/97 DBC 03850000OLDOHDO
K SR    R9,R7               TAKE OVERHEAD AWAY FROM    07/  97 DBC 03860000*
                              LENGTH AVAILABLE FOR       07/97 DBC 03870000*
                              A DATA AREA. IS THERE ANY  07/97 DBC 03880000*
                              ROOM LEFT FO A DARA AREA?  07/97 DBC 038900  00
      BP    OLDOHDZ             YES, PROCEED               07/97 DBC 03900000
      LA    R9,1                NO, THE USER HAS GIVEN A   07/97 DBC 03910000*
                                BLOCK COUNT THAT IS MORE   07/97 DBC 03920000*
                                  THAN CAN BE WRITTEN PER    07/97 DBC 03930000*
                                  TRACK. LOAD DL=1 TO SHOW   07/97 DBC 03940000*
                                  THE USER THE MAXIMUM       07/97 DBC 03950000*
                                    NUMBER OF BLOCKS WRITABLE  07/97 DBC 0396000
0*                                  PER TRACK.                 07/97 DBC 0397000
0OLDOHDZ  DS    0H                                             07/97 DBC 0398000
0         SPACE 1                                                07/97 DBC 03990
000         TM    FLAG,DVCFTOL        DOES A TOLERANCE FACTOR    07/97 DBC 04000
000*                                  APPLY?                     07/97 DBC 04010
000         BZ    SIZGIVEN            NO, MY NUMBERS   ARE GOOD.   07/97 DBC 040
20000         CLC   TOLER,=X'0200'      IS THE TOLERANCE FACTOR    07/97 DBC 040
30000*                                  NULL?                      07/97 DBC 040
40000         BE    SIZGIVEN            YES, AOK SO FAR.           0  7/97 DBC 0
4050000         LA    R0,1                GET A ONE                  07/97 DBC 0
4060000         CLR   R15,R0              WAS THE GIVEN BLKCNT=1?    07/97 DBC 0
4070000         BE    SIZGIVEN            YES, TOLERANCE FACTOR DOES 07/97 DBC 0
408  0000*                                  NOT APPLY TO LAST BLK.     07/97 DBC
 04090000         CLR   R9,R0               DID I DEVOLVE TO FORCING   07/97 DBC
 04100000*                                  BLKSIZE=1?                 07/97 DBC
 04110000           BE    SIZGIVEN            YES, STICK WITH THAT       07/97 D
BC 04120000*                                  THOUGHT.                   07/97 D
BC 04130000         SPACE 1                                              07/97 D
BC 04140000OLDTOLLP BAL   R14,OLD  BPT          DETERMINE THE BPT FIT FOR  07/97
 DBC 04150000*                                  THE TRIAL DL (R9)          07/97
 DBC 04160000         CLR   R1,R15              AS MANY AS THE USER ASKED  07/97
 DBC 04170000*                                    FOR?                       07/
97 DBC 04180000         BNL   SIZGIVEN            YES, GO WITH IT            07/
97 DBC 04190000         BCT   R9,OLDTOLLP         DECRIMENT DL AND TRY AGAIN 07/
97 DBC 04200000         LA    R9,1                DEVOLVE TO DI+ SPLAYING DL=1 0
7/97 DBC 04210000         B     SIZGIVEN            DONE HERE
 07/97 DBC 04220000         SPACE 1
 11/84 DBC 04230000*************************************************************
 07/97 DBC 04240000* Count calculation for early cellular devices (3375s and
 * 07/97 DBC 04250000* 3380s).
 * 07/97 DBC 04260000***********************************************************
** 07/97 DBC 04270000CNT3380  IC    R7,DCELLSIZ         GET CELL SIZE
   07/97 DB  C 04280000         LR    R1,R9               GET TRKCAP
     11/84 DBC 04290000         SR    R0,R0               CLEAR
     11/84 DBC 04300000         DR    R0,R7               GET # CELLS AVAILABLE
     11/84 DBC 04310000           SR    R0,R0               CLEAR
       11/84 DBC 04320000         DR    R0,R15              GET # CELLS AVAIL PE
R RCD  11/84 DBC 04330000         TM    FLAG,FORMULA2       USE "FORMULA 2"?
       07/97 DBC 04340000         BNZ   C  NT3390             YES, GO HANDLE
         07/97 DBC 04350000         SPACE 1
         07/97 DBC 04360000         MR    R0,R7               CNVRT BACK TO BYTE
S        11/84 DBC 04370000         LR    R9,R1                 AND COPY BACK TO
 R9        11/84 DBC 04380000         SPACE 1
           07/97 DBC 04390000         LTR   R1,R10              ANY KEYS?
           07/97 DBC 04400000         BZ    NWNOKYS1            NO, SKI  P
             11/84 DBC 04410000         AH    R1,D3380KDO         YES, ADD KEY-A
REA OVERHEAD 07/97 DBC 04420000         SR    R0,R0               CLEAR FOR DIVI
DE           11/84 DBC 04430000         DR    R0,R7               GET # CELLS NE
EDED           11/84 DBC 04440000         MR    R0,R7               CNVRT BACK T
O ROUNDED UP   11/84 DBC 04450000*                                  BYTES
               11/84 DBC 04460000         SR    R9,R1               DECR SPACE F
OR DATA        11/84   DBC 04470000NWNOKYS1 DS    0H
                 07/97 DBC 04480000         SPACE 1
                 07/97 DBC 04490000         SH    R9,D3380CO          DECR FOR C
OUNT AREA OVHD   07/97 DBC 04500000           LR    R1,R9               COPY
                   11/84 DBC 04510000         SR    R0,R0               CLEAR
                   11/84 DBC 04520000         DR    R0,R7               GET # CE
LLS AVAILABLE FOR  11/84 DBC 04530000*                                    DATA A
REA (+ OVERHEAD)     11/84 DBC 04540000         MR    R0,R7               CNVRT
BACK TO ROUNDED DOWN 11/84 DBC 04550000*                                  BYTES
                     11/84 DBC 04560000         AR    R1,R7                 ADD
IN SPACE IN THE REST - 11/84 DBC 04570000         BCTR  R1,0                 OF
THE LAST CELL          11/84 DBC 04580000         SPACE 1
                       07/97 DBC 04590000         LA    R9,1                ASSU
M+ E MINIMUM BLKSIZE     07/97 DBC 04600000         SH    R1,D3380KDO         D
 ECR DATA AREA OVERHEAD    07/97 DBC 04610000         BNP   SIZGIVEN
TOO MANY BLKS TO FIT. GO   07/97 DBC 04620000*
WITH MINIMUM BLKSIZE TO    07/97 DBC 04630000*
SHOW THE USER   THE MOST     07/97 DBC 04640000*
  BLKS HE CAN HAVE PER TRK.  07/97 DBC 04650000         LR    R9,R1
  COPY BACK TO R9            11/84 DBC 04660000         B     SIZGIVEN
  DONE HERE                    07/97 DBC 04670000         SPACE 1
                               11/84 DBC 04680000*******************************
****************************** 07/97 DBC 04690000* Count calculation for later c
ellular devices (3390s and   * 07/97 DBC 047  00000* later).
                               * 07/97 DBC 04710000*****************************
******************************** 07/97 DBC 04720000CNT3390  LR    R9,R1
      SAVE #'CELLS NEEDED/RCD    07/97 DBC 04730000           LTR   R1,R10
        KEYED RCDS?                07/97 DBC 04740000         BZ    NOKY3390
        NO, SKIP                   07/97 DBC 04750000         BAL   R14,CPA3390
        COMPUTE #'CELLS FOR KEY    07/97 DBC 04760000         SLR   R9,R1
          #'CELLS LEFT FOR DATA+CNT  07/97 DBC 04770000NOKY3390 DS    0H
                                     07/97 DBC 04780000         SPACE 1
                                     07/97 DBC 04790000         SLR   R1,R1
                                       07/97 DBC 04800000         IC    R1,D3390
F2          #'CELLS USED BY CNT+GAP    07/97 DBC 04810000         SLR   R9,R1
            TAKE IT OUT                07/97 DBC 04820000         IC    R1,D3390
F3          #'CELLS USED   BY GAP        07/97 DBC 04830000         AR    R9,R1
              ADD IT BACK IN TO GET      07/97 DBC 04840000*
              #'CELLS AVAILABLE FOR      07/97 DBC 04850000*
              DATA. ARE THERE ANY?         07/97 DBC 04860000         BNP   NODL
3390            NO, USER ERROR.            07/97 DBC 04870000         SPACE 1
                                           07/97 DBC 04880000         LR    R2,R
9               SAVE #'CELLS FOR DATA AREA 07/97 DBC 0  4890000         MR    R8
,R7               CNVRT TO #'BYTES           07/97 DBC 04900000DLLP3390 LR    R1
,R9               COPY TEST L'DATA           07/97 DBC 04910000         BAL   R1
4,CPA3390         FIGURE HOW MAY CELLS IT    07/97 DBC 04920000*
                    WILL NEED                  07/97 DBC 04930000         CLR
R1,R2               WOULD THAT DL FIT?         07/97 DBC 04940000         BNH
SIZGIVEN            YES, DONE HERE             07/97 DBC 04950000         BCT
R9,D  LLP3390         LOOP TO TRY SMALLER DL     07/97 DBC 04960000         SPAC
E 1                                              07/97 DBC 04970000NODL3390 LA
  R9,1                THE USER HAS GIVEN A BLOCK 07/97 DBC 04980000*
                   +    COUNT GREATER THAN THE     07/97 DBC 04990000*
                          MOST BLOCKS POSSIBLE PER   07/97 DBC 05000000*
                          TRK. LOAD MINIMUM BLKSIZE  07/97 DBC 05010000*
                          TO SHOW THE USER THE MAX   07/97 DBC 05020000*
                          POSSIB  LE BLK COUNT.        07/97 DBC 05030000
  SPACE 3                                              07/97 DBC 05040000*******
****************************************************** 07/97 DBC 05050000* I (no
w) have a blksize. Calculate how many blocks of   this * 07/97 DBC 05060000* siz
e can fit per track.                                   * 07/97 DBC 05070000*****
******************************************************** 07/97 DBC 05080000
    SPACE 1                                              07/97   DBC 05090000SIZ
GIVEN CVD   R9,DSAWORK          CONVERT TO DECIMAL         07/97 DBC 05100000
      ED    DSABUFF+TITBLKS-1(6),DSAWORK+5 CNVRT TO EBCDIC           05110000
      SPACE 1                                              07/97 DBC 05120000
        TM    FLAG,DVCCELLS       CELLULAR DEVICE?           11/84 DBC 05130000
        BNZ   SIZ3380             YES, GO HANDLE             07/97 DBC 05140000
        SPACE 1                                              11/84 DBC 05150000*
************  ************************************************ 07/97 DBC 0516000
0* Size calculation for pre-cellular devices.                * 07/97 DBC 0517000
0************************************************************* 07/97 DBC 0518000
0         BAL   R14,OLDBPT            GO CALCULATE               07/97 DBC 05190
000         LR    R15,R1              GET BPT VALUE              07/97 DBC 05200
000         LR    R14,R0              GET USABLE RESIDUE         07/97 DBC 05210
000         B     GOTRESDU            PROC  EED                    07/97 DBC 052
20000         SPACE 1                                              11/84 DBC 052
30000************************************************************* 07/97 DBC 052
40000* Size calculation for early cellular devices (3375s   and    * 07/97 DBC 0
5250000* 3380s).                                                   * 07/97 DBC 0
5260000************************************************************* 07/97 DBC 0
5270000SIZ3380  SR    R7,R7                                          07/  97 DBC
 05280000         IC    R7,DCELLSIZ         GET CELL SIZE              07/97 DBC
 05290000         TM    FLAG,FORMULA2       USE "FORMULA 2"?           07/97 DBC
 05300000         BNZ   SIZ3390             YES, GO HANDLE             07/97 DBC
 053100  00         SPACE 1                                              07/97 D
BC 05320000         LTR   R1,R9               GET DATALEN; EOF?          07/97 D
BC 05330000         BNZ   NWNTEOF             NO, PROCEED                11/84 D
BC 05340000         LR      R1,R7               YES, DATA AREA STILL TAKES 11/84
 DBC 05350000*                                  A CELL                     11/84
 DBC 05360000NWNTEOF  DS    0H                                             07/97
 DBC 05370000         SPACE 1        +                                       07/
97 DBC 05380000         AH    R1,D3  380KDO         ADD DATA AREA OVERHEAD AND 0
7/97 DBC 05390000*                                  ROUND-UP INCRIMENT         0
7/97 DBC 05400000         SR    R0,R0               CLEAR                      1
1/84 DBC 05410000         DR    R0,R7                 CNVRT TO CELL COUNT
 11/84 DBC 05420000         LR    R9,R1               SAVE
 07/97 DBC 05430000         SPACE 1
 11/84 DBC 05440000         LTR   R15,R10             COPY KEYLEN  ; ANY?
   07/97 DBC 05450000         BZ    NWNOKYS2            NO, SKIP
   11/84 DBC 05460000         AH    R15,D3380KDO        ADD OVERHEAD & ROUND-UP
   07/97 DBC 05470000*                                  INCRIMENT
     07/97 DBC 05480000         SR    R14,R14
     07/97 DBC 05490000         DR    R14,R7              CNVRT TO CELL COUNT
     11/84 DBC 05500000         ALR   R1,R15              ACCUMULATE
     07/97 DBC   05510000NWNOKYS2 LR    R0,R15              SAVE KEY CELL CNT (O
R 0)   07/97 DBC 05520000         SPACE 1
       07/97 DBC 05530000         LH    R15,D3380CO         GET COUNT AREA OHEAD
       07/97 DBC 05540000           ALR   R15,R7              PREPATE TO -
         07/97 DBC 05550000         BCTR  R15,0                ROUND UP
         07/97 DBC 05560000         SLR   R14,R14
         07/97 DBC 05570000         DR    R14  ,R7              CNVRT OHEAD TO C
ELL CNT    07/97 DBC 05580000         ALR   R0,R15              ACCUMULATE
           07/97 DBC 05590000         SPACE 1
           07/97 DBC 05600000         ALR   R1,R15                GET THE TOTAL
#'CELLS      07/97 DBC 05610000*                                  NEEDED FOR THE
 RECORD.     07/97 DBC 05620000         SPACE 1
             07/97 DBC 05630000         SR    R15,R15             CLEAR
               11/84 DBC 05640000         ICM   R15,3,TRKCAP        GET L'TRACK
               11/84 DBC 05650000         SLR   R14,R14
               07/97 DBC 05660000         DR    R14,R7              GET #'CELLS/
TRACK            07/97 DBC 05670000         SPACE 1
                 07/97 DBC 05680000         SLR   R14,R14
                 07/97 DBC 05690000         DR    R14,R1              R15 = #'RE
CORDS/TRACK      07/97 DB  C 05700000*                                  R14 = #'
CELLS LEFT OVER    07/97 DBC 05710000         SPACE 1
                   07/97 DBC 05720000         SR    R14,R0              DECRIMEN
T RESIDUE BY       07/97 DBC 05730000*                                    #'CELL
S NEEDED FOR COUNT   07/97 DBC 05740000*                                  AND KE
Y (IF ANY). ARE      07/97 DBC 05750000*                                  THERE
ANY CELLS LEFT FOR   07/97 DBC 05760000*               +                    DATA
?                      07/97 DBC 05770000         BNP     NORD3380            NO
, NO USABLE RESIDUE      07/97 DBC 05780000         SPACE 1
                         07/97 DBC 05790000         LR    R1,R9               @'
DATA CELLS               07/97 DBC 05800000         MR    R0,R7
@'DATE BYTES (INCL OHEAD)  07/97 DBC 05810000         LR    R8,R1
SAVE                       07/97 DBC 05820000         SPACE 1
                           07/97 DBC 05830000FIGR3380 LR    R1,R8
COP  Y PROPOSED DL           07/97 DBC 05840000         AH    R1,D3380KDO
  ADD OHEAD + ROUND-UP       07/97 DBC 05850000         SLR   R0,R0
                             07/97 DBC 05860000         DR    R0,R7
  CNVRT TO CELLS               07/97 DBC 05870000         CLR   R1,R14
    WILL THIS DL FIT WITHIN    07/97 DBC 05880000*
    THE RESIDUE?               07/97 DBC 05890000         BNH   RDUE3380
    YES, GREAT!                07  /97 DBC 05900000         BCT   R8,FIGR3380
      TRY SMALLER DL             07/97 DBC 05910000         SPACE 1
                                 07/97 DBC 05920000NORD3380 SLR   R14,R14
      THERE IS NO USEFUL RESIDUE 07/97 DBC 05930  000         B     GOTRESDU
        GO DISPLAY                 07/97 DBC 05940000RDUE3380 LR    R14,R8
        GET LARGEST FITTING DL     07/97 DBC 05950000         B     GOTRESDU
        GO DISPLAY                 07/97 DBC 05960000         S  PACE 1
                                     11/84 DBC 05970000*************************
************************************ 07/97 DBC 05980000* Size calculation for la
ter cellular devices (3390s and    * 07/97 DBC 05990000* later).
                                     * 07/97 DBC 06000000***********************
************************************** 07/97 DBC 06010000SIZ3390  LTR   R1,R9
            L'DATA REQ'D; EOF RECORD?  07/97 DBC 06020000         BNZ   EOFZ3390
            N  O, PROCEED                07/97 DBC 06030000         LR    R1,R7
              EOF'S STILL NEED A CELL    07/97 DBC 06040000EOFZ3390 BAL   R14,CP
A3390         #'CELLS FOR DATA AREA      07/97 DBC 06050000         LR    R9,R1
              SAVE                         07/97 DBC 06060000         SPACE 1
                                           07/97 DBC 06070000         LTR   R1,R
10              KEY'D RCDS?                07/97 DBC 06080000         BZ    NOKZ
3390            NO, SKIP                     07/97 DBC 06090000         BAL   R1
4,CPA3390         COMPUTE #'CELLS NEEDED     07/97 DBC 06100000         ALR   R9
,R1               ADD IT IN                  07/97 DBC 06110000NOKZ3390 LR    R8
,R1               SAVE #'CELLS FOR KEY AREA  07/97 DBC 061  20000         SPACE
1                                              07/97 DBC 06130000         SLR
R0,R0                                          07/97 DBC 06140000         SLR
R1,R1                                          07/97 DBC 06150000        +  IC
  R1,D3390F2          #'CELLS FOR CNT+GAP        07/97 DBC 06160000           IC
    R0,D3390F3          #'CELLS FOR GAP ONLY       07/97 DBC 06170000         SL
R   R1,R0               #'CELLS FOR CNT ONLY       07/97 DBC 06180000         AL
R   R9,R1               ADD IN TO GET #'CELLS      07/97 DBC 06190000*
                          NEEDED PER RECORD          07/97 DBC 06200000
ALR   R8,R1               ACCUMULATE #'NON-DATA-AREA 07/97 DBC 06210000*
                          CELLS PER RECORD           07/97 DBC 06220000
SPACE 1                                                07/97 DBC 06230000
  SLR   R15,R15                                        07/97 DBC 06240000
  ICM   R15,3,TRKCAP        #'BYTES/TRK                07/97 DBC 06250000
  SLR   R14,R14                                          07/97 DBC 06260000
    DR    R14,R7              #'CELLS/TRK                07/97 DBC 06270000
    SLR   R14,R14                                        07/97 DBC 06280000
    DR    R14,R9              R15 = #'BLKS/TRK             07/97 DBC 06290000*
                                R14 = #'CELLS RESIDUE      07/97 DBC 06300000
      LR    R9,R14              SAVE                       07/97 DBC 06310000
      SPACE 1                                              07/97 D  BC 06320000
        SLR   R14,R14             ASSUME NO USEFUL RESIDUE   07/97 DBC 06330000
        SR    R9,R8               DECR L'RESIDUE BY #'NON-   07/97 DBC 06340000*
                                  DATA-AREA CELLS PER RCD.   07/97 DBC 06350000*
                                    IS THE RESIDUE BIG ENOUGH  07/97 DBC 0636000
0*                                  TO ALLOW A DATA AREA?      07/97 DBC 0637000
0         BNP   GOTRESDU            NO, DONE HERE              07/97 DBC 0638000
0         SPACE   1                                              07/97 DBC 06390
000         LR    R1,R9               #'CELLS IN RESIDUE THAT    07/97 DBC 06400
000*                                  ARE AVAILABLE FOR A DATA   07/97 DBC 06410
000*                                    AREA                       07/97 DBC 064
20000         MR    R0,R7               CNVRT TO BYTES             07/97 DBC 064
30000         LR    R8,R1               SAVE                       07/97 DBC 064
40000RDUE3390 LR    R1,R8               GET TE  ST BLKSIZE           07/97 DBC 0
6450000         BAL   R14,CPA3390         CNVRT 2 DATA AREA CELL CNT 07/97 DBC 0
6460000         CR    R1,R9               WILL FIT INTO RESIDUE?     07/97 DBC 0
6470000         BNH   GRDU3390            YES, GOT IT!                 07/97 DBC
 06480000         BCT   R8,RDUE3390         NO, TRY NEXT SMALLER BSIZE 07/97 DBC
 06490000         SLR   R14,R14             RESIDUE NOT LARGE ENUF TO  07/97 DBC
 06500000*                                  BE USEFUL                  07/97   D
BC 06510000         B     GOTRESDU            DONE HERE                  07/97 D
BC 06520000GRDU3390 LR    R14,R8              SAVE MAX BLKSIZE THAT WILL 07/97 D
BC 06530000*                                  FIT INTO THE RESIDUE       07/97 D
BC 06540000            _          SPACE 3
       07/97 DBC 06550000*******************************************************
****** 07/97 DBC 06560000* R15 now contains the number of blocks (of the given s
ize) * 07/97 DBC 06570000*   that will fit on a track. R14 contains the largest
       * 07/97 DBC 06580000* additional block size that can fit on the same trac
k. I   * 07/97 DBC 06590000* can now display this information, then loop to comp
ute    * 07/97 DBC 06600000* the next set   of numbers.
         * 07/97 DBC 06610000***************************************************
********** 07/97 DBC 06620000         SPACE 1
           07/97 DBC 06630000GOTRESDU MVC   DSABUFF+TITR  SDU(5),=X'2020202120'
EDIT MASK              06640000         CVD   R14,DSAWORK         CNVRT RESIDUE
TO DECIMAL             06650000         ED    DSABUFF+TITRSDU-1(6),DSAWORK+5 CNV
RT TO EBCDIC           06660000         MVC   DSABUFF+TITBPT(5),=X'2020  202120'
 GET EDIT MASK 11/84 DBC 06670000         CVD   R15,DSAWORK         CNVRT BPT TO
 DECIMAL       11/84 DBC 06680000         ED    DSABUFF+TITBPT-1(6),DSAWORK+5 CN
VRT TO EBCDIC  11/84 DBC 06690000         SPACE 3
                           06700000         LA    R1,DSABUFF          POINT TO M
ESSAGE                     06710000         LA    R0,TITLEN           GET ITS LE
NGTH                       06720000         TPUT  (1),(0),R           SEND THE M
ESSAGE                       06730000         SPACE 3
                             06740000*******************************************
****************** 07/97 DBC 06750000* Several loops bottom out here. Loop until
 done.           * 07/97 DBC 0676000  0*****************************************
******************** 07/97 DBC 06770000         SPACE 1
                     07/97 DBC 06780000BLKSNEXT ICM   R4,7,9(R4)          NO, CH
AIN TO NEXT BLKSIZE; ANY?      06790000         BNZ     BLKSLOOP            YES,
 LOOP TO PROCESS                 06800000KEYLNEXT ICM   R5,7,9(R5)          CHAI
N TO NEXT KEYLEN; ANY?           06810000         BNZ   KEYLLOOP            YES,
 LOOP TO PROCESS                 06820000         DROP  R6                    DO
NE W/CONSTANT BASE       07/97 DBC 06830000DEVTNEXT ICM   R3,7,9(R3)          NO
, CHAIN TO NEXT DEVICE TYPE; ANY?  06840000         BNZ   DEVTLOOP            YE
S, LOOP TO PROCESS                 06850000         SPACE 3
                                     06860000***********************************
************************** 07/97 DBC 06870000* All done. return to caller.
                         * 07/97 DBC 06880000***********************************
****************  ********** 07/97 DBC 06890000         SPACE 1
                             07/97 DBC 06900000         SR    R15,R15
  SET AOK RC                           06910000EXITGOOD #EXIT ((R14,R12)),RC=(R1
5) RETURN TO TMP               +         06920000         EJECT ,
                                 07/97 DBC 06930000*****************************
******************************** 07/97 DBC 06940000*
                               * 07/97 DBC 06950000* OLDBPT -- This routine comp
utes the number of blocks of   * 07/97 DBC 0  6960000* a given size that can fit
 on a track for non-cellular     * 07/97 DBC 06970000* dasd devices.
                                 * 07/97 DBC 06980000*
                                 * 07/97 DBC 06990000* It a  lso determines the
largest additional block that      * 07/97 DBC 07000000* can fit following the e
qual-size blocks.                  * 07/97 DBC 07010000*
                                   * 07/97 DBC 07020000* INPUTS:
                                     * 07/97 DBC 07030000*   - R6 points to the
CONSTANT entry for the dasd device   * 07/97 DBC 07040000*     in question.
                                     * 07/97 DBC 07050000*   - R9 contains a dat
a area le  ngth (BLKSIZE).             * 07/97 DBC 07060000*   - R10 contains a
key length or equals 0.                * 07/97 DBC 07070000*   - R14 points back
 to my caller.                         * 07/97 DBC 07080000*
                                         * 07/97 DBC 07090000* RETURN 0(,R14):
                                         * 07/97 DBC 07100000*   - R1 contains t
he computed blocks/track number.         * 07/97 DBC 07110000*   - R0 contains t
he usable track residue.                   * 07/97 DBC 07120000*   - All other r
egisters are restored.                     * 07/97 DBC 07130000*
                                           * 07/97 DBC 07140000*****************
******************************************** 07/97 DBC   07150000         SPACE
1                                              07/97 DBC 07160000         USING
CONSTANT,R6         DCL DASD CONSTANTS BASE    07/97 DBC 07170000OLDBPT   STM
R14,R2,SAVOBPT      SAVE REGISTERS             07/97 DBC 07180000           SR
  R2,R2               CLEAR FOR "IC"'S           07/97 DBC 07190000         SPAC
E 1                                              07/97 DBC 07200000*************
************************************************ 07/97 DBC 07210000* Setup R0 fo
r co  mputing the not-last-block size, and R1    * 07/97 DBC 07220000* for compu
ting the last-block size.                        * 07/97 DBC 07230000***********
************************************************** 07/97 DBC 07240000         LA
    R1,0(R10,R9)          GET KEYLEN+BLKSIZE         07/97 DBC 07250000
LR    R0,R1               COPY FOR NOT-LAST-BLOCK              07260000
SPACE 1                                              07/97 DBC 07270000*********
**********************************  ****************** 07/97 DBC 07280000* If ap
propriate, apply a tolerance factor to all           * 07/97 DBC 07290000* not-l
ast-blocks.                                          * 07/97 DBC 07300000*******
*************************************************+ ***** 07/97 DBC 07310000
    TM    FLAG,DVCFTOL        APPLY TOLERANCE F  ACTOR TO ^LAST-BLK? 07320000
      BZ    NTOLF               NO, SKIP                             07330000
      MH    R0,TOLER            YES, DO SO                           07340000
      SRL   R0,9                DROP THE FRACTION                      07350000N
TOLF    DS    0H                                             07/97 DBC 07360000
        SPACE 1                                              07/97 DBC 07370000*
************************************************************ 07/97 DBC 073800  0
0* If the blocks are unkeyed, then apply an underhead to     * 07/97 DBC 0739000
0* both not-last-blocks and last-blocks.                     * 07/97 DBC 0740000
0************************************************************* 07/97 DBC 0741000
0         LT  R   R10,R10             ANY KEY?                   07/97 DBC 07420
000         BNZ   GOTOVNK             YES, SKIP KEY-UNDERHEAD    07/97 DBC 07430
000         IC    R2,ROVRHD+2         NO, GET UNDERHEAD VALUE    07/97 DBC 07440
000         SR    R0,R2                 ADJUST NOT-LAST-BLOCK      07/97 DBC 074
50000         SR    R1,R2               ADJUST LAST-BLOCK          07/97 DBC 074
60000GOTOVNK  DS    0H                                             07/97 DBC 074
70000         SPACE 1                                                07/97 DBC 0
7480000************************************************************* 07/97 DBC 0
7490000* Apply possibly differing overheads to not-last-blocks and * 07/97 DBC 0
7500000* last-blocks.                                                * 07/97 DBC
 07510000************************************************************* 07/97 DBC
 07520000         IC    R2,ROVRHD           ASSUME NOT 2305            07/97 DBC
 07530000         TM    FLAG,DVC2BOV        OVERHEAD IS 2 BYTES?
   07540000         BZ    GOTNLB              NO, GOT NOT-LAST-BLOCK OVERHEAD
   07550000         ICM   R2,3,ROVRHD         GET ANY-BLOCK-OVERHEAD     07/97 D
BC 07560000GOTNLB   AR    R0,R2               ADD NOT-LAST-BLOCK OHEAD   07/97 D
BC 0757  0000         SPACE 1                                              07/97
 DBC 07580000         TM    FLAG,DVC2BOV        2305, ETC.?
     07590000         BO    GOTLB               YES, GOT ANY-BLOCK-OVERHEAD
     07600000           IC    R2,ROVRHD+1         NO, GET LAST-BLOCK OHEAD   07/
97 DBC 07610000GOTLB    AR    R1,R2               GET LAST-BLOCK LENGTH      07/
97 DBC 07620000         SPACE 1                                              07/
97 DBC 07630000**********************  *************************************** 0
7/97 DBC 07640000* Compute the number of equal-size blocks that can fit on   * 0
7/97 DBC 07650000* a track. Also, figure out the number of bytes remaining   * 0
7/97 DBC 07660000* following those blocks.                                     *
 07/97 DBC 07670000*************************************************************
 07/97 DBC 07680000         SR    R15,R15
 07/97 DBC 07690000         ICM   R15,3,TRKCAP        GET L'TRACK  +
   11/84 DBC 07700000         SR    R14,R14
     07/97 DBC 07710000         DR    R14,R0              GET NOT-LAST-BLOCK COU
NT   07/97 DBC 07720000         CR    R14,R1              ROOM FOR LAST BLOCK?
               07730000         BNL   OLDADD1             YES, GO ADD ONE
       07/97 DBC 07740000         ALR   R14,R0              ADJUST L'RESIDUE TO
-      07/97 DBC 07750000         SLR   R14,R1               ACCOUNT FOR THE -
       07/97 DBC 07760000*                                    SHORTNESS OF THE L
AST -  07/97 DB  C 07770000*                                     BLOCK.
         07/97 DBC 07780000         B     OLDEQULZ            PROCEED
         07/97 DBC 07790000         SPACE 1
         07/97 DBC 07800000OLD  ADD1  LA    R15,1(,R15)         COUNT SHORT LAST
 BLOCK     07/97 DBC 07810000*                                  (SHORT DUE ONLY
TO         07/97 DBC 07820000*                                  OVERHEAD DIFFERE
NCES)      07/97 DBC 07830000         SR    R  14,R1              REMOVE FROM RE
SIDUE        07/97 DBC 07840000OLDEQULZ DS    0H
             07/97 DBC 07850000         SPACE 1
             11/84 DBC 07860000*****************************  ******************
************** 07/97 DBC 07870000* Now, compute the BLKSIZE (DL) of the largest
additional   * 07/97 DBC 07880000* block that can still fit into the track's res
idue. The    * 07/97 DBC 07890000* formula is: R14+(R1-R0)-(R1-R9), which r  edu
ces to         * 07/97 DBC 07900000* R14-(R0-R9). Where:
               * 07/97 DBC 07910000*    EO-TRK----------------------------------
-----------+   * 07/97 DBC 07920000*    R14-------------------------------------
-----+++++  +|   * 07/97 DBC 07930000*    R1------------------------------------
+++++++|||||||   * 07/97 DBC 07940000*    R0---------+++++++++++
||||||||||||||   * 07/97 DBC 07950000*               |||||||||||
||||||||||||||   * 07/97   DBC 07960000*               -----------
  ||||||||||||||   * 07/97 DBC 07970000*    R9-----------+++
  ||||||||||||||   * 07/97 DBC 07980000*    R10--------++|||
  ||||||||||||||   * 07/97 DBC 07990000*      SO-TRK----+|||||
    ||||||||||||||   * 07/97 DBC 08000000*              |||---
    |||||||------|   * 07/97 DBC 08010000*              |--
    -------      |   * 07/97 DBC 08020000*    TRACK--->   |KKDDD------KKDDD-----
- ... KKDDD--______|   * 07/97 DBC 08030000*
      -------          * 07/97 DBC 08040000*
      |||||||          * 07/97 DBC 08050000*    LAST-BLK--------------  --------
--------+++++++          * 07/97 DBC 08060000***********************************
************************** 07/97 DBC 08070000         SR    R14,R0
DECR RESIDUE BY THE KEY -  07/97 DBC 08080000         AR    R14,R9
 AND + OVERHEAD OF AN -      07/97 DBC 08090000*
      ADDITIONAL NLB. THIS -   07/97 DBC 08100000*
       YEALDS THE AMOUNT OF -  07/97 DBC 08110000*
        THE RESIDUE THAT IS -  07/97 DBC 08120000*
         AVAILABLE   FOR USER -  07/97 DBC 08130000*
            DATA. IS THERE -     07/97 DBC 08140000*
             ENOUGH SPACE -      07/97 DBC 08150000*
              LEFT?                07/97 DBC 08160000         BNM   OLDRET
        YES, NEARLY DONE           07/97 DBC 08170000         SR    R14,R14
        NO, CLEAR RESIDUE                    08180000         SPACE 1
                                   07/97 DBC 081  90000*************************
************************************ 07/97 DBC 08200000* Done. Return to caller
w/values in R0 and R1.             * 07/97 DBC 08210000*************************
************************************ 07/97 DBC 08220000OLDRET     ST    R15,SAVO
BPT+12      RETURN BPT VIA R1          07/97 DBC 08230000         ST    R14,SAVO
BPT+8       RETURN RESIDUE VIA R0      07/97 DBC 08240000         LM    R14,R2,S
AVOBPT      RESTORE REGISTERS          07/97 DBC 08250000         BR    R14
              RETURN TO CALLER           07/97 DBC 08260000         DROP  R6
              DONE W/CONSTANT BASE       07/97 DBC 08270000         EJECT ,
                                         07/97 DBC 08280000*********************
*************  *************************** 07/97 DBC 08290000*
                                         * 07/97 DBC 08300000* CPA3390 -- This r
outine computes the number of cells      * 07/97 DBC 08310000* needed (on a 3390
 or newer DASD) per data are  a or key     * 07/97 DBC 08320000* area. This incl
udes all area overheads as well as the gap * 07/97 DBC 08330000* preceeding the
area.                                      * 07/97 DBC 08340000*
                                             * 07/97 DBC 08350000* The computati
on does not include the number of cells      * 07/97 DBC 08360000* needed for a
standard count field.                        * 07/97 DBC 08370000*
                                             * 07/97 DBC 0  8380000* This routin
e assumes that the gap and overhead            * 07/97 DBC 08390000* calculation
s required for key and data areas are the      * 07/97 DBC 08400000* same.
                                               * 07/97 DBC 08410000*
                                                 * 07/97 DBC 08420000* INPUTS:
                                                 * 07/97 DBC 08430000*   - R1 co
ntains the area's size, in bytes.                * 07/97 DBC 08440000*   - R6 po
ints to   the current #-table entry, mapped by the * 07/97 DBC 08450000*     CON
STANT dsect.                                       * 07/97 DBC 08460000*   - R14
 points back to my caller.                         * 07/97 DBC 08470000*
                       +                             * 07/97 DBC 08480000* RETUR
N 0(,R14):                                             * 07/97 DBC 08490000*   -
 R1 contains the number of cells required for an area  * 07/97 DBC 08500000*
 containing the given number of bytes.                 * 07/97 DBC 08510000*   -
 All other registers are restored.                       * 07/97 DBC 08520000*
                                                         * 07/97 DBC 08530000***
********************************************************** 07/97 DBC 08540000
      SPACE 1                                                07/97 DBC 08550000C
PA3390  STM   R14,R7,SAVC3390     SAVE REGISTERS             07/97 DBC 08560000
        LR    R15,R1              COPY #'DATA (OR KEY) BYTES 07/97 DBC 08570000
        LR    R7,R6               COPY @'CONSTANTS           07/97   DBC 0858000
0         USING CONSTANT,R7         DCL ITS BASE               07/97 DBC 0859000
0         SPACE 1                                              07/97 DBC 0860000
0         SLR   R6,R6                                          07/97 DBC 0861000
0           IC    R6,D3390F6          ECC FIELD WIDTH            07/97 DBC 08620
000         ALR   R15,R6              ACCUMULATE                 07/97 DBC 08630
000         SLR   R5,R5                                          07/97 DBC 08640
000         IC      R5,D3390F5          W/2'ECC PROTECTED AREA     07/97 DBC 086
50000         ALR   R5,R5               W'ECC PROTECTED AREA       07/97 DBC 086
60000         ALR   R15,R5              PREPARE TO -               07/97 DBC 086
70000         BCTR  R15,0                  ROUND UP                  07/97 DBC 0
8680000         SLR   R14,R14                                        07/97 DBC 0
8690000         DR    R14,R5              COMPUTE ECC'S RUNNING      07/97 DBC 0
8700000*                                  OVER  HEAD                   07/97 DBC
 08710000         SPACE 1                                              07/97 DBC
 08720000         SLR   R4,R4                                          07/97 DBC
 08730000         IC    R4,D3390F4          ECC FIELD WIDTH              07/97 D
BC 08740000         MR    R14,R4              ADJUST THE OVERHEAD        07/97 D
BC 08750000         SPACE 1                                              07/97 D
BC 08760000         ALR   R15,R6              ADD IN ECC FIXED OVERHEAD  07/  97
 DBC 08770000         SPACE 1                                              07/97
 DBC 08780000         AL    R15,SAVC3390+12     ADD OVERHEAD TO DATA LEN   07/97
 DBC 08790000         SPACE 1                                              07/97
 DBC 088000  00         SLR   R1,R1                                          07/
97 DBC 08810000         IC    R1,DCELLSIZ         DEVICE'S CELL SIZE         07/
97 DBC 08820000         ALR   R15,R1              PREPARE TO -               07/
97 DBC 08830000         BC  TR  R15,0                ROUND UP                  0
7/97 DBC 08840000         SLR   R14,R14                                        0
7/97 DBC 08850000         DR    R14,R1              CONVERT BYTE LENGTH TO A   0
7/97 DBC 08860000*                       +            CELL COUNT.
 07/97 DBC 08870000         SPACE 1
   07/97 DBC 08880000         SLR   R3,R3
   07/97 DBC 08890000         IC    R3,D3390F3          #'CELLS/GAP
   07/97 DBC 08900000         ALR   R15,R3                ACCUMULATE
     07/97 DBC 08910000         SPACE 1
     07/97 DBC 08920000         ST    R15,SAVC3390+12     PASS TO CALLER VIA R1
     07/97 DBC 08930000         LM    R14,R7,SAVC3390     RESTORE REG  ISTERS
       07/97 DBC 08940000         DROP  R7                  DONE W/CONSTANT BASE
       07/97 DBC 08950000         BR    R14                 RETURN TO CALLER
       07/97 DBC 08960000         #DROP                     RELEASE PROGRAM BASE
                   08970000         DROP  ,                   RELEASE ALL BASES
                   08980000         EJECT
                   08990000DEVTCHK  #ENTER ESDTYPE=NONE,SAVTYPE=RENT DEVT OPND C
HK RTNE              09000000         L     R12,=A(BLKSPTRK)    ADJUST BASE ADDR
ESS                  09010000         USING BLKSPTRK,R12        REDECLRAE THE PG
M BASE               09020000         LM    R2,R3,0(R1)         POINT TO PDE AND
 DSA                 09030000           LR    R11,R3              LOAD NORMAL DS
A BASE                 09040000         USING DSA,R11             DECLARE DSA BA
SE                     09050000         L     R4,0(,R2)           NO, POINT TO S
TRING                  09060000         CLI   0(R  4),C'*'          OMITTED VALU
E?                       09070000         BNE   DNTSTAR             NO, PROCEED
                         09080000DSTAR    MVI   0(R2),X'FF'         YES, REMEMBE
R                        09090000         B     EXITOK                RETURN TO
PARSE                      09100000DNTSTAR  LH    R5,4(,R2)           GET ITS LE
NGTH                       09110000         BCTR  R5,0                CNVRT TO M
ACHINE LENGTH              09120000         TM    6(R2),X'80'         OMITTED?
                             09130000         BNO   DSTAR               YES, SKI
P                            09140000         LTR   R5,R5               NO, NULL
?                            09150000         BM    DSTAR               YES, SKI
P                              09160000         SR    R15,R15             NO, CL
EAR FOR TABLE SCAN             09170000         LA    R1,LKUPDVTB-LKUPDNME-1 POI
NT TO TABLE                    09180000LKUPLOOP LA    R1,LKUPDNME+1(R15,R1) POIN
T TO NEXT ENTRY                  09190000         CLI   0(R1),X'FF'         END
OF TABLE?                        09200000         BE    LKUPFAIL            YES,
 BAD STRING                      09210000         IC    R15,LKUPDNLN(,R1)   NO,
GET ENTRY'S LENGTH               09220000           CR    R15,R5              RI
GHT ENTRY?                         09230000         BNE   LKUPLOOP            NO
, KEEP LOOPING                     09240000         CLC   0(*-*,R4),LKUPDNME(R1)
 (EXECUTED INSTRUCTION)            09250000         EX    R+ 15,*-6
MAYBE, CHECK AGAIN                   09260000         BNE     LKUPLOOP
  NO, KEEP LOOPING                     09270000         MVC   0(1,R2),LKUPDNDX(R
1) YES, SAVE THE DEVICE TYPE           09280000         B     EXITOK
  GO RETURN TO PARSE                   09290000         DROP  ,
    RELEASE BASES                        09300000         EJECT
                                         09310000BLKSCHK  #ENTER ESDTYPE=NONE,SA
VTYPE=RENT BLKSIZE CHECKING ROUTINE      09320000         L     R12,=A(BLKSPTRK)
    RES  ET THE BASE REGISTER              09330000         USING BLKSPTRK,R12
      REDECLARE IT                         09340000         LM    R2,R3,0(R1)
      POINT TO PDE AND DSA                 09350000         LR    R11,R3
      LOAD DSA BASE                          09360000         USING DSA,R11
        DECLARE DSA BASE                     09370000         L     R4,0(,R2)
        POINT TO BLKSIZE STRING              09380000         CLI   0(R4),C'*'
        ASTERISK?                              09390000         BNE   BNTSTAR
          NO, PROCEED                          09400000BSTAR    MVC   0(4,R2),=4
C'*'      YES, SIGNEL OPND OMITTED   11/84 DBC 09410000         B     EXITOK
          RETURN TO PARSE                      09420  000BNTSTAR  LH    R5,4(,R2
)           GET ITS LENGTH                       09430000         BCTR  R5,0
            CONVERT TO MACHINE LENGTH            09440000         TM    6(R2),X'
80'         OMITTED?                             09450000         B  NO   BSTAR
              YES, GO REMEMBER                     09460000         LTR   R5,R5
              NO, NULL?                            09470000         BM    BSTAR
              YES, GO REMEMBER                     09480000         SPACE 1
                                           11/84 DBC 09490000         LA    R14,
1               NO, ASSUME BLKSIZE         11/84 DBC 09500000         CLI   0(R4
),C'#'          BLOCK COUNT GIVEN?         11/84 DBC 09510000         BNE   BNTC
NT              N  O, PROCEED                11/84 DBC 09520000         SR    R5
,R14              YES, DECR L'DIGITS; NULL?  11/84 DBC 09530000         BM    BS
TAR               YES, TREAT AS B(0)         11/84 DBC 09540000         AR    R4
,R14              NO, --> DIGITS               11/84 DBC 09550000         LNR
R14,R14             SET "BLOCK COUNT" SIGNAL   11/84 DBC 09560000BNTCNT   TM
0(R4),C'0'          VALID DIGIT?               11/84 DBC 09570000         BNO
EXITFAIL            NO, ERROR                    11/84 DBC 09580000         SPAC
E 1                                              11/84 DBC 09590000         PACK
  DSAWORK(8),0(*-*,R4) (EXECUTED INSTRUCTION)              09600000         EX
  R5,*-6              YES, PACK THE STRING                 096  10000         CV
B   R15,DSAWORK         CONVERT TO BINARY                    09620000         C
    R15,=X'0000FFFF'    CHECK FOR MAX VALUE        11/84 DBC 09630000         BH
    BLKS2LRG            ERROR                                09640000        +
MR    R14,R14             OK, IF BLK_CNT; THEN MAKE  11/84 DBC 09650000*
                            NEGATIVE                   11/84 DBC 09660000
  ST    R15,0(,R2)          RETURN THE CONVERTED VALUE           09670000
  B     EXITOK              GO RETURN TO PARSE                   09680000
  DROP  ,                     RELEASE BASES                        09690000
    EJECT                                                          09700000KEYLC
HK  #ENTER ESDTYPE=NONE,SAVTYPE=RENT KEYLEN VALIDITY CHECK         09710000
    L     R12,=A(BLKSPTRK  )    RESET BASE ADDRESS                   09720000
      USING BLKSPTRK,R12        REDECLARE IT                         09730000
      LM    R2,R3,0(R1)         POINT TO PDE AND DSA                 09740000
      LR    R11,R3              LOAD DSA   BASE                        09750000
        USING DSA,R11             DECLARE DSA BASE                     09760000
        L     R4,0(,R2)           POINT TO KEYLEN VALUE STRING         09770000
        CLI   0(R4),C'*'          IGNORE THIS?                           0978000
0         BNE   KNTSTAR             NO, PROCEED                          0979000
0         MVI   0(R2),X'FF'         YES, SIGNEL IT                       0980000
0         B     EXITOK              RETURN TO PARSE                        09810
000KNTSTAR  LH    R5,4(,R2)           GET ITS LENGTH                       09820
000         BCTR  R5,0                CONVERT TO MACHINE LENGTH            09830
000         PACK  DSAWORK(8),0(*-*,R4) (EXECUTED INSTRUCTION)              09840
000           EX    R5,*-6              PACK IT                              098
50000         CVB   R15,DSAWORK         CONVERT TO BINARY                    098
60000         C     R15,=A(255)         CHECK MAX VALUE                      098
70000         BH      KEYL2LRG            ERROR                                0
9880000         ST    R15,0(,R2)          OK, RETURN CONVERTED VALUE           0
9890000         B     EXITOK              GO RETURN TO PARSE                   0
9900000         DROP  ,                     RELEASE BASES
 09910000         EJECT
 09920000         USING BLKSPTRK,R12        DECLARE PROGRAM BASE
 09930000         USING DSA,R11             DECLAR  E DSA BASE
   09940000         SPACE 3
   09950000EXITFAIL LA    R15,8               ERROR RC
   09960000         B     EXIT
     09970000         SPACE 1
     09980000EXITOK   SR    R15,R15             SET AOK RC
     09990000EXIT     #EXIT ((R14,R12)),RC=(R15) RETURN TO PARSE
       10000000         SPACE 3
       10010000LKUPFAIL LA    R1,LKUPFMSG-1
       10020000         BAL   R2,TPUTERRM
       10030000            _          B     EXITFAIL
                     10040000         SPACE 1
                     10050000BLKS2LRG LA    R1,BLKS2MSG-1
                     10060000           BAL   R2,TPUTERRM
                       10070000         B     EXITFAIL
                       10080000         SPACE 1
                       10090000KEYL2LRG LA      R1,KEYL2MSG-1
                         10100000         BAL   R2,TPUTERRM
                         10110000         B     EXITFAIL
                         10120000         SPACE 3
                           10130000TPUTERRM LA    R15,DSABUFF         GET SINK S
CANNER                     10140000         LTR   R5,R5               NULL OPERA
ND?                        10150000         BM    OPNDNULL            YES,   SKI
P                            10160000         MVC   DSABUFF(*-*),0(R4)  (EXECUTE
D INSTRUCTION)               10170000         EX    R5,*-6              NO, MOVE
 OPND TO MSG                 10180000         ALR   R15,R5              ADVANCE
SINK SCANN  ER                 10190000OPNDNULL SR    R14,R14             CLEAR
                               10200000         IC    R14,0(,R1)          GET MS
G LENGTH                       10210000         MVC   1(*-*,R15),1(R1)    (EXECU
TED INSTRUCTION)                 10220000         EX    R14,*-6             MOVE
 MSG TO SINK                     10230000         LA    R0,2(R14,R15)       POIN
T PAST EO MSG                    10240000         LA    R1,DSABUFF          POIN
T TO START                       1025000  0         SR    R0,R1               GE
T MSG LENGTH                       10260000         TPUT  (1),(0),R           SE
ND THE MSG                         10270000         BR    R2                  RE
TURN TO CALLER                     10280000         DRO  P  ,
RELEASE BASES                        10290000         EJECT
                                     10300000         PRINT NOGEN
                                     10310000         SPACE 3
                                       10320000PCL      IKJPARM DSECT=PDL
                                       10330000PDLDEVT  IKJIDENT 'DASD DEVICE TY
PE(S)',LIST,ASTERISK,UPPERCASE,       *10340000               FIRST=ANY,OTHER=AN
Y,PRO  MPT='DASD DEVICE TYPE(S)',       *10350000               MAXLNTH=10,VALID
CK=DEVTCHK,                             *10360000               HELP='2301 2302
2303 2305-1 2305-2 2311 2314 2319 2321 3*10370000               330 3340 3350 33
75 3380 3390 3995-11  1 3995-113 3995-151 *10380000               3995-153 OR 93
45. ENTER AN ASTERISK TO SKIP THIS FIELD.' 10390000PDLBLKSK IKJKEYWD
                                           10400000         IKJNAME 'BLKSIZE',SU
BFLD=PCLBLKS                       +         10410000PDLKEYLK IKJKEYWD
                                               10420000         IKJNAME 'KEYLEN'
,SUBFLD=PCLKEYL                                10430000PCLBLKS  IKJSUBF
                                               10440000PDLBLKS  IKJIDENT 'NUMBER
',LIST,ASTERISK,MAXLNTH=6,FIRST=ALPHANUM,     *1  0450000               OTHER=NU
MERIC,PROMPT='BLKSIZE',VALIDCK=BLKSCHK,         *10460000               HELP='A
PHYSICAL BLOCK LENGTH VALUE RANGING FROM 1 TO 65*10470000               535 OR A
 # FOLLOWED BY A BLOCK COUNT (E.G., #6). ENTER A*10480000                  0 TO
FIND THE MAXIMUM BLKSIZE. TO SKIP THIS FIELD, ENTE*10490000               R AN A
STERISK.'                                11/84 DBC 10500000PCLKEYL  IKJSUBF
                                                   10510000PDLKEYL  IKJIDENT '
NUMBER',LIST,ASTERISK,MAXLNTH=3,FIRST=NUMERIC,      *10520000               OTHE
R=NUMERIC,DEFAULT='0',VALIDCK=KEYLCHK,              *10530000               HELP
='A KEY LENGTH VALUE RANGING FROM 0 TO 255. TO SKIP *10540000               THIS
 FIELD, ENTER   AN ASTERISK.'                          10550000         IKJENDP
                                                       10560000         SPACE 3
                                                       10570000         PRINT ON
,GEN,NODATA                                              10580000         EJECT
,                                                        10590000***************
********************************************** 07/97 DBC 10600000* The following
 data is extracted from various incarnation  s * 07/97 DBC 10610000* of MVS's De
vice Characteristics Table. This table is      * 07/97 DBC 10620000* pointed to
by CVTZDTAB, indexed by UCBTBYT4, and mapped   * 07/97 DBC 10630000* by SYS1.MOD
GEN(IHADVCT). This table provides usable data  * 07/97 DBC   10640000* for all I
BM devices up to and including 3380s (but not    * 07/97 DBC 10650000* beyond 33
80s).                                            * 07/97 DBC 10660000***********
************************************************** 07/97 DBC 10670000
SPACE 1                                              07/97 DBC 10680000#
DS    0X                                             07/97 DBC 10690000
SPACE 1                                              07/97 DBC 10700000#2301
DS    0X                    2301 PARALLEL DRUM         07/97 DBC 10710000
  DC    X'5003,04,BA3535,0200,00'                      07/97 DBC 10720000
  SPACE 1                                              07/97 DBC 10730000#2302
  DS    0X                    2302 DISK STORAGE          07/97 DBC 10740000
    DC    X'1378,01,511414,0219,00'                      07/97 DBC 10750000
    SPACE 1                                              07/97 DBC 10760000#2303
    DS    0X                  2303 SER  IAL DRUM           07/97 DBC 10770000
      DC    X'131C,00,922626,0200,00'                      07/97 DBC 10780000
      SPACE 1                                              07/97 DBC 10790000#23
051   DS    0X                  2305-1 FIXED HEAD STO+ RAGE  07/97 DBC 10800000
        DC    X'38E8,09,027ACA,0200,00'                        07/97 DBC 1081000
0         SPACE 1                                              07/97 DBC 1082000
0#23052   DS    0X                  2305-2 FIXED HEAD STORAGE  07/97 DBC 1083000
0         DC    X'3A0A,09,01215B,0200,00'                      07/  97 DBC 10840
000         SPACE 1                                              07/97 DBC 10850
000#2311    DS    0X                  2311 DISK STORAGE DRIVE    07/97 DBC 10860
000         DC    X'0E29,01,511414,0219,00'                      07/97 DBC 10870
0  00         SPACE 1                                              07/97 DBC 108
80000#2314    DS    0X                  DIRECT ACCESS STORAGE      07/97 DBC 108
90000#2319    DS    0X                  DIRECT ACCESS STORAGE      07/97 DBC 109
00000         DC      X'1C7E,01,922D2D,0216,00'                      07/97 DBC 1
0910000         SPACE 1                                              07/97 DBC 1
0920000#2321    DS    0X                  2321 DATA CELL DRIVE       07/97 DBC 1
0930000         DC    X'07D0,03  ,641010,0219,00'                      07/97 DBC
 10940000         SPACE 1                                              07/97 DBC
 10950000#3330    DS    0X                  3330 DISK STORAGE          07/97 DBC
 10960000         DC    X'336D,01,BFBF38,0200,  00'                      07/97 D
BC 10970000         SPACE 1                                              07/97 D
BC 10980000#3340    DS    0X                  3340 DISK                  07/97 D
BC 10990000         DC    X'2157,01,F2F24B,0200,00'                        07/97
 DBC 11000000         SPACE 1                                              07/97
 DBC 11010000#3350    DS    0X                  3350 NON-REMOVABLE DISK    07/97
 DBC 11020000         DC    X'4B36,09,010B52,0200,00'                      0  7/
97 DBC 11030000         SPACE 1                                              07/
97 DBC 11040000#3375    DS    0X                  3375 NON-REMOVABLE DISK    07/
97 DBC 11050000         DC    X'8CA0,10,20,00E0,00BF,00'                     07/
97 DBC 1106  0000         SPACE 1                                              0
7/97 DBC 11070000#3380    DS    0X                  3380 NON-REMOVABLE DISK    0
7/97 DBC 11080000         DC    X'BB60,10,20,0100,010B,00'                     0
7/97 DBC 11090000           SPACE 3
 07/97 DBC 11100000*************************************************************
 07/97 DBC 11110000* Starting with 3390s, the track capacity formulas became   *
 07/97 DBC 11120000* so complex that MVS'  s Device Characteristics Table could
 * 07/97 DBC 11130000* no longer contain the necessary overheads and computation
 * 07/97 DBC 11140000* factors. Accordingly, the following data is based on
 * 07/97 DBC 11150000* other sources.
   * 07/97 DBC 11160000*********************************************************
**** 07/97 DBC 11170000         SPACE 1
     07/97 DBC 11180000#3995113 DS    0X                  3995-113 OPTI+ CAL STO
RAGE   07/97 DBC 11190000#3995153 DS    0X                  3995-153   OPTICAL S
TORAGE   07/97 DBC 11200000#3390    DS    0X                  3390 NON-REMOVABLE
 DISK    07/97 DBC 11210000         DC    X'E5A2,12,22,13,09,06,74,06'
         07/97 DBC 11220000         SPACE 1
           07/97 DBC 11230000#3995111 DS    0X                  3995-111 OPTICAL
 STORAGE   07/97 DBC 11240000#3995151 DS    0X                  3995-151 OPTICAL
 STORAGE   07/97 DBC 11250000         DC    X'D5A2,12,22,13,09,06,74,06'
           07/97 DB  C 11260000         SPACE 1
             07/97 DBC 11270000#9345    DS    0X                  9345 DISK
             07/97 DBC 11280000         DC    X'BC98,12,22,12,07,06,74,06'
             07/97 DBC 11290000           EJECT
                         11300000LKUPDVTB DC    AL1((#2301-#)/KDEVSIZE,3),C'2301
'                        11310000         DC    AL1((#2302-#)/KDEVSIZE,3),C'2302
'                        11320000         DC    A  L1((#2303-#)/KDEVSIZE,3),C'23
03'                        11330000         DC    AL1((#23051-#)/KDEVSIZE,5),C'2
305-1'                     11340000         DC    AL1((#23052-#)/KDEVSIZE,5),C'2
305-2'                     11350000         DC    AL1((#2311-#)/  KDEVSIZE,3),C'
2311'                        11360000         DC    AL1((#2314-#)/KDEVSIZE,3),C'
2314'                        11370000         DC    AL1((#2319-#)/KDEVSIZE,3),C'
2319'                        11380000         DC    AL1((#2321-#)/KDEVSIZE,3),C
 '2321'                        11390000         DC    AL1((#3330-#)/KDEVSIZE,3),
C'3330'                        11400000         DC    AL1((#3340-#)/KDEVSIZE,3),
C'3340'              07/97 DBC 11410000         DC    AL1((#3350-#)/KDEVSIZE,3),
C'3350'                          11420000         DC    AL1((#3375-#)/KDEVSIZE,3
),C'3375'              11/84 DBC 11430000         DC    AL1((#3380-#)/KDEVSIZE,3
),C'3380'              11/84 DBC 11440000         DC    AL1((#3390-#)/KDEVSIZE,3
),C'3390'              07/97   DBC 11450000         DC    AL1((#3995111-#)/KDEVS
IZE,7),C'3995-111'       07/97 DBC 11460000         DC    AL1((#3995113-#)/KDEVS
IZE,7),C'3995-113'       07/97 DBC 11470000         DC    AL1((#3995151-#)/KDEVS
IZE,7),C'3995-151'       07/97 DBC 11480000           DC    AL1((#3995153-#)/KDE
VSIZE,7),C'3995-153'       07/97 DBC 11490000         DC    AL1((#9345-#)/KDEVSI
ZE,3),C'9345'              07/97 DBC 11500000         DC    X'FF'
                                     11510000         SPACE   1
                                       11520000LKUPDNDX EQU   0
  DEVICE TYPE                          11530000LKUPDNLN EQU   LKUPDNDX+1
  DEVICE NAME LENGTH                   11540000LKUPDNME EQU   LKUPDNLN+1
    DEVICE NAME                          11550000         SPACE 3
                                         11560000         LTORG
                                         11570000         EJECT ,
         +                                 11580000COPYRIGH DC    C'BLKSPTRK - C
opyrigh  t (c) 1997 - David B. Cole' /97 DBC 11590000         SPACE 3
                                   07/97 DBC 11600000LEGALRF1 DC    C'For usage
restrictions, either type TSO HELP BLKSPTRK,*11610000               '
                                     07/97 DBC 11620000LEGALRF2 DC    C'or see t
his program''s source code.'         07/97 DBC 11630000         SPACE 3
                                     07/97 DBC 11640000TITLE    DS    0C
                                                 11650000TITDEVT  EQU   *-TITLE
                                                 11660000         DC    C'DEVICE
      KEYLEN'                                    11670000TITKEYL  EQU   *-TITLE-
3                                                116  80000         DC    C'  BL
KSIZE'                                             11690000TITBLKS  EQU   *-TITL
E-5                                                11700000         DC    C'  BL
OCKS/TRACK'                                        11710000TITBPT     EQU   *-TI
TLE-5                                                11720000         DC    C'
RESIDUE'                                             11730000TITRSDU  EQU   *-TI
TLE-5                                                11740000TITLEN   EQU   *-TI
TL  E                                                  11750000         SPACE 3
                                                       11760000         DC    AL
1(L'LKUPFMSG-1)                                        11770000LKUPFMSG DC    C'
 - NOT A RECOGNIZ  ABLE DASD DEVICE TYPE +'              11780000         SPACE
3                                                        11790000         DC
AL1(L'BLKS2MSG-1)                                        11800000BLKS2MSG DC
C' - VALUE TOO LARGE FOR A BLKSI  ZE OR A BLOCK COUNT. MAX*11810000
   ALLOWED IS 65767 +'                           11/84 DBC 11820000         SPAC
E 3                                                        11830000         DC
  AL1(L'KEYL2MSG-1)                                          11840000KEYL2MSG DC
    C' - VALUE TOO LARGE FOR A KEYLEN. MAX ALLOWED IS 255 +' 11850000         SP
ACE 3                                                        11860000         DC
    AL1(L'PARSFMSG-1)                                        1  1870000PARSFMSG
DC    C' - PARSE ERROR CODE'                                   11880000
SPACE 3                                                        11890000
END   BLKSPTRK                                                 11900000./ ADD
NAME=EXPORT   0100-99126-99126-1257-00016-00016-00000-DBCOLE2            //XPORT
BPT JOB (CSW,UPS),'540-456-8536',CLASS=A,MSGCLASS=D,                     //
        MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439                            //*
                                                                           //CLE
ANUP EXEC PGM=IEFBR14                                                      //SCR
ATCH  DD  DSN=DBCOLE.EXPORT.BLKSPTRK.XMIT,                                 //
          UNIT=SYSALLDA,SPA+ CE=(TRK,0),DISP=(MOD,DELETE)                    //*
                                                                               /
/TRANSMIT EXEC PGM=IKJEFT01                                                    /
/SYSTSPRT DD  SYSOUT=*                                                         /
/TEST     DD  DSN=DBCOLE.EXPORT.BLKSPTRK  ,DISP=SHR
 //MESSAGE  DD  DSN=DBCOLE.EXPORT.BLKSPTRK(README),DISP=SHR
 //SYSTSIN  DD  *
 XMIT BLKSPTRK.USER +
        DSNAME('DBCOLE.EXPORT.BLKSPTRK') +
        MSGDDNAME(MESSAGE) +
        OUTDSNAME('DBCOLE.EXPORT.BLKSPTRK.XMIT')
     ./ ADD NAME=README   0102-99126-99126-1256-00080-00074-00000-DBCOLE2
     You are reading DBCOLE.EXPORT.BLKSPTRK(README).
 
 
       BLKSPTRK is a TSO command processor that computes DASD track capacities
       and residues for any given BLKSIZE and/or KEYLEN for a large number of
       IBM DASD devi  ces. (Yeah, I know "DASD devices" is redundant. Sorry.)
 
         The BLKSPTRK.ZIP file contains the following files:
 
             - BLKSPTRK.ALC is the assembler source code for the program.
 
             - TSO-HELP.TXT is a TSO help file for   the program. It should be
                 copied into your local version of the SYS1.HELP file.
 
               - JCL.TXT is sample JCL for assembling and link ed  iting the pro
gram
               All of the files are encoded in ASCII. When uploading them to you
r              mainframe, ASCII-to-EBCDIC translation should be enabled.
 
                 Assembling BLKSPTRK will require a macro library available from
 Cole            Software's web site (www.colesoft.com). The file there is named
                   MACROS.ZIP. You will have to obtain and install these macros
before you         will be able to complete the installation of BLKSPTRK.
 
                   To install   BLKSPTRK, do the following:
 
                       - Obtain and install Cole Software's macro library (MACRO
S.ZIP).                                      +
                         - Use WINZIP or PK  UNZIP (or whatever) to decompress a
nd extract the               the BLKSPTRK.ALC, TSO-HELP.TXT, and JCL.TXT files f
rom BLKSPTRK.ZIP.
                           - Upload the three files to you  r mainframe. Make su
re that                        ASCII-to-EBCDIC translation is turned on.
 
                             - Upload the files to a library whose DCB at  tribu
tes are RECFM=FB,                LRECL=80, and BLKSIZE=n*80.
 
                               - !!! READ THE HELP MEMBER FOR COPYRIGHT INFORMAT
ION, USA  GE                       RESTRICTIONS, AND CONTACT INFORMATION (not to
 mention program usage             instructions too).
 
                                   - Copy the HELP member to a suitable TSO HELP
 library (such as                    SYS1.HELP). Rename it to BLKSPTRK, and give
 it an alias of BPT.
                                   - C  heck out the JCL member for sample JCL t
o assemble and linkedit                the BLKSPTRK program.
 
                                     - Assemble the B  LKSPTRK member using both
 system macros and private               macros available from Cole Software. Sp
ecify PARM=RENT for the                  assembly.
 
                                         - Linkedit the BLKSPTRK program into a
suitable TSO load library.                 Specify PARM=RENT (as well as other t
ypical parameters). Assign BPT             as an alias.
 
                                           - Try it out. Examples:
                                                 BPT (3380 3390 9345) BLKSIZE(#1
 #2 #3 #200)                                       BPT (3380 3390 9345) BLKSIZE(
1 99999) KEYLEN(0 1 255)                           etc.
 
 
                                             CONTACT INFORMATION:
 
                                                   Name:                David B.
 Cole                                              Country:             USA
 
                                                   Telephone:  +          540-45
6-8536                                               FAX:                   540-
456-6658                                               E-mail:              dbco
le@cfw.com                                             Website:             www.
colesoft.com
                                                         Snail Mail:          Co
le Software                                                                   73
6 Fox Hollow Road                                                             Af
ton, VA 229  20
USA
 
 
 
 
                                                           ./ ADD NAME=TSOHELP
0100-99126-99126-0832-00195-00195-00000-DBCOLE6            )F FUNCTION
                                                   00010000  The BLKSPTRK comman
d calculates direct access storage device track    00020  000  capacities. For a
 given list of device types, this command will       00030000  display exactly h
ow many blocks of a given size (with or without      00040000  keys) will fit on
 each track.                                         00050000
                                                       00060000  This command al
so computes the usable track residue showing the       00070000  largest block t
hat will still fit at the end of a track that has been 00080000  filled with blo
cks al  l of the given size.                             00090000  This program
is copyrighted (c) 1997 by David B. Cole.                00091000
                                                         00092000
                                                           00092100  LEGAL INFOR
MATION:                                                    00092200
                                                           00092300      This pr
ogram is copyrighted (c) 1997 by Dav  id B. Cole.            00092400
                                                             00092500      This
program is distributed freely and may be reproduced and      00092600      redis
tributed without restriction other than:                       00092700        -
 This copyright and usage/warranty/liability restriction       00092800
 statement ("Legal Statement") may not be modified or removed. 00092900        -
 A similar Legal Statement located in this program's source    000  93000
   code also may not be removed.                                 00094000
 - This Online Help File must be installed in a suitable "help   00095000
   library" (such as SYS1.HELP) so that users may see both the   00095100
 +   Legal Statement as well as usage instruction.                 00095200
                                                                     00095300
   This program is distributed without warranty of any kind,         00095400
   including (without limitation) warranties of merchantability and  00095500
   of fitness   for a particular purpose. It is up to the user to make 00095600
     his own determination of the usefulness of this program in his    00095700
     own system.                                                       00095800
                                                                         0009590
0      The user agrees not to hold me (David B. Cole) liable for any     0009600
0      damage whatsoever, and the user agrees to indemnify me against    0009700
0      third parties for any action arising   from the user's use,         00098
000      modification, and/or redistribution of this program.              00099
000                                                                        00099
100      This program may be modified freely so long as all   modifications  000
99200      are clearly marked both internally and externally to distinguish  000
99300      them from the distributed code and functionallity.                000
99400                                                                          0
0099500      As a courtesy, please notify me if you discover any bugs or if    0
0099600      you need or have made any code changes. (I of of course do not    0
0099700      guarantee either that I will or that I will not make any future   0
0099800        changes or corrections.)
 00099900
 00100000      My contact information as of JUL97 is:
 00100100
   00100200          Name:                David B. Cole
   00100300          Country:             USA
   00100400          Telephone:             540-456-8536
     00100500          FAX:                 540-456-6658
     00100600          E-mail:              davidbcole@aol.com
     00100700          Website:             www.coleso  ft.com
       00100800
       00100900          Snail Mail:          Cole Software
       00101000                               736 Fox Hollow Road
         00101100                               Afton, VA 22920
         00101200                               USA
         00101300
           00101400)X SYNTAX
           00101500             BLKSPTRK (devtype devtype ...)
           00101600                      BLKSIZE(<size or #count> <size or #coun
t> ...)    00101700                                    KEYLEN(length length ...)
                         00101800  Alias    - BPT
                         00101900  Default  - BLKSPTRK BLKSIZE(#1) KEYLEN(0)
                         00102000    Required - at least one devtype
                           00103000
                           00104000  Note     - Lists of values may be given for
 both the devtype,         00105000             B  LKSIZE, and KEYLEN operands.
When lists are given,        00106000             BLKSPTRK will produce a matrix
 of all value combinations.  00107000             The size of the report will be
 the product of the number   00108000             of values give  n in each list
. Example:                     00109000
                               00110000                 BPT (2314 3380 9345) BLK
SIZE(1 99999 #2) KEY(0 1)      00120000
                                 00130000             This causes BLKSPTRK to pr
oduct an 18 line report.         00140000
                                 00150000)O OPERANDS
                                   00160000))devtype -
                                   00170000         This operand is required. It
 must contain a list of one or     00180000         more direct access storage d
evice types. (e.g. 3330, 2305  -2,   00190000         etc.).  If more than one d
evice type is given, then the list   00200000         must be enclosed within pa
rentheses. Currently (JUL97) the     00210000         following device types are
 recognized:                         0022000  0               2301     (parallel
 drum)                                 00230000               2302     (disk)
                                       00240000               2303     (serial d
rum)                                   00250000                 2305-1   (drum,
2 logical tracks per physical track)     00260000               2305-2   (drum,
1 logical track  per physical track)     00270000               2311     (remova
ble disk)                                00280000               2314     (  remo
vable disk)                                00290000               2319     (same
 as 2314)                                  00300000               2321     (data
 cell)                                     00310000               3330     (remo
vable dis  k)                                00320000               3340     (di
sk)                                          00330000               3350     (di
sk)                                          00340000               3375     (di
sk)                                            00350000               3380     (
disk)                                          00360000               3390     (
disk)                                          00370000               3995-111 (
removable optical disk - CD-ROM)       +         00380000               3995-113
 (removable optical disk - CD-ROM)                 00390000               3995-1
51 (removable optical disk - CD-ROM)               00400000               3995-1
53 (removable optical disk - CD-ROM)               00410000               9345
   (rack-mounted disk)                             0  0420000
                                                     00430000         Notes:
                                                     00440000
                                                     00450000             - In J
UL97 I extensively verified program output against     00460000             publ
ished track capacity tables for the following devices: 00470000
2305-1 2305-2 3330 3350 3380 3390 and 9345.            00480000             The
pr  ogram output matched the published data for all      00490000             te
sted devices except the 2305-1 drum.                     00500000
                                                         00510000           - Fo
r 2305-1 drums, t  he BLKSPTRK program disagreed with      00520000
the published information relating to the maximum size     00530000
blocks that can fit n times per track for the following    00540000
values of "n":                                               00550000
      #5 #7 #8 #15 #18 #21 #23 #24 #27 #52 and #36.          00560000
  In each case the reported maximum blksize was one byte     00570000
  greater than the published maximum blksize.                  00580000
                                                               00590000
    This descrepancy did not occur for any other tested DASD,  00600000
    and in particular it did not occur for 2305-2 drums!         00610000
                                                                 00620000
      It is possible that for the 2305-1 drum, the computation   00630000
      factors and parameters used by BLKSPTRK might be           00640000
        incorrect; however, it is also possible that the published 00650000
        tables themselves are wrong. But at this point (JUL97) it  00660000
        is both too late and not worth it to double check those    00670000
        fact  ors.                                                   00680000
                                                                     00690000
          For what it's worth, the published capacity tables were    00700000
          found in GA26-158  9-3: "Reference Manual for IBM 2835       00710000
            Storage Control and IBM 2305 Fixed Head Storage Module".   00720000
            The computation parameters used by BLKSPTRK for the 2305-1 00730000
            are:                                                         0074000
0                 DASD Type:                 Non-cellular                0075000
0                 Track Capacity:            X'38E8' bytes               0076000
0                 Overhead (all blocks):     X'027A'     +                 00770
000                 Unkeyed Block Underhead:   X'CA'                         007
80000                 Tolerance Factor (all but  X'0200' (X'0200' has no     007
90000                 the last block):                   effect)             008
00000                                                                          0
0810000))BLKSIZE -                                                             0
0820000         This operand is optional. If omitted, then B(#1) is used. If   0
0830000         given, then it must specify a list of one or more physical     0
08400  00         block sizes and/or block counts.
 00850000
 00860000         A block size is given as a plain number (e.g., B(6160)). A
 00870000         bl  ock count is given preceded by a pound sign (e.g., B(#5)).
   00880000
   00890000         When a block count is given, BLKSPTRK displays the size of t
he 00900000         largest block t  hat fits the given number of times on a tra
ck.  00910000
     00920000         Notes:
     00930000
       00940000           - Giving a zero value is equivalent to giving #1. Thus
, all  00950000             of the following are equilivant: BLKSIZE(#1) BLKSIZE
(#0)   00960000             and BLKSIZE(0).
         00970000
         00980000           - Giving a block count that is higher than the most
number   00990000             of blocks that can fit on a track causes BLKSPTRK
  to       01000000             devolve to showing the maximum number of blocks
(1 byte in 01010000             size) that will fit per track. Thus, the followi
ng are     01020000             equivalent: BLKSIZE(#200) and BLKSIZE(1).
           0103  0000
             01040000           - Giving a block size that is larger than the la
rgest block  01050000             that can fit on a track causes BLKSPTRK to dev
olve to      01060000               showing the largest block that will fit. Thu
s, the         01070000             following are equivalent: BLKSIZE(99999) and
 BLKSIZE(#1).  01080000
               01090000         Example:
                 01100000
                 01110000         BPT (3380 3390) BLKSIZE(#1 #200) KEY(0 1)
                 01120000         This produces a 8-line rep  ort (4 lines for e
ach disk) showing  01130000         (a) the largest block that will fit on a tra
ck (#1) and (b)    01140000         the most number of blocks that will fit per
track (#200). The  01150000         information is shown both for keyed (KE+ Y(1
)) and unkeyed       01160000         (KEY(0)) blocks.
                       01170000
                       01180000))KEYLEN -
                       01190000         This operand is optional. If omitted, th
en a zer  o value is     01200000         used. if given, then it may specify on
e or more key lengths to 01210000         be used in the track capacity calculat
ions.                    01220000
                           01230000         Example:
                           01240000
                           01250000         BPT (3380 3390) BLKSIZE(#1 #200) KEY
(0 1)                      01260000           This produces a 8-line report (4 l
ines for each disk) showing  01270000         (a) the largest block that will fi
t on a track (#1) and (b)    01280000         the most number of blocks that wil
l fit per track (#200). The  01290000         informaS tion is shown both for ke
yed (KEY(1)) and unkeyed       01300000         (KEY(0)) blocks.
                               01310000
                               01320000 {                        _ ./ ADD NAME=A
SMJCL                                                              //ASM2ZAP  JO
B (CSW,UPS),'540-456-8536',CLASS=A,MSGCLASS=D,                     //
  MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439                            /  /*
                                                                     //*********
**************************************************                   //*
                                                 *                   //* Sample
JCL   to assemble and linkedit the ASM2ZAP         *                   //* Progr
am.                                                *                   //*
                                                   *                   //*******
******************  **********************************                   //*
                                                                         //ASM
   EXEC PGM=ASMA90,REGION=1024K,                                         //
        PARM=('OBJ,NODECK,FLAG(NO  ALIGN),LC(109),MX(FULL)',               //
          'NORLD,TERM,TEST,US(WARN(11)),XREF(SHORT)')                      //SYS
LIB   DD  DSN=SYS1.MACLIB,DISP=SHR                                         //
      DD  DSN=SYS1.MODGEN,DISP=SHR                                           //S
YSUT1   DD  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CYL,(15,5)),                       //
            DISP=(,PASS)                                                     //S
YSTERM  DD  SYSOUT=*                                                           /
/SYSPRINT DD  SYSOUT=*                                                         /
/SYSLIN   DD  DSN=&&OBJSET,UNIT=DISK,SPACE=(CYL,(1,1),RLSE),                   /
/             DISP=(MOD,PASS)
 //SYSIN    DD  DISP=SHR,DSN=DBCOLE.ASM(ASM2ZAP)
 //*
 //LKED    EXEC PGM=IEWL,REGION=1024K,
 //               PARM='TEST,XREF,LET,LIST,NCAL',
   //             COND=(4,LE)
   //SYSLMOD  DD  DSN=DBCOLE.LOAD(ASM2ZAP),DISP=SHR
   //SYSUT1   DD  DSN=&&SYSU  T1,DISP=(OLD,DELETE)
     //SYSPRINT DD  SYSOUT=*
     //SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)
 
       ./ ADD NAME=ASM2ZAP
       R0       EQU   0                                              03/97 DKC
       R1       EQU   1                                                03/97 DKC
         R2       EQU   2                                              03/97 DKC
         R3       EQU   3                                              03/97 DKC
         R4       EQU   4                                              03+ /97 D
KC         R5       EQU   5                                                03/97
 DKC         R6       EQU   6                                              03/97
 DKC         R7       EQU   7                                              03/97
 DKC         R8       EQU   8                                              03/97
 DKC           R9       EQU   9                                              03/
97 DKC         R10      EQU   10                                             03/
97 DKC         R11      EQU   11                                             03/
97 DKC         R12        EQU   12                                             0
3/97 DKC         R13      EQU   13                                             0
3/97 DKC         R14      EQU   14                                             0
3/97 DKC         R15      EQU   15
 03/97 DKC         ASM2ZAP  CSECT ,
 03/97 DKC                  B     BEGIN-ASM2ZAP(,R15)
 03/97 DKC                  DC    AL1(L'ICATCHER)
   03/97 DKC         ICATCHER DC    C'I LOVE THREY'
   03/97 DKC         BEGIN    STM   R14,R12,12(R13)
   03/97 DKC                  LR    R12,R15
     03/97 DKC                  USING ASM2ZAP,R12
     03/97 DKC                  LA    R1,MYRSA
     03/97 DKC                  ST    R1,8(,R13)
       03/97 DKC                  ST    R13,4(,R1)
       03/97 DKC                  LR    R13,R1
       03/97 DKC                  SPACE 3
       03/97 DKC           ******** ***** **************************************
******** 03/97 DKC         *              ASSEMBLER CODE GOES HERE.
       *                   ******** ***** **************************************
******** 03/97 DKC                    OPEN  (LISTING,INPUT,SYSPUNCH,OUTPUT)
           03/97 DKC                  SR    R5,R5
           06/99 DBC                  MVC   INBUF,SPACESI     *CLEAR IN CASE REC
L < 133    03/97 DKC         LOOP1    MVC   OU  TBUF,SPACES
             03/97 DKC                  GET   LISTING,INBUF
             03/97 DKC                  SPACE 1
             06/99 DBC                  CLC   ZAPFIELD,=C'*ZA  P'
               03/97 DKC                  BE    ZAPNEW
               03/97 DKC                  LTR   R5,R5
               06/99 DBC                  BZ    LOOP1
                 06/99 DBC                  SPACE 1
                 06/99 DBC                  CLC   INBUF+1(132),BLANKLN
                 03/97 DKC                  BE    LOOP1
           +       03/97 DKC                  CLC   INBUF+1(L'ADDR+1+10),BLANKLN
                     06/99 DBC                  BE    NOTELINE
                     06/99 DBC                  SPACE 1
                     06/99 DBC                  CLC   INBUF+1+L'ADDR(1+15),BLANK
LN                   06/  99 DBC                  BNE   LGJGJHG
                       06/99 DBC                  TRT   ADDR,HEXTEST
                       06/99 DBC                  BZ    NOTELINE
                       06/99 DBC           LGJGJHG  DS    0H
                         06/99 DBC                  SPACE 1
                         06/99 DBC                  TRT   ADDR,HEXTEST
                         06/99 DBC                  DC      0Y(R1,R2)
                           06/99 DBC                  BNZ   LOOP1
                           06/99 DBC                  CLI   OBJCODE-1,C' '
                           06/99 DBC                  BNE   LOOP1
                             06/99 DBC                  TRT   OBJCODE(2),HEXTEST
                             06/99 DBC                  DC    0Y(R1,R2)
                             06/99 DBC                  BNZ   LOOP1
                               06/99 DBC                  SPACE 1
                               06/99 DBC                  C     R5,=F'1'
                               06/99 DBC                  BE    VERLINE
                                 03/97 DKC                  C     R5,=F'2'
                                 06/99 DBC                  BE    REPLINE
                                 03/97 DKC                  SPACE 1
                                 0  6/99 DBC         RETURN   MVC   ADDR#,ADDR
                                   03/97 DKC                  MVC   STMT#,STMT
                                   03/97 DKC                  L     R3,=F'4'
                                   03/97 DKC           *        LA    R3,4
                                     03/97 DKC                  LA    R4,OBJCODE
                                     03/97 DKC         SUBLOOP1 CLI   0(R4),X'40
'                                    03/97 DKC                    BE    OBCODE
                                       03/97 DKC                  LA    R4,1(,R4
)                                      03/97 DKC                  BCT   R3,SUBLO
OP1                                    03/97 DKC                  CLI   0(R4),X
 '40'                                    03/97 DKC         NEXT     BE    FULLWO
RD                                       03/97 DKC         * THE LINE CONTAINS A
 1-16 DIGIT OBJECT CODE *                                  OBCODE   MVC   OBJCOD
E#,OBJCODE                                 03/97 DKC                  B     OUTF
ILE1                                       03/97 DKC         * THE LINE CONTAINS
 1 - 3 FULLWORDS *                                           FULLWORD MVC   FWOR
D1#,FWORD1                   +               03/97 DKC                  CLC   FW
ORD2(1),=C' '                                  03/97 DKC                  BE
OUTFILE1                                       03/97 DKC                  MVI
FWORD2#-1,C','                                 03/97 DKC                  MVC
FWORD2#,FWORD2                                   03/97 DKC                  CLC
  FWORD3(1),=C' '                                03/97 DKC                  BE
  OUTFILE1                                       03/97 DKC                  MVI
  FWORD3#-1,C','                                 03/97 DK  C                  MV
C   FWORD3#,FWORD3                                 03/97 DKC         OUTFILE1 MV
C   STMT#,STMT                                     03/97 DKC         OUTFILE2 PU
T   SYSPUNCH,OUTBUF                                03/97 DKC
B     LOOP1                                          03/97 DKC
SPACE 3                                              06/99 DBC         EOF
CLOSE (LISTING,,SYSPUNCH)                            03/97 DKC
SPACE 3                                                03/97 DKC
  L     R13,4(,R13)                                    03/97 DKC
  LM    R14,R12,12(R13)                                03/97 DKC
  SLR   R15,R15                                          03/97 DKC
    BR    R14                                            03/97 DKC         *****
*** ***** ********************************************** 03/97 DKC         *
           SUBROUTINES                                   * 03/97 DKC         ***
***** ***** ********************************************** 03/97 DKC         *SK
IPHEAD SKIPS THE HEADER LINES @ TOP OF EVERY PAGE OF LISTINGS*               SKI
PHEAD GET   LISTING,INBUF                                    03/97 DKC
        CLC   OBJCODE(11),=C'OBJECT CODE'                    03/97 DKC
        BE    LOOP1                                          03/97 DKC
        B     SKIPHEAD                                       03/97   DKC
          SPACE 3                                              06/99 DBC
 ******** ***** ********************************************** 03/97 DKC
 ***ZAPNEW & SUBROUTINES ZAP* FLAG THE CURRENT CARD TYPE TO R5***
 *  **1 = VER, 2=REP, 0=NEITHER                                   *
   ***ALL BRANCHES RECONVERGE TO LOOP1************************** **
   ZAPNEW   CLC   ZAPTYPE,=C'STOP '                              03/97 DKC
            BE      EOF                                            03/97 DKC
              CLC   ZAPTYPE,=C'CARD '                              03/97 DKC
              BE    ZAPCARD                                        03/97 DKC
              CLC   ZAPTYPE,=C'P  AUSE'                              03/97 DKC
                BE    ZAPPAUSE                                       03/97 DKC
                CLC   ZAPTYPE,=C'START'                              03/97 DKC
                BE    ZAPSTART                 +                       03/97 DKC
                  B     LOOP1                                            03/97 D
KC         ZAPCARD  MVC   OUTBUF(33),ZAPREST                             03/97 D
KC                  B     OUTFILE2                                       03/97 D
KC         ZAPPAUSE LA    R5,0                                             06/99
 DBC                  B     LOOP1                                          03/97
 DKC         ZAPSTART CLC   ZAPREST+1(3),=C'VER'                           03/97
 DKC                  BE    ZAPVER                                           03/
97 DKC                  CLC   ZAPREST+1(3),=C'REP'                           03/
97 DKC                  BE    ZAPREP                                         03/
97 DKC                  B     LOOP1                                          03/
97 DKC           ZAPVER   LA    R5,1                                           0
6/99 DBC                  B     LOOP1                                          0
3/97 DKC         ZAPREP   LA    R5,2                                           0
6/99 DBC                    B     LOOP1
 03/97 DKC         ******** ***** **********************************************
 03/97 DKC         NOTELINE MVI   TYPE,C'*'
 03/97 DKC                  B     OUTFIL  E1
   03/97 DKC         VERLINE  MVC   TYPE,=C'VER'
   03/97 DKC                  B     RETURN
   03/97 DKC         REPLINE  MVC   TYPE,=C'REP'
     03/97 DKC                  B     RETURN
     03/97 DKC         ******** ***** ******************************************
**** 03/97 DKC         *
       03/97 DKC         LISTING  DCB   DDNAME=LISTING,
       03/97 DKC*                       DSORG=PS,
       03/97 DKC*                       MACRF=GM,
         03/97 DKC*                       EODAD=EOF
         03/97 DKC         *
         03/97 DKC         SYSPUNCH DCB   DDNAME=SYSPUNCH,
         03/97 DKC*                         DSORG=PS,
           03/97 DKC*                       MACRF=PM,
           03/97 DKC*                       RECFM=FB,
           03/97 DKC*                         LRECL=80,
             03/97 DKC*                       EXLST=PUNXLIST
             03/97 DKC         ******** ***** **********************************
************ 03/97 DKC         SPACESI  DC    CL1'   '    |
               03/97 DKC         INBUF    DS    0CL133 <--+
               03/97 DKC                  DS    CL1
               03/97 DKC         ADDR     DS    CL6              +
                 03/97 DKC                  DS    CL1
                   03/97 DKC         OBJCODE  DS    0CL16
                   03/97 DKC         FWORD1   DS    CL4
                   03/97 DKC                  DS    CL1
                     03/97 DKC         FWORD2   DS    CL4
                     03/97 DKC                  DS    CL1
                     03/97 DKC         FWORD3   DS    CL4
                       03/97 DKC                  DS    CL2
                       03/97 DKC                  DS    CL17
                       03/97 DKC         STMT     DS    0CL43
                       03/97   DKC         ZAPFIELD DS    CL4
                         03/97 DKC                  DS    CL1
                         03/97 DKC         ZAPTYPE  DS    CL5
                         03/97 DKC           ZAPREST  DS    CL33
                           03/97 DKC                  DS    CL27
                           03/97 DKC         PAGEFLD  DS    CL6
                           03/97 DKC                  DS      CL16
                             03/97 DKC         ******** ***** ******************
**************************** 03/97 DKC         SPACES   DC    CL1' '    |
                             03/97 DKC         OUTBUF   DS    0CL80  <--+
                               03/97 DKC         TYPE     DS    CL3
                               03/97 DKC                  DC    CL1' '
                               03/97 DKC         ADDR#    DS    CL6
                                 03/97 DKC                  DC    CL1' '
                                 03/97 DKC         OBJCODE# DS    0CL16
                                 03/97 DKC         FWORD1#  DS    CL4
                                   03/97 DKC                  DS    CL1
                                   03/97 DKC         FWORD2#  DS    CL4
                                   03/97 DKC                  DS    CL1
                                   03/  97 DKC         FWORD3#  DS    CL4
                                     03/97 DKC                  DS    CL2
                                     03/97 DKC                  DS    CL1
                                     03/97 DKC           STMT#    DS    CL43
                                       03/97 DKC                  DS    CL9
                                       03/97 DKC         ******** ***** ********
************************************** 03/97 DKC         BLANKLN  DC      CL132'
 '                                       03/97 DKC         PUNXLIST DS    0F
                                         03/97 DKC                  DC    X'85',
AL3(PUNEXIT)                             03/97 DKC         MYRSA    DC    18A(0)
   +                                       03/97 DKC         ******** ***** ****
*  ***************************************** 03/97 DKC         HEXTEST  DC    25
6AL1(4)                                      06/99 DBC                  ORG   HE
XTEST+C'A'                                   06/99 DBC                  DC    (C
'F'-C'A'+1)AL1(0  )                            06/99 DBC                  ORG
HEXTEST+C'0'                                   06/99 DBC                  DC
(C'9'-C'0'+1)AL1(0)                            06/99 DBC                  ORG
,                                                06/99 DBC         ******** ****
* ********************************************** 03/97 DKC                  SPAC
E 3                                              03/97 DKC                  DCBD
  DSORG=PS                                                           ASM2ZAP  CS
ECT ,                                              03/97 DKC                  DR
OP  ,                                              03/97 DKC                  US
ING PUNEXIT,R15                                    03/97 DKC
USING IHADCB,R1                                      03/97 DKC         PUNEXIT
LH    R2,DCBBLKSI                                    03/97 DKC
LTR   R2,R2                                          03/97 DKC
  BNZR  R14                                            03/97 DKC
  MVC   DCBBLKSI,=H'23440'                             03/97 DKC
  BR    R14                                            03/97 DKC
  DROP  ,                                                03/97 DKC
    LTORG ,                                              03/97 DKC         *****
*** ***** ********************************************** 03/97 DKC
    END   ,
                                                                             ./
ADD NAME=README                                                              Thi
s is README file for the ASM2ZAP program.
                                                                               A
SM2ZAP is a program that can be used to generate SUPERZAP control cards        f
rom suitably constructed assembly listings. It is a very   powerful
 device to use when your product maintenance process is based on zapping
 and you need to develop a particularly complex zap.
 
   The ASM2ZAP.ZIP file contains the following files:
 
     - ASM2ZAP.ALC is the assembler source code for the program.
 
       - ASMJCL.TXT is sample JCL for assembling and link editing the
         program.
                     +
         - SAMPJCL.  TXT is sample JCL for running ASM2ZAP. It also contains a
             sample Assembler program written specifically for generating a
             complicated SUPERZAP, and it contains brief commentary describing
             how to use ASM2ZAP.
 
           All of the files are encoded in ASCII. When uploading them to your
           mainframe, ASCII-to-EBCDIC translation   should be enabled.
 
             To install ASM2ZAP, do the following:
 
                 - Use WINZIP or PKUNZIP (or whatever) to decompress and extract
 the               ASM2ZAP.ALC, ASMJCL.TXT and SAMPJCL.TXT files from ASM2ZAP.ZI
P.
                   - Upload the several files to your mainframe. Make sure that
                     ASCII-to-EBCDIC translation is turned on.
 
                     - Upload the files to a library whose DCB attributes are RE
CFM=FB,                LRECL=80, and BLKSIZE=n*80.
 
                     - Check   out the ASMJCL member for sample JCL to assemble
and linkedit             the program.
 
                       - Assemble the ASM2ZA  P member using both system macros.
 
                         - Linkedit the ASM2ZAP program into a suitable load lib
rary.
                           - Try it out using the SAMPJCL member as a guide. Not
e, SAMPJCL                   references several of XDC's internal macros, so you
 can't actually              run the sample. It is included only for the p  urpo
ses of guidance                (and because I'm too lazy to create something tha
t you actually                 could run).
 
 
 
                             CONTACT INFORMATION:
 
                                   Name:                David B. Cole
                                   Country:             USA
                                       +
                                       Telephone:           540-456-8536
                                       FAX:                 540-456-6658
                                       E-mail:              dbcole@colesoft.com
                                       Website:               www.colesoft.com
 
                                         Snail Mail:          Cole Software
                                                              736 F  ox Hollow R
oad                                                             Afton, VA 22920
                                                                USA
 
                                         ./ ADD NAME=SAMPJCL
                                         //ZAPASM   JOB (COLE,UPS,,999,,),'540-4
56-8536',NOTIFY=R9999,                   //             MSGLEVEL=(1,1),MSGCLASS=
D,PRTY=12,TIME=60                          //*
                                           //***********************************
************************                   //*
                       *                     //* Sample job for generating SUPER
ZAP cards from an        *                   //* assembly listing.
                         *                   //*
                         *                   //  * ASM2ZAP works by scanning an
assembly listing's hex     *                   //* object code fields and using
them to generate SUPERZAP  *                   //* VER and REP cards. ASM2ZAP is
 controlled by "*ZAP"      *                   //* control car  ds that you must
 insert (as Assembler        *                   //* comments) into the code bei
ng assembled. ASM2ZAP looks  *                   //* for these cards during its
scan. They tell ASM2ZAP      *                   //* when to generate VER and
REP cards and when not to.     *                   //*
                               *                   //* In order for ASM2ZAP to w
ork, the assembler statement   *                   //* "PRINT ON,GEN,DATA" must
be in effect   for the sections  *                   //* of the assembly from wh
ich ASM2ZAP is supposed to       *                   //* generate VER and REP ca
rds.                             *                   //*
                                   *                   //*
                                   *                   //*
                                   *                   //* ASM2ZAP control cards
:                                  *                     //*
                                     *                   //* *ZAP CARD <text>
                                     *                   //* "<text>" is punched
, without inspection, starting in    *                               _ //* card
column 1.                                          *                   //*
                                                   *                   //* *ZAP
START VER                                          *                   /  /* *ZA
P START REP                                          *                   //* ASM
2ZAP starts generating VER or REP cards by using the *                   //* hex
 object code columns from the assembly listing.      *                   //*
                                                       *                   //* *
ZAP PAUSE                                              *                   //* A
SM2ZAP discontinues generating VER or REP cards.       *                   //*
                                                         *                   //*
 *ZAP STOP                                               *                   //*
 ASM2ZAP discontinues generating VER or REP cards,       *                   //*
 closes its files, and terminates.                         *                   /
/*                                                         *                   /
/*                                                         *                   /
/* Below is an actual sample ASM2ZAP job that I wrot  e      *
 //* recently to generate some complicated maintenance for   *
 //* XDC. You will not be able to run this sample            *
 //* successfully because many of the private macros that it *
   //* uses are not publically available. Nonetheless, careful *
   //* study of the sample should reveal several tricks and    *
   //* techniques for writing a useful ASM2ZAP job.            *
     //*                                                         *
     //* A Couple of Notes:                                      *
     //*                                                         *
     //*   - PRIN  T ON,GEN,DATA must be in effect so that the     *
       //*     Assembly listing contains all of the object code    *
       //*     necessary for ASM2ZAP to produce the required       *
       //*     VER and REP cards  .                                  *
         //*                                                         *
         //*   - This sample job uses a single assembly for          *
         //*     generating zaps for several CS  ECTs. All of the      *
           //*     CSECTs I need to zap are created as DSECTs in this  *
           //*     job because always start with a location counter of *
           //*     X'000000'. That's important because ASM2ZAP           *
             //*     generates the VER and REP target addresses from the *
             //*     location counter field displayed in the assembly.   *
             //*                                                         *   +
               //**********************************************************  *
                 //*
                 //CLEANUP EXEC PGM=IEFBR14
                 //Z329708D DD  DSN=DBCOLE.LISTING.Z329708D,
                   //             UNIT=SYSALLDA,SPACE=(TRK,0),DISP=(MOD,DELETE)
                   //*
                   //ASM     EXEC PGM=ASMA90,REGION=1024K,
                   //               PARM=('NOOBJ,NODECK,FLAG(NOALIGN),LC(109),MX
(FULL)',             //             'NORLD,TERM,US(WARN(11)),XREF(SHORT)')
                     //SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
                     //         DD  DSN=  SYS1.MODGEN,DISP=SHR
                       //         DD  DSN=DBCOLE.XDC.MACLIB,DISP=SHR
                       //SYSUT1   DD  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CYL,(15,5)),
                       //             DISP=(,PASS)
                         //SYSTERM  DD  SYSOUT=*
                         //SYSPRINT DD  DSN=DBCOLE.LISTING.Z329708D,
                         //             UNIT=DISK,SPACE=(TRK,(10,10),R  LSE),
                           //             DCB=(RECFM=FBA,LRECL=121,BLKSIZE=23474
),DISP=(,CATLG)            Z329807D TITLE 'Fix PLU/SLU PF-KEY Sets Matching Prob
lem'     08/97 X33                  GBLB  &#DOC,&#LIST
           08/97 X33         &#DOC    SETB  (0)
           08/97 X33         &#LIST   SETB  (0)
           08/97 X33                  SPACE 1
           08/97 X33           ZAPASM   CSECT ,
             08/97 X33                  #DBCVRSN ,
             08/97 X33                  #DBCREGS ,
             08/97 X33                    #DBCBVT ,
               08/97 X33                  #DBCLCL ,
               08/97 X33                  #DBCRSTK ,
               08/97 X33         *
                 08/97 X33                  #TFSVRSN ,
                 08/97 X33                  #TFSREGS ,
                 08/97 X33                  #TWATFS ,
                   08/97 X33                  #TFSSCRC ,
                   08/97 X33                  #TFSPTOS ,
                   08/97 X33                  #TFSIMAG ,
                     08/97 X33                  #TFSLCL ,
                     08/97 X33                  #TFSBVT ,
                     08/97 X33                  DROP  ,                   KILL A
LL BASES       +       08/97 X33                  PRINT ON,GEN,DATA
                         08/97 X33                  TITLE 'IMAGEIPD Field Change
s'                       08/97 X33         IMAGEIPD DSECT ,
                         08/97 X33                  ORG   IPDDATA
                         08/  97 X33         IPD@PFK1 DS    CL(TFSPFK#V)
PHYSICAL PFKEY MAP         08/97 X33         IPD@PFK2 DS    CL(TFSPFK#V)
LOGICAL  PFKEY MAP         08/97 X33         IPD@HLEN EQU   *-IPDSTART
L'HEADER SECTION           08/97 X33           IPD@DATA DS    0X
  START OF VARIABLE DATA     08/97 X33                  TITLE 'TFSTEP Zaps'
                             08/97 X33         *********************************
**************************** 08/97 X33         ***********  ********************
****************************** 08/97 X33         *
                             * 08/97 X33         * TFSTEP Setup
                             * 08/97 X33         *
                               * 08/97 X33         *****************************
******************************** 08/97 X33         *****************************
******************************** 08/97 X33                  SPACE 1
                                   08/97 X33         TFSTEP   DSECT ,
                                   08/97 X33                  USING TFSBVT,TBVTR
EG      TFS-BVT BASE               08/97 X33                  USING TWATFS,TWARE
G       TFS-TWA                      08/97 X33                  USING TFSL,TLCLR
EG        TFS-LCL                    08/97 X33                  USING BVT,BVTREG
          XDC-BVT                    08/97 X33                  USING LCL,LCLREG
          XDC-LCL                    0  8/97 X33                  SPACE 1
                                       08/97 X33         *ZAP CARD NAME TFSTEP
                                       08/97 X33                  SPACE 3
                                       08/97 X33           *********************
**************************************** 08/97 X33         *********************
**************************************** 08/97 X33         *
                                       * 08/97 X33         * TFSTEP   Verifies
                                         * 08/97 X33         *
                                         * 08/97 X33         *******************
****************************************** 08/97 X33         *******************
***  *************************************** 08/97 X33                  SPACE 1
                                             08/97 X33         *ZAP START VER
                                             08/97 X33                  SPACE 3
                                               08/97 X33         * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33                  SPACE
1                                              08/97 X33                  ORG
TFSTEP+X'2A0'                    +               08/97 X33         INIT     BAL
  R15,PVTSUBIF        SAVE REGS   IN STACK         08/97 X33                  US
ING INIT,TPGMREG        DCL SUBROUTINE BASE        08/97 X33                  US
ING RSTK,RSTKREG        RSTK                       08/97 X33                  SP
ACE 3                                                08/97 X33         * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
SPACE 1                                              08/97 X33
ORG   TFSTEP+X'3AE'                                  08/97 X3  3         IPDBUFL
  EQU   L'IPDPTOS+IPDHLEN+TFSPFK##*(IPDPFLEN+L'SCRCTXT) 2/96 X32         *
                            L'PLU>SLU PARAMETERS BUFFR 12/96 X32         INIT200
  L     R1,LIT00001         L'GETMAIN                  08/97 X33
    SPACE 1                                              08/97 X33
    ORG   TFSTEP+X'91C'                                  08/97 X33         LIT00
001 DC    A(8*X'3000'+PTOSHDRL+2*IPDBUFL) L'GETMAIN      08/97 X33
    SPACE 3                                                08/97 X33         * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
      SPACE 1                                              08/97 X33
      ORG   TFSTEP+X'422'                                    08/97 X33
        L     R1,LIT00002         L'PLU>SLU PARMS BUFFER     08/97 X33
        SPACE 1                                              08/97 X33
        ORG   TFSTEP+X'920'                                    08/97 X33
 LIT00002 DC    A(IPDBUFL)          L'PLU>SLU PARMS BUFFER     08/97 X33
          SPACE 3                                              08/97 X33
 * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * 08/97 X33
            SPACE 1                                              08/97 X33
   *ZAP PAUSE                                                    08/97 X33
            SPACE 3                                              08/97   X33
     ************************************************************* 08/97 X33
     ************************************************************* 08/97 X33
     *                                                           * 08/97 X33
     *   TFSTEP Replacements                                       * 08/97 X33
       *                                                           * 08/97 X33
       ************************************************************* 08/97 X33
       **************  *********************************************** 08/97 X33
                  SPACE 1                                              08/97 X33
         *ZAP START REP                                                08/97 X33
                  SPACE 3                                                08/97 X
33         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X
33                  SPACE 1                                              08/97 X
33                  ORG   LIT00001                 +                       08/97
 X33         IPD@BUFL EQU   L'IPDPTOS+IPD@HLEN+TF  SPFK##*(IPDPFLEN+L'SCRCTXT) /
97 X33         *                                  L'PLU>SLU PARAMETERS BUFFR 08/
97 X33                  DC    A(8*X'3000'+PTOSHDRL+2*IPD@BUFL) L'GETMAIN     08/
97 X33                  SPACE 3                                                0
8/97 X33         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 0
8/97 X33                  SPACE 1                                              0
8/97 X33                  ORG   LIT00002
 08/97 X33                  DC    A(IPD@BUFL)         L'PLU>SLU PARMS BUFFER
 08/97 X33                  SPACE 3
 08/97 X33         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 08/97 X33                    SPACE 1
   08/97 X33         *ZAP PAUSE
   08/97 X33         *ZAP CARD IDRDATA X329708D
   08/97 X33                    DROP  ,                   KILL ALL DECLARES
     08/97 X33                  TITLE 'TFSPLU Zaps'
     08/97 X33         *********************************************************
**** 08/97 X33         *********************  **********************************
****** 08/97 X33         *
     * 08/97 X33         * TFSPLU Setup
     * 08/97 X33         *
       * 08/97 X33         *****************************************************
******** 08/97 X33         *****************************************************
******** 08/97 X33                  SPACE 1
           08/97 X33         TFSPLU   DSECT ,
           08/97 X33                  USING TFSBVT,TBVTREG      TFS-BVT BASE
           08/97 X33                  USING TWATFS,TWAREG       TFS-TWA
             08/97 X33                  USING TFSL,TLCLREG        TFS-LCL
             08/97 X33                  USING BVT,BVTREG          XDC-BVT
             08/97 X33                  USING LCL,LCLREG          XDC-LCL
             08/97 X33                    SPACE 1
               08/97 X33         *ZAP CARD NAME TFSPLU
               08/97 X33                  SPACE 3
               08/97 X33         ******  ***************************************
**************** 08/97 X33         *********************************************
**************** 08/97 X33         *
               * 08/97 X33         * TFSPLU Verifies
                 * 08/97 X33         *
                 * 08/97 X33         *******************************************
****************** 08/97 X33         ********************************+ *********
******************** 08/97 X33                  SPACE 1
                       08/97 X33         *ZAP START VER
                       08/97 X33                  SPACE 3
                       08/97 X33         * * * * * * * * * * * * * * * * * * * *
 *   * * * * * * * * * * 08/97 X33                  SPACE 1
                         08/97 X33                  ORG   TFSPLU+X'1DD8'
                         08/97 X33         PATCH5   DS    256Y
                           08/97 X33         PATCH5Z  DS    0Y
                           08/97 X33                  SPACE 1
                           08/97 X33                  ORG   PATCH5
                           08/97   X33         P5START  DC    9Y(*-TFSPLU)
                             08/97 X33                  #TEST SIZE=(*,EQ,P5END)
  CONGRUENCY CHECK           08/97 X33                  SPACE 3
                             08/97 X33           * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                               08/97 X33                  ORG   TFSPLU+X'19AA'
                               08/97 X33                  USIN  G IMAGEIPD,R1
      DCL IMAGE BASE             08/97 X33         ZAP1     XC    IPDSTART(IPDDA
TA-IPDSTART),IPDSTART RESET      12/96 X32                  DROP  R1
      DONE WIMAGE BASE           08/97 X33                  SPACE 3
                                   08/97 X33         * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                                   08/97 X33                  ORG   TFSPLU+X'1C8
C'                                   08/97 X33         SLUPROF  BAL   R15,PVTSUB
IF        SAVE REGS IN STACK         08/97 X33                  USING SLUPROF,TP
GMREG     DCL SUBROUTINE BASE        08/97 X33                  USING RSTK,RSTKR
EG        RSTK                         08/97 X33                  SPACE 3
                                       08/97 X33         * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                                       08/  97 X33                  ORG   TFSPLU
+X'1CEC'                                 08/97 X33                  USING IMAGEI
PD,R3                                    08/97 X33         ZAP2     LA    R3,IPD
PFKEY         @'1ST PFKEY DEF SINK       11/96 X32                    DROP  R3
                DONE W/IMAGEIPD BASE       08/97 X33                  SPACE 1
                                           08/97 X33                  DROP  TPGM
REG,RSTKREG     DONE W/SLUPROF BASES       08/97 X33                  SP  ACE 3
                                             08/97 X33         * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                                             08/97 X33         *ZAP PAUSE
       +                                       08/97 X33                  SPACE
3                                                08/97 X33         *************
************************************************ 08/97 X33         *************
************************************************ 08/97 X33         *
                                                 * 08/97 X33         * TFSPLU Re
placements                                       * 08/97 X33         *
                                                 * 08/97 X33         ***********
***********************************  *************** 08/97 X33         *********
**************************************************** 08/97 X33
SPACE 1                                              08/97 X33         *ZAP STAR
T REP                                                  08/97 X33
  SPACE 3                                              08/97 X33         * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
  SPACE 1                                              08/97 X33
    ORG   ZAP1                                           08/97 X33
    USING IMAGEIPD,R1         DCL IMAGE BASE             08/97 X33
    XC    IPDSTART(IPD@DATA-IPDSTART),IPDSTART RESET     08/97 X33
      DROP  R1                  DONE WIMAGE BASE           08/97 X33
      SPACE 3                                              08/97 X33         * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
      SPACE 1                                                08/97 X33
        USING SLUPROF,TPGMREG     DCL SUBROUTINE BASE        08/97 X33
        USING RSTK,RSTKREG        RSTK                       08/97 X33
        SPACE 1                                                08/97 X33
          ORG   ZAP2                                           08/97 X33
          USING IMAGEIPD,R3                                    08/97 X33
          BAL   R14,P5A                                          08/97 X33
            SPACE 1                                              08/97 X33
            ORG   P5START                                        08/97 X33
   P5A      MVC   IPD@PFK1,TFSPFK1    GET PHYSICAL PF-KEY MA  P    08/97 X33
              MVC   IPD@PFK2,TFSPFK2    GET LOGICAL  PF-KEY MAP    08/97 X33
              LA    R3,IPD@DATA         ADVANCE PAST HEADER FIELDS 08/97 X33
              DROP  R3                  DONE W/IMAGEIPD BASE       08/97 X3  3
                BR    R14                 RETURN TO MAIN CODE        08/97 X33
       P5AZ     DS    0H                                             08/97 X33
                SPACE 1                                              08/97 X33
                  DROP  TPGMREG,RSTKREG     DONE W/SLUPROF BASES       08/97 X33
                  SPACE 3                                              08/97 X33
         ************************************************************* 08/97 X33
                  SPACE 1+                                               08/97 X
33         P5END    EQU     P5AZ                                           08/97
 X33                  #TEST SIZE=(P5END,LE,PATCH5Z) FIT CHECK              08/97
 X33                  SPACE 3                                              08/97
 X33         * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * 08/
97 X33                  SPACE 1                                              08/
97 X33         *ZAP PAUSE                                                    08/
97 X33         *ZAP CARD IDRDATA X329708D                                      0
8/97 X33                  DROP  ,                   KILL ALL DECLARES          0
8/97 X33                  TITLE 'TFSSLU Zaps'                                  0
8/97 X33         ***************************************************  **********
 08/97 X33         *************************************************************
 08/97 X33         *                                                           *
 08/97 X33         * TFSSLU Setup                                              *
 08  /97 X33         *
 * 08/97 X33         ***********************************************************
** 08/97 X33         ***********************************************************
** 08/97 X33                    SPACE 1
     08/97 X33         TFSSLU   DSECT ,
     08/97 X33                  USING TFSBVT,TBVTREG      TFS-BVT BASE
     08/97 X33                  U  SING TWATFS,TWAREG       TFS-TWA
       08/97 X33                  USING TFSL,TLCLREG        TFS-LCL
       08/97 X33                  USING BVT,BVTREG          XDC-BVT
       08/97 X33                  USING LCL,LCLR  EG          XDC-LCL
         08/97 X33                  SPACE 1
         08/97 X33         *ZAP CARD NAME TFSSLU
         08/97 X33                  SPACE 3
           08/97 X33         ***************************************************
********** 08/97 X33         ***************************************************
********** 08/97 X33         *
           * 08/97 X33         * TFSSLU Verifies
           * 08/97 X33         *
           * 08/97 X33         *************************************************
************   08/97 X33         ***********************************************
************** 08/97 X33                  SPACE 1
               08/97 X33         *ZAP START VER
               08/97 X33                    SPACE 3
                 08/97 X33         * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * 08/97 X33                  SPACE 1
                 08/97 X33                 +  ORG   TFSSLU+X'216C'
                   08/97 X33         QATC  H5   DS    256Y
                     08/97 X33         QATCH5Z  DS    0Y
                     08/97 X33                  SPACE 1
                     08/97 X33                  ORG   QA  TCH5
                       08/97 X33         Q5START  DC    9Y(*-TFSSLU)
                       08/97 X33                  #TEST SIZE=(*,EQ,Q5END)   CONG
RUENCY CHECK           08/97 X33                  SPACE 3
                         08/97 X33         * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * 08/97 X33                  SPACE 1
                         08/97 X33                  ORG   TFSSLU+X'2E6'
                           08/97 X33         SLUCMD2  BAL   R15,PVTSUBIF
SAVE REGS IN STACK         08/97 X33                  USING SLUCMD2,TPGMREG
DCL SUBROUTINE BASE        08/97 X33                  USING RSTK,RSTKREG
RSTK                         08/97 X33                  SPACE 3
                             08/97 X33         * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                             08/97 X  33                  ORG   TFSSLU+X'922'
                               08/97 X33                  CLC   RECVDATL,LIT0000
3   RIGHT LENGTH FOR PROFILE   08/97 X33         *
    DATA?                      09/96 X32                    SPACE 1
                                 08/97 X33                  ORG   TFSSLU+X'C64'
                                 08/97 X33         LIT00003 DC    Y(IPDHLEN)
      L'PROFILE DATA HEADER      08/97 X33                  SPACE   1
                                   08/97 X33                  DROP  TPGMREG,RSTK
REG     DONE W/SLUCMD2 BASES       08/97 X33                  SPACE 3
                                   08/97 X33         * * * * * * * * * * * * * *
   * * * * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                                     08/97 X33                  ORG   TFSSLU+X'2
07A'                                 08/97 X33         PLUPROF  BAL   R15,PVTSUB
IF        SAVE R  EGS IN STACK         08/97 X33                  USING PLUPROF,
TPGMREG     DCL SUBROUTINE BASE        08/97 X33                  USING RSTK,RST
KREG        RSTK                       08/97 X33                  SPACE 3
                                         08/97 X33         * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * 08/97 X33                  SPACE 1
                                         08/97 X33                  ORG   TFSSLU
+X'2106'                                 08/97   X33                  USING IPDS
TART,R2         DCL IMAGE DATA BASE        08/97 X33         ZAP3     LA    R3,I
PDDATA          @'PF-KEY IMAGE AREA        08/97 X33                  DROP  R2
                DONE W/IPDSTART BASE       08/97 X33
    SPACE 1                                              08/97 X33
    DROP  TPGMREG,RSTKREG     DONE W/PLUPROF BASES       08/97 X33
    SPACE 3                                              08/97 X33         *   *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
      SPACE 1                                              08/97 X33         *ZA
P PAUSE                                                    08/97 X33
      SPACE   3                                              08/97 X33         *
************************************************************ 08/97 X33         *
************************************************************ 08/97 X33         *
                                                             * 08/97 X33
 * TFSSLU Replacements                                       * 08/97 X33
 *                                                           * 08/97 X33
 ****************************************  ********************* 08/97 X33
   ************************************************************* 08/97 X33
            SPACE 1                                              08/97 X33
   *ZAP START REP                                                  08/97 X33
              SPACE 3                                              08/97 X33
     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
              SPACE 1                                              08/9  7 X33
                ORG   LIT00003                                       08/97 X33
                DC    Y(IPD@HLEN)         L'PROFILE DATA HEADER      08/97 X33
                SPACE 3                                              08/97 X33
         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 08/97 X33
                  SPACE 1                                              08/97 X33
                  USING PLUPROF,TPGMREG     DCL SUBROUTINE BASE        08/97 X33
                  USI  NG RSTK,RSTKREG        RSTK                       08/97 X
33                  SPACE 1                                              08/97 X
33                  ORG   ZAP3                                           08/97 X
33                  USING IPDSTART,R  2         DCL IMAGE DATA BASE        08/97
 X33                  BAL   R14,Q5A             JUMP TO ZAP                08/97
 X33                  SPACE 1                                              08/97
 X33                  ORG   Q5START                                          08/
97 X33         Q5A      MVC   TFSPFK1(TFSPFK#V),IPD@PFK1                     08/
97 X33                  MVC   TFSPFK2(TFSPFK#V),IPD@PFK2                     08/
97 X33                  LA    R3,IPD@DATA         @'PF-KEY IMAGE A  REA        0
8/97 X33                  BR    R14                 RETURN TO MAIN CODE        0
8/97 X33         Q5AZ     DS    0H                                             0
8/97 X33                  DROP  R2                  DONE W/IPDSTART BASE       0
8+ /97 X33                  SPACE 1
   08/97 X33                  DROP  TPGMREG,RSTKREG     DONE W/PLUPROF BASES
   08/97 X33                  SPACE 3
   08/97 X33         ***********************************************************
** 08/97 X33                    SPACE 1
     08/97 X33         Q5END    EQU   Q5AZ
     08/97 X33                  #TEST SIZE=(Q5END,LE,QATCH5Z) FIT CHECK
     08/97 X33                    SPACE 3
       08/97 X33         * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * 08/97 X33                  SPACE 1
       08/97 X33         *ZAP PAUSE
         08/97 X33         *ZAP CARD IDRDATA X329708D
         08/97 X33                  DROP  ,                   KILL ALL DECLARES
         08/97 X33                  SPACE 3
           08/97 X33         ***************************************************
********** 08/97 X33         ***************************************************
********** 08/97 X33         *
           * 08/97 X33         * DONE.
           * 08/97 X33         *
           * 08/97 X33         *************************************************
*********  *** 08/97 X33         ***********************************************
************** 08/97 X33                  SPACE 1
               08/97 X33         *ZAP STOP
               08/97 X33                    SPACE 3
                 08/97 X33                  LTORG ,                   BETTER NOT
 B ANYTHING HERE 08/97 X33                  END   ,
                 08/97 X33         //*
                                     //ASM2ZAP  EXEC PGM=ASM2ZAP
                                     //SYSPRINT DD  SYSOUT=*
                                     //LISTING  DD  DS  N=DBCOLE.LISTING.Z329708
D,DISP=SHR                             //SYSPUNCH DD  DSN=DBCOLE.CNTL(X329708D),
DISP=SHR                               //*
                                       //LISTING EXEC PGM=DSCOPY,COND  =EVEN
                                         //SYSPRINT DD  SYSOUT=*
                                         //IN1      DD  DSN=DBCOLE.LISTING.Z3297
08D,DISP=SHR                             //IN2      DD  DSN=DBCOLE.CNTL(X329708D
),DI  SP=SHR                               //OUT1     DD  SYSOUT=*
                                           //OUT2     DD  SYSOUT=*
 
                                              {                        _ ./ ADD
NAME=$$DOC    0100-99126-99126-0950-00004-00004-00000-DBCOLE             $$DOC..
......THIS FILE                                                          #name..
......VARIOUS ASSEMBLY MACROS                                            E  XPOR
T.......JCL FOR EXPORTING THIS LIBRARY                                     READM
E.......INFORMATION                                                        ./ AD
D NAME=#ALD
    MACRO                                                            00000100&N
      #ALD  &R,&A                                                    00000200.*
                                                                     00000300.*
                                                                       00000400.
*                                                                      00000500.
* LAST CHANGE DATE - OCTOBER 18, 1983                                  00000600.
*                  - MAILING ADDRESS CH  ANGE                            0000070
0.*                                                                      0000080
0.* LAST CHANGE DATE - APRIL 21, 1981                                    0000090
0.*                  - MACRO NAME CHANGED F4OM $ALD TO   #ALD              00001
000.*                                                                      00001
100.* LAST CHANGE DATE - FEBRUARY 2, 1977                                  00001
200.*                  - MAILING ADDRESS CHANGE.                             000
01300.*                                                                      000
01400.* LAST CHANGE DATE - FEBRUARY 3, 1976                                  000
01500.*                                                                      000
0160  0.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT 0
0001700.* MAY BE ADDRESSED TO:                                                 0
0001800.*       RR#2 BOX 712                                                   0
0001900.*       AFT  ON, VA. 22920
 00002000.*
 00002100.*
 00002200.*
   00002300.*   THIS MACRO SIMULATES A HYPOTHETICAL "ADD LOGICAL DOUBLE" MACHINE
   00002400.* INSTRUCTION. ITS FUNCTION IS SIMILAR TO THE "AL" MACHINE INSTRUCTI
ON 00002500.* EXCEPT THAT IT OPERATES ON 64-BIT N  UMBERS. WARNING, THE RESULTIN
G    00002600.* CONDITION CODE IS NOT AN ANALOGOUS EXTENSION FROM THE "AL"
     00002700.* INSTRUCTION.
     00002800.*
       00002900.* INNER MACROS USED - #TEST
       00003000.*
       00003100.*                                                              +
         00003200.*
           00003300         GBLA  &#TESERR
           00003400         GBLC  &#TESRET(20)
           00003500         LCLA  &A1
           0  0003600         LCLC  &RODD
             00003700&RODD    SETC  '&R+1'
             00003800         #TEST REGS=&R
             00003900           AIF   (&#TESERR NE 0).REGUNKN
               00004000&A1      SETA  &#TESRET(1)+1
               00004100         AIF   (&A1 LE 15).GOTA1
               00004200&A1      SETA  0
                 00004300.GOTA1   #TEST PFIX=
                 00004400&RODD    SETC  '&#TESRET(1)&A1'
                 00004500.REGUNKN ANOP
                   00004600&N       AL    &RODD,4+&A LOW-ORDER SUM; HI-ORDER AFF
ECTED?             00004700         BC    12,ALD&SYSNDX NO, SKIP
                   00004800         AL    &R,=F'1' YES, ADJUST HI-ORDER
                     00004900ALD&SYSNDX AL  &R,&A GET HI-ORDER SUM
                     00005000         MEND
                     00005100./ ADD NAME=#ALDR
                                        MACRO
                       00000100&N       #ALDR &R1,&R2
                       00000200.*
                         00000300.*
                         00000400.*
                         00000500.* LAST CHANGE DATE - OCTOBER 18, 1983
                         00000600.*                    - MAILING ADDRESS CHANGE
                           00000700.*
                           00000800.* LAST CHANGE DATE - APRIL 21, 1981
                           00000900.*                    - MACRO NAME CHANGED FR
OM $ALDR TO #ALDR            00001000.*
                             00001100.* LAST CHANGE DATE - FEBRUARY 2, 1977
                             00001200.*                  - MAILING   ADDRESS CHA
NGE                            00001300.*
                               00001400.* LAST CHANGE DATE - FEBRUARY 3, 1976
                               00001500.*
                                 00001600.* THIS MACRO WAS WRITTEN BY DAVID B. C
OLE. ANY QUESTIONS CONCERNING IT 00001700.* MAY BE ADDRESSED TO:
                                 00001800.*       RR#2 BOX 712
                 +                 00001900.*       AFTON, VA. 22920
                                     00002000.*
                                     00002100.*
                                     00002200.*
                                       00002300.*   THIS MACRO SIMULATES A HYPOT
HETICAL "ADD LOGICAL DOUBLE REGISTER"  00002400.* MACHINE INSTRUCTION. ITS FUNCT
ION IS SIMILAR TO THE "ALR" MACHINE    00002500.* INSTRUCTION EXCEPT THAT IT OPE
RATES ON 64-BIT NUMBERS. WARNING,      000026  00.* THE RESULTING CONDITION CODE
 IS NOT AN ANALOGOUS EXTENSION FROM THE  00002700.* "ALR" INSTRUCTION.
                                         00002800.*
                                         00002900.* INNER MA  CROS USED - #TEST
                                           00003000.*
                                           00003100.*
                                           00003200.*
                                             00003300         GBLA  &#TESERR
                                             00003400         GBLC  &#TESRET(20)
                                             00003500         LCLA  &A1
                                               00003600         LCLC  &R1ODD,&R2
ODD                                            00003700&R1ODD   SETC  '&R1+1'
                                               00003800         #TEST REGS=&R1
                                                 00003900         AIF   (&#TESER
R NE 0).R1UNKN                                   00004000&A1      SETA  &#TESRET
(1)+1                                            00004100         AIF   (&A1 LE
15).GOTA1A                                         00004200&A1      SETA  0
                                                   00004300.GOTA1A  #TEST PFIX=
                                                   00004400&R1ODD   SETC  '&#TES
RET(1)&A1'                                         0000  4500.R1UNKN  ANOP
                                                     00004600&R2ODD   SETC  '&R2
+1'                                                  00004700         #TEST REGS
=&R2                                                 00004800           AIF   (&
#TESERR NE 0).R2UNKN                                   00004900&A1      SETA  &#
TESRET(1)+1                                            00005000         AIF   (&
A1 LE 15).GOTA1B                                       00005100&A1      SETA  0
                                                         00005200.GOTA1B  #TEST
PFIX=                                                    00005300&R2ODD   SETC
'&#TESRET(1)&A1'                                         00005400.R2UNKN  ANOP
                                                           00005500&N       ALR
  &R1ODD,&R2ODD LOW-ORDER SUM; HI-ORDER AFFECTED?          00005600         BC
  3,ALDR&SYSNDX NO, SKIP                                   00005700         BCTR
  &R1,0 YES, ADJUST HI-ORDER       +                         00005800ALDR&SYSNDX
 ALR &R1,&R2 GET HI-ORDER SUM                                  00005900
MEND                                                           00006000./ ADD NA
ME=#ASCB    0100-03155-03155-1415-00035-00035-00000-DBCOLE5
MACRO                                                            #ASCB
  #ASCB &DOC=,&LIST=                                         X20 05000000
  GBLB  &ASCB                                                V42 08000000
  GBLC  &#TIT,&#INFO(20)                                     X2  0 11000000
    GBLC  &SYSSPLV                                       03/93 X22 13000000
    LCLA  &A1                                            03/93 X22 16000000
    AIF   (&ASCB).MEND                                         V42 19000000&AS
CB    SETB  (1)                                                  V42 22000000&#T
IT    SETC  'ASCB -- ADDRESS SPACE CONTROL BLOCK'                X20 25000000&#I
NFO(1) SETC 'ASCB = ADDRESS SPACE CONTROL BLOCK'                 X20 27000000&#I
NFO(2) SETC '  ASCB = DSECT AND BASE'                              X20 30000000
        #TITDOC 'IHAASCB LIST=YES',                          03/93 X22*33000000
              DOC=&DOC,LIST=&LIST                                  X20 36000000
        IHAASCB LIST=YES                                       03/93 X22 3800000
0.*                                                            03/93 X22 4100000
0         SPLEVEL TEST              INSURE &SYSSPLV IS SET     03/93 X22 4400000
0&A1      SETA  &SYSSPLV            CNVRT T  O SETA              03/93 X22 47000
000         AIF   (&A1 LT 4).ESA4Z    SKIP IF OLDER THAN ESA4    03/93 X22 50000
000.*                                 MACLIBS                    03/93 X22 52000
000         #TUNDOC SOME                                           03/93 X22 550
00000         SPACE 3                                              03/93 X22 580
00000************************************************************* 03/93 X22 610
00000* THE FOLLOWING FIELDS WERE DROPPED STARTING WITH ESA-4     * 03/93   X22 6
3000000************************************************************* 03/93 X22 6
6000000         SPACE 1                                              03/93 X22 6
9000000         ORG   ASCB+X'190'                                    03/93 X22 7
2000000A  SCBTCPT DS    D                   ACCUMULATED TASK CPU TIME  03/93 X22
 75000000ASCBSCPT DS    D                   ACCUMULATED SRB CPU TIME   03/93 X22
 77000000         SPACE 1                                              03/93 X22
 80000000         ORG     ,                                              03/93 X
22 83000000         SPACE 1                                              03/93 X
22 86000000.ESA4Z   ANOP                                                 03/93 X
22 88000000&SYSLOC  LOCTR ,                                                07/02
 Z12 91000000         #TUNDOC ,                                            09/91
 X22 94000000.MEND    MEND  #ASCB                                          04/01
 S21 97000000./ ADD NAME=#CVT     0100-03155-03155-14+ 15-00077-00077-00000-DBCO
LE5                     MACRO
         #CVT             #CVT  &DOC=,&LIST=
     X20 05000000         GBLB  &#CVT
     X20 07000000         GBLC  &#TIT,&#INFO(20)
       X20 10000000         GBLC  &SYSSPLV
 03/93 X22 12000000         LCLA  &A1
 03/93 X22 15000000.*
   03/03 Z12 16000000         AIF   (&#CVT).MEND
         X20 17000000&#CVT    SETB  (1)
         X20 20000000.*
   03/03 Z12 210  00000&#TIT    SETC  'CVT -- COMMUNICATIONS VECTOR TABLE'
           X20 23000000&#INFO(1) SETC 'CVT      = Communications Vector Table',
     03/03 Z12*25500000               'CVTFIX   = Prefix and basic sections dsec
t',  03/03 Z12*26100000                 'CVTFIX   = Prefix section base',
       03/03 Z12*26600000               'CVTMAP   = Basic section base',
       03/03 Z12*27200000               'CVTXTNT1 = OS common extension dsect/ba
se',   03/03 Z12*27700000               'CVTXT  NT2 = VS1/VS2 common extension d
sect/base', 03 Z12*28300000               'CVTVSTGX = Virtual storage addresses
extension0dsect/ba*28800000               se',
         03/03 Z12*29400000               '***',
           03/03 Z12*29900000               '           FMID HISTORY',
           03/03 Z12*30500000               '           HBB3310: MVS/ESA 3.1',
           03/03 Z12*31000000               '           JBB3311: MVS/ESA 3.1  .1
',           03/03 Z12*31600000               '           JBB3313: MVS/ESA 3.1.3
',           03/03 Z12*32100000               '           HBB4410: MVS/ESA 4.1',
             03/03 Z12*32700000               '           HBB4420: MVS/ESA 4.2',
               03/03 Z12*33200000               '           JBB4422: MVS/ESA 4.2
.2',           03/03 Z12*33800000               '           HBB4430: MVS/ESA 4.3
',             03/03 Z12*34300000               '           HBB5510: MVS/ESA 5.1
',             03/03 Z12*3  4900000               '           HBB5520: MVS/ESA 5
.2',             03/03 Z12*35500000               '           JBB5522: MVS/ESA 5
.2.2',           03/03 Z12*36000000               '           HBB5530: MVS/ESA 5
.3',             03/03 Z12*36600000                 '           HBB6603: MVS/ESA
 5.3 (a.k.a. OS/390 R3)', 12*37100000               '           HBB6601: OS/390
 1.1',             03/03 Z12*37700000               '           JBB6602: OS/390
 1.2',             03/03 Z12*38200000               '             JBB6604: OS/39
0  2.4',             03/03 Z12*38800000               '           HBB6605: OS/39
0  2.5',             03/03 Z12*39300000               '           HBB6606: OS/39
0  2.6',             03/03 Z12*39900000               '           JBB66+ 07: OS/
390  2.7',             03/03 Z12*40400000               '           H  BB6608: O
S/390  2.8',             03/03 Z12*41000000               '           HBB6609: O
S/390  2.9',             03/03 Z12*41500000               '           JBB6609: O
S/390  2.9',             03/03 Z12*42100000               '           HBB7703: O
S/39  0  2.10',            03/03 Z12*42600000               '           JBB7713:
 z/OS    1.1',             03/03 Z12*43200000               '           HBB7705:
 z/OS    1.2',             03/03 Z12*43700000               '           HBB7706:
 z/OS    1.3',               03/03 Z12*44300000               '           HBB770
7: z/OS    1.4',             03/03 Z12*44800000               ''
                             03/03 Z12 45400000         #TITDOC 'CVT   DSECT=YES
,PREFIX=YES,LIST=YES',               X20*46000000               DOC=&DOC,LIST=&L
IST                                  X20 48000000         CVT   DSECT=YES,PREFIX
=YES,LIST=YES                            51000000.*
                               03/93 X22 53000000           SPLEVEL TEST
      INSURE &SYSSPLV IS SET     03/93 X22 56000000&A1      SETA  &SYSSPLV
      CNVRT TO SETA              03/93 X22 58000000         #TUNDOC SOME
                                 09/91 X22 61000000         SPAC  E 1
                                   09/91 X22 64000000CVTFIX   DSECT ,
        RESUME DSECT               09/91 X22 66000000CVT      EQU   CVTMAP
        LABEL USED BY THE PGSER          X14 69000000*
          MACRO IN MVS/XA AND THE    05/93 X22 71000000*
          TESTAUTH MACRO WITH        05/93 X22 74000000*
          BRANCH=YES IN ESA.         05/93 X22 76000000         AIF   (&A1 GE 3)
.XAZ                                   05/93 X22 79000000         SPACE 1
                                       09/91 X22 82000000CVTFIX   DSECT ,
                                       08/03 Z12 83000000         ORG   CVTDCB
            RELOCATE                     09/91 X22 84000000CVTOSEXT EQU   B'0000
1000'         CVTOSLVL EXISTS (MVS/ESA+) 09/91 X22 87000000         ORG   ,
                                         08/03 Z12 88000000.XAZ     ANOP
                                         03/  93 X22 89000000.*
                                           08/03 Z12 89006000.*
                                           08/03 Z12 89013000.*
                                           08/03 Z12 890200  00.****************
******************************************** 08/03 Z12 89026000.* The following
logic was submitted by Dave Andrews        * 08/03 Z12 89033000.* ("DBA", dba@du
da.com) of A. Duda and Sons, Inc. pursuant * 08/03 Z12 89040000.* to some   fixe
s he has made to the SCHEDRUN program (which * 08/03 Z12 89046000.* uses this sa
me #CVT macro). I have incorporated these    * 08/03 Z12 89053000.* changes into
 XDC for the sake of maintaining only a      * 08/03 Z12 89060000.* single versi
on of #CV+ T.                                  * 08/03 Z12 89066000.************
*******  ***************************************** 08/03 Z12 89073000.*
                                                   08/03 Z12 89080000         AI
F   (D'CVTLDTO).LDTODEF                            01/03 DBA 89086000CVTXTNT2 DS
ECT ,                                                01/03 DBA 89093000
ORG   CVTXTNT2+X'38'                                 01/03 DBA 89100000CVTLDTO
DS    0D                  CVTLDTO NOT IN CVT DEF'N   01/03 DBA 89106000CVTLDTOL
DS    F                        "                       01/03 DBA 89113000CVTLDTO
R DS    F                        "                     01/03 DBA 89120000
  ORG   ,                                              01/03 DBA 89126000.LDTODE
F ANOP  ,                                                01/03 DBA 89133000.*
                                                         08/03 Z12 89140000
    AIF   (D'CVTOSLVL).SLVLDEF                           01/03 DBA 89146000CVTFI
X   DSECT ,                                              08/03 Z12   89153000
      ORG   CVT+X'4F0'                                     01/03 DBA 89160000CVT
OSLVL DS    0XL16               CVTOSLVL NOT IN CVT DEF'N  01/03 DBA 89166000CVT
OSLV0 DS    BL1                      "                     01/03 DBA 89173000CVT
J4  422 EQU   X'01'                    "                     01/03 DBA 89180000C
VTOSLV1 DS    BL1                      "                     01/03 DBA 89186000C
VTOSLV2 DS    BL1                      "                     01/03 DBA 89193000C
VTOSLV3 DS    BL1                        "                     01/03 DBA 8920000
0CVTOSLV4 DS    BL1                      "                     01/03 DBA 8920600
0CVTOSLV5 DS    BL1                      "                     01/03 DBA 8921300
0CVTOSLV6 DS    BL1                        "                     01/03 DBA 89220
000CVTOSLV7 DS    BL1                      "                     01/03 DBA 89226
000CVTOSLV8 DS    BL1                      "                     01/03 DBA 89233
000CVTOSLV9 DS    BL1                      "                       01/03 DBA 892
40000CVTOSLVA DS    BL1                      "                     01/03 DBA 892
46000CVTOSLVB DS    BL1                      "                     01/03 DBA 892
53000CVTOSLVC DS    BL1                      "                       01/03 DBA 8
9260000CVTOSLVD DS    BL1                      "                     01/03 DBA 8
9266000CVTOSLVE DS    BL1                      "                     01/03 DBA 8
9273000CVTOSLVF DS    BL1                      "                     01/03 DB  A
 89280000         ORG   ,                                              01/03 DBA
 89286000.SLVLDEF ANOP  ,                                              01/03 DBA
 89293000.*                                                            05/03 Z12
 89300000           AIF   (D'CVTZOS_V1R6).DFRBPZ                         05/03 Z
12 89600000         SPACE 1                                              05/03 Z
12 90000000CVTFIX   DSECT ,                                              08/03 Z
12 90100000         ORG   C+ VTOSLV3            RELOCATE                   05/03
 Z12 90300000CVTZOS_V1R6   EQU B'00000001'        z/OS R1.6                  05/
03 Z12 90600000         ORG   ,                                              08/
03 Z12 90800000.DFRBPZ  ANOP                                                 05/
03 Z12 91000000.*                                                              0
5/03 Z12 91300000         SPACE 1                                              0
5/03 Z12 91600000&SYSLOC  LOCTR ,                                              0
7/02 Z12 92000000         #TUNDOC ,
 09/91 X22 94000000.MEND    MEND  #CVT
 04/01 S21 97000000./ ADD NAME=#DCB     0100-03155-03155-1415-00015-00015-00000-
DBCOLE5                     MACRO
             #DCB             #DCB  &DOC=,&LIST=
         X20 12000000         GBLB  &#DCB
         X20 18000000         GBLC  &#TIT,&#INFO(20)
           X20 25000000         AIF   (&#DCB).MEND
           X20 31000000&#DCB    SETB  (1)
           X20 37000000&#TIT    SETC  'DCB -- DATA CONTROL BLOCK'
           X20 43000  000&#INFO(1) SETC 'DCB      = DATA CONTROL BLOCK'
             X20 50000000&#INFO(2) SETC 'IHADCB   = DSECT AND BASE'
             X20 56000000         #TITDOC 'DCBD  DSORG=(PS,PO)',
             X20*62000000                 DOC=&DOC,LIST=&LIST
               X20 68000000         DCBD  DSORG=(PS,PO)
                   75000000&SYSLOC  LOCTR ,
         07/02 Z12 81000000         #TUNDOC ,
           09/91 X22 87000000.MEND    MEND  #DCB
           04/01 S21 93000000./ ADD NAME=#DCBD    0100-89169-89169-1034-02262-02
262-00000-DBCOLE1                     MACRO
                       00010000&N       #DCBD &DSORG=,&DEVD=
                   DBC 00020000.*
                   DBC 00030000.*
                     DBC 00040000.*
                         00050000.* LAST CHANGE DATE - APRIL 21, 1981
                         00060000.*                  - MACRO NAME CHANGED FROM $
DCBD TO #DCBD              00070000.*
                       DBC 00080000.* LAST CHANGE DATE - FEBRUARY 2, 1977
                       DBC 00090000.*                  - MAILING ADDRESS CHANGE.
                       DBC 001  00000.*
                         DBC 00110000.* LAST CHANGE DATE - APRIL 20, 1976
                             00120000.*
                         DBC 00130000.* THIS + MACRO IS A MODIFICATION OF IBM'S
DCBD MACRO FROM R21.7 OF   DBC 00140000.* O  S. ANY QUESTIONS CONCERNING IT MAY
BE ADDRESSED TO:             DBC 00150000.*       809 WHITNEY AVE.
                             DBC 00160000.*       NEW HAVEN, CT. 06511
                             DBC 00170000.*
                               DBC 00180000.*
                               DBC 00190000.*
                               DBC 00200000.*   THIS MACRO DUPLICATES THE   FUNC
TION OF IBM'S DCBD MACRO BUT     DBC 00210000.* WITH TWO IMPORTANT DIFFERENCES:
                                 DBC 00220000.* - THE DSECT STATEMENT IS NOT GEN
ERATED.                          DBC 00230000.* - A FACILITY IS PROVIDED WHEREBY
 THE FIR  ST THREE CHARACTERS      DBC 00240000.*   (I.E. "DCB") OF EACH FIELD N
AME (BUT NOT BIT NAME) CAN BE      DBC 00250000.*   REPLACED BY ANY ONE, TWO, OR
 THREE CHARACTERS OF YOUR CHOICE.  DBC 00260000.* AS A RESULT, THE #DCBD MACRO C
AN BE USED ANY NUMBER O  F TIMES IN  DBC 00270000.* AN ASSEMBLY. REFER TO THE EX
AMPLES GIVEN BELOW FOR A             DBC 00280000.* PARTICULARLY USEFUL TECHNIQU
E.                                   DBC 00290000.*
                                     D  BC 00300000.*   THIS MACRO USES THE SAME
 OPERANDS AS DOES THE DCBD MACRO, SO   DBC 00310000.* PLEASE REFER TO IBM'S DATA
 MANAGEMENT MACROS MANUAL FOR FURTHER  DBC 00320000.* DETAILS CONCERNING THEM.
                                       DBC 00330000.*     IN ADDITION TO THE OPE
RANDS, THE #DCBD MACRO RECOGNIZES THE    DBC 00340000.* NAME FIELD WHICH SHOULD
EITHER BE OMITTED OR CONTAIN A ONE, TWO, DBC 00350000.* OR THREE CHARACTER NAME.
 IF THE NAME FIELD IS OMITTED, THEN THE  DBC 00360000.* CHARACTERS "  DCB" ARE U
SED TO PREFIX ALL FIELD NAMES. IF THE NAME DBC 00370000.* FIELD IS GIVEN, THEN I
T RATHER THAN "DCB" IS USED TO PREFIX ALL  DBC 00380000.* FIELD NAMES. IF THE GI
VEN NAME IS LONGER THAN THREE CHARACTERS,  DBC 00390000.* THEN ASSEMBLY ERRORS A
RE   LIKELY TO RESULT.                       DBC 00400000.*
                                             DBC 00410000.*   AS INDICATED ABOVE
, THE GIVEN NAME FIELD AFFECTS ONLY FIELD    DBC 00420000.* NAMES (E.G. "DCBOFLG
S" MIGHT BE CHANGE  D TO "RDROFLGS"), BUT BIT  DBC 00430000.* NAMES (E.G. "DCBOF
OPN") ARE NEVER AFFECTED, SINCE THE PREFIX     DBC 00440000.* "DCB" WILL BE USED
 REGUARDLESS OF WHAT IS GIVEN IN THE NAME      DBC 00450000.* FIELD, SO IN ORDER
 TO TEST, FOR EXAMPLE, IF A DCB H  AS BEEN       DBC 00460000.* OPENED, YOU MIGH
T USE  " TM RDROFLGS,DCBOFOPN ".                 DBC 00470000.*   IN ADDITION, A
 PARTICULAR BIT NAME WILL BE GENERATED ONLY BY   DBC 00480000.* THE FIRST #DCBD
MACRO THAT REQUIRES IT, THUS A PARTICULAR BIT      DBC 00490000.* NAME WILL BE G
ENERATED ONLY ONCE PER ASSEMBLY.                   DBC 00500000.*
                                                   DBC 00510000.*   EXAMPLES - I
 HAVE FOUND THAT THE MOST VALUABLE USE OF THE      DBC 00520000            _ .*
#DCBD MACRO HAS BEEN IN SIMPLIFYING THE PROCEDURE FOR REFERING   DBC 00530000.*
TO DCB FIELDS WITHOUT USING A SPECIAL BASE REGISTER. CONSIDER    DBC 00540000.*
THE FOLLOWING EXAMPLES:                                          DBC 00550000.
*                                                                  DBC 00560000.
*       PRINT NOGEN (IF YOU'VE SEEN ONE DCB, YOU'VE SEEN THEM ALL) DBC 00570000.
*                                                                  DBC 00580000.
*RDR    #DCBD   DSORG=QS                                             DBC 0059000
0.*       ORG   RDRDCB                                               DBC 0060000
0.*SYSIN  DCB   DDNAME=SYSIN,DSORG=PS, ...                           DBC 0061000
0.*                                                                    DBC 00620
000.*SYSPRINT DCB DDNAME=SYSPRINT,DSORG=PS, ...                        DBC 00630
000.*       ORG   SYSPRINT                                             DBC 00640
000.*PRT    #DCBD DSORG=QS                                               DBC 006
50000.*                                                                  DBC 006
60000.*       ORG   *-16                                                 DBC 006
70000.*UT1    #DCBD DSORG=IS                                               DBC 0
0680000.*       ORG   UT1DCB+16                                            DBC 0
0690000.*SYSUT1 DCB   DDNAME=SYSUT1,DSORG=IS, ...                          DBC 0
0700000.*                                                                    DBC
 00710000.*SYSUT2 DCB   DDNAME=SYSUT2,DSORG=IS, ...                          DBC
 00720000.*       ORG   SYSUT2                                               DBC
 00730000.*UT2    #DCBD DSORG=IS                                             DBC
 0074000  0.*                                                                  D
BC 00750000.*       PRINT GEN                                                  D
BC 00760000.*                                                                  D
BC 00770000.*   IN THE   FIRST AND THIRD EXAMPLES (RDR AND UT1), THE #DCBD MACRO
 DBC 00780000.* GENERATES FIELD NAMES (E.G. "RDROFLGS" AND "UT1OFLGS"); THE ORG
 DBC 00790000.* STATEMENT RESETS THE LOCATION COUNTER TO THE START OF THE FIELD
 DBC 00800000.* NAMES; AND THE DCB MAC  RO GENERATES THE ACTUAL DCB'S ON TOP OF
   DBC 00810000.* THE FIELD NAMES.
   DBC 00820000.*   IN THE SECOND AND FOURTH EXAMPLES (PRT AND UT2) THE DCB MACR
O  DBC 00830000.* GENERATES THE DCB CODE; THE ORG STA  TEMENT RELOCATES BACK TO
THE  DBC 00840000.* START OF THE DCB; AND THEN THE #DCBD MACRO GENERATES THE FIE
LD   DBC 00850000.* NAMES ON TOP OF THE DCB CODE. NOTE THAT THE DCB CODE IS NOT
     DBC 00860000.* DESTROYED BECAUSE THE #DCBD MACRO GENERATES ONLY   DS
       DBC 00870000.* INSTRUCTIONS.
       DBC 00880000.*   BIT NAMES ARE GENERATED ONLY BY THE FIRST AND THIRD #DCB
D      DBC 00890000.* MACROS. THE SECOND MACRO HAS THE IDENTICAL EXPANSION PATH
AS + THE DBC 00900000.* FIRST, SO ALL BIT NAMES THAT IT MIGHT HAVE GENERATED WOU
L  D HAVE  DBC 00910000.* BEEN REDUNDANT, SO NONE IS GENERATED. THE SAME CAN BE
SAID FOR   DBC 00920000.* THE FOURTH #DCBD MACRO WITH RESPECT TO THE THIRD. THE
THIRD      DBC 00930000.* #DCBD MACRO HAS A DIFFERENT EXPANSION PATH FROM EITHER
 OF THE    DBC 0  0940000.* PRECEEDING TWO, SO SOME OF THE BIT NAMES THAT IT WOU
LD HAVE      DBC 00950000.* GENERATED ARE NOT REDUNDANT. THOSE BIT NAMES THAT AR
E REDUNDANT  DBC 00960000.* ARE NOT GENERATED. THOSE BIT NAMES THAT ARE NOT REDU
NDANT ARE    DBC 00970000.* GEN  ERATED.
               DBC 00980000.*   BOTH THE THIRD AND FOURTH DCB'S ARE ISAM, SO ONL
Y A SHORT      DBC 00990000.* DEVICE DEPENDANT SECTION IS GENERATED BY THE DCB M
ACRO. TO       DBC 01000000.* ACCOMPLISH THIS,   THE DCB MACRO RELOCATES BACK 16
 BYTES,          DBC 01010000.* GENERATES THE DCB NAME, RELOCATES FORWARD 16 BYT
ES, AND THEN     DBC 01020000.* GENERATES THE DCB CODE. ON THE OTHER HAND, THE P
RIMARY FUNCTION  DBC 01030000.* OF THE DCBD MACRO AND, THEREF  ORE, THE #DCBD MA
CRO IS TO CREATE   DBC 01040000.* DSECTS. BECAUSE OF THIS IT WOULD BE LOGICALLY
INCONSISTANT FOR   DBC 01050000.* THEM TO ATTEMPT TO RELOCATE BACKWARD PRIOR TO
DEFINING THE       DBC 01060000.* STARTING POINT. THEREFORE, IN THE CASE OF   IS
AM (AND BDAM, AND    DBC 01070000.* EXCP, ETC.), THE DCBD AND #DCBD MACROS FIRST
 DEFINE THE STARTING DBC 01080000.* NAME AND THEN RELOCATE FORWARD (USUALLY 16 B
YTES) BEFORE         DBC 01090000.* DEFINING FIELD NAMES. IT IS FOR THIS REASON
THAT THE EX  TRA ORG   DBC 01100000.* STATEMENT APPEARS IN THE THIRD EXAMPLE ABO
VE. IN THE FOURTH      DBC 01110000.* EXAMPLE THE EXTRA ORG STATEMENT IS NOT NEE
DED.                   DBC 01120000.*
                       DBC   01130000.*
                         DBC 01140000.*
                         DBC 01150000.* INNER MACROS USED - #DSORG
                         DBC 01160000.*
                           DBC 01170000         GBLB  &#DCBDSG
                           DBC 01180000         GBLB  &#DCBSW(150)
                           DBC 01190000         GBLB  &O  NESW
                                 01200000         GBLA  &IEZBITS
                                 01210000         LCLA  &A0            FOR DSORG
= AND DEVD= ANALYSIS LOOPS       01220000         LCLB  &DSORGIS         SET BY
DSORG=IS - ISAM                    01230000         LCLB  &DSORGBX       SET BY
DSORG=BX OR CX - BTAM              01240000         LCLB  &DSORGDA       SET BY
DSORG=DA - BDAM                    01250000         LCLB  &DSORGQX       SET BY
DSORG=  QX OR CX - QTAM              01260000         LCLB  &DSORGCQ       SET B
Y DSORG=CQ - QTAM DIRECT ACCESS      01270000.*                            MESSA
GE QUEUE                             01280000         LCLB  &DSORGMQ       SET B
Y DSORG=MQ - QTAM PRO+ BLEM PROGRAM    01290000.*                            MES
SAGE QUEUE INTERFAC  E                   01300000         LCLB  &DSORGXA       S
ET BY DSORG=XA - EXCP WITH APPENDAGES    01310000         LCLB  &DSORGQS       S
ET BY DSORG=QS OR PS - QSAM              01320000         LCLB  &DSORGBS       S
ET BY DSORG=BS OR PS OR PO - BSAM,  BPAM   01330000         LCLB  &DSORGXE
 SET BY DSORG=XE - EXCP WITH EXTENSION     01340000         LCLB  &DSORGLR
 SET BY DSORG=LR - DCBLRECL FIELD ONLY     01350000         LCLB  &DSORGGS
 SET BY DSORG=GS - GAM                     013600  00         LCLB  &DSORGTX
   SET BY DSORG=TX - TCAM LINE GROUP         01370000         LCLB  &DSORGTQ
   SET BY DSORG=TQ - TCAM MESSAGE QUEUE      01380000         LCLB  &DSORGTR
   SET BY DSORG=TR 3705 LINE GROUP    S22024 01390000         LC  LB  &DEVDDA
     DIRECT ACCESS                             01400000         LCLB  &DEVDTA
     MAGNETIC TAPE                             01410000         LCLB  &DEVDPT
     PAPER TAPE                                01420000         LCLB  &DEVDRD
       READER OR PUNCH, DEVD=RD OR PC            01430000         LCLB  &DEVDPR
       PRINTER                                   01440000         LCLB  &DEVDBS
       BINARY SYNCHRONOUS                        01450000         LCLB  &DEVDWT
       WORLD T  RADE TELEGRAPH                     01460000         LCLB  &DEVDM
R        MAGNETIC CARD READER                      01470000         LCLB  &DEVDO
R        OPTICAL READER                            01480000         LCLC  &C0
         SET TO EACH VALUE OF   DSORG AND DEVD       01490000         LCLB  &LSW
(150)                                            DBC 01500000         LCLC  &P
                                                 DBC 01510000&A0      SETA  0
                                                   DBC 01520000.LPXYZ   AIF   (&
A0 EQ 150).ENDXYZ                                  DBC 01530000&A0      SETA  &A
0+1                                                DBC 01540000&#DCBSW(&A0) SETB
 (&#DCBSW(&A0) OR &ONESW)                          DBC 0155  0000         AGO
.LPXYZ                                               DBC 01560000.ENDXYZ  ANOP
                                                     DBC 01570000&#DCBDSG SETB
(&#DCBDSG OR &ONESW)                                 DBC 01580000&P         SETC
  'DCB'                                                DBC 01590000         AIF
  ('&N' EQ '').GOTPFIX                                 DBC 01600000&P       SETC
  '&N'                                                 DBC 01610000.GOTPFIX ANOP
                                                         DBC 01620000         AI
F   (&IEZBITS GT 0).SETBTS                                   01630000&IEZBITS SE
TA  1                                                        01640000BIT0     EQ
U   128                                                        01650000BIT1
EQU   64                                                       01660000BIT2
EQU   32                                                       01670000BIT3
EQU   16                               +                         01680000BIT4
  EQU   8                                                          01690000BIT5
    EQU   4                                                        01700000BIT6
    EQU   2                                                        01710000BIT7
    EQU   1                                                          01720000.SE
TBTS  ANOP                                                           01730000.*
                                                                     01740000.*
                 ANALYZE DSORG OPERAND                                 01750000.
*                                                                      01760000&
A0      SETA  N'&DSORG       SET NUMBER OF DSORG FLEMENTS              01770000.
A1      AIF   (&A0 LE 0).D0  IF ZERO, LOOP FINISHED                    01780000&
C0        SETC  '&DSORG(&A0)'  SET TO A DSORG ELEMENT                    0179000
0.*                                                                      0180000
0.*                  TEST FOR VALID DSORG ELEMENT                        0181000
0.*                                                                        01820
000         AIF   ('&C0' EQ 'IS' OR '&C0' EQ 'PS' OR '&C0' EQ 'BS' OR     *01830
000               '&C0' EQ 'QS' OR '&C0' EQ 'DA' OR '&C0' EQ 'CX' OR      *01840
000               '&C0' EQ 'CQ'   OR '&C0' EQ 'MQ' OR '&C0' EQ 'LR').A2      018
50000         AIF   ('&C0' EQ 'XE' OR '&C0' EQ 'XA' OR '&C0' EQ 'PO' OR     *018
60000               '&C0' EQ 'BX' OR '&C0' EQ 'QX' OR '&C0' EQ 'GS' OR      *018
70000               '&C0' EQ 'TX' OR '&C0' EQ '  TQ' OR '&C0' EQ '').A2        0
1880000         AIF   ('&C0' EQ 'TR').A2                                S22024 0
1890000         IHBERMAC 156,DSORG,&C0                                         0
1900000         AGO   .AA
 01910000.*
 01920000.*                  SET VARIABLES FOR DSORG
 01930000.*
   01940000.A2      ANOP
   01950000&DSORGIS SETB  (&DSORGIS OR '&C0' EQ 'IS')
   01960000&DSORGBX SETB  (&DSORGBX OR '&C0' EQ 'BX' OR '&C0' EQ 'CX')
   01970000&  DSORGDA SETB  (&DSORGDA OR '&C0' EQ 'DA')
     01980000&DSORGQX SETB  (&DSORGQX OR '&C0' EQ 'QX' OR '&C0' EQ 'CX')
     01990000&DSORGCQ SETB  (&DSORGCQ OR '&C0' EQ 'CQ')
     02000000&DSORGMQ SETB    (&DSORGMQ OR '&C0' EQ 'MQ')
       02010000&DSORGXA SETB  (&DSORGXA OR '&C0' EQ 'XA')
       02020000&DSORGQS SETB  (&DSORGQS OR '&C0' EQ 'QS' OR '&C0' EQ 'PS')
       02030000&DSORGBS SETB  (&DSORGBS OR   '&C0' EQ 'BS' OR '&C0' EQ 'PS' OR '
&C0' EQ *02040000               'PO')
         02050000&DSORGXE SETB  (&DSORGXE OR '&C0' EQ 'XE')
         02060000&DSORGLR SETB  (&DSORGLR OR '&C0' EQ 'LR+ ')
           02070000&DSORGGS SETB  (&DSORGGS OR '&C0' EQ   'GS')
             02080000&DSORGTX SETB  (&DSORGTX OR '&C0' EQ 'TX')
             02090000&DSORGTQ SETB  (&DSORGTQ OR '&C0' EQ 'TQ')
             02100000&DSORGTR SETB  (&DSORGTR OR '&C0' EQ 'TR')
        S22024 02110000.AA      ANOP
               02120000&A0      SETA  &A0-1          DECREMENT ELEMENT COUNTER
               02130000         AGO   .A1            TO DO NEW LOOP
                 02140000.*
                 02150000.*                  TEST FOR ANY VALID DSORG OPERAND
                 02160000.*
                 021  70000.D0      AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &
DSORGQX OR        *02180000               &DSORGCQ OR &DSORGMQ OR &DSORGXA OR &D
SORGQS OR         *02190000               &DSORGBS OR &DSORGXE OR &DSORGLR OR &D
SORGGS).D0A        02200000           AIF   (&DSORGTX OR &DSORGTQ OR &DSORGTR).D
0A            S22024 02210000         IHBERMAC 173
                     02220000.D0A     ANOP
                     02230000         AIF   (T'&DE  VD NE 'O').D1      BRANCH IF
 DEVD CODED       1318 02240000         AIF   (&DSORGGS).B1
                       02250000         AIF   (NOT (&DSORGQS OR &DSORGBS OR &DSO
RGXE)).B1              02260000.*
                         02270000.*                  SET DEVD DEFAULTS
                         02280000.*
                         02290000&DEVDDA  SETB  1
                           02300000&DEVDTA  SETB  ('&DSORG' NE '(PO)')
                           02310000&DEVDPT  SETB  ('&DSORG' NE '(PO)')
                           02320000&DEVDPR  SETB  ('&DSORG' NE '(PO)')
                             02330000&DEVDRD  SETB  ('&DSORG' NE '(PO)')
                             02340000&DEVDMR  SETB  ('&DSORG' NE '(PO)')
                             02350000&DEVDOR  SETB  ('&DSORG' NE '(PO)')
                             0  2360000         AIF   ('&DSORG' EQ '(PO)').D1
                               02370000         IHBERMAC 174
                               02380000         AGO   .B1
                               02390000.D1        ANOP
                                 02400000.*
                                 02410000.*                  ANALYZE DEVD OPERAN
D                                02420000.*
                                   02430000&A0      SETA  N'&DEVD        SET ELE
MENT COUNT                         02440000.D2      ANOP
                                   02450000         AIF   (&A0 LE 0).B1  IF+  ZE
RO, LOOP FINISHED                    02460000&C0      SETC  '&DEVD(&A0)'     SET
 TO A DEVD ELEMENT                     02470000.*
                                       02480000.*                  TEST FOR VALI
D DEVD ELEMENT                         02490000.*
                                         02500000         AIF   ('&C0' EQ 'DA' O
R '&C0' EQ 'TA' OR '&C0' EQ 'PT' OR     *02510000               '&C0' EQ 'PR' OR
 '&C0' EQ 'RD' OR '&C0' EQ 'PC' OR      *02520000               '&C0' EQ 'BS' OR
 '&C0' EQ 'WT').D3                         02530000         AIF   ('&C0' EQ 'MR'
 OR '&C0' EQ 'OR').D3                      02540000         AIF   ('&C0' EQ '').
D4                                         02550000         IHBERMAC 157,DEVD,&C
0                                            02560000         AGO   .D4
   TO DO NEW LOOP                            02570000.*
                                             02580000.*                  SET VAR
IABLES FOR DEVD                              02590000  .*
                                               02600000.D3      ANOP
                                               02610000&DSORGXE SETB  (&DSORGXE
OR T'&DSORG EQ 'O') FORCE EXCP EXTENDED        02620000&DEVDDA  SETB    (&DEVDDA
 OR '&C0' EQ 'DA')    DIRECT ACCESS DEVICE       02630000&DEVDTA  SETB  (&DEVDTA
 OR '&C0' EQ 'TA')    MAGNETIC TAPE DEVICE       02640000&DEVDPT  SETB  (&DEVDPT
 OR '&C0' EQ 'PT')    PAPER TAPE DEVICE          02650000&DEVDPR  SETB  (&DEVDPR
 OR   '&C0' EQ 'PR')    PRINTER                    02660000&DEVDRD  SETB  (&DEVD
RD OR '&C0' EQ 'RD' OR '&C0' EQ 'PC') READER,PUNCH 02670000&DEVDBS  SETB  (&DEVD
BS OR '&C0' EQ 'BS')    BINARY SYNCHRONOUS COMM.   02680000&DEVDWT  SETB  (&DEVD
WT OR '&C0' EQ 'WT  ')    WORLD TRADE TELEGRAPH      02690000&DEVDMR  SETB  (&DE
VDMR OR '&C0' EQ 'MR')    MAGNETIC CHAR READER       02700000&DEVDOR  SETB  (&DE
VDOR OR '&C0' EQ 'OR')    OPTICAL READER             02710000.D4      ANOP
                                                       02720000&A0      SETA  &A
0-1          DECREMENT ELEMENT COUNTER                 02730000         AGO   .D
2            TO DO NEW LOOP                            02740000.*
                                                         02750000.B1      ANOP
                                                         02760000         AIF
('&DSORG(1)' EQ 'LR').BA SKIP OVER COMMENTS              02770000         SPACE
2                                                        027800  00*
           DCB SYMBOLIC DEFINITION FOR                     02790000         AIF
  (NOT &DSORGIS).B2                                        02800000*
           INDEXED SEQUENTIAL                              02810000.B2      AI
F   (NOT (&DSORGQS AND &DSORGBS)).B2A                        02820000*
             PHYSICAL SEQUENTIAL                             02830000         AG
O   .B3                                                      02840000.B2A     AI
F   (NOT &DSO+ RGQS).B2B                                       02850000*
                 QSAM                                            02860000.B2B
  AIF   (NOT &DSORGBS).B3                                        02870000*
                 BSAM-BPAM                                       02880000.B3
  AIF   (NOT &DSORGDA).B4                                          02890000*
                   DIRECT ACCESS                                   02900000.B4
    AIF   (NOT (&DSORGBX AND &DSORGQX)).B4A                        02910000*
                   COMMUNICATIONS LINE GR  OUP                       02920000
      AGO   .B5                                                      02930000.B4
A     AIF   (NOT &DSORGBX).B4B                                       02940000*
                     BTAM LINE GROUP                                   02950000.
B4B     AIF   (NOT &DSORGQX).B5                                        02960000*
                       QTAM LINE GROUP                                 02970000.
B5      AIF   (NOT &DSORGCQ).B6                                          0298000
0*                       COMMUNICATIONS DIRECT ACCESS QUEUE              0299000
0.B6      AIF   (NOT &DSORGMQ).B6A                                       0300000
0*                       QTAM MESSAGE QUEUE                              0301000
0.B6A       AIF   (NOT &DSORGTX).B6B                                       03020
000*                       TCAM LINE GROUP                                 03030
000.B6B     AIF   (NOT &DSORGTQ).B6C                                S22024 03040
000*                         TCAM MESSAGE QUEUE                              030
50000.B6C     AIF   (NOT &DSORGTR).B7                                 S22024 030
60000*                       3705 LINE GROUP                                 030
70000.B7      AIF   (NOT (&DSORGXA A  ND &DSORGXE)).B8                         0
3080000*                       EXCP WITH EXTENSION AND APPENDAGES              0
3090000         AGO   .BA                                                      0
3100000.B8      AIF   (NOT &DSORGXE).B9
 03110000*                       EXCP WITH EXTENSION
 03120000         AGO   .BA
 03130000.B9      AIF   (NOT &DSORGXA).B0
   03140000*                       EXCP WITH APPENDAGES
   03150000         AGO   .BA
   03160000.B0      AIF   (NOT &DSORGGS).B00
     03170000*                       GRAPHICS WITH APPENDAGES
     03180000         AGO   .BA
     03190000.B00     AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQX OR
    *03200000                 &DSORGCQ OR &DSORGMQ OR &DSORGQS OR &DSORGBS OR
      *03210000               &DSORGTX OR &DSORGTQ OR &DSORGLR OR &DSORGTR).BA
S22024 03220000*                       EXCP WITH EXTENSION
       03230000&DSORGXE SETB  1+
         03240000.BA      ANO  P
           03250000         SPACE 1
           03260000*************************************************************
*********  03270000*   02/29/72          LEV  EL=04
             03280000*
             03290000***********************************************************
***********  03300000         SPACE 1
               03310000         AIF   (&DSORGGS).SLIP
               03320000&LSW(001) SETB (1)
           DBC 03330000&P.DCB   DS    0A                  FULLWORD ALIGNME  NT
             DBC 03340000         SPACE 1
                 03350000         AIF   (NOT (&DEVDDA OR &DEVDTA OR &DEVDPT OR &
DEVDPR OR       *03360000               &DEVDRD OR &DEVDWT OR &DEVDOR OR &DEVDMR
)).C4              03370000&LSW(002) SETB (1)
               DBC 03380000*                       DEVICE INTERFACES
                   03390000         SPACE 1
                   03400  000         AIF   (NOT &DEVDDA).C1
                     03410000&LSW(003) SETB (1)
                 DBC 03420000*                       DIRECT ACCESS DEVICES
                     03430000         S  PACE 1
                       03440000&P.RELAD DS    CL4 -          PARTITIONED ORGANIZ
ATION DATA SET -       03450000*                             ADDRESS (IN THE FOR
M TTRN) OF MEMBER      03460000*                               CURRENTLY USED.
---                      03470000*                             SYS1.LOGREC DATA
SET - IF CCH OPTION HAS  03480000*                             BEEN SPECIFIED IN
 SYSGEN PROCESS, ADDRESS 03490000*                             OF A 1  2-BYTE PA
RAMETER IN THE EXPANSION   03500000*                             OF MACRO INSTRU
CTION IGFCATAP             03510000&P.KEYCN DS    FL1 -          KEYED BLOCK OVE
RHEAD CONSTANT             03520000&P.FDAD  DS    CL8 -          FULL DISK ADDRE
SS I  N THE FORM OF MBBCCHHR 03530000*                             OF RECORD THA
T WAS JUST READ OR WRITTEN   03540000         SPACE 1
                             03550000         ORG   &P.FDAD+7
                               03560000&P.DVTBL DS    0A -           SAME AS DCB
DVTBA BELOW                    03570000         DS    X -            LAST BYTE O
F DCBFDAD                      03580000&P.DVTBA DS    AL3 -          ADDRESS OF
ENTRY IN I/O DEVICE            035  90000*                             CHARACTER
ISTICS TABLE FOR DEVICE BEING    03600000*                             USED
                                 03610000         DS    FL1 -          DCBKEYLE
- KEY LENGTH OF DATA SET         03620000        +  DS    C -            DCBDEVT
 - DEVICE TYPE                     03630000*     FOR MASKS FOR ISAM DIRECT ACCES
S, SEE DCBOVDEV IN ISAM SECTION      03640000         AIF   (&#DCBSW(003)).SKP00
3A                               DBC 03650000DCBDV311 EQU   X'21' -        2311
DISK DRIVE                           03660000DCBDV301 EQU   X'  22' -        230
1 PARALLEL DRUM                        03670000DCBDV303 EQU   X'23' -        230
3 SERIAL DRUM                          03680000DCBDV302 EQU   X'24' -        230
2 DISK STORAGE                         03690000DCBDV321 EQU   X'25' -          2
321 DATA CELL DRIVE                      03700000DCBDV314 EQU   X'28' -        2
314 DISK STORAGE FACILITY                03710000.SKP003A ANOP  ,
                                     DBC 03720000&P.TRBAL DS    H -            T
RACK BALANCE  .  NUMBER OF BYTES REMAINING 03730000*
 ON CURRENT TRACK AFTER A WRITE OPERATION  03740000*
 (THIS QUANTITY MAY BE NEGATIVE IF THERE   03750000*
 ARE NO BYTES REMAINING ON   TRACK).         03760000         SPACE 1
                                             03770000.C1      AIF   (NOT &DEVDTA
).C2                                         03780000&LSW(004) SETB (1)
                                         D  BC 03790000*                       M
AGNETIC TAPE                                   03800000         SPACE 1
                                               03810000         ORG   &P.DCB
                                               03820000           DS    CL12 -
       RESERVED FOR I/O SUPERVISOR               03830000&P.BLKCT DS    F -
       BLOCK COUNT FOR EACH VOLUME               03840000&P.TRTCH DS    C -
       TAPE RECORDING TECHNIQUE FOR 7-TRACK TAPE 03850000         AIF     (&#DCB
SW(004)).SKP004A                               DBC 03860000DCBMTE   EQU   X'23'
-        E  - EVEN PARITY                          03870000DCBMTT   EQU   X'3B'
-        T  - BCD/EBCDIC TRANSLATION               03880000DCBMTC   EQU   X'13'
-          C  - DATA CONVERSION                      03890000DCBMTET  EQU   X'2B
' -        ET - EVEN PARITY AND TRANSLATION          03900000.SKP004A ANOP  ,
                                                 DBC 03910000         DS    C -
           DCBDEVT - D  EVICE TYPE                     03920000         AIF   (&
#DCBSW(004)).SKP004B                               DBC 03930000DCBDVMT  EQU   X'
81' -        2400 SERIES MAGNETIC TAPE UNIT (7-TRACK   03940000*
             OR 9-TRACK)                                 03950000DCBDVMT3 EQU
X'83' -        3400 SERIES MAGNETIC TAPE UNIT     ICB277 03960000.SKP004B ANOP
,                                                    DBC 03970000&P.DEN   DS
C -            TAPE DENSITY - 2400 SERIES MAGNETIC T  APE  03980000*
                 UNITS                                     03990000         AIF
  (&#DCBSW(004)).SKP004C                               DBC 04000000*
                 CODE    7-TRACK     9-TRACK               04010000            _
 DCBMTDN0 EQU   X'03' -         0       200 BPI       -                  0402000
0DCBMTDN1 EQU   X'43' -         1       556 BPI       -                  0403000
0DCBMTDN2 EQU   X'83' -         2       800 BPI     800 BPI              0404000
0D  CBMTDN3 EQU   X'C3' -         3         -        1600 BPI              04050
000.SKP004C ANOP  ,                                                    DBC 04060
000         DS    X -            RESERVED                                  04070
000         SPACE   1                                                        040
80000.C2      AIF   (NOT &DEVDPT).C3                                         040
90000&LSW(005) SETB (1)                                                  DBC 041
00000*                       PAP  ER TAPE                                      0
4110000         SPACE 1                                                        0
4120000         ORG   &P.DCB+8                                                 0
4130000&P.LCTBL DS    A -            ADDRESS OF   TRANSLATE TABLE
 04140000         DS    XL4 -          RESERVED
 04150000&P.CODE  DS    C -            PAPER TAPE CODE BEING USED.  THE
 04160000*                             APPROPRIATE TRANSLATE T  ABLE IS MADE
   04170000*                             AVAILABLE
   04180000         AIF   (&#DCBSW(005)).SKP005A                               D
BC 04190000DCBPTCDN EQU   X'80' -        N - NO CONVERSION
     04200000DCBPTCDI EQU   X'40' -        I - IBM BCD
     04210000DCBPTCDF EQU   X'20' -        F - FRIDEN
     04220000DCBPTCDB EQU   X'10' -        B - BURROUGHS
     0423000  0DCBPTCDC EQU   X'08' -        C - NATIONAL CASH REGISTER
       04240000DCBPTCDA EQU   X'04' -        A - ASCII (8-TRACK)
       04250000DCBPTCDT EQU   X'02' -        T - TELETYPE
       04260000.SKP005A ANO  P  ,
     DBC 04270000         DS    C -            DCBDEVT - DEVICE TYPE
         04280000         AIF   (&#DCBSW(005)).SKP005B
     DBC 04290000DCBDVPTP EQU   X'50' -          2671 PAPER TAPE READER
           04300000.SKP005B ANOP  ,
       DBC 04310000         DS    X -            RESERVED
           04320000&P.PTFLG DS    BL1 -          PAPER TA  PE FLAGS
             04330000         AIF   (&#DCBSW(005)).SKP005C
         DBC 04340000DCBPTIC  EQU   BIT3 -         INVALID CHARACTER IN LAST REC
ORD READ     04350000DCBPTECT EQU   BIT4 -         END OF RECORD CHARACT  ER REA
CHED IN        04360000*                             TRANSLATION
               04370000DCBPTECR EQU   BIT5 -         END OF RECORD CHARACTER DET
ECTED DURING   04380000*                             READ
       +         04390000DCBPTUCT EQU   BIT6 -         IF ONE, UPPER CASE TRANSL
ATE.               04400000*                             IF ZERO, LOWER CASE TRA
NSLATE             04410000DCBPTERR EQU   BIT7 -         ERROR DETECTED ON READ
                   04420000.SKP005C ANOP  ,
               DBC 0  4430000         SPACE 1
                     04440000.C3      AIF   (NOT &DEVDPR).C3A
                     04450000&LSW(006) SETB (1)
                 DBC 04460000*                         PRINTER
                       04470000         SPACE 1
                       04480000         ORG   &P.DCB+16
                       04490000&P.PRTSP DS    C -              NUMBER INDICATING
 NORMAL PRINTER SPACING  04500000         AIF   (&#DCBSW(006)).SKP006A
                     DBC 04510000DCBPRSP0 EQU   X'01' -        0 - NO SPACING
                         04520000DCBPRSP1 EQU   X'09' -        1   - SPACE ONE L
INE                        04530000DCBPRSP2 EQU   X'11' -        2 - SPACE TWO L
INES                       04540000DCBPRSP3 EQU   X'19' -        3 - SPACE THREE
 LINES                     04550000.SKP006A ANOP  ,
                         DBC 04560000         DS    C -            DCBDEVT - DEV
ICE TYPE                     04570000         AIF   (&#DCBSW(006)).SKP006B
                         DBC 04580000DCBDVPR1 EQU   X'48' -        1403 PRINTER
AND 1404 PRINTE  R (CONTINUOUS 04590000*                             FORM SUPPOR
T ONLY)                        04600000DCBDVPR2 EQU   X'4A' -        1443 PRINTE
R                              04610000DCBDVPR3 EQU   X'49' -        3211 PRINTE
R                                04620000.SKP006B ANOP  ,
                             DBC 04630000&P.PRTOV DS    C -            TEST-FOR-
PRINTER-OVERFLOW MASK            04640000*                             (PRTOV MA
SK)                              04650000           AIF   (&#DCBSW(006)).SKP006C
                               DBC 04660000DCBPRC9  EQU   X'20' -        9  - TE
ST FOR CHANNEL 9 OVERFLOW          04670000DCBPRC12 EQU   X'10' -        12 - TE
ST FOR CHANNEL 12 OVERFLOW         04680000.SKP006C ANOP  ,
                                 DBC 04690000         DS    X -            RESER
VED                                  04700000         SPACE 1
                                     04710000.C3A     AIF   (NOT &DEVDRD).C  3B
                                       04720000&LSW(007) SETB (1)
                                   DBC 04730000*                       CARD READ
ER, CARD PUNCH                         04740000         SPACE 1
                                         04750000         ORG   &P.DCB+16
                                         04760000&P.MODE  DS    0B -           M
ODE OF OPERATION FOR 1442 CARD READ      04770000*                             P
UNCH (BITS 0-3)          +                 04780000&P.STACK DS    B -
 STACKER SELECTION (BIT  S 4-7)              04790000         AIF   (&#DCBSW(007
)).SKP007A                               DBC 04800000DCBMODEC EQU   BIT0 -
   COLUMN BINARY MODE                        04810000DCBMODEE EQU   BIT1 -
   EBCDIC MODE                                 04820000DCBMODEO EQU   BIT2 -
     OPTICAL MARK READ MODE                    04830000DCBMODER EQU   BIT3 -
     READ COLUMN ELIMINATE MODE                04840000DCBSTCK2 EQU   BIT6 -
     STACKER 2                                 048500  00DCBSTCK1 EQU   BIT7 -
       STACKER 1                                 04860000.SKP007A ANOP  ,
                                             DBC 04870000         DS    C -
       DCBDEVT - DEVICE TYPE                     04880000         AI  F   (&#DCB
SW(007)).SKP007B                               DBC 04890000DCBDVCR0 EQU   X'41'
-        2540 CARD READER                          04900000DCBDVCP0 EQU   X'42'
-        2540 CARD PUNCH                           04910000DCBDVCRP EQU   X'43'
-          1442 CARD READ PUNCH                      04920000DCBDVCR1 EQU   X'44
' -        2501 CARD READER                          04930000DCBDVCPR EQU   X'45
' -        2520 CARD READ PUNCH                      04940000DCBDVCR2 EQU   X'46
'          3505 CA  RD READER                   XM0629 04950000DCBDVCP1 EQU   X'
4C'          3525 CARD PUNCH                    XM0629 04960000.SKP007B ANOP  ,
                                                   DBC 04970000         DS    X
-            RESERVED                                    04980000&P.FUNC  DS
B -            FUNCTION INDICATOR FOR THE 3525           04990000         AIF
(&#DCBSW(007)).SKP007C                               DBC 05000000DCBFNCBI EQU
BIT0 -         INTERPRET (PUNCH AND PRINT TWO LI  NES)     05010000DCBFNCBR EQU
  BIT1 -         READ                                      05020000DCBFNCBP EQU
  BIT2 -         PUNCH                                     05030000DCBFNCBW EQU
  BIT3 -         PRINT                                     0504  0000DCBFNCBD EQ
U   BIT4 -         DATA PROTECTION                           05050000DCBFNCBX EQ
U   BIT5 -         THIS DATA SET IS TO BE PRINTED            05060000DCBFNCBT EQ
U   BIT6 -         TWO-LINE PRINT SUPPORT REQUEST            05070000.SKP007C
ANOP  ,                                                    DBC 05080000
SPACE 1                                                        05090000.C3B
AIF   (NOT &DEVDWT).C3C                                        05100000&LSW(008)
 SETB (1)                                                    DBC 05110000*
                 WORLD TRADE TELEGRAPH                           05120000
  SPACE 1                                                        05130000
  ORG   &P.DCB+16                                                  05140000&P.BQ
FLG DS    BL1 -          WTTA FLAG BYTE                            05150000
    AIF   (&#DCBSW(008)).SKP008A                               DBC 05160000DCBBQ
WRU EQU   BIT1 -         WRU FEATURE IS TO + BE USED                 05170000DCB
BQIAM EQU   BIT2 -         IAM FEATURE IS   TO BE USED                 05180000D
CBBQWRS EQU   BIT3 -         WRU FEATURE TO BE USED IN SEND HEADER     05190000*
                             SUBGROUP                                  05200000D
CBBQWRE EQU   BIT4 -         WRU FEATURE TO BE USED IN E  ND SEND        0521000
0*                             SUBGROUP                                  0522000
0.SKP008A ANOP  ,                                                    DBC 0523000
0&P.WTEOM DS    C -            EOM CHARACTER                               05240
000&P.WTEOT DS    C -            EOT CHARACTER                             05250
000&P.WTPAD DS    FL1 -          NUMBER OF PAD (LTRS) CHARACTERS REQUIRED  05260
000*                             FOR MOTOR-ON DELAY                        05270
000           SPACE 1                                                        052
80000.C3C     AIF   (NOT (&DEVDOR OR &DEVDMR)).C4                            052
90000&LSW(009) SETB (1)                                                  DBC 053
00000*                         OPTICAL READER AND MAGNETIC CHAR READER         0
5310000         SPACE 1                                                        0
5320000         ORG   &P.DCB                                                   0
5330000&P.WTOID DS    0A -             SAME AS DCBWTOIA BELOW
 05340000         DS    X -            RESERVED
 05350000&P.WTOIA DS    AL3 -          A BINARY IDENTIFICATION NUMBER ASSIGNED
 05360000*                             BY COMMUNICA  TIONS TASK TO MESSAGE ISSUE
D  05370000*                             BY WTO MACRO.  THIS NUMBER IS USED BY T
HE 05380000*                             DOM MACRO WHEN MESSAGE IS NO LONGER
   05390000*                             REQUIRED (MCS SUPPORT).    ---
     05400000*                             FOR MAGNETIC CHAR READER - AFTER FIRS
T    05410000*                             READ HAS BEEN ISSUED, CONTAINS ADDRES
S OF 05420000*                             MAGNETIC INTERRUPT CONTROL BLOCK (MIC
B  )   05430000*                             BEING USED BY THE APPENDAGES.
       05440000         SPACE 1
       05450000         AIF   (NOT &DEVDOR).C3D
       05460000&  LSW(010) SETB (1)
     DBC 05470000*                       OPTICAL READER DEVICES
         05480000*                       1285, 1287, 1288
         05490000         SPACE   1
           05500000         ORG   &P.WTOID+4
           05510000&P.ERRCN DS    0A -           SAME AS DCBERRCA BELOW
           05520000         DS    X -              RESERVED
             05530000&P.ERRCA DS    AL3 -          ADDRESS OF 32 BYTES OF DECLAR
ED STORAGE   05540000*                             SPECIFIED BY THE USER IN HIS
PROGRAM.     05550000*                             THIS STORA+ GE WILL BE USED B
Y THE          05560000*                             PROGRA  MMING SUPPORT AS EI
GHT 4-BYTE       05570000*                             COUNTERS IN WHICH TOTALS
OF CERTAIN 1285, 05580000*                             1287 AND 1288 ERROR CONDI
TIONS ARE        05590000*                             ACCUMULATED.
                   05600000&P.DSPLY DS    0A -           SAME AS DCBDSPLA BELOW
                   05610000         DS    X -            RESERVED
                   05620000&P.DSPLA DS    AL3 -          ADDRESS OF DSPLY (BSAM)
 ROUTINE   USED FOR  05630000*                             KEYBOARD ENTRY OF A C
OMPLETE FIELD        05640000&P.RESCN DS    0A -           SAME AS DCBRESCA BELO
W                    05650000&P.RDLNE DS    0A -           SAME AS DCBRDLNA BELO
W                    056  60000         DS    X -            RESERVED
                       05670000&P.RESCA DS    0AL3 -         ADDRESS OF RESCN (B
SAM) ROUTINE USED TO   05680000*                             FORCE ON-LINE CORRE
CTION OF UNREADABLE    05690000*                               CHARACTERS
                         05700000&P.RDLNA DS    AL3 -          ADDRESS OF RDLNE
(QSAM) ROUTINE USED TO   05710000*                             FORCE ON-LINE COR
RECTION OF UNREADABLE    05720000*                               CHARACTERS
                           05730000&P.ORBYT DS    BL1 -          OPTICAL READER
BYTE USED BY BSAM/QSAM     05740000         AIF   (&#DCBSW(010)).SKP010A
                       DBC 05750000DCBORSYN EQU   BIT0 -         SYNA  D IN CONT
ROL                          05760000DCBOREOF EQU   BIT1 -         END OF FILE (
EOF)                         05770000DCBORBFP EQU   BIT2 -         BUFFERS PRIME
D (QSAM)                     05780000.SKP010A ANOP  ,
                           DBC 05790000         DS    C -            DCBDEVT - D
EVICE TYPE                     05800000         AIF   (&#DCBSW(010)).SKP010B
                           DBC 05810000DCBDVOR5 EQU   X'5A' -        1285 OPTICA
L READER                         05820000DCBDVOR7 EQU   X'5B' -        1287 OPTI
CAL READER                       05830000DCBDVOR8 EQU   X'5C' -        1288 OPTI
CAL READER                       05840000.SKP010B ANOP  ,
                             DBC 0  5850000&P.EIB   DS    BL1 -          ERROR I
NDICATOR BYTE                      05860000         AIF   (&#DCBSW(010)).SKP010C
                               DBC 05870000DCBORNRM EQU   BIT1 -         THE 128
7 OR 1288 SCANNER WAS UNABLE TO    05880000*                               LOCAT
E THE REFERENCE MARK                 05890000DCBORREJ EQU   BIT2 -         FOR 1
287, A STACKER SELECT COMMAND WAS    05900000*                             GIVEN
 AFTER ALLOTTED TIME HAD ELAPSED AND 05910000*                               THE
 DOCUMENT HAS BEEN PUT IN REJECT       05920000*                             POC
KET.  FOR 1288 UNFORMATTED ONLY,       05930000*                             END
-OF-PAGE HAS OCCURRED.                 05940000DCBORERR EQU   BIT3 -         A +
 NONRECOVERABLE ERROR HAS OCCURRED.      05950000DCBORECK EQU   BIT4 -
 AN EQUIPMENT CHECK RESULTED IN AN         05960000*
 INCOMPLETE READ                           05970000DCBORWLR EQU   BIT5 -
 A WRONG-LENGTH RECORD CONDITION HAS       05980000*
 OCCURRED                                    05990000DCBORHPR EQU   BIT6 -
   FOR QSAM - OPERATOR ENTERED ONE OR MORE   06000000*
   CHARACTERS FROM THE KEYBOARD.             06010000*
   FOR BSAM - A HOPPER EMPT  Y CONDITION HAS   06020000*
     OCCURRED                                  06030000DCBORDCK EQU   BIT7 -
     A DATA CHECK HAS OCCURRED                 06040000.SKP010C ANOP  ,
                                             DBC 06050000         DS    X -
       RESERVED                                  06060000         SPACE 1
                                                 06070000.C3D     AIF   (NOT &DE
VDMR).C4                                         06080000  &LSW(011) SETB (1)
                                               DBC 06090000*
   MAGNETIC CHARACTER READER DEVICES               06100000*
   1419 MAGNETIC CHARACTER READER                  06110000*
     1275 OPTICAL READER SORTER                      06120000         SPACE 1
                                                     06130000         ORG   &P.D
CB                                                   06140000&P.SSID  DS    CL8
-            BEFORE DCB IS OPENED - NAME OF USER'S     06150000*
             STACKER SELECT ROUTINE.                   06160000         SPACE 1
                                                       06170000         ORG   &P
.SSID                                                    06180000         DS
A -            AFTER DCB IS OPENED - DCBWTOID            06190000&P.SSAD  DS
0A -           ADDRESS OF USER'S STACKER SELECT ROUTINE  06200000         DS
X -            RESERVED                                    06210000&P.SSADA DS
  AL3 -          ADDRESS OF USER'S STACKER SELECT ROUTINE  06220000&P.IMAGE DS
  0A -           SAME AS DCBIMAGA BELOW                    06230000&P.MRFG  DS
  BL1 -          BUFFER INDICATOR                            06240000         AI
F   (&#DCBSW(011)).SKP011A                               DBC 06250000DCBMRBCT EQ
U   BIT0+BIT1 -    TWO-BIT BINARY COUNTER WHICH INDICATES    06260000*
                   INTO WHICH BUFFER STATUS INFORMATION IS   062700  00*
                     TO BE POSTED                              06280000.SKP011A
ANOP  ,                                                    DBC 06290000&P.IMAGA
DS    AL3 -          ADDRESS OF PARAMETER LIST USED TO         06300000*
                       COMMUNICATE BETWEEN USER'S PROCESSING     06310000*
                       ROUTINES AND HIS STACKER SELECT ROUTINES  06320000&P.ECBL
T DS    0A -           SAME AS DCBECBLA BELOW                    06330000&P.MRIN
D DS    BL1 -    +       INDICATOR AND COUNTER BYTE                06340000
    AIF   (&#DC  BSW(011)).SKP011B                               DBC 06350000DCB
MRDCT EQU   BIT0+BIT1+BIT2 THREE-BIT BINARY COUNTER OF NUMBER OF     06360000*
                           DOCUMENTS READ AFTER DISENGAGE            06370000DCB
MRSCU EQU   BIT3 -         DCB   WAS ALTERED WHEN SYNAD ROUTINE WAS    06380000*
                             ENTERED DUE TO SECONDARY CONTROL UNIT     06390000*
                             (SCU) ERROR                               06400000D
CBMRPLO EQU   BIT4 -         POCKET LIGHT HAS   BEEN TURNED ON           0641000
0DCBMRPLS EQU   BIT5 -         POCKET LIGHT 0-6 IS BEING SET ON          0642000
0DCBMRERP EQU   BIT6 -         ERROR RECOVERY PROCEDURE IS EXECUTING FOR 0643000
0*                             PRIMARY CONTROL UNIT (PCU)                  06440
000DCBMRERS EQU   BIT7 -         ERROR RECOVERY PROCEDURE IS EXECUTING FOR 06450
000*                             SECONDARY CONTROL UNIT (SCU)              06460
000.SKP011B ANOP  ,                                                    DBC   064
70000&P.ECBLA DS    AL3 -          ADDRESS OF ECB LIST PASSED TO WAIT MACRO  064
80000*                             BY CHECK MACRO WHEN NO 1419/1275 IS       064
90000*                             AVAILABLE FOR PROCESSING                  065
00000&P.MR  FLG DS    BL1 -          FLAG BYTE                                 0
6510000         AIF   (&#DCBSW(011)).SKP011C                               DBC 0
6520000DCBMRSCC EQU   BIT0 -         FIRST OR SECOND SECONDARY CONTROL UNIT    0
6530000*                               COMMAND CHAIN IS BEING USED
 06540000DCBMRDBG EQU   BIT1 -         DEBUGGING MODE IN USE
 06550000DCBMRDRU EQU   BIT2 -         DISENGAGE REQUESTED BY USER
 06560000DCBMRDR  EQU   BIT3 -         D  ISENGAGE REQUESTED
   06570000DCBMRPCC EQU   BIT4+BIT5 -    TWO-BIT BINARY COUNTER INDICATING FIRST
,  06580000*                             SECOND OR THIRD PRIMARY CONTROL UNIT
   06590000*                             COMMAND CHAIN   IS BEING USED
     06600000DCBMRDWT EQU   BIT6 -         WTO MESSAGE MUST BE DELETED
     06610000DCBMRUE  EQU   BIT7 -         UNIT EXCEPTION
     06620000.SKP011C ANOP  ,
   DBC 06630000         DS    C -            DCBDEVT - DEVICE TYPE
       06640000         AIF   (&#DCBSW(011)).SKP011D
   DBC 06650000DCBDVMR  EQU   X'5D' -        1419 MAGNETIC CHARACTER READER
         06660000DCBDVORS EQU   X'5F' -        1275 OPTICAL READER SORTER
         06670000.SKP011D ANOP  ,
     DBC 06680000&P.APPIN DS    C -            AN INDICATOR USED BY THE APPENDAG
ES TO    06690000*                               PASS INFORMATION ABOUT ONE CHAN
NEL CHAIN  06700000*                             TO AN APPENDAGE ASSOCIATED WITH
 ANOTHER   06710000*                             CHANNEL CHAIN
           06720000         DS    X+  -            RESERVED
             06730000         SPA  CE 1
               06740000.C4      AIF   (NOT &DSORGTR).C4A
        S22024 06750000&LSW(012) SETB (1)
           DBC 06760000*                       3  705 LINE TERMINAL
          S22024 06770000         ORG   &P.DCB+8
          S22024 06780000&P.IPLTX DS    CL8            NAME OF MODULE TO BE USED
 TO IPL   S22024 06790000*                             THE 3705
            S22024 06800000&P.BCKUP DS    0A             FULL WORD LABEL
            S22024 06810000         DS    BL1            RESERVED
            S22024 06820000&P.BCKUA DS    AL3            ADDRESS OF THE DCB FO
R THE         S22024 06830000*                             BACKUP 3705.
              S22024 06840000.C4A     AIF   (NOT (&DSORGIS OR &DSORGDA OR &DSORG
QS OR &DSORGBS OR   *06850000               &DSORGXE)).C5
                       06860000&LSW(013) SETB (1)
                   DBC 06870000*                       ACCESS METHOD COMMON INTE
RFACE                  06880000         SPACE 1
                       06890  000         ORG   &P.DCB+16
                         06900000&P.RELB  DS    0F -           SAME AS DCBREL BE
LOW                      06910000&P.KEYLE DS    FL1 -          KEY LENGTH OF DAT
A SET                    06920000&P.DEVT  D  S    0C -           DEVICE TYPE
                           06930000         AIF   (&#DCBSW(13)).SKP13A
                       DBC 06940000DCBDVTRM EQU   X'4F' -        TERMINAL.  (DD
CONTAINS TERM=TS)          06950000.SKP13A  ANOP  ,
                         DBC 06960000&P.REL   DS    FL3 -          NUMBER OF REL
ATIVE TRACKS OR BLOCKS IN    06970000*                             THIS DATA SET
 (BDAM)                      06980000&P.BUFCB DS    0A -           ADDRES  S OF
BUFFER POOL CONTROL BLOCK      06990000&P.BUFNO DS    FL1 -          NUMBER OF B
UFFERS REQUIRED FOR THIS DATA  07000000*                             SET.  MAY R
ANGE FROM 0 TO 255.  IF        07010000*                             UNBLOCKED S
PANNED R  ECORDS ARE USED,       07020000*                             NUMBER OF
 SEGMENT WORK AREAS REQUIRED     07030000*                             FOR THIS
DATA SET.                        07040000&P.BUFCA DS    AL3 -          ADDRESS O
F BUFFER POOL CONTROL B  LOCK      07050000&P.BUFL  DS    H -            LENGTH
OF BUFFER.  MAY RANGE FROM 0 TO    07060000*                             32,767.
                                   07070000&P       #DSORG
                               DBC 070  80000&P.IOBAD DS    0A -           ADDRE
SS OF IOB WHEN CHAINED SCHEDULING IS 07090000*                             USED
OR FOR 1419/1275                     07100000&P.ODEB  DS    0A -           ADDRE
SS OF OLD DEB                        07110000&P.LNP  +  DS    0FL1 -         352
5 PRINTER LINE POSITION COUNTER        07120000&P.Q  SLM  DS    BL1 -          Q
SAM LOCATE MODE LOGICAL RECORD INTERFACE 07130000*                             I
NDICATOR BYTE FOR UPDAT PROCESSING OF    07140000*                             S
PANNED RECORDS                           07150000         AIF   (&  #DCBSW(013))
.SKP013A                               DBC 07160000DCB1DVDS EQU   BIT0 -
 ONLY ONE DEVICE IS ALLOCATED TO THIS      07170000*
 DATA SET                                  07180000DCBUPDCM EQU   BIT1 -
   UPDATE COMPLETE, FREE OLD DEB             07190000DCBUPDBT EQU   BIT2+BIT3 -
   UPDATE BITS                               07200000DCBUPDT  EQU   BIT2 -
   UPDATE TO TAKE PLACE                      07210000DCBNUPD  EQU   BIT2+BIT3 -
   NO UPDATE TO   TAKE PLACE                   07220000DCBSVDEB EQU   BIT3 -
     OLD DEB ADDRESS MUST BE SAVED             07230000.SKP013A ANOP  ,
                                           DBC 07240000&P.IOBAA DS    0AL3 -
     SAME AS DCBIOBAD ABOVE                      07250000&P.ODEBA DS    AL3 -
       ADDRESS OF OLD DEB                        07260000         ORG   &P.DCB+2
8                                     ICBI DCB-4 07270000&P.SVCXL DS    0A -
       SAME AS DCBSVCXA BELOW         ICBI DCB  -4 07280000         DS    X -
         RESERVED                       ICBI DCB-4 07290000&P.SVCXA DS    AL3 -
         POINTER TO EXIT LIST OF JES    ICBI DCB-4 07300000*
         C.I. INTERFACE CONTROL SVC     ICBI DCB-4 07310000           SPACE 1
                                                     07320000*
     FOUNDATION EXTENSION                            07330000         SPACE 1
                                                     07340000&P.EODAD DS      0A
 -           SAME AS DCBEODA BELOW                     07350000&P.HIARC DS    0B
L1 -         HIERARCHY BITS                            07360000&P.BFTEK DS    0B
L1 -         BUFFERING TECHNIQUE BITS                  07370000&P.BFALN DS    BL
1 -            BUFFER ALIGNMENT BITS                     07380000         AIF
(&#DCBSW(13) OR &#DCBSW(16)).SKP013B                 DBC 07390000DCBH1    EQU
BIT0 -         HIERARCHY 1 MAIN STORAGE - BIT 5 IS ZERO  07400000DCBBFT   EQU
BIT1+BIT2+BIT3 BUFFERING T  ECHNIQUE                       07410000DCBBFTA  EQU
  BIT1+BIT2 -    QSAM LOCATE MODE PROCESSING OF SPANNED    07420000*
                 RECORDS - OPEN IS TO CONSTRUCT A RECORD   07430000*
                 AREA IF IT AUTOMATICALLY   CONSTRUCTS       07440000*
                   BUFFERS                                   07450000DCBBFTR  EQ
U   BIT2 -         FOR BSAM CREATE BDAM PROCESSING OF        07460000*
                   UNBLOCKED SPANNED RECORDS - SOFTWARE        07470000*
                     TRACK OVERFLOW.  FOR BSAM INPUT           07480000*
                     PROCESSING OF UNBLOCKED SPANNED RECORDS   07490000*
                     WITH KEYS - RECORD OFFSET PROCESSING.     07500000
   _ DCBBFTS  EQU   BIT1 -         SIMPLE BUFFERING - BIT 3 IS ZERO          075
10000DCBBFTKR EQU   BIT2 -         UNBLOCKED SPANNED RECORDS - SOFTWARE      075
20000*                             TRACK OVERFLOW (BDAM)                     075
30000D  CBBFTE  EQU   BIT3 -         EXCHANGE BUFFERING - BIT 1 IS ZERO        0
7540000DCBBFTKD EQU   BIT4 -         DYNAMIC BUFFERING (BTAM)                  0
7550000DCBH0    EQU   BIT5 -         HIERARCHY 0 MAIN STORAGE - BIT 0 IS ZERO  0
7560000DCBBFA   EQU     BIT6+BIT7 -    BUFFER ALIGNMENT
 07570000DCBBFAD  EQU   BIT6 -         DOUBLEWORD BOUNDARY
 07580000DCBBFAF1 EQU   BIT7 -         FULLWORD NOT A DOUBLEWORD BOUNDARY,
 07590000*                               CODED IN DCB MACRO INSTRUCTION
   07600000DCBBFAF2 EQU   BIT6+BIT7 -    FULLWORD NOT A DOUBLEWORD BOUNDARY,
   07610000*                             CODED IN DCB MACRO INSTRUCTION
   07620000.SKP013B ANOP  ,
 DBC 07630000&P.EODA  DS    AL3 -          ADDRESS OF A USER-PROVIDED ROUTINE TO
     07640000*                             HANDLE END-OF-DATA CONDITIONS
     07650000&P.EXLST DS    0A -           ADDRESS OF USER-PROVIDE  D LIST OF EX
ITS    07660000&P.RECFM DS    BL1 -          RECORD FORMAT
       07670000         AIF   (&#DCBSW(013)).SKP013C
   DBC 07680000DCBRECLA EQU   BIT0+BIT1+BIT2 RECORD LENGTH INDICATOR - ASCII
         07690000DCBRECD  EQU   BIT2 -         ASCII VARIABLE RECORD LENGTH
         07700000DCBRECL  EQU   BIT0+BIT1 -    RECORD LENGTH INDICATOR
         07710000DCBRECF  EQU   BIT0 -         FIXED RECORD LENGTH
         0772000  0DCBRECV  EQU   BIT1 -         VARIABLE RECORD LENGTH
           07730000DCBRECU  EQU   BIT0+BIT1 -    UNDEFINED RECORD LENGTH
           07740000DCBRECTO EQU   BIT2 -         TRACK OVERFLOW
           07750000DCBRECBR EQU     BIT3 -         BLOCKED RECORDS
             07760000DCBRECSB EQU   BIT4 -         FOR FIXED LENGTH RECORD FORMA
T - STANDARD 07770000*                             BLOCKS.  FOR VARIABLE LENGTH
RECORD       07780000*                               FORMAT - SPANNED RECORDS
               07790000DCBRECCC EQU   BIT5+BIT6 -    CONTROL CHARACTER INDICATOR
               07800000DCBRECCA EQU   BIT5           ASA CONTROL CHARACTER
               07810000DCBRECCM EQU   BIT6 -         MACHINE   CONTROL CHARACTER
                 07820000DCBRECC  EQU   X'00' -        NO CONTROL CHARACTER
                 07830000DCBRECKL EQU   BIT7 -         KEY LENGTH (KEYLEN) WAS S
PECIFIED IN DCB  07840000*                             MACRO INSTRUCTION
                   07850000.SKP013C ANOP  ,
               DBC 07860000&P.EXLSA DS    AL3 -          ADDRESS OF USER-PROVIDE
D LIST OF EXITS    07870000         SPACE 1
           +         07880000.C5      AIF   (NOT &DSORGBX).C5B
                       07890000&LSW(014) SETB (1)
                   DBC 07900000         AIF   (&DSORGQX AND (&DSORGIS OR &DSORGD
A OR &DSORGQS OR      *07910000               &DSORGBS OR &DSORGXE)).C5A
                       0  7920000&LSW(015) SETB (1)
                     DBC 07930000*                       BTAM LINE GROUP INTERFA
CE                       07940000         SPACE 1
                         07950000           AIF   (&DSORGIS OR &DSORGDA OR &DSOR
GQS OR &DSORGBS OR        *07960000               &DSORGXE).C5A
                           07970000&LSW(016) SETB (1)
                       DBC 07980000         ORG   &P.D  CB+20
                             07990000&P.BUFCB DS    0A -           ADDRESS OF BU
FFER POOL CONTROL BLOCK      08000000&P.BUFNO DS    FL1 -          NUMBER OF BUF
FERS OBTAINED BY OPEN        08010000&P.BUFCA DS    AL3 -          AD  DRESS OF
BUFFER POOL CONTROL BLOCK      08020000&P.BUFL  DS    H -            BUFFER LENG
TH                             08030000&P       #DSORG
                           DBC 08040000&P.IOBAD DS    0A -           BASE FOR AD
DRES  SING IOB'S (BASE = ADDRESS 08050000*                             OF FIRST
IOB MINUS LENGTH OF AN IOB)      08060000         DS    FL1 -          DCBDEVTP
- INDEX TO DEVICE ENTRY IN THE   08070000*                             DEVICE I/
O DIRECTORY                        08080000&P.IOBAA DS    AL3 -          SAME AS
 DCBIOBAD ABOVE                    08090000&P.HIARC DS    0BL1 -         HIERARC
HY FLAG BITS                       08100000&P.BFTEK DS    BL1 -          BUFFERI
NG TECHNIQUE FLAG BITS               08110000         AIF   (&#DCBSW(13) OR &#DC
BSW(16)).SKP016A                 DBC 08120000DCBH1    EQU   BIT0 -         HIERA
RCHY 1 MAIN STORAGE - BIT 5 IS ZERO  08130000DCBBFT   EQU   BIT1+BIT2+BIT3 BUFFE
RING TECHNIQUE                       08140000DCBB  FTA  EQU   BIT1+BIT2 -    QSA
M LOCATE MODE PROCESSING OF SPANNED    08150000*                             REC
ORDS - OPEN IS TO CONSTRUCT A RECORD   08160000*                             ARE
A IF IT AUTOMATICALLY CONSTRUCTS       08170000*                               B
UFFERS                                   08180000DCBBFTR  EQU   BIT2 -         F
OR BSAM CREATE BDAM PROCESSING OF        08190000*                             U
NBLOCKED SPANNED RECORDS - SOFTWARE      08200000*
 TRACK OVERFLOW.  FOR BSAM INPUT           08210000*
 PROCESSING OF UNBLOCKED SPANNED RECORDS   08220000DCBBFTS  EQU   BIT1 -
 SIMPLE BUFFERING - BIT 3 IS ZERO          08230000DCBBFTKR EQU   BIT2 -
 UNBLOCKED SPA  NNED RECORDS - SOFTWARE      08240000*
   TRACK OVERFLOW (BDAM)                     08250000DCBBFTE  EQU   BIT3 -
   EXCHANGE BUFFERING - BIT 1 IS ZERO        08260000DCBBFTKD EQU   BIT4 -
   DYNAMIC BUFFERING (BTAM)  +                 08270000DCBH0    EQU   BIT5 -
     HIERARCHY 0 MAIN STORA  GE - BIT 0 IS ZERO  08280000DCBBFA   EQU   BIT6+BIT
7 -    BUFFER ALIGNMENT                          08290000DCBBFAD  EQU   BIT6 -
       DOUBLEWORD BOUNDARY                       08300000DCBBFAF1 EQU   BIT7 -
       FULLWORD NOT A DOUBLEWORD BOUNDARY,         08310000*
         CODED IN DCB MACRO INSTRUCTION            08320000DCBBFAF2 EQU   BIT6+B
IT7 -    FULLWORD NOT A DOUBLEWORD BOUNDARY,       08330000*
         CODED IN DCB MACRO INSTRUCTION            083400  00.SKP016A ANOP  ,
                                                 DBC 08350000         DS    BL1
-          DCBERROP - ERROR RECOVERY PROCEDURE BITS  08360000         DS    FL1
-          DCBBUFCT - MAX NUMBER OF READ BUFFERS     08370000         DS      X
-            RESERVED                                  08380000&P.EXLST DS    0A
 -           ADDRESS OF USER-PROVIDED EXIT LIST        08390000         DS    FL
1 -          DCBEIOBX - SIZE OF IOB                    08400000&P.EXLSA DS    AL
3 -            ADDRESS OF USER-PROVIDED EXIT LIST        08410000         SPACE
1                                                        08420000.C5A     ANOP
                                                         08430000         ORG
&P.DCB+33                                                  08440000&P.ERROP DS
  BL1 -          ERROR RECOVERY PROCEDURE BITS             08450000         AIF
  (&#DCBSW(014)).SKP014A                               DBC 08460000DCBERPT  EQU
  BIT3 -         ON-LINE TEST FACILIT  IES TO BE USED        08470000DCBERPC  EQ
U   BIT4 -         THRESHOLD AND CUMULATIVE ERROR COUNTS TO  08480000*
                   BE MAINTAINED                             08490000DCBERPW  EQ
U   BIT5 -         TEXT-WRITE ERRORS TO BE RETRIED             08500000DCBERPR
EQU   BIT6 -         TEXT-READ ERRORS TO BE RETRIED            08510000DCBERPN
EQU   BIT7 -         IF ZERO, BASIC ERP TO BE FOLLOWED ---     08520000*
                     IF ONE, NO ERP TO BE FOLLOWED             0853  0000.SKP014
A ANOP  ,                                                    DBC 08540000&P.BUFC
T DS    FL1 -          CONTAINS MAXIMUM NUMBER OF BUFFERS TO BE  08550000*
                       OBTAINED BY BTAM FOR READ OPERATION       08560000*
                         (DYNAMIC BUFFERING ONLY)                  08570000
    SPACE 1                                                        08580000
    AIF   (&DSORGQX OR &DSORGTX).C5B                               08590000&LSW(
017) SETB (1)                                                    DBC 08600000
      ORG   &P.DCB+28                                                08610000&P.
DEVTP DS    FL1 -          INDEX TO DEVICE ENTRY IN THE DEVICE I/O   08620000*
                           DIREC  TORY                                 08630000
        SPACE 1                                                        08640000
        ORG   &P.DCB+36                                                08650000&
P.EIOBX DS    FL1 -          SIZE OF EXTENDED I+ OB.  SIZE OF AN IOB     0866000
0*                             ASSOCIATED WIT  H THIS DCB                  08670
000         SPACE 1                                                        08680
000.C5B     AIF   (NOT &DSORGTX).C5B1                                      08690
000&LSW(018) SETB (1)                                                    DBC 087
00000*                       TCAM LINE GROUP INTERFACE                       087
10000         SPACE 1                                                        087
20000         ORG   &P.DCB+20                                                  0
8730000&P.MHA   DS    0A -           SAME AS DCBMH BELOW                       0
8740000&P.BUFIN DS    0BL1 -         NUMBER OF INPUT BUFFERS (BITS 0-3)        0
8750000&P.BUFOU DS    BL1 -          NUMBER OF OUTPUT BUFFERS (BITS 4-7)       0
8760000           AIF   (&#DCBSW(018)).SKP018A                               DBC
 08770000DCBBFIN  EQU   BIT0+BIT1+BIT2+BIT3 NUMBER OF BUFFERS ASSIGNED
 08780000*                             INITIALLY FOR RECEIVING OPERATIONS, FOR
 08790000*                               EACH LINE IN LINE GROUP
   08800000DCBBFOUT EQU   BIT4+BIT5+BIT6+BIT7 NUMBER OF BUFFERS ASSIGNED
   08810000*                             INITIALLY FOR SENDING OPERATIONS, FOR
   08820000*                               EACH LINE IN LINE GROUP
     08830000.SKP018A ANOP  ,
 DBC 08840000&P.MH    DS    AL3 -          ADDRESS OF MESSAGE HANDLER FOR THIS L
INE  08850000*                             GROUP
       08860000         DS    FL1 -          DCBINTVL - NUMBER OF SECONDS OF
       08870000*                             INVITATION DELAY
       08880000&P.PCI   DS    BL1 -          PROGRAM CONTROLLED INTERR  UPTION H
ANDLING  08890000         AIF   (&#DCBSW(018)).SKP018B
     DBC 08900000DCBPCIX1 EQU   BIT0 -         PCI=(X,)                       IC
BI DCB-8 08910000DCBPCIX2 EQU   BIT1 -         PCI=(,X)                       IC
BI DC  B-8 08920000DCBPCIA1 EQU   BIT2 -         PCI=(A,)
           08930000DCBPCIA2 EQU   BIT3 -         PCI=(,A)
           08940000DCBPCIN1 EQU   BIT4 -         PCI=(N,)
           08950000D  CBPCIN2 EQU   BIT5 -         PCI=(,N)
             08960000DCBPCIR1 EQU   BIT6 -         PCI=(R,)
             08970000DCBPCIR2 EQU   BIT7 -         PCI=(,R)
             08980000.SKP018B ANOP    ,
           DBC 08990000         AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSOR
GQX OR        *09000000               &DSORGCQ OR &DSORGQS OR &DSORGBS OR &DSORG
XE).C5B2       09010000&LSW(019) SETB (1)
             DBC 09020000&P       #DSORG
             DBC 09030000         AGO   .C5B3
                 09040000.C5B2    ANOP                           +
                   09050000&LSW(020) SETB (1)
                 DBC 09060000         DS    0BL2 -         DCBDSORG - DATA SET O
RGANIZATION          09070000         DS    BL1 -          DCBDSRG1 - FIRST BYTE
 OF DCBDSORG         09080000         DS    BL1 -          DCBDSRG2 - SECOND B
YTE OF DCBDSORG        09090000.C5B3    ANOP
                       09100000&P.BUFMA DS    FL1 -          MAXIMUM NUMBER OF B
UFFERS TO BE USED FOR  09110000*                             DATA TRANSFER FOR E
ACH LINE IN T  HIS GROUP 09120000         SPACE 1
                         09130000.C5B1    AIF   (NOT (&DSORGQX OR &DSORGTX)).C6
                         09140000&LSW(021) SETB (1)
                     DBC 091  50000*                       QTAM LINE GROUP INTER
FACE                       09160000         SPACE 1
                           09170000         ORG   &P.DCB+20
                           09180000&P.CLPS    DS    0A -           ADDRESS OF LI
NE PROCEDURE SPECIFICATION   09190000*                             ROUTINE
                             09200000&P.BUFRQ DS    FL1 -          NUMBER OF BUF
FERS REQUESTED FOR A READ    09210000*                               OR WRITE OP
ERATION                        09220000&P.CLPSA DS    AL3 -          SAME AS DCB
CLPS ABOVE                     09230000&P.INTVL DS    FL1 -          NUMBER OF S
ECONDS OF INTENTIONAL DELAY    09240000*                             BETW  EEN P
ASSES THROUGH A POLLING LIST     09250000*                             FOR NONSW
ITCHED LINES                     09260000         DS    X -            RESERVED
                                 09270000         AIF   (&DSORGIS OR &DSORGBX OR
 &DSORGD  A OR &DSORGQS OR        *09280000               &DSORGBS OR &DSORGXE O
R &DSORGTX).C5C                    09290000&LSW(022) SETB (1)
                               DBC 09300000&P       #DSORG
                                 DBC 09310000&P.IOBAD DS    0A -           ADDRE
SS OF FIRST IOB                      09320000&P.DEVTP DS    AL1 -          DEVIC
E TYPE POINTER                       09330000&P.IOBAA DS    AL3 -          ADDRE
SS OF FIRST IOB                      0  9340000&P.LCBAD DS    0A -           BAS
E FOR ADDRESSING LCB'S (BASE = ADDRESS 09350000*                             OF
FIRST LCB MINUS LENGTH OF ONE LCB)     09360000&P.CPRI  DS    BL1 -          COM
MUNICATION PRIORITY BITS               09370000           AIF   (&#DCBSW(22) OR
&#DCBSW(23)).SKP022A                 DBC 09380000DCBCPR   EQU   BIT5 -         R
ECEIVING HAS PRIORITY                    09390000DCBCPE   EQU   BIT6 -         R
ECEIVING AND SENDING HAVE EQUAL PRIORITY 09400000DCBCPS   EQU   BIT7   -
 SENDING HAS PRIORITY                      09410000.SKP022A ANOP  ,
                                       DBC 09420000&P.LCBA  DS    AL3 -
 SAME AS DCBLCBAD ABOVE                    09430000&P.EXLST DS    0A -
 AD+ DRESS OF EXIT LIST                      09440000&P.EIOBX DS    FL1 -
     EXTENDED IOB INDEX.  SIZE OF LCB.         09450000&P.EXLSA DS    AL3 -
     ADDRESS OF EXIT LIST                      09460000         SPACE 1
                                               09470000         AGO   .C6
                                                 09480000.C5C     ANOP
                                                 09490000&LSW(023) SETB (1)
                                             DBC 09500000         DS    0BL2 -
       DCBDSORG - DATA SET ORGA  NIZATION          09510000         DS    BL1 -
         DCBDSRG1 - FIRST BYTE OF DCBDSORG         09520000         DS    BL1 -
         DCBDSRG2 - SECOND BYTE OF DCBDSORG        09530000         AIF   (NOT &
DSORGTX).C5C1                                        09540000&LSW(024) SETB (1)
                                                 DBC 09550000         AIF   (&DS
ORGIS OR &DSORGBX OR &DSORGDA OR &DSORGCQ OR        *09560000               &DSO
RGQS OR &DSORGBS OR &DSORGXE).C5C1                   09570000  &LSW(025) SETB (1
)                                                  DBC 09580000&P.IOBAD DS    0A
 -           ADDRESS OF FIRST IOB                      09590000&P.DEVTP DS    AL
1 -          DEVICE TYPE POINTER                       09600000&P.IOBAA DS
AL3 -          ADDRESS OF FIRST IOB                      09610000         SPACE
1                                                        09620000         AGO
.C5C2                                                    09630000.C5C1    ANOP
                                                           09640000&LSW(026) SET
B (1)                                                  DBC 09650000&P.DEVTP DS
  AL1 -          DEVICE TYPE POINTER                       09660000         DS
  AL3 -          DCBIOBAA   - ADDRESS OF FIRST IOB           09670000         SP
ACE 1                                                        09680000.C5C2    AI
F   (NOT &DSORGTX).C5D                                       09690000&LSW(027) S
ETB (1)                                                    DBC 09700000
ORG   &P.DCB+32                                                09710000&P.TRANA
DS    0A -           ADDRESS OF TRANSLATION TABLE              09720000
DS    BL1 -          DCBCPRI - COMMUNICATION PRIORITY BI  TS     09730000&P.TRAN
S DS    AL3 -          ADDRESS OF TRANSLATION TABLE              09740000
  SPACE 1                                                        09750000.C5D
  ANOP                                                           097600  00
    ORG   &P.DCB+32                                                09770000&P.LC
BAD DS    0A -           BASE FOR ADDRESSING LCB'S (BASE = ADDRESS 09780000*
                         OF FIRST LCB MINUS LENGTH OF ONE LCB)     09790000&P.CP
RI  DS      BL1 -          COMMUNICATION PRIORITY BITS               09800000
      AIF   (&#DCBSW(22) OR &#DCBSW(23)).SKP023A                 DBC 09810000DCB
CPR   EQU   BIT5 -         RECEIVING HAS PRIORITY                    09820000DCB
CPE   EQU   BIT6 -   +       RECEIVING AND SENDING HAVE EQUAL PRIORITY 09830000D
CBCPS   EQU   BIT7   -         SENDING HAS PRIORITY                      0984000
0.SKP023A ANOP  ,                                                    DBC 0985000
0&P.LCBA  DS    AL3 -          SAME AS DCBLCBAD ABOVE                    0986000
0         AIF   (&DSORGIS OR &DSOR  GBX OR &DSORGDA OR &DSORGQS OR        *09870
000               &DSORGBS OR &DSORGXE).C5E                                09880
000&LSW(028) SETB (1)                                                  DBC 09890
000&P.EXLST DS    0A -           ADDRESS OF EXIT   LIST                      099
00000&P.EIOBX DS    FL1 -          EXTENDED IOB INDEX.  SIZE OF LCB          099
10000&P.EXLSA DS    AL3 -          ADDRESS OF EXIT LIST                      099
20000         SPACE 1                                                          0
9930000         AGO   .C6                                                      0
9940000.C5E     ANOP                                                           0
9950000&LSW(029) SETB (1)                                                  DBC
 09960000&P.EIOBX DS    FL1 -          EXTENDED IOB INDEX.  SIZE OF LCB.
 09970000         DS    AL3 -          DCBEXLSA - ADDRESS OF EXIT LIST
 09980000         SPACE 1
 09990000.C6        AIF   (NOT (&DSORGMQ OR &DSORGTQ)).C7
   10000000&LSW(030) SETB (1)                                                  D
BC 10010000*                       QTAM PROBLEM PROGRAM MESSAGE QUEUE INTERFACE
   10020000         SPACE 1
     10030000         ORG   &P.DCB+20
     10040000&P.TRMAD DS    0A -           ADDRESS OF USER-PROVIDED AREA IN WHIC
H    10050000*                             T  HE TERMINAL NAME IS STORED
       10060000         AIF   (&DSORGQX OR &DSORGTX).C6A
       10070000&LSW(031) SETB (1)
   DBC 10080000&P.BUFRQ DS    FL1 -          NUMBER OF BUFF  ERS TO BE FILLED FR
OM THE   10090000*                             DIRECT ACCESS QUEUE
         10100000         AGO   .C6B
         10110000.C6A     ANOP
           10120000&LSW(032) SETB (1)
       DBC 10130000         DS    FL1 -          DCBBUFRQ - NUMBER OF BUFFERS TO
 BE FILLED 10140000*                             FROM THE DIRECT ACCESS QUEUE
             10150000.C6B     ANOP
             10160000&P.TRMA  DS    AL3 -          SAME AS DCBTRMAD ABOVE
             10170000&P.SOWA  DS    H -            SIZE OF USER-PROVIDED WORK AR
EA           10180000           AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSOR
GQX OR        *10190000               &DSORGQS OR &DSORGBS OR &DSORGXE OR &DSORG
TX).C6C        10200000&LSW(033) SETB (1)
           DBC 10210000&P       #DSORG +
             DBC 10220000&P.IOBAD DS      0A -           BEFORE OPEN - ADDRESS O
F AVT  ---         10230000*                             AFTER OPEN - BASE FOR A
DDRESSING IOB'S    10240000*                             (BASE = ADDRESS OF FIRS
T IOB MINUS LENGTH 10250000*                               OF ONE IOB)
                     10260000         DS    FL1 -          DCBBUFMA - MAXIMUM NU
MBER OF BUFFERS TO   10270000*                             BE USED FOR DATA TRAN
SFER FOR EACH LINE   10280000*                             IN THIS   GROUP
                       10290000&P.IOBAA DS    AL3 -          SAME AS DCBIOBAD AB
OVE                    10300000         AGO   .C6D
                       10310000.C6C     ANOP
                         10320000&LSW(034) SETB (1)
                     DBC 10330000         DS    0BL2 -         DCBDSORG - DATA S
ET ORGANIZATION          10340000         DS    BL1 -          DCBDSRG1 - FIRST
BYTE OF DCBDSORG           10350000         DS    BL1 -          DCBDSRG2 - SECO
ND BYTE OF DCBDSORG        10360000         DS    A -            DCBIOBAD - BASE
 FOR ADDRESSING IOB'S      10370000.C6D     ANOP
                           10380  000         SPACE 1
                             10390000         ORG   &P.DCB+28
                             10400000&P.SEGAD DS    A -            ADDRESS OF CU
RRENT SEGMENT                10410000         A  IF   (NOT &DSORGTQ).C6D1
                               10420000&LSW(035) SETB (1)
                           DBC 10430000&P.THRES DS    FL1 -          FOR NON-REU
SABLE MESSAGE QUEUE RECORDS,   10440000*                               PERCENTAG
E OF NON-REUSABLE DISK MESSAGE   10450000*                             QUEUE REC
ORDS TO BE USED BEFORE A FLUSH   10460000*                             CLOSEDOWN
 OF THE SYSTEM IS INITIATED.     10470000*                             FOR RE  U
SABLE MESSAGE QUEUE RECORDS AND    10480000*                             CHECKPO
INT RECORDS, THIS FIELD IS         10490000*                             RESERVE
D                                  10500000         AGO   .C6D2
                                     10510000.C6D1    ANOP
                                     10520000&LSW(036) SETB (1)
                                 DBC 10530000         DS    X -            RESER
VED                                    10540000.C6D2    ANOP
                                       10550000         SPACE 1
                                       10560000         AIF   (&DSORGIS OR &DSOR
GDA OR &DSORGQS OR &DSORGBS OR        *105  70000               &DSORGXE).C7
                                         10580000&LSW(037) SETB (1)
                                     DBC 10590000         ORG   &P.DCB+32
                                         10600000&P.EODAD+  DS    A -
 ADDRESS OF USER-PROVIDED ROUTINE          10610000           AIF   (&DSORGBX OR
 &DSORGQX OR &DSORGTX).C6E                   10620000&LSW(038) SETB (1)
                                         DBC 10630000&P.EXLST DS    0A -
   ADDRESS OF EXIT LIST                      10640000         AGO   .C  6F
                                               10650000.C6E     ANOP
                                               10660000&LSW(039) SETB (1)
                                           DBC 10670000         DS    0A -
       DCBEXLST - ADDRESS OF EXIT LIST           10680000.C6F     ANOP
                                                 10690000&P.RECFM DS    C -
       RECORD FORMAT                             10700000         AIF   (&#DCBSW
(037)).SKP037A                                 DBC 10710000DCBRECR  EQU   X'02'
-        RECORD                                    10720000DCBRECG  EQU   X'04'
-        MESSAGE                                   10730000DCBRECS  EQU   X'08'
-        SEGMENT                                     10740000.SKP037A ANOP  ,
                                                 DBC 10750000         AIF   (&DS
ORGBX OR &DSORGQX OR &DSORGTX).C6G                   10760000&LSW(040) SETB (1)
                                                 D  BC 10770000&P.EXLSA DS    AL
3 -          ADDRESS OF EXIT LIST                      10780000         AGO   .C
7                                                      10790000.C6G     ANOP
                                                       10800000&L  SW(041) SETB
(1)                                                  DBC 10810000         DS
AL3 -          DCBEXLSA - ADDRESS OF EXIT LIST           10820000.C7      ANOP
                                                         10830000         SPACE
  1                                                        10840000         AIF
  (NOT &DSORGCQ OR (&DSORGIS OR &DSORGBX OR &DSORGDA OR   *10850000
  &DSORGQX OR &DSORGQS OR &DSORGBS OR &DSORGXE)).C8        10860000&LSW(042) SET
B (1)                                                    DBC 10870000*
             QTAM DIRECT ACCESS MESSAGE QUEUE                10880000         SP
ACE 1                                                        10890000         OR
G   &P.DCB+20                                                  10900000&P.BUFCB
DS    0A -           ADDRESS OF TERMINAL TABLE                 10910000&P.BUFNO
DS    X -            RESERVED                                  10920000&P.BUFCA
DS    AL3 -          ADDRESS OF TERMINAL TABL  E                 10930000&P.BUFL
  DS    H -            SIZE OF THE DATA IN BUFFER EQUATED TO     10940000*
                       IECKBUFL                                  10950000&P
  #DSORG                                                       DBC 10960000&P.IO
BAD DS    A -            ADDRESS OF IOB                            10970000
    SPACE 1                                                        10980000.C8
    ANOP                                                    S22024 10990000
       _          AIF   (NOT &DSORGTR).C8A7                               S22024
 11000000&LSW(043) SETB (1)                                                  DBC
 11010000         ORG   &P.DCB+20                                         S22024
 11020000&  P.DUMPD DS    0A             FULL WORD LABEL                    S220
24 11030000&P.UNITN DS    BL1            NUMBER OF UNITS FOR READ FOLLOWING S220
24 11040000*                             ATTENTION.                         S220
24 11050000&P.DUMPA DS      AL3            ADDRESS OF THE DCB USED FOR        S2
2024 11060000*                             DUMPING THE 3705                   S2
2024 11070000         DS    AL1            RESERVED                           S2
2024 11080000&P.TRSTA DS    BL1              STATUS BYTE. WHEN SET TO 1,
S22024 11090000*                             THE INDICATORS HAVE THE SPECIFIED
S22024 11100000*                             MEANING
S22024 11110000         AIF   (&#DCBSW(043)).SKP043A
     DBC 11120000DCBAUTOI EQU   BIT0           IPLAUTO=YES WAS SPECIFIED IN THE
  S22024 11130000*                             DCB
  S22024 11140000DCBAUTOD EQU   BIT1           DMPAUTO=YES WAS SPECIFI  ED IN TH
E   S22024 11150000*                             DCB MACRO.
    S22024 11160000DCBINITL EQU   BIT2           BRINGUP=YES WAS SPECIFIED IN TH
E   S22024 11170000*                             DCB MACRO.
    S  22024 11180000DCBRSTRT EQU   BIT3           RESTART IS IN PROCESS
      S22024 11190000DCBIPLED EQU   BIT4           3705 HAS BEEN IPL'D.
      S22024 11200000DCBBAKUP EQU   BIT5           BACKUP=YES WAS SPECIFIED IN T
HE    S22024 1121000  0*                             DCB MACRO.
        S22024 11220000DCBNIDLE EQU   BIT6           IDLE=NO WAS SPECIFIED IN TH
E OPEN  S22024 11230000*                             MACRO OR WAS IMPLIED BY DEF
AULT    S22024 11240000DCBCHNGL EQU     BIT7           IPL TEXT HAS BEEN CHANGED
          S22024 11250000.SKP043A ANOP  ,
             DBC 11260000         AIF   (NOT &DSORGTR OR (&DSORGCQ OR &DSORGIS O
R &DSORGBX OR   *11270000               &DSORGDA O  R &DSORGQX OR &DSORGQS OR &D
SORGBS OR         *11280000               &DSORGXE OR &DSORGMQ OR &DSORGTQ OR &D
SORGTX)).C8A0      11290000&LSW(044) SETB (1)
               DBC 11300000&P.DSORG DS    0BL2           DATA SET   ORGANIZATION
 BEING USED   S22024 11310000&P.DSRG1 DS    BL1            FIRST BYTE OF DCBDSOR
G             S22024 11320000&P.DSRG2 DS    BL1            SECOND BYTE OF DCBDSO
RG            S22024 11330000         AIF   (&#DCBDSG OR &#DCBSW(44)).SKP044A
                   DBC 11340000DCBDSGTR EQU   BIT5           DSORG=TR SPECIFIED
                S22024 11350000&P.IOBAD DS    A              ADDRESS OF IOB
                S22024 11360000.SKP044A ANOP  ,
               +     DBC 11370000         AGO   .C8A1
                    S22024 11380000.C8A0    ANOP
                    S22024 11390000&LSW(045) SETB (1)
                       DBC 11400000         DS    H              DCBDSORG
                    S22024 1  1410000         DS    A              DCBIOBAD
                      S22024 11420000.C8A1    ANOP
                      S22024 11430000&P.RNCKD DS    0A             FULL WORD LAB
EL                    S22024 11440000           DS    BL1            RESERVED
                        S22024 11450000&P.RNCKA DS    AL3            ADDRESS OF
THE DCB USED TO RETAIN  S22024 11460000*                             INCIDENT CH
ECKPOINT RECORDS        S22024 11470000*                               GENERATED
 BY THE 3705.             S22024 11480000         AIF   (&DSORGIS OR &DSORGDA OR
 &DSORGQS OR &DSORGBS OR        *11490000               &DSORGXE OR &DSORGBX OR
&DSORGQX OR &DSORGTX OR         *11500000               &DSORGMQ OR &DSOR  GTQ).
C8A2                        S22024 11510000&LSW(046) SETB (1)
                               DBC 11520000&P.EXLST DS    0A             FULL WO
RD LABEL FOR EXLIST         S22024 11530000         AGO   .C8A3
                              S22024 11540000.C8A2    ANOP
                              S22024 11550000&LSW(047) SETB (1)
                                 DBC 11560000         DS    0A             DCBEX
LST                             S22024 11570000.C8A3    ANOP
                                S22024 11580000         AIF   (&DSORGBX OR &DSOR
GQX OR &DSORGTX).C8A4           S22024 11590000&LSW(048) SETB (1)
                                   DBC   11600000&P.EIOBX DS    BL1            S
IZE, IN BYTES, OF THE IOB.        S22024 11610000         AGO   .C8A5
                                  S22024 11620000.C8A4    ANOP
                                  S22024 11630000&LSW  (049) SETB (1)
                                       DBC 11640000         DS    BL1
 DCBEIOBX                           S22024 11650000.C8A5    ANOP
                                    S22024 11660000         AIF   (&  DSORGBX OR
 &DSORGQX OR &DSORGTX OR &DSORGIS OR        *11670000               &DSORGDA OR
&DSORGQS OR &DSORGBS OR &DSORGXE  OR        *11680000               &DSORGMQ OR
&DSORGTQ).C8A6                        S22024 11690000&LSW(050) SETB (1)
                                           DBC 11700000&P.EXLSA DS    AL3
     ADDRESS OF THE EXIT LIST.          S22024 11710000         AGO   .C8A7
                                        S22024 11720000.C8A6    ANOP
                                          S22024 11730000&LSW(051) SETB (1)
                                             DBC 11740000         DS    AL3
       DCBEXLSA                           S22024 11750000.C8A7    AIF   (&DSORGL
R AND NOT (&DSORGIS OR &DSORGBX O+ R &DSORGDA OR  *11760000               &DSORG
QX OR &DSORGCQ OR &DSORGMQ OR &  DSORGXA OR         *11770000               &DSO
RGQS OR &DSORGBS OR &DSORGXE OR &DSORGTR)).CF        11780000&LSW(052) SETB (1)
                                                 DBC 11790000*
     FOUNDATION BEFORE OPEN                            11800000         SPACE 1
                                                       11810000         ORG   &P
.DCB+40                                                11820000&P.DDNAM DS    CL
8 -          NAME ON THE DD STATEMENT WHICH DEFINES    118300  00*
               THE DATA SET ASSOCIATED WITH THIS DCB     11840000&P.OFLGS DS
BL1 -          FLAGS USED BY OPEN ROUTINE                11850000         AIF
(&#DCBSW(052)).SKP052A                               DBC 11860000DCBOFLWR EQ  U
  BIT0 -         IF ZERO, LAST I/O OPERATION WAS READ OR   11870000*
                 POINT.  IF ONE, LAST I/O OPERATION WAS    11880000*
                 WRITE.                                    11890000DCBOFIOD EQU
  BIT0 -           DATA SET IS BEING OPENED FOR INPUT OR     11900000*
                   OUTPUT (BDAM)                             11910000DCBOFLRB EQ
U   BIT1 -         LAST I/O OPERATION WAS IN READ BACKWARD   11920000*
                   MODE                                        11930000
AIF   (&#DCBSW(108)).SKP052A                               DBC 11940000DCBOFEOV
EQU   BIT2 -         SET TO 1 BY EOV WHEN IT CALLS CLOSE       11950000*
                     ROUTINE FOR CONCATEN  ATION OF DATA SETS    11960000*
                       WITH UNLIKE ATTRIBUTES                    11970000DCBOFOP
N EQU   BIT3 -         AN OPEN HAS BEEN SUCCESSFULLY COMPLETED   11980000DCBOFPP
C EQU   BIT4 -         SET TO 1 BY PROBLEM PROGRAM TO IN  DICATE A 11990000*
                         CONCATENATION OF UNLIKE ATTRIBUTES        12000000DCBOF
TM  EQU   BIT5 -         TAPE MARK HAS BEEN READ                   12010000DCBOF
UEX EQU   BIT6 -         SET TO 0 BY AN I/O SUPPORT FUNCTION WHEN  1202  0000*
                           THAT FUNCTION TAKES A USER EXIT. SET TO 1 12030000*
                           ON RETURN FROM USER EXIT TO THE I/O       12040000*
                           SUPPORT FUNCTION WHICH TOOK THE EXIT.     12050000DCB
OFIOF   EQU   BIT7 -         SET TO 1 BY AN I/O SUPPORT FUNCTION IF    12060000*
                             DCB IS TO BE PROCESSED BY THAT FUNCTION   12070000.
SKP052A ANOP  ,                                                    DBC 12080000&
P.IFLG  DS    BL1 -            FLAGS USED BY IOS IN COMMUNICATING ERROR  1209000
0*                             CONDITIONS AND IN DETERMINING CORRECTIVE  1210000
0*                             PROCEDURES                                1211000
0         AIF   (&#DCBSW(052)).SKP05  2B                               DBC 12120
000DCBIBEC  EQU   BIT0+BIT1 -    ERROR CORRECTION INDICATOR                12130
000DCBIFNEP EQU   X'00' -        NOT IN ERROR PROCEDURE                    12140
000DCBEX    EQU   BIT1           ERROR CORRECTION O+ R IOS PAGE FIX IN       121
50000*                             PROCESS                                     1
2160000DCBIFPEC EQU   BIT0+BIT1 -    PERMANENT ERROR CORRECTION                1
2170000DCBIBPCT EQU   BIT2+BIT3 -    PRINTER CARRIAGE TAPE PUNCH INDICATOR     1
2180000DCBIFC9  EQU   BIT2 -         CHANNEL 9 PRINTER CARRIAGE   TAPE PUNCH
 12190000*                             SENSED
 12200000DCBIFC12 EQU   BIT3 -         CHANNEL 12 PRINTER CARRIAGE TAPE PUNCH
 12210000*                             SENSED
   12220000DCBIBIOE EQU   BIT4+BIT5 -    IOS ERROR ROUTINE USE INDICATOR
   12230000DCBIFER  EQU   X'00' -        ALWAYS USE I/O SUPERVISOR ERROR ROUTINE
   12240000DCBIFNE1 EQU   BIT5 -         NEVER USE I/O SUPERVISOR ERROR ROUTINE
   12250000DCB  IFTIM EQU   BIT5 -         TEST IOS MASK (IMSK) FOR ERROR PROCED
URE  12260000*                             (BTAM)
     12270000DCBIFNE2 EQU   BIT4 -         NEVER USE I/O SUPERVISOR ERROR ROUTIN
E    12280000DCBIFNE3 EQU   B  IT4+BIT5 -    NEVER USE I/O SUPERVISOR ERROR ROUT
INE    12290000.SKP052B ANOP  ,
   DBC 12300000&P.MACR  DS    0BL2 -         MACRO INSTRUCTION REFERENCE
       12310000&P.MACR1 DS    BL1 -            FIRST BYTE OF DCBMACR
         12320000         AIF   (&#DCBSW(052)).SKP052E
     DBC 12330000DCBMRECP EQU   BIT0 -         EXECUTE CHANNEL PROGRAM (EXCP) --
-        12340000*                             ALWAYS ZERO   (BSAM, QSAM, BPAM,
BISAM,     12350000*                             QISAM, BDAM) --- RESERVED (QTAM
, BTAM)    12360000DCBMRFE  EQU   BIT1 -         FOUNDATION EXTENSION IS PRESENT
 (EXCP)    12370000DCBMRGET EQU   BIT1 -         GET (QSAM, QISAM, TCAM)
             12380000DCBMRPTQ EQU   BIT1 -         PUT FOR MESSAGE GROUP (QTAM)
---          12390000*                             ALWAYS ZERO (BSAM, BPAM, BISA
M, BDAM) --- 12400000*                             RESERVED (BTAM)
               12410000DCBMRAPG EQU   BIT2 -         APPENDAGES ARE REQUIRED (EX
CP)            12420000         AIF   (&#DCBSW(108)).SKP052C
           DBC 12430000DCBMRRD  EQU   BIT2 -         READ (BSAM, BPAM, BISAM, BD
AM, BTAM)      12440000.  SKP052C ANOP  ,
             DBC 12450000DCBMRWRQ EQU   BIT2 -         WRITE FOR LINE GROUP (QTA
M) ---           12460000*                             ALWAYS ZERO (QSAM, QISAM)
                 12470000DCBMRCI  EQU     BIT3 -         COMMON INTERFACE (EXCP)
                   12480000DCBMRMVG EQU   BIT3 -         MOVE MODE OF GET (QSAM,
 QISAM)            12490000DCBMRRDK EQU   BIT3 -         KEY SEGMENT WITH READ (
BDAM) ---          12500000*                               ALWAYS ZERO (BISAM) -
--                   12510000*                             RESERVED (BSAM, BPAM,
 QTAM, BTAM)         12520000DCBMRLCG EQU   BIT4 -         LOCATE MODE OF GET (Q
SAM, QISAM)          12530000DCBMRRDI EQU   BIT4 -         ID ARGUMEN+ T WITH RE
AD (BDAM) ---          12540000*                             ALWAYS   ZERO (BISA
M) ---                   12550000*                             RESERVED (EXCP, B
SAM, BPAM, QTAM, BTAM)   12560000DCBMRABC EQU   BIT5 -         USER'S PROGRAM MA
INTAINS ACCURATE BLOCK   12570000*                             COUNT (EXCP)
                           12580000DCBMRPT1 EQU   BIT5 -         POINT (WHICH IM
PLIES NOTE) (BSAM, BPAM)   12590000DCBMRSBG EQU   BIT5 -         SUBSTITUTE MODE
 OF GET (QSAM)             12600000DCBMRDBF EQU   BIT5 -         DYNAMIC BUFFERI
NG (BISAM, BDAM)   ---       12610000*                             ALWAYS ZERO (
QISAM) ---                   12620000*                             RESERVED (QTA
M, BTAM)                     12630000DCBPGFXA EQU   BIT6 -         PAGE FIX APPE
NDAGE IS SPECIFIED (EXCP)    126  40000         AIF   (&#DCBSW(108)).SKP052D
                           DBC 12650000DCBMRCRL EQU   BIT6 -         CNTRL (BSAM
, QSAM)                        12660000.SKP052D ANOP  ,
                           DBC 12670000DCBMRCHK   EQU   BIT6 -         CHECK (BI
SAM)                             12680000DCBMRRDX EQU   BIT6 -         READ EXCL
USIVE (BDAM) ---                 12690000*                             RESERVED
(BPAM, QISAM, QTAM, BTAM)        12700000DCBMRDMG EQU   BIT7 -           DATA MO
DE OF GET (QSAM)                   12710000DCBMRCK  EQU   BIT7 -         CHECK (
BDAM) --- RESERVED (EXCP, BSAM,    12720000*                             BPAM, B
ISAM, QISAM, QTAM, BTAM)           12730000.SKP052E ANOP  ,
                                 DBC 12740000&P.MACR2 DS    BL1 -          SECON
D BYTE OF DCBMACR                    12750000         AIF   (&#DCBSW(052)).SKP05
2H                               DBC 12760000DCBMRSTL EQU   BIT0 -         SETL
(QISAM) ---   ALWAYS ZERO (BSAM, QSAM, 12770000*                             BPA
M, BISAM, BDAM) ---                    12780000*                             RES
ERVED (EXCP, QTAM, BTAM)               12790000DCBMRPUT EQU   BIT1 -         PUT
 (QSAM, TCAM) - PUT OR PUTX   (QISAM)    12800000DCBMRGTQ EQU   BIT1 -         G
ET FOR MESSAGE GROUP (QTAM) ---          12810000*                             A
LWAYS ZERO (BSAM, BPAM, BISAM, BDAM) --- 12820000*                             R
ESERVED (EXCP, BTAM)                     1  2830000         AIF   (&#DCBSW(108))
.SKP052F                               DBC 12840000DCBMRWRT EQU   BIT2 -
 WRITE (BSAM, BPAM, BISAM, BDAM, BTAM)     12850000.SKP052F ANOP  ,
                                       DBC 12860000DCBMRR  DQ EQU   BIT2 -
   READ FOR LINE GROUP (QTAM) ---            12870000*
   ALWAYS ZERO (QSAM, QISAM) ---             12880000*
   RESERVED (EXCP)                           12890000DCBMRMVP EQU   BIT3   -
     MOVE MODE OF PUT (QSAM, QISAM)            12900000DCBMRWRK EQU   BIT3 -
     KEY SEGMENT WITH WRITE (BDAM) ---         12910000*
     ALWAYS ZERO (BISAM) ---                   12920000*
     RE+ SERVED (EXCP, BSAM, BPAM, QTAM, BTAM)   12930000DCBMR5WD EQU   BIT4 -
         FIVE-WORD DEVICE INTERFACE (EXCP)         12940000DCBMRLDM EQU   BIT4 -
         LOAD MODE BSAM (CREATE BDAM DATA SET)     12950000*
         (BSAM)                                    12960000DCBMRLCP EQU   BIT4 -
         LOCATE MODE   OF PUT (QSAM, QISAM)          12970000DCBMRIDW EQU   BIT4
 -         ID ARGUMENT WITH WRITE (BDAM) ---         12980000*
           ALWAYS ZERO (BISAM) ---                   12990000*
           RESERVED (BPAM, QTAM, BT  AM)               13000000DCBMR4WD EQU   BI
T5 -         FOUR-WORD DEVICE INTERFACE (EXCP)         13010000DCBMRPT2 EQU   BI
T5 -         POINT (WHICH IMPLIES NOTE) (BSAM, BPAM)   13020000DCBMRTMD EQU   BI
T5 -         SUBSTITUTE MODE (QSAM)                      13030000DCBMRUIP EQU
BIT5 -         UPDATE IN PLACE (PUTX) (QISAM) ---        13040000*
               ALWAYS ZERO (BISAM) ---                   13050000*
               RESERVED (BDAM, QTAM, BTAM)               13060000  DCBMR3WD EQU
  BIT6 -         THREE-WORD DEVICE INTERFACE (EXCP)        13070000         AIF
  (&#DCBSW(108)).SKP052G                               DBC 13080000DCBMRCTL EQU
  BIT6 -         CNTRL (BSAM, QSAM)                        13090000.SKP052G ANOP
    ,                                                    DBC 13100000DCBMRSTK EQ
U   BIT6 -         SETL BY KEY (QISAM)                       13110000DCBMRAWR EQ
U   BIT6 -         ADD TYPE OF WRITE (BDAM) ---              13120000*
                     ALWAYS ZERO (BISAM) ---                   13130000*
                     RESERVED (BPAM, QTAM, BTAM)               13140000DCBMR1WD
EQU   BIT7 -         ONE-WORD DEVICE INTERFACE (EXCP)          13150000DCBMRSWA
EQU   BIT7 -         USER'S PR  OGRAM HAS PROVIDED A SEGMENT     13160000*
                       WORK AREA POOL (BSAM CREATE BDAM, BDAM)   13170000DCBMRDM
D EQU   BIT7 -         DATA MODE (QSAM)                          13180000DCBMRST
I EQU   BIT7 -         SETL BY ID (QISAM) ---                      13190000*
                         ALWAYS ZERO (BISAM) ---                   13200000*
                         RESERVED (BPAM, QTAM, BTAM)               13210000.SKP0
52H ANOP  ,                                                      DBC 13220000
      SPACE 1                                                        13230000*
                     FOUNDATION AFTER OPEN                           13240000
      SPACE 1                                                        132500  00
        ORG   &P.DCB+40                                                13260000&
P.TIOT  DS    H -            OFFSET FROM TIOT ORIGIN TO TIOELNGH FIELD 13270000*
                             IN TIOT ENTRY FOR DD STATEMENT ASSOCIATED 13280000*
                               WITH THIS DCB                             1329000
0&P.MACRF DS    0BL2 -         SAME AS DCBMACR BEFORE OPEN               1330000
0&P.MACF1 DS    BL1 -          FIRST BYTE OF DCBMACRF                    1331000
0&P.MACF2 DS    BL1 -    +       SECOND BYTE OF DCBMACRF                   13320
000&P.DEBAD DS    0A -             ADDRESS OF ASSOCIATED DEB                 133
30000&P.IFLGS DS    BL1 -          SAME AS DCBIFLG BEFORE OPEN               133
40000         AIF   (&#DCBSW(052)).SKP052I                               DBC 133
50000DCBIFEC  EQU   BIT0+BIT1 -    ERR  OR CORRECTION INDICATOR                1
3360000DCBIFPCT EQU   BIT2+BIT3 -    PRINTER CARRIAGE TAPE PUNCH INDICATOR     1
3370000DCBIFIOE EQU   BIT4+BIT5 -    IOS ERROR ROUTINE USE INDICATOR           1
3380000.SKP052I ANOP  ,                                                      DBC
 13390000&P.DEBA  DS    AL3 -          ADDRESS OF ASSOCIATED DEB
 13400000         SPACE 1
 13410000         AIF   (NOT (&DSORGBX OR &DSORGDA OR &DSORGQX OR &D  SORGBS)).C
8A 13420000&LSW(053) SETB (1)                                                  D
BC 13430000         ORG   &P.DCB+48
   13440000&P.READ  DS    0A -           ADDRESS OF READ MODULE
     13450000&P.WRITE DS    A -            ADDRESS OF WRITE MODULE
     13460000         SPACE 1
     13470000.C8A     AIF   (NOT (&DSORGIS OR &DSORGQX OR &DSORGMQ OR &DSORGQS O
R   *13480000                 &DSORGTR)).C8B
S22024 13490000&LSW(054) SETB (1)
   DBC 13500000         ORG   &P.DCB+48
       13510000&P.GET   DS    0A   -           ADDRESS OF GET MODULE
         13520000&P.PUT   DS    A -            ADDRESS OF PUT MODULE
         13530000         SPACE 1
         13540000.C8B     ANOP
           13550000         AIF   (NOT (&DSORGTX OR &DSORGTR)).C8B1
           13560000&LSW(055) SETB (1)
       DBC 13570000*                       TCAM LINE GROUP EXTE  NSION
             13580000*                       3705 EXTENSION
             13590000         SPACE 1
             13600000         ORG   &P.DCB+48
               13610000&P.SCTAB DS    0A -           ADDRESS OF SPECIAL CHARACTE
RS TABLE (SCT) 13620000         DS    BL1 -          DCBOFLGS - FLAGS USED BY OP
EN ROUTINE     13630000&P.SCTAD DS    AL3 -          ADDRESS OF SPECIAL CHARACTE
RS TABLE (SCT  ) 13640000&P.ILCT  DS    FL1 -          COUNT OF INVITATION LISTS
                 13650000&P.UNTCT DS    FL1 -          BEFORE OPEN - NUMERICAL V
ALUE OF SCT.     13660000*                             AFTER OPEN - COUNT OF UNI
TS FOR 1 BUFFER. 13670000&P.  BUFSI DS    H -            SIZE OF ALL BUFFERS USE
D FOR THIS LINE    13680000*                             GROUP
                   13690000         AIF   (NOT &DSORGTX).C8B1
            S22024 13700000&LSW(056) SETB (+ 1)
                 DBC 13710000&P.RESER DS      0CL4 -         NUMBER OF RESERVED
BYTES IN BUFFERS       13720000&P.RESB1 DS    FL1 -          NUMBER OF BYTES RES
ERVED IN THE BUFFER    13730000*                             RECEIVING FIRST INC
OMING SEGMENT OF A     13740000*                               MESSAGE
                         13750000&P.RESB2 DS    FL1 -          NUMBER OF BYTES R
ESERVED IN ALL BUFFERS   13760000*                             EXCEPT THE ONE CO
NTAINING FIRST SEGMENT   13770000*                             OF A MES  SAGE
                           13780000         DS    XL2 -          RESERVED
                           13790000         SPACE 1
                           13800000*        THE FOLLOWING 4 BYTES MAY BE REPEATE
D 'N'   TIMES                13810000&P.INVLI DS    0A -           ADDRESS OF IN
VITATION LIST                13820000&P.INVCI DS    BL1 -          TYPE OF COMMU
NICATION INTERFACE FOR 2701  13830000*                             DATA ADAPTER
UNIT                           13840000         AIF   (&#DCBSW(056)).SKP056A
                           DBC 13850000DCBINVB1 EQU   BIT2 -         IF ZERO, UN
IT (A,)                        13860000*                             IF ONE, UNI
T (B,)                         13870  000DCBINVB2 EQU   BIT4 -         IF ZERO,
UNIT (,A)                        13880000*                             IF ONE, U
NIT (,B)                         13890000.SKP056A ANOP  ,
                             DBC 13900000&P.INVLA D  S    AL3 -          ADDRESS
 OF INVITATION LIST                13910000         SPACE 1
                                   13920000.C8B1    ANOP
                                   13930000         AIF   (NOT (&D  SORGXA OR &D
SORGXE)).C9                          13940000&LSW(057) SETB (1)
                                 DBC 13950000*                       EXCP WITH E
XTENSION OR APPENDAGES               13960000         SPACE 1
                                       13970000         ORG   &P.DCB+52
                                       13980000         AIF   (&DSORGIS OR &DSOR
GDA OR &DSORGQS OR &DSORGBS).C8C       13990000&LSW(058) SETB (1)
                                     DBC 14000000&P.OPTCD DS    BL1 -          O
PTION CODES                              14010000         AGO   .C8D
                                         14020000.C8C     ANOP
                                           14030000&LSW(059) SETB (1)
                                       DBC 14040000         DS    BL1 -
 DCBOPTCD - OPTION CODES                   14050000.C8D     ANOP
                                           140  60000         AIF   (&DSORGQS OR
 &DSORGBS).C8E                               14070000&LSW(060) SETB (1)
                                         DBC 14080000         AIF   (&#DCBSW(60)
 OR &#DCBSW(83)).SKP060A                 DBC 14090000DCBOPTZ +  EQU   BIT5 -
     MAGNETIC TAPE DEVICES - USE REDUCED ERROR 14100000*
       RECOVERY PROCEDURE (EXCP, BSAM, BPAM,     14110000*
       QSAM)                                     14120000DCBSRCHD EQU   BIT5 -
       USE SEARCH DIRECT, INSTEAD OF SEARCH      14130000*
         PREVIOUS, ON RECORD POSITION SENSING      14140000*
         DEVICE  (EXCP, BSAM, BPAM, QSAM)   ICB217 14150000.SKP060A ANOP  ,
                                               DBC 14160000.C8E     ANOP
                                                     14170000         DS    XL7
-          RESERVED                                  14180000         SPACE 1
                                                     14190000         AIF   (NOT
 &DSORGXA).C9                                          14200000&LSW(061) SETB (1
)                                                  DBC 14210000*
       EXCP APPENDAGE LIST                             14220000         SPACE 1
                                                         14230000         ORG
&P.DCB+60                                                14240000&P.EOEA  DS
CL2 -          END OF EXTENT APPENDAGE ID                14250000&P.PCIA  DS
CL2 -          PROGRAM CONTROLLED INTERRUPTION             14260000*
                 APPENDAGE ID                              14270000&P.SIOA  DS
  CL2 -          START I/O APPENDAGE ID                    14280000&P.CENDA DS
  CL2 -          CHANNEL END APPENDAGE ID                  14290000&P  .XENDA DS
    CL2 -          ABNORMAL END APPENDAGE ID                 14300000         DS
    XL2 -          RESERVED                                  14310000         SP
ACE 1                                                        14320000.C9      AI
F     (NOT &DSORGIS).CA                                        14330000&LSW(062)
 SETB (1)                                                  DBC 14340000*
               BISAM-QISAM INTERFACE                           14350000
SPACE 1                                                          14360000
  ORG   &P.DCB+52                                                14370000&P.OPTC
D DS    BL1 -          OPTION CODES                              14380000
  AIF   (&DSORGQS OR &DSORGBS).C9A                                 14390000&LSW(
063) SETB (1)                                                  DBC 14400000
    AIF   (&#DCBSW(63) OR &#DCBSW(68) OR &#DCBSW(38)).SKP063A  DBC 14410000DCBOP
TW  EQU   BIT0 -         WRITE VALIDITY CHECK (DA  SD)               14420000*
                           (BSAM, BPAM, QSAM, ISAM, BDAM)            14430000.SK
P063A ANOP  ,                                                    DBC 14440000
      AGO   .C9B                                                       14450000.
C9A     ANOP                                                           14460000&
LSW(064) SETB (1)                                                  DBC 14470000*
        BIT0 IS DCBOPTW - SAME AS BSAM                                 14480000
           _ .C9B     ANOP
     14490000         AIF   (&#DCBSW(062)).SKP062A
 DBC 14500000DCBOPTUF EQU   BIT1 -         FULL-TRACK INDEX WRITE
     14510000D  CBOPTM  EQU   BIT2 -         MASTER INDEXES
       14520000DCBOPTI  EQU   BIT3 -         INDEPENDENT OVERFLOW AREA
       14530000DCBOPTY  EQU   BIT4 -         CYLINDER OVERFLOW AREA
       14540000DCBOPTL  EQU     BIT6 -         DELETE OPTION
         14550000DCBOPTR  EQU   BIT7 -         REORGANIZATION CRITERIA
         14560000.SKP062A ANOP  ,
     DBC 14570000&P.MAC   DS    BL1 -            EXTENSION OF DCBMACRF FIELD FOR
 ISAM      14580000         AIF   (&#DCBSW(062)).SKP062B
       DBC 14590000DCBMACUR EQU   BIT4 -         UPDATE FOR READ
           14600000DCBMACUW EQU   BIT5 -         UPDATE TYP  E OF WRITE
             14610000DCBMACAW EQU   BIT6 -         ADD TYPE OF WRITE
             14620000DCBMACRE EQU   BIT7 -         READ EXCLUSIVE
             14630000.SKP062B ANOP  ,
           DBC 14640000&P.NTM   DS    FL1 -          NUMBER OF TRACKS THAT DETER
MINE THE       14650000*                             DEVELOPMENT OF A MASTER IND
EX             14660000*                             MAXIMUM PERMISSABLE VALUE -
 99              14670000&P.CYLOF DS    FL1 -          NUMBER OF TRACKS TO BE RE
SERVED ON EACH   14680000*                             PRIME DATA CYLINDER FOR R
ECORDS THAT      14690000*                             OVERFLOW FROM OTHER TRACK
S ON THAT        1470000  0*                             CYLINDER
                   14710000&P.SYNAD DS    A -            ADDRESS OF USER'S SYNAD
 ROUTINE           14720000&P.RKP   DS    H -            RELATIVE POSITION OF FI
RST BYTE OF KEY    14730000*                               WITHIN EACH LOGICAL R
ECORD                14740000&P.BLKSI DS    H -            BLOCK SIZE
                     14750000&P.LPDT  DS    0BL8 -         FOR RESUME LOAD,THE L
AST PRIME DATA       14760000*                               TRACK ON THE LAST P
RIME DATA CYLINDER     14770000*                             IN THE FORM MBBCCHH
R.          ICBI DCB-5 14780000&P.MSWA  DS    A -            ADDRESS OF MAIN STO
RAGE WORK AREA FOR USE 14790000*                             BY CONTR  OL PROGRA
M WHEN NEW RECORDS ARE   14800000*                             BEING ADDED TO AN
 EXISTING DATA SET       14810000&P.SMSI  DS    H -            NUMBER OF BYTES I
N AREA RESERVED TO HOLD  14820000*                             HIGHEST LEVEL IND
EX                         14830000&P.SMSW  DS    H -            NUMBER OF BYTES
 IN WORK AREA USED BY      14840000*                             CONTROL PROGRAM
 WHEN NEW RECORDS ARE      14850000*                             BEING ADDED TO
DATA SET           +         14860000&P.MSHI  DS    0A -           ADDRESS OF MA
IN STORAGE AREA T  O HOLD      14870000*                             HIGHEST LEV
EL INDEX                       14880000&P.NCP   DS    FL1 -          NUMBER OF C
OPIES OF READ-WRITE (TYPE K)   14890000*                             CHANNEL PRO
GRAMS THAT ARE TO BE           1  4900000*                             ESTABLISH
ED FOR THIS DCB.  (99 MAXIMUM)   14910000&P.MSHIA DS    AL3 -          SAME AS D
CBMSHI ABOVE                     14920000&P.SETL  DS    A -            ADDRESS O
F SETL MODULE FOR QISAM.         14930000*                               ADDRESS
 OF CHECK MODULE FOR BISAM         14940000&P.EXCD1 DS    BL1 -          FIRST B
YTE IN WHICH EXCEPTIONAL           14950000*                             CONDITI
ONS DETECTED IN PROCESSING DATA    14960000*                               RECOR
DS ARE REPORTED TO THE USER          14970000         AIF   (&#DCBSW(062)).SKP06
2C                               DBC 14980000DCBEXNKY EQU   BIT0 -         LOWER
 KEY LIMIT NOT FOUND                 14990000DCBEXIDA EQU   BIT1 -         IN  V
ALID DEVICE ADDRESS FOR LOWER LIMIT    15000000DCBEXNSP EQU   BIT2 -         SPA
CE NOT FOUND                           15010000DCBEXINV EQU   BIT3 -         INV
ALID REQUEST                           15020000DCBEXIER EQU   BIT4 -         UNC
ORRECTABLE I  NPUT ERROR                 15030000DCBEXOER EQU   BIT5 -         U
NCORRECTABLE OUTPUT ERROR                15040000DCBEXBLI EQU   BIT6 -         B
LOCK COULD NOT BE REACHED (INPUT)        15050000DCBEXBLU EQU   BIT7 -         B
LOCK COULD NOT BE REACHED (  UPDATE)       15060000.SKP062C ANOP  ,
                                       DBC 15070000&P.EXCD2 DS    BL1 -
 SECOND BYTE IN WHICH EXCEPTIONAL          15080000*
 CONDITIONS DETECTED IN PROCESSING DATA      15090000*
   RECORDS ARE REPORTED TO THE USER          15100000         AIF   (&#DCBSW(062
)).SKP062D                               DBC 15110000DCBEXSEQ EQU   BIT0 -
   SEQUENCE CHECK                            15120000DCBE  XDUP EQU   BIT1 -
     DUPLICATE RECORD                          15130000DCBEXCLD EQU   BIT2 -
     DCB CLOSED WHEN ERROR WAS DETECTED        15140000DCBEXOFL EQU   BIT3 -
     OVERFLOW RECORD                           15150000DCBEXLTH EQU   BI  T4 -
       FOR PUT - LENGTH FIELD OF RECORD LARGER   15160000*
       THAN LENGTH INDICATED IN DCBLRECL         15170000DCBEXRDE EQU   BIT4 -
       READ EXCLUSIVE                            15180000.SKP062D ANOP  ,
                                               DBC 15190000&P.LRECL DS    H -
         FOR FIXED-LENGTH RECORD FORMATS, LOGICAL  15200000*
         RECORD LENGTH.  FOR VARIABLE-LENGTH       15210000*
         RECORD FORMAT  S, MAXIMUM LOGICAL RECORD    15220000*
           LENGTH OR AN ACTUAL LOGICAL RECORD LENGTH 15230000*
           CHANGED DYNAMICALLY BY USER WHEN CREATING 15240000*
           THE DATA SET              +                 15250000&P.ESETL DS    A
-            ADDRESS OF ESETL ROUTI  NE IN GET MODULE    15260000&P.LRAN  DS
A -            ADDRESS OF READ-WRITE K MODULE OR         15270000*
               EXCLUSIVE MODULE                          15280000&P.LWKN  DS
A -            ADDRESS OF WRITE KN MODULE                  15290000&P.RELSE DS
  A -            WORK AREA FOR TEMPORARY STORAGE OF        15300000*
                 REGISTER CONTENTS                         15310000&P.PUTX  DS
  A -            WORK AREA FOR TEMPORARY STORAGE OF        153200  00*
                   REGISTER CONTENTS                         15330000&P.RELEX DS
    A -            ADDRESS OF READ EXCLUSIVE MODULE          15340000&P.FREED DS
    A -            ADDRESS OF DYNAMIC BUFFERING MODULE       15350000&P.HIRTI DS
      FL1 -          NUMBER OF INDEX ENTRIES THAT FIT ON A     15360000*
                     PRIME DATA TRACK                          15370000&P.FTMI2
DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST     15380000*
                       TRACK OF SECOND LEVEL MASTER INDEX (IN    15390000*
                       THE FORM MBBCCHH)                         15400000&P.LEMI
2 DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST      15410000*
                       ACTIVE   ENTRY IN SECOND LEVEL MASTER INDEX 15420000*
                         (IN THE FORM CCHHR)                       15430000&P.FT
MI3 DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST     15440000*
                         TRACK OF THIRD LEVEL   MASTER INDEX (IN     15450000*
                           THE FORM MBBCCHH)                         15460000&P.
LEMI3 DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST      15470000*
                           ACTIVE ENTRY IN THIRD LEVEL MASTE  R INDEX  15480000*
                             (IN THE FORM CCHHR)                       15490000&
P.NLEV  DS    FL1 -          NUMBER OF LEVELS OF INDEX                 15500000&
P.FIRSH DS    CL3 -          HHR OF FIRST DATA RECORD ON EACH          1551  000
0*                             CYLINDER.  FOR VARIABLE LENGTH RECORD     1552000
0*                             PROCESSING, R PORTION OF THIS FIELD IS    1553000
0*                             ALWAYS X'01'.                             1554000
0&P.HMASK   DS    CL1 -          BYTE INDICATING 2301 OR NOT               15550
000         AIF   (&#DCBSW(062)).SKP062E                               DBC 15560
000DCBHMDRM EQU   X'07' -        DEVICE IS 2301 DRUM                       15570
000DCBHMNDM EQU   X'FF' -          DEVICE IS OTHER THAN 2301 DRUM            155
80000.SKP062E ANOP  ,                                                    DBC 155
90000&P.LDT   DS    CL2 -          HH IS THE LAST PRIME DATA TRACK ON EACH   156
00000*                             CYLIN  DER                                  1
5610000&P.HIRCM DS    CL1 -          HIGHEST POSSIBLE R FOR TRACKS OF THE      1
5620000*                             CYLINDER AND MASTER INDICES               1
5630000&P.HIRPD DS    CL1 -          HIGHEST R ON ANY P+ RIME TRACK IN DATA SET.
 15640000*                             FOR VARIABLE-L  ENGTH RECORDS, THIS
   15650000*                             REPRESENTS THE GREATEST NUMBER OF
   15660000*                             PHYSICAL RECORDS ON ANY PRIME TRACK IN
   15670000*                             THE DATA SET
     15680000&P.HIROV DS    CL1 -          FOR FIXED-LENGTH RECORD FORMAT, HIGHE
ST   15690000*                             POSSIBLE R FOR OVERFLOW DATA TRACKS.
 FOR 15700000*                             VARIABLE-LENGTH RECORD FORMAT, UNUSED
.      15710000&P.HIRSH DS    CL1 -          FOR FIXED-LENGTH RECORD FORMAT, R O
F LAST 15720000*                             DATA RECORD ON A SHARED TRACK, IF
       15730000*                             APPLICABLE.  FOR VARIABLE-LENGTH RE
CORD   15740000*                               FORMAT, UNUSED.
         15750000&P.TDC   DS    H -            USER-SUPPLIED NUMBER OF RECORDS T
AGGED    15760000*                             FOR DELETION.
         15770000&P.NCRHI DS    H   -            NUMBER OF STORAGE LOCATIONS NEE
DED TO     15780000*                             HOLD THE HIGHEST LEVEL INDEX
           15790000&P.RORG3 DS    F -            FOR EACH USE OF DATA SET, NUMBE
R OF READ  15800000*                               OR WRITE ACCESSES TO AN OVERF
LOW RECORD   15810000*                             WHICH IS NOT FIRST IN A CHAIN
 OF SUCH     15820000*                             RECORDS
             15830000&P.NREC  DS    F -            NUMBER OF LO  GICAL RECORDS I
N PRIME DATA   15840000*                             AREA
               15850000&P.ST    DS    BL1 -          STATUS INDICATORS
               15860000         AIF   (&#DCBSW(062)).SKP062F
             DBC 15870000DCBSTSSM EQU   BIT0 -         SINGLE SCHEDULE MODE
                 15880000DCBSTKSQ EQU   BIT1 -         KEY SEQUENCE CHECKING IS
TO BE PERFORMED  15890000DCBSTLOD EQU   BIT2 -         LOADING HAS COMPLETED.  S
ET TO 1 BY CL  OSE 15900000*                             ROUTINE AND TO 0 BY FIR
ST EXECUTION OF    15910000*                             PUT ROUTINE.
                   15920000DCBSTNCY EQU   BIT3 -         EXTENSION OF DATA SET W
ILL BEGIN ON NEW   15930000*                               CYLINDER
                     15940000DCBSTNMC EQU   BIT5 -         FIRST MACRO INSTRUCTI
ON NOT YET RECEIVED  15950000DCBSTLBF EQU   BIT6 -         LAST BLOCK FULL
                     15960000DCBSTLTF EQU     BIT7 -         LAST TRACK FULL
                       15970000.SKP062F ANOP  ,
                   DBC 15980000&P.FTCI  DS    CL7 -          DIRECT ACCESS DEVIC
E ADDRESS OF FIRST     15990000*                               TRACK OF CYLINDER
 INDEX (IN THE FORM      16000000*                             MBBCCHH).
                         16010000&P.HIIOV DS    CL1 -          FOR FIXED LENGTH
RECORD FORMAT, HIGHEST   16020000*                             POSSIBLE R+  FOR
INDEPENDENT OVERFLOW DATA  16030000*                             TRACKS  .  FOR
VARIABLE LENGTH RECORD       16040000*                             FORMAT, UNUSE
D                            16050000&P.FTMI1 DS    CL7 -          DIRECT ACCESS
 DEVICE ADDRESS OF FIRST     16060000*                             TRACK OF FIRS
T LEVE  L MASTER INDEX (IN     16070000*                             THE FORM MB
BCCHH).                        16080000&P.NTHI  DS    FL1 -          NUMBER OF T
RACKS OF HIGH-LEVEL INDEX      16090000&P.FTHI  DS    CL7 -          DIRECT ACCE
SS DEVICE ADDRESS OF   FIRST     16100000*                             TRACK OF
HIGHEST LEVEL INDEX (IN THE      16110000*                             FORM MBBC
CHH).                            16120000&P.LPDA  DS    CL8 -          DIRECT AC
CESS DEVICE ADDRESS OF LAST      161  30000*                             PRIME D
ATA RECORD IN PRIME DATA AREA      16140000*                             (IN THE
 FORM MBBCCHHR).                   16150000&P.LETI  DS    CL5 -          DIRECT
ACCESS DEVICE ADDRESS OF LAST      16160000*                               ACTIV
E NORMAL ENTRY OF TRACK INDEX ON     16170000*                             LAST
ACTIVE CYLINDER (IN THE FORM CCHHR). 16180000&P.OVDEV DS    CL1 -          DEVIC
E TYPE FOR INDEPENDENT OVERFLOW      16190000         AIF   (&#DCB  SW(062)).SKP
062G                               DBC 16200000*        THESE SAME MASKS APPLY T
O DCBDEVT FOR ISAM DIRECT ACCESS       16210000DCBDVI11 EQU   X'01' -        231
1 DISK DRIVE                           16220000DCBDVI01 EQU   X'02' -        230
1   PARALLEL DRUM                        16230000DCBDVI03 EQU   X'03' -        2
303 SERIAL DRUM                          16240000DCBDVI02 EQU   X'04' -        2
302 DISK STORAGE                         16250000DCBDVI21 EQU   X'05' -        2
321 DATA CELL DR  IVE                      16260000DCBDVI14 EQU   X'08' -
 2314 DISK STORAGE FACILITY                16270000.SKP062G ANOP  ,
                                       DBC 16280000&P.NBOV  DS    H -
 FOR FIXED LENGTH RECORD FORMAT  , RESERVED. 16290000*
   FOR VARIABLE LENGTH RECORD FORMAT, IF THE 16300000*
   INDEPENDENT OVERFLOW OPTION IS SELECTED,  16310000*
   CONTAINS, IN BINARY, NUMBER OF BYTES LEFT 1  6320000*
     ON CURRENT TRACK OF INDEPENDENT OVERFLOW  16330000*
     AREA                                      16340000&P.LECI  DS    CL5 -
     DIRECT ACCESS DEVICE ADDRESS OF LAST      16350000*
       ACTIVE ENTRY IN CYLINDER INDEX (IN THE    16360000*
       FORM CCHHR).                              16370000         DS    X -
       RESERVED                                  16380000&P.RORG2 DS    H -
         NUMBER OF TRACKS (PARTIALLY OR WHOLLY)    16390000*
         REMAINING IN INDEPENDENT OVERFLOW AREA    16400000&P.LEMI1 DS    CL5 -
         DIRECT ACCESS DEVICE ADDRESS OF LAST      16410000*
         AC+ TIVE ENTRY IN FIRST LEVEL MASTER INDEX  16420000*
             (IN THE FORM CCHHR).                      16430000         DS    X
-            RESERVED                                  16440000&P.NOREC DS    H
-            NUMBER OF LOGICAL RECORDS IN AN OVERFLOW  16450000*
             AREA                                        16460000&P.LIOV  DS
CL8 -          DIRECT ACCESS DEVICE ADDRESS OF LAST      16470000*
               AREA (IN THE FORM MBBCCHHR).              16480000&P.RORG1 DS
H -            NUMBER OF CYLINDER OVERF  LOW AREAS THAT    16490000*
                 ARE FULL                                  16500000         DS
  XL2 -          RESERVED                                  16510000&P.WKPT1 DS
  A -            POINTER TO WORK AREA OR TO CONSTRUCTE  D    16520000*
                   CHANNEL PROGRAM FOR WHICH SPACE IS        16530000*
                   OBTAINED BY GETMAIN MACRO INSTRUCTIONS    16540000*
                   ISSUED BY OPEN EXECUTORS                  16550000  &P.WKPT2
DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1         16560000&P.WKPT3
DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1         16570000&P.WKPT4
DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1         16580000&P.WKPT5
DS      A -            ADDITIONAL POINTER AS IN DCBWKPT1         16590000&P.WKPT
6 DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1         16600000
  SPACE 1                                                        16610000.CA
  AIF   (NOT &DSORG  DA).CB                                        16620000&LSW(
065) SETB (1)                                                  DBC 16630000*
                   BDAM INTERFACE                                  16640000
    SPACE 1                                                          16650000
      ORG   &P.DCB+52                                                16660000&P.
CHECK DS    0A -           ADDRESS OF CHECK MODULE                   16670000
      AIF   (&DSORGIS).CA1                                             16680000&
LSW(066) SETB (1)                                                  DBC 16690000&
P.OPTCD DS    BL1 -          OPTION CODES                              16700000
        AGO   .CA2                                                       1671000
0.CA1     ANOP                                                           1672000
0&LSW(067) SETB (1)                                                  DBC 1673000
0         DS    BL1 -          DCBOPTCD - OPTION CODES                   167400
 00.CA2     ANOP                                                           16750
000         AIF   (&DSORGIS OR &DSORGQS OR &DSORGBS).CA3                   16760
000&LSW(068) SETB (1)                                                  DBC 16770
000         AI  F   (&#DCBSW(63) OR &#DCBSW(68) OR &#DCBSW(38)).SKP068A  DBC 167
80000DCBOPTW  EQU   BIT0 -         WRITE VALIDITY CHECK (DASD)               167
90000*                             (BSAM, BPAM, QSAM, ISAM, BDAM)            168
00000.SKP068A ANOP  ,        +                                             DBC 1
6810000         AGO   .CA4
 16820000.CA3     ANOP
 16830000&LSW(069) SETB (1)                                                  DBC
 16840000*        BIT0 IS DCBOPTW - SAME A  S BSAM AND ISAM
   16850000.CA4     ANOP
   16860000         AIF   (&#DCBSW(065)).SKP065A                               D
BC 16870000DCBOPTTO EQU   BIT1 -         TRACK OVERFLOW
     16880000DCBOPTE  EQU   BIT2 -         EXTENDED SEARCH
     16890000DCBOPTF  EQU   BIT3 -         FEEDBACK
     16900000DCBOPTA  EQU   BIT4 -         ACTUAL ADDRESSING
       16910000DCBOPTDB EQU   BIT5 -         DYNAMIC BUFFERING
       16920000DCBOPTRE EQU   BIT6 -         READ EXCLUSIVE
       16930000DCBOPTRB EQU   BIT7 -         RELATIVE BLOCK ADDRESSING
         16940000.SKP065A ANOP  ,
     DBC 16950000&P.CHCKA DS    AL3 -          ADDRESS OF CHECK MODULE
         16960000         AIF   (&DSORGIS).CAA
         16970000&LSW(  070) SETB (1)
       DBC 16980000&P.SYNAD DS    A -            ADDRESS OF SYNAD ROUTINE
           16990000         DS    XL2 -          RESERVED
           17000000&P.BLKSI DS    H -              MAXIMUM BLOCK SIZE
             17010000         AGO   .CAB
             17020000.CAA     ANOP
             17030000&LSW(071) SETB (1)
           DBC 17040000         DS    A -            DCBSYNAD - ADDRESS OF SYNAD
 ROUTINE       17050000         DS    XL2 -          RESERVED
               17060000         DS    H -            DCBBLKSI - MAX  IMUM BLOCK
SIZE             17070000.CAB     ANOP
                 17080000&P.IOBSQ DS    A -            ADDRESS OF FIRST IOB ON U
NSCHEDULED QUEUE 17090000*                             FOR EITHER A WRITE-ADD RE
QU  EST WHEN       17100000*                             ANOTHER WRITE-ADD IS IN
 PROGRESS OR A     17110000*                             READ-EXCLUSIVE REQUEST
WHEN THE           17120000*                             READ-EXCLUSIVE LIST IS
FULL                 17130000&P.SQND  DS    A -            ADDRESS OF LAST IOB O
N UNSCHEDULED QUEUE  17140000&P.IOBUQ DS    A -            ADDRESS OF FIRST IOB
ON UNPOSTED QUEUE    17150000&P.UQND  DS    A -            ADDRESS OF LAST JOB O
N UNPOSTED QUEUE     17160000*                               THAT IS MAINTAINED
BY THE READ EXCLUSIVE  17170000*                             MODULE
                       17180000         DS    X -            RESERVED
                       17190000&P.LIMCT DS    F+ L3 -          NUMBER OF TRACKS
OR NUMBER OF RELATIVE    17200000*                               BLOCKS TO BE SE
ARCHED (EXTENDED SEARCH    17210000*                             OPTION)
                           17220000&P.XARG  DS    0A -           ADDRESS OF READ
 EXCLUSIVE LIST            17230000&P.XCNT  DS    FL1 -            NUMBER OF ENT
RIES IN READ EXCLUSIVE LIST  17240000&P.XARGA DS    AL3 -          ADDRESS OF RE
AD EXCLUSIVE LIST            17250000&P.DRDX  DS    0A -           ADDRESS OF RE
AD EXCLUSIVE MODULE          17260000&P.MVXNO DS    FL1 -          TOTAL NU  MBE
R OF EXTENTS IN MULTIVOLUME    17270000*                             DATA SET
                               17280000&P.DRDXA DS    AL3 -          ADDRESS OF
READ EXCLUSIVE MODULE          17290000&P.DFOR  DS    A -            ADDRESS OF
A FORMAT M  ODULE                17300000&P.DFBK  DS    A -            ADDRESS O
F A FEEDBACK MODULE              17310000&P.DYNB  DS    A -            FOR DYNAM
IC BUFFERING, ADDRESS OF DYNAMIC 17320000*                             BUFFER MO
DULE.  FOR UNBLOCKED SPAN  NED     17330000*                             RECORDS
 WITH BFTEK=R SPECIFIED AND NO     17340000*                             DYNAMIC
 BUFFERING, ADDRESS OF SEGMENT     17350000*                             WORK AR
EA CONTROL BLOCK                   17360  000         SPACE 1
                                     17370000.CB      AIF   (NOT &DSORGQX).CC
                                     17380000&LSW(072) SETB (1)
                                 DBC 17390000*                         QTAM INTE
RFACE                                  17400000         SPACE 1
                                       17410000         ORG   &P.DCB+52
                                       17420000&P.KSTAT DS    0CL4 -           F
OUR THRESHOLD VALUES FOR ERROR COUNTS    17430000&P.KSTA1 DS    FL1 -          T
HRESHOLD VALUE FOR NUMBER OF             17440000*                             T
RANSMISSIONS                             17450000&P.KSTA2 DS    FL1 -          T
HRESH  OLD VALUE FOR NUMBER OF DATA CHECKS 17460000&P.KSTA3 DS    FL1 -
 THRESHOLD VALUE FOR NUMBER OF             17470000*
 INTERVENTIONS REQUIRED                    17480000&P.KSTA4 DS    FL1 -
 THRESHOLD VALUE FOR   NUMBER OF TIMEOUTS    17490000         SPACE 1
                                             17500000*                       QTA
M POLLING LIST ORIGIN                        17510000         SPACE 1
                                               17520000&P.CPOLL DS    0A -
     A 4-BYTE FIELD FOR EACH POLLING LIST      17530000&P.PLBYT DS    BL1 -
     ADAPTER TYPE                              17540000         AIF   (&#DCBSW(0
72)).SKP072A                               DBC 175  50000DCBCPWTT EQU   BIT4 -
       WTTA                                      17560000.SKP072A ANOP  ,
                                             DBC 17570000&P.CPOLA DS    AL3 -
       ADDRESS OF THE POLLING LIST               17580000        +  SPACE 1
                                                   17590000.CC        AIF   (NOT
 &DSORGTQ).CC1                                       17600000&LSW(073) SETB (1)
                                                 DBC 17610000*
     TCAM MESSAGE QUEUE INTERFACE                    17620000         SPACE 1
                                                       17630000         ORG   &P
.DCB+52                                                17640000         AIF   (&
DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS).CC1A      17650000&LSW(074) SETB (1
)                                                    DBC 17660000&P.OPTCD DS
BL1 -          OPTION CODES                              17670000         AGO
.CC1B                                                    17680000.CC1A    ANOP
                                                           17690000&LSW(075) SET
B (1)                                                  DBC 17700000         DS
  BL1 -          DCBOPTCD - OPTION CODES                   17710000.CC1B    ANOP
                                                             17720000         AI
F   (&#DCBSW(073)).SKP073A                               DBC 17730000DCBOPTWP EQ
U   BIT0 -         SOURCE OR DESTINATION NAME PRECEDES       17740000*
                   MESSAGE (AFTER CONTROL BYTE)                17750000*
                     (TCAM PROCESS QUEUE)                      17760000DCBOPTUM
EQU   BIT1 -         WORK UNIT IS A MESSAGE.  DEFAULT WORK     17770000*
                     UNIT IS A RECORD.  (TCAM PROCESS QUEUE)   17780000DC  BOPTC
B EQU   BIT2 -         CONTROL BYTE PRECEDES WORK UNIT           17790000*
                       (TCAM PROCESS QUEUE)                      17800000DCBOPTC
P EQU   BIT2 -         CHECKPOINT DATA SET                       17810000DCBOPTI
M EQU     BIT6 -         NON-REUSABLE MESSAGE QUEUE DATA SET       17820000DCBOP
TRM EQU   BIT7 -         REUSABLE MESSAGE QUEUE DATA SET           17830000.SKP0
73A ANOP  ,                                                    DBC 17840000
    AIF   (&DSORGIS OR   &DSORGDA OR &DSORGQS OR &DSORGBS).CC1D      17850000&LS
W(076) SETB (1)                                                  DBC 17860000*
                                                          ICBI DCB-9 17870000
      DS    XL9 -           RESERVED                        ICBI DCB-9 17880000&
P.BLKSI DS    H -             BLOCK SIZE                    ICBI DCB-9 17890000
        AGO   .CC1E                                         ICBI DCB-9 17900000.
CC1D    ANOP                                                  ICBI DCB-9 1791000
0&LSW(077) SETB (1)                                                  DBC 1792000
0         DS    XL11 -         RESERVED                                  1793000
0.CC1E    ANOP                                                ICBI D  CB-9 17940
000         SPACE 1                                                        17950
000.CC1     ANOP                                                           17960
000         AIF   (NOT &DSORGMQ).CD                                        17970
000            _ &LSW(078) SETB (1)
     DBC 17980000*                       QTAM PROBLEM PROGRAM MESSAGE QUEUE INTE
RFACE    17990000         SPACE 1
         18000000           ORG   &P.DCB+52
           18010000&P.RECRD DS    A -            NOT USED BY QTAM
           18020000         AIF   (&DSORGIS OR &DSORGDA).CCA
           18030000&LSW(079) SETB   (1)
         DBC 18040000&P.SYNAD DS    A -            ADDRESS OF USER-PROVIDED SYNA
D ROUTINE TO 18050000*                             BE ENTERED IF A WORK UNIT IS
LONGER THAN  18060000*                               THE WORK AREA PROVIDED FOR
INPUT          18070000         AGO   .CCB
               18080000.CCA     ANOP
               18090000&LSW(080) SETB (1)
             DBC 18100000         DS    A -            DCBSYNAD - ADDRESS OF USE
R-PROVIDED SYNAD 18110000*                             ROUTINE TO BE ENTERED IF
A WORK UNIT IS   18120000*                             LONGER THAN THE WORK AR
EA PROVIDED FOR    18130000*                             INPUT
                   18140000.CCB     ANOP
                   18150000&P.EOBLK DS    A -            NOT USED BY QTAM
                     18160000         SPACE 1
                     18170000.CD      AIF   (NOT &DSORGBX).CDF
                     18180000&LSW(081) SETB (1)
                 DBC 1819000  0*                       BTAM INTERFACE
                       18200000         SPACE 1
                       18210000         ORG   &P.DCB+52
                       18220000&P.LERB  DS      A -            ADDRESS OF LINE E
RROR BLOCK               18230000         SPACE 1
                         18240000         AIF   (NOT &DEVDBS).CDF
                         18250000&LSW(082) SETB (1)
                       DBC 18260000*                       BSC INTERFACE
                           18270000         SPACE 1
                           18280000         ORG   &P.DCB+56
                             18290000&P.XMODE DS    BL1 -          MODE OF TRANS
MISSION FOR BINARY           18300000*                             SYNCHRONOUS C
OMMUNICATION (BSC)           18310000         AIF   (&#DCBSW(082)).SKP082A
                           DBC 18320000DCBXMIBC EQU   BIT1 -         INTERMEDIAT
E BLOCK CHECKING IS TO BE      18330000*                             PERFORMED
                               18340000DCBXMDA1 EQU   BIT2 -         TRANSMISSIO
N IS THROUGH A 2701 DAT+ A       18350000*                             ADAPTER U
NIT DUAL COMMUNICATIO  N           18360000*                             INTERFA
CE B                               18370000DCBXMDA2 EQU   BIT4 -         TRANSMI
SSION IS IN CODE B FOR A 2701      18380000*                             DATA AD
APTER UNIT DUAL CODE FEATURE       1  8390000.SKP082A ANOP  ,
                                 DBC 18400000&P.XCODE DS    BL1 -          BSC C
ONTROL STATION FLAG AND              18410000*                             TRANS
MISSION CODE                         18420000           AIF   (&#DCBSW(082)).SKP
082B                               DBC 18430000DCBXCCSF EQU   BIT0 -         BSC
 CONTROL STATION FLAG ---              18440000*                             IF
ZERO, THIS IS THE CONTROL STATION.     18450000*                               I
F ONE, THIS IS THE REMOTE STATION.       18460000DCBXCPTP EQU   BIT1 -         I
F PTOP IS SPECIFIED IN SYSGEN PROCEDURE  18470000*                             -
 SCHEDULE AN ASYNCHRONOUS EXIT TO        18480000*                             I
N  TERFACE RESOLUTION ROUTINE              18490000DCBXCTR1 EQU   BIT2 -
 6-BIT TRANSCODE IS BEING USED (BIT 4 IS   18500000*
 ALSO ON)                                  18510000DCBXCAS1 EQU   BIT3 -
 USASCII TRANSMI  SSION CODE IS BEING USED   18520000*
   (BIT 5 IS ALSO ON)                        18530000DCBXCEBC EQU   BIT4+BIT5 -
   IF BOTH BITS ARE ZERO, EBCDIC             18540000*
   TRANSMISSION CODE IS BEING U  SED.          18550000DCBXCTR2 EQU   BIT4 -
     6-BIT TRANSCODE IS BEING USED (BIT 2 IS   18560000*
     ALSO ON)                                  18570000DCBXCAS2 EQU   BIT5 -
     USASCII TRANSMISSION CODE IS BEING USED     18580000*
       (BIT 3 IS ALSO ON)                        18590000.SKP082B ANOP  ,
                                             DBC 18600000&P.BSRSV DS    CL1 -
       DLE CONTROL CHARACTER                     18610000&P.B  SWBT DS    X -
         RESERVED                                  18620000&P.IRRAD DS    0A -
         BEFORE OPEN - IF PTOP IS SPECIFIED IN THE 18630000*
         SYSGEN PROCEDURE, ADDRESS OF INTERFACE    18640000*
           RESOLUTION ROUTINE.                       18650000*
           AFTER OPEN, THE FOLLOWING 4 CHARACTERS    18660000*
           OCCUPY THIS SPACE.                        18670000&P.BSTSX DS    CL1
-            DLE CONTROL CHARACTER                     18680000&P.BSSTX DS    CL
1 -          STX CONTROL CHARACTER                     18690000&P.BSTEX DS    CL
1 -          DLE CONTROL CHARACTER                     18700000&P.BSETX DS    CL
1 -          ETX CONTROL C  HARACTER                     18710000&P.BSAK0 DS
CL2 -          ACK-0 CONTROL CHARACTER                   18720000&P.BSAK1 DS
CL2 -          ACK-1 CONTROL CHARACTER                   18730000&P.BSENQ DS
CL1 -          ENQ CONTROL CHARACTER     +                 18740000&P.BSNAK DS
  CL1 -          NAK CONTROL CHARACTER                       18750000&P.BSETB DS
    CL1 -          ETB CONTROL CHARACTER                     18760000&P.BSDLE DS
    CL1 -          DLE CONTROL CHARACTER                     18770000&P.BSEOT DS
    CL1 -          EOT CONTROL CHARACTER                       18780000&P.BSSYN
DS    CL3 -          SYN, SYN, SYN CONTROL CHARACTERS          18790000&P.BSONL
DS    CL2 -          SOH % CONTROL CHARACTERS                  18800000&P.BSSAK
DS    CL2 -          WACK CONTROL CHARACTERS                   188100  00&P.BSRV
I DS    CL2 -          DLE @ CONTROL CHARACTERS                  18820000
  DS    XL18 -         RESERVED                                  18830000
  SPACE 1                                                        18840000.CDF
  AI  F   (NOT (&DSORGQS OR &DSORGBS)).FIN                         18850000&LSW(
083) SETB (1)                                                  DBC 18860000*
                   QSAM-BSAM-BPAM COMMON INTERFACE                 18870000
    SPACE 1                                                          18880000
      ORG   &P.DCB+52                                                18890000
      AIF   (&DSORGDA).CDA1                                          18900000&LS
W(084) SETB (1)                                                    DBC 18910000&
P.GERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR GET  18920000&
P.PERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT  18930000&
P.CHECK DS    0A -           ADDRESS OF CHECK MOD  ULE                   1894000
0         AIF   (&DSORGIS).CDA                                           1895000
0&LSW(085) SETB (1)                                                  DBC 1896000
0&P.OPTCD DS    BL1 -          OPTION CODES                                18970
000         AGO   .CD2                                                     18980
000.CDA1    ANOP                                                           18990
000&LSW(086) SETB (1)                                                  DBC 1900
 0000         DS    0A -           DCBGERR, DCBPERR OR DCBCHECK              190
10000.CDA     ANOP                                                           190
20000&LSW(087) SETB (1)                                                  DBC 190
30000           DS    BL1 -          DCBOPTCD - OPTION CODES                   1
9040000.CD2     ANOP                                                           1
9050000         AIF   (&#DCBSW(083)).SKP083C                               DBC 1
9060000         AIF   (&#DCBS  W(63) OR &#DCBSW(68)).SKP083A                 DBC
 19070000DCBOPTW  EQU   BIT0 -         WRITE VALIDITY CHECK (DASD)
 19080000*                             (BSAM, BPAM, QSAM, ISAM, BDAM)
 19090000.SKP083A ANOP  ,                                                      D
BC 19100000DCBOPTU  EQU   BIT1 -         ALLOW DATA CHECK CAUSED BY INVALID
   19110000*                             CHARACTER (1403 PRINTER WITH UCS FEATUR
E) 19120000*                             (BSAM, BPAM, QSAM)+
     19130000DCBOPTC  EQU   BIT2 -         CHAINED SCHEDU  LING USING PCI
       19140000*                             (BSAM, BPAM, QSAM)
       19150000DCBOPTH  EQU   BIT3 -         1287/1288 OPTICAL READER - HOPPER E
MPTY   19160000*                             EXIT (BSAM, BPAM)
         19170000DCBOPTO  EQU   BIT3 -         1285/1287 OPTICAL READER - ON-LIN
E        19180000*                             CORRECTION (QSAM)
         19190000DCBBCKPT EQU   BIT3 -         CHANNEL-END APPENDAGE IS TO BYPAS
S DOS      19200000*                             EMBEDDED CHECKPOINT RECORDS ON
TAPE       19210000*                             (BSAM, QSAM)
    ICB226 19220000DCBOPTQ  EQU   BIT4 -         TRANSLATION TO OR FROM ASCII
           19230000*                               (BSAM, BPAM, QSAM)
             19240000         AIF   (&#DCBSW(060)).SKP083B
         DBC 19250000DCBOPTZ  EQU   BIT5 -         MAGNETIC TAPE DEVICES - USE R
EDUCED ERROR 19260000*                               RECOVERY PROCEDURE (EXCP, B
SAM, BPAM,     19270000*                             QSAM)
               19280000DCBSRCHD EQU   BIT5 -         USE SEARCH DIRECT, INSTEAD
OF SEARCH      19290000*                               PREVIOUS, ON RECORD POSIT
ION SENSING      19300000*                             DEVICE  (EXCP, BSAM, BPAM
, QSAM)   ICB217 19310000.SKP083B ANOP  ,
             DBC 19320000DCBOPTT  EQU   BIT6 -         USER TOTALIN  G (BSAM, QS
AM)                19330000.SKP083C ANOP  ,
               DBC 19340000         AIF   (&DSORGDA).CD1
                   19350000&LSW(088) SETB (1)
                 DBC 19360000&P.GERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZ
ING ROUTINE FOR GET  19370000&P.PERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZ
ING ROUTINE FOR PUT  19380000&P.CHCKA DS    AL3 -          ADDRESS OF CHECK MODU
LE                     19390000         AGO   .CD3
                       19400000.CD1     ANOP
                       19410000&LSW(089) SETB (1)
                   DBC 19420000           DS    AL3 -          DCBGERRA, DCBPERR
A OR DCBCHCKA            19430000.CD3     AIF   (&DSORGIS OR &DSORGDA OR &DSORGM
Q).CDB                   19440000&LSW(090) SETB (1)
                     DBC 19450000&P.SYNAD DS      0A -           ADDRESS OF USER
-PROVIDED SYNAD ROUTINE    19460000&P.IOBL  DS    FL1 -          IOB LENGTH IN D
OUBLE WORDS                19470000&P.SYNA  DS    AL3 -          ADDRESS OF USER
-PROVIDED SYNAD ROUTINE    19480000         AGO   .CD4
                             19490000.CDB     ANOP
                             19500000&LSW(091) SETB (1)
                         DBC 19510000         DS    0A -           DCBSYNAD -+
ADDRESS OF SYNAD ROUTINE       19520000&P.IOBL  DS    FL1 -          IOB LE  NGT
H IN DOUBLE WORDS                19530000         DS    AL3 -          DCBSYNA -
 ADDRESS OF SYNAD ROUTINE        19540000.CD4     ANOP
                                 19550000&P.FLAG1 DS    0BL1           TCAM APPL
ICATION PR  OGRAM FLAGS ICBI DCB-3 19560000*                             (BSAM,
BPAM, QSAM)                        19570000&P.CIND1 DS    BL1 -          CONDITI
ON INDICATORS                      19580000         AIF   (&#DCBSW(083)).SKP083D
                                 DBC 19590000DCBCNTOV EQU   BIT0 -         DIREC
T ACCESS - TRACK OVERFLOW IN USE     19600000*                             (BSAM
, BPAM, QSAM)                        19610000*                             2540
CARD PUNCH - DATA SET WAS OPENED BUT 196  20000*                             NO
DATA WAS WRITTEN (QSAM)                19630000DCBSTQCK EQU   BIT0 -         STO
P EQUAL QUICK WAS SPECIFIED FOR        19640000*                             APP
LICATION PROG. DCBS (TCAM)  ICBI DCB-3 19650000DCBSTFLS   EQU   BIT1 -         S
TOP EQUAL FLUSH WAS SPECIFIED FOR        19660000*                             A
PPLICATION PROG. DCBS (TCAM)  ICBI DCB-3 19670000DCBCNSRD EQU   BIT1 -         S
EARCH DIRECT (BSAM, BPAM, QSAM)          19680000DCBCNEVB EQU   BIT2 -
 END OF VOLUME - USED BY EOB ROUTINES      19690000*
 (BSAM, BPAM, QSAM)                        19700000DCBCNEVA EQU   BIT3 -
 END OF VOLUME - USED BY CHANNEL-END       19710000*
 APPE  NDAGE ROUTINES (BSAM, BPAM, QSAM)     19720000DCBCNBRM EQU   BIT5 -
   BLOCKED RECORD BIT MODIFIED (BSAM,BPAM,   19730000*
   QSAM)                          ICBI DCB-2 19740000DCBCNEXB EQU   BIT7 -
   EXCHANGE BUFFERIN  G SUPPORTED (QSAM)       19750000.SKP083D ANOP  ,
                                           DBC 19760000&P.CIND2 DS    BL1 -
     CONDITION INDICATORS                      19770000         AIF   (&#DCBSW(0
83)).SKP083E                                 DBC 19780000DCBCNSTO EQU   BIT0 -
       PARTITIONED DATA SET - STOW HAS BEEN      19790000*
       PERFORMED (BSAM, BPAM, QSAM)              19800000*
       SEQUENTIAL DATA SET - UPDATE (BSAM, BPAM) 1  9810000DCBCNWR0 EQU   BIT1 -
         DIRECT ORGANIZATION DATA SET - LAST I/O   19820000*
         WAS A WRITE RECORD ZERO                   19830000*
         (BSAM, BPAM, QSAM)                        19840000*
           SEQUENTIAL DATA SET - UPDATE EOF IS       19850000*
           INDICATED (BSAM, BPAM)                    19860000DCBCNCLO EQU   BIT2
 -         CLOSE IN PROCESS (QSAM)                   19870000DCBCNIOE EQU   BIT3
   -         PERMANENT I/O ERROR (BSAM, BPAM, QSAM)    19880000DCBCNBFP EQU   BI
T4 -         OPEN ACQUIRED BUFFER POOL                 19890000*
             (BSAM, BPAM, QSAM)                        19900000DCBCNCHS EQU   BI
T5 -         CH+ AINED SCHEDULING BEING SUPPORTED        19910000*
                 (BSAM, BPAM, QSAM)                        19920000DCBCNFEO EQU
  BIT6 -         FEOV BIT (BSAM, BPAM, QSAM)               19930000DCBCNQSM EQU
  BIT7 -         ALWAYS ZERO (BSAM, BPAM)                  19940000*
                 THIS IS A Q  SAM DCB (QSAM)                 19950000.SKP083E AN
OP  ,                                                    DBC 19960000         AI
F   (&DSORGIS OR &DSORGDA).CDC                               19970000&LSW(092) S
ETB (1)                                                    DBC 19980000&P.BLKSI
DS    H -            MAXIMUM BLOCK SIZE                        19990000
AGO   .CD7                                                     20000000.CDC
ANOP                                                             20010000&LSW(09
3) SETB (1)                                                  DBC 20020000
  DS    H -            DCBBLKSI - MAXIMUM BLOCK SIZE             20030000.CD7
  ANOP                                                           20040000  &P.WC
PO  DS    AL1 -          OFFSET OF WRITE CHANNEL PROGRAM FROM THE  20050000*
                         START OF IOB                              20060000&P.WC
PL  DS    FL1 -          LENGTH OF WRITE CHANNEL PROGRAM           20070000&P.OF
FSR DS      AL1 -          OFFSET OF READ CCW FROM BSAM/BPAM PREFIX  20080000*
                           OF IOB                                    20090000&P.
OFFSW DS    AL1 -          OFFSET OF WRITE CCW FROM BSAM/BPAM PREFIX 20100000*
                             OF IOB                                    20110000&
P.IOBA  DS    A -            FOR NORMAL SCHEDULING, ADDRESS OF QSAM OR 20120000*
                             BSAM/BPAM PREFIX OF IOB.  FOR CHAINED     20130000*
                             SCHEDULIN  G, ADDRESS OF ICB.  FOR          2014000
0*                             1419/1275, ADDRESS OF MAGNETIC INTERRUPT  2015000
0*                             CONTROL BLOCK (MICB) CURRENTLY BEING      2016000
0*                             PROCESSED BY READ ROUT  INE.  FOR TSO       20170
000*                             TERMINAL DATA SET OPENED FOR INPUT AND    20180
000*                             FORMAT U, SIMULATED LOW-ORDER FOUR BYTES  20190
000*                             OF IOBCSW                                   202
00000         SPACE 1                                                        202
10000         ORG   &P.DCB+68                                         ICB354 202
20000&P.CICB  DS    0A -           SAME AS DCBCICBA BELOW             ICB354 202
300  00         DS    X -            DCBNCP  (BSAM,BPAM)                ICB354 2
0240000&P.CICBA DS    AL3 -          POINTER TO JES C.I.                ICB354 2
0250000*                             CONTROL BLOCK (CICB)               ICB354 2
0260000         SP  ACE 1
 20270000         ORG   &P.DCB+80                                     ICBI DCB-4
 20280000&P.DIRCT DS    0H -           NUMBER OF BYTES USED IN LAST DIRECTORY
 20290000*                       +       BLOCK (RANGE 0-254)  (BSAM, BPAM)  ICB2
95 20300000&P.QSWS  DS    0BL1   -         FLAG BYTE                          IC
B295 20310000&P.USASI DS    B -            FLAG BYTE FOR ASCII TAPES
     20320000         AIF   (&#DCBSW(083)).SKP083F
 DBC 20330000DCBBLBP  EQU   BIT1 -         BLO  CK PREFIX IS FOUR BYTE FIELD
       20340000*                             CONTAINING BLOCK LENGTH IN UNPACKED
       20350000*                             DECIMAL (SPECIFIED BY BUFFER=L).
       20360000DCBQADFS EQU   BIT2+BIT3+BIT4 USED TO PERFORM   SEQUENCE CHECKING
 WITH    20370000*                             MULTIPLE FUNCTION SUPPORT FOR 352
5        20380000*                             (BSAM, QSAM)
         20390000DCBQADF1 EQU   BIT2 -         FIRST BIT OF DCBQADFS
           20400000DCBQADF2 EQU   BIT3 -         SECOND BIT OF DCBQADFS
           20410000DCBQADF3 EQU   BIT4 -         THIRD BIT OF DCBQADFS
           20420000DCBQSTRU EQU   BIT7 -         TRUNC ENTRY POINT ENTERED (QSAM
)            20430000.SKP083F ANOP  ,
         DBC 20440000&P.BUFOF DS    0FL1 -         BLOCK PREFIX LENGTH (0-99), S
PECIFIED BY  20450000*                             BUFOFF=N OR BUFOFF=L
             20460000&P.DI  RCQ DS    FL1 -          NUMBER OF BYTES USED IN LAS
T DIRECTORY    20470000*                             BLOCK (RANGE 0-254)  (QSAM)
        ICB295 20480000         SPACE 1
               20490000         AIF   (NO  T &DSORGBS).CE
                 20500000&LSW(094) SETB (1)
             DBC 20510000*                       BSAM-BPAM INTERFACE
                 20520000         SPACE 1
                   20530000         ORG   &P.DCB+72
                   20540000&P.EOBR  DS    0A -           ADDRESS OF END-OF-BLOCK
 MODULE FOR READ   20550000         AIF   (&DSORGIS).CDD
                     20560000&LSW(095) SETB (1)
                 DBC 20570000&P.NCP   DS    FL1 -          NUMBER OF CHANNEL PRO
GRAMS.               20580000         AGO   .CD8
                       20590000.CDD     ANOP
                       20600000&LSW(096) SETB (1)
                   DBC 20610000         DS    FL1 -          DCBNCP - NUMBER OF
CHANNEL PROGRAMS.        20620000.CD8     ANOP
                         20630000*                             NUMBER OF READ OR
 WRITE REQUESTS WHICH    20640000*                             MAY BE ISSUED PRI
OR TO A CHECK, NUMBER    20650000*                               OF IOB'S GENERA
TED.  (99 MAXIMUM)         20660000&P.EOBRA DS    AL3 -          ADDRESS OF END-
OF-BLOCK MODULE FOR READ   20670000&P.EOBW  DS    A -            ADDRESS OF END-
OF-BLOCK MODULE FOR WRITE. 20680000*               +               FOR BSAM CREA
TE BDAM PROCESSING OF        20690000*                               UNBLOCKED S
PANNED RECORDS WITH BKTEK=R    20700000*                             SPECIFIED,
ADDRESS OF SEGMENT WORK AREA   20710000*                             CONTROL BLO
CK                             20720000         DS    H -              DCBDIRCT
- NUMBER OF BYTES USED IN LAST   20730000*                             DIRECTORY
 BLOCK  (RANGE 0-254)     ICB295 20740000         AIF   (&DSORGIS).CDE
                                 20750000&LSW(097) SETB (1)
                               DBC 20760000&P.LRECL DS    H -            LOGICAL
 RECORD LENGTH                     20770000         AGO   .CD9
                                   20780000.CDE     ANOP
                                     20790000&LSW(098) SETB (1)
                                 DBC 20800000         DS    H -            DCBLR
ECL - LOGICAL RECORD LENGTH          20810000.CD9     ANOP
                                       20820000&P.CNTRL DS    0A -           ADD
RESS OF CNTRL MODULE                   20830000&P.NOTE  DS    0A -           ADD
RESS OF NOTE/POINT MODULE              20840000&P.POINT DS    A -            ADD
RESS OF NOTE/POINT MODULE              20850  000         SPACE 1
                                         20860000.CE      AIF   (NOT &DSORGQS).F
IN                                       20870000&LSW(099) SETB (1)
                                     DBC 20880000*                         QSAM
INTERFACE                                  20890000         SPACE 1
                                           20900000         AIF   (NOT &DSORGDA)
.CE1                                       20910000&LSW(100) SETB (1)
                                         DBC 20920000         ORG   &P.DCB+52
                                             20930000&P.GERR  DS    0A -
   ADDRESS OF SYNCHRONIZING ROUTINE FOR GET  20940000&P.PERR  DS    0A -
   ADDRES  S OF SYNCHRONIZING ROUTINE FOR PUT  20950000         DS    BL1 -
     DCBOPTCD - OPTION CODES                   20960000&P.GERRA DS    0AL3 -
     ADDRESS OF SYNCHRONIZING ROUTINE FOR GET  20970000&P.PERRA DS    AL3 -
     ADDRESS OF SYNCHRON  IZING ROUTINE FOR PUT  20980000         SPACE 1
                                                 20990000.CE1     ANOP
                                                 21000000         ORG   &P.DCB+7
2                                                  21010000&P.LCCW  DS    0A -
         FOR EXCHANGE BUFFERING, ADDRESS OF LAST   21020000*
         CCW IN LIST                               21030000&P.EOBAD DS    A -
         FOR SIMPLE BUFFERING, ADDRESS OF LAST     210  40000*
           BYTE OF CURRENT BUFFER                    21050000&P.CCCW  DS    0A -
           FOR EXCHANGE BUFFERING, ADDRESS OF        21060000*
           CURRENT OR NEXT CCW                       21070000&P.RECAD+  DS    0A
 -           ADDRESS OF CURRENT OR NEXT LOGICAL RECORD 21080000&P.R  ECBT DS
BL1 -          FLAG BYTE                                 21090000         AIF
(&#DCBSW(099)).SKP099A                               DBC 21100000DCBRCREL EQU
BIT0+BIT1+BIT2+BIT3 RELSE MACRO HAS BEEN ISSUED          21110000*
                 (QSAM WITH SIMPLE BUFFERING)              21120000DCBRCTRU EQU
  BIT0 -         TRUNC MACRO HAS BEEN ISSUED (QSAM LOCATE  21130000*
                 MODE)                                     21140000DCBRCFGT EQU
  BIT1 -           FIRST GET AFTER OPEN (QSAM LOCATE MODE)   21150000.SKP099A AN
OP  ,                                                    DBC 21160000&P.RECA  DS
    AL3 -          ADDRESS OF CURRENT OR NEXT LOGICAL RECORD 21170000         DS
    B -            DCBQSWS - FLA  G BYTE                ICB295 21180000
DS    FL1 -          DCBDIRCQ - NUMBER OF BYTES USED IN LAST   21190000*
                     DIRECTORY BLOCK (RANGE 0-254)      ICB295 21200000
AIF   (&DSORGIS OR &DSORGBS).CEE                                 21210000&LSW(10
1) SETB (1)                                                  DBC 21220000&P.LREC
L DS    H -            LOGICAL RECORD LENGTH                     21230000
  AGO   .CEEA                                                      21240000.CEE
    ANOP                                                           21250000&LSW(
102) SETB (1)                                                  DBC 21260000
    DS    H -            DCBLRECL - LOGICAL RECORD LENGTH          21270000.C  E
EA    AIF   (&DSORGBS).CEF                                           21280000&LS
W(103) SETB (1)                                                  DBC 21290000&P.
CNTRL DS    0A -           ADDRESS OF CNTRL MODULE                   21300000
      AGO     .CEF1                                                    21310000.
CEF     ANOP                                                           21320000&
LSW(104) SETB (1)                                                  DBC 21330000
        DS    0A -             DCBCNTRL - ADDRESS OF CNTRL MODULE        2134000
0.CEF1    ANOP                                                           2135000
0&P.EROPT DS    BL1 -          ERROR OPTION                              2136000
0         AIF   (&#DCBSW(099)).SKP099B                                 DBC 21370
000DCBERACC EQU   BIT0 -         ACCEPT PERMANENT ERROR                    21380
000DCBERSKP EQU   BIT1 -         SKIP PERMANENT ERROR                      21390
000DCBERABE EQU   BIT2 -         ABNORMAL END OF TASK                        214
00000.SKP099B ANOP  ,                                                    DBC 214
10000         AIF   (&DSORGBS).CEF2                                          214
20000&LSW(105) SETB (1)                                                    DBC 2
1430000&P.CNTRA DS    AL3 -          ADDRESS OF CNTRL MODULE                   2
1440000         AGO   .CEF3                                                    2
1450000.CEF2    ANOP                                                           2
1460000            _ &LSW(106) SETB (1)
         DBC 21470000         DS    AL3 -          DCBCNTRA - ADDRESS OF CNTRL M
ODULE        21480000.CEF3    ANOP
             21490000           DS    XL2 -          RESERVED
               21500000&P.PRECL DS    H -            BLOCK LENGTH, MAXIMUM BLOCK
 LENGTH OR     21510000*                             DATA LENGTH
               21520000&P.EOB   DS      A -            ADDRESS OF END OF BLOCK M
ODULE            21530000         SPACE 1
                 21540000.CF      AIF   (&DSORGIS OR &DSORGQS OR &DSORGBS OR NOT
 &DSORGLR).FIN   21550000&LSW(107) SETB (1)
               DBC 21560000         ORG   &P.DCB+82
                   21570000&P.LRECL DS    H -            LOGICAL RECORD LENGTH
                   21580000         SPACE 1
                     21590000         AGO   .FIN
                     21600000.SLIP    ANOP
                     21610000&LSW(108) SETB (1)
                   DBC 21620000*                       GRAPHIC DEVICE INTERFACE
                       21630000         SPACE 1
                       21640000&P.DCB   DS    0A                  FULLWORD ALIGN
MENT                 DBC 21650000         DS    XL12 -         RESERVED
                         21660000&P.BRSA  DS    AL2 -          BUFFER RESTART AD
DRESS.  BLANK BEFORE     21670000*                             EXECUTION OF SECO
ND I/O OPERATION         2168000  0&P.GTYPE DS    CL1 -          TYPE OF BUFFER
MANAGEMENT AND ATTENTION   21690000*                             HANDLING
                           21700000         AIF   (&#DCBSW(108)).SKP108A
                       DBC 21710000DCBGTEXP EQU     X'00' -        EXPRESS
                             21720000DCBGTBAS EQU   X'01' -        BASIC
                             21730000.SKP108A ANOP  ,
                         DBC 21740000         DS    X -              RESERVED
                               21750000&P.BFRST DS    AL2 -          BLANK BEFOR
E EXECUTION OF OPEN ROUTINE.   21760000*                             STARTING AD
DRESS FOR BUFFER AFTER         21770000*                             EXECUTIO  N
 OF OPEN ROUTINE                 21780000&P.BFRSZ DS    H -            BLANK BEF
ORE EXECUTION OF OPEN ROUTINE.   21790000*                             SIZE OF B
UFFER AFTER EXECUTION OF OPEN    21800000*                             ROUTINE.
                                   21810000         SPACE 1
                                   21820000*                       COMMON INTERF
ACE                                21830000         SPACE 1
                           +         21840000         DS    XL6 -          RESER
VED                                    21850000&P       #DSORG
                                   DBC 21860000&P.IOBAD DS    A -            BLA
NK BEFORE EXECUTION OF OPEN ROUTINE.   21870000*                             ADD
RESS OF STANDARD FIELDS OF FIRST IOB   2  1880000*                             A
FTER EXECUTION OF OPEN ROUTINE           21890000         SPACE 1
                                         21900000*                       FOUNDAT
ION EXTENSION                            21910000           SPACE 1
                                           21920000&P.POLST DS    0A -
 ADDRESS OF AREA WHERE A DCB LIST IS TO BE 21930000*
 CONSTRUCTED FOR POLLING PURPOSES          21940000&P.GNCP  DS    FL1   -
   NUMBER OF I/O INSTRUCTIONS TO BE ISSUED   21950000*
   BEFORE A WAIT MACRO INSTRUCTION           21960000&P.POLSA DS    AL3 -
   SAME AS DCBPOLST ABOVE                    21970000&P.EXLST DS    0A -
   AD  DRESS OF USER'S EXIT LIST               21980000         DS    X -
     RESERVED                                  21990000&P.EXLSA DS    AL3 -
     ADDRESS OF USER'S EXIT LIST               22000000         SPACE 1
                                                 22010000*
 FOUNDATION BEFORE OPEN                          22020000         SPACE 1
                                                 22030000&P.DDNAM DS    CL8 -
       8-BYTE NAME FROM DD STATEMEN  T THAT        22040000*
         DEFINES DATA SET ASSOCIATED WITH THIS DCB 22050000&P.OFLG  DS    BL1 -
         FLAGS USED BY OPEN ROUTINE                22060000         AIF   (&#DCB
SW(108)).SKP108B                               DBC   22070000DCBOFGRW EQU   BIT0
 -         IF ZERO, LAST I/O OPERATION WAS GREAD.    22080000*
           IF ONE, LAST I/O OPERATION WAS GWRITE.    22090000         AIF   (&#D
CBSW(052)).SKP108B                               DBC 22100000DCBO  FEOV EQU   BI
T2 -         SET TO 1 BY EOV WHEN IT CALLS CLOSE       22110000*
             ROUTINE FOR CONCATENATION OF DATA SETS    22120000*
             WITH UNLIKE ATTRIBUTES                    22130000DCBOFOPN EQU   BI
  T3 -         AN OPEN HAS BEEN SUCCESSFULLY COMPLETED   22140000DCBOFPPC EQU
BIT4 -         SET TO 1 BY PROBLEM PROGRAM TO INDICATE A 22150000*
               CONCATENATION OF UNLIKE ATTRIBUTES        22160000DCBOFTM  EQU
BIT5 -           TAPE MARK HAS BEEN READ                   22170000DCBOFUEX EQU
  BIT6 -         SET TO 0 BY AN I/O SUPPORT FUNCTION WHEN  22180000*
                 THAT FUNCTION TAKES A USER EXIT. SET TO 1 22190000*
                 ON RETURN FRO  M USER EXIT TO THE I/O       22200000*
                   SUPPORT FUNCTION WHICH TOOK THE EXIT.     22210000DCBOFIOF EQ
U   BIT7 -         SET TO 1 BY AN I/O SUPPORT FUNCTION IF    22220000*
                   DCB IS TO BE PROCESSED BY + THAT FUNCTION   22230000.SKP108B
ANOP  ,                                                      DBC 22240000&P.IFLG
  DS    BL1 -          SET TO ZERO BY GRAPHIC ROUTINES BUT USED  22250000*
                       BY IOS IN COMMUNICATING ERROR CONDITIONS  22260000*
                       AND IN DETERMINING CORRECTIVE PROCE  DURES  22270000&P.MA
CR  DS    0BL2 -         MACRO INSTRUCTION REFERENCE               22280000&P.MA
CR1 DS    BL1 -          FIRST BYTE OF DCBMACR                     22290000
    AIF   (&#DCBSW(52) OR &#DCBSW(108)).SKP108C                DBC 223000  00DCB
MRRD  EQU   BIT2 -         READ                                      22310000DCB
MRCRL EQU   BIT6 -         CNTRL                                     22320000.SK
P108C ANOP  ,                                                    DBC 22330000&P.
MACR2 DS      BL1 -          SECOND BYTE OF DCBMACR                    22340000
        AIF   (&#DCBSW(52) OR &#DCBSW(108)).SKP108D                DBC 22350000D
CBMRWRT EQU   BIT2 -         WRITE                                     22360000D
CBMRCTL EQU   BIT6 -           CNTRL                                     2237000
0.SKP108D ANOP  ,                                                    DBC 2238000
0         SPACE 1                                                        2239000
0*                       FOUNDATION AF  TER OPEN                           22400
000         SPACE 1                                                        22410
000         ORG   &P.DCB+40                                                22420
000&P.TIOT  DS    AL2 -          OFFSET FROM TIOT ORI  GIN TO DD ENTRY       224
30000*                             ASSOCIATED WITH THIS DCB                  224
40000&P.MACRF DS    0BL2 -         SAME AS DCBMACR BEFORE OPEN               224
50000&P.MACF1 DS    BL1 -          FIRST BYTE OF DCBMACRF                      2
2460000&P.MACF2 DS    BL1 -          SECOND BYTE OF DCBMACRF                   2
2470000&P.DEBAD DS    0A -           ADDRESS OF ASSOCIATED DEB                 2
2480000&P.IFLGS DS    BL1 -          SAME AS DCBIFLG BEFORE OPEN               2
249  0000&P.DEBA  DS    AL3 -          ADDRESS OF ASSOCIATED DEB
 22500000&P.GIOCR DS    0A -           ADDRESS OF GRAPHICS I/O CONTROL ROUTINE
 22510000&P.OFLGS DS    BL1 -          SAME AS DCBOFLG BEFORE OPEN
 22520000&P.GIOCA   DS    AL3 -          ADDRESS OF GRAPHICS I/O CONTROL ROUTINE
   22530000         SPACE 1
   22540000.FIN     ANOP
   22550000&A0      SETA  0
 DBC 22560000.LP1     AIF   (&A0 EQ 150).EXIT
 DBC 22570000&A0      SETA  &A0+1
 DBC 22580000&#DCBSW(&A0) SETB (&#DCBSW(&A0) OR   &LSW(&A0))
   DBC 22590000         AGO   .LP1
   DBC 22600000.EXIT    ANOP  ,
   DBC 22610000         MEND                                   +
         22620000./ ADD NAME=#DCBE    0100-03155-03155-1415-0  0023-00023-00000-
DBCOLE5                     MACRO
 04/01 S21 #DCBE            #DCBE &DOC=,&LIST=
 04/01 S21 08000000         GBLB  &DCBE
   04/01 S21 12000000         GBLC  &#TIT,&#INFO(20)
   04/01 S21 16000000.*
   04/01 S21 20000000         AIF   (&DCBE).MEND
   04/01 S2  1 25000000&DCBE    SETB  (1)
     04/01 S21 29000000.*
     04/01 S21 33000000&#TIT    SETC  'DCBE -- DCB Extension'
     04/01 S21 37000000&#I  NFO(1) SETC '&#TIT',
       04/01 S21*41000000               'DCBE = DSECT AND BASE',
       04/01 S21*45000000               ''
       04/01 S21 50000000         #TITDOC   'IHADCBE ,',
         04/01 S21*54000000               DOC=&DOC,LIST=&LIST
         04/01 S21 58000000.*
         04/01 S21 62000000         IHADCBE ,
           04/01 S21 66000000.*
           04/01 S21 70000000DCBEZ    DS    0X                  Z'DCBE
           04/01 S21 75000000DCBEL    EQU   DCBEZ-DCBE          L'DCBE
             04/01 S21 79000000         SPACE 3
             04/01 S21 83000000&SYSLOC  LOCTR ,
             04/01 S21 87000000         #TUNDOC ,
               04/01 S21 91000000.MEND    MEND  #DCBE
               04/01 S21 95000000./ ADD NAME=#DIAG
                                          MACRO
                           00000100&N       #DIAG &R1,&R3,&D2
                           00000200.*
                           00000300.*
                           00000400.  *
                             00000500.* LAST CHANGE DATE - OCTOBER 18, 1983
                             00000600.*                  - MAILING ADDRESS CHANG
E                            00000700.*
                               00000800.* LAST CHANGE DATE - APRIL 21, 1981
                               00000900.*                  - MACRO NAME CHANGED
FROM $DIAG TO #DIAG.           00001000.*
                                 00001100.* LAST CHANGE DATE - FEBRUARY 2, 1977
                                 00001200.*                  - MAILING ADDRESS C
HANGE.                           00001300.*
 +                                 00001400.* LAST CHANGE DATE - FEBRUARY 3, 19
 76                                  00001500.*
                                     00001600.* THIS MACRO WAS WRITTEN BY DAVID
B. COLE. ANY QUESTIONS CONCERNING IT 00001700.* MAY BE ADDRESSED TO:
                                       00001800.*       RR#2 BOX 712
                                       00001900.*       AFTON, VA. 22920
                                       00002000.*
                                         00002100.*
                                         00002200.*
                                         00002300.*   THIS MACRO GENERATES A DIA
GNOSE MACHINE INSTRUCTION (OPCODE IS     000  02400.* X'83'). IF THE THIRD POSIT
IONAL OPERAND IS PRESENT, THEN AN RS-TYPE  00002500.* INSTRUCTION FORMAT IS USED
. IF THE THIRD POSITIONAL OPERAND IS       00002600.* OMITTED, THEN AN RX-TYPE I
NSTRUCTION FORMAT IS USED.                 00002700.*
                                             00002800.*
                                             00002900.*
                                             00003000.* INNER MACROS USED   - NO
NE                                             00003100.*
                                               00003200         AIF   (K'&D2 EQ
0).RX                                          00003300&N       LM    &R1,&R3,&D
2 GENERAT  E AN RS-TYPE INSTRUCTION              00003400         AGO   .OPCODE
                                                 00003500.RX      ANOP
                                                 00003600&N       L     &R1,&R3
GENERATE AN RX-TYPE INST  RUCTION                  00003700.OPCODE  ORG   *-4 LO
CATE BACK TO CHANGE THE OPCODE                     00003800         DC    X'83'
GENERATE THE DIAGNOSE OPCODE                       00003900         ORG   *+3 RE
LOCATE FORWARD                                       00004000         MEND
                                                     00004100./ ADD NAME=#DIE
  0100-03155-03155-1415-00296-00296-00000-DBCOLE5                     MACRO ,
                                                     #  DIE    &NME     #DIE  &O
,&A,&B,&C,&TYPE=MSG,&TRAP4=,&RI=             10/99 JDS 01000000.*
                                                       01500000.*
                                             01/00 JDS 01600000.* LAS  T CHANGE
DATE - JANUARY 7, 2000                         01/00 JDS 01700000.* - Fixed mess
age length when generating TRAP4-style.        01/00 JDS 01800000.*
                                               01/00 JDS 01900000.*
                                                           02000000.* LAST CHANG
E DATE - OCTOBER 2, 1999                         10/99 JDS 02002000.* - Added RI
= keyword and global SETB XDCRI flag.            10/99 JDS 02005000.*
                   +                               10/99 JDS 02007000.* LAST CHA
NGE DATE - APRIL   21, 1999                          04/99 JDS 02007700.* - Fixe
d reference to global symbols &XB2, &XFF.            04/99 JDS 02008500.*
                                                     04/99 JDS 02009200.*
                                                                 02010000.* LAST
 CHANGE DATE - APRIL 12, 1999                          04/99 DBC 02020000.* - In
 release V1.3 of the High Level Assembler, a warning   04/99 DBC 02030000.*   me
ssage (ASMA016W) is issued to flag branch type           04/99 DBC 02040000.*
instructions that target literals. Accordingly, I've     04/99 DBC 02050000.*
had to change the out-of-line form of this macro's       04/99 DBC 02060000.*
expansion to suppress the warning.                       04/99   DBC 02070000.*
                                                           04/99 DBC 02080000.*
LAST CHANGE DATE - FEBRUARY 11, 1999                                 02100000.*
- Added support for TRAP4-DEAD trap via keyword or GBLB.   02/99 JDS 02200000  .
* - Added support for condition "N" (NEVER).                 02/99 JDS 02300000.
*                                                            09/98 X34 02500000.
* LAST CHANGE DATE - SEPTEMBER 14, 1998                      09/98 X34 03000000.
* - Fixed an   alignment problem when NONOP was specified.     09/98 X34 0350000
0.*                                                            03/90 DBC 0400000
0.* LAST CHANGE DATE - MARCH 15, 1990                          03/90 DBC 0450000
0.* - REPLACED ALL NONGRAPH  IC EBCDIC VALUES WITH REFERENCES TO 03/90 DBC 05000
000.*   GLOBAL SETC SYMBOLS CONTAINING THE REQUIRED VALUES. THIS 03/90 DBC 05500
000.*   FACILITATES THE TRANSFER OF THE SOURCE OF THIS MACRO     03/90 DBC 06000
000.*   BETWEEN MAINFRAMES (EBCDIC) AND PC  'S (ASCII).            03/90 DBC 065
00000.*                                                                  DBC 070
00000.* LAST CHANGE DATE - FEBRUARY 9, 1988                              DBC 075
00000.* - ADDED SUPPORT FOR "#DIE NONOP,'MSG'". THIS PREV  ENTS THE        DBC 0
8000000.*   INSERTION OF A NOP AHEAD OF THE DEAD-TRAP.                     DBC 0
8500000.*                                                                  DBC 0
9000000.* LAST CHANGE DATE - FEBRUARY 1, 1988                                DBC
 09500000.* - ADDED SUPPORT FOR " #DIE B,'MSG' ". THIS GENERATES A           DBC
 10000000.*   CLOSED GATE AROUND THE DEAD-TRAP.                              DBC
 10500000.* - FOR " #DIE 'MSG' ", A NOP IS INSERTED AHEAD OF THE             DBC
 110000  00.*   DEAD-TRAP.                                                     D
BC 11500000.* - THE "0H'0'," IS NO LONGER NEEDED TO ALIGN DEAD-TRAPS.          D
BC 12000000.*                                                                  D
BC 13000000.* LAST CHA  NGE DATE - DECEMBER 6, 1984                        04/99
 DBC 13500000.*                  - ADDED "0H'0'," TO INSURE THAT GENERATED
 DBC 14000000.*                    "00DEAD COMMANDS" ARE HWORD ALIGNED.
 DBC 14500000.*                      +
   DBC 15000000.* LAST CHANGE DATE   - OCTOBER 25, 1984
     DBC 15500000.*                  - MINOR CHANGE TO REDUCE THE NUMBER OF
     DBC 16000000.*                    LINES PRINTED BY THE MACRO EXPANSION.
     DBC 16500000.*                    THE OBJECT   CODE REMAINS UNCHANGED.
       DBC 17000000.*
           17500000.* LAST CHANGE DATE - OCTOBER 18, 1983
           18000000.*                  - MAILING ADDRESS CHANGE
             18500000.*
             19000000.* LAST CHANGE DATE - MARCH 16, 1983
             19500000.*                  - COMMENTARY ADJUSTMENTS
               20100000.*                  - MAILING ADDRESS CHANGE
               20600000.*
               21100000.* LAST CHANGE DATE - APRIL 21, 1981
                 21600000.*                  - MACRO NAME CHANGED FROM $DIE TO #
DIE.             22100000.*
                 22600000.* LAST CHANGE DATE - JAUNARY 27, 1981
                 23100000.*                    - THE MACRO HAS BEEN REWRITTEN TO
                   23600000.*                    GENERATE INLINE TRAPS WHENEVER
                   24100000.*                    EXTENDED MNEMONICS FOR THE 'BC'
 AND               24600000.*                      'BCR' INSTRUCTIONS ARE USED.
THIS IS              25100000.*                    ACCOMPLISHED BY USING THE INV
ERSE OF              25600000.*                    OF THE GIVEN BRANCH CONDITION
 TO                  26100000.*                    SKIP AROU  ND THE INLINE TRAP
.                      26600000.*                    IN THOSE CASES WHERE AN INL
INE TRAP               27100000.*                    IS NOT DESIRED (SUCH AS WIT
HIN A                  27600000.*                    BRANCH VECTOR TABLE),   THE
                         28100000.*                    NON-EXTENDED FORM OF THE
'BC'                     28600000.*                    INSTRUCTION CAN BE USED;
E.G.:                    29100000.*                         #DIE C,8   INSTEAD O
F   #DIE Z                 29600000.*                  - A UNIQUE NUMBER IS NOW
APPENDED TO                30100000.*                    GIVEN MESSAGES.
                           30600000.*
                             31100000.* LAST CHANGE DATE - FEBRUARY 12, 1980
                             31600000.*                  - TYPE=CMD SUPPORT HAS
BEEN ADDED. THIS             32100000.*                    PROVIDES A MEANS OF C
OMMUNICATING                 32600000.*                      COMMANDS TO THE "DE
BUGGING CONTROLLER"            33100000.*                    PROGRAM.
                               33600000.*                  - IF NO BRANCH CONDIT
IONALS ARE GIVEN,              34100000.*              +       THEN THE "DEAD" C
ODE IS NOW GENERATED             34600000.*                      INLINE. BEFORE,
 AN UNCONDITIONAL BRANCH           35100000.*                    TO A "DEAD" LIT
TERAL WAS MADE.                    35600000.*
                                   36100000.* LAST CHANGE DATE - APR  IL 24, 197
8                                    36600000.*                  - THE MACRO HAS
 BEEN REWRITTED TO                   37100000.*                    GENERATE MESS
AGE STRINGS (INSTEAD OF              37600000.*                    JUST A SEQUEN
CE   NUMBER) AT THE BRANCH             38100000.*                    ADDRESS. SU
CH MESSAGES COULD BE                   38600000.*                    REASONABLY
DISPLAYED VIA AN ESTAE                 39100000.*                    ROUTINE.
                                         39600000.*
                                         40200000.* LAST CHANGE DATE - DECEMBER
16, 1977                                 40700000.*                  - 2ND AND 3
RD OPERANDS HAVE BEEN ADDED TO             41200000.*                    THE MAC
RO PROTOTYPE SO AS TO SUPPORT              41700000.*                    THE GEN
ERATION OF BRANCH INSTRUCTIONS             42200000.*                    OTHER T
HAN JUST CONDITIONAL-BRANCH.               42700  000.*                  - WHEN
NO OPERANDS ARE GIVEN, AN                    43200000.*                    UNCON
DITIONAL BRANCH IS NOW GENERATED.            43700000.*
                                             44200000.* LAST CH  ANGE DATE - FEB
RUARY 2, 1977                                  44700000.*                  - MAI
LING ADDRESS CHANGE                            45200000.*
                                               45700000.* LAST CHANGE DATE - S
EPTEMBER 10, 1976                                46200000.*
                                                 46700000.* THIS MACRO WAS WRITT
EN BY DAVID B. COLE.  ANY QUESTIONS              47200000.* CONCERNING IT MAY BE
 ADDRESSED TO  :                                   47700000.*       COLE SOFTWAR
E LLC                                              48200000.*       736 FOX HOLL
OW ROAD                                            48700000.*       AFTON, VA 22
920-2780 USA                                         49200000.*       540-456-82
10                                                   49700000.*       540-456-66
58 FAX                                               50200000.*       http://www
.colesoft.com                                          50270000.*
                                             02/99 JDS 50340000         GBLB  &X
DCTRAP4           Use TRAP4 for DEAD trap?   02/99 JDS 50410000         GBLB  &X
DCRI              Relative-immediate jump?   10/99 JDS 504  40000         LCLC
&TRAPCMD                                       02/99 JDS 50480000         LCLC
&TRAPMSG                                       02/99 JDS 50550000         LCLB
&USETRAP4                                      02/99 JDS 50620000        +  GBLA
  &#DIECOD                                                 50700000           GB
LB  &#HLASM             HL-ASM SWITCH              04/99 DBC 50900000         GB
LC  &#EBCDIC(256),&X00,&X01,&XAD,&XDE,&XB2,&XFF    04/99 JDS 51200000.*
                                                   10/99 JDS 51201000         LC
LB  &U  SERI                                         10/99 JDS 51203000&USERI
SETB  (&XDCRI)            Set default                10/99 JDS 51205000
AIF   ('' EQ '&RI').OKRI                             10/99 JDS 51206000.*
                                                       10/99 JDS 51208000&USERI
  SETB  ('&RI' EQ 'YES&RI'(1,K'&RI))                   10/99 JDS 51210000.*
                                                       10/99 JDS 51211000.OKRI
  LCLC  &BP,&NOP                                         10/99 JDS 51213000&BP
    SETC  'BJ'(1+&USERI,1)                               10/99 JDS 51215000&NOP
    SETC  'JNOP'(2-&USERI,3+&USERI)                      10/99 JDS 51216000.*
                                                           10/99 JDS 51218000.*
                                                           02/99 JDS 51220000&US
ETRAP4 SETB (&XDCTRAP4)         Set default...             02/99 JDS 51250000
      AIF   ('' EQ '&TRAP4').OKTRAP4                       02/99 J  DS 51280000.
*                                                            02/99 JDS 51310000&
USETRAP4 SETB ('&TRAP4' EQ 'YES&TRAP4'(1,K'&TRAP4))          02/99 JDS 51330000.
*                                                            02/99 JDS 51360000.
O  KTRAP4 AIF   (&USETRAP4).TRAP4                              02/99 JDS 5139000
0.*                                                            02/99 JDS 5142000
0&TRAPCMD SETC  'X''00DEAD0100'''                              02/99 JDS 5145000
0&TRAPMSG SETC    'X''00DEAD'''                                  02/99 JDS 51470
000         AGO   .GOTTRAP                                       02/99 JDS 51500
000.TRAP4   ANOP  ,                                              02/99 JDS 51530
000&TRAPCMD SETC  'X''B2FFDEAD0  100'''                            02/99 JDS 515
60000&TRAPMSG SETC  'X''B2FFDEAD'''                                02/99 JDS 515
80000.*                                                            02/99 JDS 516
10000.GOTTRAP ANOP  ,                                                02/99 JDS 5
1640000.*                                                            02/99 JDS 5
1670000         LCLA  &L,&M                                                    5
1700000         LCLB  &ACONTROL           =1: ACONTROL ISSUED          04/99 DBC
 51900000         LCLC  &MSG,&LAB,&OP,&N,&#
 52200000         #TEST GEN=EBCDIC          DEFINE &#EBCDIC, &X--, ETC 03/90 DBC
 52700000         AIF   ('&TYPE' EQ 'MSG' OR '&TYPE' EQ 'CMD').TYPEOK
   53200000         MNOTE 8,'TYPE=&TYPE NOT RECOGNIZED. TYPE=CMD ASSUMED.'
   53700000.TYPEOK  ANOP
   54200000&N       SETC  '&NME'
   54700000            _ &#DIECOD SETA  &#DIECOD+1
                 55200000&#       SETC  '000&#DIECOD'
                 55700000&#       SETC  '&#'(K'&#-3,4)
                 56200000&  M       SETA  N'&SYSLIST+1
                   56700000.MLP     ANOP
                   57200000&M       SETA  &M-1
                   57700000         AIF     (&M EQ 0).NOMSG
                     58200000         AIF   (K'&SYSLIST(&M) EQ 0).MLP
                     58700000         AIF   ('&SYSLIST(&M)' EQ '''''').NOMSG
                     59200000&L       SETA  K'&SYSLIST(&  M)-2
                       59700000         AIF   (&L LE 0).NOMSG2
                       60300000         AIF   ('&SYSLIST(&M)'(1,1) NE '''').NOMS
G2                     60800000&MSG     SETC  '&SYSLIST(&M)'(2,&L)
                         61300000         AIF   ('&TYPE' NE 'MSG').MSGDONE
                         61800000&MSG     SETC  '&#DIECOD &MSG'
                         62300000&L       SETA  &L+1+K'&#DIECOD
                           62800000         AGO   .COMN
                           63300000.*
                           63800000.NOMSG2  ANOP
                             64300000&M       SETA  &M+1
                             64800000.NOMSG   AIF   ('&TYPE' NE 'MSG').MSGDONE
                             65300000&MSG     SETC  '&#DIECOD'
                             6580000  0&L       SETA  K'&MSG
                               66300000.*
                               66800000.COMN    AIF   (&USETRAP4 EQ (&L-&L/2*2))
.MSGDONE             01/00 JDS 67300000&L       SET  A  &L+1
                                 67800000&MSG     SETC  '&MSG '
                                 68300000.MSGDONE ANOP
                                 68800000.*
                                   69300000         AIF   (&M LE 2).INVERT
                               DBC 69800000         AIF   (&M NE 3).GENLIT
                                   70300000         AIF   ('&O'(K'&O,1) NE 'R').
G  ENLIT                             70800000.*
                                     71300000.INVERT  ANOP
                                     71800000&OP      SETC  '&NOP'
                             10/99 JDS 72300000         AIF   (&M LE 1 OR '&O' E
Q '').NVRTDON                      DBC 72800000&OP      SETC  '&BP'
                             10/99 JDS 73300000         AIF   ('&O' EQ 'B').NVRT
DON                            +     DBC 73800000         AIF   ('&O' EQ 'N').NV
RTDON                            02/99 JDS 74000000&OP      SETC  ''
                                       DBC 74300000         AIF   ('&O' EQ 'NONO
P').NVRTDON                            DBC 74800000&OP      SETC  '&BP.N&O'
                                 10/99 JDS 7  5300000         AIF   ('&O'(1,1) N
E 'N').NVRTDON                               75800000&OP      SETC  '&BP'.'&O'(2
,K'&O-1)                           10/99 JDS 76300000.NVRTDON ANOP
                                             76800000.*
                                     09/98 X34 77300000.************************
************************************ 09/98 X34 77800000.* If "NONOP", then then
generate a hword alignment         * 09/98 X34 78300000.* statement.
                                     * 09/98 X34 78800000.**********************
************************************** 09/98 X34 79300000         AIF   ('&OP' N
E '').NONOPZ                           09/98 X34 79800000&N       DS    0H
                                         09/98 X34 80400000&N       SETC  ''
                                         09/98 X34 80900000         AGO   .INLIN
E                                        09/98 X34 81400000.NONOPZ  ANOP
                                           09/98 X34 81900000.*
                                                     82400000         AIF   (&M
LE 2).SETLAB                                     DBC 82900000&N       &OP   &A
                BRANCH IF OK                           83400000&N       SETC  ''
                                                       83900000         AGO   .I
NLINE                                                  84400000.*
                                             09/98 X34   84900000.SETLAB  ANOP
                                               09/98 X34 85400000&LAB     SETC
'DIE&#.Z'                                                85900000&N       &OP
&LAB                SKIP IF OK                           86400000&N         SETC
  ''                                                       86900000.INLINE  ANOP
                                                           87400000.*
                                                       DBC 87900000         AIF
  ('  &TYPE' EQ 'MSG').INLMSG                                88400000&N       DC
    &TRAPCMD,C'&MSG',X'00'                         02/99 JDS 88900000         AG
O   .TRAIL                                                   89400000.INLMSG  AN
OP                                                         DBC 89900000&N
DC    &TRAPMSG,AL1(&L),C'&MSG'                       02/99 JDS 90400000.*
                                                           DBC 90900000.TRAIL
AIF   ('&LAB' EQ '').MEND                                        91400000&LAB
  DS    0H                  RECEIVE SKIP AROUND TRAP             91900000
  AGO   .MEND                                                    92400000.*
                                                 +                 92900000.GENL
IT  AIF   ('&TYPE' EQ 'MSG').LITMSG                                  93400000
      AIF   (&USETRAP4).CMDTRP4                            02/99 JDS 93600000&MS
G     SETC  '&X00.&XDE.&XAD.&X01.&X00.&MSG&X00.'           03/90 DBC 93900000
      AGO   .GOTLIT                                                    94400000.
CMDTRP4 ANOP  ,                                              02/99 JDS 94500000&
MSG     SETC  '&XB2&XFF&XDE&XAD&X01&X00&MSG&X00'             02/99 JDS 94600000
        AGO   .GOTLIT                                        02/99 JDS 947000  0
0.LITMSG  #TEST GEN=EBCDIC                                               9490000
0         AIF   (&USETRAP4).MSGTRP4                            02/99 JDS 9510000
0&MSG     SETC  '&X00.&XDE.&XAD.&#EBCDIC(&L+1)&MSG'            03/90 DBC 9540000
0         AG  O   .GOTLIT                                        02/99 JDS 95500
000.MSGTRP4 ANOP  ,                                              02/99 JDS 95600
000&MSG     SETC  '&XB2&XFF&XDE&XAD&#EBCDIC(&L+1)&MSG'           02/99 JDS 95700
000.GOTLIT  ANOP                                                             959
00000.*                                                                      964
00000.************************************************************ 04/99 DBC 964
20000.* If the current assembler is the Hi  gh Level Assembler     * 04/99 DBC 9
6450000.* V1.3 (or newer), then temporarily suppress the flagging  * 04/99 DBC 9
6470000.* of warning messages so as to prevent the issuance of the * 04/99 DBC 9
6500000.* "ASMA016W Literal used as branch target" messag  e.        * 04/99 DBC
 96530000.************************************************************ 04/99 DBC
 96550000         #TEST HL_ASM=TEST         SET "&#HLASM" SWITCH       04/99 DBC
 96580000         AIF   (NOT &#HLASM).ACONTZ1                          0  4/99 D
BC 96610000         AIF   ('&SYSVER' LT '1.3.0').ACONTZ1                 04/99 D
BC 96630000         PUSH  ACONTROL,NOPRINT    SAVE ACOTROL STATE         05/02 D
BC 96660000         PUSH  PRINT,NOPRINT       SAVE PRINT STATE SEPARATLY 04/99 D
BC 9669  0000         PRINT OFF,NOPRINT         SUPPRESS PRINTING          04/99
 DBC 96720000         ACONTROL FLAG(5),            SUPPRESS WARNING MSGS   11/02
 DBC 96740000.*                                 NOTE, THE TRAILING COMMA   07/99
 DBC 96750000.*                                   ABOVE WORKS AROUND A       07/
99 DBC 96751000.*                                 SYNTAX CHECKING BUG THAT   07/
99 DBC 96752000.*                                 EXISTED IN THE INITIAL     07/
99 DBC 96753000.*                                   RELEASE OF HL-ASM 1.3.     0
7/99 DBC 96754000.*                                 THIS BUG WAS FIXED BY PTF  0
7/99 DBC 96755000.*                                 UQ30452.                   0
7/99 DBC 96756000&ACONTROL SETB (1)
 04/99 DBC 96760000         POP   PRINT,NOPRINT       RESTORE CALLER'S PRINT
 04/99 DBC 96790000.*                                 STATE
 04/99 DBC 96820000.ACONTZ1 ANOP                                   +
   04/99 DBC 96840000.*
     04/99 DBC 96870000         AIF   (&M NE 3).OP4
               96900000&N       &BP&O &A,=C'&MSG'
     10/99 JDS 97400000         AGO   .DOLITZ
       04/99 DBC 97900000.OP4     ANOP
                 98400000&N       B&O   &A,&B,=C'&MSG'
                 98900000.DOLITZ  ANOP
       04/99 DB  C 98960000.*
         04/99 DBC 99020000         AIF   (NOT &ACONTROL).ACONTZ2
         04/99 DBC 99080000         POP   ACONTROL,NOPRINT    RESTORE CALLER'S A
CONTROL  05/02 DBC 99150000&AC  ONTROL SETB (0)                 BE NEAT
           04/99 DBC 99210000.ACONTZ2 ANOP
           04/99 DBC 99270000.*
           04/99 DBC 99330000.MEND    MEND  #  DIE
             04/01 S21 99400000./ ADD NAME=#DROP    0100-03155-03155-1415-00040-
00040-00000-DBCOLE5                     MACRO
                       #DROP            #DROP  &D
                         04000000.*
                         07000000.*
                         09000000.*
                           12000000.* LAST CHANGE DATE - OCTOBER 18, 1983
                           14000000.*                  - MAILING ADDRESS CHANGE
                           17000000.*
                             19000000.* LAST CHANGE DATE - APRIL 21, 1981
                             21000000.*                  - MACRO NAME CHANGED FR
OM $DROP TO #DROP.           24000000.*
                               26000000.* LAST CHANGE DATE - FEBRUARY 2, 1977
                               29000000.*                  - MAILING ADDRESS CHA
NGE                            31000000.*
                               34000000.  * LAST CHANGE DATE - AUGUST 24, 1976
                                 36000000.*
                                 39000000.* THIS MACRO WAS WRITTEN BY DAVID B. C
OLE. ANY QUESTIONS CONCERNING    41000000.* IT MAY BE A  DDRESSED TO:
                                   43000000.*       RR#2 BOX 712
                                   46000000.*       AFTON, VA. 22920
                                   48000000.*
                                     51000000.*
                                     53000000.*
                                     56000000.*   THIS MACRO GENERATES A DROP IN
STRUC+ TION THAT RELEASES ALL BASES    58000000.* DECLARED BY A PRIOR #ENTER MAC
RO   EXPANSION.                          60000000.*
                                         63000000.*
                                         65000000.*
                                           68000000.* INNER MACROS USED - NONE
                                           70000000.*
                                           73000000         GBLC  &#BS(14)
                                             75000000         LCLA  &W1
                                             78000000         AIF   ('&#BS(14)'
EQ '').END                                   80000000&W1      SETA  14
                                             820  00000.LP2     AIF   (&W1 EQ 1)
.END                                           85000000&W1      SETA  &W1-1
                                               87000000         AIF   ('&#BS(&W1
)' EQ '').LP2                                  90000000           DROP  &#BS(&W1
)                                                92000000         AGO   .LP2
                                                 95000000.END     MEND  #DROP
                                       04/01 S21 97000000./ ADD NAME=#DSA
0100-03155-03155-1415-00088-00088-00000-DBCOLE5                     MACRO
                                                   #DSA    &NME     #DSA  &DUMMY
,&MF=D                                         DBC 02000000.*
                                                     03000000.*
                                                     04000000.*
                                                 DBC 05000000.* LAST CHANGE DATE
 - JANUARY 31, 1987                                DBC 06000000.*  - ADDED SUPPO
RT FOR THE MF= OPERAND                             DBC 07000000.*  - MAILING ADD
RESS CHANGE                                        DBC 08000000.*
                                                         10000000.* LAST CHANGE
DATE - OCTOBER 18, 1983                                  11000000.*
     - MAILING ADDRESS CHANGE                            12000000.*
                                                         1  3000000.* LAST CHANG
E DATE - APRIL 21, 1981                                    14000000.*
       - MACRO NAME CHANGED FROM $DSA TO #DSA.             15000000.*
                                                           16000000.* LAS  T CHA
NGE DATE - FEBRUARY 2, 1977                                  17000000.*
         - MAILING ADDRESS CHANGE                            19000000.*
                                                             20000000.* LAST CHA
NGE DATE   - JANUARY 27, 1976                                  21000000.*
                                                               22000000.* THIS M
ACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING   23000000.* IT MAY
 BE ADDRESSED TO:      +                                         24000000.*
  RR#2 BOX 676                                                 DBC 25000000.*
    AFTON, VA. 22920                                               26000000.*
                                                                   28000000.*
                                                                     29000000.*
                                                                     30000000.*
  THIS MACRO GENERATES A DSECT FOR A STANDARD REGISTER SAVE AREA.    31000000.*
FREQUENTLY, A REENTRANT PROGRAM NEEDS TO GETMAIN A   "DATA STORAGE     32000000.
* AREA" AND USE THE BEGINNING OF IT AS A REGISTER SAVE AREA. IN THIS   33000000.
* SITUATION, THIS MACRO CAN BE USED TO MAP THE BEGINNING OF THE DSA.   34000000.
* THE REMAINDER OF THE DSA, OF COURSE, WOULD HAVE TO BE MAPPED           3500000
0.* MANUALLY.                                                            3700000
0.*                                                                      3800000
0.*   IF THE NAME FIELD ON THE MACRO CALLING STATEMENT IS OMITTED, THEN  3900000
0  .* THE GENERATED DSECT IS NAMED "DSA" AND ALL GENERATED FIELD NAMES ARE 40000
000.* PREFIXED WITH "DSA". IF THE NAME FIELD IS USED, THEN IT INSTEAD OF   41000
000.* "DSA" IS USED IN THE ABOVE MANNER.                                   42000
000.*                                                                    DBC 430
00000.* &MF=                                                             DBC 440
00000.* THIS OPERAND CONTROLS WHETHER OR NOT THE MACRO PRODUCES A        DBC 460
00000.* DSECT CARD. VALID VALUE  S ARE:                                    DBC 4
7000000.*                                                                  DBC 4
8000000.*     -OMITTED-                                                    DBC 4
9000000.*     MF=D                                                           DBC
 50000000.*     MF=(D,Y)                                                     DBC
 51000000.*     A DSECT CARD *IS* GENERATED.                                 DBC
 52000000.*                                                                    D
BC 53000000.*     MF=(D,N)                                                     D
BC 55000000.*     A DSECT CARD IS *NOT* GENERATED. A "DS 0D" CARD IS           D
BC 56000000.*     GENERATED INSTEAD.
 DBC 57000000.*
     58000000.*   INNER MACROS USED - NONE
     59000000.*
     600000  00.*
       61000000.*
       62000000         LCLA  &A1
       64000000         LC  LC  &N,&D
     DBC 65000000.*
     DBC 66000000&N       SETC  'DSA'
         67000000         AIF   (K'&NME E+ Q 0).GOTNME
           68000000&N       SETC  '&NME  '
             69000000.GOTNME  ANOP
             70000000.*
         DBC 71000000         AIF   ('&MF(1)' EQ 'D').  MFD
           DBC 73000000         MNOTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS ASS
UMED.'     DBC 74000000.*
           DBC 75000000.MFD     ANOP
             DBC 76000000&D       SETC  'DSECT'
             DBC 77000000         AIF   ('&MF(2)' EQ '').MFDOK3
             DBC 78000000         AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3
               DBC 79000000&D       SETC  'DS'
               DBC 80000000         AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3
               DBC 82000000         MNOTE 8,'MF(2)=&MF(2) IS INVALID. MF(2)=N IS
 ASSUMED.'     DBC   83000000.MFDOK3  ANOP
                 DBC 84000000.*
                 DBC 85000000&N       &D    0D                  STD REGISTER SAV
E AREA           DBC 86000000&N.WD  1   DS    A                   WORD-1 (USED B
Y PL/1)                87000000&N.HSA   DS    A                   HIGHER SAVE AR
EA POINTER             88000000&N.LSA   DS    A                   LOWER SAVE ARE
A POINTER              89000000&N.R14   DS    A                     REGISTER SAV
E AREA (RETURN ADDRESS)  91000000&N.R15   DS    A                   REGISTER SAV
E AREA (ENTRY POINT)     92000000&A1      SETA  0-1
                         93000000.LP      AIF   (&A1 EQ 12).END
                           94000000&A1      SETA  &A1+1
                           95000000&N.R&A1  DS    A                   REGISTER S
AVE AREA                   96000000         AGO   .LP
                             97000000.END     MEND  #DSA
                   04/01 S21 98000000./ ADD NAME=#DSORG   0101-89169-89169-1035-
00060-00060-00000-DBCOLE1                     MACRO
                               00010000&N       #DSORG &D
                               00020000.*
                               00030000.*
                                 00040000.*
                                 00050000.* LAST CHANGE DATE - APRIL 21, 1981
                                 00060000.*                  - MACRO NAME CHANGE
D FROM $DSORG TO #DSORG.         00070000.*
                                   00080000.* LAST CHANGE DATE - FEBRUARY 2, 197
7                                  00090000.*                  - MAILING ADDRESS
 CHANGE.                           00100000.*              +
                                     00110000.* LAST CHAN  GE DATE - APRIL 1, 19
75                                     00120000.*
                                       00130000.* THIS MACRO WAS WRITTEN BY DAVI
D B. COLE. ANY QUESTIONS CONCERNING    00140000.* IT MAY BE ADDRESSED TO  :
                                         00150000.*       809 WHITNEY AVE.
                                         00160000.*       NEW HAVEN, CT. 06511
                                         00170000.*
                                           00180000.*
                                           00190000.*
                                           00200000.*   THIS MACRO WAS WRITTEN T
O BE AN INNER MACRO FO  R THE #DCBD MACRO.   00210000.* ITS SOLE PURPOSE IS TO G
ENERATE DSORG FIELD AND BIT NAMES FOR THE    00220000.* #DCBD MACRO.
                                             00230000.*
                                               00240000.*
                                               00250000.*
                                               00260000.* INNER MACROS USED - NO
NE                                             00270  000.*
                                                 00280000         GBLB  &#DCBDSG
                                                 00290000         GBLB  &#DCBSW(
150)                                             00300000         L  CLC  &P
                                                   00310000&P       SETC  'DCB'
                                                   00320000         AIF   ('&N'
EQ '').GOTPFIX                                     00330000&P       SETC  '&N'
                                                     00340000.GOTPFIX ANOP
                                                     00350000&P.DSORG DS    0BL2
 -         DATA SET ORGANIZATION BEING USED          00360000&P.DSRG1 DS    BL1
-          FIRST   BYTE OF DCBDSORG                    00370000         AIF   (&
#DCBDSG).SKP1                                          00380000DCBDSGIS EQU   BI
T0 -         IS - INDEXED SEQUENTIAL ORGANIZATION      00390000DCBDSGPS EQU   BI
T1 -         PS - SHYSICAL SEQUE  NTIAL ORGANIZATION     00400000DCBDSGDA EQU
BIT2 -         DA - DIRECT ORGANIZATION                  00410000DCBDSGCX EQU
BIT3 -         CX - BTAM OR QTAM LINE GROUP              00420000DCBDSGCQ EQU
BIT4 -         CQ - QTAM DIRECT ACCESS MESSAGE   QUEUE     00430000DCBDSGMQ EQU
  BIT5 -         MQ - QTAM PROBLEM PROGRAM MESSAGE QUEUE   00440000DCBDSGPO EQU
  BIT6 -         PO - PARTITIONED ORGANIZATION             00450000DCBDSGU  EQU
  BIT7 -         U  - UNMOVABLE, THE DATA CONTAINS         004  60000*
                        LOCATION DEPENDENT INFORMATION       00470000.SKP1    AN
OP  ,                                                        00480000&P.DSRG2 DS
    BL1 -          SECOND BYTE OF DCBDSORG                   00490000        +
AIF   (&#DCBDSG).SKP2                                          00500000DCBD  SGG
S EQU   BIT0 -         GS - GRAPHICS ORGANIZATION                00510000DCBDSGT
X EQU   BIT1 -         TX - TCAM LINE GROUP                      00520000DCBDSGT
Q EQU   BIT2 -         TQ - TCAM MESSAGE QUEUE                   00530000DCBACBM
  EQU   BI  T4 -         ACCESS METHOD CONTROL BLOCK   ICBI DCB-1  00540000
    AIF   (&#DCBSW(44)).SKP2                                       00550000&#DCB
SW(44) SETB (1)                                                    00560000DCBDS
GTR EQU   BIT5 -           TR - TCAM 3705                    S22024  00570000.SK
P2    ANOP                                                           00580000&#D
CBDSG SETB  (1)                                                      00590000
      MEND                                                             00600000.
/ ADD NAME=#ENTER   0100-03155-03155-1415-00858-00858-00000-DBCOLE5
        MACRO                                                          #ENTER  &
N       #ENTER &NME,&ESDTYPE=DEFAULT,&BASES=1,&SAVTYPE=  LOCAL,&PFIX=    0020000
0.*                                                                      0030000
0.*                                                                      0040000
0.*                                                            05/97 X  33 00500
000.* Last Change Date - June 1, 1997                            05/97 X33 00600
000.* - Added LOC=BELOW to all GETMAINS.                         05/97 X33 00800
000.*                                                                      00900
000.*   LAST CHANGE DATE - NOVEMBER 12, 1987                             DBC 010
00000.* - CONVERTED ALL R-FORM GETMAINS TO RU-FORM.                      DBC 011
00000.*                                                                  DBC 012
00000.* LAST CHANGE   DATE - JULY 27, 1987                                 DBC 0
1300000.* - SAVTYPE=(PAGE,---) SUPPORT ADDED. FUNCTIONS LIKE               DBC 0
1500000.*   SAVTYPE=(RENT,---) EXCEPT THAT THE GETMAINED AREA IS           DBC 0
1600000.*   PAGE ALIGNED INSTEAD OF   DWORD ALIGNED.                         DBC
 01700000.*                                                                  DBC
 01800000.* LAST CHANGE DATE - AUGUST 12, 1985                               DBC
 01900000.*                  - THIS MACRO NO LONGE  R ASSUMES THAT A           D
BC 02000000.*                    SATISFIED UNCONDITIONAL GETMAIN               D
BC 02200000.*                    REQUEST SETS R15 TO ZERO. ONE CUSTOMER        D
BC 02300000.*                    ACTUALLY HAD A MODIFIED GETMAIN   SVC
 DBC 02400000.*                    ROUTINE THAT INSURED THAT R15 WAS
 DBC 02500000.*                    UNCHANGED BY GETMAIN. THIS LED TO
 DBC 02600000.*                    DISASTEROUS RESULTS WHEN HE ATTEMPTED
   DBC 02700000.*                    TO USE THIS MACRO IN THAT
   DBC 02900000.*                    ENVIRONMENT. NOW, CHANGING MY MACRO
   DBC 03000000.*                    WAS A LOT SIMPLER THAN CHANGING HIS
   DBC 03100000            _ .*                    ENVIRONMENT, AND THERE WAS A
LOT OF           DBC 03200000.*                    MONEY AT STAKE, SO ...
                 DBC 03300000.*
                 DBC 03400000.  * LAST CHANGE DATE - AUGUST 8, 1984
                   DBC 03600000.*                  - WHEN BASES=* IS SPECIFIED,
#ENTER NOW         DBC 03700000.*                    DERIVES THE DESIRED BASE AD
DRESS BY           DBC 03800000.*                      SUBTRACTING AN OFFSET FRO
M THE                DBC 03900000.*                    CURRENT ENTRY ADDRESS. PR
EVIOUSLY, IT         DBC 04000000.*                    WAS JUST LOADING AN ADCON
 FOR THE             DBC 04100000.*                    DESIR  ED BASE ADDRESS. T
HIS CAUSED             DBC 04300000.*                    PROBLEMS IF THE #ENTER
MACRO WAS              DBC 04400000.*                    LOCATED WITHIN DYNAMICA
LLY RELOCATED          DBC 04500000.*                    CODE.
                         DBC 04600000.*                  - SIMILARLY, WHEN SAVTY
PE=(REMOTE,NME%)         DBC 04700000.*                    IS SPECIFIED, THE DES
IRED SAVE AREA           DBC 04800000.*                    IS LOCATED BY ADDING
AN OFFSET   (WHICH         DBC 05000000.*                    MAY BE NEGATIVE) TO
 THE CURRENT ENTRY         DBC 05100000.*                    ADDRESS.
                           DBC 05200000.*
                             DBC 05300000.* LAST CHANGE DATE - JUNE 11, 1984
                             DBC 05400000.*                  - ADDED "SAVTYPE=NO
NE" SUPPORT.                 DBC 05500000.*                  - WHEN A REMOTE SAV
E AREA WAS USED,             DBC 0570000  0.*                    #ENTER USE TO G
ENERATE A "USING"              DBC 05800000.*                    STATEMENT DECLA
RING R13 AS A BASE FOR         DBC 05900000.*                    THAT SAVE AREA.
 THAT "USING" STATEMENT        DBC 06000000.*                      IS NO LONGER
GENERATED.                       DBC 06100000.*
                                     06200000.* LAST CHANGE DATE - OCTOBER 18, 1
983                                  06400000.*                  - MAI  LING ADD
RESS CHANGE                            06500000.*
                                       06600000.* LAST CHANGE DATE - APRIL 27, 1
983                                    06700000.*                  - MAILING ADD
RESS   CHANGE.                           06800000.*                  - USE OF IB
M'S "SAVE" MACRO HAS BEEN                06900000.*                    REPLACED
BY LOCAL CODE.                           07100000.*                  - THE ASSEM
BLY DATE AND TIME AR  E NOW                07200000.*                    INCLUDE
D IN THE MODULE IDENTIFIER                 07300000.*                    TEXT.
                                           07400000.*
                                   +         07500000.* LAST CHANGE DATE - APRIL
 21, 1981                                      07600000.*                  - MAC
RO NAME CHANGED FROM $ENTER TO #ENTER.         07700000.*
                                               07900000.* LAST CHANGE DATE - APR
IL 15, 1981                                    0  8000000.*                  - A
DDED ENTRY LINKAGE FOR A PLI ENVIRONMENT.        08100000.*                  - A
DDED "#REGS GEN=NO" SUPPORT.                     08200000.*
                                                 08300000.* LAS  T CHANGE DATE -
 JULY 18, 1980                                     08400000.*                  -
 BUG FIXED: THE PRECEEDING MODIFICATION INTRODUCED 08600000.*
 AN ERROR WHICH UNDER CERTAIN CIRCUMSTANCES        08700000.*
   GENERATED ASSEMBLY ERRORS.                        08800000.*
                                                     08900000.* LAST CHANGE DATE
 - JULY 10, 1980                                     09000000.*
 - FOR GETMAI  NED REENTRANT SAVE AREAS, CODE HAS BEEN 09100000.*
     ADDED TO CLEAR THE ENTIRE GETMAINED AREA TO ZEROS 09300000.*
     BEFORE SETING THE CHAIN FIELD.                    09400000.*
   - INDIRECT ADDRESSING TO   A REMOTE SAVE AREA IS NOW  09500000.*
       SIGNALLED BY A TRAILING PERCENT SIGN RATHER THAN  09600000.*
       A LEADING PERCENT SIGN.                           09700000.*
                                                           09800000.* LAST CHANG
E DATE - OCTOBER 3, 1979                                   10000000.*
       - CODE HAS BEEN ALTERED SO THAT ADDRESSABILITY TO   10100000.*
         A REMOTE SAVE AREA DOES NOT HAVE TO BE BASED ON     10200000.*
           R15 (I.E., ON THE ENTRY ADDRESS).                 10300000.*
                                                             10400000.* LAST CHA
NGE DATE - OCTOBER 3, 1978                                   10500000.*
           - THE GETMAIN FOR THE RENTRANT SAVE AREA HAS BEEN   10700000.*
             CHANGED SO THAT MORE THAN 4K BYTES CAN BE GOTTEN. 10800000.*
                                                               10900000.* LAST C
HANGE DA  TE - FEBRUARY 28, 1978                                 11000000.*
             - BUG FIXED IN REMOTE SAVE AREA HANDLING            11100000.*
                                                                 11200000.* LAST
 CHANGE DATE - JANUARY   29, 1978                                  11400000.*
               - IN MOST CASES IT IS LOGICALLY INCONSISTANT TO     11500000.*
                 CODE 'BASES=*' WHEN ONE OF THE OLD BASES IS R13.  11600000.*
                 THIS PROBLEM IS NOW R  ECOGNIZED AND FLAGGED.       11700000.*
                                                                     11800000.*
                 - A REMOTE SAVE AREA'S NAME CAN NOW BE GIVEN EITHER 11900000.*
                   WITH OR WITHOUT A PRECEEDING PERCE+ NT (%) SIGN TO  12100000.
*                    INDICATE WHETHER THE NAMED ADD  RESS MUST BE        1220000
0.*                    REACHED BY INDIRECT ADDRESSING.                   1230000
0.*                                                                      1240000
0.* LAST CHANGE DATE - NOVEMBER 4, 1977                                    12500
000.*                  - SUPPORT IS ADDED FOR DEFINING A LOCAL SAVE AREA   12600
000.*                    WHOSE LENGTH IS OTHER THAN 72 BYTES.              12800
000.*                                                                      12900
0  00.* LAST CHANGE DATE - JANUARY 13, 1977                                  130
00000.*                  - THE MF= AND SVID= OPERANDS ARE REPLACED BY THE    131
00000.*                    SAVTYPE= OPERAND.                                 132
00000.*                    - SUPPORT FOR THE HANDLING OF A REMOTELY ASSEMBLED  1
3300000.*                    SAVE AREA.                                        1
3500000.*                  - MAILING ADDRESS CHANGE.                           1
3600000.*
 13700000.* LAST CHANGE DATE - SEPTEMBER 14, 1976
 13800000.*                  - IMPLEMENT SUPPORT FOR "BASES=*" WHICH IMPLIES
 13900000.*                    THAT BOTH THE B  ASE ADDRESS AND BASE REGISTERS
   14000000.*                    DEFINED BY THE PHYSICALLY PREVIOUS USE OF THE
   14200000.*                    #ENTER MACRO ARE TO BE REUSED.
   14300000.*
     14400000.* LAST CHANGE DATE - AUGUST 23, 1976
     14500000.*
     14600000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONC  ER
NING   14700000.* IT MAY BE ADDRESSED TO:
       14900000.*       RR#2 BOX 712
       15000000.*       AFTON, VA. 22920
       1510  0000.*
         15200000.*
         15300000.*
         15400000.*   THIS   MACRO GENERATES OS STANDARD ENTRY LINKAGE. IT WAS W
RITTEN TO  15500000.* PROVIDE A SIMPLE, FLEXIBLE, AND COMPLETE METHOD OF GENERAT
ING SUCH   15700000.* LINKAGE. IN ADDITION, FOR ALMOST ALL OPERAND COMBINATIONS,
 #ENTER    15800000.* WILL GENERATE THE A  BSOLUTE MINIMUM AMOUNT OF CODE NECESS
ARY.         15900000.*
             16000000.*   THE #ENTER MACRO WILL GENERATE THE FOLLOWING:
             16100000.*     - A CSECT OR ENTRY CARD (IF   DESIRED)
               16200000.*     - A MODULE IDENTIFIER WHICH WILL INCLUDE THE ASSEM
BLY            16400000.*       DATE AND TIME.
               16500000.*     - CODE TO SAVE ALL REGISTERS IN THE HIGHE+ R SAVE
AREA             16600000.*     - CODE TO LOAD R13 WITH A POINTER TO   A LOWER S
AVE AREA           16700000.*     - CODE TO CROSS LINK THE LOWER SAVE AREA WITH
THE HIGHER SAVE    16800000.*       AREA
                   16900000.*     - CODE TO LOAD ANY SET OF BASE REGISTERS
                     17100000.*     - A USING STATEMENT DECLARING THE SET OF BAS
E REGISTERS          17200000.*     - EITHER THE LOWER SAVE AREA ITSELF OR CODE
TO GETMAIN A         17300000.*       REENTRANT SAVE AREA OF 72 OR MORE BYTES OR
 CODE TO LOAD THE      17400000.*       ADDRESS OF AN ASSEMBLED SAVE AREA THAT I
S REMOTE FROM THE      17500000.*       MACRO EXPANSION.
                       17600000.*     - FOR A GETMAINED REENTRANT SAVE AREA, COD
E TO CLEAR THE AREA TO 17800000.*         ZEROS.
                         17900000.*
                         18000000.* &N
                         18100000.*       THIS IS   THE ONLY FIELD REQUIRED FOR
THE MACRO CALL. IT MUST    18200000.*       SPECIFY THE DESIRED CONTROL SECTION
OR ENTRY NAME.             18300000.*
                           18500000.* &NME
                             18600000.*       USE THIS FIELD TO SPECIFY OPTIONAL
 TEXT TO BE                  18700000.*       INCLUDED INTO THE MODULE IDENTIFIE
R. ENCLOSING                 18800000.*       QUOTES ARE OPTIONAL.
                               18900000.*
                               19000000.* &ESDTYPE=
                               19200000.*       THIS OPERAND CONTROLS THE TYPE O
F EXTERNAL SYM  BOL (IF ANY) TO  19300000.*       BE GENERATED USING &N. VALID V
ALUES FOR THIS OPERAND IMPLY THE 19400000.*       FOLLOWING:
                                 19500000.*              -OMITTED-    ==> ESDTYP
E=ENTRY IF SAVTYPE=PLI             19600000.*              -OMITTED-    ==> ESDT
YPE=CSECT OTHERWISE                19700000.*             ESDTYPE=CSECT ==>
                                   19900000.*                     &N       CSECT
                                   20000000.  *             ESDTYPE=START ==>
                                     20100000.*                     &N       STA
RT                                   20200000.*             ESDTYPE=ENTRY ==>
                                     20300000.*                                E
NTRY &N                                20400000.*                     &N       D
S    0H                                20600000.*             ESDTYPE=     <==>
                                       20700000.*             ESDTYPE=NONE    ==
>                                        20800000.*                     &N
 DS    0H                                20900000.*
                                         21000000.* &BASES=
         +                                 21100000.*       USE THIS OPERAND TO
SPECIFY   EITHER HOW MANY OR EXACTLY WHICH   21300000.*       BASE REGISTERS TO
DECLARE AND LOAD. VALID VALUES FOR THIS      21400000.*       OPERAND ARE:
                                             21500000.*             BASES= -A SI
NGLE SELF DEFINING NUM  ERIC-                  21600000.*                   THIS
 REQUESTS THAT A SPECIFIC NUMBER OF BASES BE   21700000.*                   LOAD
ED AND DECLARED. THE MACRO IS ALLOWED TO       21800000.*                   DETE
RMINE FOR ITSELF PRECISELY WHICH REGI  SERS TO   22000000.*                   DE
CLARE AS FOLLOWS. FOR SAVTYPE=LOCAL (SEE BELOW)  22100000.*                   TH
E FIRST BASE REGISTER WILL BE R13; OTHERWISE     22200000.*                   (I
.E. FOR SAVTYPE=RENT, =PAGE, OR =REMOTE), THE    223  00000.*
FIRST BASE REGISTER WILL BE R12. IN EITHER CASE,   22400000.*
ADDITIONAL BASES WILL BE SUCCESSIVELY LOWER        22500000.*
NUMBERED REGISTERS. EXAMPLES:                      22700000.*
  BASES=3,SAVTYPE=RENT  ==> R12, R11, AND R10.       22800000.*
  BASES=2,SAVTYPE=LOCAL ==> R13, AND R12.            22900000.*             BASE
S= -A SUBLIST OF ONE OR MORE REGISTER NAMES-         23000000.*
    THE LISTED REGISTERS ARE LOADED AND DECLARED AS    23100000.*
    BASES. THE LEFTMOST LISTED REGISTER IS LOADED WITH 23200000.*
    THE LOWEST ADDRESS. EXAMPLE:                       23300000.*
    BASES=(R5,6,4  ) ==> R5, R6, AND R4 IN THAT ORDER.   23500000.*
BASES=*                                                  23600000.*
      THE BASE ADDRESS AND BASE REGISTERS DEFINED BY THE 23700000.*
      PHYSICALLY PREVIOUS #ENTER   MACRO ARE REUSED.       23800000.*          T
HE BASES= OPERAND MAY BE NULLIFIED BY SPECIFYING EITHER:   23900000.*
  BASES=                                                   24000000.*
  BASES=0                                                    24200000.*       IN
 THIS CASE, NO BASE REGISTERS ARE LOADED OR DECLARED.        24300000.*
 IF THE BASES= OPERAND IS OMITTED, THEN A DEFAULT OF BASES=1 24400000.*       WI
LL BE USED.                                                  2  4500000.*
                                                               24600000.* &SAVTY
PE=                                                            24700000.*
THIS OPERAND IDENTIFIES THE TYPE OR LOCATION OF THE SAVE AREA  24900000.*
  TO BE GENERATED OR USED. VALID VALUES ARE:                     25000000.*
        -OMITTED-                                                25100000.*
        SAVTYPE=                                                 25200000.*
        SAVT  YPE=LOCAL                                            25300000.*
          SAVTYPE=(,-SAVE AREA NAME-)                              25400000.*
          SAVTYPE=(LOCAL,-SAVE AREA NAME-)                         25600000.*
          SAVTYPE=(LOCAL,,-+ SAVE AREA LENGTH-)                      25700000.*
            SAVTYPE=(LOCA  L,-SAVE AREA NAME-,-SAVE AREA LENGTH-)      25800000.
*                     A STANDARD SAVE AREA IS GENERATED IN THE         25900000.
*                     THE MACRO EXPANSION AND ITS ADDRESS IS LOADED    26000000.
*                     INTO R13. NOTE, DE  PENDING UPON THE BASES=        2610000
0.*                     OPERAND (SEE ABOVE) R13 MAY ALSO BE DECLARED AS  2630000
0.*                     A PROGRAM BASE.                                  2640000
0.*                        IF A -SAVE AREA NAME- IS GIV  EN, THEN IT IS    26500
000.*                     USED TO LABEL THE SAVE AREA; OTHERWISE, AN       26600
000.*                     INTERNAL NAME IS GENERATED.                      26700
000.*                              IF -SAVE AREA LENGTH- IS GIVEN, THE  N IT 268
00000.*                              IS USED TO SET THE LENGTH OF THE SAVE   270
00000.*                              AREA; OTHERWISE, THE DEFAULT LENGTH OF  271
00000.*                              72 BYTES IS USED.                       272
00000  .*             SAVTYPE=(REMOTE,-SAVE AREA ADDRESS-)                     2
7300000.*                     THE ADDRESS OF THE REMOTE SAVE AREA IS           2
7400000.*                     LOADED INTO R13. NOTE, IN THIS CASE -SAVE AREA   2
7500000.*                       ADDRESS- IS A REQUIRED SUB-OPERAND. IT MAY BE
 27700000.*                     EITHER AN ADDRESS LABEL OR A PARENTHESIZED
 27800000.*                     REGISTER NAME OR AN ADDRESS LABEL FOLLOWED BY A
 27900000.*                     PER  CENT (%) SIGN. IF THE NAME IS JUST AN ADDRE
SS 28000000.*                     LABEL, THEN A 'LA' INSTRUCTION IS USED TO LOAD
   28100000.*                     THE SAVE AREA'S ADDRESS. IF A PERCENT SIGN
   28200000.*                     FOLLOWS THE NAME  , THEN AN ADDRESS CONSTANT I
S    28400000.*                     GENERATED AND A 'L' INSTRUCTION IS USED. IF
A    28500000.*                     REGISTER NAME IS GIVEN, THEN A 'LR' INSTRUCT
ION  28600000.*                     IS USED UNLESS THE MACRO CAN   DETERMINE THA
T THE  28700000.*                     NAMED REGISTER IS ACTUALLY R13 IN WHICH CA
SE IT  28800000.*                     IS ASSUMED THAT THE LOWER SAVE AREA IS ALR
EADY   28900000.*                     PRESENT AND INITIALIZED, SO THE SAVING OF
         29100000.*                     REGISTERS AND THE CROSS-CHAINING OF THE
SAVE     29200000.*                     AREAS IS BYPASSED.
         29300000.*             SAVTYPE=RENT
         294000  00.*             SAVTYPE=(RENT,(-LENGTH-,-SUBPOOL-),-ERROR ADDR
ESS-)      29500000.*             SAVTYPE=(RENT,(-LENGTH-,-SUBPOOL-),RETURN)
           29600000.*             SAVTYPE=PAGE
           29800000.*               SAVTYPE=(PAGE,(-LENGTH-,-SUBPOOL-),-ERROR AD
DRESS-)      29900000.*             SAVTYPE=(PAGE,(-LENGTH-,-SUBPOOL-),RETURN)
             30000000.*                     THE MACRO EXPANSION IS TO BE REENTRA
NT. THE SAVE 30100000.*                     A+ REA IS TO BE GETMAINED. IF RENT I
S SPECIFIED,   30200000.*                       THEN THE SAVE AREA IS DWORD ALIG
NED. IF PAGE IS  30300000.*                     SPECIFIED, THEN THE SAVE AREA IS
 PAGE ALIGNED.   30500000.*
                 30600000.*                     THE OTHER   SUB-OPERANDS HAVE TH
E FOLLOWING        30700000.*                     EFFECTS:
                   30800000.*                     -LENGTH- IS OPTIONAL. IF OMITT
ED, THEN A VALUE   30900000.*                              OF 72 IS USED.   IF G
IVEN, THEN IT        31000000.*                              INDICATES THE SIZE
OF THE SAVE AREA TO  31100000.*                              BE GOTTEN. WARNING,
 THE VALUE OF        31300000.*                              -LENGTH- SHOULD NEV
ER BE LE  SS THAN 72.  31400000.*                     -SUBPOOL- IS OPTIONAL. IF
OMITTED, THEN A VALUE  31500000.*                               OF 0 IS IMPLIED.
 IF GIVEN, THEN IT     31600000.*                               SPECIFIES THE SU
BPOOL OUT OF WHICH THE   31700000.*                               SAVE AREA IS T
O BE GOTTEN.             31800000.*                     -ERROR ADDRESS- IS OPTIO
NAL. IF OMITTED, THEN    32000000.*                                     THE SAVE
 AREA GETMAIN REQUEST IS 32100000.*                                       UNCOND
ITIONAL. IF GIVEN, THEN    32200000.*                                     THE GE
TMAIN IS CONDITIONAL, AND  32300000.*                                     IF IT
FAILS, THEN CONTROL IS     32400000.*                                       PASS
ED TO THE INDICATED ADDRESS. 32500000.*                                     NOTE
, -ERROR ADDRESS- MAY BE     32700000.*                                     EITH
ER A STATEMENT LABEL OR A    32800000.*                                       PA
RENTHESIZED REGISTER NAME.     32900000.*                                     WA
RNING, -ERROR ADDRESS- MAY BE  33000000.*                                     US
ED ONLY IN A MVS ENVIRONMENT.  33100000.*                                     IT
 IS   NOT SUPPORTED UNDER MVT.   33200000.*                     RETURN IS A SPEC
IAL FORM OF -ERROR ADDRESS-      33400000.*                            WHICH, IF
 GIVEN, CAUSES CONTROL TO BE     33500000.*                            RETURNED
IMMEDIATELY TO THE   CALLER IN THE 33600000.*                            EVENT O
F A GETMAIN FAILURE. ALL REGISTERS 33700000.*                            ARE RES
TORED EXCEPT R15 WHICH CONTAINS    33800000.*                            THE RET
URN CODE FROM GETMAIN.               33900000.*             SAVTYPE=PLI
                                     34100000.*             SAVTYPE=NONE
                                 DBC 34200000.*                     NO LOCAL LEV
EL SAVEAREA IS DEFINED OR        DBC 34300000.*                       USED.
                                   DBC 34400000.*             SAVTYPE=(PLI,-LENG
TH-)                                   34500000.*                     THE MACRO
IS TO EXPAND INTO THE FORMAT OF A PLI  34600000.*              +        PROLOG.
THE EXPANSION IS REENTRANT. THE SAVE     34800000.*                       AREA W
ILL BE A PLI DSA. IT WILL PROBABLY BE      34900000.*                     OBTAIN
ED FROM PLI'S ISA. IF -LENGTH- IS GIVEN,   35000000.*                     THEN I
T SPECIFIES THE DESIRED LENGTH OF THE DSA  35100000.*                     TH  AT
 THIS EXPANSION OBTAINS. WARNING, THE VALUE  35200000.*                     OF -
LENGTH- MUST NEVER BE LESS THAN 88.          35300000.*
                                             35500000.* &PFIX=
                                               35600000.*       THE #ENTER MACRO
 ATTEMPTS TO USE REGISTER EQUATES IN ITS       35700000.*       EXPANSION WHEN R
EFERING TO REGISTERS. THIS IS SO THAT THE USE  35800000.*       OF THE REGISTERS
 IS INDICATED IN THE ASSEM  BLER'S CROSS         35900000.*       REFERENCE LIST
ING. THE PFIX= OPERAND CAN BE USED TO CONTROL    36000000.*       THE SET OF EQU
ATES USED. FOR EXAMPLE, IF "PFIX=GPR" IS GIVEN,  36200000.*       THEN "GPR1" IS
 USED WHENEVER THE EXPANSION REFERS FO RE  GISTER  36300000.*       1.
                                                   36400000.*          IF THE PF
IX= OPERAND IS OMITTED, THEN THE SET OF REGISTER   36500000.*       EQUATES DEFI
NED BY THE NEXT PRIOR #REGS MACRO IS USED. IF      36600  000.*       THERE ARE
NO PRIOR #REGS MACROS, THEN SELF-DEFINING NUMERICS   36700000.*       ARE USED.
                                                     36900000.*
                                                     37000000.* MISCELL  ANIOUS
CONSIDERATIONS                                         37100000.*     - SINCE TH
E #ENTER MACRO EXPANSION USUALLY INCLUDES A CSECT      37200000.*       CARD, TH
E MACRO CALL SHOULD BE PLACED AT THE PHYSICAL          37300000.*       BEGINNIN
G OF A   CONTROL SECTION.                                37400000.*     - FOR LO
CAL SAVE AREAS IT IS BOTH POSSIBLE AND REASONABLE FOR    37600000.*       R13 TO
 SERVE AS BOTH THE SAVE AREA POINTER AND A PROGRAM BASE. 37700000.*       THERE
ARE, HOWEVER, CERTAIN   PRECAUTIONS THAT HAVE TO BE TAKEN  37800000.*       FOR
VARIOUS SYSTEM EXIT ROUTINES IF THEY ARE INCLUDED IN THE   37900000.*       PROG
RAM. HERE ARE SOME EXAMPLES:                               38000000.*
- IOS APPENDAGE ROUTINES: NO BASE RE  GISTER FOR THE MAIN    38100000.*
    PROGRAM, INCLUDING R13, IS AVAILABLE FROM WITHIN AN IOS  38300000.*
    APPENDAGE.                                               38400000.*
  - DCB OPEN EXITS: R13 REMAINS A VALID BASE REGIST  ER.       38500000.*
    - EOD ROUTINES: R13 REMAINS A VALID BASE REGISTER.         38600000.*
    - SYNAD EXITS: R13 REMAINS A VALID BASE REGISTER UNTIL A   38700000.*
      SYNADAF MACRO IS ISSUED. AFTER A SUBSEQUENT SYNADRLS     388  00000.*
        MACRO, R13 IS AGAIN A VALID PROGRAM BASE.                38900000.*
                                                                 39100000.*
                                                                 39200000.*
 +                                                                 39300000.* I
 NNER MACROS USED - #USING, #TEST, SAVE, GETMAIN                     39400000.*
                                                                     39500000
      GBLA  &#TESERR                                                 39600000
      GBLB  &#  ENTRNT,&#ENTPLI,&#ENTNUN                           DBC 39800000
        GBLC  &#TESRET(20),&#ENTSIZ,&#ENTSP,&#BS(14)                   39900000
        LCLA  &A1,&A2,&C1,&C2,&C3,&C4,&B(13),&RMTREGA                  40000000
        LCLB  &REDUN(13),&OLD  BASE,&REMOTE(5),&ALIGND,&LOCAL,&LENGTH    4010000
0         LCLC  &LID,&@,&#,&N1,&N2,&W2,&W3,&R,&RMTREGC,&SAVLEN,&RMTNAME  4020000
0         LCLC  &TB,&ESDT,&C,&GBNDRY                                 DBC 4030000
0&#       SETC  '&SYSNDX'                                                  40500
000&#ENTRNT SETB  (0)                                                      40600
000&#ENTPLI SETB  (0)                                                      40700
000&#ENTNUN SETB  (0)                                                        408
00000&C1      SETA  11                                                       409
00000.*                                                                  DBC 410
00000         AIF   ('&SAVTYPE' NE 'NONE').TYPNNON                       D  BC 4
1200000&#ENTNUN SETB  (1)                                                  DBC 4
1300000         AGO   .PFXTST                                              DBC 4
1400000.TYPNNON ANOP                                                       DBC 4
1500000.*                                                                    DBC
 41600000         AIF   ('&SAVTYPE(1)' NE 'RENT' AND '&SAVTYPE(1)' NE 'PAGE').TY
*41700000               PNRNT                                                DBC
 41900000&GBNDRY  SETC    'DBLWD'                                              D
BC 42000000         AIF   ('&SAVTYPE(1)' NE 'PAGE').PAGEZ1                     D
BC 42100000&GBNDRY  SETC  'PAGE'                                               D
BC 42200000.PAGEZ1  ANOP
 DBC 42300000&#ENTRNT SETB  (1)
     42400000&#ENTSIZ SETC  '72'
     42600000&#ENTSP  SETC  ''
       42700000         #TEST DCODE=&SAVTYPE(2)
       42800000&A1      SETA  &#TESRET(1)
       42900000         AIF   (&A1 EQ 0).PFXTST
         43000000         AIF   ('&#TESRET(2)' EQ '').DFLTLEN
         43100000&#ENTSIZ SETC  '&#TESRET(2)'
         43300000.DFLTLEN AIF   (&A1 EQ 1).PFXTST
           43400000&#ENTSP  SETC  '&#TESRET(3)'
           43500000         AGO   .PFXTST
           43600000.TYPNRNT ANOP
           43700000            _ .*
                         43800000         AIF   ('&SAVTYPE(1)' NE 'REMOTE').TYPN
RMT                      44000000&REMOTE(1) SETB (1)
                         44100000           AIF   ('&SAVTYPE(2)' NE '').GOTRMT2
                           44200000         MNOTE 12,'ERROR - SAVTYPE(2) (REMOTE
 AREA''S NAME) OMITTED.'   44300000.GOTRMT2 AIF   ('&SAVTYPE(2)'(1,1) EQ '(').TY
PLCL2                      44400000&REMOTE(2) SET  B (1)
                             44500000&RMTNAME SETC  '&SAVTYPE(2)'
                             44700000         AIF   ('&SAVTYPE(2)'(K'&SAVTYPE(2)
,1) NE '%').PFXTST           44800000&REMOTE(5) SETB (1)
                               44900000&RMTNAME SETC  '&SAVTYPE(2)'(1,K'&SAVTYPE
(2)-1)                         45000000         AGO   .PFXTST
                               45100000.TYPLCL2 #TEST DCODE=&SAVTYPE(2)
                                 45200000&RMTREGC SETC  '&#TESRET(2)'
                                 45400000         #TEST REGS=&RMTREGC
                                 45500000         AIF   (&#TESERR NE 0).PFXTST
                                   45600000&RMTREGA SETA  &#TESRET(1)
                                   45700000         AIF   (&RMTREGA NE 13).PFXTS
T                                  45800000&REMOTE(3) SETB (1)
                                     45900000         AGO   .PFXTST
                                     46100000.TYPNRMT ANOP
                                     46200000.*
                                     4630000  0         AIF   ('&SAVTYPE(1)' NE
'PLI').TYPNPLI                         46400000&#ENTPLI SETB  (1)
                                       46500000&C1      SETA  10
                                       46600000         AGO     .PFXTST
                                         46700000.TYPNPLI ANOP
                                         46900000.*
                                         47000000         AIF   ('&SAVTYPE  (1)'
 EQ '' OR '&SAVTYPE(1)' EQ 'LOCAL').TYPLCL 47100000         MNOTE 4,'SAVTYPE(1)=
&SAVTYPE(1) IS INVALID.'                   47200000         MNOTE 4,'SAVTYPE(1)=
LOCAL ASSUMED.'                            47300000.TYPLCL  ANOP
                                             47400000&LOCAL   SETB  (1)
                                             47600000&C1      SETA  12
                                             47700000&LID     SETC  'E&#.SVA'
                                               47800000         AIF   ('&SAVTYPE
(2)' EQ '').GOTSLID                            47900000&LID     SETC  '&SAVTYPE(
2)'                                            48000000.GOTSLID ANOP
                                       +         48100000&SAVLEN  SETC  '72'
                                                   48300000         AIF   ('&SAV
TYPE(3)' EQ '').PFXTST                             48400000&SAVLEN  SETC  '&SAVT
YPE(3)'                                            48500000.*
                                                   4  8600000.PFXTST  ANOP
                                                     48700000&@       SETC  '&PF
IX'                                                  48800000         AIF   (K'&
PFIX NE 0).GOTPFIX                                   49000000           #TEST PF
IX=                                                    49100000&@       SETC  '&
#TESRET(1)'                                            49200000         AGO   .D
ONPFIX                                                 49300000.GOTPFIX #REGS &P
FI  X,GEN=NO                                             49400000.DONPFIX ANOP
                                                         49500000.*
                                                     DBC 49700000&A1      SETA
0                                                          49800000         AIF
  ('&BASES' NE '*').BSCLR                                  49900000.BSOLD   AIF
  (&A1 EQ 13).BASEND                                       50000000&A1      SETA
  &A1+1                                                      50100000         AI
F   ('&#BS(&A1)' EQ '').BSOLD                                50200000         #T
EST REGS=&#BS(&A1)                                           50400000&B(&A1)  SE
TA  16                                                         50500000
AIF   (&#TESERR NE 0).BSOLD                                    50600000&B(&A1)
SETA  &#TESRET(1)                                              50700000
AIF   (&B(&A1) NE 13).BSOLD                                      50800000
  AIF   (&A1 NE 13 OR '&#BS(14)' NE '&RMTNAME' OR &#ENTRNT OR &#*50900000
        ENTPLI).BSERROR                                          51100000&REMOTE
(4) SETB (1)                                                     51200000
    AGO   .BSOLD                                                   51300000.BSER
ROR ANOP                                                           51400000
    MNOTE 4,'THE OLD BASE REGISTER &B(&A1) CANNOT ALSO FUNCTION'   51500000
    MNOTE 4,  'AS A SAVE AREA POINTER IN THIS CONTEXT.'              51600000
      MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*51800000
            '                                                        51900000
      AGO   .BSOLD                                                     52000000.
BSCLR   AIF   (&A1 EQ 14).BSCLRD                                       52100000&
A1      SETA  &A1+1                                                    52200000&
#BS(&A1) SETC ''                                                         5230000
0         AGO   .BSCLR                                                   5250000
0.BSCLRD  AIF   (K'&BASES EQ 0).BASEND                                   5260000
0         AIF   ('&BASES' NE '&BASES(1)').TSTNBSE        +                 52700
000         #TEST NUM=&BASES                                                 528
00000         AIF   (&#TESERR EQ 0).BSEOKX                                   529
00000         MNOTE 4,'"BASES=&BASES" IS INVALID.'                           530
00000         MNOTE 4,'"BASES=1" ASSUMED.'                                     5
3200000&C3      SETA  1                                                        5
3300000         AGO   .BSESET                                                  5
3400000.BSEOKX  ANOP                                                           5
35000  00&C3      SETA  &BASES
 53600000         AIF   (&C3 LE &C1).BSESET
 53700000         MNOTE 4,'"BASES=&BASES" IS OUTSIDE THE RANGE OF 0...&C1..'
 53800000         MN  OTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTL
Y.*54000000               '
   54100000.BSESET  ANOP
   54200000&C1      SETA  &C1+1
     54300000&C3      SETA  &C1-&C3
     54400000&C4      SETA  13
     54500000.BOK     AIF   (&C1 LE &C3).BASEND
       54700000&#BS(&C4) SETC '&@&C1'
       54800000&B(&C4)  SETA  &C1
       54900000&C1      SETA  &C1-1
         55000000&C4      SETA  &C4-1
         55100000         AGO   .BOK
         55200000.TSTNBSE ANOP
           55400000&C3      SETA  N'&BASES
           55500000         AIF   (&C3 LE &C1).NBSOK
           55600000         MNOTE 4,'"BASES=&BASES" SPECIFIES TOO MAY REGISTERS.
'          5570  0000         MNOTE 4,'ONLY THE FIRST &C1 REGISTERS WILL BE USED
.'           55800000&C3      SETA  &C1
             55900000.NBSOK   ANOP
             56100000&C1        SETA  &C1+1
               56200000&C4      SETA  13
               56300000&C2      SETA  0
               56400000.GETBSE  AIF   (&C2 GE   &C3).BASEND
                 56500000&C2      SETA  &C2+1
                 56600000         AIF   ('&BASES(&C2)' EQ '').IGNR
                 56800000         #TEST REGS=&BASES(&C2)
                   56900000&B(&C4)  SETA  16
                   57000000         AIF   (&#TESERR EQ 16).REGUNK
                   57100000         AIF   (&#TESRET(1) GE 2 AND &#TESRET(1)+  LE
 &C1).BSEOK2         57200000         MNOTE 4,'"BASES(&C2)=&BASES(&C2)" I  S OUT
SIDE THE RANGE OF 2...*57300000               &C1..'
                       57500000         MNOTE 4,'THE CODE GENERATED BELOW WILL N
OT FUNCTION CORRECTLY.*57600000               '
                         57700000         AGO   .BSEOK2
                         57800000.IGNR    AIF   (&C3 GE N'&BASES).GETBSE
                         57900000&C3      SETA  &C3+1
                           58000000         AGO   .GETBSE
                           58200000.BSEOK2  AIF   (NOT &REDUN(&#TESRET(1))).BSEO
K3                         58300000         MNOTE 4,'"BASES(&C2)=&BASES(&C2) IS
REDUNDANT.'                58400000           MNOTE 4,'THE CODE GENERATED BELOW
WILL NOT FUNCTION CORRECTLY.*58500000               '
                             58600000.BSEOK3  ANOP
                             58700000&REDUN(&#TESRET(  1)) SETB (1)
                               58900000&B(&C4)  SETA &#TESRET(1)
                               59000000.REGUNK  ANOP
                               59100000&C1      SETA  12
                                 59200000&#BS(&C4) SETC '&BASES(&C2)'
                                 59300000&C4      SETA  &C4-1
                                 59400000         AGO   .GETBSE
                                   59600000.BASEND  ANOP
                                   59700000.*
                                   59800000&R       SETC  '&@.1'
                                     59900000&C3      SETA  0
                                     60000000.WRLP    AIF   (&C3 GE 13).GOTWRG
                                     60100000&C3      SETA  &C3+1
                                       60300000         AIF   ('&#BS(&C3)' EQ ''
).WRLP                                 60400000         AIF   (&B(&C3) EQ 13).GO
TWRG                                   60500000&R       SETC  '&#BS(&C3)'
                                       60600000.  GOTWRG  ANOP
                                         60700000.*
                                         60800000&ESDT    SETC  '&ESDTYPE(1)'
                                         61000000         AIF     (&#ENTPLI).PLI
GEN                                        61100000.*
                                           61200000         AIF   ('&ESDT' NE 'D
EFAULT').GOTESD                            61300000&ESDT    SETC  'CSECT'
                                             61400000.GOTESD  ANOP
                                             61500000&N2      SETC  '&N'
                                             61600000         AIF   ('&ESDT' EQ
'NONE' OR '&E+ SDT' EQ '' OR '&ESDT' EQ 'ENTRY*61800000               ').NCSCETC
                                                 61900000         AIF   ('&ESDT'
 NE 'CSECT').ESDNCSC                             62000000&N       CSECT ,
            START CONTROL SECTION                62100000         AGO   .ESDDONE
                                                   62200000.ESDNCSC AIF   ('&ESD
T' NE 'START').ESDNSTA                             62300000&N       START ,
              START CONTOL SECTION                 62500000         AGO   .ESDDO
NE                                                   62600000.ESDNSTA ANOP
                                                     62700000&W2      SETC  '&ES
DT'                                                  62800000&N       &W2   0H'0
'               START                                629  00000.ESDDONE ANOP
                                                       63000000&N2      SETC  ''
                                                       63200000.*
                                                       63300000.NCSCETC   AIF
('&ESDT' NE 'ENTRY').NENTRY                              63400000         ENTRY
&N                  MAKE NAME EXTERNALLY AVAILABLE       63500000.NENTRY  ANOP
                                                         63600000.*
                                                           63700000         AIF
  (K'&NME EQ 0 AND '&ESDT' NE 'CSECT' AND '&ESDT' NE 'STAR*63900000
  T').NMODID                                               64000000&N2      B
  E&#.ZID-&N.(,&@.15)   SKIP AROUND THE MODULE ID            64100000&N2      SE
TC  'E&#.ZID'                                                64200000         DC
    AL1(&N2-E&#.MID)    LENGTH OF TEXT                       64300000E&#.MID  DC
    C'&N '              ENTRY NAME                             64400000&W2
SETC  '&SYSDATE       '(1,8).' '                               64600000
DC    C'&W2'              ASSEMBLY DATE                        64700000&W2
SETC  '&SYSTIME    '(1,5)                                        64800000
  AIF   (K'&NME EQ 0).NMEZ1                                      64900000&W2
  SETC  '&W2 - '                                                 65000000.NMEZ1
  DC    C'&W2'              ASSEMBLY TIME                        6  5100000
    AIF   (K'&NME EQ 0).NMEZ2                                      65300000
    AIF   ('&NME'(1,1) EQ '''').QNME                               65400000
    DC    C'&NME'                                                  65500000
      AGO   .NMEZ2                                                   65600000.QN
ME    DC    C&NME                                                    65700000.NM
EZ2   ANOP                                                           65800000.NM
ODID  ANOP                                                             66000000.
*                                                                      66100000
        AIF   (&REMOTE(3)).RNTRNT1                                     66200000&
W2      SETC  '&@.14,&@.12,12(&+ @.13)'                                  6630000
0&N2      STM   &W2                   SAVE CALLER'S REGISTERS              66400
000&N2      SETC  ''                                                       66500
000.*                                                                      66700
000         AIF   (&#ENTRNT OR &#ENTNUN).RNT  RNT1                       DBC 668
00000         LR    &R,&@.13            POINT TO HIGHER SA                   669
00000         AIF   (&REMOTE(1)).LRMTSV1                                     670
00000&C       SETC  '&@.13,&LID-&N.(,&@.15)'                               DBC 6
7100000         LA    &C                  POINT TO LOWER SA                    6
7200000         AGO   .LRMTSV2                                                 6
7400000.LRMTSV1 AIF   (&REMOTE(2)).LRMTSV3
 67500000         #TEST REGS=&R
 67600000         AIF   (&RMTREGA NE &#TESRET(1)).LRMTSV4
 67700000&A1      SETA  20+&RMTREGA*4-&RMTREGA/13*44
 67800000           L     &@.13,&A1.(,&@.13)  POINT TO LOWER SA
   67900000         AGO   .LRMTSV2
   68100000.LRMTSV4 LR    &@.13,&RMTREGC      POINT TO LOWER SA
   68200000         AGO     .LRMTSV2
     68300000.LRMTSV3 AIF   (&REMOTE(5)).LRMTSV5
     68400000         PUSH  USING               SAVE USING ENVIRONMENT
     68500000         USING &N,&@.15              DECLARE TEMP BASE
       68600000         LA    &@.13,&RMTNAME      POINT TO LOWER SA
       68800000         POP   USING               RESTORE USING ENVIRONMENT
       68900000         AGO   .LRMTSV2
     DBC 69000000.LRMTSV5 ANOP
     DBC 69100000         LR    &@.13,&@.15         POINT TO LOWER SA
     DBC 69200000&C       SETC  '&@.13,E&#.SAP-&N.(,&@.15)'
       DBC 69300000         AH    &C
       DBC 69400000.LRMTSV2 ST    &@.13,8(,&R)        FORWARD CHAIN THE SAVE ARE
AS         69600000         ST    &R,4(,&@.13)        BACK CHAIN THE SAVE AREAS
             69700000         AIF   ('&R' NE '&@.1').RNTRNT1
             69800000         L     &@.1,24(,&@.1)      RESTORE REGISTER 1
             69900000.RNTRNT1 AIF   ('&#BS(13)' EQ '').SKIPUSE
             700000  00&C1      SETA  13
               70100000         AIF   ('&BASES' NE '*').BSEADR
               70300000         AIF   (&REMOTE(4)).EQUATE
               70400000&OLDBASE SE  TB  (1)
                 70500000&N2      LR    &#BS(13),&@.15      LOAD 1ST BASE REGIST
ER           DBC 70600000&N2      SETC  ''
             DBC 70700000&C       SETC  '&#BS(13)+ ,E&#.BSE-&N.(,&@.15)'
               DBC 70800000         SH    &C
                 DBC 71000000         AGO   .EQUATE
                     71100000.BSEADR  ANOP
                     71200000&C2      SETA  15
                       71300000&#BS(14) SETC  '&N'
                       71400000         AIF   (&#ENTRNT OR &REMOTE(1) OR &#ENTNU
N).FLDTST          DBC 71500000&C2      SETA  13
                         71700000&#BS(14) SETC  '&LID'
                         71800000.FLDTST  AIF   (&B(13) EQ &C2).EQUATE
                         71900000&N2      LR    &#BS(13),&@&C2      LOAD FIRST B
ASE REGISTER               72000000&N2      SETC  ''
                           72100000.EQUATE  ANOP
                           72200000&W2      SETC  '&#BS(&C1)'
                             72400000         AIF   (&C1 EQ 2).ENDLA
                             72500000&C1      SETA  &C1-1
                             72600000         AIF   ('&#BS(&C1)' EQ '').ENDLA
                             72700000&N2        LA    &#BS(&C1),X'FFF'(,&W2) LOA
D NEXT BASE                    72800000&N2      SETC  ''
                               72900000         AGO   .EQUATE
                               73100000.ENDLA   #USING
                                 73200000.SKIPUSE AIF   (NOT &#ENTRNT).DATACHK
                                 73300000&W2      SETC  ''
                                 73400000&TB      SETC  ''
                                   73500000         AIF   ('&#BS(13)' NE '').GET
M2                                 73600000&N2      LR    &@.14,&@.15         LO
AD TEMPORARY BASE                  73800000&N2      SETC  ''
                                     73900000         PUSH  USING
SAVE BASES                           74000000         DROP  ,
CLEAR BASES                          74100000         USING &N,&@.14
DECLARE TEMPORARY BASE                 74200000&TB      SETC  '-&N.(,&@.14)'
                                       74300000.GETM2   ANOP
                                       74500000&N2      L     &@.0,E&#.LEN
  LOAD LENGTH                      DB  C 74600000&N2      SETC  ''
                                         74700000&W3      SETC  'RC'
                                     DBC 74800000         AIF   ('&SAVTYPE(3)' N
E '').GOTGTYP                        DBC 74900000&W3        SETC  'RU'
                                       DBC 75000000.GOTGTYP ANOP
                                 05/97 X33 75200000.*
                                 05/97 X33 75300000         MNOTE '+          GE
TMAIN &W3,              GETMAIN TYPE' 97 X33 75400000         MNO  TE '
      LV=(0),             LENGTH TO GET' 7 X33 75500000         MNOTE '
      SP=&#ENTSP,         FROM SUBPOOL' 97 X33 75600000         MNOTE '
      BNDRY=&GBNDRY,      ALIGNMENT' 05/97 X33 75700000         MNOTE '
        LOC=BELOW           24-BIT MEMORY' 7 X33 75900000         GETMAIN &W3,
                                       05/97 X33*76000000               LV=(0),
                                       05/97 X33*76100000               SP=&#ENT
SP,                                      05/97 X33*76200000               BNDRY=
&GBNDRY,                                 05/97 X33*76300000               LOC=BE
LOW                                      05/97 X33 76400000         AIF   ('&#BS
(13)' NE '').GETM5A                              DBC 76600000         POP   USIN
G               RESTURE BASES                        76700000.GETM5A  AIF   ('&S
AVTYPE(3)' EQ '').GETM7                              76800000         LTR   &@.1
5,&@.15         GETMAIN OK?                            76900000         AIF   ('
&SAVTYPE(3)' EQ 'RETURN').GETM8                        77000000         AIF   ('
&SAVTYPE(3)'(1,1) EQ '(').GETM6                        77100000         BNZ   &S
AVTYPE(3)         NO, TAKE ERROR EXIT                  77200  000         AGO
.GETM7                                                   77400000.GETM6   #TEST
DCODE=&SAVTYPE(3)                                        77500000         BCR
7,&#TESRET(2)       NO, TAKE ERROR EXIT                  77600000         A  GO
  .GETM7                                                   77700000.GETM8   ANOP
                                                           77800000&W2      SETC
  'E&#.GO'                                                 77900000         BZ
  &W2&TB                YES, PROCEED                         78100000         L
    &@.14,12(,&@.13)    NO, RESTORE REGISTER                 78200000         LM
    &@.0,&@.12,20(&@.13) RESTORE REGISTERS                   78300000         MV
I   12(&@.13),X'FF'     S  ET RETURNED SIGNEL                  78400000
BR    &@.14               RETURN TO CALLER                     78500000.GETM7
ANOP                                                           78600000&W2
LR    &@.0,&@.1           POINT TO AREA   TO CLEAR               78800000
  L     &@.1,E&#.LEN&TB     GET LENGTH TO CLEAR                  78900000
  LR    &@.14,&@.0          SAVE AREA POINTER                    79000000
  SLR   &@.15,&@.15         CLEAR SRC LEN AND PAD CHAR         DBC 79100000
    MVCL  &@.0,&@.14          CLEAR THE AREA                       79200000
    ST    &@.14,8(,&@.13)     FORWARD CHAIN THE SAVE AREAS         79300000
    ST    &@.13,4(,&@.14)     BACK CHAIN THE SAVE AREAS            795  00000
      LM    &@.13,&@.1,8(&@.13) RESTORE REGS AND POINT TO LOWER SA   79600000.DA
TACHK AIF   (NOT &OLDBASE AND NOT &#ENTRNT AND NOT &REMOTE(5) AND NO*79700000
            T &LOCAL).ENDCHK                                         79800000
     +  AIF   ('&#BS(13)' EQ '').NOUSING                               79900000&
N2        B     E&#.END             SKIP AROUND DATA AREA                8000000
0&N2      SETC  ''                                                       8020000
0         AGO   .DFNDATA                                                 8030000
0.NOUSING ANOP                                                             80400
000&N2      B     E&#.END-&N.(,&@.15) SKIP AROUND DATA AREA                80500
000&N2      SETC  ''                                                       80600
000.DFNDATA ANOP                                                         DBC 807
00000.*                                                                  DBC 809
00000         AIF   (NOT &OLDBASE).NOLDBSE                               DBC 810
00000E&#.BSE  DC    Y(&N-&#BS(14))       OLD BAS  E ADDRESS                DBC 8
1100000.NOLDBSE ANOP                                                       DBC 8
1200000.*                                                                  DBC 8
1300000         AIF   (NOT &#ENTRNT).NLENGTH                                 DBC
 81400000E&#.LEN  DC    A(&#ENTSIZ)         SAVE AREA LENGTH
 81600000&ALIGND  SETB  (1)
 81700000.NLENGTH AIF   (&#ENTRNT OR &#ENTNUN).NSVAREA                       D
BC 81800000         AIF   (&REMOTE(1)).RMTSVPT
   81900000         AIF   (&ALIGND).ALIGND2
   82000000         DS    0F                  ALIGNMENT
   82100000&A  LIGND  SETB  (1)
     82300000.ALIGND2 ANOP
     82400000&LID     DC    (&SAVLEN)X'00'      LOCAL SAVE AREA
     82500000         AGO     .NSVAREA
       82600000.RMTSVPT ANOP
   DBC 82700000.*
   DBC 82800000         AIF   (NOT &REMOTE(  5)).NSVAREA
     DBC 83000000E&#.SAP  DC    Y(&RMTNAME-&N)       PTR TO REMOTE SA
     DBC 83100000.NSVAREA ANOP
     DBC 83200000.*
       DBC 83300000         AGO   .END
       DBC 83400000.*
           83500000.PLIGEN  AIF   ('&ESDT' EQ 'DEFAULT').PESDSET
             83700000         AIF   (K'&N GT 0 OR '&ESDT' NE 'ENTRY').PESDOK1
             83800000         MNOTE 4,'"ESDTYPE=&ESDTYPE" IS INVALID WHEN THE NA
ME FIELD IS' 83900000         MNOTE 4,'OMITTED FROM THE MACRO CALL.'
               84000000         MNOTE 4,'"ESDTYPE=NONE" WILL BE USED INSTEAD.'
               84100000&ESDT    SETC  'NONE'
               84200000.PESDOK1 ANOP
               84400000            _          AIF   ('&ESDT' EQ 'ENTRY' OR '&ESD
T' EQ 'NONE' OR '&ESDT' EQ '*84500000               ').PESDOK
                             84600000         MNOTE 4,'"ESDTYPE=&ESDTYPE" IS INV
ALID WHEN "SAVTYPE=PLI".'    84700000.  PESDSET ANOP
                               84800000&ESDT    SETC  'ENTRY'
                               84900000         AIF   (K'&N GT 0).PESDOK2
                               85000000&ESDT    SETC    'NONE'
                                 85200000.PESDOK2 AIF   ('&ESDTYPE' EQ 'DEFAULT'
).PESDOK                         85300000         MNOTE 4,'"ESDTYPE=&ESDT" WILL
BE USED INSTEAD.'                85400000.PESDOK  ANOP
                                   85500000         AIF   ('&ESDT' NE 'ENTRY').P
NOTENT                             85600000         ENTRY &N                  MA
KE NAME EXTERNALLY AVAILABLE       85700000.PNOTENT ANOP
                                     85900000.*
                                     86000000&N2      SETC  '&N'
                                     86100000&A1      SETA  K'&N
                                       86200000         AIF   (K'&NME EQ 0).GOTN
2                                      86300000&N2      SETC  '&NME'
                                       86400000&A1      SETA  K'&NME
                                         86600000.GOTN2   ANOP
                                         86700000&N2      SETC  ' '(1,1-(&A1-&A1
/2*2)).'&N2'                             86800000         DS    0H
    ALIGNMENT                            8690000  0         DC    C'&N2'
      ENTRY NAME                           87000000         DC    AL1(&A1)
      LENGTH OF NAME                       87100000.*
                                           87300000&N1      SET  C  '&N'
                                             87400000         AIF   (K'&N GT 0).
PGOTN1                                       87500000&N1      SETC  'E&#.ENT'
                                             87600000.PGOTN1  ANOP
                                               87700000         USING &N1,&@.15
          DCL LOCAL BASE                       87800000&N1      STM   &@.14,&@.1
2,12(&@.13) SAVE CALLER'S REGISTERS            88000000.*
                                                 88100000         #TEST DCODE=&S
AVTYPE(2)                                        88200000&A1      SETA  &#TESRET
(1)                                              88300000&A2      SETA  120
                                                   88400000         AIF   (&A1 E
Q 0).DSALLA                                        88500000         AIF   ('&#TE
SRET(2)' NE '&SAVTYPE(2)').DSALREG                 88700000         #TEST NUM=&#
TESRET(2)                                  +         88800000         AIF   (&#T
ESERR NE 0).DSALL                                      88900000&A2      SETA  &#
TESRET(2)                                              89000000         AIF   (&
A2 GE 4096-7).DSALL                                    89100000         AIF   (&
A2 GE 120-7).DSALLA                                    8  9200000         MNOTE
4,'"SAVTYPE(2)=&SAVTYPE(2)" IS TOO SHORT A LENGTH.'      89400000         MNOTE
4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*89500000
'                                                        89600000.DSALL  A  ANOP
                                                           89700000         LA
  &@.0,(&A2+7)/8*8    GET DESIRED DSA LENGTH               89800000         AGO
  .GOTDSAL                                                 89900000.DSALREG #TES
T REGS  =&#TESRET(2)                                         90100000         AI
F   (&#TESERR NE 0).DSALLR                                   90200000         AI
F   (&#TESRET(1) EQ 0).GOTLLR                                90300000.DSALLR  LR
    &@.0,&#TESRET(2)      GET DESIRED DSA LENGTH               90400000.GOTLLR
LA    &@.14,7             ROUND UP -                           90500000
AR    &@.0,&@.14           TO -                                90600000
OR    &@.0,&@.14            DOUBLE W  ORD -                      90800000
  XR    &@.0,&@.14             LENGTH                            90900000
  AGO   .GOTDSAL                                                 91000000.DSALL
  ANOP                                                             91100000&LENG
TH  SETB  (1)                                                      91200000
    L     &@.0,E&#.LEN        GET DESIRED DSA LENGTH               91300000.GOTD
SAL ANOP                                                             91500000.*
                                                                     91600000
      L     &@.1,76(,&@.13)     GET NXT AVAILABLE BLOCK POINTER      91700000
      ALR   &@.0,&@.1           --> PAST DESIRED AREA                91800000
        CL    &@.0,12(,&@.12)     WOULD THE ISA OVERFLOW?              91900000
        BNH   E&#.GOT             NO, PROCEED                          92000000
        L     &@.15,116(,&@.12)   YES, --> SPECIAL HANDLER             92200000
        DROP  &@  .15               RELEASE CLOBBERED BASE               9230000
0         BALR  &@.14,&@.15         GO OBTAIN DESIRED DSA FROM ELSEWHERE 9240000
0E&#.GOT  LR    &@.14,&@.1          SAVE PTR TO NEW DSA                  9250000
0         LR    &@.15,&@.0            SAVE HI-BYTE OF NAB POINTER REG      92600
000         SRL   &@.15,24            ISSOLATE IT                          92700
000         SLL   &@.15,24            RESTORE ITS POSITION. SET MVCL       92800
000*                                  SOURCE L  ENGTH TO ZERO                930
00000         SR    &@.0,&@.1           GET LENGTH OF NEW DSA                931
00000         LR    &@.1,&@.0           COPY FOR MVCL SINK LENGTH            932
00000         LR    &@.0,&@.14          GET MVCL SINK POINTER+                 9
3300000         MVCL  &@.0,&@.14          CLEAR THE NEW DSA
 93400000         OR    &@.0,&@.15          RESTORE HI-BYTE TO NAB POINTER REG
 93500000         LR    &@.1,&@.0           COPY NEXT AVAILABLE BLOCK POINTER
 93700000         L     &@.15,72(,&@.13)    GET LIBRARY WORKSPACE POINTER
   93800000         STM   &@.15,&@.1,72(&@.14) STORE INTO OUR NEW DSA
   93900000         ST    &@.5,88(,&@.14)     STORE PASSED PARAMETERS POINTER
   94000000         ST    &@.13,4(,&@.14)     BACK CHAIN THE DSA
   941000  00         L     &@.1,24(,&@.13)     RESTORE PLIST POINTER
     94200000         LR    &@.13,&@.14         --> NEW DSA (R14 PURIFIED BY MVC
L)   94400000         MVI   0(&@.13),X'80'      SET FOR -
     94500000         MV  I   1(&@.13),X'00'       PLI -
       94600000         MVI   86(&@.13),X'91'       ERROR -
       94700000         MVI   87(&@.13),X'C0'        HANDLING
       94800000.*
         94900000&N2      SETC  ''
         95100000         AIF   ('&#BS(13)' EQ '').PSKPUSE
         95200000&C1      SETA  13
           95300000         AIF   ('&BASES' NE '*').PBSEADR
           95400000&OLDBASE SETB  (1)
           95500000         BALR  &#BS(13),0          LOAD TEMP LOCAL   BASE
             95600000         L     &#BS(13),E&#.BSE-*(,&#BS(13)) LOAD 1ST PROGR
AM BASE      95800000         AGO   .PEQUATE
             95900000.PBSEADR ANOP
               96000000&N2      SETC  'E&#.BSE'
               96100000&#BS(14) SETC  '&N2'
               96200000         BALR  &#BS(13),0          LOAD 1ST PROGRAM BASE
               9630  0000.PEQUATE ANOP
                 96500000&W2      SETC  '&#BS(&C1)'
                 96600000&C1      SETA  &C1-1
                 96700000           AIF   (&C1 EQ 1 OR '&#BS(&C1)' EQ '').PENDLA
                   96800000&N2      LA    &#BS(&C1),X'FFF'(,&W2) LOAD NEXT PROGR
AM BASE            96900000&N2      SETC  ''
                   97000000         AGO   .PEQUAT  E
                     97200000.PENDLA  #USING ,
                     97300000.PSKPUSE ANOP
                     97400000.*
                       97500000         AIF   (NOT &LENGTH AND NOT &OLDBASE).END
CHK                    97600000         AIF   ('&#BS(13)' NE '').PGOTBAS
                       97700000&N2      BALR  &@.15,0             LOAD TEMP BAS+
 E                       97900000&N2      SETC  ''
                           98000000         B     E&#.END-*(,&@.15)   SKIP DATA
AREA                       98100000         AGO   .PDFNDAT
                           98200000.PGOTBAS ANOP
                             98300000&N2      B     E&#.END             SKIP DAT
A AREA                       98400000&N2      SETC  ''
                             98600000.PDFNDAT AIF   (NOT &LENGTH).PNOLEN
                               98700000E&#.LEN  DC    A((&SAVTYPE(2)+7)/8*8) DES
IRED DSA LENGTH                98800000.PNOLEN  AIF   (NOT &OLDBASE).PNOOBAS
                               98900000E&#.BSE  DC    A(&#BS(14))         OLD BA
SE ADDRESS                     99000000.PN  OOBAS ANOP
                                 99100000.*
                                 99300000.END     ANOP
                                 99400000E&#.END  DS    0  H
                                   99500000.ENDCHK  AIF   ('&N2' EQ '').MEND
                                   99600000&N2      DS    0H
                                   99700000.MEND    MEND  #ENTER
                           04/01 S21 99800000./ ADD NAME=#EXIT    0100-03155-031
55-1415-00384-00384-00000-DBCOLE5                     MACRO
                                     #EXIT   &NME     #EXIT &R,&PFIX=,&RC=,&MODE
=LEAVE                             DBC 00500000.*
                                       00700000.*
                                       01000000.*
                                         01200000.*
                                     DBC 01500000.* LAST CHANGE DATE - NOVEMBER
12, 1987                             DBC 01800000.* - CONVERTED ALL R-FORM FREEM
AINS TO RU-FORM.                       DBC 02000000.*
                                       DBC 02300000.* LAST CHANGE DATE - APRIL 2
9, 1985                                DBC 02500000.*                  - ADDED S
UPPORT FOR THE "MODE=" OPERAND.        DBC 02800000.  *
                                         DBC 03100000.* LAST CHANGE DATE - OCTOB
ER 1, 1984                               DBC 03300000.*                  - DELET
ED CODE THAT SET A X'FF' "RETURN         DBC 03600000.*                      IND
ICATOR" IN THE HI-BYTE OF DSAR14.          DBC 03800000.*                    IT
WAS NOT APPROPRIATE FOR MVS/XA.            DBC 04100000.*
                                           DBC 04400000.* LAST CHANGE DATE - JUN
E   11, 1984                                 DBC 04600000.*                  - A
DDED SUPPORT FOR "SAVTYPE=NONE" ON THE       DBC 04900000.*                    #
ENTER MACRO.                                 DBC 05100000.*                  - F
OR REENTRANT EXIT+  LINKAGE, CHANGED           DBC 05400000.*
 THE FREEMAIN S  O THAT IT WOULD NO              DBC 05700000.*
   LONGER GENERATE AN INLINE PLIST.              DBC 05900000.*
                                                     06200000.* LAST CHANGE DATE
 - OCTOBER 18, 1983                                    06400000.*
   - MAILING ADDRESS CHANGE                            06700000.*
                                                       07000000.* LAST CHANGE DA
TE - APRIL 21, 1981                                      07200000.*
     - CHANGE THE MACRO NAME FROM $EXIT TO #EXIT         07500000.*
                                                         07700000.* LAST CHANGE
DATE - APRIL 15, 1981                                    080  00000.*
       - ADDED EXIT LINKAGE FOR A PLI ENVIRONMENT.         08300000.*
       - "#REGS GEN=NO" SUPPORT ADDED.                     08500000.*
                                                           08800000.* LAST   CHA
NGE DATE - OCTOBER 3, 1978                                   09000000.*
         - FOR REENTRANT SAVE AREAS, THE FREEMAIN HAS BEEN   09300000.*
           CHANGED SO THAT MORE THAN 4K CAN BE FREED.        09600000.*
                                                               09800000.* LAST C
HANGE DATE - FEBRUARY 2, 1977                                  10100000.*
           - MAILING ADDRESS CHANGE.                           10300000.*
                                                                 10600000.* LAST
 CHANGE DATE - FEBRUARY 10, 1976                                 10900000.*
                                                                 11100000.* THIS
 MACRO WAS WRITTEN BY DAVID B. COLE.  AN  Y QUESTIONS CONCERNING   11400000.* IT
 MAY BE ADDRESSED TO:                                              11600000.*
    RR#2 BOX 712                                                   11900000.*
    AFTON, VA. 22920                                                 12200000.*
                                                                     12400000.*
                                                                     12700000.*
                                                                     1  2900000.
*   THIS MACRO GENERATES EITHER OS STANDARD OR PLI STANDARD EXIT       13200000.
* LINKAGE. IT WAS WRITTEN TO PROVIDE A SIMPLE, FLEXIBLE, AND COMPLETE  13500000.
* METHOD FOR GENERATING SUCH LINKAGE. IN ADDITION, FOR ALL POSSIBLE    13700000.
* OPE  RAND COMBINATIONS, #EXIT WILL GENERATE THE ABSOLUTE MINIMUM       1400000
0.* AMOUNT OF CODE NECESSARY.                                            1420000
0.*                                                                      1450000
0.*   THE #EXIT MACR  O WILL GENERATE THE FOLLOWING:                       14800
000.* - CODE TO LOAD REGISTER 13 WITH A POINTER TO THE HIGHER OS SAVE AREA 15000
000.*   OR PLI DATA STORAGE AREA                                           15300
000.* - CODE TO RELEASE (VIA FREEMA+ IN) THE LOWER SAVE AREA IF THE          155
00000.*   PRECEEDING #ENTER MACRO   CALL GENERATED A REENTRANT EXPANSION       1
5800000.* - CODE TO RESTORE ANY PARTICULAR SET OF REGISTERS                    1
6100000.* - CODE TO LOAD REGISTER 15 WITH A RETURN CODE THAT IS EITHER AN      1
6300000.*   ABSOLUTE VALUE OR A VALUE PRELOADED   INTO ANY REGISTER
 16600000.* - CODE TO RETURN TO THE CALLING PROGRAM VIA REGISTER 14
 16800000.*
 17100000.*   THE NAME FIELD
   17400000.* USE THIS FIELD TO ASSIGN A STATEMENT LABEL TO THE FIRST MACHINE
   17600000.* INSTRUCTION OF THE EXPANSION. IF THE NAME FIELD IS OMITTED, THEN N
O  17900000.* STATEMENT LABEL IS ASSIGNED.
     18100000.*
     18400000.*   THE FIRST POSITIONAL OPERAND
     18700000.* THIS OPERAND MUST CONSIST OF A SUB-LIST OF ANY NUMBER OF ENTRIES
.    18900000  .* EACH ENTRY MAY BE EITHER A SINGLE REGISTER NAME OR A PARENTHES
IZED   19200000.* PAIR (SEPERATED BY A COMMA) OF REGISTER NAMES - E.G.
       19400000.* " (1,11,(7,9),5) ". EACH SINGLE REGISTER NAME SPECIFIES A PART
ICULAR 19700000.* REGISTER T  O BE RESTORED FROM THE HIGHER SAVE AREA. EACH
         20000000.* PARENTHESIZED PAIR OF REGISTER NAMES SPECIFIES A RANGE OF RE
GISTERS  20200000.* TO BE RESTORED. THUS, THE ABOVE EXAMPLE WOULD CAUSE REGISTER
S 1, 5,  20500000.* 7, 8, 9, AND 11 TO BE R  ESTORED.
           20700000.*   SOME NOTES AND WARNINGS:
           21000000.* - A REQUEST TO RESTORE REGISTER 13 IS MEANINGLESS AND IS I
GNORED.    21200000.* - IF REGISTER 14 IS TO BE LOADED WIT  H THE RETURN ADDRESS
 FOUND IN    21500000.*   THE HIGHER SAVE AREA, THEN YOU MUST SPECIFICALLY REQUE
ST THAT IT   21800000.*   (REGISTER 14) BE RESTORED; OTHERWISE, WHATEVER VALUE I
S FOUND IN   22000000.*   REGISTER 14 PRIOR TO THE MACRO CALL WILL BE USE  D FOR
 THE RETURN    22300000.*   ADDRESS.
               22500000.* - TO RESTORE ALL REGISTERS FROM 14 THROUGH 12, YOU MUS
T CODE         22800000.*   " ((14,12)) ". CODING " (14,12) " WILL CAUSE ONLY RE
GISTERS   14 AND 23100000.*   12 TO BE RESTORED.
                 23300000.* - THE NUMERIC VALUES OF ALL REGISTER NAMES USED IN T
HIS OPERAND MUST 23600000.*   BE DETERMINABLE AT MACRO PASS TIME. THUS, EACH REG
ISTER NAME USED  238000  00.*   MUST BE EITHER A SELF-DEFINING NUMERIC OR A NAME
 DEFINED VIA THE   24100000.*   #REGS MACRO.
                   24400000.* - IF ONLY A SINGLE REGISTER IS TO BE RESTORED, THE
N IT NEED NOT BE   24600000.*   ENCLOS  ED IN PARENTHESES.
                     24900000.* - IF THE FIRST POSITIONAL OPERAND IS OMITTED, TH
EN NO REGISTERS ARE  25100000.*   RESTORED.
                     25400000.*                      +
                       25700000.*   THE RC= OPERAND
                         25900000.* THIS OPERAND MUST CONSIST OF A SINGLE VALUE
EITHER WITHIN OR NOT     26200000.* WITHIN PARENTHESES. IF ENCLOSED WITHIN PAREN
THESES, THEN THE VALUE   26400000.* IS TREATED AS THE NAME OF A RE  GISTER CONTA
INING A RETURN CODE. IF    26700000.* NOT ENCLOSED WITHIN PARENTHESES, THEN THE
VALUE IS TREATED AS BEING  27000000.* THE RETURN CODE ITSELF.
                           27200000.*   IF THE RC= OPERAND SPECIFIES A REGISTER
N  AME, THEN:                27500000.* - THE VALUE OF THAT NAME NEED NOT BE DET
ERMINABLE AT MACRO PASS      27700000.*   TIME;
                             28000000.* - THE REGISTER NAME MAY IDENTIFY ANY REG
ISTER WHATSOEVER   REGUARDLESS 28300000.*   OF WHICH REGISTERS ARE TO BE RESTORE
D SINCE IN CASES OF POTENTIAL  28500000.*   CONFLICT, THE RETURN CODE IS COPIED
INTO REGISTER 15 PRIOR TO      28800000.*   REGISTER RESTORATION;
                                 29000000.* - IT IS ILLOGICAL FOR THE RC= OPERAN
D TO SPECIFY REGISTER 13.        29300000.* NOTE THAT IF THE RC= OPERAND IS SPEC
IFIED BUT THE FIRST POSITIONAL   29600000.* OPERAND INDICATES THAT REGISTER 15 I
S ALSO TO BE RESTORED, THEN      29800000.* RE  GISTER 15 IS NOT RESTORED. INSTE
AD, IT IS LOADED WITH THE RETURN   30100000.* CODE VALUE.
                                   30300000.*   IF THE RC= OPERAND IS OMITTED, T
HEN NO CODE IS GENERATED TO LOAD   30600000.* REGISTER 15 WIT  H A RETURN CODE.
                                     30900000.*
                                 DBC 31100000.*   THE MODE= OPERAND
                                 DBC 31400000.* THIS FOR MVS/XA. IT CONTROLS   W
HETHER OR NOT THE #EXIT            DBC 31600000.* MACRO IS TO GENERATE CODE TO R
ESTORE THE CALLER'S                DBC 31900000.* ADDRESSING MODE. THE DEFAULT I
S NOT TO DO SO.                    DBC 32200000.*
                                     DBC 32400000.* - MODE=LEAVE
                                     DBC 32700000.*   THIS IS THE DEFAULT. NO EX
PLICIT ATTEMPT IS MADE TO            DBC 32900000.*   RESTORE THE CALLER'S ADDRE
SSING MODE.                            DBC 33200000.*
                                       DBC 33500000.* - MODE=RESTORE
                                       DBC 33700000.*   THE #EXIT MACRO ATTEMPTS
 TO RESTORE THE CALLER'S               DB  C 34000000.*   ADDRESSING MODE BASED
ON THE HI-ORDER BIT OF THE               DBC 34200000.*   CALLER'S R14.
                                         DBC 34500000.*
                                             34800000.*     THE PFIX= OPERAND
                                               35000000.* THE #EXIT MACRO ATTEMP
TS TO USE REGISTER EQUATES IN ITS EXPANSION    35300000.* WHEN REFERING TO REGIS
TERS. THIS IS SO THAT THE USE OF THE REGISTERS 35500000.* WILL BE INDIC+ ATED IN
 THE CROSS REFERENCE LISTING. THE PFIX= OPERAND  35800000.* CAN BE US  ED TO CON
TROL THE SET OF EQUATES USED. FOR EXAMPLE, IF      36100000.* "PFIX=GPR" IS SPEC
IFIED, THEN "GPR1" WILL BE USED WHENEVER THE       36300000.* EXPANSION REFERS T
O REGISTER 1.                                      36600000.*   IF THE PFIX= OPE
RAND   IS OMITTED, THEN THE SET OF EQUATES DEFINED   36800000.* BY THE FIRST PRI
OR #REGS MACRO WILL BE USED. IF THERE IS NO PRIOR    37100000.* #REGS MACRO, THE
N NO EQUATES WILL BE USED.                           37400000.*
                                                       37600000.*   CONSIDERATIO
NS                                                     37900000.* THE #EXIT MACR
O WILL GENERATE AN EXPANSION THAT WILL ACCURATELY      38100000.* RESTORE ALL DE
SIRED REGISTERS AND SET THE RETURN   CODE REGUARDLESS OF 38400000.* WHETHER OR N
OT A FREEMAIN SVC IS ISSUED TO RELEASE THE LOWER SAVE    38700000.* AREA AND REG
UARDLESS OF THE RELATIONSHIP BETWEEN THE RC= OPERAND AND 38900000.* THE SET OF R
EGISTERS RESTORED.                                         39200000.*
                                                           39400000.*
                                                           39700000.*
                                                           40000  000.* INNER MA
CROS USED - #REGS #TEST AND FREEMAIN                         40200000.*
                                                             40500000         GB
LA  &#TESERR                                                 40700000         G
 BLB  &#ENTRNT,&#ENTPLI,&#ENTNUN                           DBC 41000000
GBLC  &#TESRET(20),&#ENTSIZ,&#ENTSP                            41200000
LCLA  &C1,&R1,&R2,&W1,&W2,&ERRCODE                             41500000
LCLB  &RCLA,&R  CST,&RSW(16)                                     41800000
  LCLC  &LNME,&@,&RG(16),&REGNME,&RG2SAVE,&RG4SAVE,&RG5SAVE      42000000
  LCLC  &C,&#                                                DBC 42300000&#
  SETC  '&SYSNDX'                                              DBC 42500000&LNME
    SETC  '&NME'                                                   42800000.*
                                                                   43100000&@
    SETC  '&PFIX'                                                    43300000
      AIF   (K'&PFIX NE 0).GOTPFIX                                   43600000
      #TEST PFIX=                                                    43800000&@
      SETC  '&#TESRET(1)'                                              44100000
        AGO   .DONPFIX                                                 44400000.
GOTPFIX #REGS &PFIX,GEN=NO                                             44600000.
DONPFIX ANOP                                                           449  0000
0.*                                                                      4510000
0&C1      SETA  0                                                    DBC 4540000
0.RLP     AIF   (&C1 GE N'&R).RFIN                                       4570000
0&C1     +  SETA  &C1+1                                                    45900
000           #TEST DCODE=&R(&C1)                                            462
00000         AIF   (&#TESERR NE 0).END                                      464
00000&W1      SETA  &#TESRET(1)                                              467
00000         AIF   (&  W1 EQ 0).RLP                                           4
7000000&REGNME  SETC  '&#TESRET(2)'                                            4
7200000         #TEST REGS=&REGNME                                             4
7500000&ERRCODE SETA  1
 47700000         AIF   (&#TESERR NE 0).REGERR
 48000000.REGOK1  ANOP
 48300000&R1      SETA  &#TESRET(1)
   48500000&R2      SETA  &R1+3-&R1/14*16
   48800000&RG(&R2) SETC  '&REGNME'
   49000000&RSW(&R1+1) SETB (1)
     49300000         AIF   (&W1 EQ 1).RLP
     49600000         AIF   (&W1 EQ 2).TWOND
     49800000         MNOTE 4,'"&R(&C1)" CONTAINS EXCESS INFORMATION.'
       50100000.TWOND   ANOP
       50300000&REGNME  SETC  '&#TESRET(3)'
       50600000         #TEST REGS=&REGNME
       50900000&E  RRCODE SETA  2
         51100000         AIF   (&#TESERR NE 0).REGERR
         51400000.REGOK2  ANOP
         51600000&W2      SETA    &#TESRET(1)
           51900000&RSW(&W2+1) SETB (1)
           52200000.ENTLP   AIF   (&R1 EQ &#TESRET(1)).ENTEND
           52400000&R1      SETA  &R1+1
             52700000&R2      SETA  &R2+1
             52900000         AIF   (&R1 LE 15).R1OK
             53200000&R1      SETA  0
               53500000.R1OK    AIF   (&R2 LE 16).R2OK
               53700000&R2      SETA  1
               54000000.R2OK    ANOP
                 54200000&RG(&R2) SETC  '&@&R1'
                 54500000         AGO   .ENTLP
                 54800000.ENTEND  ANOP
                   55000000&RG(&R2) SETC  '&REGNME'
                   55300000         AGO   .RLP
                   55500000.REGERR  AIF   (&#TESRET(1) GE 0 OR &#TESRET(1) LT 0)
.REGVALU           55800000            _          MNOTE 0,'THE ABOVE ERROR IS NO
T DUE TO A BUG IN THE MACRO.'    56100000         MNOTE 8,'THE VALUE OF "&REGNME
" IS NOT DETERMINABLE.'          56300000         MEXIT
                                 56600000.  REGVALU AIF   (&#TESRET(1) GE 0 AND
&#TESRET(1) LE 15).REGOK           56800000         MNOTE 8,'THE VALUE OF "&REGN
ME" IS OUTSIDE THE RANGE OF 0 ... *57100000               15'
                                   57400000         MEXIT
                                     57600000.REGOK   AIF   (&ERRCODE EQ 1).REGO
K1                                   57900000         AGO   .REGOK2
                                     58100000.RFIN    AIF   (NOT &#ENTPL  I).RGO
K                                      58400000         AIF   (NOT &RSW(1)).RG0O
K                                      58700000         MNOTE 4,'&RG(3) NEEDED B
Y THE EXIT LINKAGE - NOT RESTORED.'    58900000.RG0OK   AIF   (NOT &RSW(2)).RG1O
K                                        59200000         MNOTE 4,'&RG(4) NEEDED
 BY THE EXIT LINKAGE - NOT RESTORED.'    59400000.RG1OK   ANOP
                                         59700000&RG(3)   SETC  ''
                                           60000000&RG(4)   SETC  ''
                                           60200000.RGOK    ANOP
                                           60500000.*
                                             60700000&RG(16)  SETC  ''
                                             61000000.*
                                             61200000         AIF   (K'&RC EQ 0)
.NORC                                        6150000  0&RG2SAVE SETC  '&RG(2)'
                                               61800000&RG(2)   SETC  ''
                                               62000000         AIF   ('&RG2SAVE
' NE '').RG2SOK                                62300000&RG2SAVE SET  C  '&@.15'
                                                 62500000.RG2SOK  ANOP
                                                 62800000.*
                                                 63100000         AIF   (NOT &RS
W(  16)).NOPRBLM                                   63300000         MNOTE 4,'&RG
2SAVE SET TO THE RETURN CODE - NOT RESTORED.'      63600000.NOPRBLM ANOP
                                                   63800000.*
                                                     64100000         AIF   ('&R
C' EQ '&RC(1)').RCNTRG                               64400000         #TEST REGS
=&RC(1)                                              64600000         AIF   (&#T
ESERR NE 0).LOADRC                                     64900000         AIF   ('
&#TESRET(1)' NE '13').RCOK                             65100000         MNOTE 4,
'"RC=&RC" IS ILLOGICAL.'                               65400000.RCOK    AIF   ('
&#TESRET(1)' EQ '15').NORC                     +         65700000.LOADRC  AIF
('&RG(1)' EQ '' OR '&RG(3)' EQ '' OR &#ENTPLI  ).RCLR      65900000&RCST    SETB
  (1)                                                      66200000         AGO
  .NORC                                                    66400000.RCLR    ANOP
                                                           6  6700000&LNME    LR
    &@.15,&RC(1)        LOAD THE RETURN CODE                 67000000&LNME    SE
TC  ''                                                       67200000         AG
O   .NORC                                                    67500000.RCNTR  G
ANOP                                                           67700000&RCLA
SETB  (1)                                                      68000000
AIF   ('&RG(3)' EQ '' OR '&RG(1)' EQ '').NORC                  68300000&RG(2)
SETC  '&RG  2SAVE'                                               68500000.NORC
  ANOP                                                           68800000.*
                                                                 69000000
  AIF   (NOT &#ENTPLI).NO  TPLI2                                   69300000&LNME
    LR    &@.0,&@.13          COPY OUR DSA POINTER                 69600000&LNME
    SETC  ''                                                       69800000.NOTP
LI2 ANOP                                                             70100000.*
                                                                     70300000
      AIF   (NOT &#ENTRNT OR '&RG(4)' EQ '').NOLRR1                  70600000&LN
ME    LR    &@.1,&@.13          GET SAVE AREA ADDRESS F  OR FREEMAIN   70900000&
LNME    SETC  ''                                                       71100000.
NOLRR1  ANOP                                                           71400000.
*                                                                        7160000
0         AIF   (&#ENTNUN).NOLSA                                     DBC 7190000
0&LNME    L     &@.13,4(,&@.13)     POINT TO THE HIGHER SAVE AREA        7220000
0&LNME    SETC  ''                                                   DBC 7240000
0.NOL  SA   ANOP                                                       DBC 72700
000         AIF   (NOT &RCST).NORCST                                       72900
000&LNME    ST    &RC(1),16(,&@.13)   STORE THE RC FOR LATER           DBC 73200
000&LNME    SETC  ''                                                     DBC 735
00000&RG(2)   SETC  '&RG2SAVE'                                               737
00000.NORCST  ANOP                                                           740
00000.*                                                                        7
4200000         AIF   (NOT &#ENTRNT).NTRENT                                    7
4500000         AIF   (NOT &RCLA).RG2OK                                        7
4800000&RG(2)   SETC  'X'
 75000000         AIF   ('&RG(1)&RG(3)' NE '').RG2OK
 75300000&RG(2)   SETC  ''
 75500000.RG2OK   ANOP                                           +
   75800000&RG4SAVE SETC  '&RG(4)'
     76100000&RG5SAVE SETC  '&RG(5)'
     76300000&RG(5)   SETC  'X'
     76600000&C1      SETA  0
       76800000.STMLP   AIF   (&C1 GE 4).STMEND
       77100000&C1      SETA  &C1+1
       77400000         AIF   ('&RG(&C1)' NE '').STMLP
       776000  00&R1      SETA  &C1+13-(&C1+13)/16*16
         77900000&R2      SETA  &R1-1
         78100000&W1      SETA  &C1*4+8
         78400000.STMLP2  AN  OP
           78700000&R2      SETA  &R2+1
           78900000         AIF   (&R2 LE 15).STMR2OK
           79200000&R2      SETA  0
             79400000.STMR2OK ANOP
             79700000&RG(&C1) SETC  '&@&R2'
             80000000&C1      SETA  &C1+1
               80200000         AIF   ('&RG(&C1)' EQ '').STMLP2
               80500000         AIF   (&R1 EQ &R2).ST
               80700000&C       SETC  '&@&R1,&@&R2,&W1.(&@.13)'
             DBC 81000000&LNME    STM   &C                  SAVE AGAINST FREEMAI
N            DBC 81200000&LNME    SETC  ''
             DBC 81500000         AGO   .STMLP
                   81800000.ST      ANOP
               DBC 82000000&LNME    ST    &@&R1,&W1.(,&@.13)  SAVE AGAINST FREEM
AIN            DBC 82300000&LNME    SETC  ''
               DBC 8250  0000         AGO   .STMLP
                     82800000.STMEND  ANOP
                     83100000&RG(5)   SETC  '&RG5SAVE'
                     83300000.GTR1M     AIF   ('&RG4SAVE' NE '').NOGTR1
                       83600000&LNME    L     &@.1,8(,&@.13)      GET RSA PTR FO
R FREEMAIN         DBC 83800000&LNME    SETC  ''
                   DBC 84100000.NOGTR1  ANOP
                     DBC 84400000&LNME    L     &@.0,E&#.LEN        GET RSA LEN
(AND SUBPOOL)        DBC 84600000&LNME    SETC  ''
                     DBC 84900000         MNOTE '         FREEMAIN R  U,A=(1),LV
=(0),SP=&#ENTSP'       DBC 85100000         FREEMAIN RU,A=(1),LV=(0),SP=&#ENTSP
                       DBC 85400000.NTRENT  ANOP
                           85700000.*
   +                         85900000&C1      SETA  0
                               86200000.LMLP    AIF   (&C1 GE 16).SETRCM
                               86400000&C1      SETA  &C1+1
                               86700000         AIF   ('&RG(&C1)' EQ '').LMLP
                                 87000000&R1      SETA  &C1
                                 87200000&W1      SETA  &C1*4+8
                                 87500000.LMLP2   ANOP
                                   87700000&C1      SETA  &C1+1
                                   88000000         AIF   ('&RG(&C1)' NE '').LML
P2                                 88300000         AIF   (&R1 EQ &C1-1).L
                                   88500000&C         SETC  '&RG(&R1),&RG(&C1-1)
,&W1.(&@.13)'                    DBC 88800000&LNME    LM    &C
RESTORE REGISTERS                DBC 89000000&LNME    SETC  ''
                                 DBC 89300000         AGO   .  LMLP
                                       89600000.L       ANOP
                                   DBC 89800000&C       SETC  '&RG(&R1),&W1.(,&@
.13)'                              DBC 90100000&LNME    L     &C
    RESTORE THE REGISTER             DBC 90300000&LNME    SETC  ''
                                     DBC 90600000         AGO   .LMLP
                                         90900000.SETRCM  ANOP
                                           91100000.*
                                           91400000         AIF   (NOT &RCLA).RE
TURN                                       91600000         AIF   ('&RC' EQ '0')
.SR                                          91900000&LNME    LA    &@.15,&RC
        GET THE RETURN CODE              DBC 92200000&LNME    SETC  ''
                                         DBC 92400000         AGO   .RETURN
                                               92700000.SR      ANOP
                                           DBC 92900000&LNME    SLR   &@.15,&@.1
5         ZERO THE RETURN CODE             DBC 93200000&LNME    SETC  ''
                                           DBC 93500000.  RETURN  ANOP
                                                 93700000.*
                                                 94000000         AIF   (NOT &#E
NTPLI).NOTPLI3                                   94200000&LNME    BALR    &@.1,&
@.14          RETURN TO CALLER                 DBC 94500000         MEXIT
                                                   94800000.NOTPLI3 ANOP
                                                   95000000.*
                                                     95300000         AIF   ('&M
ODE '(1,1) EQ 'R').RETBSM                        DBC 95500000         AIF   ('&M
ODE '(1,1) EQ 'L').RETBR                         DBC 95800000         MNOTE 8,'"
MODE=&MODE" NOT RECOG+ NIZED.'                     DBC 96100000         MNOTE *,
'"MODE=RESTORE" OR   "MODE=LEAVE" WAS EXPECTED.' C 04/85 96300000.*
                                                     DBC 96600000.RETBR   ANOP
                                                     DBC 96800000&LNME    BR
&@.14               RETURN                             DBC 97100000&LNME    SETC
  ''                                                   DBC 97400000         AGO
  .MODEZ                                               DBC 97600000.RETBSM  ANOP
                                                         DBC 97900000&LNME    BS
M   0,&@.14             RESTORE AMODE AND RETURN         DBC 98100000&LNME    SE
TC  ''                                                   DBC 98400000.MODEZ   AN
OP                                                       DBC 987  00000.*
                                                           DBC 98900000
AIF   (NOT &#ENTRNT).END                                   DBC 99200000E&#.LEN
DC    A(&#ENTSIZ)         RSA LENGTH                       DBC 99400000.END
  MEND  #EXIT                                          04/01 S21 99700000./ ADD
NAME=#JESCT   0100-03155-03155-1415-00017-00017-00000-DBCOLE5
  MACRO                                                      X20 #JESCT
  #JESCT &DOC=  ,&LIST=                                        X20 11000000
    GBLB  &#JESCT                                              X20 16000000
    GBLC  &#TIT,&#INFO(20)                                     X20 22000000
    AIF   (&#JESCT).MEND                                         X20 27000000&#J
ESCT  SETB  (1)                                                  X20 33000000&#T
IT    SETC  'JESCT -- JOB ENTRY SUBSYSTEM COMMUNICATION TABLE'   X20 38000000&#I
NFO(1) SETC 'JESCT    = JOB ENTRY SUBSYSTEM   COMMUNICATION TABLE' X20 44000000&
#INFO(2) SETC 'JESCT    = DSECT AND BASE'                          X20 50000000&
#INFO(3) SETC 'JESMNTBL = MOUNTABLE DEVICE CLASSES TBL DSECT/BASE' X22 55000000&
#INFO(4) SETC 'JESPEXT  = PAGABLE JESCT EXTENSION DSECT/BAS  E' 3/93 X22 6100000
0         #TITDOC 'IEFJESCT MNTBL=YES',                        03/93 X22*6600000
0               DOC=&DOC,LIST=&LIST                                  X20 7200000
0         IEFJESCT MNTBL=YES                                   03/93 X22 7  7000
000&SYSLOC  LOCTR ,                                              07/02 Z12 83000
000         #TUNDOC ,                                            09/91 X22 88000
000.MEND    MEND  #JESCT                                         04/01 S21 94000
000./ ADD   NAME=#JSCB    0100-03155-03155-1415-00015-00015-00000-DBCOLE5
              MACRO                                                          #JS
CB            #JSCB &DOC=,&LIST=                                         X20 120
00000         GBLB  &#JS  CB                                               X20 1
8000000         GBLC  &#TIT,&#INFO(20)                                     X20 2
5000000         AIF   (&#JSCB).MEND                                        X20 3
1000000&#JSCB   SETB  (1)              +                                     X20
 37000000&#TIT    SETC  'JSCB -- JOB   STEP CONTROL BLOCK'                     X
20 43000000&#INFO(1) SETC 'JSCB     = JOB STEP CONTROL BLOCK'                  X
20 50000000&#INFO(2) SETC 'IEZJSCB  = DSECT AND BASE'                          X
20 56000000         #TITDOC 'IEZJSCB ,',
 X20*62000000               DOC=&DOC,LIST=&LIST
 X20 68000000         IEZJSCB ,
     75000000&SYSLOC  LOCTR ,                                                07/
02 Z12 81000000         #TUNDOC ,                                            09/
91 X22 87000000.MEND    MEND  #JSCB                                          04/
01 S21 93000000./ ADD NAME=#PARMS
                          MACRO
         00000100&NME     #PARMS &P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8,&P9,&P10,
        *00000200               &P11,&P12,&P13,&P14,&P15,&P16,&P17,&P18,&P19,&P2
0,      *00000300                 &P21,&P22,&P23,&P24,&P25,&P26,&P27,&P28,&P29,&
P30,      *00000400               &P31,&P32,&P33,&P34,&P35,&P36,&P37,&P38,&P39,&
P40,      *00000500               &SVID=,&WKID=,&SUBAD=,&PFIX=
           00000600.*
             00000700.*
             00000800.*
             00000900.* LAST CHANGE DATE - OCTO  BER 18, 1983
               00001000.*                  - MAILING ADDRESS CHANGE
               00001100.*
               00001200.* LAST CHANGE DATE - APRIL 21, 1981
                 00001300.*                  - MACRO NAME CHANGED FROM $PARMS TO
 #PARMS.         00001400.*
                 00001500.* LAST CHANGE DATE - FEBRUARY 2, 1977
                   00001600.*                  - CHARACTERS NOT WITHIN APOSTROPH
IES ARE NOW        00001700.*                    UPCASED.
                   00001800.*                  - FIXED BUG: THE ERROR RETURN FRO
M THE PARM           00001900.*                    SUBROUTINE GENERATED BY THE M
ACRO WAS NEVER       00002000.*                    TAKEN.
                     00002100.*                  - MAILING ADDRESS CHANGE.
                     000022  00.*
                       00002300.* LAST CHANGE DATE - JUNE 17, 1975
                       00002400.*
                       00002500.* THIS MAC  RO WAS WRITTEN BY DAVID B. COLE. ANY
 QUESTIONS CONCERNING IT 00002600.* MAY BE ADDRESSED TO:
                         00002700.*       RR#2 BOX 712
                         00002800.*       AFTON, VA. 2292+ 0
                           00002900.*
                             00003000.*
                             00003100.*
                             00003200.*   THIS MACRO WAS WRITTEN TO GE  NERATE A
 GENERALIZED PARM FIELD SCAN   00003300.* OUT SUBROUTINE. IT DOES THE FOLLOWING:
                               00003400.* - IT DETERMINES THE EXISTANCE OF A PAR
M FIELD.                       00003500.* - IT INTERFACES WITH A MESSAGE PRINTIN
G SUB  ROUTINE TO PRINT          00003600.*   APPROPIATE MESSAGES INCLUDING AN E
CHO OF THE PARM FIELD AS WELL AS 00003700.*   ANY ERROR MESSAGES THAT MIGHT BE A
PPROPIATE.                       00003800.* - IT SCANS FOR AND ISSOLATES EACH EN
TRY IN THE PARM FIEL  D,           00003900.*   IDENTIFIES IT AGAINST A LIST OF
GIVEN KEYWORDS, AND THEN BRANCHES  00004000.*   TO A GIVEN SPECIALIZED HANDLER R
OUTINE.                            00004100.* - IF BY THE END OF THE SCAN OUT AN
Y ERRORS HAVE BEEN DETECTED, THE     00004200.*   ROUTINE WILL MAKE AN ERROR RET
URN TO ITS CALLER.                   00004300.*
                                     00004400.*
                                     00004500.*
                                       00004600.* THE MACRO CALL USES THE FOLLOW
ING ARGUEMENTS:                        00004700.*
                                       00004800.* THE NAME FIELD   (OPTIONAL) -
                                         00004900.*   THIS SPECIFIES BOTH THE NA
ME OF THE GENERATED SUBROUTINE AND THE   00005000.* PREFIX TO USE FOR ALL GENERA
TED STATEMENT LABELS. IT SHOULD NOT BE   00005100.* LONGER THAN 4 CHARACTERS. IF
   OMITTED, THEN THE DEFAULT OF "PARM" IS  00005200.* USED.
                                           00005300.*
                                           00005400.* THE POSITIONAL PARAMETERS
(AT LEAST ONE R  EQUIRED) -                  00005500.*   FROM ONE TO 40 POSITIO
NAL PARAMETERS MAY BE GIVEN. EACH OF THEM    00005600.* MUST CONSIST OF A SUBLIS
T OF TWO ITEMS. THE FIRST MUST BE A PARM     00005700.* FIELD ENTRY KEYWORD. THE
 SECOND MUST BE THE ADDRESS (A  -TYPE) OF AN   00005800.* ASSOCIATED HANDLING RO
UTINE. THIS ROUTINE IS GIVEN CONTROL IF THE    00005900.* ASSOCIATED KEYWORD IS
FOUND IN THE PARM FIELD.                       00006000.*
                                                 00006100.* THE SUBAD= OPERAND (
OPTIONAL) -                                      00006200.*   THIS SPECIFIES THE
 NAME OF A MESSAGE PRINTING SUBROUTINE TO BE     00006300.* USED BY THE SCAN OUT
 ROUTINE. IF OMITTED, THEN THE DEFAULT IS TO USE 00006400.*   THE PRINTING SUBRO
UTINE USED BY THE NEXT PREVIOUS #PARMS OR $PUT     00006500.* MACRO.
                                                   00006600.*   THE FOLLOWING IN
FORMATION IS PASSED TO THE MESSAGE PRINTING        00006700.* SUBROUTINE:  +
                                                     00006800.*       R14   -->
RETURN ADDRESS                                         00006900.*       R1 --> A
 MESSAGE BLOCK. THE FIRST BYTE CONTAINS THE LENGTH OF  00007000.*              T
HE MESSAGE. THE REMAINDER OF THE BLOCK CONTAINS THE    00007100.*              M
ESSAGE I  TSELF (INCLUDING ASA CARRAGE CONTROL).         00007200.*   THE MESSAG
E PRINTING ROUTINE SHOULD RESTORE ALL REGISTERS UPON     00007300.* RETURN.
                                                         00007400.*
                                                           00007500.* THE SVID=
OPERAND (OPTIONAL) -                                       00007600.*   THIS MUS
T SPECIFY THE NAME OF AN ALIGNED 8-WORD REGISTER SAVE      00007700.* AREA. IF O
MITTED, THEN A SAVE AREA IS GENERATED   BY THE MACRO.        00007800.*
                                                             00007900.* THE WKID
= OPERAND (OPTIONAL) -                                       00008000.*   THIS M
UST SPECIFY THE NAME OF AN ALIGNED 1-WORD WORK AREA.   IF      00008100.* OMITTE
D, THEN A WORK AREA IS GENERATED BY THE MACRO.                 00008200.*
                                                               00008300.* THE PF
IX= OPERAND (OPTIONAL) -                                       00008  400.*   TH
IS MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS EXPANSION. THIS 00008500.* IS S
O THAT THE USE OF THE REGISTERS WILL BE INDICATED IN THE CROSS   00008600.* REFE
RENCE LISTING. THE PFIX= OPERAND CAN BE USED TO CONTROL THE SET  00008700.* OF E
QUA  TES USED. FOR EXAMPLE, IF "PFIX=GPR" IS SPECIFIED, THEN       00008800.* "G
PR1" WILL BE USED WHENEVER THE EXPANSION REFERS TO REGISTER 1.     00008900.*
IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF EQUATES DEFINED   00009000.* BY
 THE FIRST PRIOR #  REGS MACRO WILL BE USED. IF THERE IS NO PRIOR    00009100.*
#REGS MACRO, THEN NO EQUATES WILL BE USED.                           00009200.*
                                                                     00009300.*
                                                                       00009400.
*                                                                      00009500.
* SUBROUTINE PROCESSING INFORMATION                                    00009600.
*                                                                        0000970
0.*       INPUTS:                                                        0000980
0.*             R14 --> RETURN ADDRESS                                   0000990
0.*             R1 --> ANY OS STANDARD PARM FIELD                          00010
000.*                                                                      00010
100.*       OUTPUTS:                                                       00010
200.*             ALL REGISTERS ARE RESTORED.                              000
10300.*             THE PARM FIELD IS PROCESSED AND MAY BE DESTROYED.        000
10400.*       EXITS:                                                         000
10500.*             BRANCH AND LINK TO SPECIFIED HANDLING SUBROUTINES UPON   000
10600.*      +        RECOGNITION OF VALID KEYWORDS.                           0
0010700.*
 00010800.*       RETURNS:
 00010900.*             NORMAL:  " BR R14 "
 00011000.*             ER  ROR:  " B 4(,R14) "
   00011100.*       ATTRIBUTES:
   00011200.*             NONE (NOT EVEN SERIEALLY REUSABLE)
   00011300.*
     00011400.* METHOD OF SCAN -
     00011500.*   THE PARM FIELD IS CONSIDERED TO BE A LIST OF KEYWORD ENTRIES.
     00011600.* POSITIONAL ENTRIES ARE NOT CONSIDERED.
       00011700.*   EACH ENTRY MUST START WITH ONE OF THE KEYWORDS DEFINED IN TH
E      00011800.* MACRO CALL. ANY CHARACTERS THAT MIGHT BE FOUND IN ADDITION TO
THE    00011900.* KEYWORD (I.E. ADJACENT TO AND IMMEDIATELY TO THE RIGH  T OF TH
E        00012000.* KEYWORD) ARE CONSIDERED TO BE THE VALUE ASSIGNED TO THE KEYW
ORD.     00012100.*   NOTE, THIS ROUTINE DOES NOT EXPLICITLY TEST FOR ANY SEPERA
TOR      00012200.* CHARACTER BETWEEN THE KEYWORD AND ITS VALUE. SUCH A CHARACTE
R, IF      00012300.* DESIRED, MUST BE DEFINED AS PART OF THE KEYWORD (E.G. "SEQ
=").       00012400.*   ITEMS OF SYNTAX RECOGNIZED BY THIS ROUTINE ARE COMMAS,
           00012500.* APOSTROPHIES, AND PARENTHESES. APOSTROPHIES MUST OCCURE IN
 MATCHING  00012600.*   PAIRS. COMMAS AND PARENTHESES FOULD WITHIN MATCHING APOS
TROPHIES ARE 00012700.* IGNORED. PARENTHESES NOT FOUND WITHIN APOSTROPHIES MUST
BE BALANCED. 00012800.* COMMAS FOUND WITHIN PARENTHESES ARE IGNORED.
             00012900.*   COMMAS NOT   FOUND WITHING MATCHING APOSTROPHIES OR PA
RENTHESES ARE  00013000.* TREATED AS PARM FIELD ENTRY DELIMITERS.
               00013100.*   EACH PARM FIELD ENTRY IS ISSOLATED AT ITS DELIMITERS
 AND THEN      00013200.* CHECKED FOR A MATCH IN TH  E MACRO'S KEYWORD LIST. IF
A MATCH IS       00013300.* FOUND, THEN THE ASSOCIATED HANDLING ROUTINE IS CALLE
D WITH THE       00013400.* FOLLOWING INPUTS:
                 00013500.*       R14 --> RETURN ADDRESS
                   00013600.*       R15 --> HANDLER ENTRY ADDRESS
                   00013700.*       R0 = LENGTH OF THE KEYWORD'S VALUE (IF ANY).
 IF NO VALUE IS    00013800.*            GIVEN, THEN R0 = 0.
                     00013900.*       R1 --> FIRST BYTE PAST THE KEYWORD - I.E.
AT THE VALUE (IF     00014000.*              ANY).
                     00014100.*   EACH HANDLER MUST MEET THE FOLLOWING OUTPUT RE
QUIREMENTS:            00014200.*       - ALL REGISTERS MUST BE RESTORED EXCEPT
THAT FOR ERROR RETURNS 00014300.*         R1 MUST POINT TO THE LOCATION OF THE E
RROR.                  00014400.*   THE FOLLOWING RETURNS ARE PERMITTED:
                       00014500            _ .*       NORMAL -  " BR R14 "
                                     00014600.*       ERROR -  " B 4(,R14) "
                                     00014700.*
                                     00014800.  *
                                       00014900.*
                                       00015000.* INNER MACROS USED - #TEST, #PU
T                                      00015100.*
                                         00015200         GBLC  &#TESRET(20)
                                         00015300         LCLA  &A1,&A2
                                         00015400         LCLC  &N,&@,&SAVEA  ,&
WORKA,&C1                                  00015500&N       SETC  'PARM'
                                           00015600         AIF   (K'&NME EQ 0).
GOTNME                                     00015700&N       SETC  '&NME'
                                             00015800.GOTNME  ANOP
                                             00015900&@       SETC  '&PFIX'
                                             00016000         AIF   (K'&PFIX NE
0).GOTPFIX                                     00016100         #TEST PFIX=
                                               00016200&@       SETC  '&#TESRET(
1)'                                            00016300.GOTPFIX ANOP
                                                 00016400&SAVEA   SETC  '&SVID'
                                                 00016500         AIF   (K'&SVID
 NE 0).GOTSAVE                                   00016600&SAVEA   SETC  '&N.SAVE
'                                                0001670  0.GOTSAVE ANOP
                                                   00016800&WORKA   SETC  '&WKID
'                                                  00016900         AIF   (K'&WK
ID NE 0).GOTWORK                                   00017000&WORKA   SET  C  '&N.
WORK'                                                00017100.GOTWORK ANOP
                                                     00017200* PARM FIELD SCAN-O
UT ROUTINE                                           00017300*        INPUTS:
                                                       00017400*              R1
4 --> RETURN ADDRESS                                   00017500*              R1
 --> PARM FIELD                                        00017600         SPACE 1
                                                         00017700&N       STM
&@.14,&@.5,&SAVEA   SAVE REGISTERS                       00017800         LA
&@.4,0(,&@.1)       PNT TO PARM FIELD (CLEAR HI-BYTE)    00017900         LH
&@.3,0(,&@.4)       GET ITS LENGTH                         00018000         LTR
  &@.3,&@.3           PARM FIELD GIVEN?                    00018100         BZ
  &N.RET              NO, GO RETURN TO CALLER              00018200         #PUT
  &N.TITL,SUBAD=&SUBAD YES, PRINT AN INTRO LINE    +         00018300         LA
    &@.2,1              GETA BXLE INCREMENT FOR T  HE SCAN     00018400
AR    &@.3,&@.2           GET LENGTH FOR ECHO MSG              00018500
STC   &@.3,0(,&@.4)       STORE IN THE MSG BLOCK               00018600
MVI   1(&@.4),C'0'        SET CARRAGE CONTROL CHARACTER        0  0018700
  #PUT  (&@.4),SUBAD=&SUBAD ECHO THE PARM FIELD                  00018800
  AR    &@.3,&@.4           GET THE SCAN BXLE LIMIT              00018900
  LA    &@.5,2(,&@.4)       GET THE SCAN BXLE INDEX              00019000&N.LOO
 P  LR    &@.1,&@.5           SAVE KEYWORD STARTING ADDRESS        00019100
    LR    &@.0,&@.2           INIT APOS AND PAREN FLAG             00019200&N.DE
LM  CLI   0(&@.5),C''''       APOSTROPHIE?                         00019300
    BNE   &N.N  APO             NO, SKIP                             00019400
      LCR   &@.0,&@.0           YES, FLIP-FLOP THE APOS FLAG         00019500
      B     &N.DEND             GO LOOP FOR NEXT CHARACTER           00019600&N.
NAPO  LTR   &@.0,&@.0             WITHIN APOSTROPHIES?                 00019700
        BNP   &N.DEND             YES, SKIP THIS CHARACTER             00019800
        CLI   0(&@.5),C'('        NO, OPEN PAREN?                      00019900
        BNE   &N.NOPN             NO, SKIP                               0002000
0         CR    &@.0,&@.2           YES, FIRST IN A NEST?                0002010
0         BNE   &N.N1ST             NO, SKIP                             0002020
0         LR    &@.14,&@.5          YES, SAVE A POINTER TO   IT ICO ERROR  00020
300&N.N1ST  AR    &@.0,&@.2           COUNT THE NEST LEVEL                 00020
400         B     &N.DEND             LOOP FOR NEXT CHARACTER              00020
500&N.NOPN  CLI   0(&@.5),C')'        CLOSE PAREN?                           000
20600         BNE   &N.NCPN             NO, SKIP                             000
20700         SR    &@.0,&@.2           YES, DECR NEST LEVEL; IMBALANCE?     000
20800         BP    &N.DEND             NO, LOOP FOR NEXT CHARACTER          000
20900           B     &N.SNTX             YES, ERROR; GIVE UP ALTOGETHER       0
0021000&N.NCPN  OI    0(&@.5),X'40'       UPCASE THE CHARACTER                 0
0021100         CR    &@.0,&@.2           WITHIN PARENS?                       0
0021200         BNE   &N  .DEND             YES, SKIP THIS CHARACTER
 00021300         CLI   0(&@.5),C','        NO, DELIMITING COMMA?
 00021400         BE    &N.GOTC             YES, GOT AN ENTRY; GO PROCESS
 00021500&N.DEND  BXLE  &@.5,&@.2,&N.DE  LM   NO, LOOP FOR NEXT CHARACTER
   00021600         CR    &@.0,&@.2           END OF PARM; PARENS & APOS OK?
   00021700         BE    &N.GOTC             YES, GO PROCESS LAST ENTRY
   00021800         LR    &@.1,&@.14          NO, PNT   TO START OF NEST
     00021900         BP    &N.ERRR             UNBALANCED PARENS; ISSUE ERROR M
SG   00022000&N.BAPO  BCTR  &@.5,0              UNMATCHED APOS; BACK-SCAN
     00022100         CLI   0(&@.5),C''''       IS THIS IT?          +
       00022200         BNE   &N.BAPO             NO, CONTINUE BACK  -SCAN
         00022300&N.SNTX  LR    &@.1,&@.5           YES, POINT TO ERROR
         00022400         LR    &@.5,&@.3           PREVENT FURTHER PROCESSING
         00022500         B     &N.ERRR             GO FLAG THE ERROR
           00022600&N.GOTC  CR    &@.1,&@.5           NULL ENTRY?
           00022700         BE    &N.EEND             YES, SKIP
           00022800         LA    &@.15,&N.KEYS       NO, POINT TO KEYWORD LIST
           000229  00         SR    &@.14,&@.14         CLEAR LENGTH REGISTER
             00023000&N.SRCH  CLI   0(&@.15),X'FF'      END OF KEYWORDS?
             00023100         BE    &N.ERRR             YES, ERROR
             00023200         IC      &@.14,3(,&@.15)     NO, GET THIS KEYWORD L
ENGTH - 1      00023300         CLC   4(*-*,&@.15),0(&@.1) (EXECUTED)
               00023400&N.CLC   EX    &@.14,*-6           RIGHT KEYWORD?
               00023500         BE    &N.GOTK               YES, GO PASS TO HAND
LER              00023600         LA    &@.15,5(&@.14,&@.15) NO, ADVANCE TO NEXT
                 00023700         B     &N.SRCH             LOOP TO TRY AGAIN
                 00023800&N.GOTK  MVI   4(&@.15),X'FF'      PR  EVENT RE-USE OF
THIS KEYWORD       00023900         MVC   &WORKA+1(3),0(&@.15) ALIGN THE HANDLER
 ADDRESS           00024000         L     &@.15,&WORKA        LOAD IT
                   00024100         LA    &@.1,1(&@.14,&@.1)  POINT TO KEYWOR  D
'S VALUE             00024200         LR    &@.0,&@.5           POINT PAST THE E
NTRY                 00024300         SR    &@.0,&@.1           GET THE ENTRY'S
VALUE'S LENGTH       00024400         BALR  &@.14,&@.15         LINK TO THE HAND
LER                    00024500         B     &N.EEND             NORMAL RETURN;
 LOOP FOR NEXT ENTRY   00024600&N.ERRR  MVI   0(&@.1),X'FF'       ERROR RETURN;
FLAG THE ERROR         00024700         MVI   1(&@.4),X'00'       SIGNEL THAT AN
 ERROR HAS OCCURED     0002  4800&N.EEND  BXLE  &@.5,&@.2,&N.LOOP   LOOP TO PROC
ESS NEXT ENTRY           00024900         CLI   1(&@.4),C'0'        ANY ERRORS O
CCURE?                   00025000         BE    &N.RET              NO, GO RETUR
N TO CALLER              00025100           LA    &@.1,1(,&@.4)       YES, PNT T
O PARM CCC.                00025200&N.FLAG  CLI   0(&@.1),X'FF'       ERROR HERE
?                          00025300         MVI   0(&@.1),C' '        (ASSUME NO
)                          00025400         BNE   &N.STAR               NO, SKIP
 TO NEXT CHARACTER           00025500         MVI   0(&@.1),C'*'        YES, SET
 A VISUAL SIGNEL             00025600&N.STAR  BXLE  &@.1,&@.2,&N.FLAG   LOOP FOR
 NEXT CHARACTER              00025700         #PUT  (R4),SUBAD=&SUBAD     PRINT
THE ERROR FLAG(S)              00025800         #PUT  &N.ERRM,SUBAD=&SUBAD PRINT
 ERROR INFO                    00025900         LTR   &@.14,&@.14         SIGNEL
 ERROR RETURN                  00026000&N.RET   LM    &@.14,&@.5,&SAVEA   (RESTO
RE REGI+ STERS)                  00026100         BC    7,4(,&@.14)         ERRO
R RET  URN                         00026200         BR    &@.14               NO
RMAL RETURN                        00026300         SPACE 3
                                   00026400         AIF   (K'&SVID NE 0).NOSAVE
                                     00026500&SAVEA   DS    8A
REGISTER SAVE AREA                   00026600.NOSAVE  AIF   (K'&WKID NE 0).NOWOR
K                                    00026700&WORKA   DS    A
WORK AREA                              00026800.NOWORK  AIF   (K'&SVID NE 0 AND
K'&WKID NE 0).NOSPACE                  00026900         SPACE 1
                                       00027000.NOSPACE ANOP
                                       00027100&N.  KEYS  DS    0H
    KEYWORD LIST                         00027200&A1      SETA  0
                                         00027300.LP1     AIF   (&A1 EQ N'&SYSLI
ST).END1                                 00027400&A1      SETA  &  A1+1
                                           00027500&A2      SETA  K'&SYSLIST(&A1
,1)-1                                      00027600         DC    AL3(&SYSLIST(&
A1,2)),AL1(&A2),C'&SYSLIST(&A1,1)'         00027700         AGO   .LP1
                                             00027800.END1    DC    X'FF'
        KEYWORD LIST TERMINATOR              00027900         SPACE 1
                                             00028000&C1      SETC  'L'''
                                               00028100         DC    AL1(&C1&N.
TITL)                                          00028200&N.TITL  DC    C'-THE FOL
LOWING PARM FIELD HAS BEEN GIVEN.'             00028300         SPACE 1
                                                 00028400         DC    AL1(&C1&
N.ERRM)                                          00028500&N.ERRM  DC    C'0ERROR
S HAVE BEEN DETECTED AT THE ABOVE ASTERISKS.'    00028600         MEND
                                                   00028700./ ADD NAME=#PLIENV
                                                                    MACRO
                                                   00000100&N       #PLIENV &ISA
SIZE=,&DSASIZE=,&RECOVER=LOCAL,&BASES=1,          *00000200                 &ESD
TYPE=CSECT,&PFIX=                                    00000300.*
                                                     00000400.*
                                                     00000500.*
                                                       00000600.* LAST CHANGE DA
TE - OCTOBER 18, 1983                                  00000700.*
   - MAILING ADDRESS CHANGE                            00000800.*
                                                         00000900.* THIS MACRO W
AS WRITTEN - APRIL 21, 1981                              00001000.*
                                                         00001100.* THIS MACRO W
AS WRITTEN BY DAVID B. CO+ LE.  ANY QUESTIONS CONCERNING   00001200.* IT MAY BE
ADDRESSED TO:                                                00001300.*       RR
#2 BOX 712                                                   00001400.*       AF
TON, VA. 22920                                               00001500.*
                                                               00001600.*
                                                               00001700.*
                                                               00001800.* THIS M
ACRO INTERFACES TO THE 'PLIENV' PROGRAM (WRITTEN IN P  LI) TO    00001900.* CREA
TE A PLI ENVIRONMENT IN WHICH ASSEMBLER LANGUAGE CODE CAN RUN.   00002000.* THE
FLOW OF CONTROL IS DESCRIBED IN THE COMMENTARY GIVEN BELOW.      00002100.*
                                                                 000  02200.* TH
IS MACRO ACCEPTS THE FOLLOWING OPERANDS.                           00002300.*
                                                                   00002400.* TH
E NAME FIELD.                                                      00002500.*
      THIS IS OPTIONAL. IT ASSIGNS A NAME TO THE FIRST SUITABLE      00002600.*
      GENERATED INSTRUCTION. NOTE, THE DEFAULT FIRST INSTRUCTION IS  00002700.*
      A 'CSECT' CARD.                                                00002800.*
                                                                       00002900.
* ISASIZE=                                                             00003000.
*       THIS IS OPTIONAL. IT SPECIFIES THE DESIRED SIZE OF PLI'S       00003100.
*       "INITIAL STORAGE AREA". I  TS SYNTAX IS IDENTICAL TO PLI'S       0000320
0.*       ISASIZE EXECUTION TIME OPTION AS DESCRIBED IN THE PLI          0000330
0.*       PROGRAMMER'S GUIDE. IF THIS OPERAND IS OMITTED, THEN THE LOCAL 0000340
0.*       INSTALLATION ESTABLISHED DEFAULT ISASI  ZE IS OBTAINED. NOTE, A  00003
500.*       "REGISTER FORM" OF THIS OPERAND IS NOT SUPPORTED.              00003
600.*                                                                      00003
700.* DSASIZE=                                                               000
03800.*       THIS IS OPTIONAL. IT SPECIFIES THE DESIRED DATA STORAGE AREA   000
03900.*       SIZE TO BE MADE AVAILABLE TO THE ASSEMBLER CODE FOLLOWING THIS 000
04000.*       MACRO. IF OMITTED, THEN THE MINIMUM VALUE (120 BYTES) IS       0
0004100.*       OBTAINED. DSASIZE MUST SPECIFY A NON-RELOCATABLE EXPRESSION.   0
0004200.*       THE SPECIFIED VALUE MUST BE EQUAL TO OR GREATER THAN 120 BYTES 0
0004300.*       SINCE THE FIRST 120 BYTES ARE REQUIRED BY THE PLI SUBROUTINE   0
0004400.*         LINKAGE CONVENTIONS. A "REGISTER FORM" OF THIS OPERAND IS NOT
 00004500.*       SUPPORTED.
 00004600.*
 00004700.* RECOVER={LOCAL|P  LI}
   00004800.*       THIS CONTROLS WHETHER OR NOT PLI ESTABLISHES A RECOVERY
   00004900.*       ENVIRONMENT (I.E., ISSUES 'ESTAE' AND 'SPIE' MACROS).
   00005000.*                              +
     00005100.*       RECOVER=LOCAL (THE   DEFAULT)
       00005200.*       PLI WILL NOT ISSUE 'ESTAE' AND 'SPIE' MACROS. THE ASSEMB
LER    00005300.*       CODE FOLLOWING THIS MACRO EXPANSION MUST PROVIDE FOR ITS
 OWN   00005400.*       RECOVERY.
         00005500.*
         00005600.*       RECOVER=PLI
         00005700.*       PLI WILL ISSUE 'ESTAE' AND 'SPIE' MACROS. ALL   ABENDS
 MUST BE   00005800.*       HANDLER VIA PLI "ON UNITS".
           00005900.*
           00006000.* BASES=
             00006100.*       THIS DEFINES THE REGISTERS THAT ARE TO BE USED AS
PROGRAM      00006200.*       BASES FOR THE CODE FOLLOWING THIS MACRO EXPANSION.
 THIS        00006300.*       OPERAND MAY SPECIFY EITHER A SINGLE SELF-DEFINING
TERM OR IT   00006400  .*       MAY GIVE A PARENTHESIZED LIST OF ONE OR MORE REG
ISTER NAMES.   00006500.*
               00006600.*       BASES=<A NUMBER>   (THE DEFAULT IS "BASES=1")
               00006700.*       THIS   DEFINES THE NUMBER OF BASES REGISTERS THA
T ARE TO BE      00006800.*       LOADED AND DECLARED BY THE MACRO. REGISTERS AR
E SELECTED IN    00006900.*       DESCENDING REGISTER ORDER STARTING WITH REGIST
ER 11. "NUMBER"  00007000.*       MAY RANGE IN VALU  E FROM 0 TO 11.
                   00007100.*
                   00007200.*       BASES=(<A LIST OF REGISTER NAMES>)
                   00007300.*       THIS DEFINES SPECIFIC BASE REG  ISTERS THAT
ARE TO BE LOADED AND 00007400.*       DECLARED BY THE MACRO. ANY REGISTERS BETWE
EN R1 AND R11 MAY    00007500.*       BE CHOSEN.
                     00007600.*
                       00007700.* ESDTYPE={CSECT|START|ENTRY|DS|NONE|<NULL>}
                       00007800.*
                       00007900.*       ESDTYPE=CSECT  (THE DEFAULT)
                         00008000.*       THIS CAUSES THE MACRO TO GENERATE A 'C
SECT' CARD AS THE FIRST  00008100.*       CARD OF THE EXPANSION.
                         00008200.*
                         000083  00.*       ESDTYPE=START
                           00008400.*       THIS CAUSES THE MACRO TO GENERATE A
'START' CARD AS THE FIRST  00008500.*       CARD OF THE EXPANSION.
                           00008600.*
                             00008700.*       ESDTYPE=ENTRY
                             00008800.*       THIS CAUSES THE MACRO TO GENERATE
A 'ENTRY' CARD NAMING THE    00008900.*       FIRST EXECUTABL+ E INSTRUCTION IN
THE EXPANSION AS AN ENTRY      00009000.*       POINT.
                                 00009100.*
                                 00009200.*       ESDTYPE=DS
                                 00009300.*       THIS CAUSES THE MACRO TO   GEN
ERATE A 'DS 0H' CARD AS THE FIRST  00009400.*       CARD OF THE EXPANSION.
                                   00009500.*
                                   00009600.*       ESDTYPE=NONE  OR  ESDTYPE=
                                     00009700.*       THIS SUPPRESSES THIS FUNCT
ION.                                 00009800.*
                                     00009900.* PFIX=
                                       00010000.*       THIS CONTROLS THE SET OF
 REGISTER NAMES TO BE USED BY THE      00010100.*       MACRO EXPANSION. EXAMPLE
: "PFIX=GPR" CAUSES THE MACRO TO USE   00010200.*       "GPR1" TO REFER TO REGIS
TER 1. THE DEFAULT IS TO USE THE         00010300.*       REGISTER NAME PREFIX D
EFINED BY THE FIRST PRECEDING '#REGS'    00010400.*       MACRO, IF ANY.
                                         00010500.*
                                         00010600.* IN  NER MACROS USED - #REGS
#TEST #ENTER GETMAIN FREEMAIN LOAD DELETE  00010700.*
                                           00010800         GBLC  &#TESRET(20)
                                           00010900         LCLC  &#,  &@,&PARM,
&I,&N2,&W1,&W2                               00011000&#       SETC  '&SYSNDX'
                                             00011100&@       SETC  '&PFIX'
                                             00011200         AIF   (K'&PFIX NE
0).G  OTPFIX                                   00011300         #TEST PFIX=
                                               00011400&@       SETC  '&#TESRET(
1)'                                            00011500         AGO   .DONPFIX
                                                 00011600.GOTPFIX #REGS &PFIX,GE
N=NO                                             00011700.DONPFIX ANOP
                                                 00011800&PARM    SETC  'NOSTAE,
NOSPIE'                                            00011900         AIF   ('&REC
OVER' EQ '' OR '&RECOVER' EQ 'LOCAL').GOTRCVR      00012000&PARM    SETC  ''
                                                   00012100         AIF   ('&REC
OVER'(1,1) EQ 'P').GOTRCVR                           00012200         MNOTE 4,'"
&&RECOVER=&RECOVER" NOT RECOGNIZED.'                 00012300         MNOTE 4,'"
&&RECOVER=PLI" ASSUMED.'                             00012400.GOTRCVR ANOP
                                                     00012500           AIF   (K
'&ISASIZE EQ 0).GOTISA                                 00012600         AIF   ('
&ISASIZE' NE '&ISASIZE(1)').GETPISA                    00012700&PARM    SETC  '&
PARM.,ISASIZE(&ISASIZE.)'                              00012800         AGO   .+
 GOTISA0                                                 00012900.GETPISA ANO  P
                                                           00013000&PARM    SETC
  '&PARM.,ISASIZE&ISASIZE'                                 00013100.GOTISA0 AIF
  ('&PARM'(1,1) NE ',').GOTISA                             00013200&PARM    SETC
  '&PARM'(2,  K'&PARM-1)                                     00013300.GOTISA  AN
OP                                                           00013400&PARM    SE
TC  '&PARM./'                                                00013500.*
                                                               00013600
SPACE 1                                                        00013700*********
****************************************************           00013800*
ENTRY CODE -- EXECUTED FIRST.                        *           00013900*
  - RECEIVES CONTROL FROM A CALLER.                  *           00014000*
  - SAVES REGISTERS.                                 *           00014100*
  - CONSTRUCTS A SPECIAL PARM FIELD CONTAINING:      *             00014200*
      - PLI EXECUTION TIME OPTIONS;                    *           00014300*
      - INFORMATION SPECIFIC TO THE CONTROL OF THIS    *           00014400*
        INTERFACE.                                     *           00014  500*
      - LOCATES THE 'PLIENV' LOAD MODULE.                *           00014600*
      - CALLS 'PLIENV' VIA THE 'PLISTART' ENTRY POINT.   *           00014700*
      - THIS CAUSES THE CREATION OF A PLI ENVIRONMENT.   *           00014800*
      -   CONTROL NEXT PASSES TO THE "INTERFACE CODE"      *           00014900*
          GENERATED BELOW.                                 *           00015000*
************************************************************           00015100
        SPACE 1                                                          0001520
0.*                                                                      0001530
0&N2      SETC  '&N'                                                     0001540
0&W1      SETC  '&ESDTYPE(1)'                                              00015
500         AIF   ('&W1' EQ 'NONE' OR '&W1' EQ '').ESDDONE                 00015
600         AIF   ('&W1' EQ 'ENTRY').ESDENT                                00015
700&W2      SETC  ','                                                        000
15800         AIF   ('&W1' EQ 'CSECT' OR '&W1' EQ 'START').ESDNCSC           000
15900&W2      SETC  '0H''0'''                                                000
16000.ESDNCSC ANOP                                                             0
0016100&N       &W1   &W2                 START                                0
0016200&N2      SETC  ''                                                       0
0016300         AGO   .ESDDONE                                                 0
00  16400.ESDENT  ANOP
 00016500         ENTRY &N                  DECLARE ENTRY NAME
 00016600.ESDDONE ANOP
 00016700.*      +
   00016800&N2        STM   &@.14,&@.12,12(&@.13) SAVE CALLER'S REGISTERS
     00016900         BALR  &@.14,0             LOAD LOCAL BASE
     00017000         USING *,&@.14             DECLARE IT
     00017100         LA    &@  .0,L'PNV&#.P+34   GET L'LCL SAVE AREA + L'PARM F
IELD   00017200         MNOTE '         GETMAIN R,LV=(0)'
       00017300         GETMAIN R,LV=(0)
       00017400         LR    &@.2,&@.1             COPY LOCAL AREA POINTER
         00017500         MVC   0(20,&@.2),12(&@.13) SAVE CALLER'S R14 THRU R2
         00017600         LA    &@.1,24(,&@.2)      --> PARM FIELD
         00017700         ST    &@.1,20(,&@.2)      BUILD 1-  ENTRY PLIST
           00017800         MVI   20(&@.2),B'10000000' FLAG THE LAST ENTRY
           00017900         MVC   0(L'PNV&#.P+6,&@.1),PNV&#.P-2 COPY PARM FIELD
           00018000         MVC   L'PNV&#.P+6(4,&@.1),12(&@.2) COPY CALLER'  S R
1 TO PARM    00018100         MNOTE '         LOAD  EPLOC=PNV&#.N'
             00018200         LOAD  EPLOC=PNV&#.N
             00018300         LR    &@.15,&@.0          GET PLIENV'S ENTRY ADDRE
SS             00018400         LA    &@.1,20(,&@.2)      --> PARM FIELD
               00018500         BALR  &@.14,&@.15         GO ESTABLISH PLI ENVIR
ONMENT AND     00018600*                                  EXECUTED THE PROGRAM S
TARTING AT     00018700*                                    PNV####R.
                 00018800         EJECT ,
                 00018900*******************************************************
******           00019000*        EXIT C  ODE -- EXECUTED LAST.
       *           00019100*        - RECEIVES CONTROL BACK VIA 'PLIENV' UPON
       *           00019200*          COMPLETION OF THE ASSEMBLER CODE BELOW.
       *           00019300*        - NOTE, AT THIS POI  NT THE PLI ENVIRONMENT
NO       *           00019400*          LONGER EXISTS.
         *           00019500*        - CLEANS UP AND RESTORES REGISTERS (PRESER
VING THE *           00019600*          R15 RECEIVED FROM 'PLIENV').
           *           00019700*        - RETURNS TO "ENTRY CODE'S" CALLER.
           *           00019800*************************************************
************           00019900         SPACE 1
                         00020000         USING *,&@.14             THE PROGRAM
HAS COMPLETED. DECLARE A 00020100*                                  LOCAL BASE.
                         00020200         ST    &@.15,4(,&@.2)      STORE CALLED
 PROGRAM'S RC              00020300         MNOTE '         DELETE EPLOC=PNV&#.N
'                          00020400         DELETE EPLOC=PNV&#.N
                           00020500         MVC   12(20,&@.13),0(&@.2) RESTORE C
ALLER'S REGS TO SAVE AREA  00020600            _          LA    &@.0,L'PNV&#.P+3
4   GET L'LOCAL WORK AREA                00020700         MNOTE '         FREEMA
IN R,LV=(0),A=(&@.2)'                    00020800         FREEMAIN R,LV=(0),A=(&
@.2)                                     00020900           LM    &@.14,&@.2,12(
&@.13) RESTORE CALLER'S REGISTERS          00021000         DROP  &@.14
      RELEASE LOCAL BASE                   00021100         BR    &@.14
      RETURN TO CALLER                     00021200         SPACE   3
                                             00021300PNV&#.N  DC    CL8'PLIENV'
        ROUTINE THAT SETS UP PLI ENVIRONMENT 00021400         DC    Y(L'PNV&#.P+
8)      L'PARM FIELD                         00021500PNV&#.P  DC    C'&PARM',AL4
  (PNV&#.R) MOST OF PARM FIELD                 00021600         EJECT ,
                                               00021700*************************
************************************           00021800*        INTERFACE CODE -
- EXECUTED SECO  ND.                 *           00021900*        - RECEIVES CON
TROL FROM 'PLIENV'.                  *           00022000*        - NOTE, AT THI
S POINT A PLI ENVIRONMENT EXISTS.    *           00022100*        - ESTABLISHES
A LOCAL DSA OF THE DESIRED SIZ  E.     *           00022200*        - ESTABLISHE
S THE DESIRED LOCAL PROGRAM BASE       *           00022300*          REGISTERS.
                                       *           00022400*        - RESTORES T
HE R1 VALUE ORIGINALLY RECEIVED BY     *             00022500*          "ENTRY C
ODE" ABOVE.                              *           00022600*        - FALLS TH
ROUGH TO USER WRITTEN ASSEMBLER CODE.    *           00022700*******************
******************************************           0002280  0         SPACE 1
                                                       00022900         AIF   ('
&DSASIZE' EQ '&DSASIZE(1)').DSASOK                     00023000         MNOTE 4,
'"DSASIZE=&DSASIZE" IS INVALID.'                       00023100         MNO  TE
4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*00023200
'                                                        00023300.DSASOK  MNOTE
'PNV&#.R #ENTER &N,SAVTYPE=(PLI,&DSASIZE),BASES=&BASES,' 00023400         MNOTE
'                 ESDTYPE=NONE,PFIX=&PFIX'                 00023500PNV&#.R  #ENT
ER &N,SAVTYPE=(PLI,&DSASIZE),BASES=&BASES,                *00023600
  ESDTYPE=NONE,PFIX=&PFIX                                  00023700         L
  &@.1,88(,&@.13)     RES  TORE INITIAL PARAMETER REGISTER   00023800         EJ
ECT ,                                                        00023900***********
**************************************************           00024000*        US
ER CODE.                                           *           00024100*
- IF THIS CODE WISHES TO CALL SUBROUTINES USING    *           00024200*
  PLI CONVENTIONS, THEN THE CALLED SUBROUTINES     *           00024300*
  SHOULD START WITH A "#ENTER SAVTYPE=PLI" MACRO   *   +         00024400*
    AND END WITH A "#EXIT ((R14,R12)),RC=..." MACRO.   *           00024500*
    - WHEN THIS CODE WISHES TO RETURN TO ITS CALLER,   *           00024600*
      IT SHOULD DO SO VIA A "#EXIT ((R14,R12)),RC=..." *           00024700*
      MACRO. THIS WILL CAUSE CONTROL TO RETURN TO      *           0  0024800*
        'PLIENV' WHICH WILL THEN CLEAN UP THE PLI        *           00024900*
        ENVIRONMENT AND THEN RETURN CONTROL TO "EXIT     *           00025000*
        CODE" ABOVE.                                     *           00025100***
***  *******************************************************           00025200
        SPACE 1                                                        00025300
        MEND                                                           00025400.
/ ADD NAME=#PSA       0100-03155-03155-1415-00042-00042-00000-DBCOLE5
          MACRO                                                          #PSA
          #PSA  &DOC=,&LIST=                                         X20 1200000
0         GBLB  &#PSA                                                  X20 18000
000         GBLC  &#TIT,&#INFO(20)                                     X20 25000
000         AIF   (&#PSA).MEND                                         X20 31000
000&#PSA    SETB  (1)                                                    X20 370
00000&#TIT    SETC  'PSA -- PREFIXED STORAGE AREA'                       X20 430
00000&#INFO(1) SETC 'PSA      = PREFIXED STORAGE AREA'                   X20 500
00000&#INFO(2) SETC 'PSA      = DSECT AND BASE'                            X20 5
6000000         #TITDOC 'IHAPSA LIST=YES',                                 X20*6
2000000               DOC=&DOC,LIST=&LIST                                  X20 6
8000000.*                                                            02/01 S21
 68400000.************************************************************ 02/01 S21
 68900000.* Starting with OS/390 R2.10, the IHAPSA macro             * 02/01 S21
 69400000.* automatically and unconditionally invokes the IHAPSAE    * 02/01 S21
 69800000.* m  acro with DSECT=NO specified. I don't like this.        * 02/01 S
21 70300000.* Accordingly, the following is a temporary definition of  * 02/01 S
21 70800000.* a dummy IHAPSAE macro that does nothing. (Later, XDC'll  * 02/01 S
21 71200000.* invoke the IHA  PSAE macro separately to generate an       * 02/01
 S21 71700000.* independent dsect for the PSAE.)                         * 02/01
 S21 72200000.************************************************************ 02/01
 S21 72600000         PUSH  PRINT,NOPRINT         SAVE CURRENT STATUS        07/
01 S21 72700000         PRINT OFF,NOPRINT         HIDE                       07/
01 S21 72900000         MACRO                                                02/
01 S21 73100000&N       IHAPSAE &DSECT=,&LIST=,&TITLE=,&FL  CESAME=            0
2/01 S21 73600000         MEND  ,                                              0
2/01 S21 74000000         POP   PRINT,NOPRINT       RESTORE STATUS             0
7/01 S21 74200000.*                                                      +
 02/01 S21 74500000.***************************************************  *******
** 06/03 Z12 74600000.* Invoke the PSA-generating macro.
 * 06/03 Z12 74700000.**********************************************************
** 06/03 Z12 74800000         IHAPSA LIST=YES
           XA1 75000000.*
     02/01 S21 75700000.********************************************************
**** 06/03 Z12 75900000.* Now, cleanup the PSAE-defeating macro.
   * 06/03 Z12 761000  00.******************************************************
****** 06/03 Z12 76300000         PUSH  PRINT,NOPRINT       SAVE PRINT STATE QUI
ETLY   02/01 S21 76500000         PRINT OFF,NOPRINT         AVOID CONFUSING DISP
LAYS   02/01 S21 77200000IHAPSAE  OP  SYN ,                   BLOW OFF THE TEMPO
RARY     02/01 S21 78000000*                                  IHAPSAE MACRO
         02/01 S21 78700000         POP   PRINT,NOPRINT       RESUME PRINT STATE
         02/01 S21 79500000.*
           07/01 S21 79600000         SPACE 3
           06/03 Z12 79610000***************************************************
********** 06/03 Z12 79630000* The flag bit names for the faciliti  es list (FLC
FACL) (a)  * 06/03 Z12 79650000* are defined in the PSAE (FLCEFacilitiesList), n
ot in the  * 06/03 Z12 79670000* PSA (in spite of being resident in the PSW), an
d (b) are  * 06/03 Z12 79690000* fakackta! and (c) (as of this writing) are not
f  ully      * 06/03 Z12 79700000* defined. So I'll take this opportunity to def
ine flag     * 06/03 Z12 79720000* names more to my liking.
             * 06/03 Z12 79740000***********************************************
************** 0  6/03 Z12 79760000         SPACE 1
                 06/03 Z12 79780000PSA      DSECT ,                   RESUME
                 07/01 S21 79800000         ORG   FLCFACL             RELOCATE
                 06/03 Z12 7980  2000         SPACE 1
                   06/03 Z12 79805000FLCFACL1 DS    B                   FACILITI
ES LIST, BYTE 1    06/03 Z12 79808000FL1N3    EQU   B'10000000'         - N3 ins
tructions are      06/03 Z12 79811000*                                      avai
lable.               06/03 Z12 79814000FL1ZARCI EQU   B'01000000'         - z/AR
CH is installed.     06/03 Z12 79817000FL1ZARCA EQU   B'00100000'         - z/AR
CH is active.        06/03 Z12 79820000FL1IDTE0 EQU   B'00010  000'         - Th
e IDTE mi is installed 06/03 Z12 79823000*                                    an
d supports the purge   06/03 Z12 79826000*                                    TL
B operation.           06/03 Z12 79829000FL1IDTE1 EQU   B'00001000'           -
The IDTE mi supports     06/03 Z12 79832000*
clearing by ASCE and     06/03 Z12 79835000*
clearing at the segment  06/03 Z12 79838000*
level.     +               06/03 Z12 79841000FL1IDTE2 EQU   B'00000100'
- The IDT  E mi supports     06/03 Z12 79844000*
    clearing by ASCE and     06/03 Z12 79847000*
    clearing at the region   06/03 Z12 79850000*
    level.                     06/03 Z12 79852000******** EQU   B'00000010'
    no documentation           06/03 Z12 79855000******** EQU   B'00000001'
    no documentation           06/03 Z12 79858000         SPACE 1
                               06/03 Z1  2 79861000FLCFACL2 DS    B
      FACILITIES LIST, BYTE 2    06/03 Z12 79864000******** EQU   B'10000000'
      no documentation           06/03 Z12 79867000******** EQU   B'01000000'
      no documentation           06/03 Z12 79870000***  ***** EQU   B'00100000'
        no documentation           06/03 Z12 79873000******** EQU   B'00010000'
        no documentation           06/03 Z12 79876000******** EQU   B'00001000'
        no documentation           06/03 Z12 79879000******** EQU   B  '
'         no documentation           06/03 Z12 79882000******** EQU   B'
'         no documentation           06/03 Z12 79885000******** EQU   B'
'         no documentation           06/03 Z12 79888000         SPACE 1
                                       06/03 Z12 79891000FLCFACL3 DS    B
            FACILITIES LIST, BYTE 3    06/03 Z12 79894000FL3XTR2  EQU   B'100000
00'         - The extended translation 06/03 Z12 79897000*
              machi  ne instructions are 06/03 Z12 79900000*
                installed.               06/03 Z12 79902000FL3MSA   EQU   B'0100
0000'         - The Message Security     06/03 Z12 79905000*
                Assist feature is          06/03 Z12 79908000*
                  installed.               06/03 Z12 79911000FL3LDF   EQU   B'00
100000'         - The Long Displacement    06/03 Z12 79914000*
                  Facility is installed.   06/03   Z12 79917000FL3LDFHI EQU   B'
00010000'         - The "high performance"   06/03 Z12 79920000*
                    version of the LDF is    06/03 Z12 79923000*
                    installed.               06/03 Z12 79926000F  L3HFPMA EQU
B'00001000'         - The Hexidecimal Floating 06/03 Z12 79929000*
                      Point "Multiply-and-Add" 06/03 Z12 79932000*
                      and "Multiply-and-subtr" 06/03 Z12 79935000*
                        machine instructions are 06/03 Z12 79938000*
                        installed.               06/03 Z12 79941000******** EQU
  B'00000100'         no documentation           06/03 Z12 79944000******** EQU
  B'00000010'           no documentation           06/03 Z12 79947000******** EQ
U   B'00000001'         no documentation           06/03 Z12 79950000         SP
ACE 1                                              06/03 Z12 79952000FLCFACL4 DS
    B                   FACIL+ ITIES LIST, BYTE 4    06/03 Z12 79955000********
EQU   B'10000000'         n  o documentation           06/03 Z12 79958000*******
* EQU   B'01000000'         no documentation           06/03 Z12 79961000*******
* EQU   B'00100000'         no documentation           06/03 Z12 79964000*******
* EQU   B'00010000'         no documentati  on           06/03 Z12 79967000*****
*** EQU   B'00001000'         no documentation           06/03 Z12 79970000*****
*** EQU   B'00000100'         no documentation           06/03 Z12 79973000*****
*** EQU   B'00000010'         no documentation             06/03 Z12 79976000***
***** EQU   B'00000001'         no documentation           06/03 Z12 79979000
      SPACE 1                                              06/03 Z12 79982000
      ORG   ,                   RESUME HIGH                06/03 Z12 799  85000.
*                                                            06/03 Z12 79988000.
************************************************************ 06/03 Z12 79991000.
* End of PSA.                                              * 06/03 Z12 79994000.
*******  ***************************************************** 06/03 Z12 7999700
0PSAL     EQU   PSAEND-PSA          L'PSA                      07/01 S21 8000000
0.*                                                            02/01 S21 8020000
0&SYSLOC  LOCTR ,                                                07/02 Z12 81000
000         #TUNDOC ,                                            09/91 X22 87000
000.MEND    MEND  #PSA                                           02/01 S21 93000
000./ ADD NAME=#PUT     0100-03155-03  155-1415-00097-00097-00000-DBCOLE5
              MACRO                                                          #PU
T    &NME     #PUT  &MSG,&USESUB,&PFIX=,&SUBAD=,&MF=                         020
00000.*                                                                        0
3000000.*                                                                      0
4000000.*                                                                      0
5000000.* LAST CHANGE DATE - SEPTEMBER 26, 1986
 06000000.*                  - ADDED A SECOND POSITIONAL PARAMETER
 07000000.*                    (&USESUB) TO TEMPORARILY OVERRIDE THE
 08000000.*                    PRINT SUBROUTINE ADDRESS INDICATED BY
 0  9000000.*                    THE &SUBAD= PARAMETER.
   10000000.*
   11000000.* LAST CHANGE DATE - OCTOBER 18, 1983
   12000000.*                    - MAILING ADDRESS CHANGE
     13000000.*
     14000000.* LAST CHANGE DATE - APRIL 21, 1981
     15000000.*                    - MACRO NAME CHANGED FROM $PUT TO #PUT.
       16000000.*
       17000000.* LAST CHANGE DATE - APRIL 20, 1981
       18000000.*                  - "#REGS GEN+ =NO" SUPPORT ADDED.
         19000000.*
           20000000.* LAST CHANGE DATE - JULY 18, 1980
           21000000.*                  - INDIRECT ADDRESSING IS NOW INDICATED BY
 A         22000000.*                    TRAILING PERCENT SI  GN (%) RATHER THAN
 A LEADING   23000000.*                    ONE.
             24000000.*
             25000000.* LAST CHANGE DATE - JANUARY 12, 1977
               26000000.*                  - HANDLING OF THE SUBAD= OPERAND IS R
EWRITTEN.      27000000.*                  - MAILING ADDRESS CHANGE.
               28000000.*
                 29000000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIO
NS CONCERNING    30000000.* IT MAY BE ADDRESSED TO:
                 31000000.*       RR#2 BOX 712
                 32000000  .*       AFTON, VA. 22920
                   33000000.*
                   34000000         GBLA  &#TESERR
                   35000000         GBLC    &#PUTSUB
                     36000000         GBLC  &#TESRET(20)
                     37000000         LCLA  &A1
                     38000000         LCLC  &@,&C1,&N
                       39000000         AIF   ('&SUBAD' EQ '').SUBOK
                       40000000         AIF   ('&SUBAD(1)' NE '&SUBAD').SUBOK
                       41000000&#PUTSUB SETC  '&SUBAD'
                         42000000.SUBOK   AIF   ('&MF(1)' EQ 'INIT').MEND
                         43000000&N       SETC  '&NME'
                         44000000.*
                           45000000&@       SETC  '&PFIX'
                           46000000         AIF   ('&PFIX' NE '').PFIXOK
                           47000000         #TEST PFIX=
                             48000000&@       SETC  '&#TESRET(1)'
                             50000000         AGO   .DONPFIX
                             51000000.PFIXOK  #REGS &PFIX,GEN=NO
                             520000  00.DONPFIX ANOP
                               53000000.*
                               54000000         AIF   ('&MSG(1)' EQ '&MSG').NOTR
EG                             55000000         #T  EST REGS=&MSG(1)
                                 56000000         AIF   (&#TESERR NE 0).LR
                                 57000000         AIF   (&#TESRET(1) EQ 1).MSGZ
                                 58000000.LR      ANOP           +
                                   59000000&N       LR    &@.1,  &MSG(1)
--> MESSAGE LENGTH FIELD             60000000&N       SETC  ''
                                     61000000         AGO   .MSGZ
                                     62000000.NOTREG  AIF   ('&MSG' EQ '').MSG
Z                                      63000000         AIF   ('&MSG'(K'&MSG,1)
EQ '%').MSGINDR                        64000000&N       LA    &@.1,&MSG-1
  --> MESSAGE LENGTH FIELD             65000000         AGO   .MSGOK
                                         66000000.MSGINDR ANOP
                                         67000000&C1      SETC  '&MSG'(1,K'&MSG-
1)                                       68000000&N       L     &@.1,=A(&C1-1)
    --> MESSAGE LENGTH FIELD               69000000.MSGOK   ANOP
                                           70000000&N       SETC  ''
                                           71000000.MSGZ    ANOP
                                             72000000.*
                                             73000000&SUB     SETC  '&USESUB'
                                             74000000         AIF   ('&SUB' NE '
').GOTSUB                                    75000000&SUB       SETC  '&SUBAD'
                                               76000000         AIF   ('&SUB' NE
 '').GOTSUB                                    77000000&SUB     SETC  '&#PUTSUB'
                                               78000000         AIF   ('&  SUB'
NE '').GOTSUB                                    79000000&SUB     SETC  'PUTSYSP
'                                                80000000.GOTSUB  ANOP
                                                 81000000.*
                                                   82000000         AIF   ('&SUB
'(1,1) EQ '(').BALR                                83000000         AIF   ('&SUB
'(1,1) EQ '%').BALINDR                             84000000&N       BAL   &@.14,
&SUB          GO DISPLA  Y THE MESSAGE               85000000         AGO   .MEN
D                                                    86000000.BALR    ANOP
                                                     87000000&N       BALR  &@.1
4,&SUB(1)       GO DISPLAY THE MESSAGE                 88000000         AGO   .M
END                                                    89000000.BALINDR ANOP
                                                       90000000&A1      SETA  0
                                                         91000000.LP1     ANOP
                                                         92000000&A1      SETA
&A1+1                                                    93000000         AIF
('&SUB'(1,&A1) NE '&SUB').LP1                            94000000&C1        SETC
  '&SUB'(2,&A1-1)                                          95000000&N       L
  &@.15,=A(&C1)       --> MESSAGE PRINTING ROUTINE         96000000         BALR
  &@.14,&@.15         GO DISPLAY THE MESSAGE               97000000.MEND    MEND
  #+ PUT                                           04/01 S21 98000000./ ADD NAME
=  #REGS    0101-03155-03234-0950-00518-00518-00000-DBCOLE
MACRO                                                          #REGS
#REGS &GEN=YES                                                 00700000.*
                                                                 00900000.*
                                                                 01100000.*
                                                       06/01 S21 01300000.* LAST
 CHANGE DATE - JUNE 29, 2001                             06/01 S21 01500000.*
               - Added register width equates for        06/01 S21 01700000.*
                 R-regs, AR-regs, CR-regs, and FPR-regs. 06/01 S21 01900000.*
               - Added logic to define the reg  ister and  06/01 S21 02100000.*
                   width equates in a hidden dsect. (This  06/01 S21 02300000.*
                   is done in support of z/XDC's ADATA     08/03 Z12 02500000.*
                   displays. Doing this helps to reduce    06  /01 S21 02700000.
*                    clutter.)                               06/01 S21 02900000.
*                                                            09/96 X32 03100000.
* LAST CHANGE DATE - SEPTEMBER 24, 1996                      09/96 X32 03300  00
0.*                  - ADDED SUPPORT FOR THE AUTOMATIC         09/96 X32 0350000
0.*                    RECOGNITION OF (BUT *NOT* GENERATION    10/96 X32 0370000
0.*                    OF) "R" REGISTER NAMES.                 09/96 X32 0390000
0.*                    - MAILING ADDRESS CHANGE.                 09/96 X32 04100
000.*                                                                  DBC 04300
000.* LAST CHANGE DATE - SEPTEMBER 11, 1984                            DBC 04500
000.*                  - A  DDED SUPPORT FOR PL/S STYLE REGISTER         DBC 047
00000.*                    NAMES (@00, @01, ---, @15).                   DBC 049
00000.*                  - ATTEMPTS TO MULTIPLY DEFINE THE SAME          DBC 051
00000.*                    NAME TO THE SA  ME VALUE WILL NOW BE            DBC 0
5300000.*                    SUPPRESSED WITHOUT ERROR.                     DBC 0
5500000.*                                                                      0
5700000.* LAST CHANGE DATE - OCTOBER 18, 1983
 05900000.*                  - MAILING ADDRESS CHANGE
 06100000.*
 06300000.* LAST CHANGE DATE - APRIL 21, 1981
   06500000.*                  - MACRO NAME CHANGED FROM $REGS TO #REGS
   06700000.*
   06900000.* LAST CHANGE DATE - APRIL 20, 1981
   071  00000.*                  - SUPPORT FOR THE "GEN={YES/NO}" OPERAND IS ADD
ED.  07300000.*
     07500000.* LAST CHANGE DATE - DECEMBER 5, 1977
     07700000.*      +             - SINGLE REGISTER EQUATES NOW LINE UP CORRECT
LY IN  07900000.*                      THE LISTING.
         08100000.*
         08300000.* LAST CHANGE DATE - FEBRUARY 2, 1977
         08500000.*                    - MAILING ADDRESS CHANGE.
           08700000.*
           08900000.* LAST CHANGE DATE - APRIL 1, 1975
           09100000.*
             09300000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS
CONCERNING   09500000.* IT MAY BE ADDRESSED TO:
             09700000.*       COLE SOFTWARE
     09/96 X32 09900000.*       736 FOX HOLLOW ROAD
     09/96 X32 10100000.*       AFTON, VA. 22920
               10300000.*
                 10500000.*
                 10700000.*
                 10900000.*   THE #REGS MACRO HAS TWO FUNCTIONS. ITS PRIMARY
                   11100000.* PURPOSE IS TO PROVIDE A SIMPLE MEANS OF DEFINING S
ETS                11300000.* OF REGISTER NAME EQUATES. ITS SECONDARY PURPOSE IS
 TO                11500000.* CREATE AN INTERNAL TABLE OF ALL REGISTER NAMES
                   11700000.*   COUPLED WITH THEIR NUMERIC VALUES. THIS TABLE IS
 THEN                11900000.* MADE AVAILABLE TO CERTAIN OTHER MACROS (E.G. #EN
TER                  12100000.* AND #EXIT) SO THAT THEY CAN DETERMINE (IF NECESS
ARY)                 12300000.* THE VALUES O  F ANY REGISTER NAMES THAT MIGHT BE
 PASSED                12500000.* TO THEM AS OPERANDS AND SO THAT THEY CAN USE R
EGISTER                12700000.* NAME EQUATES INSTEAD OF REGISTER NUMBERS IN TH
E CODE                 12800000.* THAT THEY GENERATE. THIS   IS SO THAT ALL REFE
RENCES TO                13000000.* REGISTERS WILL BE INDICATED IN THE ASSEMBLER
'S CROSS                 13200000.* REFERENCE LISTING.
                         13400000.*
                       DBC 13600000.*   THE #REGS MACRO CAN BE USED ANY NUMBER O
F TIMES IN                 13800000.* AN ASSEMBLY. EACH TIME THAT IT IS USED, IT
 CAN BE                    14000000.* GIVEN ANY NUMBER OF POSITIONAL OPERANDS. E
ACH OPERA  ND            DBC 14200000.* CAN BE EITHER A SINGLE TERM OR A SUB-LIS
T OF TWO                     14400000.* TERMS.
                             14600000.*
                           DBC 14800000.*   IF AN OPERAND IS A SUB-LIST OF TWO T
ERMS, THEN THE                 15000000.* #REGS MACRO TREATS IT AS A REQUEST TO
DEFINE A SINGLE                15200000.* REGISTER NAME AND IT GENERATES A STATE
MENT OF THE                    15400000            _ .* FORM: " TERM1 EQU TERM2
". THE FIRST TERM MUST BE ANY                15600000.* VALID NAME NOT PREVIOUSL
Y DEFINED. THE SECOND TERM                   15800000.* MUST BE ANY SELF-DEFININ
G TERM OR ANY REGISTER NAME                  16000000.  * THAT HAS BEEN PREVIOUS
LY DEFINED BY THIS OR A                        16200000.* PREVIOUS #REGS MACRO.
IT SHOULD NOT BE AN EXPRESSION,                16400000.* AND IT SHOULD NOT BE A
NY NAME NOT PREVIOUSLY DEFINED.                16600000.* THE VALUE O  F THE SEC
OND TERM SHOULD FALL IN THE RANGE                16800000.* OF 0 THROUGH 15. IF
THE SECOND TERM FITS THESE                       17000000.* REQUIREMENTS, THEN T
HE REGISTER NAME IS SAVED IN AN                  17200000.* INTERNAL TABLE FOR U
SE B  Y OTHER MACROS.                              17400000.*
                                               DBC 17600000.*   IF AN OPERAND IS
 ONLY A SINGLE TERM, THEN THE MACRO                17800000.* TREATS IT AS A REQ
UEST TO DEFINE A FU  LL SET OF                       18000000.* REGISTER NAME EQ
UATES WITH THE GIVEN TERM USED AS THE                18200000.* REGISTER NAME PR
EFIX. AS AN EXAMPLE, ASSUME THAT THE                 18400000.* OPERAND IS "GPR"
. IN THIS CASE, THE #REGS MACRO WI  LL                 18600000.* GENERATE EQUAT
ES DEFINING GPR0, GPR1, ---, GPR15 AND                 18800000.* GPRA, GPRB, --
-, GPRF (EQUAVALENT TO GPR10, GPR11,                   19000000.* ---, GPR15). I
N ADDITION, THE GENERATED REGISTER                       19200000.* NAMES ARE SA
VED IN AN INTERNAL TABLE FOR USE BY OTHER                19400000.* MACROS.
                                                         19600000.*
                                                     DBC 1980000  0.*   A SPECIA
L CASE. IF THE SINGLE TERM IS AN "AT SIGN"             DBC 20000000.* (@), THEN
THEN THE GENERATED NAMES WILL BE @00, @01,             DBC 20200000.* ---, @15.
THIS CONFORMS TO PL/S CONVENTIONS.                     DBC 20400000.*
                                                         DBC 20600000.*   IF #RE
GS IS CALLED WITHOUT OPERANDS, THEN IT IS                    20800000.* TREATED
AS A REQUEST TO GENERATE A FULL SET OF                       21000000.* EQUATES
USING "R" AS T  HE PREFIX.                                     21200000.*
                                                               21400000.*
                                                               21600000.*
                                                                 21800000.* GEN=
{YES/NO/REGS/WIDTHS}   (DEFAULT IS GEN=YES)            06/01 S21 22000000.*
This controls whether or not this macro actually       06/01 S21 22200000.*
generates the EQU statements that create the   desired   06/01 S21 22400000.*
  register names and/or widths equates:                  06/01 S21 22600000.*
                                                         06/01 S21 22800000.*
    - GEN=NO: The desired names (both register names     06+ /01 S21 23000000.*
        and width names) have already been generated         06/01 S21 23200000.
*         elsewhere, so all that's needed here is to         06/01 S21 23400000.
*         update internal tables so that other #name         06/01 S21 23600000.
*         macros can use the equates and understand their    06/01 S21 2  380000
0.*         numeric values.                                    06/01 S21 2400000
0.*                                                            06/01 S21 2420000
0.*       - GEN=YES: Both the register name equates and the    06/01 S21 2440000
0.*           width name equates will be generated.              06/01 S21 24600
000.*                                                            06/01 S21 24800
000.*       - GEN=REGS: Only the register name equates will be   06/01 S21 25000
000.*         generate  d. The width name equates will not.        06/01 S21 252
00000.*                                                            06/01 S21 253
00000.*       - GEN=WIDTHS: Only the witdh name equates will be    06/01 S21 255
00000.*         generated. The regist  er name equates will not.     06/01 S21 2
5700000.*                                                            06/01 S21 2
5900000.*     Note, width equates, when requested, will be           06/01 S21 2
6100000.*     generated only for those register sets   named R, AR,    06/01 S21
 26300000.*     and CR; and only when those register sets are          06/01 S21
 26500000.*     requested.                                             06/01 S21
 26700000.*
   26900000.*
   27100000.*
   27300000.* INNER MACROS USED - #TEST
     27500000.*
     27700000         GBLA  &#REGVAL(255)
     27900000         GBLA  &#TESERR
     28100000           GBLB  &#RREGS             Notifies #TEST whether     06/
01 S21 28300000.*                                 (=1) or not (=0) the Rn    06/
01 S21 28500000.*                                 register set has been      06/
01 S21 28700000.*                                   defined. (If not, then     0
6/01 S21 28900000.*                                 #TEST's REGS= function     0
6/01 S21 29100000.*                                 has to use special code to 0
6/01 S21 29300000.*                                   determine the value of Rn
 06/01 S21 29500000.*                                 names.)
 06/01 S21 29700000         GBLC  &#REGNME(255)
           29900000         GBLC  &#TESRET(20)
             30100000         LCLA  &ARG,&CTR,&NEXT
   06/01 S21 30300000         LCLA  &A2                 WORK VARIABLE
   06/01 S21 30500000         LCLA  &RVALU                                   +
     06/01 S21 30700000         LCLB  &HIDDEN             HIDDEN DSECT EXIS  TS
       06/01 S21 30900000         LCLB  &GOTSTUF            NOT A NULL CALL
       06/01 S21 31100000         LCLC  &LPFX,&C1
                 31300000         LCLC  &GEN1               &GEN's 1ST CHARACTER
       06/  01 S21 31500000         LCLC  &RNAME              REG NAME OR REG SE
T NAME   06/01 S21 31700000.*
         06/01 S21 31900000.*
         06/01 S21 321000  00.*
           06/01 S21 32300000.**************************************************
********** 06/01 S21 32500000.* Issolate &GEN's 1st character. (Supply a default
 if &GEN * 06/01 S21 32700000.* is null.  )
           * 06/01 S21 32900000.************************************************
************ 06/01 S21 33100000.*
             06/01 S21 33300000&GEN1    SETC  '&GEN(1)Y  '(1,1)
               06/01 S21 33500000.*
               06/01 S21 33700000.*
               06/01 S21 33900000.*
                 06/01 S21 34100000.********************************************
**************** 06/01 S21 34300000.* If equates are to be generated, then first
 generate a    * 06/01 S21 34500000.* hidden dsect to enclose them. (This reduce
s dis  play      * 06/01 S21 34700000.* clutter for ADATA displays.)
                 * 06/01 S21 34900000.******************************************
****************** 06/01 S21 35100000.*
                   0  6/01 S21 35300000&A2      SETA  ('YRW' FIND '&GEN1')
                     06/01 S21 35500000         AIF   (&A2 EQ 0).HIDEZ1
                     06/01 S21 35700000         PUSH  PRINT,NOPRINT
                     06/01 S21 3590  0000         PRINT OFF,NOPRINT
                       06/01 S21 36100000HIDDEN_DSECT DSECT ,
                       06/01 S21 36300000         POP   PRINT,NOPRINT
                       06/01 S21 36500000&HIDDEN    SETB  (1)
                         10/01 S21 36600000.HIDEZ1  ANOP
                         06/01 S21 36700000.*
                         06/01 S21 36900000.*
                           06/01 S21 37100000.*
                           06/01 S21 37300000.**********************************
************************** 06/01 S21 37500000.* Find the next available slot in
  the register names       * 06/01 S21 37700000.* global array.
                           * 06/01 S21 37800000.********************************
**************************** 06/01 S21 38000000.*
               +               09/96 X32 38200000&NEXT    SETA  0
                                           38400000.LP1     AIF   (&NEXT GE 255)
.END1                                      38600000&NEXT    SETA  &NEXT+1
                                           38800000         AIF   ('&#REGNME(&NE
XT)' NE '').LP1                              39000000&NEXT    SETA  &NEXT-1
                                             39200000.END1    ANOP
                                             39400000.*
                                   06/01 S2  1 39600000.*
                                     06/01 S21 39800000.*
                                     06/01 S21 40000000.************************
************************************ 06/01 S21 40200000.*   Main operands scanni
ng loop.                             * 06/01 S21 40400000.**********************
************************************** 06/01 S21 40600000.*
                                       09/96 X32 40800000&ARG     SETA  0
                                                   41000000.LP2     AIF   (&ARG
GE N'&SYSLIST).DONE                                41200000&ARG     SETA  &ARG+1
                                                   41400000         AIF   (N'&SY
SLIST(&A  RG) EQ 0).LP2                              41600000         AIF   (&NE
XT LT 255).NOTFULL                                   41800000         MNOTE 4,'T
HE REGISTER NAME SAVE TABLE IS FULL.'                42000000         MNOTE 4,'T
HE MAXIMUM CAPACITY IS   255 ENTRIES.'                 42200000.NOTFULL ANOP
                                                       42400000.*
                                             06/01 S21 42600000.*
                                               06/01 S21 42800000.*
                                               06/01 S21 43000000.**************
********************************************** 06/01 S21 43200000.* Distinguish
between individual register definitions and  * 06/01   S21 43400000.* register s
et definitions.                                * 06/01 S21 43600000.************
************************************************ 06/01 S21 43800000.*
                                                 06/01 S21 44000000&  RNAME   SE
TC  '&SYSLIST(&ARG,1)'                             06/01 S21 44200000         AI
F   (N'&SYSLIST(&ARG) GE 2).ONEREG                           44400000.*
                                                   06/01 S21 44600000.*
                                                     06/01 S21 44800000.*
                                                     06/01 S21 45000000.********
**************************************************** 06/01 S21 45200000.* A regi
ster set is to be   generated. Determine the         * 06/01 S21 45400000.* regi
ster prefix name to be used for the values to be     * 06/01 S21 45600000.* assi
gned to the new register set.                        * 06/01 S21 45800000.******
*********************************+ ********************* 06/01 S21 46000000.*
                                                           06/01 S21 46200000.DE
FAULT ANOP  ,                                              06/01 S21 46400000&GO
TSTUF SETB  (1)                                            06/01 S21 46600000
      #TEST PFIX=                                                      46800000&
LPFX    SETC  '&#TESRET(1)'                                            47000000.
*                                                            06/01 S21 47200000.
*                                                              06/01 S21 4740000
0.*                                                            06/01 S21 4760000
0.************************************************************ 06/01 S21 4780000
0.* If I'm just here to create width equates, then skip all  * 06/01 S21 480  00
000.* other register set processing.                           * 06/01 S21 48200
000.************************************************************ 06/01 S21 48400
000.*                                                            06/01 S21 48600
000           AIF   ('&GEN1' EQ 'W').RGENZ                         06/01 S21 488
00000.*                                                            06/01 S21 490
00000.*                                                            06/01 S21 492
00000.*                                                              06/01 S21 4
9400000.************************************************************ 06/01 S21 4
9600000.* The "@" register set needs to have two decimal digits in * 06/01 S21 4
9800000.* all of its names. This requires   that leading zeros be    * 06/01 S21
 50000000.* generated (@00, @01, ---, @15), and that's something     * 06/01 S21
 50200000.* that this macro normally does not do. Accordingly, the   * 06/01 S21
 50300000.* following special code is needed. It generat  es and       * 06/01 S
21 50500000.* tables each of the @nn names individually.               * 06/01 S
21 50700000.************************************************************ 06/01 S
21 50900000.*
 DBC 51100000         AIF   ('&RNAME' NE '@').NOT@                         06/01
 S21 51300000&CTR     SETA  0-1
 DBC 51500000.LP@     AIF   (&CTR EQ 15).END@
 DBC 5  1700000&CTR     SETA  &CTR+1
   DBC 51900000&RNAME   SETC  '0&CTR'                                        06/
01 S21 52100000&RNAME   SETC  '&RNAME'(K'&RNAME-1,2)                         06/
01 S21 52300000           #REGS (@&RNAME,&LPFX&CTR),GEN=&GEN1                  0
6/01 S21 52500000         AGO   .LP@
     DBC 52700000.END@    ANOP  ,                                              0
6/01 S21 52900000.*
 06/01 S21 53100000.************************************************************
 06/01 S21 53300000.* The recursive calls to #REGS has increased the &#REGNME  *
 06/01 S21 53500000.* table without my knowledge. S+ o I now need to scan that
 * 06/01 S21 53700000.* table to learn its new si  ze.
   * 06/01 S21 53900000.********************************************************
**** 06/01 S21 54100000         AIF   (&NEXT GE 255).LP2
     06/01 S21 54300000&NEXT    SETA  &NEXT+1
             DBC 54500000         AIF   ('&#REGNME(&NEXT)' NE '').END@
             DBC 54700000&NEXT    SETA  &NEXT-1
             DBC 54900000         AGO   .LP2
               DBC 55100000.NOT@    ANOP
               DBC 55300000.*
         06/01 S21 55500000.*
         06/01   S21 55700000.*
           06/01 S21 55900000.**************************************************
********** 06/01 S21 56100000.* See whether or not the register set has already
been     * 06/01 S21 56300000  .* generated. If so, then don't generate it again
.          * 06/01 S21 56500000.************************************************
************ 06/01 S21 56700000.*
                   DBC 56900000&CTR     SETA    0
                         57100000.LP2A    AIF   (&CTR GE &NEXT).PXSAVE
                         57300000&CTR     SETA  &CTR+1
                         57500000         AIF   (&#REGVAL(&  CTR) LT 16 OR '&#RE
GNME(&CTR)' NE '&RNAME').L*57700000               P2A
                 06/01 S21 57900000         AGO   .RGENZ
                 06/01 S21 58100000.PXSAVE  ANOP  ,
                   06/01 s21 58300000.*
                   06/01 S21 58500000.*
                   06/01 S21 58700000.*
                     06/01 S21 58900000.****************************************
******************** 06/01 S21 59100000.* If there's room in the global tables,
then save this     * 06/01 S21 59300000.* register set's name along with a signa
l (16) that it is  * 06/  01 S21 59500000.* a set name, not an individual name.
                     * 06/01 S21 59700000.**************************************
********************** 06/01 S21 59900000.*
                       06/01 S21 601000  00         AIF   (&NEXT GE 255).NOSAVE1
                         06/01 s21 60300000&NEXT    SETA  &NEXT+1
                                   60500000&#REGNME(&NEXT) SETC '&RNAME'
                         06/01 S21 60700000&#REGVAL(&N  EXT) SETA 16
                                     60900000.*
                           06/01 S21 61100000.*
                           06/01 S21 61300000.*                      +
                             06/01 S21 61500000.*******************  ***********
****************************** 06/01 S21 61700000.* If I'm defining the Rn regis
ter set, then notify #TEST   * 06/01 S21 61900000.* of its exsitance.
                             * 06/01 S21 62100000.******************************
**  **************************** 06/01 S21 62300000.*
                                 09/96 X32 62500000         AIF   ('&RNAME' NE '
R').NOTR                         06/01 S21 62600000&#RREGS  SETB  (1)
                                   09/96 X32 62800000.NOTR    ANOP
                                   09/96 X32 63000000.NOSAVE1 ANOP  ,
                                   06/01 S21 63200000.*
                                     09/96 X32 63400000.*
                                     06/01 S21 63600000.*
                                     06/01 S21 63800000.************************
************************************ 06/01 S21   64000000.* Determine whether or
 not register name equates are       * 06/01 S21 64200000.* actually to be gener
ated. (This support is provided in   * 06/01 S21 64400000.* case the register na
me equates are actually generated    * 06/01 S21 64600000.* ou  tside of this ma
cro. In that case, specifying GEN=NO   * 06/01 S21 64800000.* allows this macro
to table register value information    * 06/01 S21 65000000.* without actually c
reating duplicate equates.)            * 06/01 S21 65200000.*****************  *
****************************************** 06/01 S21 65400000.*
                                           06/01 S21 65600000&A2      SETA  ('YR
' FIND '&GEN1')                            06/01 S21 65800000         AIF   (&A2
 EQ 0).RGENZ                                 06/01 S21 66000000.*
                                             06/01 S21 66200000.*
                                             06/01 S21 66400000.*
                                               06/01 S21 66600000.**************
********************************************** 06/01 S21 66800000.* We're good t
o go. Build the equates.                     * 06/01 S21 67000000.**************
******************************************  **** 06/01 S21 67200000.*
                                                 06/01 S21 67400000&CTR     SETA
  0                                                        67600000&C1      SETC
  '&RNAME'                                       06/01 S2  1 67800000.*
                                                   06/01 S21 68000000.LP3     AI
F   (&CTR GT 15).HEX                                         68200000&C1&CTR  EQ
U   &LPFX&CTR                                                68400000&CT  R
SETA  &CTR+1                                                   68600000
AGO   .LP3                                                     68800000.*
                                                     06/01 S21 69000000.HEX
ANOP   +                                                         69200000&RNAME.
A EQU     &RNAME.10                                                69400000&RNAM
E.B EQU   &RNAME.11                                                69600000&RNAM
E.C EQU   &RNAME.12                                                69800000&RNAM
E.D EQU   &RNAME.13                                                  70000000&RN
AME.E EQU   &RNAME.14                                                70200000&RN
AME.F EQU   &RNAME.15                                                70400000.RG
ENZ   ANOP  ,                                                06/01 S21 70600000.
*                                                            06/01 S21 70800000.
*                                                            06/01 S21 71000000.
*                                                              06/01 S21 7120000
0.************************************************************ 06/01 S21 7140000
0.* Add register width equates for R-regs, AR-regs, CR-regs, * 06/01 S21 7160000
0.* and/or FPR-regs.                                         * 06  /01 S21 71800
000.************************************************************ 06/01 S21 72000
000.*                                                            06/01 S21 72200
000&A2      SETA  ('YW' FIND '&GEN1')                            06/01 S21 72400
  000         AIF   (&A2 EQ 0).WGENZ                               06/01 S21 726
00000.*                                                            06/01 S21 728
00000         AIF   ('&RNAME' NE 'AR').AWIDTHZ                     06/01 S21 730
00000         A  IF   (D'AR# AND D'ARW AND D'ARZW).AWIDTHZ           06/01 S21 7
3200000         AIF   (D'AR#).AR#Z                                   06/01 S21 7
3400000AR#      EQU   16                  #'AR-REGS                  06/01 S21 7
3600000.AR#Z    AIF   (D'ARW).  ARWZ                                   06/01 S21
 73800000ARW      EQU   4                   o/ARCH AREGS WIDTH         06/01 S21
 74000000.ARWZ    AIF   (D'ARZW).AWIDTHZ                               06/01 S21
 74200000ARZW     EQU   4                   z  /ARCH AREGS WIDTH         06/01 S
21 74400000.AWIDTHZ ANOP  ,                                              06/01 S
21 74600000.*                                                            06/01 S
21 74800000         AIF   ('&RNAME' NE 'CR').CWIDTHZ                       06/01
 S21 75000000         AIF   (D'CR# AND D'CRW AND D'CRZW).CWIDTHZ           06/01
 S21 75100000         AIF   (D'CR#).CR#Z                                   06/01
 S21 75300000CR#      EQU   16                  #'CR-REGS                    06/
01 S21 75500000.CR#Z    AIF   (D'CRW).CRWZ                                   06/
01 S21 75700000CRW      EQU   4                   o/ARCH CREGS WIDTH         06/
01 S21 75900000.CRWZ    AIF   (D'CRZW).CWIDTHZ                               06/
01 S21 761  00000CRZW     EQU   8                   z/ARCH CREGS WIDTH         0
6/01 S21 76300000.CWIDTHZ ANOP  ,                                              0
6/01 S21 76500000.*                                                            0
6/01 S21 76510000        +  AIF   ('&RNAME' NE 'FPR').FWIDTHZ
 06/01 S21 76530000           AIF   (D'FPR# AND D'FPRW AND D'FPRZW).CWIDTHZ
   06/01 S21 76550000         AIF   (D'FPR#).FPR#Z
   06/01 S21 76570000FPR#     EQU   16                  #'FPR-REGS
   06/01 S21 76590000.FPR#Z   AIF   (D  'FPRW).FPRWZ
     06/01 S21 76600000FPRW     EQU   8                   o/ARCH FPREGS WIDTH
     06/01 S21 76620000.FPRWZ   AIF   (D'FPRZW).CWIDTHZ
     06/01 S21 76640000FPRZW    EQU   8                     z/ARCH FPREGS WIDTH
       06/01 S21 76660000.FWIDTHZ ANOP  ,
       06/01 S21 76680000.*
       06/01 S21 76700000         AIF   ('&RNAME' NE 'R').RWIDTHZ
         06/01 S21 76900000         AIF   (D'R# AND D'RW AND D'RZW).RWIDTHZ
         06/01 S21 77100000         AIF   (D'R#).R#Z
         06/01 S21 77300000R#       EQU   16                  #'(G)REGS
           06/01 S21 77500000.R#Z     AIF   (D'RW).RWZ
           06/01 S21 77700000RW       EQU   4                   o/ARCH (G)REGS W
IDTH       06/01 S21 77900000.RWZ     AIF   (D'RZW).RWIDTHZ
           06/01 S  21 78100000RZW      EQU   8                   z/ARCH (G)REGS
 WIDTH       06/01 S21 78300000.RWIDTHZ ANOP  ,
             06/01 S21 78500000.*
             06/01 S21 78700000.W  GENZ   ANOP  ,
               06/01 S21 78900000         AGO   .LP2
                         79100000.*
               06/01 S21 79300000.*
                 06/01 S21 79500000.*
                 06/01 S21 79700000.********************************************
**************** 06/01 S21 79900000.* An individual register na  me is to be def
ined. Vcheck     * 06/01 S21 80100000.* against excess information.
                 * 06/01 S21 80300000.******************************************
****************** 06/01 S21 80500000.*
                     09/96 X32 80700000.ONEREG  ANOP
                               80900000&GOTSTUF SETB  (1)
                     06/01 S21 81100000.*
                       09/96 X32 81300000         AIF   (N'&SYSLIST(&ARG) EQ 2).
NOXCESS                          81500000         MNOTE 4,'"&SYSLIST(&ARG)" CONT
AINS EXCESS INFORMATION.'        81700000         MNOTE 4,'THE EXCESS WILL BE IG
NORED.'                            81900000.NOXCESS ANOP  ,
                         06/01 S21 82100000.*
                         06/01 S21 82300000.*
                         06/01 S21 82500000            _ .*
                                       06/01 S21 82700000.**********************
************************************** 06/01 S21 82900000.* Determine the numeri
c value of the register's intended   * 06/01 S21 83100000.  * value.
                                       * 06/01 S21 83300000.********************
**************************************** 06/01 S21 83500000.*
                                         06/01 S21 83700000         #TEST   REGS
=&SYSLIST(&ARG,2)                          06/01 S21 83900000         AIF   (&#T
ESERR EQ 0).REGOK                                    84100000         MNOTE 4,'T
HE VALUE OF "&SYSLIST(&ARG,2)" IS NOT DETERMINABLE.' 84300000         AGO   .REG
EQU               GO DEFINE THE EQUATE       06/01 S21 84500000.*
                  ANYWAY.                    06/01 S21 84700000.REGOK   ANOP
                                                   DBC 84900000&RVALU   SETA  &#
TESRET(1)                                      06/01 S21 85100000.*
                                               06/01 S21 85300000.*
                                               06/01 S21 85500000.*
                                                 06/01 S21 85700000.************
************************************************ 06/01 S21 85900000.* Scan the g
lobal tables to determine whether or not this  * 06/01 S21 86100000.* name has a
lready been defined. If so, then ignore the    * 06/0  1 S21 86300000.* definiti
on.                                              * 06/01 S21 86500000.**********
************************************************** 06/01 S21 86700000.*
                                                   06/01 S21 8690000  0&CTR
SETA  0                                                        87100000.LP3A
AIF   (&CTR GE &NEXT).RGFITS                         06/01 S21 87300000&CTR
SETA  &CTR+1                                                   87500000
AIF     (&#REGVAL(&CTR) NE &RVALU OR '&#REGNME(&CTR)' NE '&RNAME*87600000
        ').LP3A                                        06/01 S21 87800000
  AGO   .LP2                                                 DBC 88000000.RGFITS
  ANOP  ,                                                06/01 S21 88200000.*
                                                         06/01 S21 88400000.*
                                                         06/01 S21 88600000.*
                                                           06/01 S21 88800000.**
********************************************************** 06/01 S21 89000000.*
If there's room, then table the new register's name and  * 06/01 S21 89200000.*
value.                                                     * 06/01 S21 89400000.
************************************************************ 06/01 S21 89600000.
*                                                            06/01 S21 89800000
        AIF   (&NEXT GE 255).RGTABLD                         06+ /01 S21 9000000
0&NEXT    SETA  &NEXT+1                                                    90200
000&#REGNME(&NEXT) SETC '&RNAME'                                 06/01 S21 90400
000&#REGVAL(&NEXT) SETA &RVALU                                   06/01 S21 90600
000.RGTABLD ANOP  ,                                              06/01 S21 9  08
00000.*                                                            06/01 S21 910
00000.*                                                            06/01 S21 912
00000.*                                                            06/01 S21 914
00000.*****  ******************************************************* 06/01 S21 9
1600000.* Unless specifically ordered not to, then generate the    * 06/01 S21 9
1800000.* register name equate.                                    * 06/01 S21 9
2000000.******************  ****************************************** 06/01 S21
 92200000.*                                                            06/01 S21
 92400000.REGEQU  ANOP  ,                                              06/01 S21
 92600000&A2      SETA  ('YR' FIND '&GEN1  ')                            06/01 S
21 92800000         AIF   (&A2 EQ 0).LP2                                 06/01 S
21 93000000&RNAME   EQU   &SYSLIST(&ARG,2)
   93200000         AGO   .LP2
     93400000.*                                                            06/01
 S21 93600000.*                                                            06/01
 S21 93800000.*                                                              06/
01 S21 94000000.************************************************************ 06/
01 S21 94200000.* Done. All of the macro's register set/name operands have * 06/
01 S21 94400000.* been processed. If the oeprands were all null, then      * 06/
01 S21   94600000.* loop back to generate the Rn register name set by        * 0
6/01 S21 94800000.* default.                                                 * 0
6/01 S21 95000000.************************************************************ 0
6/01 S21 95200000.*
 06/01 S21 95400000.DONE    ANOP
           95600000&RNAME   SETC  'R'
 06/01 S21 95800000         AIF   (N  OT &GOTSTUF).DEFAULT
   06/01 S21 96000000.*
   06/01 S21 96200000.*
   06/01 S21 96400000.*
     06/01 S21 96600000.********************************************************
**** 06/01 S21 96800000.* If the equates were generated within a hidden dsect,
   * 06/01 S21 97000000.* then restore the caller's xSECT now.
     * 06/01 S21 97200000.******************************************************
****** 06/01 S21 97400000.*
       06/01 S21 97600000         AIF   (NOT &HIDDEN).HIDEZ2
 +       10/01 S21 97900000         PUSH  PRINT,NOPRINT
           06/01 S21 98200000         PRINT OFF,NOPRINT
           06/01 S21 98400000.*
           10/01 S21 98460000         AIF   ('&SYSSTYP' EQ '').NULSECT
           10/  01 S21 98530000&SYSLOC  &SYSSTYP ,
             10/01 S21 98600000         AGO   .SECTZ
             10/01 S21 98630000.NULSECT ANOP  ,
             10/01 S21 986600  00&SYSLOC  LOCTR ,
               07/02 Z12 98700000.SECTZ   ANOP  ,
               10/01 S21 98730000.*
               10/01 S21 98760000         PO  P   PRINT,NOPRINT
                 06/01 S21 98800000.HIDEZ2  ANOP  ,
                 06/01 S21 99000000.*
                 06/01 S21 99200000.*
                   06/01 S21 99400000.*
                   06/01 S21 99600000         MEND  #REGS
                   04/01 S21 99800000./ ADD NAME=#RELOAD  0100-03155-03155  -141
5-00066-00066-00000-DBCOLE5                     MACRO
                               #RELOAD &N       #RELOAD &D,&LCLBASE=NONE,&PGMBAS
E=                             02000000.*
                                 04000000.*
                                 05000000.*
                                 07000000.* LAST CHANGE DATE - OCTOBER 18, 1983
                                   08000000.*                  - MAILING ADDRESS
 CHANGE                            10000000.*
                                   11000000.* LAST CHANGE DATE - APRIL 21, 1981
                                   1300  0000.*                  - MACRO NAME CH
ANGED FROM $RELOAD TO #RELOAD.       14000000.*
                                     16000000.* LAST CHANGE DATE - FEBRUARY 2, 1
977                                  17000000.*                    - MAILING ADD
RESS CHANGE.                           19000000.*
                                       20000000.* LAST CHANGE DATE - AUGUST 23,
1976                                   22000000.*
                                         23000000.* THIS MACRO WAS WRITTEN BY DA
VID B. COLE. ANY QUESTIONS CONCERNING IT 25000000.* MAY BE DIRECTED TO:
                                         26000000.*       RR#2 BOX 712
                                           28000000.*       AFTON, VA. 22920
                                           29000000.*
                                           31000000.*
                   +                         32000000.*
                                               34000000         GBLA  &#TESERR
                                               35000000         GBLC  &#TESRET(2
0)                                             37000000         GBLC  &#BS(14)
                                                 38000000         LCLA  &A1,&A2
                                                 40000000         LCLC  &PBA,&#
                                                 41000000&#       SETC  '&SYSNDX
.'                                                 43000000         AIF   ('&#BS
(14)' EQ '').MEND                                  44000000&PBA     SETC  '#RL&#
.B'                                                46000000         AIF   (K'&PG
MBASE EQ 0).RTY                                    47000000           AIF   ('&P
GMBASE' EQ '&PGMBASE(1)').GHJ                        49000000         AIF   ('&#
BS(13)' EQ '&PGMBASE(1)').KLM                        50000000         #TEST REGS
=(&#BS(13),&PGMBASE(1))                              52000000         AIF   (  &
#TESERR NE 0).MNO                                      53000000         AIF   ('
&#TESRET(1)' EQ '&#TESRET(2)').KLM                     55000000.MNO     ANOP
                                                       56000000&N       LR    &#
BS(13),&PGMB  ASE(1) LOAD 1ST PROGRAM BASE               58000000         AGO
.HK                                                      59000000.KLM     ANOP
                                                         61000000&N       DS
0H                  1ST PRO  GRAM BASE ALREADY LOADED      62000000         AGO
  .HK                                                      64000000.GHJ     ANOP
                                                           65000000&PBA     SETC
  '&PGMBASE'                                                 67000000.RTY     AI
F   ('&LCLBASE' NE 'NONE').GJ                                68000000&N       BA
LR  &#BS(13),0          GET TEMPORARY BASE                   70000000         L
    &#BS(13),&PBA-*(,&#BS(13)) LOAD 1ST PROGRAM BASE           71000000
AGO   .HK                                                      73000000.GJ
ANOP                                                           74000000&N
L     &#BS(13),&PBA       LOAD 1ST PROGRAM BASE                76000000.  HK
  ANOP                                                           77000000&A1
  SETA  13                                                       79000000&A2
  SETA  13                                                       80000000.LP3
  AIF     (&A1 EQ 1).END3                                          82000000&A1
    SETA  &A1-1                                                    83000000
    AIF   ('&#BS(&A1)' EQ '').LP3                                  85000000
    LA    &#BS(&A1),X'  FFF'(,&#BS(&A2)) LOAD NEXT BASE              86000000&A2
      SETA  &A1                                                      88000000
      AGO   .LP3                                                     89000000.EN
D3    #USING                         +                                 91000000
        AIF   (K'&PGMBASE NE 0).MEN  D                                   9200000
0         B     #RL&#.Y             SKIP OVER DATA AREA                  9400000
0#RL&#.B  DC    A(&#BS(14))         PROGRAM BASE ADDRESS                 9500000
0#RL&#.Y  DS    0H                  RECEIVE BRANCH                         97000
000.MEND    MEND  #RELOAD                                        04/01 S21 98000
000./ ADD NAME=#SAL
            MACRO                                                            000
00100&N       #SAL  &D                                                       000
00200.*                                                                      000
00300.*                                                                      000
  00400.*                                                                      0
0000500.* LAST CHANGE DATE - OCTOBER 18, 1983                                  0
0000600.*                  - MAILING ADDRESS CHANGE                            0
0000700.*
 00000800.* LAST CHANGE DATE - APRIL 21, 1981
 00000900.*                  - MACRO NAME CHANGED FROM $SAL TO #SAL.
 00001000.*
   00001100.* LAST CHANGE DATE - FEBRUARY 2, 1977
   00001200.*                  - MAILING ADDRESS CHANGE.
   00001300.*
     00001400.* LAST CHANGE DATE - FEBRUARY 2, 1976
     00001500.*
     00001600.* THIS MACRO WAS PUT TOGETHER BY DAVID B. COLE  . ANY QUESTIONS
       00001700.* CONCERNING IT MAY BE ADDRESSED TO:
       00001800.*       RR#2 BOX 712
       00001900.*       AFTON, VA. 22920
         00002000.*
         00002100.*
         00002200.*
         0  0002300.*   THIS MACRO CAUSES IBM'S STANDARD STAND ALONE LOADER (THE
           00002400.* "BOOTSTRAP" LOADER) TO BE PUNCHED. NO OPERANDS ARE ACCEPTE
D BY THIS  00002500.* MACRO. THE CALL TO THIS MACRO SHOULD BE PLACED PRIOR TO AN
Y START OR 00002600.* CSE  CT CARD.
             00002700.*
             00002800.* THE LOADER PUNCHED BY THIS MACRO IS THE SAME LOADER DIST
RIBUTED BY   00002900.* IBM WITH THE IBC  DASDI AND IBCDMPRS UTILITIES. THE FOLL
OWING          00003000.* INFORMATION IS PERTENANT:
               00003100.* - THE LOADER CONSISTS OF SIX CARDS. IT MUST BE PLACED
IMMEDIATELY    00003200.*   PRECEEDING THE DECK TO BE L+ OADED.
                 00003300.* - THE LOADER WILL LOAD SU  CCESSFULLY FROM ANY CARD
READER OR TAPE     00003400.*   DRIVE. IF A TAPE DRIVE IS USED, THEN BOTH THE LO
ADER AND THE DECK  00003500.*   BEING LOADED MUST BE IN THE FORM OF 80-BYTE UNBL
OCKED CARD IMAGES. 00003600.* - THE LOADER LOADS SINGLE OBJECT DECKS   INTO CORE
 AT THE ABSOLUTE     00003700.*   ADDRESSES DEFINED IN THE DECK ITSELF.
                     00003800.* - THE LOADER ITSELF RESIDES BETWEEN X'7C20' AND
X'7D9C', SO THE DECK 00003900.*   BEING LOADED MUST NO OVERLAY THESE LOCATIONS.
                       00004000.* - THE DECK BEING LOADED MUST DEFINE AN INITIAL
 PSW LOCATED AT        00004100.*   LOCATION X'0'. IT MAY ALSO DEFINE ANY INTERR
UPT OLD AND NEW PSW'S  00004200.*   THAT IT REQUIRES EXCEPT FOR THE EXTERNAL INT
ERRUPT PSW'S SINCE       00004300.*   THESE MIGHT BE OVERLAID IF THE LOADER ENCO
UNTERS AN I/O ERROR      00004400.*   DURING ITS PROCESSING.
                         00004500.* - IF DURING THE LOADING PROCESS AN I/O ERROR
 DOES OCCURE, THEN THE   00004600  .*   LOADER WAITS FOR AN EXTERNAL INTERRUPT U
PON WHICH A RE-READ IS     00004700.*   ATTEMPTED.
                           00004800.* - THE VARIOUS TYPES OF OBJECT CARDS ARE RE
COGNIZED BY TESTING ONLY   00004900.*   COLUMN T  HREE OF EACH CARD.
                             00005000.* - ESD CARDS ARE IGNORED. NO ATTEMPT IS M
ADE TO DEAL WITH EXTERNAL    00005100.*   REFERENCES.
                             00005200.* - RLD CARDS ARE ALSO IG  NORED. SINCE AL
L RELATIVE ADDRESSES IN THE    00005300.*   OBJECT DECK ARE TREATED AS BEING ABS
OLUTE, RLD INFORMATION IS      00005400.*   SIMPLY NOT NEEDED.
                               00005500.* - THE FOLLOWING TXT FIELDS ARE USED.
 NEEDLESS TO SAY, THEY CONTAIN   00005600.*   BINARY DATA.
                                 00005700.*   +DISPL(LEN) - USAGE
                                 00005800.*   +2(1)       - MUST BE THE CHARACTE
R "X" TO IDEN  TIFY THE CARD       00005900.*   +4(4)       - MUST BE THE ABSOLU
TE STARTING ADDRESS FOR THE        00006000.*                 FOLLOWING TEXT DAT
A                                  00006100.*   +10(2)      - MUST BE THE LENGTH
 (IN BYTES) OF THE TEXT DATA         00006200.*   +16(---)    - MUST BE THE TEXT
 DATA TO BE LOADED                   00006300.* - THE END CARD CAUSES THE LOADER
 TO DO THE FOLLOWING:                00006400.*   - THE IPL DEVICE ADDRESS IS ST
ORED AT LOCATION +2(2).              000065  00.*   - A PSW IS LOADED FROM LOCAT
ION +0(8).                             00006600.* - IF A CARD IS OTHERWISE UNREC
OGNIZABLE, THEN IT IS ASSUMED TO BE A  00006700.*   MANUALLY KEYPUNCHED REP CARD
. SUCH CARDS MUST HAVE THE FOLLOWING   00006800.*   FORMAT  :
                                         00006900.*   +6(6)       - THE ABSOLUTE
 ADDRESS (IN HEX) FOR THE START OF THE   00007000.*                 REP DATA
                                         00007100.*   +16(---)    - CONSE+ CUATI
VE 4-DIGIT FIELDS (SEPERATED BY COMMAS) OF 00007200.*                 H  EX REP
DATA.                                        00007300.*   THE REP DATA MUST BE G
IVEN IN UNITS OF 4-DIGIT (2-BYTE) FIELDS.    00007400.*   THE REP ADDRESS NEED N
OT, HOWEVER, BE HALFWORD ALIGNED. NO         00007500.*   VALIDITY CHECKING WHAT
SOEVER   IS DONE. INVALID REP DATA WILL RESULT 00007600.*   IN EITHER UNEXPECTED
 REP'S OR PROGRAM CHECK LOOPS. LEADING ZEROS   00007700.*   MUST BE SUPPLIED. EX
AMPLES:                                        00007800.*    000341    1234,ABCD
,EFGH                                            00007900.*    01ABCC    8888
                                                 00008000.*   REP CARDS MAY BE F
REELY INTERMIXED INTO THE OBJECT DECK.           00008100.*
                                                   00008200.* INNER MACROS USED
- NONE                                             00008300.*
                                                   00008400.*
                                                     00008500.*
                                                     00008600         REPRO
                                                     00008700   0  @   @    &  @
                IBM STANDARD STAND ALONE LOADER DECK 00008800           REPRO
                                                       00008900  @    &  @    &
 @Q   &  '    & 0     -}  &1 &&    0   -   -   0   0   00009000         REPRO
                                                       000091000   -   0   0 nS1
     0 nL1   0 nX1  -0   1   1     1       0  00       1 00009200         REPRO
                                                         00009300  0  7  } &
 0 &  *b 1 nN1  -0  -} b }   1      &1   0  &1   1       00009400         REPRO
                                                           00009500    0 n,    0
  00         nF    0     nF    0     i     1               00009600         REPR
O                                                          00009700  1     0
     '<   &          C                                       00009800         ME
ND                                                           00009900./ ADD NAME
=#SEARCH  0100-03155-03155-1415-00305-00305-00000-DBCOLE5                     MA
CRO                                                            #SEARCH &NME
#SEARCH &DUMMY,           IGNORE POSITIONALS         04/97 X33*00600000
      &CMPRID=,           @'COMPARISON ROUTINE       04/97 X33*01000000
      &DUPRET=LAST,       RETURNS FIRST/LAST DUPLIC8 04/97 X3  3*01300000
        &PFIX=,             REGISTER NAME PREFIX       04/97 X33*01600000
        &SVID=              SAVE AREA NAME             04/97 X33 02000000.*
                                                                 02300000.*
                                                                   02600000.*
                                                         10/02 Z12 02680000.* LA
ST CHANGE DATA - OCTOBER 27, 2002                        10/02 Z12 02760000.*
           +     - Added code to purify the list begin/end 10/02 Z12 02840000.*
                     pointers in R15 and R1 (respectively).  10/02 Z12 02920000.
*                                                            04/97 X33 03000000.
* LAST CHANGE DATE - APRIL 19, 1997                          04/97 X33 03300000.
*                  - Add   the DUPRET= operand.                04/97 X33 0360000
0.*                  - Updated my contact address.             04/97 X33 0400000
0.*                                                                      0430000
0.* LAST CHANGE DATE - SEPTEMBER 8, 198  6                                 04600
000.*                  - COMMENTARY FIXUP                                  05000
000.*                                                                      05300
000.* LAST CHANGE DATE - MAY 14, 1986                                        056
00000.*                  - MAILING ADDRESS CHANGE                            060
00000.*                  - COMMENTARY CLEANUP                                063
00000.*                  - LABEL SRCHCMPR CHANGED TO SRCHPARE                  0
6600000.*                                                                      0
7000000.* LAST CHANGE DATE - OCTOBER 18, 1983                                  0
7300000.*                  - MAILING ADDRESS CHANGE                            0
7600  000.*
 08000000.* LAST CHANGE DATE - SEPTEMBER 8, 1981
 08300000.*                  - THE PARAMETERIZATION OF THE SEARCH ROUTINE WAS
 08600000.*                      CHANGED FROM:
   09000000.*                       - R15 = L'LIST
   09300000.*                       - R0 = L'LIST ENTRY
   09600000.*                         - R1 --> SO-LIST
     10000000.*                    TO:
     10300000.*                       - R15 --> SO-LIST
     10600000.*                         R0 = L'LI  ST ENTRY
       11000000.*                         R1 --> EO-LIST
       11300000.*
       11600000.* LAST CHANGE DATE - APRIL 21, 1981
         12000000.*                  - MACRO NAME CHANGED FROM $SEARCH TO #SEARC
H.       12300000.*
         12600000.* LAST CHANGE DATE - APRIL 20, 1981
           13000000.*                  - "#REGS GEN=NO" SUPPORT ADDED.
           13300000.*
           13600000.* LAST CHANGE DATE - MARCH 12, 1980
           140  00000.*                  - SUPPORT FOR AN EMPTY LIST HAS BEEN FI
XED.         14300000.*
             14600000.* LAST CHANGE DATE - SEPTEMBER 18, 1978
             15000000.*      +             - IF THE LIST HAS MULTIPLE ENTRIES WI
TH THE SAME    15300000.*                      KEY AS THE SEARCH OBJECT, THEN TH
IS ROUTINE NOW   15600000.*                    RETURNS THE LAST (SEQUENTIALLY) S
UCH LIST ENTRY.  16000000.*
                 16300000.* LAST CHANGE DA  TE - FEBRUARY 2, 1977
                   16600000.*                  - MAILING ADDRESS CHANGE
                   17000000.*
                   17300000.* LAST CHANGE DATE - OCTOBER   28, 1975
                     17600000.*
                     18000000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QU
ESTIONS CONCERNING   18300000.* IT MAY BE ADDRESSED TO:
                       18600000.*     Cole Software
             04/97 X33 19000000.*     736 Fox Hollow Road
             04/97 X33 19300000.*     Afton, VA 22920
               04/97 X33 19600000.*     davidbcole@aol.com
               04/97 X33 20000000.*
                         20300000.*
                           20600000.*
                           21000000.*   THIS MACRO GENERATES A SUBROUTINE THAT S
EARCHES A SORTED LIST.  A  21300000.* BINARY SEARCH METHOD IS USED.
                           21600000.*
                             22000000.*   THE SEARCH SUBROUTINE REQUIRES THE FOL
LOWING INPUTS:               22300000.*       - R14 POINTS TO THE RETURN ADDRESS
;                            22600000.*       - R15   POINTS TO THE START OF THE
 LIST TO BE SEARCHED;          23000000.*       - R0 CONTAINS THE LENGTH (IN BYT
ES) OF EACH ENTRY IN           23300000.*         THE LIST;
                               23600000.*       - R1 POINTS PAST TH  E END OF TH
E LIST.                          24000000.*
                                 24300000.*   ON OUTPUT THE CONDITION CODE AND R
1 ARE SET AS FOLLOWS:            24600000.*       - CC=0 (EQUAL) MEANS THAT THE
SE  ARCH OBJECT WAS FOUND. R1      25000000.*         POINTS TO IT. IF THE LIST
CONTAINS MORE THAN ONE OBJECT      25300000.*         HAVING THE SAME KEY AS THE
 SEARCH OBJECT, THEN R1 POINTS TO  25600000.*         either the first or last s
uch duplicate acc  ording  04/97 X33 26000000.*         to the setting of DUPRET
=.                         04/97 X33 26300000.*       - CC=2 (HIGH) MEANS THAT T
HE SEARCH OBJECT WAS NOT FOUND. R1   26600000.*         POINTS TO WHERE IT SHOUL
D BE INSERTED.                         27000000.* ALL OTHER REGISTERS ARE RESTOR
ED.                                    27300000.*
                                       27600000.*   THE SEARCH SUBROUTINE IS NOT
 REENTRANT, BUT IT IS SERIALLY         28000000            _ .* REUSABLE.
                                                     28300000.*
                                                     28600000.*   THE NAME FIELD
                                                     29000000.  * THIS FIELD IS
OPTIONAL. IT CAN BE USED TO DEFINE BOTH THE NAME OF    29300000.* THE SUBROUTINE
 AND THE PREFIX USED IN ALL GENERATED STATEMENT        29600000.* LABELS. IF OMI
TTED, THEN THE CHARACTERS "SRCH" WILL BE USED. IF      30000000.* GIVEN, THEN
NO MORE THAN FOUR CHARACTERS SHOULD BE SPECIFIED.        30300000.*
                                                         30600000.*   THE PFIX=
OPERAND                                                  31000000.* THE #SEARCH
MACRO ATTEMP  TS TO USE REGISTER EQUATES IN ITS EXPANSION  31300000.* WHEN REFER
ING TO REGISTERS. THIS IS SO THAT THE USE OF THE REGISTERS 31600000.* WILL BE IN
DICATED IN THE CROSS REFERENCE LISTING. THE PFIX= OPERAND  32000000.* CAN BE USE
D TO CONTROL THE SET OF EQU  ATES USED. FOR EXAMPLE, IF      32300000.* "PFIX=GP
R" IS SPECIFIED, THEN "GPR1" WILL BE USED WHENEVER THE       32600000.* EXPANSIO
N REFERS TO REGISTER 1.                                      33000000.*   IF THE
 PFIX= OPERAND IS OMITTED, THEN THE SET OF   EQUATES DEFINED   33300000.* BY THE
 FIRST PRIOR #REGS MACRO WILL BE USED. IF THERE IS NO PRIOR    33600000.* #REGS
MACRO, THEN NO EQUATES WILL BE USED.                           34000000.*
                                                                 34300000.*   TH
E CMPRID= OPERAND                                                34600000.* THIS
 OPERAND IS REQUIRED. IT INDICATES THE ADDRESS OF A SUBROUTINE   35000000.* TO B
E USED BY THE SEARCH ROUTINE FOR COMPARING THE SEARCH OBJECT     3530000  0.* WI
TH A LIST ENTRY. EITHER A STATEMENT LABEL OR A REGISTER MAY BE     35600000.* SP
ECIFIED.                                                           36000000.*
THE SPECIFIED COMPARISON ROUTINE IS GIVEN THE FOLLOWING INPUTS:    36300000.*
    - R  14 POINTS TO THE RETURN ADDRESS.                            36600000.*
      - R15 POINTS TO THE LIST ENTRY TO BE COMPARED AGAINST THE      37000000.*
        SEARCH OBJECT.                                               37300000.*
      - R0 THROUGH R6   CONTAIN DATA ON WHICH THE SEARCH ROUTINE IS    37600000.
*         DEPENDANT.                                                   38000000.
*       - R7 THROUGH R13 CONTAIN WHAT WAS IN THEM PRIOR TO THE START   38300000.
*         OF THE SEARCH ROUTINE.                                         3860000
0.* ON OUTPUT THE COMPARISON ROUTINE MUST PROVIDE THE FOLLOWING:         3900000
0.*       - R14 THROUGH R6 MAY NOT BE ALTERED BY THE COMPARISON          3930000
0.*         ROUTINE.                                                       39600
000.*       - R7 THROUGH R13 (EXCEPT THOSE THAT ARE USED AS                40000
000.*         PROGRAM BASES) MAY BE USED FREELY SINCE THE SEARCH ROUTINE   40300
000.*         RESTORES ALL REGISTERS WHEN IT IS FINISHED.          +         406
00000.*       - THE CONDITION CODE MUST BE SET AS FOLLOWS:                     4
1000000.*             - CC=0 (EQUAL) MEANS THAT THE SEARCH OBJECT MATCHES THE  4
1300000.*               CURRENT LIST ENTRY.                                    4
1600000.*             - CC=1 (LOW) MEANS THAT THE SEARCH OBJECT IS LOWER THAN  4
  2000000.*               THE CURRENT LIST ENTRY.
 42300000.*             - CC=2 (HIGH) MEANS THAT THE SEARCH OBJECT IS HIGHER
 42600000.*               THAN THE CURRENT LIST ENTRY.
 43000000.*
   43300000.*   THE SVID= OPERAND
   43600000.* USE THIS OPERAND TO SPECIFY THE NAME OF A 16-WORD REGISTER SAVE
   44000000.* AREA. IF OMITTED  , THEN THE MACRO WILL GENERATE A LOCAL SAVE AREA
.    44300000.*                                                            04/97
 X33 44600000.*   The DUPRET= Operand                                      04/97
 X33 45000000.* Use this operand to control w  hat is returned when the      04/
97 X33 45300000.* search matches duplicate entries.                          04/
97 X33 45600000.*                                                            04/
97 X33 46000000.*     DUPRET=FIRST                                             0
4/97 X33 46300000.*     The first duplicate entry matched is returned to the   0
4/97 X33 46600000.*     caller.                                                0
4/97 X33 47000000.*
 04/97 X33 47300000.*     DUPRET=LAST   (default)
 04/97 X33 47600000.*     The last duplicate entry matched is returned to the
 04/97 X33 48000000.*     caller.
 04/97 X33   48300000.*
             48600000.* INNER MACROS USED - #REGS #TEST #DIE
             49000000.*
             49300000.*
               49600000.*
               50000000         GBLA  &#TESERR
               50300000         GBLC  &#  TESRET(20)
                 50600000         LCLC  &N,&R,&SAVEA
                 51000000&N       SETC  'SRCH'
                 51300000         AIF   (K'&NME EQ 0).G  OTNME
                   51600000&N       SETC  '&NME'
                   52000000.GOTNME  ANOP
                   52300000.*
                     52600000&R       SETC  '&PFIX'
                     53000000         AIF   (K'&PFIX NE 0).GOTPFIX
                     53300000         #TEST PFIX=
     +                 53600000&R       SETC  '&#TESRET(1)'
                         54000000         AGO   .DONPFIX
                         54300000.GOTPFIX #REGS &PFIX,GEN=NO
                         54600000.DONPFIX ANOP
                           55000000.*
                 04/97 X33 55300000         AIF   ('&DUPRET' EQ 'FIRST' OR '&DUP
RET' EQ 'LAST').DUPRETZ 33 55600000         MNOTE 8,'"DUPRET=&DUPRET" not recogn
ized. Valid settings are:' 560000  00         MNOTE 8,'    DUPRET=FIRST'
                   04/97 X33 56300000         MNOTE 8,'    DUPRET=LAST'
                   04/97 X33 56600000         MNOTE 8,'The default setting is DU
PRET=LAST.'        04/97 X33 57000000.DUPRETZ AN  OP
                     04/97 X33 57300000.*
                               57600000*****************************************
********************           58000000*
                     *           58300000* BINARY SEARCH ROUTINE
                     *           58600000*
                     *           59000000* SEARCH ROUTINE INPUTS:
                       *           59300000*        - R14 POINTS TO THE RETURN A
DDRESS                 *           59600000*        - R15 POINTS TO THE START OF
 THE LIST TO BE        *           60000000*          SEARCHED
                         *           60300000*        - R0 CONTAINS THE LENGTH O
F EACH LIST ENTRY (IN    *           60600000*          BYTES)
                         *           61000000*        - R1 POINTS PAST THE END O
F THE LIST               *             61300000*
                           *           61600000* SEARCH ROUTINE OUTPUTS (CC=0):
                           *           62000000         AIF   ('&DUPRET' EQ 'FIR
ST').DR1FRST                 04/97 X33 6230  0000*        - R1 points to the las
t (right-most) list entry    * 04/97 X33 62600000         AGO   .DR1Z
                               04/97 X33 63000000.DR1FRST ANOP
                               04/97 X33 63300000*          - R1 points to the f
irst (left-most) list entry    * 04/97 X33 63600000.DR1Z    ANOP
                                 04/97 X33 64000000*          that was found to
match the given search key.    * 04/97 X33 64300000*        - ALL OTHER R  EGIST
ERS ARE RESTORED,                *           64600000*
                                 *           65000000* SEARCH ROUTINE OUTPUTS (C
C<>0):                           *           65300000*        - R1 POINTS TO THE
 LOCATIO  N IN THE LIST WHERE THE  *           65600000*          SEARCH OBJECT
WOULD HAVE BEEN IF IT EXISTED.     *           66000000*        - ALL OTHER REGI
STERS ARE RESTORED.                *           66300000*
                       +             *           66600000*
                                       *           67000000* COMPARE ROUTINE INP
UTS:                                   *           67300000*        - R15 POINTS
 TO THE LIST ENTRY TO BE COMPARED      *           67600000*          AGAINST TH
E SEARCH OBJECT.                         *           68000000*        - R14 POIN
TS TO THE RETURN ADDRESS.                *           68300000*        - R14 THRO
UGH R6 CONTAIN DATA CRITICAL TO THE      *           68600000*          SEARCH R
OUTINE. THEY MUST NOT BE ALTERED BY THE  *             69000000*          COMPAR
E ROUTINE.                                 *           69300000*        - R7 THR
OUGH R13 ARE UNCHANGED BY THE SEARCH       *           69600000*          ROUTIN
E. THEY CONTAIN THE SAME DATA THAT WAS IN  *           70000000*            THEM
 WHEN THE SEARCH ROUTINE WAS CALLED.         *           70300000*
                                             *           70600000* COMPARE ROUTI
NE OUTPUTS:                                  *           71000000*        - CC=0
   (EQUAL) MEANS THAT THE SEARCH OBJECT        *           71300000*          MA
TCHES THE CURRENT LIST ENTRY.                  *           71600000*        - CC
=1 (LOW) MEANS THAT THE SEARCH OBJECT IS LOWER *           72000000*          TH
AN THE CURRENT L  IST ENTRY.                     *           72300000*        -
CC=2 (HIGH) MEANS THAT THE SEARCH OBJECT IS      *           72600000*
HIGHER THAN THE CURRENT LIST ENTRY.              *           73000000*
                                                   *           73300000*********
****************************************************           73600000
SPACE 1                                                        74000000&SAVEA
SETC  '&N.SAVE'                                                  74300000
  AIF   (K'&SVID EQ 0).GOTSAVE                                   74600000&SAVEA
  SETC  '&SVID'                                                  75000000.GOTSAV
E ANOP                                                             75300000&N
    STM   &R.14,&R.13,&SAVEA  SAVE ALL WORK REGISTERS              75600000
    LA    &R.15,0(,&R.15)     PURIFY @'LIST              10/02 Z12 75700000
    LA    &R.1,0(,&R.1)       PURIFY Z'LIST              10/02 Z12 75800000
      AIF   ('&CMPRID' EQ '&CMPRID(1)').NOCMPR1                      76000000
      #TEST REGS=&CMPRID(1)                                          76300000
      AIF   ( &#TESERR EQ 0 AND '&#TESRET(1)' EQ '2').NOCMPR2        76600000
      LR      &R.2,&CMPRID(1)     POINT TO COMPARISON ROUTINE          77000000
        AGO   .NOCMPR2                                                 77300000.
NOCMPR1 LA    &R.2,&CMPRID        POINT TO COMPARISON ROUTINE          77600000.
NOCMPR2 ANOP                                                             7800000
0         LNR   &R.15,&R.15         GET NEGATIVE SO-LIST                 7830000
0         AR    &R.15,&R.1          GET L'LIST                           7860000
0         SR    &R.1,&R.15          GET S+ O-LIST                          79000
000         SR    &R.14,&R.14         C  LEAR FOR DIVIDE                     793
00000         DR    &R.14,&R.0          GET LIST'S ENTRY COUNT               796
00000         LTR   &R.4,&R.14          GET INITIAL SEARCH INDEX; WAS THE    800
00000*                                  ABOVE DIVIDE E  VEN?                   8
0300000         MNOTE '         #DIE  NZ,''SEARCH LIST SIZE INCOMPATIBLE WITH *8
0600000               LIST ENTRY SIZE'''                             04/97 X33 8
1000000         #DIE  NZ,'SEARCH LIST SIZE INCOMPATIBLE WITH LIST ENT  RY SIZE'
 81300000         LTR   &R.3,&R.15          YES, GET LIST ENTRY COUNT; EMPTY?
 81600000         BZ    &N.NULL             YES, GO RETURN "NOT FOUND"
 82000000         LA    &R.5,1(,&R.3)       NO, GET INITIAL WIDTH; INSURE <>0
 823  00000         LA    &R.6,1              GET COMBO OF "1" AND DIRECTION FLA
G  82600000         SPACE 1
   83000000&N.UP    LCR   &R.6,&R.6           COMPLEMENT FOR TEST
   83300000           CR    &R.5,&R.6           WAS PREV WIDTH 1 AND DIRECTION D
OWN? 83600000         BE    &N.NFND             YES, SEARCH OBJECT NOT FOUND
     84000000&N.UP2   LPR   &R.6,&R.6           NO, SET DIRECTION UP
     84300000         AR    &R.5,&  R.6           FORCE WIDTH TO ROUND UP UPON D
IVIDE  84600000         SRL   &R.5,1              CUT WIDTH IN HALF (ROUND UP)
       85000000         AR    &R.4,&R.5           ADV. SRCH INDEX; SET CC    04/
97 X33 85300000         B     &N.PARE               (PROCEED)                  0
4/97 X33 85600000         SPACE 1
         86000000&N.DOWN  LNR   &R.6,&R.6           SET DIRECTION DOWN
         86300000         SR    &R.5,&R.6           FORCE WIDTH   TO ROUND UP UP
ON DIVIDE  86600000         SRL   &R.5,1              CUT WIDTH IN HALF (ROUND U
P)         87000000         SR    &R.4,&R.5           RETREAT THE SEARCH INDEX
           87300000         SPACE 1
             87600000&N.PARE  BM    &N.UP               SCAN UP IF BELOW THE LIS
T            88000000         CR    &R.4,&R.3           ABOVE THE LIST?
             88300000         BNL   &N.DOWN             YES, MUST SCAN DOWN
             8  8600000         SPACE 1
               89000000         LR    &R.15,&R.4          GET CURRENT POSITION I
NDEX           89300000         MR    &R.14,&R.0          CNVRT TO LIST DISPLACE
MENT           89600000           AR    &R.15,&R.1          CNVRT TO ABSOLUTE EN
TRY POINTER      90000000         BALR  &R.14,&R.2          LINK TO COMPARISON R
OUTINE           90300000         BL    &N.DOWN             TOO HIGH; MUST MOVE
DOWN             90600000         BH    &N.U  P               TOO LOW; MUST MOVE
 UP                91000000         SPACE 1
                   91300000         AIF   ('&DUPRET' EQ 'FIRST').DR2FRST
         04/97 X33 91600000         LCR   &R.6,&R.6        +    A HIT; COMPLEMEN
T FOR TEST           92000000         CR    &R.5,&R.6             WAS PREVIOUS W
IDTH 1 AND DOWN?       92300000         BE    &N.FND              YES, FOUND LAS
T OF DUPLICATE KEYS    92600000         LA    &R.5,4              NO, SET TO FWD
 SCAN PAST DUP KEYS    93000000         B     &N.UP2              LOOP T  O SKIP
 PAST DUP KEYS           93300000         AGO   .DR2Z
               04/97 X33 93600000.DR2FRST ANOP
               04/97 X33 94000000         CR    &R.5,&R.6           WAS PREV. WI
DTH 1 A  ND UP?  04/97 X33 94300000         BE    &N.FND              YES, FND 1
ST OF DUPLICATES 04/97 X33 94600000         LA    &R.5,4              SET TO BAC
KSCAN PAST DUPS  04/97 X33 95000000         B     &N.DOWN             LOOP TO SK
IP PAST DUPS     04/97   X33 95300000.DR2Z    ANOP
                   04/97 X33 95600000         SPACE 1
                             96000000&N.NFND  LA    &R.15,1(,&R.4)      NOT FOUN
D; GET INDEX TO INSERT POINT 96300000           MR    &R.14,&R.0          CNVRT
TO DISPLACEMENT                96600000&N.NULL  AR    &R.15,&R.1          CNVRT
TO ABSOLUTE                    97000000         CLI   *,0                 SET CC
<>0                            97300000&N.FND   ST      &R.15,&SAVEA+12     PRES
ERVE ENTRY PTR IN R1 SLOT        97600000         LM    &R.14,&R.13,&SAVEA  REST
ORE REGISTERS                    98000000         BR    &R.14               RETU
RN TO CALLER WITH CC SET         98300000         AIF   (K'&SVID NE   0).MEND
                                   98600000         SPACE 1
                                   99000000&N.SAVE  DC    16A(0)              RE
GISTER SAVE AREA                   99300000.MEND    MEND  #SEARCH
                           04/01 S21 99600000./ ADD NAME=#SLD
                                                      MACRO
                                     00000100&N       #SLD  &R,&A
                                       00000200.*
                                       00000300.*
                                       00000400.*
                                         00000500.* LAST CHANGE DATE - OCTOBER 1
8, 1983                                  00000600.*                  - MAILING A
DDRESS CHANGE                            00000700.*
                                         000008  00.* LAST CHANGE DATE - APRIL 2
1, 1981                                    00000900.*                  - MACRO N
AME CHANGED FROM SLD TO #SLD.              00001000.*
                                           00001100.* LAST CHA  NGE DATE - FEBRU
ARY 2, 1977                                  00001200.*                  - MAILI
NG ADDRESS CHANGE.                           00001300.*
                                             00001400.* LAST CHANGE DATE - FE+ B
RUARY 3, 1976                                  00001500.*
                                                 00001600.* THIS MACRO WAS WRITT
EN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT 00001700.* MAY BE ADDRESSED TO:
                                                 00001800.*       RR#2 BOX 712
                                                   00001900.*       AFTON, VA. 2
2920                                               00002000.*
                                                   00002100.*
                                                     00002200.*
                                                     00002300.*   THIS MACRO SIM
ULATES A HYPOTHETICAL "SUBTRACT LOGICAL DOUBLE"      00002400.* MACHINE INSTRUCT
ION. ITS FUNCTION IS SIMILAR TO THE "SL"   MACHINE     00002500.* INSTRUCTION EX
CEPT THAT IT OPERATES ON 64-BIT NUMBERS. WARNING, THE  00002600.* RESULTING COND
ITION CODE IS NOT AN ANALOGOUS EXTENSION FROM THE "SL" 00002700.* INSTRUCTION.
                                                         00002800.*
                                                         00002900.* INNER MACROS
 USED - #TEST                                            00003000.*
                                                         00003100.*
                                                           00003200.*
                                                           00003300         GBLA
  &#TESERR                                                 00003400         GBLC
  &#T  ESRET(20)                                             00003500         LC
LA  &A1                                                      00003600         LC
LC  &RODD                                                    00003700&RODD    SE
TC  '&R+1'                                                     00003800
#TEST REGS=&R                                                  00003900
AIF   (&#TESERR NE 0).REGUNKN                                  00004000&A1
SETA  &#TESRET(1)+1                                              00004100
  AIF   (&A1 LE 15).GOTA1                                        00004200&A1
  SETA  0                                                        00004300.GOTA1
  #TEST PFIX=                                                      00004400&RODD
    SETC  '&#TESRET(1)&A1'                                         00004500.REGU
NKN ANOP                                                           00004600&N
    SL    &RODD,4+&A LOW-ORDER DIFFERENCE; HI-ORDER AFFECTED?        00004700
      BC    3,SLD&SYSNDX NO, SKIP                                    00004800
      BCTR  &R,0 YES, ADJUST HI-ORDER                                00004900SLD
&SYSNDX SL  &R,&A GET HI-ORDER DIFFERENCE                            00005000
        MEND                                                           00005100.
/ ADD NAME=#SLDR
        MACRO                                                          00000100&
N       #SLDR &+ R1,&R2                                                  0000020
0.*                                                                        00000
300.*                                                                      00000
400.*                                                                      00000
500.* LAST CHANGE DATE - OCT  OBER 18, 1983                                  000
00600.*                  - MAILING ADDRESS CHANGE                            000
00700.*                                                                      000
00800.* LAST CHANGE DATE - APRIL 21, 1981                                      0
0000900.*                  - MACRO NAME CHANGED FROM $SLDR TO #SLDR.           0
0001000.*                                                                      0
0001100.* LAST CHANGE DATE - FEBRUARY 2, 1977
 00001200.*                  - MAILING ADDRESS CHANGE.
 00001300.*
 00001400.* LAST CHANGE DATE - FEBRUARY 3, 1976
   00001500.*
   00001600.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
IT 00001700.* MAY BE ADDRESSED TO:
   00001  800.*       RR#2 BOX 712
     00001900.*       AFTON, VA. 22920
     00002000.*
     00002100.*
       00002200.*
       00002300.*   THIS MACRO SIMULATES A HYPOTHETICAL "SUBTRACT LOGICAL DOUBLE
       00002400.* REGISTER" MACHINE IN  STRUCTION. ITS FUNCTION IS SIMILAR TO TH
E "SLR"  00002500.* MACHINE INSTRUCTION EXCEPT THAT IT OPERATES ON 64-BIT NUMBER
S.       00002600.* WARNING, THE RESULTING CONDITION CODE IS NOT AN ANALOGOUS EX
TENSION  00002700.* FROM THE "SLR" INSTRUCTION.
           00002800.*
           00002900.* INNER MACROS USED - #TEST
           00003000.*
             00003100.*
             00003200.*
             00003300         GBLA  &#TESERR
               00003400         GBLC  &#TESRET(20)
               00003500         LCLA  &A1
               00003600         LCLC  &R1ODD,&R2ODD
               000  03700&R1ODD   SETC  '&R1+1'
                 00003800         #TEST REGS=&R1
                 00003900         AIF   (&#TESERR NE 0).R1UNKN
                 00004000&A1     +  SETA  &#TESRET(1)+1
                   00004100           AIF   (&A1 LE 15).GOTA1A
                     00004200&A1      SETA  0
                     00004300.GOTA1A  #TEST PFIX=
                     00004400&R1ODD   SETC  '&  #TESRET(1)&A1'
                       00004500.R1UNKN  ANOP
                       00004600&R2ODD   SETC  '&R2+1'
                       00004700         #TEST REGS=&R2
                         00004800         AIF   (&#TESERR NE 0).R2UNKN
                         00004900&A1      SETA  &#TESRET(1)+1
                         00005000         AIF   (&A1 LE 15).GOTA1B
                           00005100&A1      SETA  0
                           00005200.GOTA1B  #TEST PFIX=
                           00005300&R2ODD   SETC  '&#TESRET(1)&A1'
                             00005400.R2UNKN  ANOP
                             00005500&N       SLR   &R1ODD,&R2ODD LOW-ORDER DIFF
ERENCE; HI-ORDER AFFECTED?   00005600         BC    3,SLDR&SYSNDX NO, SKIP
                               00005700         BCTR  &R1,0 YES, ADJUST HI-ORDER
                               00005800SLDR&SYSNDX SLR &R1,&R2 GET HI-ORDER DIFF
ERENCE                         00005900         MEND
                               00006000./   ADD NAME=#SORT    0100-03155-03155-1
415-00288-00288-00000-DBCOLE5                     MACRO
                                 #SORT   &NME     #SORT &SEQ,&PFIX=,&SVID=,&CMPR
ID=                              00600000.*
                                   01000000.*
                                   01300000.*
                                   01700000.***************************  *******
**************************       DBC 02000000.*
                         *       DBC 02400000.* LAST CHANGE DATE - AUGUST 3, 198
7                        *       DBC 02700000.* - MORE COMMENTARY CLEANUP.
                           *       DBC 03100000.*
                           *           03400000.* LAST CHANGE DATE - SEPTEMBER 8
, 1986                     *           03800000.*                  - COMMENTARY
FIXUP                        *           04100000.*                  - CHANGED U
NDEFINED SYMBOL &$TESRET TO  *           04400000.*                    &#TESRET.
                             *           04800000.*
                             *             05100000.* LAST CHANGE DATE - MAY 14,
 1986                          *           05500000.*                  - MAILING
 ADDRESS CHANGE                *           05800000.*                  - COMMENT
ARY CLEANUP                    *           06200000            _ .*
                                             *           06500000.* LAST CHANGE
DATE - OCTOBER 18, 1983                      *           06900000.*
     - MAILING ADDRESS CHANGE                *           07200000.  *
                                               *           07600000.* LAST CHANG
E DATE - APRIL 21, 1981                        *           07900000.*
       - MACRO NAME CHANGED FROM $SORT TO      *           08300000.*
           #SORT.                                *           08600000.*
                                                 *           08900000.* LAST CHA
NGE DATE - APRIL 20, 1981                        *           09300000.*
         - "#REG  S GEN=NO" SUPPORT ADDED.         *           09600000.*
                                                   *           10000000.* LAST C
HANGE DATE - SEPTEMBER 12, 1978                    *           10300000.*
           - THE SORT ROUTINE I  S NOW REENTRANT.    *           10700000.*
             - THE LINKAGE FROM A COMPARE ROUTINE IS *           11000000.*
               DIFFERENT IF THE COMPARE ROUTINE ALSO *           11400000.*
               PERFORMS THE EXCHANGE.                  *           11700000.*
                                                       *           12100000.* LA
ST CHANGE DATE - FEBRUARY 2, 1977                      *           12400000.*
               - MAILING ADDRESS CHANGE.               *             12800000.*
                                                         *           13100000.*
LAST CHANGE DATE - OCTOBER 28, 1975                      *           13400000.*
                                                         *           1380000  0.
* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS  *           14100000.
* CONCERNING IT MAY BE ADDRESSED TO:                       *           14500000.
*       RR#2 BOX 676                                       *           14800000.
*       AFT  ON, VA. 22920                                   *           1520000
0.*                                                          *           1550000
0.*                                                          *           1590000
0.*   THIS MACRO GENERATES   A SUBROUTINE THAT SORTS A LIST OF *           16200
000.* ITEMS USING THE INTERNAL SORTING TECHNIQUE KNOWN AS THE  *           16600
000.* "SHELL SORT".                                            *           16900
000.*                                                            *           173
00000.*   THE SORT SUBROUTINE REQUIRES THE FOLLOWING INPUTS:     *           176
00000.*       - REGISTER 14 POINTS TO THE RETURN ADDRESS;        *           179
00000.*       - REGISTER 15 CONTAINS THE LENGTH (IN BYTE  S) OF    *           1
8300000.*         THE LIST TO BE SORTED;                           *           1
8600000.*       - REGISTER 0 CONTAINS THE LENGTH (IN BYTES) OF     *           1
9000000.*         EACH ENTRY IN THE LIST;                          *   +
 19300000.*       - REGISTER 1 POINTS TO THE START OF THE LIST.        *
   19700000.*                                                          *
   20000000.*   ON OUTPUT THE LIST DESCRIBED BY THE INPUT PARAMETERS   *
   20400000.* IS SORTED IN EITHER ASCENDING OR DESCENDING COALATING    *
   2  0700000.* SEQUENCE (DEPENDING UPON THE MACRO CALL). ALL REGISTERS  *
     21100000.* ARE RESTORED.                                            *
     21400000.*                                                          *
     21700000.*   T  HE SORT SUBROUTINE IS REENTRANT.                      *
       22100000.*                                                          *
       22400000.*   THE NAME FIELD                                         *
       22800000.* THIS FIELD IS OP  TIONAL. IT CAN BE USED TO DEFINE BOTH    *
         23100000.* THE NAME OF THE SUBROUTINE AND THE PREFIX USED IN ALL    *
         23500000.* GENERATED STATEMENT LABELS. IF OMITTED, THE THE          *
         23800000.* CHARACTERS "SORT" WILL BE USE  D. IF GIVEN, THEN NO MORE   *
           24200000.* THAN FOUR CHARACTERS SHOULD BE SPECIFIED.                *
           24500000.*                                                          *
           24900000.*   THE FIRST POSITIONAL OPERAND
 *           25200000.* THIS FIELD IS OPTIONAL. IT CAN BE USED TO SPECIFY
 *           25600000.* WHETHER THE LIST IS TO BE SORTED IN ASCENDING OT
 *           25900000.* DESCENDING ORDER. IF OMITTED, THEN ASCENDING ORDER IS
   *           26200000.* ASSUMED. IF GIVEN, THEN IT SHOULD BE EITHER "A" OR "D"
.  *           26600000.*
   *           26900000.*   THE PFIX= OPERAND
   *             27300000.* THE #SORT MACRO ATTEMPTS TO USE REGISTER EQUATES IN
ITS  *           27600000.* EXPANSION WHEN REFERING TO REGISTERS. THIS IS SO THA
T    *           28000000.* THE USE OF THE REGISTERS WILL BE INDICATED IN THE CR
OSS  *           28300000.* R  EFERENCE LISTING. THE PFIX= OPERAND CAN BE USED T
O      *           28700000.* CONTROL THE SET OF EQUATES USED. FOR EXAMPLE, IF
       *           29000000.* "PFIX=GPR" IS SPECIFIED, THEN "GPR1" WILL BE USED
       *           29400000.* WHENEVER THE E  XPANSION REFERS TO REGISTER 1.
         *           29700000.*   IF THE PFIX= OPERAND IS OMITTED, THEN THE SET
OF       *           30100000.* EQUATES DEFINED BY THE FIRST PRIOR #REGS MACRO W
ILL BE   *           30400000.* USED. IF THERE IS NO PRIOR   #REGS MACRO, THEN N
O EQUATES  *           30700000.* WILL BE USED.
           *           31100000.*
           *           31400000.*   THE CMPRID= OPERAND
             *           31800000.* WHEN THE CMPRID= OPERAND IS OMITTED, THEN FO
R SORTING    *           32100000.* PURPOSES A CLC INSTRUCTION IS USED TO COMPAR
E THE        *           32500000.* ENTIRETY OF EACH LIST ENTRY. IF THIS IS NOT
ACCEPTABL+ E,  *           32800000.* THEN THE CMPRID= OPERAND CAN BE USED TO IN
DICATE   THAT    *           33200000.* ENTRY COMPARISON IS TO BE DONE VIA SUBRO
UTINE CALL. IF   *           33500000.* "CMPRID=0" IS GIVEN, THEN THE PROGRAMMER
 MUST PRELOAD    *           33900000.* THE ADDRESS OF THE COMPARE SUBROUTINE IN
TO THE ADDRESS   *             34200000.* LABELLED "SORTCMPR". ON THE OTHER HAND
, IF CMPRID= IS    *           34600000.* SET EQUAL TO SOMETHING OTHER THAN 0, T
HEN THE GIVEN      *           34900000.* VALUE IS USED EITHER AS THE NAME OF TH
E SUBROUTINE, OR   *           352000  00.* AS A REGISTER CONTAINING A POINTER T
O THE SUBROUTINE.    *           35600000.*   ON ENTRY TO THE COMPARE ROUTINE, R
6 AND R7 POINT TO    *           35900000.* THE TWO LIST ENTRIES TO BE COMPARED.
 THE ENTRY POINTED   *           36300000.* TO BY R6   SEQUENTIALLY PRECEEDS THE
 ONE POINTED TO BY R7. *           36600000.* R14 POINTS TO THE RETURN ADDRESS.
                       *           37000000.*   UPON RETURN, THE COMPARE ROUTINE
 MUST SET THE          *           37300000.* CONDITION CODE AS FOL  LOWS:
                         *           37700000.*       - CC=0 (EQUAL) MEANS THAT
THE TWO LIST ENTRIES ARE *           38000000.*         EQUAL IN VALUE AND SHOUL
D NOT BE EXCHANGED.      *           38400000.*       - CC=1 (LOW) MEANS THAT TH
E   FIRST LIST ENTRY HAS A *           38700000.*         LOWER VALUE THAN THE S
ECOND. WHETHER OR NOT THEY *           39100000.*         ARE EXCHANGED DEPENDS
UPON WHETHER OR NOT THIS   *           39400000.*         IS AN ASCENDING OR DES
CENDING ORDER SOR  T.        *           39700000.*       - CC=2 (HIGH) MEANS TH
AT THE FIRST LIST ENTRY HAS  *           40100000.*         A HIGHER VALUE THAN
THE SECOND. WHETHER OR NOT   *           40400000.*         THEY ARE EXCHANGED D
EPENDS UPON WHETHER OR NOT   *             40800000.*         THIS IS AN ASCENDI
NG OR DESCENDING ORDER SORT.   *           41100000.*       - CC=3 (OVERFLOW) ME
ANDS THAT THE TWO ENTRIES WERE *           41500000.*         OUT OF ORDER AND H
AVE ALREADY BEEN EXCHANGED BY  *           4180  0000.*         THE COMPARE ROUT
INE. THIS RETURN SHOULD BE USED  *           42200000.*         IF THE NATURE OF
 THE LIST ENTRIES IS SUCH THAT   *           42500000.*         THE EXCHANGE COD
E GENERATED BY THIS MACRO WOULD  *           42900000.*           FAIL.
                                   *           43200000.*   THE COMPARE ROUTINE
MUST NOT ALTER REGISTERS 14        *           43500000.* THROUGH 7. ANY OF THE
REGISTERS 8 THROUGH 13 (EXCEPTING  *           43900000.* THOSE THAT ARE USED
AS PROGRAM BASES) MAY BE USED FREELY *           44200000.* SINCE THE SORT ROUTI
NE RESTORES ALL REGISTERS WHEN IT IS *           44600000.* FINISHED.
                                     *           44900000.*
                                       *           45300000.*   THE SVID= OPERAN
D                                      *           45600000.* USE THIS OPERAND T
O SPECIFY THE NAME OF A REGISTER SAVE  *           46000000.* AREA. IF OMITTED,
THEN THE MACRO WILL GENERAT+ E A LOCAL   *           46300000.* SAVE AREA.
                                           *           46700000.*   IF THE CMPRI
D= OPERAND IS GIVEN, THEN THE SAVE AREA    *           47000000.* MUST BE 16 WOR
DS LONG; OTHERWISE, IT NEED BE ONLY 10     *           47400000.* WORDS LONG (FO
R REGISTERS 14 THROUGH 7).                   *           47700000.*
                                             *           48000000.*
                                             *           48400000.*
                                             *             48700000.* INNER MACR
OS USED - #REGS #TEST                          *           49100000.*
                                               *           49400000.************
************************************************       DBC 49800000.*
                                                             50100000.*
                                                             50500000.*
                                                             50800000         GB
LA  &  #TESERR                                                 51200000
GBLC  &#TESRET(20)                                             51500000
LCLA  &SAVESZ,&SL                                              51900000
LCLC  &N,&R,&SAVEA                                               52200000&N
  SETC  'SORT'                                                   52500000
  AIF   (K'&NME EQ 0).GOTNME                                     52900000&N
  SETC  '&NME'                                                     53200000.GOTN
ME  ANOP                                                           53600000.*
                                                                   53900000&R
    SETC  '&PFIX'                                                    54300000
      AIF   (K'&PFIX NE 0).GOTPFIX                                   54600000
      #TEST PFIX=                                                    55000000&R
      SETC  '&#TESRET(1)'                                              55300000
        AGO   .DONPFIX                                                 55700000.
GOTPFIX #REGS &PFIX,GEN=NO                                             56000000.
DONPFIX ANOP                                                           56400000.
  *                                                                      5670000
0*************************************************************           5700000
0*                                                           *           5740000
0         AIF     ('&SEQ' EQ 'D').DCNDCMT                                  57700
000* ASCENDING ORDER SORT ROUTINE                              *           58100
000         AGO   .CMT2                                                    58400
000.DCNDCMT ANOP                                                             588
00000* DESCENDING ORDER SORT ROUTINE                             *           591
00000.CMT2    ANOP                                                           595
00000&SAVESZ  SETA  10                       +                                 5
9800000&SL      SETA  7
 60200000         AIF   (K'&CMPRID EQ 0).NOCMPR1
 60500000&SAVESZ  SETA  16
 60800000&SL      SETA  13
   61200000* WITH A CALLER PROVIDED SUBROUTINE FOR ENTRY COMPARISON    *
   61500000.NOCMPR1 ANOP
   61900000*                                                           *
     62200000* SORT ROUTINE INPUTS:                                      *
     62600000*        - R14 POINTS TO THE RETURN ADDRESS                 *
     62900000*        - R15 CONTAINS THE LENGTH OF THE LIST (IN BYTES)   *
     633  00000*        - R0 CONTAINS THE LENGTH OF EACH LIST ENTRY        *
       63600000*          (IN BYTES)                                       *
       64000000*        - R1 POINTS TO THE START OF THE LIST               *
       64300000*                                                             *
         64700000* SORT ROUTINE OUTPUTS:                                     *
         65000000*        - ALL REGISTERS ARE RESTORED.                      *
         65300000*        - THE GIVEN   LIST IS SORTED ACCORDING TO THE GIVEN  *
           65700000*          COMPARE ROUTINE'S TESTS.                         *
           66000000         AIF   (K'&CMPRID EQ 0).NOCMPR2
           66400000*
 *           66700000*
 *           67100000* COMPARE ROUTINE INPUTS:
 *           67400000*        - R6 AND R7 POINT TO THE TWO LIST ENTR  IES TO BE
   *           67800000*          COMPARED. THE ENTRY POINTED TO BY R6
   *           68100000*          SEQUENTIALLY PRECEEDS THE ONE POINTED TO BY R7
.  *           68500000*        - R14 POINTS TO A RETURN ADDRESS.
     *           68800000*        - R14 THROUGH R7 CONTAIN DATA CRITICAL TO THE
SORT *           69200000*          ROUTINE.  THEY MUST NOT BE ALTERED BY THE
     *           69500000*          COMPARE ROUTINE.
     *           6  9800000*
       *           70200000* COMPARE ROUTINE OUTPUTS:
       *           70500000*        - CC=0 (EQUAL) MEANS THAT THE TWO LIST ENTRI
ES     *           70900000*            HAVE EQUAL VALUES. THEY SHOULD NOT BE EX
CHANGED. *           71200000*        - CC=1 (LOW) MEANS THAT THE FIRST ENTRY HA
S A      *           71600000*          VALUE LOWER THAN THE SECOND. IF THIS IS
AN       *           71900000*          ASCENDIN  G SORT, THEN THEY WILL NOT BE
EXCHANGED. *           72300000*        - CC=2 (HIGH) MEANS THAT THE FIRST ENTRY
 HAS A     *           72600000*          VALUE HIGHER THAN THE SECOND. IF THIS
IS AN      *           73000000*          ASCENDING SORT, THEN + THEY WILL BE EX
CHANGED.     *           73300000*        - CC=3 (OVERFLOW) M  EANS THAT THE TWO
 ENTRIES WERE  *           73700000*          OUT OF ORDER AND THAT THEY HAVE NO
W BEEN         *           74000000*          EXCHANGED BY THE COMPARE ROUTINE.
               *           74300000.NOCMPR2 ANOP
                             74700000*
                 *           75000000*******************************************
******************           75400000         SPACE 1
                               75700000&SAVEA   SETC  '&N.SAVE'
                               76100000         AIF   (K'&SVID EQ 0).GOTSAVE
                               76400000&SAVEA   SETC  '&SVID'
                                 76800000.GOTSAVE ANOP
                                 77100000&N       STM   &R.14,&R.&SL,&SAVEA SAVE
 ALL WORK REGSITERS              77500000         AIF   ('&CMPRID' EQ '').GOTCMP
R                                77800000           AIF   ('&CMPRID' NE '0').CMP
RN0                                78200000         L     &R.15,&N.CMPR       --
> CALLER PROVIDED COMPARE ROUTINE  78500000         AGO   .GOTCMPR
                                   78800000.CMPRN0  AIF     ('&CMPRID' NE '&CMPR
ID(1)').CMPRREG                      79200000         LA    &R.15,&CMPRID
--> CALLER PROVIDED COMPARE ROUTINE  79500000         AGO   .GOTCMPR
                                     79900000.CMPRREG #TEST REGS=&CMPRI  D(1)
                                       80200000         AIF   (&#TESERR NE 0).CM
PRROK                                  80600000         AIF   (&#TESRET(1) GT 1
AND &#TESRET(1) LT 14).CMPRROK         80900000         MNOTE 8,'ERROR - CMPRID=
 MAY N  OT IDENTIFY REGISTER &#TESRET(1)*81300000               '
                                         81600000.CMPRROK LR    &R.15,&CMPRID(1)
    --> CALLER PROVIDED COMPARE ROUTINE  82000000.GOTCMPR LR    &R.4,&R.0
    GET THE ENTRY LEN  GTH                 82300000         LR    &R.1,&R.0
      GET ENTRY LENGTH FOR 'EX'            82600000         BCTR  &R.1,0
      GET THE ENTRY'S MACHINE LENGTH       83000000         LR    &R.2,&R.4
      GET ENTRY LENGTH                       83300000&N.DUBL  AR    &R.2,&R.2
        DOUBLE IT                            83700000         C     &R.2,&SAVEA+
4       GREATER THAN LIST LENGTH YET?        84000000         BNH   &N.DUBL
        NO, GO RE-DOUBLE                     844000  00         SR    &R.2,&R.4
          YES, GOT INITIAL INCREMENT           84700000&N.LP1   SR    &R.2,&R.4
          SUBTRACT ONE AND -                   85100000         BZ    &N.RET
           (ALL DONE; GO RESTORE AND RETURN)   85400000         SR  L   &R.2,1
             TRUNCATE DEVIDE BY TWO              85800000         L     &R.5,&SA
VEA+4       GET THE LENGTH OF THE LIST           86100000         SR    &R.5,&R.
2           SUBTRACT OFF THE INCREMENT           86500000         LR    &R.3,&R.
4+            GET THE ENTRY LENGTH                 86800000&N.LP2   LR    &R.0,
 &R.4           GET THE ENTRY LENGTH AGAIN           87100000&N.LP3   LR    &R.6
,&R.3           DEVELOPE -                           87500000         A     &R.6
,&SAVEA+12       THE FIRST -                         87800000         SR    &R.6
,&R.0               COMPARE ADDRESS                    88200000         LA    &R
.7,0(&R.2,&R.6)   DEVELOPE THE SECOND ADDRESS          88500000         AIF   ('
&CMPRID' EQ '').NOCMPR6                                88900000         BALR  &R
.14,&R.15         LINK TO CAL  LER'S COMPARE ROUTINE     89200000         BO
&N.NLP3             OUT OF ORDER BUT NOW EXCHANGED       89600000         AGO
.NOCMPR7                                                 89900000.NOCMPR6 EX
&R.1,&N.CLC         COMPARE THE TWO ENTRIES                90300000.NOCMPR7 AIF
  ('&SEQ' EQ 'D').DESCEND                                  90600000         BNH
  &N.NLP2             RIGHT ORDER (ASCENDING); DON'T XCHNG 91000000         AGO
  .ASCEND                                                    91300000.DESCEND BN
L   &N.NLP2             RIGHT ORDER (DESCENDING); DON'T XCHG 91600000.ASCEND  EX
    &R.1,&N.XC1         WRONG -                              92000000         EX
    &R.1,&N.XC2          ORDER; -                            92300000
EX    &R.1,&N.XC1           EXCHANGE                           92700000&N.NLP3
BXLE  &R.0,&R.2,&N.LP3    LOOP TO SHIFT THE BUBBLE             93000000&N.NLP2
BXLE  &R.3,&R.4,&N.LP2    ADVANCE ONE INCREMENT                93400000
B     &N.  LP1              LOOP TO DECREASE THE INCREMENT       93700000&N.RET
  LM    &R.14,&R.&SL,&SAVEA SORT DONE; RESTORE REGS              94100000
  BR    &R.14               RETURN TO CALLER                     94400000
  SPACE 1                                                          94800000
    AIF   ('&CMPRID' NE '').DATA1                                  95100000&N.CL
C   CLC   0(*-*,&R.6),0(&R.7) (EXECUTED)                           95500000.DATA
1   ANOP                                                             95800000&N.
XC1   XC    0(*-*,&R.6),0(&R.7) (EXECUTED)                           96100000&N.
XC2   XC    0(*-*,&R.7),0(&R.6) (EXECUTED)                           96500000
      AIF   ('&CMPRID' NE '0' AND '&SVID' NE '').DATA2                 96800000
        SPACE 1                                                        97200000.
DATA2   AIF   ('&CMPRID' NE '0').DATA3                                 97500000&
N.CMPR  DC    A(*-*)              THE POINTER TO THE COMPARE ROUTINE     9790000
0*                                  MUST BE FILLED IN PRIOR TO THE FIRST 9820000
0*                                  CALL TO THE SORT ROUTINE.            9860000
0.DATA3   AIF   ('&SVID' NE '').DATA4                                    9890000
0&N.  SAVE  DC    &SAVESZ.A(0)        LOCAL SAVE AREA                      99300
000.DATA4   MEND  #SORT                                          04/01 S21 99600
000./ ADD NAME=#SSCT    0100-03155-03155-1415-00015-00015-00000-DBCOLE5
            MACRO  +                                                     X20 #SS
CT            #SS  CT &DOC=,&LIST=                                         X20 1
2000000         GBLB  &#SSCT                                               X20 1
8000000         GBLC  &#TIT,&#INFO(20)                                     X20 2
5000000         AIF   (&#SSCT).M  END                                        X20
 31000000&#SSCT   SETB  (1)                                                  X20
 37000000&#TIT    SETC  'SSCT -- SUBSYSTEM CONTROL TABLE'                    X20
 43000000&#INFO(1) SETC 'SSCT     = SUBSYSTEM C  ONTROL TABLE'                 X
20 50000000&#INFO(2) SETC 'SSCT     = DSECT AND BASE'                          X
20 56000000         #TITDOC 'IEFJSCVT ,',                                      X
20*62000000               DOC=&DOC,LIST=&LIST
 X20 68000000         IEFJSCVT ,
 X20 75000000&SYSLOC  LOCTR ,                                              07/02
 Z12 81000000         #TUNDOC ,                                            09  /
91 X22 87000000.MEND    MEND  #SSCT                                          04/
01 S21 93000000./ ADD NAME=#SSIB    0100-03155-03155-1415-00045-00045-00000-DBCO
LE5                     MACRO                                                12/
90 X21 #SSIB              #SSIB &DOC=,&LIST=                                   1
2/90 X21 04000000         GBLA  &TORG                                          0
3/98 X34 06000000         GBLB  &#SSIB                                         1
2/90 X21 08000000         G  BLC  &#TIT,&#INFO(20)
 12/90 X21 10000000         AIF   (&#SSIB).MEND
 12/90 X21 13000000&#SSIB   SETB  (1)
 12/90 X21 15000000&#TIT    SETC  'SSIB --   SUBSYSTEM IDENTIFICATION BLOCK'
   12/90 X21 17000000&#INFO(1) SETC 'SSIB     = SUBSYSTEM IDENTIFICATION BLOCK'
   12/90 X21 19000000&#INFO(2) SETC 'SSIB     = DSECT AND BASE'
   12/90 X21 21000000&#INFO(3) SETC 'SSIBSIZE = SSIB LENG  TH'
     12/90 X21 23000000         #TITDOC 'IEFJSSIB ,',
     12/90 X21*26000000               DOC=&DOC,LIST=&LIST
     12/90 X21 28000000.*
       03/98 X34 30000000.******************************************************
****** 03/98 X34 32000000.* Left to its own devices, the IEFSSIB macro will fail
     * 03/98 X34 34000000.* unless it is invoked from within the SSOB DSECT. The
     *   03/98 X34 36000000.* following OPSYN statements cause an ORG macro to b
e used * 03/98 X34 39000000.* in place of ORG statements. The ORG macro takes st
eps    * 03/98 X34 41000000.* that allows the IEFSSIB to run successfully within
 the   * 03/98 X34 430  00000.* SSIB dsect.
         * 03/98 X34 45000000.**************************************************
********** 03/98 X34 47000000&TORG    SETA  &TORG+1
           03/98 X34 50000000        +  AIF   (&TORG NE 1).TORGZ
             03/98 X34 52000000TORG       OPSYN ORG                 CREATE PSEUD
O-ORG          03/98 X34 54000000ORG      OPSYN ,                   ENABLE ACCES
S TO ORG MACRO 03/98 X34 56000000.TORGZ   ANOP
               03/98 X34 58000000.*
                 03/98 X34 60000000.********************************************
**************** 03/98 X34 63000000.* Run IBM's IEFSSIB macro.
               * 03/98 X34 65000000.*****************************  *************
****************** 03/98 X34 67000000         IEFJSSIB ,
                   12/90 X21 69000000.*
                   03/98 X34 71000000.******************************************
  ****************** 03/98 X34 73000000.* Undo the SYNs of my forefathers.
                   * 03/98 X34 76000000.****************************************
******************** 03/98 X34 78000000&TORG    SETA  &TORG-1
                       03/98 X34 80000000         AIF   (&TORG NE 0).ORGZ
                       03/98 X34 82000000ORG      OPSYN TORG                REEN
ABLE ORG INSTRUCTION   03/98 X34 84000000TORG     OPSYN ,                   BLOW
 OFF PSEUDO-ORG        03/98 X  34 86000000.ORGZ    ANOP
                         03/98 X34 89000000.*
                         03/98 X34 91000000&SYSLOC  LOCTR ,
                         07/02 Z12 93000000           #TUNDOC ,
                           09/91 X22 95000000.MEND    MEND  #SSIB
                           04/01 S21 97000000./ ADD NAME=#SSSCAN  0100-03155-031
55-1415-00293-00293-00000-DBCOLE5                     MACRO
                                       #SSSCAN &NAME    #SSSCAN &SSID,&ERROR=,&P
FIX=,&DOC=YES,&MAP=NO              DBC 00600000.*
                                       01000000.*
                                         01300000.*
                                     DBC 01700000.* LAST CHANGE DATE - FEBRUARY
11, 1988                             DBC 02000000.*
                                       DBC 02300000.* - SUPPORT ADDED FOR THE MA
PS= OPERAND. THIS CONTROLS             DBC 02700000.*   WHETHER THE GENERATED SC
AN ROUTINE USES FIELD NAMES OR         DBC 03000000.*   NUMERIC OFFSETS WHEN REF
ERENCING THE SHAS (SUBSYS  TEM           DBC 03400000.*   HASH TABLE).
                                         DBC 03700000.*
                                         DBC 04000000.* LAST CHANGE DATE - JANUA
RY 6, 1988                                 DBC 04400000.*
                                           DBC 04700000.* - THE LOADING OF THE S
UBSYSTEM ID INTO A REGISTER IS NOW         DBC 05100000.*   DONE VIA AN "ICM" IN
STEAD OF A "L" INSTRUCTION. THIS           DBC 05400000            _ .*   RELAXE
S A RESTRICTION THAT THE SSID HAD TO BE FWORD            DBC 05700000.*   ALIGNE
D.                                                       DBC 06100000.*
                                                             06400000.  * LAST C
HANGE DATE - DECEMBER 7, 1987                                  06800000.* - INIT
IAL VERSION.                                                   07100000.*
                                                               07400000.* THIS M
ACRO   WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING    07800000.* IT M
AY BE ADDRESSED TO:                                              08100000.*
  RR#2 BOX 676                                                   08500000.*
  AFTON, VA. 22920                                                 08800000.*
                                                                   09100000.*
                                                                   09500000.*
                                                                     09800000.*
   THIS MACRO GENERATE A ROUTINE THAT LOCATES AN SSCT FOR A GIVEN    10200000.*
SUBSYSTEM. THE SSCT WILL BE LOCATED EITHER VIA A SYSTEM PROVIDED     10500000.*
HASH TABLE (IF ANY) OR VIA A LINEAR SCAN OF THE QU  EUED SSCT'S.       10800000.
*                                                                      11200000.
*                                                                      11500000.
* &NAME                                                                  1190000
0.*       THIS OPERAND IS OPTIONAL. IF GIVEN, THEN, IT LABELS THE        1220000
0.*       GENERATED CODE.                                                1250000
0.*                                                                      1290000
  0.* &SSID                                                                13200
000.*    THIS GIVES THE SUBSYSTEM ID OF THE SSCT TO BE SEARCHED FOR. IT    13600
000.* MUST BE EITHER:                                                      13900
000.*                                                                        142
00000.*    - A QUOTED STRING FROM ONE TO FOUR CHARACTERS LONG (E.G. 'JES2'). 146
00000.*                                                                      149
00000.*    - AN ADDRESS EXPRES  SION (E.G., SUBSYSID).                         1
5300000.*                                                                      1
5600000.*    - A PARENTHESIZED NAME OF A REGISTER (E.G., (R5)) THAT CONTAINS A 1
5900000.*      SUBSYSTEM ID, 1 TO 4 CHARACTER  S LONG, AND LEFT ADJUSTED AND
 16300000.*      PADDED ON THE RIGHT WITH BLANKS.
 16600000.*
 17000000.* &ERROR=
   17300000.*    THIS OPERAND IS OPTIONAL. IF GIVEN, THEN IT MUST BE EITHER AN
   17600000.* ADDRESS EXPRESSION OR THE PARENTHESIZED NAME OF A REGISTER
   18000000.* CONTAINING AN ADDRESS. IF THE ROUTINE GENERATED BY THE #SSSCA+ N M
ACRO 18300000.* FAILS TO FIND THE DESIRED SSCT, THEN IT WILL BRANCH TO TH  E GIV
EN     18700000.* ADDRESS. (IF THE SSCT *IS* FOUND, THEN THE ROUTINE WILL "FALL
       19000000.* THROUGH").
       19300000.*
       1  9700000.*    IF THE &ERROR= OPERAND IS OMITTED, THEN THE GENERATED ROU
TINE     20000000.* WILL FALL THROUGH REGARDLESS OF WHETHER OR NOT THE SSCT IS F
OUND.    20400000.* HOWEVER, THE CONDITION CODE WILL BE SET TO NON-ZERO IF THE S
SCT IS   20700000.* FOU  ND, AND IT WILL BE SET TO ZERO, IF IT IS NOT.
           21000000.*
       DBC 21400000.* &MAP=
       DBC 21700000.*    THIS CONTROLS   WHETHER THE MACRO EXPANSION USES FIELD
         DBC 22100000.* NAMES OR NUMERIC OFFSETS WHEN REFERENCING THE SUBSYSTEM
         DBC 22400000.* HASH TABLE.
         DBC 22700000.*
           DBC 23100000.*      MAP=NO (THE DEFAULT)
           DBC 23400000.*      NUMERIC OFFSETS ARE USED
           DBC 23800000.*
             DBC 24100000.*      MAP=YES
             DBC 24400000.*      SHAS FIELD NAMES ARE USED.
             DBC 24800000.*
               DBC 25100000.* WHEN MAP=YES IS SPECIFIED, A DSECT FOR THE SHAS CO
NTROL          DBC 25500000.* BLOCK MUST EXIST.
               DBC 25800000.*
                     26100000.* &PFIX=
                     26500000.*    THE #SSSCAN MACRO ATTEMPTS TO USE REGISTER EQ
UATES IN ITS         26800000.* EXPANSION WHEN REFERING TO REGISTERS. THIS IS SO
 THAT THE USE OF THE 27200000.* R  EGISTERS IS INDICATED IN THE ASSEMBLER'S CROS
S REFERENCE LISTING.   27500000.* THE PFIX= OPERAND CAN BE USED TO CONTROL THE S
ET OF EQUATES USED.    27800000.* FOR EXAMPLE, IF "PFIX=GPR" IS GIVEN, THEN "GPR
1" IS USED WHENEVER    28200000.* THE EXPANSION   REFERS FO REGISTER 1.
                         28500000.*
                         28900000.*    IF THE PFIX= OPERAND IS OMITTED, THEN THE
 SET OF REGISTER EQUATES 29200000.* DEFINED BY THE NEXT PRIOR #  REGS MACRO IS U
SED. IF THERE ARE NO PRIOR 29500000.* #REGS MACROS, THEN SELF-DEFINING NUMERICS
ARE USED.                  29900000.*
                           30200000.* &PFIX=(...,NOSAVE)
                             30600000.*    THIS PREVENTS THIS MACRO FROM INVOKIN
G THE #REGS MACRO.           30900000.*
                             31200000.*
             +                 31600000.*
                                 31900000.*
                                 32300000.* INNER MACROS USED - #REGS #TEST
                                 32600000.*
                                   32900000         GBLA  &#TESERR
                                   33300000         GBLC  &#TESRET(20)
                                   33600000         LCLA  &A1
                                   340000  00         LCLB  &IDREG,&IDQUOT,&IDRE
G2                                   34300000         LCLC  &ID,&IDC
                                     34600000         LCLC  &#,&N,&@
                                     35000000         LC  LC  &LNUM,&LSSCT,&SLOT
S                                  DBC 35300000&#       SETC  '&SYSNDX'
                                       35700000&N       SETC  '&NAME'
                                       36000000.*
                                         36300000&@       SETC  '&PFIX(1)'
                                         36700000         AIF   ('&PFIX(2). '(1,
1) EQ 'N').DONPFIX                       37000000         AIF   (K'&PFIX(1) NE 0
).GOTP  FIX                                37400000         #TEST PFIX=
                                           37700000&@       SETC  '&#TESRET(1)'
                                           38000000         AGO   .DONPFIX
                                             38400000.GOTPFIX #REGS &PFIX(1),GEN
=NO                                          38700000.DONPFIX ANOP
                                             39100000.*
                                               39400000         AIF   ('&SSID' N
E '').IDOK1                                    39700000         MNOTE 8,'SUBSYST
EM ID NOT GIVEN.'                              40100000.IDOK1   AIF   ('&SSID '(
1,1) NE '''').IDQNOT                           4040  0000&IDQUOT  SETB  (1)
                                                 40800000         AIF   (K'&SSID
 GT 2).IDQOK1                                    41100000         MNOTE 8,'NULL
SUBSYSTEM ID GIVEN.'                             41400000.IDQOK1    AIF   (K'&SS
ID LE 6).IDQOK2                                    41800000         MNOTE 8,'THE
 GIVEN SUBSYSTEM ID IS LONGER THAN 4 CHARACTERS.'  42100000.IDQOK2  ANOP
                                                   42500000&IDC     SETC  '&SSID
'  (2,K'&SSID-2)                                     42800000&ID      SETC  '=CL
4''&IDC'''                                           43100000         AGO   .SSI
DZ                                                   43500000.IDQNOT  ANOP
                                                       43800000         AIF   ('
&SSID' NE '&SSID(1)').IDREG                            44200000&ID      SETC  '&
SSID'                                                  44500000         AIF   ('
&SSID'(K'&SSID,1) NE ')').SSIDZ+                         44800000&A1      SETA
1                                                          45200000.IDALP1  AIF
  (&A1 GE K'&SSID).SSIDZ                                   45500000&A1      SETA
  &A1+1                                                    45900000         AIF
  ('&SSID'(&A1,1) NE ',').IDALP1                             46200000         AI
F   ('&SSID'(&A1-1,1) NE '(').IDAREG                         46500000&ID      SE
TC  '&SSID'(1,&A1-1).'&SSID'(&A1+1,K'&SSID-&A1)              46900000         AG
O   .SSIDZ                                                     47200000.IDAREG
ANOP                                                           47600000&IDREG2
SETB  (1)                                                      47900000
AGO   .SSIDZ                                                   48200000.ID  REG
  ANOP                                                           48600000&IDREG
  SETB  (1)                                                      48900000&ID
  SETC  '&SSID'(2,K'&SSID-2)                                     49300000
  AIF   (  N'&SSID EQ 1).IDROK1                                    49600000
    MNOTE 8,'THE GIVEN SSID REGISTER NAME ("&ID") IS INVALID.'     50000000.IDRO
K1  ANOP                                                           50300000
    #TEST REGS=&SSID(1)                                              50600000
      AIF   (&#TESERR NE 0).SSIDZ                                    51000000
      AIF   (&#TESRET(1) GT 1 AND &#TESRET(1) LT 14).SSIDZ           51300000&ID
REG2  SETB  (1)                                                        51700000.
SSIDZ   ANOP                                                           52000000.
*                                                                      52300000
        AIF   ('&DOC '(1,1) NE 'Y').DOCZ                                 5270000
0*************************************************************           5300000
0*                                                           *           5340000
0* #SSSCAN -- THIS ROUTINE SCANS THE SYSTEM'S SSCT CHAIN FOR *             53700
000* A GIVEN SSCT. IF A HASH TABLE IS MAINTAINED BY THE SYSTEM *           54000
000* FOR THE SSCT'S, THEN THAT WILL BE USED. IF ONE IS NOT     *           54400
000* PROVIDED (OR IF ONE IS PROVIDED BUT DOES NOT HAVE AN      *           54700
000*   ENTRY FOR THE DESIRED SSCT), THEN A LINEAR SCAN OF THE    *           551
00000* SSCT'S WILL BE DONE TO FIND THE DESIRED SSCT.             *           554
00000*                                                           *           557
00000* INPUTS:                                                     *           5
6100000         AIF (&IDREG).IDR1                                              5
6400000         AIF (&IDQUOT).IDQ1                                             5
6800000         MNOTE '*   - THE D  ESIRED SUBSYSTEM ID IS LOCATED AT &ID..'
 57100000         AGO   .IDZ1
 57400000.IDR1    MNOTE '*   - THE DESIRED SUBSYSTEM ID IS CONTAINED IN &ID..'
 57800000         AGO   .IDZ1                    +
   58100000.IDQ1    MNOTE '*   - THE DESIRED SU  BSYSTEM ID IS "&IDC".'
     58500000.IDZ1    ANOP
     58800000*                                                           *
     59100000* REQUIRED DSECTS:                                            *
       59500000         AIF   ('&MAP' EQ 'YES').MAPAY
   DBC 59800000*    CVT       JESCT     SSCT                               *
       60200000         AGO   .MAPAZ
     DBC 60500000.MAPAY   ANOP
     DBC 60800000*    CVT       JESCT     SSCT      SHAS                     *
     DBC 61200000.MAPAZ   ANOP
     DBC 615  00000*                                                           *
           61900000* REGISTERS USED:                                           *
           62200000         AIF   (&IDREG2).REG2A
           62500000*    R14   THROUGH R1
 *           62900000         AGO   .REG2AZ
             63200000.REG2A   ANOP
             63600000*    R14 THROUGH R2
   *           63900000.REG2AZ  ANOP
               64200000*
   *           64600000* OUTPUTS (SSCT FOUND):
     *           64900000*    - R1 POINTS TO THE FOUND SSCT.
     *           65300000*    - THE CONDITION CODE IS SET TO NON-ZERO.
     *           65600000         AIF   (&IDREG2).REG2B
                   65900000*    - R14, R15, R0 ARE DESTROYED.
       *           66300000         AGO   .REG2BZ
                   66600000.REG2B   ANOP
                     67000000*    - R14, R15, R0, R2 ARE DESTROYED.
         *           67300000.REG2BZ  ANOP
                     67600000*    - ALL OTHER REGISTERS ARE UNCHANGED.
         *           6  8000000*
           *           68300000* OUTPUTS (SSCT NOT FOUND):
           *           68700000*    - R1 IS CLEARED TO ZERO.
           *           69000000*    -   THE CONDITION CODE IS SET TO ZERO.
             *           69300000         AIF   (&IDREG2).REG2C
                         69700000*    - R14, R15, R0 ARE DESTROYED.
             *           70000000         AGO   .REG  2CZ
                           70400000.REG2C   ANOP
                           70700000*    - R14, R15, R0, R2 ARE DESTROYED.
               *           71000000.REG2CZ  ANOP                   +
                             71400000*    - ALL OTHER REGISTERS A  RE UNCHANGED.
                   *           71700000*
                   *           72100000*****************************************
********************           72400000         SPACE 1
                                 72700000.DOCZ    ANOP
                                 73100000.*
                             DBC 73400000         AIF   ('&MAP' EQ 'YES').MAPBY
                               DBC 73800000&LNUM    SETC  '6'
                               DBC 74100000&LSSCT   SETC  '8'
                               DBC 74400000&SLOTS   SETC  '12'
                                 DBC 74800000         AGO   .MAPBZ
                                 DBC 75100000.MAPBY   ANOP
                                 DBC 75500000&LNUM    SETC  'SSHSLNUM-SHAS'
                                 DBC 75800000  &LSSCT   SETC  'SSHLSSCT-SHAS'
                                   DBC 76100000&SLOTS   SETC  'SSHSSCT-SHAS'
                                   DBC 76500000.MAPBZ   ANOP
                                   DBC 76800000.*
                                         77200000         AIF   (NOT &IDREG2).RE
G2Z                                      77500000         AIF   (&IDREG).REG
                                         77800000&N       L     &@.2,15,&ID
      GET THE SUBSYSTEM ID             DBC 78200000&N       SETC  ''
                                           78500000&IDREG   SETB  (1)
                                           78900000&ID      SETC  '&@.2'
                                             79200000         AGO   .REG2Z
                                             79500000.REG     ANOP
                                             79900000&N       LR    &@.2,&ID
        COPY SUBSYSTEM ID                      80200000&N       SETC  ''
                                               80600000&ID      SETC  '&@.2'
                                               80900000.REG2Z   ANOP
                                                 81200000.*
                                                 81600000&N       L     &@.1,CVT
PTR         --> CVT                              81900000&N       SETC  ''
                                                 823000  00         L     &@.1,C
VTJESCT-CVTMAP(,&@.1) --> JESCT                    82600000         LA    &@.15,
JESSSCT-(SSCTSCTA-SSCT)-JESCT(,&@.1) SSCT SCANNER  82900000         ICM   &@.1,1
5,JESHASH-JESCT(&@.1) --> HAST TABLE; EXIST?       83300000         BZ      QUE&
#               NO, GO DO LINEAR SCAN                83600000         LH    &@.0
,&LNUM.(,&@.1)    YES, GET HASH TABLE SLOT COUNT     84000000         AIF   (&ID
REG).REGA                                            84300000         ICM   &@.1
5,15,+ &ID        GET THE SUBSYSTEM ID             DBC 84600000         AGO   .R
EGA  Z                                                   85000000.REGA    LR
&@.15,&ID           GET THE SUBSYSTEM ID                 85300000.REGAZ   SLR
&@.14,&@.14         PREPARE FOR DIVIDE                   85700000         DR
&@.14,&@.0            HASH THE SUBSYSTEM ID                86000000         SLL
  &@.14,2             CNVRT TO FWORD OFFSET                86300000         L
  &@.15,&LSSCT.(,&@.1)   (--> LAST SSCT BUILT AT IPL)      86700000         L
  &@.1,&SLOTS.(&@.14,&@.1) --> SS  CT                        87000000         LT
R   &@.1,&@.1           WAS THIS HASH TABLE SLOT FILLED IN?  87400000         BA
L   &@.14,HASH&#        (LOAD TOP-OF-LOOP; BEGIN SCAN LOOP)  87700000         IC
M   &@.1,15,SSCTSYN-SSCT(&@.1) --> NXT SYNONYMOU  S SSCT;MORE? 88000000HASH&#
BZ    QUE&#               NO, GO DO LINEAR SCAN                88400000
AIF   (&IDREG).REGB                                            88700000
CLC   SSCTSNAM-SSCT(,&@.1),&ID        YES, RIGHT SSCT?           89100000
  AGO   .REGBZ                                                   89400000.REGB
  CL    &ID,SSCTSNAM-SSCT(,&@.1) YES, RIGHT SSCT?                89700000.REGBZ
  BNER  &@.14               NO, TRY NEXT SYNONYM                 90100000
    B     Z&#                 YES, DONE                            90400000
    SPACE 1                                                        90800000QUE&#
    LR    &@.1,&@.15          LINEAR SCAN; --> QUEUE ANCHOR        91100000
    BALR  &@.  14,0             LOAD TOP-OF-LOOP                     91400000
      ICM   &@.1,15,SSCTSCTA-SSCT(&@.1) --> NEXT SSCT; MORE?         91800000
      BZ    Z&#                 NO, EXIT EMPTY HANDED                92100000
      AIF   (&IDREG).REGC                                              92500000
        CLC   SSCTSNAM-SSCT(,&@.1),&ID        YES, RIGHT SSCT?         92800000
        AGO   .REGCZ                                                   93100000.
REGC    CL    &ID,SSCTSNAM-SSCT(,&@.1) YES,   RIGHT SSCT?                9350000
0.REGCZ   BNER  &@.14               NO, TRY NEXT SSCT                    9380000
0Z&#      LTR   &@.1,&@.1           YES, SET CC                          9420000
0         AIF   (K'&ERROR EQ 0).MEND                                       94500
000         AIF   ('&ERROR' NE '&ERROR(1)').ERRREG                         94800
000         BZ    &ERROR              ERROR IF NO SSCT FOUND               95200
000         MEXIT                                                            955
00000.ERRREG  AIF   (N'&ERROR EQ 1).ERROK1                                   959
00000         MNOTE 8,'THE GIVEN ERROR ADDRESS POINTER REGISTER ("&ERROR") I*962
00000               S INVALID.'                                              965
00000.ER  ROK1  ANOP                                                           9
6900000         #TEST REGS=&ERROR(1)                                           9
7200000         AIF   (&#TESERR NE 0).ERRORZ                                   9
7600000         AIF   (+ &#TESRET(1) GT 1 AND &#TESRET(1) LT 14).ERRORZ
 97900000         MNO  TE 8,'THE GIVEN ERROR ADDRESS POINTER REGISTER ("&ERROR(1
)"*98200000               ) IS INVALID.'
   98600000.ERRORZ  ANOP
   98900000         BZR   &ERROR(1)             ERROR IF NO SCT FOUND
     99300000.MEND    MEND  #SSSCAN                                        04/01
 S21 99600000./ ADD NAME=#TCB     0100-03155-03155-1415-00077-00077-00000-DBCOLE
5                     MACRO
       #TCB             #TCB  &DOC=,&LIST=
   X20 10000000         GBLB  &#TCB
   X20 15000000         GBLC  &#TIT,&#INFO(20)
     X20 21000000         AIF   (&#TCB).MEND
     X20 26000000&#TCB    SETB  (1)
     X20 31000000&#TIT    SETC  'TCB -- TASK CONTROL BLOCK'
       X20 36000000&#INFO(1) SETC 'TCB      = TASK CONTROL BLOCK'
       X20 42000000&#INFO(2) SETC 'TCBFIX   = PREFIX AND BASIC SECTIONS DSECT'
       X20 47000000&#INFO(3) SETC 'TCBFIX   = PREFIX SECTION BASE'
       X20 52000  000&#INFO(4) SETC 'TCB      = BASIC SECTION BASE'
         X20 57000000&#INFO(5) SETC 'TCBXTNT2 = COMMON EXTENSION DSECT AND BASE'
         X20 63000000         #TITDOC 'IKJTCB LIST=YES',
         X20*68000000                 DOC=&DOC,LIST=&LIST
           X20 73000000         IKJTCB LIST=YES
               78000000         #TUNDOC SOME
     05/03 Z12 78300000.*
       02/01 S21 78700000         AIF   (D'TCBPIEA).PIEAZ
       02/01 S21 79500000TCBPIEA  EQU   TCBPIE+1,3          OLD 24-BIT SCA POINT
ER     02/01 S21 80200000*                                  (  DISCONTINUED AT O
S/390    02/01 S21 81000000*                                  R2.8)
         02/01 S21 81700000.PIEAZ   ANOP
         02/01 S21 82500000.*
           02/01 S21 83200000.*
           05/03 Z12 83210000CSW00001 EQU   B'00000001'
           07/03 Z12 86000000         #TUNDOC ,
             09/91 X22 89000000.MEND    MEND  #TCB
             02/01 S21 94000000./ ADD NAME=#TEST    0100-03155-03155-1415-00914-
00914-00000-DBCOLE5                     MACRO
                       #TE  ST   &N       #TEST &DCODE=OMITTED,     SUB-SUB-LIST
 DECODING      05/97 X33*00200000               &GEN=,              GEN ALL EBCD
IC VALUES      05/97 X33*00300000               &HL_ASM=,           High Level A
ssembler Test  03/98 X34*00500000        +        &MEXCL=,            MUTUAL EXC
LUSIVITY TEST    05/97 X33*00600000                 &NUM=OMITTED,       ALL DIGI
TS TESTER          05/97 X33*00700000               &PFIX=OMITTED,      REG PREF
IX VALIDITY CHECK  05/97 X33*00800000               &REGS=,             FIND VAL
UE OF REG NAMES    05/97 X33*00900000               &R  TRIM=OMITTED,     RIGHT
SIDE STRING TRIMMER  05/97 X33*01000000               &SIZE=              CONSIS
TANCY TESTER         05/97 X33 01100000.*
                               01200000.*
                                 01300000.*
                       06/01 S21 01400000.* Last Change Date - June 27, 2001
                       06/01 S21 01500000.*                  - GEN=EBCDIC proces
sing  : Replaced the     06/01 S21 01700000.*                    #TESTX-- equate
s with the BYTE builtin  06/01 S21 01800000.*                    function as the
 method for generating   06/01 S21 01900000.*                    the 256-value b
yte array. (This fi  xes   06/01 S21 02000000.*                    the problem,
created by the #TESTX3F    06/01 S21 02100000.*                    equate, of 01
Ah values occurring in     06/01 S21 02200000.*                    assembly list
ing XREFs and leading to   06/01 S  21 02300000.*                    the truncat
ion of listing files when    06/01 S21 02400000.*                    sent to a P
C as ASCII text.)            06/01 S21 02500000.*
                             06/01 S21 02600000.*   Last Change Date - June 15,
2001                           06/01 S21 02800000.*                  - Suppress
printing of the Y-cons         06/01 S21 02900000.*                    generated
 by the #TEST SIZE= funciton.  06/01 S21 03000000.*
                                 03/98 X34 03100000.* Last Change Date - March 2
6, 1998                          03/98 X34 03200000.*                  - Added t
he HL_ASM function to identify   03/98 X34 03300000.*                    whethe
 r or not the current assembler is 03/98 X34 03400000.*                    IBM's
 High Level Assembler.             03/98 X34 03500000.*
                                   05/97 X33 03600000.* LAST CHANGE DATE - May 2
5, 1997                              05/97 X33 03700000.*                  - Add
ed the RTRIM function to trim        05/97 X33 03800000.*                    tra
iling blanks from the right side of  05/97 X33 04000000.*                    a s
tring symbol.                          05/97 X33 04100000.*
                                       10/96 X32 04200000.* LAST CHANGE DATE - O
CTOBER 5, 1996                         10/96 X32 04300000.*                  - C
ORRECTED SOME LOGIC ERRORS IN THE "R   10/96   X32 04400000.*
 NAMES AUTORECOGNITION" SUPPORT          10/96 X32 04500000.*
 IMPLEMENTED 09/24/96.                   10/96 X32 04600000.*
                                         09/96 X32 04700000            _ .* LAST
 CHANGE DATE - SEPTEMBER 24, 1996                      09/96 X32 04800000.*
             - ADDED SUPPORT FOR THE AUTOMATIC         09/96 X32 04900000.*
               RECOGNITION OF (BUT *NOT* GENERATION    09/96 X32 05000000.  *
                 OF) "R" REGISTER NAMES.                 09/96 X32 05200000.*
               - THE PRIOR IMPLEMENTATION OF THE         09/96 X32 05300000.*
                 "GEN=EBCDIC" FUNCTION WAS VULNERABLE TO 09/96 X32 05400000.*
                   EBCDIC>ASCII>EBCDIC TRANSLATION         09/96 X32 05500000.*
                   CORRUPTIONS THAT CAN OCCUR WHEN THIS    09/96 X32 05600000.*
                   MACRO IS SHIPPED BACK AND FORTH BETWEEN 09/96 X32 05700000.*
                   MAINF  RAMES AND PC'S. THAT VULNERABILITY 09/96 X32 05800000.
*                    HAS NOW BEEN CORRECTED.                 09/96 X32 05900000.
*                  - MAILING ADDRESS CHANGE.                 09/96 X32 06000000.
*                                                              03/90 X21 0610000
0.* LAST CHANGE DATE - MARCH 15, 1990                          03/90 X21 0620000
0.*                  - ADDED TO THE "GEN=EBCDIC" FUNCTION A    03/90 X21 0640000
0.*                    TABLE OF SCALER VALUES NAME "&X  00 ...   03/90 X21 06500
000.*                    &XFF" (IN ADDITION TO THE               03/90 X21 06600
000.*                    "&#EBCDIC(256)" ARRAY) ALSO             03/90 X21 06700
000.*                    CONTAINING ALL 256 EBCDIC CODES SUCH    03/9  0 X21 068
00000.*                    THAT &X00=&#EBCDIC(001), ...,           03/90 X21 069
00000.*                    &XFF=&#EBCDIC(255).                     03/90 X21 070
00000.*                                                                      071
0000  0.* LAST CHANGE DATE - OCTOBER 18, 1983                                  0
7200000.*                  - MAILING ADDRESS CHANGE                            0
7300000.*                                                                      0
7400000.* LAST CHAN  GE DATE - MARCH 16, 1983
 07600000.*                  - COMMENTARY CHANGES
 07700000.*                  - MAILING ADDRESS CHANGE
 07800000.*
   07900000.* LAST CHANGE DATE - DECEMBER 4, 1981
   08000000.*                  - THE "SIZE=" FUNCTION HAS BEEN ENHANCED
   08100000.*                    TO INCLUDE SUPPO  RT FOR THE "NE"
     08200000.*                    RELATION.
     08300000.*
     08400000.* LAST CHANGE DATE - APRIL 21, 1981
       08500000.*                  - MACRO NAME CHANGED FROM $TEST TO #TEST
       08600000.*
       08800000.* LAST CHANGE DATE - APRIL 15, 1981                            +
         08900000.*                  - THE "NUM" FUNCTION NO LONGER ISSUES AN
           09000000.*                    ERROR MESSAGE WHEN IT ENCOUNTERS A
           09100000.*                    NON-DIGIT. IT ONLY SETS A RETURN CODE
           09200000.*                    OF 16 IN &#TESERR.
           0  9300000.*
             09400000.* LAST CHANGE DATE - APRIL 24, 1978
             09500000.*                    THE GEN=EBCDIC FUNCTION HAS BEEN ADDE
D            09600000.*
               09700000.* LAST CHANGE DATE - FEBRUARY 2, 1977
               09800000.*                  - MAILING ADDRESS CHANGE.
               10000000.*
                 10100000.* LAST CHANGE DATE - SEPTEMBER 10, 1976
                 10200000.*                    THE &SIZE= OPERAND SUPPORT IS CHA
NGED             10300000.*                    TO REQUIRE   THREE SUB-OPERANDS W
ITH THE            10400000.*                    SECOND SPECIFYING ONE OF THE RE
LATION             10500000.*                    OPERATIONS: LT, LE, EQ, GE, OR
GT.                10600000.*                    NOTE, THIS IS NOT COMPA  TIBLE
WITH THE             10700000.*                    PREVIOUS IMPLEMENTATION.
                     10800000.*
                     10900000.* LAST CHANGE DATE - FEBRUARY 10, 1976
                       11100000.*
                       11200000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY
QUESTIONS              11300000.* CONCERNING IT MAY BE ADDRESSED TO:
                         11400000.*       COLE SOFTWARE
               09/96 X32 11500000.*       736 FOX HOLLOW ROAD
               09/96 X32 11600000.*       AFTON, VA. 22920
                         11700000.*
                           11800000.*
                           11900000.*
                           12000000.*                    GENERAL INFORMATION
                   09/96 X32 12100000.*
                   09/96 X32 12300000.*   THE #TEST MACRO IS INTENDED TO BE USED
 AS AN INNER                 12400000.* MACRO. IT PERFORMS A NUMBER   OF DIFFERE
NT TESTS AND                   12500000.* MANIPULATIONS WHICH ARE WHOLELY INDEPE
NDANT OF EACH OTHER.           12600000.* FOR EACH OF THESE FUNCTIONS, INPUT MIG
HT BE SPECIFIED                12700000.* EITHER VIA MACRO OPERANDS OR BOTH MACR
O   OPERANDS AND GLOBAL          12800000.* SYMBOLS (DEPENDING UPON THE FUNCTION
). OUTPUT IS USUALLY             12900000.* COMMUNICATED VIA THE GLOBAL SYMBOLS
&#TESERR AND &#TESRET.           13000000.*
                 +       09/96 X32 13100000.*   &#TESERR IS A SCALER SETA SYMBOL
 WHICH IS USED   IN A                13200000.* MANNER SIMILAR TO A PROGRAM'S CO
MPLETION CODE TO                     13300000.* COMMUNICATE A GROSS INDICATION O
F AN UNUSUAL OR ERROR                13500000.* CONDITION. IF UPON RETURN FROM #
TEST &#TESERR EQUALS ZERO,             13600000.* THEN THE MACRO FUNCTIONED "OK"
; OTHERWISE, THE VALUE OF              13700000.* &#TESERR VARIES DIRECTLY WITH
THE SERIOUSNESS OF THE                 13800000.* UNUSUAL OR ERROR CONDITION, AN
D IT IS ALWAYS SET TO                  139000  00.* REFLECT THE MOST SERIOUS CON
DITION ENCOUNTERED DURING A              14000000.* PARTICULAR INVOCATION OF THE
 #TEST MACRO.                            14100000.*
                               09/96 X32 14200000.*   &#TESR  ET IS A SETC ARRAY
 WHICH IS USED TO CONTAIN                  14300000.* RETURN VALUES FOR THOSE FU
NCTIONS FOR WHICH RETURN                   14400000.* VALUES ARE APPROPIATE. EAC
H ELEMENT OF THE ARRAY HOLDS ONE           14500000.* RETURN VALUE. ONLY AS   MA
NY ELEMENTS ARE USED AS ARE                  14700000.* NEEDED. THOSE ELEMENTS U
SED ALWAYS START WITH ELEMENT                14800000.* NUMBER ONE. IF TWO OR MO
RE TEST FUNCTIONS ARE INVOKED ON             14900000.* A SINGLE CALL AND IF EAC
H OF THEM   GENERATE ONE OR MORE               15000000.* RETURN VALUES, THEN TH
E FIRST FUNCTION PROCESSED WILL USE            15100000.* THE LOW ORDER ENTRIES
IN &#TESRET. THE NEXT FUNCTION WILL            15200000.* USE THE NEXT ENTRIES,
ETC. THE VARIOUS TEST FUN  CTIONS                15300000.* WILL ALWAYS BE PROCE
SSED IN THE SAME ORDER WITH WHICH                15400000.* THEY APPEAR BELOW.
                                                 15500000.*
                                                   15600000.*
                                                   15700000.*
                                                   15900000.* INNER MACROS USED
- NONE                                             1600  0000.*
                                                     16100000         GBLA  &#RE
GVAL(255),&#TESERR                                   16200000         GBLB  &#RR
EGS                                        09/96 X32 16300000           GBLB  &#
HLASM             HL-ASM SWITCH              03/98 X34 16400000         GBLC  &#
REGNME(255),&#TESRET(20)                               16500000         GBLC  &#
EBCDIC(256)                                            16600000         GBLC  &X
00,&X  01,&X02,&X03,&X04,&X05,&X06,&X07        03/90 X21 16700000         GBLC
&X08,&X09,&X0A,&X0B,&X0C,&X0D,&X0E,&X0F        03/90 X21 16800000         GBLC
&X10,&X11,&X12,&X13,&X14,&X15,&X16,&X17        03/90 X21 16900000         GBLC
&X18,&X19,&X1A,&X1B,  &X1C,&X1D,&X1E,&X1F        03/90 X21 17100000         GBLC
  &X20,&X21,&X22,&X23,&X24,&X25,&X26,&X27        03/90 X21 17200000         GBLC
  &X28,&X29,&X2A,&X2B,&X2C,&X2D,&X2E,&X2F        03/90 X21 17300000         GBLC
  &X30,&X31,&X32,&X33,&X34,&X35,&X3+ 6,&X37        03/90 X21 17400000         GB
LC  &X38,&X39,&X3A,&X3B,&X3C,&X3D  ,&X3E,&X3F        03/90 X21 17500000
GBLC  &X40,&X41,&X42,&X43,&X44,&X45,&X46,&X47        03/90 X21 17600000
GBLC  &X48,&X49,&X4A,&X4B,&X4C,&X4D,&X4E,&X4F        03/90 X21 17700000
GBLC  &X50,&X51,&X52,&X53,&X54,&X55,&X56,&X57          03/90 X21 17800000
  GBLC  &X58,&X59,&X5A,&X5B,&X5C,&X5D,&X5E,&X5F        03/90 X21 17900000
  GBLC  &X60,&X61,&X62,&X63,&X64,&X65,&X66,&X67        03/90 X21 18000000
  GBLC  &X68,&X69,&X6A,&X6B,&X6C,&X6D,&X6E,&X6F        03/90 X2  1 18100000
    GBLC  &X70,&X71,&X72,&X73,&X74,&X75,&X76,&X77        03/90 X21 18300000
    GBLC  &X78,&X79,&X7A,&X7B,&X7C,&X7D,&X7E,&X7F        03/90 X21 18400000
    GBLC  &X80,&X81,&X82,&X83,&X84,&X85,&X86,&X87        03/90 X21 18500000
      GBLC  &X88,&X89,&X8A,&X8B,&X8C,&X8D,&X8E,&X8F        03/90 X21 18600000
      GBLC  &X90,&X91,&X92,&X93,&X94,&X95,&X96,&X97        03/90 X21 18700000
      GBLC  &X98,&X99,&X9A,&X9B,&X9C,&X9D,&X9E,&X9F        03/90 X21 18800000
      GBLC  &  XA0,&XA1,&XA2,&XA3,&XA4,&XA5,&XA6,&XA7        03/90 X21 18900000
        GBLC  &XA8,&XA9,&XAA,&XAB,&XAC,&XAD,&XAE,&XAF        03/90 X21 19000000
        GBLC  &XB0,&XB1,&XB2,&XB3,&XB4,&XB5,&XB6,&XB7        03/90 X21 19100000
        GBLC  &XB8,&XB9,&XBA  ,&XBB,&XBC,&XBD,&XBE,&XBF        03/90 X21 1920000
0         GBLC  &XC0,&XC1,&XC2,&XC3,&XC4,&XC5,&XC6,&XC7        03/90 X21 1940000
0         GBLC  &XC8,&XC9,&XCA,&XCB,&XCC,&XCD,&XCE,&XCF        03/90 X21 1950000
0         GBLC  &XD0,&XD1,&XD2,&XD3,&XD4,&X  D5,&XD6,&XD7        03/90 X21 19600
000         GBLC  &XD8,&XD9,&XDA,&XDB,&XDC,&XDD,&XDE,&XDF        03/90 X21 19700
000         GBLC  &XE0,&XE1,&XE2,&XE3,&XE4,&XE5,&XE6,&XE7        03/90 X21 19800
000         GBLC  &XE8,&XE9,&XEA,&XEB,&XEC,&XED,&XEE,&XEF          03/90 X21 199
00000         GBLC  &XF0,&XF1,&XF2,&XF3,&XF4,&XF5,&XF6,&XF7        03/90 X21 200
00000         GBLC  &XF8,&XF9,&XFA,&XFB,&XFC,&XFD,&XFE,&XFF        03/90 X21 201
00000.*                                                            05/97   X33 2
0200000         LCLA  &CTR,&RETPTR,&P,&L,&K,&A1,&A2,&RV(22)                    2
0300000         LCLB  &MESW                                                    2
0400000         LCLC  &RN(22),&BASE,&C1                              10/96 X32 2
0600000&  #TESERR SETA  0
 20700000.*
 20800000.*
 20900000.*
   21000000.*                    THE "DCODE" FUNCTION                    09/96 X
32 21100000.*                                                            09/96 X
32 21200000.*   THIS FUNCTION WAS WRIT  TEN BECAUSE THE MACRO LANGUAGE
     21300000.* DOES NOT SUPPORT THE DECODING OF "SUB-SUB-LIST" NOTATION.
     21400000.*                                                            09/96
 X32 21500000.*   THE INPUT IS COMMUNICATED VIA THE "+ DCODE=" OPERAND AS A
       21600000.* CHARACTER STRING TO BE DECODED. T  HIS STRING MUST BE
         21800000.* EITHER NULL, UNPARENTHESIZED, OR A PARENTHESIZED LIST OF
         21900000.* ELEMENTS SEPERATED FROM EACH OTHER BY COMMAS. THE
         22000000.* ELEMENTS THEMSELVES MAY BE NULL.
           22100000.*
 09/96 X32 22200000.*   FOR A STRING OF N ELEMENTS, THE OUTPUT CONSISTS OF N+1
           22300000.* ENTRIES IN &#TESRET. THE FIRST ENTRY CONTAINS THE VALUE
             22400000.* N. THE REMAINING ENTRIES CONTAIN EACH OF THE ELEMENTS
             22500000.* EXTRACTED FROM THE ORIGINAL STRING. IF THE ORIGINAL
             22600000.* STRING IS NULL, THEN IT IS TREATED AS A SUB-LIST
             227  00000.* CONTAINING ZERO ELEMENTS. IF THE STRING IS
               22800000.* UNPARENTHESIZED, THEN IT IS TREATED AS A SUB-LIST
               23000000.* CONTAINING A SINGLE ELEMENT - NAMELY, ITSELF.
               23100000.*
       09/96 X32 23200000.*   THE DCODE FUNCTION WILL NOT PROPERLY HANDLE THE
                 23300000.* FOLLOWING CONDITIONS:
                 23400000.*
         09/96 X32 23500000.*       A.) A SUB-LIST ELEMENT LONGER THAN EIGHT CHA
RACTERS;           23600000.*       B.) A SUB-LIST ELEMENT THAT ITSELF CONSISTS
OF A               23700000.*           SUB-LIST;
                     23800000.*       C.) A SUB-LIST CONTAINING MORE THAN NINETE
EN                   23900000.*           ELEMENTS.
                     24000000.*
                       24200000.DCODE   AIF   ('&DCODE' EQ 'OMITTED').DCODEND
                       24300000&RETPTR  SETA  &RETPTR+1
                       24400000&CTR     SETA  0
                         24500000         AIF   (K'&DCODE EQ 0).DCDFIN
                         24600000         AIF   ('&DCODE'(1,1) EQ '(').DCDSLST
                         24700000&CTR     SETA  1
                         2  4800000&#TESRET(&RETPTR+1) SETC '&DCODE'
                           24900000         AGO   .DCDFIN
                           25000000.DCDSLST ANOP
                           25100000&K         SETA  K'&DCODE
                             25200000         AIF   ('&DCODE'(&K,1) EQ ')').DCDO
K                            25400000         MNOTE 8,'"&DCODE" HAS INVALID SUBL
IST SYNTAX.'                 25500000&#TESERR SETA  16
                               25600000         AGO   .DCDFIN
                               25700000.DCDOK   ANOP
                               25800000&P       SETA  1                +
                                 25900000&L       SETA  0
                                   26000000.DCDLP1  ANOP
                                   26100000&P       SETA  &P+&L+1
                                   26200000&L       SETA  0-1
                                     26300000&CTR     SETA  &CTR+1
                                     26400000&#TESRET(&RETPTR+&CTR) SETC ''
                                     26600000.DCDLP2  ANOP
                                       26700000&L       SETA  &L+1
                                       26800000         AIF   ('&DCODE'(&P+&L,1)
 NE ',' AND &P+&L NE &K).DCDLP2        26900000         AIF   (&L EQ 0).DCDLPET
                                         27000000&#TESRET(&RETPTR+&CTR) SETC '&D
CODE'(&P,&L)                             27100000         AIF   ('&#TESRET(&RETP
TR+&CTR)' EQ '&DCODE'(&P,&L)).DCDLPET    27200000         MNOTE 8,'ERROR - THE F
OLLOWING TRUNCATION HAS OCCURED:'        27300000           MNOTE *,'        &DC
ODE'                                       27400000         MNOTE *,'        &#T
ESRET(&RETPTR+&CTR)'                       27500000.DCDLPET AIF   (&P+&L NE &K).
DCDLP1                                     27700000.DCDFIN  ANOP
                                             27800000&#TESRET(&RETPTR) SETC '&CT
R'                                           27900000&RETPTR  SETA  &RETPTR+&CTR
                                             28000000.DCODEND ANOP
                                               28100000.*
                                     03/98 X34 28200000.*
                                     03/98 X34 28300000.*
                                       03/98 X34 28400000.*             The HLAS
M Function                             03/98 X34 28500000.*
                                       03/98 X34 28600000.*    This function det
ects whether or not the curre  nt        03/98 X34 28700000.* assembler is IBM's
 High Level Assembler.                   03/98 X34 28900000.*
                                         03/98 X34 29000000.* INPUT:
                                         03/  98 X34 29100000.*   - Set HL_ASM t
o any value. Example: #TEST HL_ASM=TEST    03/98 X34 29200000.*
                                           03/98 X34 29300000.* OUTPUT:
                                           03/98 X34 294000  00.*   - &#HLASM -
=1: This is the High Level Assembler.        03/98 X34 29500000.*
=0: This is not the High Level Assembler.    03/98 X34 29600000.*
                                             03/98 X34 29700000         AI  F
('&HL_ASM' EQ '').HLASMYZ                      03/98 X34 29800000&#HLASM  SETB
(1)                                            03/98 X34 29900000         AGO
.HLASMZ                                        03/98 X34 30100000.HLASMYZ ANOP
         +                                       03/98 X34 30200000.*
                                                   03/98 X34 30300000         AI
F   ('&SYSLIST(1)       '(1,7) NE 'HL_ASM=').HLASMNZ /98 X34 30400000&#HLASM  SE
TB  (0)                                            03/98 X34 30500000         AG
O   .HLASMZ                                          03/98 X34 30600000.HLASMNZ
ANOP                                                 03/98 X34 30700000.HLASMZ
ANOP                                                 03/98 X34 30800000.*
                                                                 30900000.*
                                                                 31000000.*
                                                                 31100000.*
             THE "MEXCL" FUNCTION                        09/96 X32 31300000.*
                                                         09/96 X32 31400000.*
THIS FUNCTION CAN BE USED TO DETERMINE IF TWO OR MORE              31500000.* MU
TUALLY EXCLUSIVE OPERANDS (OR WHATEVER) HAVE BEEN                    31600000.*
PASSED TO THE CALLING MACRO.                                         31700000.*
                                                           09/96 X32 31800000.*
  THE INPUT IS COMMUNICATED VIA THE "MEXCL=" OPERAND AS A            31900000.*
SU  B-LIST WITH ANY NUMBER OF ENTRIES. IF THE MEXCL                    32000000.
* FUNCTION FINDS MORE THAN ONE NON-NULL ENTRY IN THE                   32100000.
* SUB-LIST, THEN IT ISSUES A SEVERITY 8 ERROR MESSAGE, AND             32200000.
* IT SETS &#TESER  R TO A VALUE OF 16.                                   3230000
0.*                                                                      3250000
0.MEXCL   AIF   (N'&MEXCL LT 2).MEXCEND                                  3260000
0&CTR     SETA  0                                                          32700
000.MELP    AIF   (&CTR EQ N'&MEXCL).MEXCEND                               32800
000&CTR     SETA  &CTR+1                                                   32900
000         AIF   (K'&MEXCL(&CTR) EQ 0).MELP                                 330
00000         AIF   (&MESW EQ 1).MEERR                                       331
00000&MESW    SETB  (1)                                                      332
00000         AGO   .MELP                                                      3
3300000.MEERR   MNOTE 8,'ERROR - MUTUALLY EXCLUSIVE OPERANDS HAVE BEEN USED:'  3
3400000         MNOTE *,'        &MEXCL'                                       3
3500000&#TESERR SETA  16
 33700000.MEXCEND ANOP
 33800000.*
 33900000.*
 34000000.*
   34100000.*                     THE "NUM" FUNCTION                     09/96 X
32 34200000.*                                                            09/96 X
32 34300000.*   THIS FUNCTI+ ON CAN BE USED TO DETERMINE WHETHER OR NOT A
     34400000.* GIVEN VAL  UE CONSISTS ENTIRELY OF DIGITS.
       34500000.*                                                            09/
96 X32 34600000.*   THE INPUT IS COMMUNICATED VIA THE "NUM=" OPERAND. IF
       34700000.* THE NUM FUNCTION FINDS   THAT ANY CHARACTER IN THE GIVEN
         34900000.* STRING IS NOT A DIGIT, THEN IT SETS &#TESERR TO A VALUE
         35000000.* OF 16.
         35100000.*
           35200000.NUM     AIF   ('&NUM' EQ 'OMITTED').NUMEND
           35300000         AIF   (K'&NUM EQ 0).NUMERR
           35400000&CTR     SETA  0
             35500000.NUMLP   AIF   (&CTR EQ K'&NUM).NUMEND
             35600000&CTR     SETA  &CTR+1
             35700000         AIF   ('&NUM'(&CTR,1) LT '0').NUMERR
               35800000         AIF   ('&NUM'(&CTR,1) LE '9').NUMLP
               36000000.NUMERR  ANOP
               36100000&#TESERR SETA  16
               36200  000.NUMEND  ANOP
                 36300000.*
                 36400000.*
                 36500000.*
                   36600000.*                    THE "PFIX" FUNCTION
         09/96 X32 36700000.*
         09/96 X32 36800000.*   THIS FUNCTION CAN   BE USED TO DETERMINE THE VAL
IDITY OF             36900000.* A GIVEN REGISTER NAME PREFIX (E.G. "R" IN "R15")
.                    37000000.*
           09/96 X32 37200000.*   THE INPUT CONSISTS OF A REGISTE  R NAME PREFIX
                       37300000.* COMMUNICATED VIA THE "PFIX=" OPERAND AND A TAB
LE OF VALID            37400000.* REGISTER NAME PREFIXES GENERATED VIA PRIOR #RE
GS MACROS              37500000.* AND CONTAINED IN THE &#REGNME AND &#REGVAL GLO
  BAL                    37600000.* SYMBOLS. IF THE GIVEN PREFIX IS NULL, THEN A
 DEFAULT IS              37700000.* USED. IF THE GIVEN PREFIX IS INVALID, THEN A
 SEVERITY 4              37800000.* ERROR MESSAGE IS ISSUED AND A DEFAULT PREFIX
 IS USED. THE              37900000.* DEFAULT IS EITHER THE FIRST PREFIX DEFINED
 VIA A PRIOR               38000000.* #REGS MACRO OR NULL IF NO PRIOR #REGS MACR
O HAS DEFINED              38100000.* ANY PREFIXES.
                           382  00000.*
                   09/96 X32 38400000.*   FOR OUTPUT, THE NEXT AVAILABLE &#TESRE
T ENTRY IS FILLED            38500000.* WITH EITHER THE GIVEN PREFIX OR THE DEFA
ULT PREFIX.                  38600000.*      +
                               38700000.PFI  X    AIF   ('&PFIX' EQ 'OMITTED').P
FIXEND                           38800000.*
                       09/96 X32 38900000&RETPTR  SETA  &RETPTR+1
                                 39000000&#TESRET(&RETPTR)   SETC ''
                                   39100000&CTR     SETA  0
                                   39200000.PFXLP1  AIF   (&CTR GE 255).PFXGDEF
                                   39300000&CTR     SETA  &CTR+1
                                     39400000         AIF   ('&#REGNME(&CTR)' EQ
 '').PFXGDEF                         39600000         AIF   (&#REGVAL(&CTR) LE 1
5).PFXLP1                            39700000&#TESRET(&RETPTR) SETC '&#REGNME(&C
TR)'                                   39800000.PFXGDEF AIF   (K'&PFIX EQ 0).PFI
XEND                                   39900000&CTR     SETA  &CTR-1
                                       40000000.PFXLP2  AIF   (&CTR GE 255).PFXE
RR                                       40100000&CTR     SETA  &CTR+1
                                         40200000         AIF   ('&#REGNME(&CTR)
' EQ '').PFXERR                          40300000         AIF   (&#REGVAL(&CTR)
LE 15).PFXLP2                              40400000         AIF   ('&PFIX' NE '&
#REGNME(&CTR)').PFXLP2                     40500000&#TESRET(&RETPTR) SETC '&PFIX
'                                          40600000         AGO   .PFIXEND
                                           40800000.P  FXERR  MNOTE 4,'WARNING -
 "&PFIX" HAS NOT BEEN PREDEFINED.'           40900000         MNOTE *,'
 A DEFAULT VALUE WILL BE USED.'              41000000         MNOTE *,'
 CHECK YOUR USAGE OF THE #REGS'              41100000         MNOTE   *,'
   MACRO.'                                     41200000.PFIXEND ANOP
                                               41300000.*
                                               41400000.*
                                                 41500000.*
                                                 41600000.*                 THE
"REGS" FUNCTION                        09/96 X32 41700000.*
                                         09/96 X32 41800000.*   THIS FUNCTION CA
N BE USED TO CONVERT A CERTAIN CLASS OF            42000000.* REGISTER NAMES TO
THEIR CORRESPONDING NUMERIC VALUES. IN             42100000.* ORDER FOR A GIVEN
NAME TO BE CONVERTED, IT MUST BE   EITHER            42200000.* A SELF-DEFINING
NUMERIC OR A NAME THAT HAS BEEN DEFINED              42300000.* VIA A PRIOR #REG
S MACRO. THE PURPOSE OF THIS FUNCTION IS             42400000.* TO PROVIDE ARITH
METICLY MANIPULATABLE REGISTER NUMBERS.                42500000.*
                                             09/96 X32 42600000.*   IF THE "R" R
EGISTER NAMES HAVE NOT YET BEEN DEFINED TO   09/96 X32 42700000.* THE #REGS MACR
O, THEN THIS ROUTINE AUTO-DEFINES THEM (BUT  09/96 X32 42800000            _ .*
DOES *NOT* GENERATE THEM) BEFORE PROCEEDING.               09/96 X32 42900000.*
                                                           09/96 X32 43000000.*
  THE INPUT CONSISTS OF A SUB-LIST OF REGISTER NAMES                 43200000.
* COMMUNICATED VIA THE "REGS=" OPERAND AND A TABLE OF VALID            43300000.
* REGISTER NAME PREFIXES GENERATED VIA PRIOR #REGS MACROS              43400000.
* AND COMMUNICATED VIA THE &#REGNME AND &#REGVAL GLOBAL                43500000.
* SYMBOLS.                                                               4360000
0.*                                                            09/96 X32 4370000
0.*   FOR A SUB-LIST OF N REGISTER NAMES, THE OUTPUT CONSISTS            4380000
0.* OF N ENTRIES IN &#TESRET   EACH CONTAINING THE NUMBER OF               43900
000.* THE REGISTER REPRESENTED BY THE CORRESPONDING NAME FROM              44000
000.* THE INPUT SUB-LIST.                                                  44100
000.*                                                              09/96 X32 443
00000.*   IF ANY REGISTER NAME CANNOT BE PROPERLY DECODED, THEN              444
00000.* &#TESERR IS SET TO A VALUE OF 16. NO ERROR MESSAGE IS                445
00000.* ISSUED.                                                                4
4600000.*                                                                      4
4700000.REGS    AIF   (N'&REGS EQ 0).REGSEND                                   4
4800000.*                                                            09/9  6 X32
 44900000.************************************************************ 10/96 X32
 45000000.* GENERATE CHARACTER SUFFICES 0 THRU 15 AND A THRU F, AND  * 10/96 X32
 45100000.* MATCH THEM TO NUMERIC VALUES 0 THRU 15 AND 10 THRU 15.   * 10/96 X32
 4520000  0.************************************************************ 10/96 X
32 45300000&CTR     SETA  0
   45500000.REGLP1  AIF   (&CTR GE 16).REGLP2
   45600000&RN(&CTR+1)   SETC '&CTR'
     45700000&RV(&CTR+1) SETA &CTR
     45800000&CTR     SETA  &CTR+1
     45900000         AGO   .REGLP1
       46000000.*                                                            09/
96 X32 46100000.REGLP2  AIF   (&CTR GE 22).REGND2
       46200000&CTR     SETA  &CTR+1
         46300000&RN(&CTR) SETC 'ABCDEF'(&CTR-16,1)
         46400000&RV(&CTR) SETA &CTR-7
         46500000         AGO   .REGLP2
           46700000.REGND2  ANOP
           46800000.*
 09/96 X32 46900000.************************************************************
 10+ /96 X32 47000000.* SCAN THE REGISTERS NAMES TO BE TESTED:
   * 10/96 X32 47100000.*   - RETURN NULL FOR EACH NULL NAME GIVEN.
   * 10/96 X32 47200000.*   - IF A SELFDEFINING NUMERIC IS GIVEN, THEN:
   * 10/96 X32 47300000.*       - MAKE SURE ITS VALUE IS IN THE 0-15 RANGE.
   * 10/96 X32 4  7400000.*       - RETURN ITS NUMERIC VALUE TO THE CALLER.
     * 10/96 X32 47500000.******************************************************
****** 10/96 X32 47600000&CTR     SETA  0
                 47700000.REGLP  3  AIF   (&CTR GE N'&REGS).REGSEND
                   47900000&CTR     SETA  &CTR+1
                   48000000&RETPTR  SETA  &RETPTR+1
                   48100000&#TESRET(&RETPTR) S  ETC ''
                     48200000         AIF   (K'&REGS(&CTR) EQ 0).REGLP3
                     48300000&#TESRET(&RETPTR) SETC '&REGS(&CTR)'
                     48400000         AIF   (T'&REGS(&CTR) NE   'N').REGLP3A
                       48500000         AIF   (&REGS(&CTR) LT 0 OR &REGS(&CTR) G
T 15).REGERR           48600000         AGO   .REGLP3
                       48700000.*
               09/96 X32 48800000.**********************************************
************** 10/96 X32 48900000.* SEE IF THE GIVEN REGISTER NAME EXACTLY MATCH
ES A         * 10/96 X32 49100000.* POSSIBLY TABLED SPECIFIC REGISTER NAME. IF S
O, THEN        * 10/96 X32 49200000.* RETURN THAT NAME'S NUMERIC VALUE.
               * 10/96 X32 49300000.********************************************
**************** 10/96 X32 49400000.REGLP3A ANOP
                             49500000&A1      SETA  0
                             49600000.REGLP4  AIF   (&A1 GE 255).REGND4
                             49700000&A1      SETA  &A1+1
                             49800000           AIF   ('&#REGNME(&A1)' EQ '').RE
GND4                           49900000         AIF   (&#REGVAL(&A1) GT 15).REGP
FX                             50000000         AIF   ('&REGS(&CTR)' NE '&#REGNM
E(&A1)').REGLP4                50100000&#TESRET(&RETPTR)   SETC '&#REGVAL(&A1)'
                                 50300000         AGO   .REGLP3
                                 50400000.*
                       09/96 X32 50500000.*****************************  *******
************************ 10/96 X32 50600000.* SEE IF THE GIVEN REGISTER NAME EXA
CTLY MATCHES A TABLED  * 10/96 X32 50700000.* PREFIX CONCATTENATED WITH A NUMERI
C NAME. IF SO, THEN    * 10/96 X32 50800000.* RETURN THE CORRESPONDING NUMERIC V
ALUE.                    * 10/96 X32 50900000.**********************************
************************** 10/96 X32 51000000.REGPFX  ANOP
                                     51100000&A2      SETA  0
                     +                 51200000.REGLP5  AIF   (&A2 GE 22).REGLP4
                                         51400000&A2      SETA  &A2+1
                                         51500000         AIF   ('&REGS(&CTR)' N
E '&#REGNME(&A1)&RN(&A2)').REGLP5        51600000&#TESRET(&RETPTR) SETC '&RV(&A2
)'                                         51700000         AGO   .REGLP3
                                           51800000.REGND4  ANOP
                                           51900000.*
                                 10/96 X32 520000  00.**************************
********************************** 10/96 X32 52100000.* AGAIN, SEE IF THE GIVEN
REGISTER NAME IS A SIMPLE        * 10/96 X32 52200000.* NUMERIC VALUE. THIS TEST
 IS PERFORMED IN CASE THE        * 10/96 X32 52300000.* "NUMERIC   TYPE" TEST DO
NE EARLIER FAILS FOR SOME REASON.  * 10/96 X32 52400000.************************
************************************ 10/96 X32 52600000&A2      SETA  0
                                               52700000.REGLP6  AIF   (&A2 GE 1
 6).REGND6                             10/96 X32 52800000&A2      SETA  &A2+1
                                                 52900000         AIF   ('&REGS(
&CTR)' NE '&RN(&A2)').REGLP6                     53000000         AGO   .REGLP3
                                                   53100000.REGND6  ANOP
                                         10/96 X32 53200000.*
                                         10/96 X32 53300000.********************
*****************************  *********** 10/96 X32 53400000.* FINALLY, SEE IF
THE GIVEN REGISTER NAME IS AN "R<N>"     * 10/96 X32 53500000.* NAME. THIS IS DO
NE IN CASE THE "R" NAMES HAVE NOT YET    * 10/96 X32 53600000.* BEEN TABLED.
                                         * 1  0/96 X32 53800000.****************
******************************************** 10/96 X32 53900000         AIF   (&
#RREGS).REGERR    "R" REGS ALREADY DEFINED   10/96 X32 54000000&A2      SETA  0
                                             10/96 X32 5410  0000.REGLP7  AIF
(&A2 GE 22).REGERR                             10/96 X32 54200000&A2      SETA
&A2+1                                          10/96 X32 54300000         AIF
('&REGS(&CTR)' NE 'R&RN(&A2)').REGLP7          10/96 X32 54400000&#TESRET(  &RET
PTR) SETC '&RV(&A2)'                             10/96 X32 54500000         AGO
  .REGLP3                                        10/96 X32 54600000.*
                                                 10/96 X32 54700000.************
*********  *************************************** 10/96 X32 54800000.* I HAVE N
OT BEEN ABLE TO RECOGNIZE THE GIVEN REGISTER     * 10/96 X32 55000000.* NAME. RE
TORT THE ERROR.                                  * 10/96 X32 55100000.**********
************************  ************************** 10/96 X32 55200000.REGERR
ANOP                                                           55300000&#TESERR
SETA  16                                                       55400000
AGO   .REGLP3                          +                         55500000.REGSEN
D ANOP                                                             55600000.*
                                                         05/97 X33 55700000.*
                                                         05/97 X33 55800000.*
                                                           05/97 X33 55900000.*
                 The RTRIM Function                        05/97 X33 56000000.*
                                                           05/97 X33 56200000.*
   This function trims trailing blanks from the            05/97 X3  3 56300000.
* righthand side of one or more character strings and        05/97 X33 56400000.
* returns the trimmed results to the caller.                 05/97 X33 56500000.
*                                                            05/97 X33 56600000.
*   INPUTS:                                                    05/97 X33 5670000
0.*   - RTRIM=OMITTED: This function is not being called.      05/97 X33 5680000
0.*   - RTRIM=<anything else>: &RTRIM contains a sublist of    05/97 X33 5690000
0.*     one or mo  re character strings to be trimmed.           05/97 X33 57000
000.*                                                            05/97 X33 57100
000.* OUTPUTS when RTRIM<>OMITTED:                               11/97 DBC 57200
000.*   - &RETPTR is incrimented   by the number of substrings     05/97 X33 574
00000.*     found within RTRIM.                                    05/97 X33 575
00000.*   - The next n number of &#TESTRET entries contain         05/97 X33 576
00000.*     trimmed copies of the n substrings   found within        05/97 X33 5
7700000.*     RTRIM.                                                 05/97 X33 5
7800000.*   - &#TESERR=MAX(0,&#TESERR).                              05/97 X33 5
7900000.*                                                              05/97 X33
 58000000.RTRIM   AIF   ('&RTRIM' EQ 'OMITTED').RTRIMZ                 05/97 X33
 58100000.*                                                            05/97 X33
 58200000&A1      SETA  0                                              05/97   X
33 58300000.RTRLP1  AIF   (&A1 GE N'&RTRIM).RTRIMZ                       05/97 X
33 58400000&A1      SETA  &A1+1                                          05/97 X
33 58600000&RETPTR  SETA  &RETPTR+1                                      05/97 X
33 58700000&  #TESRET(&RETPTR) SETC ''                                     05/97
 X33 58800000.*                                                            05/97
 X33 58900000&A2      SETA  K'&RTRIM(&A1)+1                                05/97
 X33 59000000.RTRLP2  AIF     (&A2 LE 1).RTRLP1                              05/
97 X33 59100000&A2      SETA  &A2-1                                          05/
97 X33 59200000         AIF   ('&RTRIM(&A1)'(&A2,1) EQ ' ').RTRLP2           05/
97 X33 59300000&#TESRET(&RETPTR) SETC '&RT  RIM(&A1)'(1,&A2)                   0
5/97 X33 59400000         AGO   .RTRLP1                                        0
5/97 X33 59500000.RTRIMZ  ANOP                                                 0
5/97 X33 59700000.*                                      +
           59800000.*
             59900000.*
             60000000.*                    THE "SIZE" FUNCTION
   09/96 X32 60100000.*
     09/96 X32 60200000.*   THIS FUNCTION WAS WRITTEN BECAUSE OF THE LIMITATION
               60300000.* THAT MACRO CODE CANNOT ARITHMETICLY MANIPULATE OPERAND
S              60400000.* CONSISTING OF EITHER EXPRESSIONS OR EQUATE SYMBOLS.
                 60500000.* BECAUSE OF THIS, IN SITUATIONS WHERE A PROGRAMMER WO
ULD              60600000.* NORMALLY WANT TO USE AN EXPRESSION, ETC., HE MAY INS
TEAD             60700000.* BE FORCED TO USE A SELF DEFINING NUMERIC. THE PROBLE
M IS             609  00000.* THAT IF SUBSEQUENT MODIFICATIONS AFFECT THE VALUE
OF SUCH            61000000.* AN EXPRESSION, THE PROGRAMMER MIGHT FORGET TO CHAN
GE THE             61100000.* SELF DEFINING NUMERIC ACCORDINGLY. THE SIZE FUNCTI
ON CAN             61200000.* BE US  ED TO ALLEVIATE THIS PROBLEM.
                     61300000.*
           09/96 X32 61400000.*   THE INPUT IS COMMUNICATED VIA THE "SIZE=" OPER
AND AND              61500000.* IT MUST CONSIST OF   A THREE ELEMENT SUB-LIST. T
HE FIRST               61600000.* AND THIRD ELEMENTS MUST BE SUCH THAT THEY RESU
LTS IN                 61700000.* NON-RELOCATABLE VALUES WHEN ASSEMBLED. THE SEC
OND OPERAND            61800000.* MUST BE ONE OF THE FOLLOWING RE  LATIONAL OPER
ATORS:                   61900000.*       LT, LE, EQ, GE, GT, NE
                         62100000.* MEANING "LESS THAN", "LESS THAN OR EQUAL", "
EQUAL",                  62200000.* "GREATER THAN OR EQUAL", "GREATER THAN", AND
   "NOT EQUAL"             62300000.* RESPECTIVELY.
                           62400000.*
                 09/96 X32 62500000.*   THE OUTPUT CONSISTS OF A GENERATED STATE
MENT WHICH                   62600000.* PRODUCES NO OBJECT CODE BUT WHICH CAUSES
 AN ERROR                    62700000.* WHENEVER THE TWO GIVEN ELEMENTS VIOLATE
THE INDICATED                62800000.* RELATION.
                             6  2900000.*
                               63000000.SIZE    AIF   (N'&SIZE EQ 0).SIZEEND
                               63100000         AIF   ('&SIZE(2)' EQ 'EQ' OR '&S
IZE(2)' EQ 'GE' OR '&SIZE(2)' *63300000                 EQ 'LE' OR '&SIZE(2)' EQ
 'GT' OR '&SIZE(2)' EQ 'LT' OR '*63400000               &SIZE(2)' EQ 'NE').OPOK
                                 63500000         MNOTE 8,'ERROR - "&SIZE(2)" NO
T A VALID RELATIONAL OPERATOR'   63600000&#TESERR SETA  16
                                   63700000         AGO   .SIZEEND
                                   63800000.OPOK    ANOP  ,
                         06/01 S21 63900000.*                              +
                           06/01 S21 64000000         PUSH  PRINT,NOPRINT
                             06/01 S21 64100000         PRINT NOGEN,NOPRINT
                             06/01 S21 64200000.*
                             06/01 S21 64300000         AIF   ('&SIZE(2)' NE 'EQ
').OPNTE  Q                    06/01 S21 64500000         DC    0YL2(X'7FFF'-(&S
IZE(1))+&SIZE(3),X'7FFF'-(&SIZE(3))+&SIZ*64600000               E(1))
                                         64700000         AGO   .SIZEPOP
                                 06/01 S21 64800000.*
                                 06/01 S21 64900000.OPNTEQ  AIF   ('&SIZE(2)' NE
 'NE').OPNTNE                              65000000         DC    0YL2(X'8000'-(
&SIZE(3)-(&SIZE(1)))/(&SIZE(3)-(&SIZE(  1)))*65100000               )
                                             65200000         AGO   .SIZEPOP
                                   06/01 S21 65300000.*
                                   06/01 S21 65400000  .OPNTNE  ANOP
                                               65500000&BASE    SETC  '7FFF'
                                               65700000         AIF   ('&SIZE(2)
'(2,1) EQ 'E').NOPLUS1                         65800000&BASE    SETC    '8000'
                                                 65900000.NOPLUS1 AIF   ('&SIZE(
2)'(1,1) EQ 'G').OPG                             66000000         DC    0YL2(X'&
BASE'-(&SIZE(3))+&SIZE(1))                       66100000         AGO   .SIZEPOP
                                         06/01 S21 66200000.*
                                         06/01 S21 66300000.OPG     ANOP
                                                   66400000         DC    0YL2(X
'&BASE'-(&SIZE(1))  +&SIZE(3))                       66500000.*
                                           06/01 S21 66600000.SIZEPOP POP   PRIN
T,NOPRINT                                  06/01 S21 66700000.SIZEEND ANOP
                                                       66900000.*
                                                       67000000.*
                                                       67100000.*
                                                         67200000.*
          THE "GEN" FUNCTION                   09/96 X32 67300000.*
                                               09/96 X32 67400000.*    THIS FUNC
TION CAN BE USED TO GENERATE VARIOUS SPECIFIC            675000  00.* OBJECTS. C
URRENTLY, THE SUPPORTED OBJECTS ARE:                       67600000.*
                                                 09/96 X32 67700000.*     - "GEN
=EBCDIC" GENERATES TWO TABLES EACH CONTAINING    03/90 X21 67800000.*       AL
L 256 EBCDIC CODES. ONE TABLE IS A 256 SLOT ARRAY  03/90 X21 68000000.*       NA
MED "&#EBCDIC(256)" WITH THE VALUE OF THE ITH SLOT 03/90 X21 68100000.*       SE
T TO I-1. THE OTHER TABLE IS A SET OF 256 SCALOR   03/90 X21 68200000.*       VA
RIABLES NAMED+  "&X__" WHERE "__" ARE TWO CHARACTERS 03/90 X21 68300000.*
THAT ARE EQ  UIVALANT TO THE VALUE OF THE VARIABLE:    03/90 X21 68400000.*
                                                       09/96 X32 68500000.*
       &X00 = &#EBCDIC(001) = X'00'                    03/90 X21 68600000.*
       .                                                 03/90 X21 68700000.*
         .                                               03/90 X21 68800000.*
         .                                               03/90 X21 68900000.*
         &XFF = &#EBCDIC(256) = X'FF'                      03/90 X21 69000000.*
                                                                     69200000.GE
N     AIF   (N'&GEN EQ 0).GENEND                                     69300000&A1
      SETA  0                                                          69400000.
GENLP   AIF   (&A1 EQ N'&GEN).GENEND                                   69500000&
A1      SETA  &A1+1                                                    69600000
        AIF   ('&GEN(&A1)' EQ '').GENLP                                  6970000
0         AIF   ('&GEN(&A1)' NE 'EBCDIC').GNTEBCD                        6980000
0         AIF   ('&#EBCDIC(194)' EQ 'A').GENLP                           6990000
0.*                                                            06/01 S21 7000000
0&A2        SETA  0-1                                            06/01 S21 70100
000.EGENLP  AIF   (&A2 GE 255).EGENLPZ                           06/01 S21 70200
000&A2      SETA  &A2+1                                          06/01 S21 70400
000&#EBCDIC(&A2+1) SE  TC (BYTE &A2)                               06/01 S21 705
00000         AGO   .EGENLP                                        06/01 S21 706
00000.EGENLPZ ANOP  ,                                              06/01 S21 707
00000.*                                                              06/01 S21 7
0800000&X00     SETC  '&#EBCDIC(001)'                                03/90 X21 7
0900000&X01     SETC  '&#EBCDIC(002)'                                03/90 X21 7
1000000&X02     SETC  '&#EBCDIC(003)'                                  03/90 X21
 71100000&X03     SETC  '&#EBCDIC(004)'                                03/90 X21
 71200000&X04     SETC  '&#EBCDIC(005)'                                03/90 X21
 71300000&X05     SETC  '&#EBCDIC(006)'                                  03/90 X
21 71400000&X06     SETC  '&#EBCDIC(007)'                                03/90 X
21 71600000&X07     SETC  '&#EBCDIC(008)'                                03/90 X
21 71700000&X08     SETC  '&#EBCDIC(009)'                                03/90 X
2  1 71800000&X09     SETC  '&#EBCDIC(010)'                                03/90
 X21 71900000&X0A     SETC  '&#EBCDIC(011)'                                03/90
 X21 72000000&X0B     SETC  '&#EBCDIC(012)'                                03/90
 X21 72100000&X0  C     SETC  '&#EBCDIC(013)'                                03/
90 X21 72200000&X0D     SETC  '&#EBCDIC(014)'                                03/
90 X21 72300000&X0E     SETC  '&#EBCDIC(015)'                                03/
90 X21 72400000&X0F     SETC  '+ &#EBCDIC(016)'                                0
3/90 X21 72500000&X10     SET  C  '&#EBCDIC(017)'
 03/90 X21 72600000&X11     SETC  '&#EBCDIC(018)'
 03/90 X21 72800000&X12     SETC  '&#EBCDIC(019)'
 03/90 X21 72900000&X13     SETC  '&#EBCDIC(  020)'
   03/90 X21 73000000&X14     SETC  '&#EBCDIC(021)'
   03/90 X21 73100000&X15     SETC  '&#EBCDIC(022)'
   03/90 X21 73200000&X16     SETC  '&#EBCDIC(023)'
     03/90 X21 73300000&X17     SETC  '&#EBCDIC(024)'
     03/90 X21 73400000&X18     SETC  '&#EBCDIC(025)'
     03/90 X21 73500000&X19     SETC  '&#EBCDIC(026)'
       03/90 X21 73600000&X1A     SETC  '&#EBCDIC(027)'
       03/90 X21 73700000&X1B     SETC  '&#EBCDIC(028)'
       03/90 X21 73800000&X1C     SETC  '&#EBCDIC(029)'
       03  /90 X21 74000000&X1D     SETC  '&#EBCDIC(030)'
         03/90 X21 74100000&X1E     SETC  '&#EBCDIC(031)'
         03/90 X21 74200000&X1F     SETC  '&#EBCDIC(032)'
         03/90 X21 74300  000&X20     SETC  '&#EBCDIC(033)'
           03/90 X21 74400000&X21     SETC  '&#EBCDIC(034)'
           03/90 X21 74500000&X22     SETC  '&#EBCDIC(035)'
           03/90 X21 74600000&X23     S  ETC  '&#EBCDIC(036)'
             03/90 X21 74700000&X24     SETC  '&#EBCDIC(037)'
             03/90 X21 74800000&X25     SETC  '&#EBCDIC(038)'
             03/90 X21 74900000&X26     SETC  '&#EBCDI  C(039)'
               03/90 X21 75000000&X27     SETC  '&#EBCDIC(040)'
               03/90 X21 75200000&X28     SETC  '&#EBCDIC(041)'
               03/90 X21 75300000&X29     SETC  '&#EBCDIC(042)'
                 03/90 X21 75400000&X2A     SETC  '&#EBCDIC(043)'
                 03/90 X21 75500000&X2B     SETC  '&#EBCDIC(044)'
                 03/90 X21 75600000&X2C     SETC  '&#EBCDIC(045)'
                   03/90 X21 75700000&X2D     SETC  '&#EBCDIC(046)'
                   03/90 X21 75800000&X2E     SETC  '&#EBCDIC(047)'
                   03/90 X21 75900000&X2F     SETC  '&#EBCDIC(048)'
                     03/90 X21 76000000&X30     SETC  '&#EBCDIC(049)'
                     03/90 X21 76100000&X31     SETC  '&#EBCDIC(050)'
                     03/90 X21 76300000&X32     SETC  '&#EBCDIC(051)'
                     03/90 X21 764  00000&X33     SETC  '&#EBCDIC(052)'
                       03/90 X21 76500000&X34     SETC  '&#EBCDIC(053)'
                       03/90 X21 76600000&X35     SETC  '&#EBCDIC(054)'
                       03/90 X21 76700000&X36    +  SETC  '&#EBCDIC(055)'
                         03/90 X21 76800000&X37       SETC  '&#EBCDIC(056)'
                           03/90 X21 76900000&X38     SETC  '&#EBCDIC(057)'
                           03/90 X21 77000000&X39     SETC  '&#EBCDIC(058)'
                           03/90 X21 77100000&X3A     SETC  '&  #EBCDIC(059)'
                             03/90 X21 77200000&X3B     SETC  '&#EBCDIC(060)'
                             03/90 X21 77300000&X3C     SETC  '&#EBCDIC(061)'
                             03/90 X21 77500000&X3D     SETC  '&#EBCDIC(062)'
                               03/90 X21 77600000&X3E     SETC  '&#EBCDIC(063)'
                               03/90 X21 77700000&X3F     SETC  '&#EBCDIC(064)'
                               03/90 X21 77800000&X40     SETC  '&#EBCDIC(065)'
                                 03/90 X21 77900000&X41     SETC  '&#EBCDIC(066)
'                                03/90 X21 78000000&X42     SETC  '&#EBCDIC(067)
'                                03/90 X21 78100000&X43     SETC  '&#EBCDIC(068)
'                                  03/90 X21 78200000&X44     SETC  '&#EBCDIC(06
9)'                                03/90 X21 78300000&X45     SETC  '&#EBCDIC(07
0)'                                03/90 X21 78400000&X46     SETC  '&#EBCDIC(07
1)'                                03/90 X  21 78500000&X47     SETC  '&#EBCDIC(
072)'                                03/90 X21 78700000&X48     SETC  '&#EBCDIC(
073)'                                03/90 X21 78800000&X49     SETC  '&#EBCDIC(
074)'                                03/90 X21 78900000&X  4A     SETC  '&#EBCDI
C(075)'                                03/90 X21 79000000&X4B     SETC  '&#EBCDI
C(076)'                                03/90 X21 79100000&X4C     SETC  '&#EBCDI
C(077)'                                03/90 X21 79200000&X4D     SETC    '&#EBC
DIC(078)'                                03/90 X21 79300000&X4E     SETC  '&#EBC
DIC(079)'                                03/90 X21 79400000&X4F     SETC  '&#EBC
DIC(080)'                                03/90 X21 79500000&X50     SETC  '&#EBC
DIC(081  )'                                03/90 X21 79600000&X51     SETC  '&#E
BCDIC(082)'                                03/90 X21 79700000&X52     SETC  '&#E
BCDIC(083)'                                03/90 X21 79900000&X53     SETC  '&#E
BCDIC(084)'                                  03/90 X21 80000000&X54     SETC  '&
#EBCDIC(085)'                                03/90 X21 80100000&X55     SETC  '&
#EBCDIC(086)'                                03/90 X21 80200000&X56     SETC  '&
#EBCDIC(087)'                                  03/90 X21 80300000&X57     SETC
'&#EBCDIC(088)'                                03/90 X21 80400000&X58     SETC
'&#EBCDIC(089)'                                03/90 X21 80500000&X59     SETC
'&#EBCDIC(090)'                                03/90   X21 80600000&X5A     SETC
  '&#EBCDIC(091)'                                03/90 X21 80700000&X5B     SETC
  '&#EBCDIC(092)'                                03/90 X21 80800000&X5C     SETC
  '&#EBCDIC(093)'                                03/90 X21 80900000            _
 &X5D     SETC  '&#EBCDIC(094)'                                03/90 X21 8110000
0&X5E     SETC  '&#EBCDIC(095)'                                03/90 X21 8120000
0&X5F     SETC  '&#EBCDIC(096)'                                03/90 X21 8130000
0&  X60     SETC  '&#EBCDIC(097)'                                03/90 X21 81400
000&X61     SETC  '&#EBCDIC(098)'                                03/90 X21 81500
000&X62     SETC  '&#EBCDIC(099)'                                03/90 X21 81600
000&X63     SETC    '&#EBCDIC(100)'                                03/90 X21 817
00000&X64     SETC  '&#EBCDIC(101)'                                03/90 X21 818
00000&X65     SETC  '&#EBCDIC(102)'                                03/90 X21 819
00000&X66     SETC  '&#EBCDIC(10  3)'                                03/90 X21 8
2000000&X67     SETC  '&#EBCDIC(104)'                                03/90 X21 8
2100000&X68     SETC  '&#EBCDIC(105)'                                03/90 X21 8
2300000&X69     SETC  '&#EBCDIC(106)'                                  03/90 X21
 82400000&X6A     SETC  '&#EBCDIC(107)'                                03/90 X21
 82500000&X6B     SETC  '&#EBCDIC(108)'                                03/90 X21
 82600000&X6C     SETC  '&#EBCDIC(109)'                                  03/90 X
21 82700000&X6D     SETC  '&#EBCDIC(110)'                                03/90 X
21 82800000&X6E     SETC  '&#EBCDIC(111)'                                03/90 X
21 82900000&X6F     SETC  '&#EBCDIC(112)'                                03/9  0
 X21 83000000&X70     SETC  '&#EBCDIC(113)'                                03/90
 X21 83100000&X71     SETC  '&#EBCDIC(114)'                                03/90
 X21 83200000&X72     SETC  '&#EBCDIC(115)'                                03/90
 X21 8330000  0&X73     SETC  '&#EBCDIC(116)'                                03/
90 X21 83500000&X74     SETC  '&#EBCDIC(117)'                                03/
90 X21 83600000&X75     SETC  '&#EBCDIC(118)'                                03/
90 X21 83700000&X76     SET  C  '&#EBCDIC(119)'                                0
3/90 X21 83800000&X77     SETC  '&#EBCDIC(120)'                                0
3/90 X21 83900000&X78     SETC  '&#EBCDIC(121)'                                0
3/90 X21 84000000&X79     SETC  '&#EBCDIC(  122)'
 03/90 X21 84100000&X7A     SETC  '&#EBCDIC(123)'
 03/90 X21 84200000&X7B     SETC  '&#EBCDIC(124)'
 03/90 X21 84300000&X7C     SETC  '&#EBCDIC(125)'
   03/90 X21 84400000&X7D     SETC  '&#EBCDIC(126)'
   03/90 X21 84600000&X7E     SETC  '&#EBCDIC(127)'
   03/90 X21 84700000&X7F     SETC  '&#EBCDIC(128)'
     03/90 X21 84800000&X80     SETC  '&#EBCDIC(129)'
     03/90 X21 84900000&X81     SETC  '&#EBCDIC(130)'
     03/90 X21 85000000&X82     SETC  '&#EBCDIC(131)'
     03+ /90 X21 85100000&X83     SETC  '&#EBCDIC(132)'
         03/90 X21 85200000&X84     SETC  '&#EBCDIC(133)'
         03/90 X21 85300000&X85     SETC  '&#EBCDIC(134)'
         03/90 X21 85400000&X86     SETC  '&#EBCDIC(135)'
         03/90 X21 8  5500000&X87     SETC  '&#EBCDIC(136)'
           03/90 X21 85600000&X88     SETC  '&#EBCDIC(137)'
           03/90 X21 85800000&X89     SETC  '&#EBCDIC(138)'
           03/90 X21 85900000&X8A       SETC  '&#EBCDIC(139)'
             03/90 X21 86000000&X8B     SETC  '&#EBCDIC(140)'
             03/90 X21 86100000&X8C     SETC  '&#EBCDIC(141)'
             03/90 X21 86200000&X8D     SETC  '&#E  BCDIC(142)'
               03/90 X21 86300000&X8E     SETC  '&#EBCDIC(143)'
               03/90 X21 86400000&X8F     SETC  '&#EBCDIC(144)'
               03/90 X21 86500000&X90     SETC  '&#EBCDIC(145)'
                 03/90 X21 86600000&X91     SETC  '&#EBCDIC(146)'
                 03/90 X21 86700000&X92     SETC  '&#EBCDIC(147)'
                 03/90 X21 86800000&X93     SETC  '&#EBCDIC(148)'
                   03/90 X21 87000000&X94     SETC  '&#EBCDIC(149)'
                   03/90 X21 87100000&X95     SETC  '&#EBCDIC(150)'
                   03/90 X21 87200000&X96     SETC  '&#EBCDIC(151)'
                     03/90 X21 87300000&X97     SETC  '&#EBCDIC(152)'
                     03/90 X21 87400000&X98     SETC  '&#EBCDIC(153)'
                     03/90 X21 87500000&X99     SETC  '&#EBCDIC(154)'
                     03/90 X21   87600000&X9A     SETC  '&#EBCDIC(155)'
                       03/90 X21 87700000&X9B     SETC  '&#EBCDIC(156)'
                       03/90 X21 87800000&X9C     SETC  '&#EBCDIC(157)'
                       03/90 X21 87900000&X9D       SETC  '&#EBCDIC(158)'
                         03/90 X21 88000000&X9E     SETC  '&#EBCDIC(159)'
                         03/90 X21 88200000&X9F     SETC  '&#EBCDIC(160)'
                         03/90 X21 88300000&XA0     SETC  '&  #EBCDIC(161)'
                           03/90 X21 88400000&XA1     SETC  '&#EBCDIC(162)'
                           03/90 X21 88500000&XA2     SETC  '&#EBCDIC(163)'
                           03/90 X21 88600000&XA3     SETC  '&#EBCDIC(164)'
                             03/90 X21 88700000&XA4     SETC  '&#EBCDIC(165)'
                             03/90 X21 88800000&XA5     SETC  '&#EBCDIC(166)'
                             03/90 X21 88900000&XA6     SETC  '&#EBCDIC(167)'
                               03/90 X21 89000000&XA7     SETC  '&#EBCDIC(168)'
                               03/90 X21 89100000&XA8     SETC  '&#EBCDIC(169)'
                               03/90 X21 89200000&XA9     SETC  '&#EBCDIC(170)'
                         +       03/90 X21 89400000&XAA     SETC  '&#EBCDIC(171)
'                                  03/90 X21 89500000&XAB     SETC  '&#EBCDIC(17
2)'                                03/90 X21 89600000&XAC     SETC  '&#EBCDIC(17
3)'                                03/90 X21 89700000&XAD     SETC  '&#EBCDIC(17
4)'                                03/  90 X21 89800000&XAE     SETC  '&#EBCDIC(
175)'                                03/90 X21 89900000&XAF     SETC  '&#EBCDIC(
176)'                                03/90 X21 90000000&XB0     SETC  '&#EBCDIC(
177)'                                03/90 X21 901000  00&XB1     SETC  '&#EBCDI
C(178)'                                03/90 X21 90200000&XB2     SETC  '&#EBCDI
C(179)'                                03/90 X21 90300000&XB3     SETC  '&#EBCDI
C(180)'                                03/90 X21 90400000&XB4     SE  TC  '&#EBC
DIC(181)'                                03/90 X21 90600000&XB5     SETC  '&#EBC
DIC(182)'                                03/90 X21 90700000&XB6     SETC  '&#EBC
DIC(183)'                                03/90 X21 90800000&XB7     SETC  '&#EBC
DIC  (184)'                                03/90 X21 90900000&XB8     SETC  '&#E
BCDIC(185)'                                03/90 X21 91000000&XB9     SETC  '&#E
BCDIC(186)'                                03/90 X21 91100000&XBA     SETC  '&#E
BCDIC(187)'                                  03/90 X21 91200000&XBB     SETC  '&
#EBCDIC(188)'                                03/90 X21 91300000&XBC     SETC  '&
#EBCDIC(189)'                                03/90 X21 91400000&XBD     SETC  '&
#EBCDIC(190)'                                  03/90 X21 91500000&XBE     SETC
'&#EBCDIC(191)'                                03/90 X21 91600000&XBF     SETC
'&#EBCDIC(192)'                                03/90 X21 91800000&XC0     SETC
'&#EBCDIC(193)'                                0  3/90 X21 91900000&XC1     SETC
  '&#EBCDIC(194)'                                03/90 X21 92000000&XC2     SETC
  '&#EBCDIC(195)'                                03/90 X21 92100000&XC3     SETC
  '&#EBCDIC(196)'                                03/90 X21 9220  0000&XC4     SE
TC  '&#EBCDIC(197)'                                03/90 X21 92300000&XC5     SE
TC  '&#EBCDIC(198)'                                03/90 X21 92400000&XC6     SE
TC  '&#EBCDIC(199)'                                03/90 X21 92500000&XC7
SETC  '&#EBCDIC(200)'                                03/90 X21 92600000&XC8
SETC  '&#EBCDIC(201)'                                03/90 X21 92700000&XC9
SETC  '&#EBCDIC(202)'                                03/90 X21 92900000&XCA
SETC  '&#EBCD  IC(203)'                                03/90 X21 93000000&XCB
  SETC  '&#EBCDIC(204)'                                03/90 X21 93100000&XCC
  SETC  '&#EBCDIC(205)'                                03/90 X21 93200000&XCD
  SETC  '&#EBCDIC(206)'                                  03/90 X21 93300000&XCE
    SETC  '&#EBCDIC(207)'                                03/90 X21 93400000&XCF
    SETC  '&#EBCDIC(208)'                                03/90 X21 93500000&XD0
    SETC  '&#EBCDIC(209)'                  +               03/90 X21 93600000&XD
1     SETC  '&#EBCDIC(210)'                                  03/90 X21 93700000&
XD2     SETC  '&#EBCDIC(211)'                                03/90 X21 93800000&
XD3     SETC  '&#EBCDIC(212)'                                03/90 X21 93900000&
XD4     SETC  '&#EBCDIC(213)'                                  03/90 X21 9410000
0&XD5     SETC  '&#EBCDIC(214)'                                03/90 X21 9420000
0&XD6     SETC  '&#EBCDIC(215)'                                03/90 X21 9430000
0&XD7     SETC  '&#EBCDIC(216)'                                03/90 X2  1 94400
000&XD8     SETC  '&#EBCDIC(217)'                                03/90 X21 94500
000&XD9     SETC  '&#EBCDIC(218)'                                03/90 X21 94600
000&XDA     SETC  '&#EBCDIC(219)'                                03/90 X21 94700
000&XD  B     SETC  '&#EBCDIC(220)'                                03/90 X21 948
00000&XDC     SETC  '&#EBCDIC(221)'                                03/90 X21 949
00000&XDD     SETC  '&#EBCDIC(222)'                                03/90 X21 950
00000&XDE     SETC  '  &#EBCDIC(223)'                                03/90 X21 9
5100000&XDF     SETC  '&#EBCDIC(224)'                                03/90 X21 9
5300000&XE0     SETC  '&#EBCDIC(225)'                                03/90 X21 9
5400000&XE1     SETC  '&#EBCDIC(226)  '                                03/90 X21
 95500000&XE2     SETC  '&#EBCDIC(227)'                                03/90 X21
 95600000&XE3     SETC  '&#EBCDIC(228)'                                03/90 X21
 95700000&XE4     SETC  '&#EBCDIC(229)'                                  03/90 X
21 95800000&XE5     SETC  '&#EBCDIC(230)'                                03/90 X
21 95900000&XE6     SETC  '&#EBCDIC(231)'                                03/90 X
21 96000000&XE7     SETC  '&#EBCDIC(232)'                                  03/90
 X21 96100000&XE8     SETC  '&#EBCDIC(233)'                                03/90
 X21 96200000&XE9     SETC  '&#EBCDIC(234)'                                03/90
 X21 96300000&XEA     SETC  '&#EBCDIC(235)'                                03/90
   X21 96500000&XEB     SETC  '&#EBCDIC(236)'                                03/
90 X21 96600000&XEC     SETC  '&#EBCDIC(237)'                                03/
90 X21 96700000&XED     SETC  '&#EBCDIC(238)'                                03/
90 X21 96800000&  XEE     SETC  '&#EBCDIC(239)'                                0
3/90 X21 96900000&XEF     SETC  '&#EBCDIC(240)'                                0
3/90 X21 97000000&XF0     SETC  '&#EBCDIC(241)'                                0
3/90 X21 97100000&XF1     SETC    '&#EBCDIC(242)'
 03/90 X21 97200000&XF2     SETC  '&#EBCDIC(243)'
 03/90 X21 97300000&XF3     SETC  '&#EBCDIC(244)'
 03/90 X21 97400000&XF4     SETC  '&#EBCDIC(24  5)'
   03/90 X21 97500000&XF5     SETC  '&#EBCDIC(246)'
   03/90 X21 97700000&XF6     SETC  '&#EBCDIC(247)'
   03/90 X21 97800000&XF7     SETC  '&#EBCDIC(248)'          +
     03/90 X21 97900000&XF8     SETC  '&#EBCDIC(249)'
       03/90 X21 98000000&XF9     SETC  '&#EBCDIC(250)'
       03/90 X21 98100000&XFA     SETC  '&#EBCDIC(251)'
       03/90 X21 98200000&XFB     SETC  '&#EBCDIC(252)'
         03/90 X21 98300000&XFC     SETC  '&#EBCDIC(253)'
         03/90 X21 98400000&XFD     SETC  '&#EBCDIC(254)'
         03/90 X21 98500000&XFE     SETC  '&#EBCDIC(255)'
           03/90 X21 98600000&XFF     SETC  '&#EBCDIC(256)'
           03/90 X21 98700000         AGO   .GENLP
                     98900000.*
           09/96 X32 990  00000.GNTEBCD MNOTE 8,'ERROR - &&GEN(&A1)=&GEN(&A1) IS
 UNRECOGNIZED'         99100000         AGO   .GENLP
                       99200000.*
             09/96 X32 99300000.GENEND    ANOP
                         99400000.*
                         99500000.*
                         99600000.*
                           99700000.END     MEND  #TEST
                 04/01 S21 99800000./ ADD NAME=#TIOT    0100-03155-03155-1415-00
018-00018-00000-DBCOLE5                     MACRO
                             #TIOT            #TIOT &DOC=,&LIST=
                         X20 10000000         GBLB  &#TIOT
                         X20 15000000         GBLC  &#TIT,&#INFO(20)
                           X20 21000000         AIF   (&#TIOT).MEND
                           X20 26000000&#TIOT   SETB  (1)
                           X20 31000000&#TIT    SETC  'TIOT -- TASK INPUT/OUTPUT
 TABLE'                      X20 36000000&#INFO(1) SETC 'TIOT     = TASK INPUT/O
UTPUT TABLE'                 X20 42000000&#INFO(2) SETC 'TIOT1    = BASIC SECTIO
N BASE'                      X20 47000000&#INFO(3) SETC 'TIOENTRY = DD ENTRY BAS
E'                           X20 5  2000000&#INFO(4) SETC 'TIOESTTB = DEVICE ENT
RY BASE'                       X20 57000000&#INFO(5) SETC 'DSECT CARD NOT GENERA
TED'                           X20 63000000         #TITDOC 'IEFTIOT1 ,',DSECT=T
IOT,                     03/90 X21*68000000                 DOC=&DOC,LIST=&LIST
                                 X20 73000000         IEFTIOT1 ,
                                     78000000&SYSLOC  LOCTR ,
                           07/02 Z12 84000000         #TUNDOC ,
                             09/91 X22 89000000.MEND    MEND  #TIOT
                             04/01 S21 94000000./ ADD NAME=#TITDOC  0100-03155-0
3155-1415-00115-00115-00000-DBCOLE5            ********************************+
 *****************************       X20 #TITDOC *
                               *       X20 02000000* MACRO NAME = #TITDOC.
                               *       X20 03000000*
                               *       X20 04000000* DESCRIPTIVE NAME = LISTING
DOCUMENTATIO  N CONTROLLER.      *       X20 05000000*
                                 *       X20 06000000* STATUS = REFER TO MACRO #
DBCVRSN.                         *       X20 07000000*
                                   *       X20 08000000* FUNCTION = GENERATES TI
TLES AND COMMENTARY BLOCKS AS      *       X20 09000000*            REQUIRED.
                                   *       X20 10000000*
                                   *         X20 11000000* PROCESSER = OS/VS ASS
EMBLER.                              *       X20 12000000*
                                     *       X20 13000000* TYPE = MACRO.
                                     *       X20 14000000  *
                                       *       X20 15000000* AUTHOR - DAVID B. C
OLE.                                   *       X20 16000000*
                                       *       X20 17000000*************  ******
******************************************       X20 18000000         MACRO
                                                 X20 19000000&NME     #TITDOC &M
ACCMD,                                     01/94 X22*20000000               &MAC
TYPE=XD  C,                                  01/94 X22*21000000               &L
IST=,                                        01/94 X22*22000000               &D
OC=,                                         01/94 X22*23000000               &S
OME=,                                          01/94 X22*25000000
&DSECT=                                        01/94 X22 26000000         GBLA
&#NESTED                                       05/93 X22 27000000         GBLB
&#TFSDOC                                         01/94 X22 28000000         GBLB
  &#XPRINT                                       01/02 Z12 28500000         GBLB
  &#DOC,&#LIST,&#SOME,&#L,&#S                    09/91 X22 29000000         GBLC
  &#TIT,&#INFO(20)                                       X20 30000000         LC
LA  &I,&L                                                X20 31000000         LC
LB  &#D,&#T                                              X20 32000000         LC
LC  &BLANKS,&N,&TEXT                               06/92 X22 330000  00&#NESTED
SETA  &#NESTED+1                                     05/93 X22 34000000.*
                                                     01/02 Z12 34060000.*
                                                     01/02 Z12 34130000.*
                                                       01/02 Z12 34200000.******
****************************************************** 01/02 Z12 34260000.* If I
 haven't yet done so, then save the meaning of the   * 01/02 Z12 34330000.* PRIN
T statement.     +                                     * 01/02 Z12 34400000.****
***************  ***************************************** 01/02 Z12 34460000.*
                                                           01/02 Z12 34530000
      AIF   (&#XPRINT).XPRINTZ                             01/02 Z12 34600000
      PUSH  PRINT,NOPRINT                                    07/02 Z12 34620000
        PRINT OFF,NOPRINT                                    07/02 Z12 34640000X
PRINT   OPSYN PRINT               SAVE                       01/02 Z12 34660000
        POP   PRINT,NOPRINT                                    07/02 Z12 3470000
0&#XPRINT SETB  (1)                 REMEMBER                   01/02 Z12 3473000
0.XPRINTZ ANOP  ,                                              01/02 Z12 3480000
0.*                                                              01/02 Z12 34860
000.*                                                            01/02 Z12 34930
000.*                                                                  X20 35000
000         AIF   (&#NESTED GT 1).#LZ                            05/93 X22   360
00000&#L      SETB  ('&LIST '(1,1) EQ 'Y')                         01/94 X22 370
00000&#L      SETB  (('&LIST&#LIST' EQ '1') OR &#L)                01/94 X22 380
00000&#L      SETB  ((('&SOME '(1,1) EQ 'Y') AND &#SOME) OR &#L)   01/94 X22 390
00000&#L        SETB  ((&#TFSDOC AND ('&MACTYPE' EQ 'TFS')) OR &#L)  01/94 X22 4
0000000.*                                                            01/94 X22 4
1000000&#S      SETB  (('&LIST '(1,1) EQ 'S') OR &#L)                09/98 X34 4
2000000&#S      SETB  (('  &LIST&#SOME' EQ '1') OR &#S)                01/94 X22
 43000000.#LZ     ANOP                                                       X20
 44000000.*                                                            01/94 X22
 45000000&#D      SETB  ((&#NESTED GT 1)   OR &#L)                       01/94 X
22 46000000&#D      SETB  (('&DOC '(1,1) EQ 'Y') OR &#D)                 01/94 X
22 47000000&#D      SETB  (('&DOC&#DOC' EQ '1') OR &#D)                  01/94 X
22 48000000.*
 X20 50000000         AIF   (NOT &#D).DOCZ
 X20 51000000         SPACE 3
 X20 52000000         AIF   (K'&#INFO(1) EQ 0).DOCZ                          09/
98 X34 53000000         MNOTE '*************************************************
*******54000000               ****************'                              03/
90 X21 55000000         MNOTE '*************************************************
*****  **56000000               ****************'                              0
3/90 X21 57000000&BLANKS  SETC  '
        *58000000                                   '
     X20 59000000&I         SETA  0
       X20 60000000.INFOLP  ANOP
       X20 61000000&I       SETA  &I+1
       X20 62000000&L       SETA  6+ 6-K'&#INFO(&I)
   03/90 X21 63000000         AIF     (&L EQ 66).INFOZ
     03/90 X21 64000000&TEXT    SETC  '** &#INFO(&I)'.'&BLANKS'(1,&L).'**'
     03/90 X21 65000000         MNOTE '&TEXT'
           X20 66000000         AGO   .INFOLP
             X20 67000000.INFOZ   ANOP
             X20 68000000         MNOTE '***************************************
*****************69000000               ****************'
         03/90 X21 70000000         MNOTE '*************************************
*******************71000000               ****************'
         03/90 X21 72000000         SPACE 1
                 X20 73000000.DOCZ    ANOP
                 X20 75000000.*
           03/90 X21 76000000         AIF   (K'&DSECT EQ 0 OR &#NESTED GT 1).DSE
CTZ        05  /93 X22 77000000&DSECT   DSECT ,
             09/91 X22 78000000.DSECTZ  ANOP
             03/90 X21 79000000.*
                   X20 80000  000         AIF   (K'&MACCMD EQ 0).MACCMDZ
                     X20 81000000&N       SETC  '&NME         '(1,9)
               06/92 X22 82000000&TEXT    SETC  '&N'.'&MACCMD'(2,K'&MACCMD-2)
               06/92 X22 83000000         M  NOTE '&TEXT'
                       X20 84000000.MACCMDZ ANOP
                       X20 85000000.*
                       X20 86000000         AIF   (&#L OR   &#NESTED GT 1).LISTZ
                   05/93 X22 87000000                                  PUSH  PRI
NT,NOPRINT         07/02 Z12 87500000                                  PRINT OFF
,NOGEN,NOPRINT     07/01 S21 88000000PRINT    OPSYN ANOP
                     01/02 Z12 88500000.LISTZ   ANOP
                           X20 89000000.*
                           X20 90000000&#TIT    SETC  ''
                             X20 91000000&I       SETA  0
                             X20 92000000.RESETLP ANOP
                             X20 93000000&I       SETA  &I+1
                               X20 94000000         AIF   ('&#INFO(&I)' EQ '').R
ESETZ                          X20 95000000&#INFO(&I) SETC ''
                               X20 96000000         AGO   .RESETLP
                               X20 970  00000.RESETZ  MEND  #TITDOC
                           04/01 S21 98000000./ ADD NAME=#TUNDOC  0100-03155-031
55-1415-00052-00052-00000-DBCOLE5            ***********************************
************************** 09/91 X22 #TUNDOC *       +
                           * 09/91 X22 05000000* MA  CRO NAME = #TUNDOC.
                             * 09/91 X22 08000000*
                             * 09/91 X22 11000000* DESCRIPTIVE NAME = LISTION CO
DUMENTATION CONTROL, PART 2. * 09/91 X22 14000000*
                               * 09/91 X22 17000000* STATUS = REFER TO MACRO #DB
CVRSN.                         * 09/91 X22 20000000*
                               * 09/91 X22 22000000* FUNCTION = CANCELS ASSEMBLY
   PRINT SUPPRESSION, AS         * 09/91 X22 25000000* NECESSARY.
                                 * 09/91 X22 28000000*
                                 * 09/91 X22 31000000* PROCESSOR = OS/VS ASSEMBL
ER.                                * 09/91 X22 34000000*
                                   * 09/91 X22 37000000* TYPE = MACRO.
                                   * 09/91 X22 40000000*
                                     * 09/91 X22 42000000* AUTHOR = DAVID B. COL
E.                                   * 09/91 X22 45000000*
                                     * 09/91 X22 48000000***********************
************************************** 09/91 X  22 51000000         MACRO
                                         09/91 X22 54000000         #TUNDOC &SOM
E                                        05/93 X22 57000000         GBLA  &#NEST
ED                                       05/93 X22 60000000           GBLB  &#L,
&#S                                        10/91 X22 62000000         GBLB  &#XP
RINT                                       01/02 Z12 62100000.*
                                           01/02 Z12 62300000.*
                                             01/02 Z12 62500000.*
                                             01/02 Z12 62700000.****************
******************************************** 01/02 Z12 62800000.* If I haven't y
et done so,   then save the meaning of the   * 01/02 Z12 63000000.* PRINT statem
ent.                                         * 01/02 Z12 63200000.**************
********************************************** 01/02 Z12 63400000.*
                                                 01/02 Z12 63500000         AIF
  (&#XPRINT).XPRINTZ                             01/02 Z12 63700000XPRINT   OPSY
N PRINT               SAVE                       01/02 Z12 63900000&#XPRINT SETB
  (1)                 REMEMBER                     01/02 Z12 64100000.XPRINTZ AN
OP  ,                                              01/02 Z12 64200000.*
                                                   01/02 Z12 64400000.*
                                                   01/02   Z12 64600000.*
                                                     01/02 Z12 64800000
AIF   (&#L OR &#NESTED GT 1).PRINTOK                 05/93 X22 65000000
AIF   ('&SOME' NE 'SOME').PRINTON                    09/91 X22 68000000
   _          AIF   (NOT &#S).PRINTOK                              10/91 X22 710
00000.PRINTON ANOP  ,                                              01/02 Z12 720
00000PRINT    OPSYN XPRINT                                         01/02 Z12 730
00000                                    POP   PRINT,NOPRINT         07/02 Z12 7
4000000&#L      SETB  (1)                                            09/91 X22 7
7000000.PRINTOK ANOP                                                 09/91 X22 8
0000000.*                                                              05/93 X22
 82000000         AIF   ('&SOME' EQ 'SOME').MEND                       05/93 X22
 85000000&#NESTED SETA  &#NESTED-1                                     05/93 X22
 88000000         AIF   (&#NESTED GE   0).MEND                           05/93 X
22 91000000&#NESTED SETA  0                                              05/93 X
22 94000000.MEND    MEND  #TUNDOC                                        04/01 S
21 97000000./ ADD NAME=#UCM     0100-03155-03155-14  15-00041-00041-00000-DBCOLE
5                     MACRO
     #UCM             #UCM  &DOC=,&LIST=
     04000000         GBLB  &#UCM
       07000000         GBLC  &#TIT,&#INFO(20)
   X20 09000000         AIF   (&#UCM).MEND
       11000000&#UCM    SETB  (1)
         14000000&#TIT    SETC  'UCM -- CONSOLE UNITS CONTROL MODULE'
     X20 16000000&#INFO(1) SETC 'UCM      = CONSOLE UNITS CONTROL MODULE'
     X20 19000000&#INFO(2) SETC 'UCMPRFX  = PREFIX SECTION DSECT AND BASE'
     X20 2100000  0&#INFO(3) SETC 'UCM      = BASIC SECTION DSECT AND BASE'
       X20 23000000&#INFO(4) SETC 'UCM2EXT  = EXTENSION DSECT AND BASE'
       X20 26000000&#INFO(5) SETC 'UCMEIL   = EVENT INDICATION LIST DSECT AND BA
SE'    X20 28000000&#INFO(6) SE  TC 'UCMLIST  = INDIVIDUAL DEVICE ENTRY DSECT AN
D BASE'  X20 30000000&#INFO(7) SETC 'UCMEXIT  = USER EXIT WORK AREA DSECT AND BA
SE'      X20 33000000&#INFO(8) SETC 'UCMFEXTA = UCM FIXED EXTENSION DSECT AND BA
SE'      X20 35000000&#INFO(9) SETC 'UCMFSAVE   = UCM FIXED EXTENSION SAVEAREA D
SECT AND'  X20 38000000&#INFO(10) SETC '           BASE'
           X20 40000000&#INFO(11) SETC 'UCMPEXTA = UCM PAGABLE EXTENSION DSECT A
ND BASE'   X20 42000000&#INFO(12) SETC 'UCMEFEXT = UCME FIXED   EXTENSION DSECT
AND BASE'    X20 45000000&#INFO(13) SETC 'UCMEPEXT = UCME PAGABLE EXTENSION DSEC
T AND BASE'  X20 47000000         #TITDOC 'IEECUCM DSECT=YES,FORMAT=NEW,LIST=YES
',           X20*50000000               DOC=&DOC,LIST=&LIST
               X20 52000000         IEECUCM DSECT=YES,FORMAT=NEW,LIST=YES
               XA1 54000000         #TUNDOC SOME
         09/91 X22 57000000         SPACE 3
           +     X20 59000000***************************************************
*********  *       X20 61000000* THE FOLLOWING DEFINES A FIELD THAT HAS BEEN REM
OVED FROM  *       X20 64000000* THE UCMLIST DSECT BY 128-ROUTE-CODES SUPPORT IN
 XA 2.2.0. *       X20 66000000* THIS FIELD IS NEEDED BY PRE-2.2.0 SYSTEMS FOR
           *       X20 6  9000000* 16-ROUTE-CODES SUPPORT.
             *       X20 71000000***********************************************
**************       X20 73000000         SPACE 1
                     X20 76000000UCMLIS  T  DSECT ,                   RESUME
                       X20 78000000         ORG   UCMLIST+X'20'       RELOCATE
                       X20 80000000UCMRTCD  DS    BL2                 UP TO 16 M
ESSAGE ROUTE           X20 83000000*                                    CODES AC
CEPTED BY THIS           X20 85000000*                                  CONSOLE.
                         X20 88000000         SPACE 1
                         X20 90000000&SYSLOC  LOCTR ,
                     07/02 Z12 92000000         #TUNDOC ,
                     09/91 X22 95000000.MEND    MEND  #UCM
                     04/01 S21 97000000./ ADD NAME=#UNALIGN
                                                  MACRO
                                 00000100&NME     #UNALIGN &OP,&A1,&A2,&A3
                                 00000200.*
                                   00000300.*
                                   00000400.*
                                   00000500.* LAST CHANGE DATE - OCTOBER 18, 198
3                                    00000600.*                  - MAILING ADDRE
SS CHANGE                            00000700.*
                                     00000800.* LAST CHANGE DATE - APRIL 21, 198
1                                    00000900.*                    - MACRO NAME
CHANGED FROM $UNALIGN TO #UNALIGN.     00001000.*
                                       00001100.* LAST CHANGE DATE - FEBRUARY 19
, 1978                                 00001200.*                    - ADD SUPPO
RT FOR THE 'LM' AND 'STM' INSTRUCTIONS   00001300.*
                                         00001400.* LAST CHANGE DATE - JANUARY 1
5, 1978                                  00001500.*
                                           00001600.* THIS MACRO WAS WRITTEN BY
DAVID B. COLE. ANY QUESTIONS CONCERNING    00001700.* IT MAY BE ADDRESSED TO:
                                           00001800.*       RR#2 BOX 712
                                             00001900.*       AFTON, VA. 22920
                                             00002000.*
                                             00002100.*
                             +                 00002200.*
                                                 00002300         LCLA  &W1
                                                 00002400         LCLC  &N(30),&
O(30)                                            00002500&N(1)    SETC  'A'
                                                   00002600&N(2)    SETC  'C'
                                                   00002700&N(3)    SETC  'D'
                                                   00002800&N(4)    SETC  'L'
                                                   000029  00&N(5)    SETC  'M'
                                                     00003000&N(6)    SETC  'N'
                                                     00003100&N(7)    SETC  'O'
                                                     00003200&N(8)    SE  TC  'S
'                                                      00003300&N(9)    SETC  'X
'                                                      00003400&N(10)   SETC  'A
H'                                                     00003500&N(11)   SETC  'A
L'                                                       00003600&N(12)   SETC
'CH'                                                     00003700&N(13)   SETC
'CL'                                                     00003800&N(14)   SETC
'LH'                                                       00003900&N(15)   SETC
  'LM'                                                     00004000&N(16)   SETC
  'MH'                                                     00004100&N(17)   SETC
  'SH'                                                       00004200&N(18)   SE
TC  'SL'                                                     00004300&N(19)   SE
TC  'ST'                                                     00004400&N(20)   SE
TC  'CVB'                                                      00004500&N(21)
SETC  'CVD'                                                    00004600&N(22)
SETC  'STH'                                                    00004700&N(23)
SETC  'STM'                                                    0000  4800&N(24)
  SETC  '        '                                               00004900&O(1)
  SETC  '5A'                                                     00005000&O(2)
  SETC  '59'                                                     00005100&O(3)
    SETC  '5D'                                                     00005200&O(4)
    SETC  '58'                                                     00005300&O(5)
    SETC  '5C'                                                     00005400&O(6)
    SETC  '54'                                                       00005500&O(
7)    SETC  '56'                                                     00005600&O(
8)    SETC  '5B'                                                     00005700&O(
9)    SETC  '57'                                                       00005800&
O(10)   SETC  '4A'                                                     00005900&
O(11)   SETC  '5E'                                                     00006000&
O(12)   SETC  '49'                             +                         0000610
0&O(13)   SETC  '55'                                                       00006
200&O(14)   SETC  '48'                                                     00006
300&O(15)   SETC  '98'                                                     00006
400&O(16)   SETC  '4C'                                                       000
06500&O(17)   SETC  '4B'                                                     000
06600&O(18)   SETC  '5F'                                                     000
06700&O(19)   SETC  '50'                                                       0
0006800&O(20)   SETC  '4F'                                                     0
0006900&O(21)   SETC  '4E'                                                     0
0007000&O(22)   SETC  '40'                                                     0
0007100&O(  23)   SETC  '90'
 00007200&O(24)   SETC  ''
 00007300&W1      SETA  0
 00007400.LP1     ANOP
   00007500&W1      SETA  &W1+1
   00007600         AIF   ('&N(&W1)' LT '&OP').LP1
   00007700         AIF   ('&N(&W1)' EQ   '&OP').END1
     00007800&W1      SETA  24
     00007900.END1    AIF   ('&O(&W1)' GE '80').RS
     00008000&NME     LA    &A1,&A2
       00008100         AGO   .COMMON
       00008200.RS      ANOP
       00008300&NME     ICM   &A1,&A2,&A3
         00008400.COMMON  ANOP
         00008500         ORG   *-4
         00008600         DC    X'&O(&W1)'
           00008700         ORG   *+3
           00008800         MEND
           00008900./ ADD NAME=#USING   0100-03155-03155-1415-00042-00042-00000-
DBCOLE5                       MACRO
             #USING           #USING &D
             04000000.*
             06000000.*
               09000000.*
               11000000.* LAST CHANGE DATE - OCTOBER 18, 1983
               13000000.*                  - MAILI  NG ADDRESS CHANGE
                 16000000.*
                 18000000.* LAST CHANGE DATE - APRIL 21, 1981
                 20000000.*                  - MACRO NAME CHANGED+  FROM $USING
TO #USING.         23000000.*
                     25000000.* LAST CHANGE DATE - FEBRUARY 2, 1977
                     27000000.*                  - MAILING ADDRESS CHANGE.
                     30000000.*
                       32000000.* LAST CHANGE DATE - AUGUST 23, 1976
                       34000000.*
                       37000000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY Q
UESTIONS CONC  ERNING    39000000.* IT MAY BE ADDRESSED TO:
                         41000000.*       RR#2 BOX 712
                         44000000.*       AFTON, VA. 22920
                         460  00000.*
                           48000000.*
                           51000000.*
                           53000000.*   THI  S MACRO GENERATES A USING INSTRUCTI
ON THAT REDECLARES ALL BASES 55000000.* (IF ANY) DECLARED BY A PRIOR #ENTER MACR
O EXPANSION.                 58000000.*
                             60000000.*
                               62000000.*
                               65000000.* INNER MACROS USED - NONE
                               67000000.*
                                 69000000         GBLC  &#BS(14)
                                 72000000         LCLA  &A1,&DISPL
                                 74000000         AIF   ('&#BS(14)' EQ '').END
                                   76000000&DISPL   SETA  &DISPL-4095
                                   79000000&A1      SETA  14
                                   81000000.LP      AIF   (&A1 EQ 2).END
                                     83000000&A1      SETA  &A1-1
                                     86000000         AIF   ('&#BS(&A1)' EQ '').
LP                                   88000000&DISPL   SETA  &DISPL+4095
                                     9  0000000         USING &#BS(14)+&DISPL,&#
BS(&A1)                                93000000         AGO   .LP
                                       95000000.END     MEND  #USING
                             04/01 S21 97000000./ ADD   NAME=#XXC     0100-03155
-03155-1415-00528-00528-00000-DBCOLE5                     MACRO
                                         #XXC    &NAME    #XXC  &OP,&T,&F,&L,&SV
ID=,&PFIX=,&MF=INLINE                    00300000.*
                                           00500000.*
                                           00700000.*
                                 02/02 DBC 00750000.* LAST CHANGE DATE - FEBRUAR
Y 4+ , 2002                        02/02 DBC 00800000.*                  - 64-bi
t   mode support.                    02/02 DBC 00850000.*
                                     06/98 X34 00900000.* LAST CHANGE DATE - JUN
E 5, 1998                            06/98 X34 01100000.*                  - Add
ed support for S  VID=NONE.            06/98 X34 01300000.*                  - M
ailing address change.                 06/98 X34 01500000.*
                                                 01700000.* LAST CHANGE DATE - O
CTOBER 18, 1983                                    01900000.*                  -
 MAILING ADDRESS CHANGE                            02000000.*
                                                   02200000.* LAST CHANGE DATE -
 MARCH 8, 1982                                       02400000.*
 - THE LENGTH VERIFICATION TEST ("#TEST SIZE=...")   02600000.*
   HAS BEEN REMOVED. IT IS NOT REALLY NEEDED.        02800000.*
                                                     03000000  .* LAST CHANGE DA
TE - DECEMBER 1, 1981                                  03200000.*
   - "PFIX=(...,NOSAVE)" SUPPORT HAS BEEN ADDED. THIS  03400000.*
     PROVIDES A MEANS OF BYPASSING THE ISSUENCE OF THE 03600000.*
       #REGS MACRO. (SOMETIMES, THE #REGS MACRO THAT I   03800000.*
       WOULD GET IS NOT THE ONE I WANT).                 03900000.*
                                                         04100000.* LAST CHANGE
DATE - JUNE   1, 1981                                      04300000.*
       - BUG FIXED. NOW, IF MF=SUBROUTINE AND              04500000.*
         OP=TRT, THEN R1 IS NOT RESTORED WHEN              04700000.*
         THE SUBROUTINE CO  MPLETES.                         04900000.*
                                                             05100000.* LAST CHA
NGE DATE - APRIL 21, 1981                                    05300000.*
         - MACRO NAME CHANGED FROM $XXC T  O #XXC.             05500000.*
                                                               05700000.* LAST C
HANGE DATE - APRIL 20, 1981                                    05800000.*
           - "#REGS GEN=NO" SUPPORT ADDED.                       06000000.*
                                                                 06200000.* LAST
 CHANGE DATE - DECEMBER 12, 1977                                 06400000.*
             - SYNTAX BUG FIXED. A CONTINUATION CHARACTER WAS    066000  00.*
                 NOT PLACE IN COLUMN 72.                           06800000.*
                                                                   07000000.* LA
ST CHANGE DATE - JANUARY 17, 1977                                  07200000.*
                 - FORM OF &MF= OPERAND REDESIGNED.                  07400000.*
                 - DEFAULT MEANINGS OF &T AND &F AND (FOR            07600000.*
                   MF=SUBROUTINE) &L REMOVED.                        07700000.*
                 - RE+ GISTER FORM OF &SVID= SUPPORTED.                07900000.
*                    - COMMENTARY REWRITTEN.                             0810000
0.*                  - MAILING ADDRESS CHANGED.                          0830000
0.*                                                                      0850000
0.* LAST CHANGE DATE - SEPTEMBER 2  7, 1976                                08700
000.*                  - FIXED BUG: MISSING SEQUENCE SYMBOL - .TLR         08900
000.*                  - CHANGED LENGTH SIZE TEST TO BE GENERATED WHENEVER 09100
000.*                    &L(2) WAS GIVEN WITH THE   NON-ROUTINE/SUBROUTINE   093
00000.*                    FORM OF THE MACRO CALL.                           095
00000.*                  - IF THE CALL IS A KNOWN LENGTH FORM AND IF THE     096
00000.*                    LENGTH'S DERIVATIVE EXPRESSION IS GIV  EN (&L(2))   0
9800000.*                    THEN IT IS USED TO DERIVE THE LENGTH FIELD OF THE 1
0000000.*                    LAST SS INSTRUCTION GENERATED.                    1
0200000.*
 10400000.* LAST CHANGE DATE - JUNE 6, 1975
 10600000.*
 10800000.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
 11000000.* IT   MAY BE ADDRESSED TO:
   11200000.*       Cole Software, LLC                                   06/98 X
34 11400000.*       736 Fox Hollow Road                                  06/98 X
34 11500000.*       AFTON, VA  . 22920
     11700000.*
     11900000.*
     12100000.*    THIS MACRO GENERATES ROUT  INES TO PERFORM NON-DECIMAL
       12300000.* STORAGE-TO-STORAGE FUNCTIONS ON OPERANDS OF ARBITRARY LENGTH.
       12500000.* SUPPORTED "SS-FUNCTIONS" ARE:
       12700000.*       CLC      MVZ      TR
         12900000.*       MVC      NC       TRT
         13100000.*       MVN      OC       XC
         13300000.*
           13400000.*    THIS MACRO HAS TWO DIFFERENT MODES OF EXPANSION:
           13600000.*     - IF THE OPERAND LENGTHS ARE KNOWN AT ASSEMBLY TIME, T
HEN THE    13800000.*       EXPANSION CAN CONSIST OF A SUFFICIENT NUMBER OF
             14000000.*       SS-INSTRUCTIONS TO ACCOMODATE THE GIVEN LENGTH. FO
R EACH       14200000.*       SUCCESSIVE SS-INSTRUCTION GENERATED, THE SINK OPER
AND POINTER  14400000.*       IS INCREMENTED BY 256. THE SOURCE OPERAND POINTER
IS ALSO      14600000.*         INCREMENTED BY 256 UNLESS THE OPERATOR IS EITHER
 "TR" OR       14800000.*       "TRT". ADDITIONALLY FOR "CLC" AND "TRT", CONDITI
ONAL BRANCH    15000000.*       INSTRUCTIONS ARE INSERTED IN THE EXPANSION SO TH
AT UPON THE    15200000.*       FIRST O+ CCURANCE OF A NOT-EQUAL CONDITION THE R
EMAINING         15300000.*       SS-  INSTRUCTIONS ARE BYPASSED.
                   15500000.*     - IF THE OPERAND LENGTHS CANNOT BE KNOWN UNTIL
 EXECUTION TIME,   15700000.*       THEN THE EXPANSION IS A GENERALIZED SUBROUTI
NE CAPABLE OF      15900000.*       PROCESSING ANY L  ENGTH.
                     16100000.*
                     16300000.* &NAME
                     16500000.*       THIS OPERAND IS OPTIONAL. IF   GIVEN, THEN
, OF COURSE, IT LABELS 16700000.*       THE GENERATED CODE.
                       16900000.*
                       17100000.* &MF=
                         17300000.*       THIS OPERAND IS OPTIONAL. IF OMITTED,
THEN MF=INLINE IS        17400000.*       ASSUMED. &MF= CONTROLS THE OVERALL FOR
M OF THE MACRO           17600000.*       EXPANSION. &MF= MAY BE GIVEN IN THE FO
LLOWING FORMS:             17800000.*       -OMITTED-
                           18000000.*       MF=
                           18200000.*       MF=INLINE
                           18400  000.*             THE SINK OPERAND LENGTH IS K
NOWN AT ASSEMBLY TIME. THE   18600000.*             MACRO EXPANDS INTO A SUFFICI
ENT REPETITION OF            18800000.*             SS-INSTRUCTIONS TO PERFORM T
HE FUNCTION.                 19000000.*       M  F=(SUBROUTINE, --- )
                               19200000.*             THE SINK OPERAND LENGTH CA
NNOT BE KNOWN UNTIL ASSEMBLY   19300000.*             TIME. THE MACRO EXPANDS IN
TO A GENERALIZED SUBROUTINE    19500000.*             CAPABLE   OF PERFORMING TH
E REQUIRED SS-FUNCTION ON        19700000.*             OPERANDS OF ARBITRARY LE
NGTH.                            19900000.*       MF=SUBROUTINE
                                 20100000.*       MF=(SUBROUTINE,(14))
                                   20300000.*             WHEN THE SS-FUNCTION S
UBROUTINE COMPLETES, A RETURN IS   20500000.*             MADE TO THE ADDRESS PO
INTED TO BY REGISTER-14.           20700000.*       MF=(SUBROUTINE,(-X-))
                                     20900000.*             -X- MUST BE AN ABSOL
UTE EXPRESSION REPRESENTING THE NAME 21100000.*             OF A REGISTER CONTAI
NING A RETURN ADDRESS.               21200000.*       MF=(SUBROUTINE,-X-)
                                       21400000.*             -X- MUST BE AN ABS
OLUTE OR RELOCATABLE EXPRESSION        21600000.*             REPRESENTING A FIX
ED RETURN ADDRESS.                     21800000.*       MF=(SUBROUTINE,*)
                                       220  00000.*             WHEN THE SS-FUNC
TION SUBROUTINE COMPLETES, IT FALLS      22200000.*             THROUGH TO CODE
FOLLOWING THE MACRO EXPANSION.           22400000.*
                                         22600000.* &OP  +
                                           22800000.*         THIS OPERAND IS RE
QUIRED. IT IDENTIFIES THE SS-FUNCTION TO BE  23000000.*       PERFORMED. IF SHOU
LD BE EITHER:                                23100000.*          CLC      MVZ
   TR                                        23300000.*          MVC        NC
     TRT                                       23500000.*          MVN      OC
     XC                                        23700000.*       IF IT IS ANYTHIN
G ELSE, THEN A SEVERITY-4 DIAGNOSTIC IS ISSUED 23900000.*       BEFORE THE EXPAN
SION   IS ATTEMPTED.                             24100000.*
                                                 24300000.* &T
                                                 24500000.*       THIS OPERAND I
S REQUIRED. IT IDENT  IFIES THE LOCATION OF THE    24700000.*       SINK OPERAND
. IT MAY BE EITHER AN ADDRESS, A REGISTER, OR A    24900000.*       BASE/DISPLAC
EMENT COMBINATION AS FOLLOWS:                      25000000.*       -X- (ADDRESS
 FORM): -X- MAY BE EITHER AN ABSOLU  TE OR           25200000.*           RELOCA
TABLE EXPRESSION IDENTIFYING THE LOCATION OF THE     25400000.*           SINK O
PERAND.                                              25600000.*       (-X-) (REG
ISTER FORM): -X- MUST BE AN ABSOLUTE EXPRESSION        25800000.*             RE
PRESENTING THE NAME OF A REGISTER CONTAINING THE       26000000.*             AD
DRESS OF THE SINK OPERAND.                             26200000.*       (-X-,-Y-
) (BASE/DISPLACEMENT FORM): -X- MUST BE AN ABSOLUTE    26400000.*
    EXPRESSION REPRESENTING A DISPLACEMENT. -Y- MUST BE  26600000.*
    AN ABSOLUTE EXPRESSION REPRESENTING A BASE (REGISTER 26800000.*
    NAME). TOGETHER THE BASE AND DISPLACEMENT GIVE THE   26900000.*
      ADDRESS OF THE SINK OPERAND.                         27100000.*
                                                           27300000.* &F
                                                           27500000.*       THIS
 OPERAND IS REQ  UIRED. IT IDENTIFIES THE LOCATION OF THE    27700000.*       SO
URCE OPERAND. IT MAY BE EITHER AN ADDRESS, A REGISTER, OR A  27900000.*       BA
SE/DISPLACEMENT COMBINATION AS FOLLOWS:                      28100000.*       -X
- (ADDRESS FORM): -X- MAY BE E  ITHER AN ABSOLUTE OR           28300000.*
    RELOCATABLE EXPRESSION IDENTIFYING THE LOCATION OF THE     28500000.*
    SOURCE OPERAND.                                            28700000.*
(-X-) (REGISTER FORM): -X- MUST BE AN ABSOLUT  E EXPRESSION      28800000.*
        REPRESENTING THE NAME OF A REGISTER CONTAINING THE       29000000.*
        ADDRESS OF THE SOURCE OPERAND.                           29200000.*
  (-X-,-Y-) (BASE/DISPLACEMENT FORM): -X- MUST BE AN ABSOLUT  E    29400000.*
              EXPRESSION REPRESENTING A DISPLACEMENT. -Y- MUST BE  29600000.*
              AN ABSOLUTE EXPRESSION REPRESENTING A BASE (REGISTER 29800000.*
              NAME). TOGETHER THE BASE AND DISPLACEMENT GIVE THE   30000000
       _ .*                 ADDRESS OF THE SOURCE OPERAND.
 30200000.*
 30400000.* &L
 30600000.  *       THIS OPERAND RELATES TO THE LENGTH OF THE SINK (AND,
   30700000.*       THEREFORE, THE SOURCE) OPERAND. ITS PRECISE MEANING, HOWEVER
,  30900000.*       DIFFERS DEPENDING UPON THE VALUE OF THE &MF= OPERAND.
   31100000.*
     31300000.* &L    (MF ==> INLINE)
     31500000.*       HERE, &L IS AN OPTIONAL OPERAND REPRESENTING THE ACTUAL LE
NGTH 31700000.*       OF THE SINK OPERAN  D. IT MAY BE GIVEN IN THE FOLLOWING FO
RMS:   31900000.*       -OMITTED-: THE MACRO ATTEMPTS TO USE THE IMPLIED LENGTH
OF THE 32100000.*                  SINK OPERAND. IF THE IMPLIED LENGTH CAN BE KN
OWN AT 32300000.*                  MACRO PASS TIME, THE  N IT IS USED TO CONTROL
 THE     32500000.*                  NUMBER OF SS-INSTRUCTIONS GENERATED; OTHERW
ISE,     32600000.*                  ONLY ONE SS-INSTRUCTION IS GENERATED.
         32800000.*       -X-: -X- MUST BE A SELF-DEFINING TERM (I.E.   RESOLVAB
LE AT      33000000.*            MACRO PASS TIME) REPRESENTING THE LENGTH OF THE
 SINK      33200000.*            OPERAND. IT IS USED TO CONTROL THE NUMBER OF
           33400000.*            SS-INSTRUCTIONS GENERATED.
             33600000.*       (-X-,-Y-): -X- MUST BE AS ABOVE. -Y- MUST BE A ABS
OLUTE        33800000.*                  EXPRESSION (I.E. RESOLVABLE BY FINAL-PA
SS TIME)     34000000.*                  ALSO REPRESENTING THE LENGTH OF THE SIN
K OPERAND.   3420000  0.*                  IN OTHER WORDS, -X- AND -Y- MUST REPR
ESENT THE SAME 34400000.*                  VALUE. THE DISTINCTION IS THAT -Y- CA
N BE           34600000.*                  RESPONSIVE TO SUCH THINGS AS LENGTH A
TTRIBUTES AND  34700000.*                    EQUATE VALUES WHEREAS -X- CANNOT. -
Y- IS NOT USED   34900000.*                  TO CONTROL THE MACRO EXPANSION. INS
TEAD, IT IS USED 35100000.*                  AS A VALIDITY CHECK ON -X-. WHEN -Y
- IS GIVEN, A    35300000.*                  STATE  MENT OF THE FORM:
                   35500000.*                        DC    0Y(X'7FFF'-(X-Y),X'7F
FF'-(Y-X))         35700000.*                  IS GENERATED. THIS STATEMENT DOES
 NOT CREATE ANY    35900000.*                  OBJECT CODE, BUT I  F -X- AND -Y-
 HAVE UNEQUAL        36100000.*                  VALUES, THEN IT DOES GENERATE A
N ASSEMBLY ERROR.    36300000.*
                     36500000.* &L    (&MF ==> SUBROUTINE)
                       36600000.*       HERE, &L IS A REQUIRED OPERAND. IT REPRE
SENTS THE LOCATION OF  36800000.*       THE LENGTH OF THE SINK OPERAND. IT MAY B
E GIVEN IN THE         37000000.*       FOLLOWING FORMS:
               +         37200000.*       -X- (ADDRESS FORM): -X- MUST BE EITHER
 AN ABSOLUTE   OR          37400000.*           RELOCATABLE EXPRESSION REPRESENT
ING THE ADDRESS OF A       37600000.*           FULLWORD CONTAINING THE LENGTH O
F THE SINK OPERAND.        37800000.*       (-X-) (REGISTER FORM): -X- MUST BE A
N ABSOLUTE EXPRESSION      3  8000000.*             REPRESENTING THE NAME OF A R
EGISTER CONTAINING THE       38200000.*             LENGTH OF THE SINK OPERAND.
                             38400000.*
                             38500000.* &SV  ID=
                               38700000.*       THIS OPERAND IS OPTIONAL. IT IDE
NTIFIES THE LOCATION OF A      38900000.*       4-WORD REGISTER SAVE AREA FOR US
E BY THE SUBROUTINE FORM OF    39100000.*       THE MACRO   EXPANSION. (FOR THE
INLINE FORM OF THE EXPANSION,    39300000.*       THE &SVID= OPERAND IS IGNORED.
) &SVID= MAY BE GIVEN IN THE     39500000.*       FOLLOWING FORMS:
                                 39700000.*       -OMITTED-: A 4-WORD SAV  E ARE
A IS INCLUDED IN THE EXPANSION     39900000.*       SVID=-X- (ADDRESS FORM): -X-
 MUST BE EITHER AN ABSOLUTE OR     40100000.*             RELOCATABLE EXPRESSION
 REPRESENTING THE ADDRESS OF A     40300000.*             4-WORD SAVE AREA.
                                     40400000.*       SVID=(-X-) (REGISTER FORM)
: -X- MUST BE AN ABSOLUTE EXPRESSION 40600000.*             REPRESENTING THE NAM
E OF A REGISTER CONTAINING THE       40800000.*             ADDRESS OF A 4-WORD
REGISTER SAVE AREA. WAR  NING, THE     41000000.*             REGISTER CANNOT BE
 EITHER 14, 15, 0, OR 1.               41200000.*       NONE: No save area is us
ed. R14->R1 are used and     06/98 X34 41400000.*             not restored.
                             06/98 X34   41600000.*
                               06/98 X34 41800000.*       Note: No attempt is ma
de to save and restore         06/98 X34 42000000.*       registers used by hard
ware implication. In           06/98 X34 42200000.*         particular, the TRT
instruction uses by implication  06/98 X34 42300000.*       R1 and R2. These reg
isters are not saved or restored 06/98 X34 42500000.*       when the opcode is T
RT.                              06/98 X34 42700000.*
                                             42900000.* &PFIX=
                                             43100000.*       THE #XXC MACRO ATT
EMPTS TO USE REGISTER EQUATES IN ITS         43300000.*       EXPANSION WHEN REF
ERI  NG TO REGISTERS. THIS IS SO THAT THE USE  43500000.*       OF THE REGISTERS
 IS INDICATED IN THE ASSEMBLER'S CROSS         43700000.*       REFERENCE LISTIN
G. THE PFIX= OPERAND CAN BE USED TO CONTROL    43900000.*       THE SET OF EQUAT
ES USED. FOR EXAMP  LE, IF "PFIX=GPR" IS GIVEN,  44100000.*       THEN "GPR1" IS
 USED WHENEVER THE EXPANSION REFERS FO REGISTER  44200000.*       1.
                                                 44400000.*          IF THE PFIX
= OPERAND IS OMITTED, THEN THE SE+ T OF REGISTER   44600000.*       EQUATES DEFI
NED BY THE NEXT PRIOR #REGS MAC  RO IS USED. IF      44800000.*       THERE ARE
NO PRIOR #REGS MACROS, THEN SELF-DEFINING NUMERICS   45000000.*       ARE USED.
                                                     45200000.*
                                                       45400000.* &PFIX=(...,NOS
AVE)                                                   45600000.*       THIS PRE
VENTS THIS MACRO FROM INVOKING THE #REGS MACRO.        45800000.*
                                                       460000  00.*
                                                         46100000.*
                                                         46300000.*
                                                         46500000.* INNER MA  CR
OS USED - #REGS #TEST                                      46700000.*
                                                           46900000         GBLA
  &#TESERR                                                 47100000         GBLC
  &#TESRET(  20)                                             47300000         LC
LA  &TDI,&TRI,&TR                                            47500000         LC
LA  &FDI,&FRI,&FR                                            47700000         LC
LA  &A,&D1,&RE                                                 47900000
LCLB  &LOADR1                                                  48000000
LCLC  &TZ,&TC,&TLP,&TRP                                        48200000
LCLC  &FZ,&FC,&FLP,&FRP                                          48400000
  LCLC  &#,&C,&CD1,&CD2,&N,&@,&SAVEA                             48600000&#
  SETC  '&SYSNDX'                                                48800000&N
  SETC  '&NAME'                                                    49000000
    AIF   ('&OP' EQ 'CLC' OR '&OP' EQ 'MVC' OR '&OP' EQ 'MVN' OR '*49200000
          &OP' EQ 'MVZ' OR '&OP' EQ 'NC' OR '&OP' EQ 'OC' OR '&OP'*49400000
           EQ 'TR' OR '&OP' EQ 'TRT' OR '&OP' EQ 'XC').OPCOK       4960  0000
      MNOTE 4,'WARNING - THE OPCODE IS "&OP".'                       49800000
      MNOTE 4,'THIS EXPANSION WILL PROBABLY NOT BE USEFULL.'         50000000.OP
COK   ANOP                                                           50100000&TD
I       SETA  1                                                        50300000&
TRI     SETA  2                                                        50500000
        AIF   (N'&T GT 1).TREG                                         50700000
        AIF   ('&T' E  Q '&T(1)').TDCODED                                5090000
0&TDI     SETA  2                                                        5110000
0&TRI     SETA  1                                                        5130000
0&TZ      SETC  '0'                                                        51500
000.TREG    ANOP                                                           51700
000&TC      SETC  ','                                                      51900
000&TLP     SETC  '('                              +                         520
00000&TRP     SETC  ')'                                                        5
2200000.TDCODED ANOP                                                           5
2400000&FDI     SETA  1                                                        5
2600000&FRI     SETA  2
 52800000         AIF   (N'&F GT 1).FREG
 53000000         AIF   ('&F' EQ '&F(1)').FDCODED
 53200000&FDI     SETA  2
   53400000&FRI     SETA  1
   53600000&FZ      SETC  '0'
   53800000.FREG    ANOP
   53900000&FC        SETC  ','
     54100000&FLP     SETC  '('
     54300000&FRP     SETC  ')'
     54500000.FDCODED ANOP
       54700000         AIF   ('&MF(1)' EQ 'INLINE' OR '&MF(1)' EQ '').XXC
       54900000         AIF   ('&MF(1)' EQ 'SUBROUTINE').SUB
       55100000         MNOTE 8,'MF(1)=&MF(1  ) IS INVALID.'
         55300000         AGO   .MEND
         55500000.SUB     ANOP
         55700000.*
           55800000&@       SETC  '&PFIX(1)'
           56000000         AIF   ('&PFIX(2). '(1,1) EQ 'N').DONPFIX
           56200000         AIF   (K'&PFIX(1) NE 0).GOTPFIX
             56400000         #TEST PFIX=
             56600000&@       SETC  '&#TESRET(1)'
             56800000         AGO   .DONPFIX
               57000000.GOTPFIX #REGS &PFIX(1),GEN=NO
               57200000.DONPFIX ANOP
               57400000.*
               57600000&  SAVEA   SETC  'X&#.SVA'
                 57700000         AIF   ('&SVID(1)' EQ '').GOTSAVA
                 57900000&SAVEA   SETC  'SVID=NONE'
       06/98 X34 58100000         AIF     ('&SVID' EQ 'NONE').GOTSAVA
         06/98 X34 58300000&SAVEA   SETC  '&SVID'
                   58500000         AIF   ('&SVID(1)' EQ '&SVID').GOTSAVA
                   58700000&SAVEA   SETC  '0(&SVID(1))  '
                     58900000.GOTSAVA ANOP
           06/98 X34 59100000.*
           06/98 X34 59300000         AIF   ('&F(&FRI)' EQ '').GOTFR +
             06/98 X34 59500000         #TEST REGS=&F(&FRI)
                         59600000         AIF   (&#TESERR NE 0).GOTFR
                         59800000&FR      SETA  &#TESRET(1)
                         60000000.GOTFR   ANOP
                           60200000.*
                 06/98 X34 60400000         AIF   ('&SAVEA' EQ 'SVID=NONE').STMZ
                 06/98 X34 60600000&N       STM   &@.14,&@.1,&SAVEA   SAVE WORK
REGISTERS                    60800000&N       SETC  ''
                   06/98 X34 61000000.STMZ    ANOP
                   06/98 X34 61200000.*
                   06/98 X34 614  00000         AIF   ('&TZ' EQ '').TLA
                               61500000         #TEST REGS=&T(&TRI)
                               61700000         AIF   (&#TESERR NE 0).TLR
                               61900000&TR        SETA  &#TESRET(1)
                                 62100000         AIF   (&TR EQ 15).TDONE
                                 62300000.TLR     ANOP
                       06/98 X34 62500000&N       LR    &@.15,  &T(&TRI)      LO
AD SINK REGISTER         06/98 X34 62700000&N       SETC  ''
                         06/98 X34 62900000         AGO   .TDONE
                                   63100000.TLA     ANOP
                           06/98 X34 63300000&N       LA    &@.15,&T(&TDI)&TLP&T
C&T(&TRI)&TRP LOAD SINK REGISTER     63400000&N       SETC  ''
                           06/98 X34 63600000.TDONE   ANOP
                                       63800000.*
                             06/98 X34 64000000&LOADR1  SETB  (('&OP' NE 'TR' AN
D '&OP' NE 'TRT') OR (&FR EQ 14 OR &FR*64200000                EQ 15))
                                         64400000         AIF   (NOT &LOADR1).FD
ONE                                      64600000         AIF   ('&FZ' EQ '').FL
A                                        64800000         AIF   (&FR EQ 15).FLR1
5                                        6  5000000         AIF   (&FR EQ 1).FDO
NE                                         65200000.FLR     ANOP
                                 06/98 X34 65300000&N       LR    &@.1,&F(&FRI)
      LOAD SOURCE REGISTER       06/98 X34 65500000&N         SETC  ''
                                   06/98 X34 65700000         AGO   .FDONE
                                             65900000.FLR15   AIF   (&TR EQ 15).
FLR                                          66100000&N       L     &@.1  ,&SAVE
A+4       LOAD SOURCE REGISTER       06/98 X34 66300000&N       SETC  ''
                                     06/98 X34 66500000         AGO   .FDONE
                                               66700000.FLA     AIF   (&FR EQ 15
).FL15 +                                         66900000&FR      SETA  0
                                                   67100000.FLAA    ANOP
                                         06/98 X34 67300000&N       LA    &@.1,&
F(&FDI)&FLP&FC&F(&FRI)&FRP LOAD SOURCE REGISTER    67400000&N       SETC  ''
                                           06/98 X34 67600000         AGO   .FDO
NE                                                   67800000.FL15    AIF   (&TR
 EQ 15).FLAA                                         68000000&N       L     &@.1
,&SAVEA+4       LOAD -                       06/98 X34 68200000&N       SETC  ''
                                             06/98 X34 68400000         LA    &@
.1,&F(&FDI)(,&@.1) SOURCE REGISTER                     68600000.FDONE   ANOP
                                             06/98   X34 68800000.*
                                               06/98 X34 69000000         AIF
('&L' EQ '&L(1)').LL                           06/98 X34 69200000         #TEST
REGS=&L(1)                                               69300000           AIF
  (&#TESERR NE 0).LLTR                                     69500000&A       SETA
  4                                                        69700000&D1      SETA
  &TR                                                      69900000         AIF
    (&#TESRET(1) EQ 15).LLSVA                                70100000         AI
F   (&#TESRET(1) NE 1).LLTR                                  70300000&A       SE
TA  12                                                       70500000&D1      SE
TA  &FR                                                        70700000.LLSVA
AIF   (&#TESRET(1) EQ &D1).LLTR                                70900000&N
L     &@.0,&SAVEA+&A      LOAD LENGTH REGISTER       06/98 X34 71100000&N
SETC  ''                                               06/98 X34 71200000
  AGO   .LLTR0                                                   71400000.LLTR
  ANOP                                                 06/98 X34 71600000&N
  LTR   &@.0,&L(1)          LOAD LENGTH REGIS  TER; > 0? 06/98 X34 71800000&N
    SETC  ''                                             06/98 X34 72000000
    AGO   .LDONE                                                   72200000.LL
    ANOP                                                 06/  98 X34 72400000&N
      L     &@.0,&L             LOAD LENGTH REGISTER       06/98 X34 72600000&N
      SETC  ''                                             06/98 X34 72800000.LL
TR0   LTR   &@.0,&@.0           LENGTH > 0?                          730000  00.
LDONE   BNP   X&#.RET             NO, EXIT                             73100000
        LA    &@.14,256           YES, GET MAX SINGLE EXECUTE LENGTH   73300000X
&#.LP   CR    &@.14,&@.0          LENGTH NEARLY EXHAUSTED YET?         73500000
        BN  H   X&#.EX              NO, GO EXECUTE MAX LENGTH            7370000
0         LR    &@.14,&@.0          YES, GET LAST EXECUTE LENGTH         7390000
0X&#.EX   BCTR  &@.14,0             CONVERT LENGTH TO MACHINE LENGTH     7410000
0         EX    &@.14,X&#+ .XXC       EXECUTE THE FUNCTION                 74300
000         AIF   ('&OP  ' NE 'TRT' AND '&OP' NE 'CLC').TSTSKIP              745
00000         BNE   X&#.RET             INEQUALITY; GO RETURN TO CALLER      747
00000.TSTSKIP LA    &@.14,1(,&@.14)     RESTORE ORIGINAL LENGTH              749
00000         LA    &@.15,0(&@.14,&@.1  5) ADVANCE SINK REGISTER     02/02 DBC 7
5000000         AIF   ('&OP' EQ 'TRT' OR '&OP' EQ 'TR').NOINCR                 7
5200000         LA    &@.1,0(&@.14,&@.1)  ADVANCE SOURCE REGISTER    02/02 DBC 7
5400000.NOINCR  SR    &@.0,&@.14          DECRIMENT T  HE LENGTH; DONE YET?
 75600000         BP    X&#.LP              NO, KEEP LOOPING
 75800000.*                                                            06/98 X34
 76000000         AIF   ('&OP' NE 'TRT' OR NOT &LOADR1 OR '&SAVEA' E  Q 'SVID=NO
NE*76200000               ').NOTTRTX                                     06/98 X
34 76400000         L     &@.1,&SAVEA+12      YES, TRT MISSED; INSURE R1 RESTORE
D  76600000.NOTTRTX ANOP
     76800000.*                                                            06/98
 X34 76900000&N       SETC  'X&#.RET'                                      06/98
 X34 77100000         AIF   ('&SAVEA' EQ 'SVID=NONE').LMZ                  06/98
 X34 77300000&RE        SETA  1
       77500000         AIF   ('&OP' NE 'TRT').GOTRE
       77700000&RE      SETA  0
       77900000.GOTRE   ANOP
         78100000.*                                                            0
6/98 X34 78300000&N       LM    &@.14,&@&RE,&SAVEA  RESTORE REGISTERS          0
6/98 X34 78500000&N       SETC  ''
 06/98 X34 78700000.LMZ     ANOP
 06/98 X34 78800000.*
 06/98 X34 79000000         AIF   ('&MF(2)' EQ '').BR14
             79200000         AIF   ('&MF(2)' EQ '*').BEND
             79400000         AIF   ('&MF(2)'(1,1) EQ '(').BREG
             79600000.*
     06/98 X34 79800000&N       B     &MF(2)              EXIT
     06/98 X34 80000000&N       SETC  ''
     06/98 X34 80200000         AGO   .DATA
                 80400000.*
       06/98 X34 80600000.BR14    ANOP
       06/98 X34 80700000&N       BR    &@.14               RETURN
       06/98 X34 80900000&N         SETC  ''
         06/98 X34 81100000         AIF   ('&SAVEA' NE 'SVID=NONE').DATA
         06/98 X34 81300000         MNOTE 8,'Logic Error: "BR &@.14" not compati
ble with "SVID=NON*81500000               E+ ".'
           06/98 X34 81700000         AGO     .DATA
                       81900000.*
             06/98 X34 82100000.BEND    ANOP
             06/98 X34 82300000&N       B     X&#.END               EXIT
               06/98 X34 82500000&N       SETC  ''
               06/98 X34 82600000         AGO   .DATA
                         82800000.*
                 06/98 X34 83000000.BREG    #TEST DCODE=&MF(2)
                           83200000&N       BR    &#TESRET(2)         RETURN
                 06/98 X34 83400000&N       SETC  ''
                   06/98 X34 83600000.*
                   06/98 X34 83800000         AIF   ('&OP' NE 'TRT').BRTRTZ
                   06/98 X34 84000000         #TEST REGS=&#TESRET(2)
                   06  /98 X34 84200000         AIF   (&#TESERR NE 0).BRTRTZ
                     06/98 X34 84400000&A       SETA  &#TESRET(1)
                     06/98 X34 84600000         AIF   (&A NE 1 AND &A NE 2).BRTR
TZ                   06/98 X34 84700  000         MNOTE 8,'Logic Error: "BR &#TE
SRET(2)" not compatible with "TR*84900000               T".'
                       06/98 X34 85100000.BRTRTZ ANOP
                       06/98 X34 85300000.*
                         06/98 X34 85500000         AIF   ('&SAVEA' NE 'SVID=NON
E').DATA                 06/98 X34 85700000         #TEST REGS=&#TESRET(2)
                         06/98 X34 85900000         AIF   (&#TESER  R NE 0).DATA
                           06/98 X34 86100000&A       SETA  &#TESRET(1)
                           06/98 X34 86300000         AIF   (&A NE 14 AND &A NE
15 AND &A NE 0 AND &A NE 1).DATA X34 86500000         MNOTE 8,'Logic Error: "BR
&  #TESRET(2)" not compatible with "SV*86600000               ID=NONE".'
                             06/98 X34 86800000.*
                             06/98 X34 87000000.DATA    AIF   ('&SVID(1)' NE '')
.NOSAVEA                                 87200000X&#.SVA  DS    4A
    REGISTER SAVE AREA                   87400000.NOSAVEA ANOP
                               06/98 X34 87600000.*
                                 06/98 X34 87800000         AIF   (NOT &LOADR1).
TRTRTO                           06/98 X34 88000000X&#.XXC  &OP   0(*-*,&@.15),0
(&@.1) (EXECUTED)                          88200000         AGO   .OPCODEZ
                                 06/98 X34 884  00000.*
                                   06/98 X34 88500000.TRTRTO  ANOP
                                             88700000X&#.XXC  &OP   0(*-*,&@.15)
,&FZ&F(&FDI)&FLP&F(&FRI)&FRP (EXECUTED)      88900000.OPCODEZ+  ANOP
                                     06/98 X34 89100000.*
                                       06/98 X34 89300000         AIF   ('&OP' N
E 'TRT').OPTRTZ                        06/98 X34 89500000         DC    0Y(&@.1,
&@.2)       XREF IMPLIED REGISTERS     06/98 X34 89700000.OPTRTZ  ANOP
                                         06/98 X34 89900000         AIF   ('&MF(
2)' NE '*').MEND                         06/98 X34 90100000.*
                                         06/98 X34 90300000X&#.END  DS    0H
                                                     90400000         AGO   .MEN
D                                                    90600000.*
                                           06/98 X34 90800000.* * * * * * * * *
* * * * * * * * * * * *   * * * * * * * * *  06/98 X34 91000000.*
                                             06/98 X34 91200000.XXC     ANOP
                                                       91400000&C       SETC  T'
&L(1)                                                    91600000         AIF
('&C' NE 'O').GOTLEN                                     91800000&C       SETC
T'&T(&TDI)                                               92000000         AIF
('&C' EQ 'M' OR '&C' EQ 'N' OR '&C' EQ 'O' OR '&C' EQ   'T*92200000
  ' OR '&C' EQ 'U' OR '&C' EQ 'W' OR '&C' EQ '$').NOLNGTH  92300000&A       SETA
  L'&T(&TDI)                                               92500000         AIF
  (&A GT 256).LONGMVC                                      92700000.N  OLNGTH AN
OP                                                           92900000&N       &O
P   &TZ&T(&TDI)&TLP&TC&T(&TRI)&TRP,&FZ&F(&FDI)&FLP&F(&FRI)&F*93100000
    RP                                                       93300000         AG
O     .MEND                                                    93500000.GOTLEN
AIF   ('&C' NE 'N').SHORTMV                                    93700000&A
SETA  &L(1)                                                    93900000
AIF   (&A GT 256).L  ONGMVC                                      94100000.SHORTM
V ANOP                                                           94200000&A
  SETA  1                                                        94400000
  AIF   (K'&L(2) EQ 0).SHORT2                                      94600000&A
    SETA  2                                                        94800000.SHOR
T2  ANOP                                                           95000000&N
    &OP   &TZ&T(&TDI)(&L(&A)&TC&T(&TRI)),&FZ&F(&F  DI)&FLP&F(&FRI)&F*95200000
            RP                                                       95400000
      AGO   .MEND                                                    95600000.LO
NGMVC ANOP                                                             95800000&
N       &OP   &TZ&T(&TDI)&CD1.(256&TC&T(&TRI)),&FZ&F(&FDI)&CD2&FLP&F(&*96000000
              FRI)&FRP                                                 96100000&
N       SETC  ''                                                       96300000
           _          AIF   ('&OP' NE 'TRT' AND '&OP' NE 'CLC').NOTEST
     96500000         BNE   X&#.END
     96700000.NOTEST  ANOP
     96900000&  A       SETA  &A-256
       97100000&D1      SETA  &D1+256
       97300000&CD1     SETC  '+'.'&D1'
       97500000         AIF     ('&OP' EQ 'TR' OR '&OP' EQ 'TRT').TROP
         97700000&CD2     SETC  '&CD1'
         97900000.TROP    AIF   (&A GT 256).LONGMVC
         98000000         AIF   (K'&L(2) EQ   0).LAST2
           98200000         &OP   &TZ&T(&TDI)&CD1.(&L(2)-&D1&TC&T(&TRI)),&FZ&F(&
FDI)&CD2&F*98400000               LP&F(&FRI)&FRP
           98600000         AGO   .LAST1
             98800000.LAST2   &OP   &TZ&T(&TDI)&CD1.(&A&TC&T(&TRI)),&FZ&F(&FDI)&
CD2&FLP&F(&F*99000000               RI)&FRP
             99200000.LAST1   AIF   ('&OP' NE 'CLC' AND '&OP' NE 'TRT').ME  ND
               99400000X&#.END  DS    0H
               99600000.MEND    MEND  #XXC
     04/01 S21 99800000./ ADD NAME=EXPORT   0103-99126-03239-1116-00016-00016-00
000-DBCOL  E5            //XPORTMAC JOB (CSW,UPS),'540-456-8536',CLASS=A,MSGCLAS
S=D,                     //             MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439
                         //*
                           //CLEANUP EXEC PGM=IEFBR14
                           //SCRATCH  DD  DSN=DBCOLE.MACROS.EXPORT.XMIT,
                           //             UNIT=SYSALLDA,SPACE=(TRK,0),DISP=(MOD,
DELETE)                    //*
                             //TRANSMIT EXEC PGM=IKJEFT01
                             //SYSTSPRT DD  SYSOUT=*
                             //TEST     DD  DSN=DBCOLE  .MACROS.EXPORT,DISP=SHR
                               //MESSAGE  DD  DSN=DBCOLE.MACROS.EXPORT(README),D
ISP=SHR                        //SYSTSIN  DD  *
                               XMIT MACLIB.USER +
                                      DSNAME('DBCOLE.MACROS.EXPORT') +
                                      MSGDDNAME(MESSAGE) NOLOG +
                                      OUTDSNAME('DBCOLE.MACROS.EXPORT.XMIT')
                                   ./ ADD NAME=GSAMCALL
                                            MACRO
                           00000001&LABEL   GSAMCALL &VERB,
                   +        *00000002               &MF=,
                              *00000003               &POOL=,
                              *00000004               &FILE=,
                              *00000005               &OPTIONS=,
                              *0  0000006               &BUFFER=,
                                *00000007               &BUFFLEN=,
                                *00000008               &RECLEN=,
                                *00000009                 &MSGAREA=,
                                  *00000010               &RBA=,
                                  *00000011               &PASS=
                                   00000012.******************  ****************
**************************           00000013.*
                         *           00000014.* MACRO NAME = GSAMCALL
                         *           00000015.*
                           *           00000016.* DESCRIPTIVE NAME = FAKE GSAM C
ALL MACRO.                 *           00000017.*
                           *           00000018.* FUNCTION = MODIFIES A GSB AND
"BALR"S TO A   GSAM          *           00000019.*            SIMULATION ROUTIN
E WHICH TRANSLATES THE GSAM  *           00000020.*            CALL INTO A SIMPL
E VSAM CALL.                 *           00000021.*
                               *           00000022.* PROCESSOR = ASSEMBLER XF
                               *           00000023.*
                               *           00000024.* DATA AREAS = GSB
                               *             00000025.*
                                 *           00000026.**************************
**********************************           00000027         LCLC  &SET
                                             00000028           LCLC  &RESET
                                               00000029         LCLA  &I,&GSAMSV
C                                              00000030         LCLB  &ZERO
                                               00000031         LCLC  &R
                                                 00000032.**********************
**************************************           00000033.*       CHANGE THE FOL
LOWING LINE IF A DIFFERENT SVC       *           00000034.*       NUMBER IS ASSI
GNED AT   YOUR INSTALLATION            *           00000035.********************
****************************************           00000036&GSAMSVC SETA  999
              IMPLIES GSAM NOT AVAILABLE           00000037         AIF   (K'&LA
BEL EQ 0).NOLAB                                      00000038&LABEL   DS    0H
                                                     00000039.NOLAB   ANOP
                                                     00000040.*       LOCATE THE
 GSB                                 +                 00000041         AIF   ('
&MF(1)' NE 'E').BADMF                                    00000042         AIF
('&MF(2)' EQ '').BADMF                                   00000043         AIF
('&MF(2)' EQ '(1)').GOTMF                                00000044         IHBSET
R &MF(2),1                                                 00000045.GOTMF   ANOP
                                                           00000046.*       PROC
ESS OPTIONS LOOP                                           00000047&I       SETA
  1                                                        000000  48.OPTLOOP AI
F   ('&OPTIONS(&I)' EQ '').ENDOPT                            00000049         AI
F   ('&OPTIONS(&I)' NE 'RESET').NZERO                        00000050&ZERO    SE
TB  (1)                                                      00000051         AG
  O   .NEXTOPT                                                 00000052.NZERO
AIF   ('&OPTIONS(&I)' NE 'INITIAL').NA1                        00000053
MVC   GSBID-GSB(4,1),=CL4'GSB'                                 00000054
XC    4(GSBLEN-  4,1),4(1)                                       00000055&ZERO
  SETB  (1)                                                      00000056
  AGO   .NEXTOPT                                                 00000057.NA1
  AIF   ('&OPTIONS(&I)' NE 'WA  IT').NA2                           00000058&SET
    SETC  '&SET+GSBWAIT'                                           00000059
    AGO   .NEXTOPT                                                 00000060.NA2
    AIF   ('&OPTIONS(&I)' NE 'NOWAIT').NB1                           00000061&RE
SET   SETC  '&RESET-GSBWAIT'                                         00000062
      AGO   .NEXTOPT                                                 00000063.NB
1     AIF   ('&OPTIONS(&I)' NE 'UPDATE').NB2                           00000064&
SET     SETC  '&SET+GSBUPD'                                            00000065
        AGO   .NEXTOPT                                                 00000066.
NB2     AIF   ('&OPTIONS(&I)' NE 'NOUPDATE').NC1                       0000  006
7&RESET   SETC  '&RESET-GSBUPD'                                          0000006
8         AGO   .NEXTOPT                                                 0000006
9.NC1     AIF   ('&OPTIONS(&I)' NE 'ASYNC').NC2                          0000007
0&SET       SETC  '&SET+GSBASYNC'                                          00000
071         AGO   .NEXTOPT                                                 00000
072.NC2     AIF   ('&OPTIONS(&I)' NE 'SYNC').ND1                           00000
073&RESET   SETC  '&RESET  -GSBASYNC'                                        000
00074         AGO   .NEXTOPT                                                 000
00075.ND1     AIF   ('&OPTIONS(&I)' NE 'DIR').ND2                            000
00076&SET     SETC  '&SET+GSBDIR'                                              0
0000077         AGO   .NEXTOPT                                                 0
0000078.ND2     AIF   ('&OPTIONS(&I)' NE 'SEQ').NE1                            0
0000079&RESET   SETC  '&RESET-GSBDIR'                  +
 00000080         AGO   .NEXTOPT
   00000081.NE1     AIF   ('&OPTIONS(&I)' NE 'BACK').NE2
   00000082&SET     SETC  '&SET+GSBBACK'
   00000083         AGO   .NEXTOPT
     00000084.NE2     AIF   ('&OPTIONS(&I)' NE 'FWD').NF1
     00000085&RESET   SETC  '&RESET-GSBBACK'
     00000086         AGO   .NEXTOPT
       00000087.NF1     AIF   ('&OPTIONS(&I)' NE 'PTY').NF2
       00000088&SET     SETC  '&SET+GSBPTY'
       00000089         AGO   .NEXTOPT
       00000090.NF  2     AIF   ('&OPTIONS(&I)' NE 'NOPTY').NH1
         00000091&RESET   SETC  '&RESET-GSBPTY'
         00000092         AGO   .NEXTOPT
         00000093.NH1     AIF   (  '&OPTIONS(&I)' NE 'ABTERM').NH2
           00000094&SET     SETC  '&SET+GSBABTRM'
           00000095         AGO   .NEXTOPT
           00000096.NH2     AIF   ('&OPTIONS(&I)  ' NE 'NOABTERM').NI1
             00000097&RESET   SETC  '&RESET-GSBABTRM'
             00000098         AGO   .NEXTOPT
             00000099.NI1     AIF   ('&OPTIONS(&I)' NE 'DEBUG')  .NI2
               00000100&SET     SETC  '&SET+GSBDEBUG'
               00000101         AGO   .NEXTOPT
               00000102.NI2     AIF   ('&OPTIONS(&I)' NE 'NODEBUG').NJ1
                 00000103&RESET   SETC  '&RESET-GSBDEBUG'
                 00000104         AGO   .NEXTOPT
                 00000105.NJ1     MNOTE 8,'GSAM002E INVALID OPTION &OPTIONS(&I)'
                   00000106.NEXTOPT ANOP
                   00000107&I       SETA  &I+1
                   00000108         AGO   .OPTLOOP
                   00000109.  ENDOPT  ANOP
                     00000110.*       NOW EXPAND OUT OPTION BIT SETTING INSTRUCT
IONS                 00000111         AIF   (&ZERO).SET2
                     00000112         AIF     ('&SET' EQ '').SET1
                       00000113&SET     SETC  '&SET'(2,K'&SET-1)
                       00000114         OI    GSBFLGS-GSB(1),&SET
                       00000115.SET1    AIF   ('&RESET' EQ   '').SET3
                         00000116         NI    GSBFLGS-GSB(1),X'FF'&RESET
                         00000117         AGO   .SET3
                         00000118.SET2    AIF   ('&SET' EQ '').SET3      +
                           00000119&SET     SETC  '&SET'(2,K'&SET-1)
                             00000120         MVI   GSBFLGS-GSB(1),&SET
                             00000121.SET3    ANOP
                             00000122         AIF   ('&POOL' EQ '').NOPOOL
                               00000123&R       SETC  '&POOL(1)'
                               00000124         AIF   ('&R' NE '&POOL').GOTPOOL
                               00000125         LA    15,&POOL
                                 00000126&R       SETC  '15'
                                 00000127.GOTPOOL ANOP
                                 00000128         STH   &R,GSBPOOL-GSB(,1)
                                 000  00129.NOPOOL  AIF   ('&FILE' EQ '').NOFILE
                                   00000130         AIF   ('&FILE'(1,1) NE '''')
.GETFILE                           00000131         MVC   GSBFILE-GSB(8,1),=CL8&
FILE                               00000132           AGO   .NOFILE
                                     00000133.GETFILE ANOP
                                     00000134&R       SETC  '&FILE(1)'
                                     00000135         AIF   ('&R'   NE '&FILE').
GOTFILE                                00000136         LA    15,&FILE
                                       00000137&R       SETC  '15'
                                       00000138.GOTFILE ANOP
                                         00000139         MVC   GSBFILE-GSB(8,1)
,0(&R)                                   00000140.NOFILE  AIF   ('&BUFFER' EQ ''
).NOBUF                                  00000141&R       SETC  '&BUFFER(1)'
                                           00000142         AIF   ('&R' NE '&BUF
FER').GOTBUF                               00000143         AIF   ('&BUFFER' NE
'-1').GETBUF                               00000144         SR    15,15
                                             00000145         BCTR  15,0
                                             00000146         AGO   .GETBUF2
                                             00000147.GETBUF  ANOP
                                             0  0000148         LA    15,&BUFFER
                                               00000149.GETBUF2 ANOP
                                               00000150&R       SETC  '15'
                                               00000151.GOTBU  F  ANOP
                                                 00000152         ST    &R,GSBBU
FA-GSB(,1)                                       00000153.NOBUF   AIF   ('&BUFFL
EN' EQ '').NOBUFL                                00000154&R       SETC  '&BU  FF
LEN(1)'                                            00000155         AIF   ('&R'
NE '&BUFFLEN').GOTBUFL                             00000156         LA    15,&BU
FFLEN                                              00000157&R       SETC  '15'
           +                                         00000158.GOTBUFL ANOP
                                                       00000159         ST    &R
,GSBBUFL-GSB(,1)                                       00000160.NOBUFL  AIF   ('
&RECLEN' EQ '').NORECL                                 00000161&R       SETC  '&
RECLEN(1)'                                               00000162         AIF
('&R' NE '&RECLEN').GOTRECL                              00000163         LA
15,&RECLEN                                               00000164&R       SETC
'15'                                                       00000165.GOTRECL ANOP
                                                           00000166         ST
  &R,GSBRECL-GSB(,1)                                       00000167.NORECL  AIF
  ('&MSGAREA' EQ '').NOMSG                                   00000168&R       SE
TC  '&MSGAREA(1)'                                            00000169         AI
F   ('&R' NE '&MSGAREA').GOTMSG                              00000170         LA
    15,&MSGAREA                                              00000171  &R
SETC  '15'                                                     00000172.GOTMSG
ANOP                                                           00000173
ST    &R,GSBMSGA-GSB(,1)                                       00000174.NOMSG
AIF     ('&RBA' EQ '').NORBA                                     00000175&R
  SETC  '&RBA(1)'                                                00000176
  AIF   ('&R' NE '&RBA').GOTRBA                                  00000177
  LA    15,&RBA                                                    00000178&R
    SETC  '15'                                                     00000179.GOTR
BA  ANOP                                                           00000180
    MVC   GSBRBA-GSB(4,1),0(&R)                                      00000181.NO
RBA   AIF   ('&PASS' EQ '').NOPASS                                   00000182&R
      SETC  '&PASS(1)'                                               00000183
      AIF   ('&R' NE '&PASS').GOTPASS                                  00000184
        LA    15,&PASS                                                 00000185&
R       SETC  '15'                                                     00000186.
GOTPASS ANOP                                                             0000018
7         ST    &R,GSBPASSW-GSB(,1)                                      0000018
8.NOPASS  AIF   ('&VERB' EQ 'MODIFY').EXIT                               0000018
9         AIF   ('&VERB' NE 'READ').NREAD                                000001
 90         SR    0,0                 INDICATE READ                        00000
191         AGO   .SVC                                                     00000
192.NREAD   AIF   ('&VERB' NE 'WRITE').NWRITE                              00000
193         LA      0,1                 INDICATE WRITE                       000
00194         AGO   .SVC                                                     000
00195.NWRITE  AIF   ('&VERB' NE 'REWRITE').NREWRIT                           000
00196         LA    0,2      +            INDICATE REWRITE                     0
0000197         AGO   .SVC
 00000198.NREWRIT AIF   ('&VERB' NE 'DELETE').NDEL
 00000199         LA    0,3                 INDICATE DELETE
 00000200         AGO   .SVC
   00000201.NDEL    AIF   ('&VERB' NE 'RELEASE').NRLSE
   00000202         LA    0,4                 INIDCATE RELEASE
   00000203         AGO   .SVC
     00000204.NRLSE   AIF   ('&VERB' NE 'MONITOR').NMON
     00000205         LA    0,5                 INDICATE MONITOR
     00000206         AGO   .SVC
       00000207.NMON    AIF   ('&VERB' NE 'MAINTAIN').NMAINT
       00000208         LA    0,6                 INDICATE MAINTAIN
       00000209         AGO   .SVC
         00000210.NMAINT  AIF   ('&VERB' NE 'FINISH').VERBERR
         00000211         LA    0,7
         00000212         AGO   .SVC
         00000213.VERB  ERR MNOTE 8,'GSAM001E UNRECOGNIZED VERB: &VERB'
           00000214.SVC     AIF   (&GSAMSVC GT 255).FAKEIT
           00000215         SVC   &GSAMSVC            ISSUE SVC
           00000216         MEXIT
             00000217.FAKEIT  ANOP
             00000218         L     R15,=V(FAKEGSAM)    --> SUBSTITUTE ROUTINE
             00000219         BALR  R14,R15               GO PERFORM THE VSAM I/
O              00000220         MEXIT
               00000221.BADMF   MNOTE 8,'GSAM003E IMPROPER OR OMITTED ''MF'' PAR
AMETER'        00000222.EXIT    MEND
                 00000223./ ADD NAME=GSB
                                  MACRO
                 00000001         GSB   &DSECT=YES
                   00000002.****************************************************
********           00000003.*
       *           00000004.* MACRO NAME = GSB
       *             00000005.*
         *           00000006.* DESCRIPTIVE NAME = GSAM SIMULATION ROUTINE'S PAR
AMETER   *           00000007.*                    BLOCK.
         *           00000008.*
           *           00000009.* PROCESSOR = ASSEMBLER XF
           *           00000010.*
           *           00000011.***************+ *******************************
**************           00000012************  *********************************
****************           00000013*
               *           00000014*        GSB -- GSAM SVC PARAMETER BLOCK
               *           00000015*
                 *           00000016*******************************************
******************           00000017         SPACE 1
                             00000018         IEZBITS ,
                               00000019         AIF   ('&DSECT' NE 'YES').NODSEC
T                              00000020GSB      DSECT ,
                               00000021         AGO   .YESDSEC
                                 00000022.NODSECT ANOP
                                 00000023GSB      DS    0F                  ALIG
NMENT                            00000024.YESDSEC ANOP
                                   00000025GSBID    DC    CL4'GSB'            MU
ST BE FILLED IN                    00000026GSBFILE  DS    CL8                 FI
LE NAME DEFINED TO GSRTASK         00000027GSBPOOL  DS    H                   VA
LUES 0-7. KEY OF GSR POOL.         00000  028GSBFLGW  DS    0H
OPTION BITS FOR USER -               00000029GSBFLG1  DS    X
 IN HALFWORD SO THEY CAN -           00000030GSBFLGS  DS    X
  BE SET IN FORTRAN AND COBOL        00000031GSBWAIT  E  QU   BIT0
  INDICATION THAT USER                 00000032*
  WANTS TO WAIT FOR A                  00000033*
  RECORD. APPLICABLE ONLY              00000034*
    IF UPDATE INDICATOR SET.             00000035GSBUPD   EQU   BIT1
    USER WANTS TO UPDATE THE             00000036*
    RECORD. GSAM WILL OBTAIN             00000037*
    O  WNERSHIP OF THE RECORD              00000038GSBASYNC EQU   BIT2
      THE USER WANTS TO                    00000039*
      ASYNCHRONOUSLY CONTEND FOR           00000040*
      RECORD OWNERSH  IP.                    00000041*
        GSBUPD MUST BE ON,                   00000042*
        GSBWAIT MUST BE OFF                  00000043GSBDIR   EQU   BIT3
        THIS IS A DIRECT REQUEST.              00000044*
          FOR A KSDS, A KEY IS IN              00000045*
          THE BUFFER. OTHERWISE, IT            00000046*
          IS IN GSBRBA.                        000  00047GSBBACK  EQU   BIT4
            THIS IS A 'BACKWARDS'                00000048*
            OPERATION. THE USER WANTS            00000049*
            TO SEQUENTIALLY READ RECORDS         00000050*       +
              IN DESCENDING ORDER OF KEY OR        00000051*
                ADDRESS. GSBDIR MUST BE OFF.         00000052GSBPTY   EQU   BIT5
                PRIORITY REQUEST. CALLER             00000053*
                MUST BE IN SYSTEM KEY OR             00000054*
                  SUPERVISOR STATE. UPDATE BIT         00000055*
                  MUST BE ON. CALLER WILL              00000056*
                  STEAL RECORD OWNERSHIP FROM          00000057*
                    ANYONE WHO HOLDS IT.                 00000058GSBABTRM EQU
BIT6                ABEND MY TASK WHEN GSAM              00000059*
                    GOES DOWN OR THIS FILE IS            00000060*
                    PURGED                                 00000061GSBDEBUG EQU
  BIT7                INVOKE DBC (REQUIRES AUTH            00000062*
                      LEVEL 2 AND DEBUG FLAG)              00000063GSBINDX  DS
  H                   INDEX OF OUR GSAM PLA  CEHOLDER        00000064*
                        SET TO ZERO BEFORE FIRST CALL        00000065*
                        USER MUST NOT SUBSEQUENTLY           00000066*
                        MODIFY THIS FIELD                      00000067GSBRSV1
DS    H                   RESERVED                             00000068GSBBUFL
DS    F                   TOTAL LENGTH OF BUFFER WHOSE         00000069*
                          ADDRESS IS SPECIFIED IN GSBBUFA.     00000070*
                            SPECIFIED BY USER.                   00000071*
                            ON A READ REQUEST, BUFFER IS         00000072*
                            PADDED WITH BLANKS FOR A LENGTH OF   00000073*
                              GSBBUFL.                             00000074*
                              CANNOT BE GREATER THAN INSTALLATION  00000075*
                              SPECIFIED MAX.                       00000076GSBBU
FA  DS    A                     -> USER BUFFER FOR READS, REWRITES,  00000077*
                                DELETES.                             00000078*
                                IF F'-1' THEN THE MSG AREA & BUFFER  00000079*
                                FOLLOW   THE GSB (FOR LANGUAGES THAT   00000080*
                                  DO NOT SUPPORT THE PTR DATA TYPE)    00000081G
SBRECL  DS    A                   FOR READ, LENGTH OF BUFFER RETURNED  00000082*
                                  TO USER. FOR REWRIT  E, WRITE, LENGTH  0000008
3*                                  OF RECORD, SUPPLIED BY USER.         0000008
4*                                  MUST BE >0, <=GSBBUFL                0000008
5GSBMSGA  DS    A                   ->128 BYTE AREA FOR RETURNING I/  O    00000
086*                                  ERROR MESSAGES, OR NULL.             00000
087GSBVSAM  DS    F                   VSAM FEEDBACK CODE THAT CAUSED       00000
088*                                  THE SVC'S NON-0 RETURN CODE. 0 IF    00000
089            _ *                                  NONE APPLIES.
         00000090*                                  OR, ON SUCCESSFUL COMPLETION
,        00000091*                                  THE VSAM FEEDBACK CODE FOR 0
         00000092*                                    RETURN CODE. (SEE VSAM MAN
UAL).      00000093GSBVSFN  DS    F                   VSAM FUNCTION CODE ON LOGI
CAL        00000094*                                  OR PHYSICAL ERROR. -1 WHEN
 NONE      00000095*                                    APPLIES.
             00000096GSBECB   DS    A                   ECB WHICH WILL BE POSTED
             00000097*                                  WHEN ASYNCHRONOUS REQUES
T FOR        00000098*                                    RECORD OWNERSHIP COMPL
ETES           00000099GSBRBA   DS    F                   RBA OF RECORD FOR READ
, REWRITE,     00000100*                                  WRITE (RETURNED BY SVC
).             00000101*                                  ONLY   TRUE WHEN GSBPA
TH IS OFF        00000102*                                  RBAS ARE NOT RETURNE
D BY VSAM FOR    00000103*                                  A PATH.
                 00000104GSBPASSW DS    CL8                 PASSWORD-FOR EXAMI
NATION BY          00000105*                                  INSTALLATION EXITS
                   00000106*        THE GSBFIL.. FIELDS ARE RETURNED TO THE USER
                   00000107*        WHENEVER THE GSAM FILE SPECIFIED IS FOUND BY
 THE SVC.            00000108GSBFILKL DS    F                   KEY LENGTH OF FI
LE. 0 FOR ESDS.      00000109GSBFILKO DS    F                   KEY OFFSET IN RE
CS. 0 FOR ESDS.      00000110*                                  0-INDEXED.
                     0000011  1GSBFILRL DS    F                   MAXINUM RECORD
 LENGTH FOR THE FILE.  00000112GSBFILCL DS    F                   CONTROL INTERV
AL LENGTH OF FILE      00000113*                                  (RETURNED W/ O
THER GSBFIL.. FIELDS)  00000114GSBFILAC DS      C                   ACCESS CODE
OF FILE                  00000115*                                  RETURNED WIT
H OTHER GSBFIL.. INFO    00000116GSBACC1  EQU   C'1'                READ-ONLY AC
CESS.                    00000117GSBACC2  EQU   C'2'                  UPDATE ACC
ESS.                       00000118GSBACC3  EQU   C'3'                WRITE-ONLY
,TO AN ESDS.               00000119GSBFILFG DS    C                   FLAGS RETU
RNED,DESCRIBING FILE       00000120*                                  (AL  ONG W
ITH OTHER GSBFIL.. FIELDS)   00000121GSBRD    EQU   C'R'                READ ONL
Y                            00000122GSBWT    EQU   C'W'                WRITE ON
LY                           00000123GSBRDWT  EQU   C'*'                FULL ACC
ESS                            00000124GSBNO    EQU   C'C'                NO ACC
ESS                            00000125GSBLEN   EQU   *-GSB
                               00000126         SPACE 3
                       +         00000127***************************************
*********************  *           00000128* OPTIONAL FIELDS (IF GSBBUFA IS F'-1
')                     *           00000129*************************************
************************           00000130         SPACE 1
                                   0  0000131GSBMSGX  DS    CL128
CONTIGUOUS MESSAGE AREA              00000132GSBBUFX  DS    0C
CONTIGUOUS BUFFER.                   00000133         SPACE 3
                                     00000134******  ***************************
****************************           00000135*        RETURN CODES TO CALLER O
F GSAM SVC:                *           00000136*        (NOTE THAT MEANINGS OF R
ETURN CODES DEPEND ON      *           00000137*        THE VSAM R  ETURN CODE-G
SBVSAM).                     *           00000138*******************************
******************************           00000139         SPACE 1
                                         00000140GSAMEKEY EQU   4
      KEY OR ENDFILE CONDITION             00000141GSAMEREC EQU   8
      RECORD CONDITION                     00000142GSAMENAV EQU   12
      SOME GSR OBJECT UNAVAILABLE          00000143GSAMEFIL EQU   16
      UNDEFINEDF  ILE CONDITION.             00000144GSAMEPOS EQU   20
        POSITIONING ERROR.                   00000145GSAMEDS  EQU   24
        DATASET FULL OR BAD.                 00000146GSAMEAUT EQU   28
        AUTHORIZATION ERROR.                   00000147GSAMEACC EQU   32
          WRONG KIND OF ACCESS FOR THISFILE.   00000148GSAMECOR EQU   36
          NOT ENOUGH CORE AVAILABLE.           00000149GSAMEPRM EQU   40
          PARMS BAD OR INCONSISTANT.             00000150GSAMEIO  EQU   44
            I/O PHYSICAL ERROR                   00000151GSAMEBUG EQU   48
            BUG IN THE SVC                       00000152GSAMEUBG EQU   52
            BUG IN INSTALLATION EXIT             00000153           MEND
                                                   00000154./ ADD NAME=README
0104-99126-03239-0912-00065-00057-00000-DBCOLE2            You are reading DBCOL
E.EXPORT.MACROS(README).
 
 
   DAVE COLE'S MACLIB
 
                                                               CONTACT INFORMATI
ON:
                                                                 Dave Cole
                                                                 Cole Software.
LLC                                                              736 Fox Hollow
Road                                     +                         Afton, Va. 22
920                                                                  May 1999
 
                                                                     540-456-853
6: VOICE                                                               540-456-6
658: FAX                                                               dbcole@co
lesoft.com                                                             www.coles
oft.com
 
 
                                                                         LEGAL I
NFOR  MATION:
                                                                           These
 macros are copyrighted (c) 1999-2003 by David B. Cole.
                                                                             The
se macros are distributed freely and may be reproduced and                   red
istributed without restriction other than:                                     -
 This copyright and usage/warranty  /liability restriction statement
   ("Legal Statement") may not be modified or removed.
 - All similar legal statements located in the macros source code also
   may not be removed.
   - These macros may NOT be modified.
 
 These macros are distributed without warranty of any kind, incl  uding
   (without limitation) warranties of merchantability and of fitness for a
   particular purpose. It is up to the user to make his own determination
   of the usefulness of these macros in his own system.
 
     The user agrees not to hold me (David B. Cole) liable for any damage
     whatsoever, and the user agrees to indemnify me against third parties
     for any a  ction arising from the user's use, modification, and/or
       redistribution of these macros.
 
       These macros may NOT b  e modified.
 
 
 
           FUNCTIONAL SUMMARY
 
           These macros provide several useful services tha+ t may be of interes
t to         the user. Also, they are used by me in other   programs that I may
               distributed, and so they are required for the successful assembly
 of            those programs.
 
 
 
                 THE INSTALLATION OF THE MACROS
 
                    1.) Copy these macros to a library named DBCOLE.MACLIB. (All
 sample                 JCL that I distribute will assume this name.)
 
 
 
 
 
                       ./ ADD NAME=SFR
                                MACRO
                 00000001&NME     SFR   &MF=D
                 00000002         LCLC  &D
                 00000003         AIF   ('&MF(1)' EQ 'L').MFL
                   00000004         AIF   ('&MF(1)' EQ 'D').MFD
                   00000005         MNOTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS
 ASSUMED.'         00000006.MFD     ANOP
                     00000007&D       SETC  'DSECT'
                     00000008         AIF   ('&MF(2)' EQ '').MFDOK3
                     00000009         AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3
                       00000010&D       SETC  'DS'
                       00000011         AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3
                       00000012         MNOTE 8,'MF=&MF IS INVALID. MF=(&MF(1),N
) IS ASSUMED.'         00000013.  MFDOK3  ANOP
                         00000014***********************************************
**************           00000015*
             *           00000016*        SFR -  - SCHEDULE FILE RECORD
               *           00000017*
               *           00000018*        A NEW SCHEDULE FILE CAN BE ALLOCATED
 VIA AN AMS    *           00000019*        COMMAND SUCH AS TH  E FOLLOWING:
                 *           00000020*
                 *           00000021*        DEF CL(NAME('SYSVSAM.SCHEDULE') VO
L(SYSRES) -      *           00000022*            ATT(3) CODE(SCHEDULE) ERAS + K
EYS(12 0) -        *           00000023*            OWNER(DAVECOLE) TO(9936  5)
UNQ MRPW(XYZZY) -    *           00000024*            RDPW(SCHEDULE)) -
                     *           00000025*
                     *           00000026*            DATA(NAME('SYSVSAM.SCHEDUL
E.DATA')-              *           00000027*            RECORDS(1000 100) RECSZ(
X'48' X'12D')) -       *           00000028*
                       *           00000029*            INDEX(NAME('SYSVSAM.SCHE
DULE.INDEX'))          *             00000030*
                         *           00000031***********************************
**************************           00000032         SPACE 1
                                     000  00033         AIF   ('&NME' EQ '').MFD
OK1                                    00000034&NME     &D    0H
                                       00000035SFR      DS    0H
  MAP NAME                             00000036           AGO   .MFDOK2
                                         00000037.MFDOK1  ANOP
                                         00000038SFR      &D    0H
                                         00000039.MFDOK2  ANOP
                                           00000040SFRYR    DS    H
      SCHEDULED YEAR                       00000041SFRMO    DS    H
      SCHEDULED MONTH                      00000042SFRDY    DS    H
        SCHEDULED DAY                        00000043SFRYMD   EQU   SFRYR,*-SFRY
R       DATE SEGMENT                         00000044SFRHR    DS    H
        SCHEDULED HOUR                       00000045SFRMN    DS    H
        SCHEDULED MI  NUTE                     00000046SFRHM    EQU   SFRHR,*-SF
RHR       TIME-OF-DAY SEGMENT                  00000047SFRTIME  EQU   SFRYR,*-SF
RYR       SCHEDULED TIME                       00000048SFRID    DS    H
          UNIQUE IDENTIFICATION NUM  BER         00000049SFRKEY   EQU   SFRYR,*-
SFRYR       RECORD'S KEY FIELD                   00000050SFRNAME  DS    CL8
            APPLICATION NAME                     00000051         SPACE 1
                                                 0  0000052SFRWK    DS    H
              SCHEDULED DAY OF THE WEEK            00000053         SPACE 1
                                                   00000054SFRXYR   DS    H
              YEAR OF LAST EXECUTION               00000055SFRXMO     DS    H
                MONTH OF LAST EXECUTION              00000056SFRXDY   DS    H
                DAY OF LAST EXECUTION                00000057SFRXYMD  EQU   SFRX
YR,*-SFRXYR     DATE SEGMENT                         00000058SFRXHR   DS    H
                  HOUR OF LAST EXECUTION               00000059SFRXMN   DS    H
                  MINUTE OF LAST EXECUTION             00000060SFRXHM   EQU   SF
RXHR,*-SFRXHR     TIME-OF-DAY SEGMENT                  00000061SFRXTIME EQU   SF
RXYR,*-SFRXYR  +    LAST EXECUTION TIME                  00000062         SPACE
1                                                          00000063SFRWHR   DS
  H                   LENGTH OF EXECUTION WINDOW: HOURS    00000064SFRWMN   DS
  H                   LENGTH OF EXECUTION WINDOW: MINUTES  00000065         SPAC
E 1                                                          00000066SFRSYSID DS
    CL4                 SMF-SYSID OF SYSTEM ON WHICH THIS    00000067*
                        COMMAND MAY BE EXECUTED. X'0000'     00000068*
                        IMPLIES "ANY" SYSTE  M.                00000069
SPACE 1                                                        00000070SFRFLAG
DS    B                   FLAG BYTE                            00000071SFRFIPLF
EQU   B'10000000'         FORCE REEXECUTION OF THIS COMMAN  D    00000072*
                            IF AN IPL OCCURS WITHIN THE CURRENT  00000073*
                            WINDOW EVEN IF THIS COMMAND HAS      00000074*
                            ALREADY BEEN EXECUTED IN THIS SAME   00000075  *
                              WINDOW.                              00000076SFRFO
VRD EQU   B'01000000'         THIS COMMAND OVERRIDES ALL OTHER     00000077*
                              COMMANDS FOR THIS APPLICATION FOR    00000078*
                                THIS DATE FOR WHICH THIS FLAG IS     00000079*
                                OFF.                                 00000080SFR
FOBSO EQU   B'00100000'         THIS COMMAND IS OBSOLETE. (SET BY    00000081*
                                  SCHEDRUN. CHECKED BY SCHEDULE).      00000082
        SPACE 1                                                        00000083S
FRCMDL  DS    2H                  L'COMMAND TEXT, ZERO                 00000084S
FRCMD   DS    CL255               COMM  AND TEXT                         0000008
5         SPACE 1                                                        0000008
6SFREND   EQU   *                   MAX END OF SFR                       0000008
7SFRLEN   EQU   SFREND-SFR          MAX L'SFR                              00000
088         SPACE 3                                                        00000
089*************************************************************           00000
090*        SCHEDULE FILE'S MASTER RECORD                      *             000
00091*************************************************************           000
00092         SPACE 1                                                        000
00093         ORG   SFR                 LOCATE TO START OF BUFFER            000
000  94SFMR     DS    0H                                                       0
0000095SFMRKEY  DS    XL(L'SFRKEY)      | KEY (ALL HEX-FF)                     0
0000096SFMRFID  DC    CL8'SCHEDULE'     V FILE ID                              0
0000097SFMRNXID DS      H                   NEXT DATA RECORD ID VALUE
 00000098SFMREND  EQU   *                   EO-SFMR
 00000099SFMRLEN  EQU   SFMREND-SFMR        L'SFMR
 00000100         ORG   SFREND   +            RELOCATE HIGH
   00000101         MEXIT
     00000102.*
     00000103.MFL     AIF   ('&MF(2)' EQ '').MFLD
     00000104         AIF   ('&MF(2)'(1,1) EQ   'M').MFLM
       00000105         MNOTE 8,'MF=&MF IS INVALID. MF=L IS ASSUMED'
       00000106.MFLD    ANOP
       00000107&NME     DS    0H
         00000108         DC    5H'0'               SCHEDULED TIME
         00000109         DC    2H'0'               SFRID, SFRWK
         00000110         DC    5H'0'               LAST EXECUTION TIME
           00000111         DC    2H'0'               EXECUTION WINDOW
           00000112         DC    CL4' '              APPLICATION NAME
           00000113         DC    B'00000000'         FLAG BYTE
             00000114         DC    2H'0'               SFRCMDL
             00000115         DC    CL255' '            SFRCMD
             00000116         MEXIT
             00000117.*
               00000118.MFLM    ANOP
               00000119&NME     DS    0H
               00000120         DC    (L'  SFMRKEY)X'FF'    SFMRKEY
                 00000121         DC    CL(L'SFMRFID)'SCHEDULE' SFMRFID
                 00000122         DC    H'0'                SFMRNXID
                 00000123         MEND
                   00000124./ ADD NAME=SSSHIPE
                                    MACRO
                   00000001&NME     SSSHIPE &IID=,&IADR=,&IDA=,&SVC#=,&  PRIO=,&
MF=D                 00000002         LCLC  &LIID,&LIADR,&LIDA,&LSVC#,&LPRIO,&LB
L,&R,&D              00000003&LIID    SETC  '*'
                     00000004         AIF   ('&IID' EQ '').GOTIID
                       00000005&LIID    SETC  '&IID'
                       00000006         AIF   ('&IID'(1,1) NE '''').GOTIID
                       00000007&LIID    SETC  ' '
                         00000008         AIF   (K'&IID LE 2).GOTIID
                         00000009&LIID    SETC  '&IID'(2,K'&IID-2)
                         00000010.GOTIID  ANOP
                         00000011&LI  ADR   SETC  '*-*'
                           00000012         AIF   ('&IADR' EQ '').GOTIADR
                           00000013&LIADR   SETC  '&IADR'
                           00000014.GOTIADR ANOP   +
                             00000015&LIDA    SET  C  '*-*'
                               00000016         AIF   ('&IDA' EQ '').GOTIDA
                               00000017&LIDA    SETC  '&IDA'
                               00000018.GOTIDA  ANOP
                                 00000019&LSVC#   SETC  '*-*'
                                 00000020         AIF   ('&SVC#' EQ '').GOTSVC#
                                 00000021&LSVC#   SETC  '&SVC#'
                                   00000022.GOTSVC# ANOP
                                   00000023&LPRIO   SETC  '128'
                                   00000024         AIF   ('&PRIO' EQ '').GOTPRI
O                                    00000025&LPRIO   SETC  '&PRIO'
                                     00000026.GOTPRIO AIF   ('&MF(1)' EQ 'E').MF
E                                    00000027         AIF   ('&MF(1)' EQ 'L').MF
L                                      00000028         AIF   ('&MF(1)' EQ 'D').
MFD                                    00000029         MNOTE 8,'MF(1)=&MF(1) IS
 INVALID. MF(1)=D IS ASSUMED.'         00000030.MFD     ANOP
                                       00000  031&D       SETC  'DSECT'
                                         00000032         AIF   ('&MF(2)' EQ '')
.MFDOK3                                  00000033         AIF   ('&MF(2)'(1,1) E
Q 'Y').MFDOK3                            00000034&D       S  ETC  'DS'
                                           00000035         AIF   ('&MF(2)'(1,1)
 EQ 'N').MFDOK3                            00000036         MNOTE 8,'MF(2)=&MF(2
) IS INVALID. MF(2)=N IS ASSUMED.'         00000037.MFDOK3  ANOP
                                             00000038***************************
**********************************           00000039*
                                 *           00000040*        SSSHIPE -- INTERCE
PT PARAME  TER ENTRY. THIS AREA    *           00000041*        DESCRIBES DATA A
SSOCIATED WITH INDIVIDUAL          *           00000042*        SUB-SCREEN INTER
CEPT ROUTINES.                     *           00000043*
                                     *           00000044***********************
**************************************           00000045         SPACE 1
                                                 00000046         AIF   ('&NME'
EQ ' ').MFDOK1                                     00000047&NME     &D    0F
                                                   00000048SSSHIPE  DS    0F
              MAP NAME                             00000049         AGO   .MFDOK
2                                                  000  00050.MFDOK1  ANOP
                                                     00000051SSSHIPE  &D    0F
                                                     00000052.MFDOK2  ANOP
                                                     00000053SSSHIID +  DC    CL
8'&LIID'          IDENTIFIER ASSOCIATED WITH THIS      00000054*
                    INTERCEPT.                           00000055SSSHIADR DC
A(&LIADR)           ADDRESS OF THE INTERCEPT ROUTINE. A  00000056*
                    ZERO VALUE MEANS THAT THE INTERCEPT  00000057*
                      DESCRIBED BY THIS IPE IS TO BE       00000058*
                      DELETED.                             00000059SSSHIDA  DC
  A(&LIDA)            VALUE TO BE MADE AVAILABLE TO THE    00000060*
                        INTERCEPT ROUTINE.                   00000061SSSHSVC# DC
    AL1(&LSVC#)         SVC WHICH THIS ROUTINE INTERCEPTS.   00000062SSSHPRIO DC
    AL1(&LPRIO)         PRIORITY AT WHICH THIS INTERCEPT     00000063*
                        ROUTINE   IS QUEUED.                   00000064SSSHCC
DC    FL1'0'              HIGHEST COMPLETION CODE ASSOCIATED   00000065*
                          WITH THE ATTEMPT TO QUEUE OR DELETE  00000066*
                          THIS INTERCEPT ROUTIN  E. MUST BE      00000067*
                            PRE-ZEROED BY THE CALLER.            00000068SSSHIEN
D DS    0F                  END OF THE IPE.                      00000069SSSHILE
N EQU   SSSHIEND-SSSHIPE    LENGTH OF THE IPE.                     00000070
    MEXIT                                                          00000071.MFL
    ANOP                                                           00000072&NME
    DS    0F                                                       00000073
      DC    CL8'&LIID'          IDENTIFIER ASSOCIATED WITH THIS      00000074*
                                INTERCEPT                            00000075
      DC    A(&LIADR)           ADDRESS OF THE INTERCEPT ROUTINE. A  00000076*
                                  ZERO VALUE MEANS THAT THE INTERCEPT  00000077*
                                  DESCRIBED BY THIS IPE IS TO BE       00000078*
                                  DELETED.                             00000079
        DC    A(&LIDA)              VALUE TO BE MADE AVAILABLE TO THE    0000008
0*                                  INTERCEPT ROUTINE.                   0000008
1         DC    AL1(&LSVC#)         SVC WHICH THIS ROUTINE INTERCEPTS.   0000008
2         DC    AL1(&LPRIO)         PRIORI  TY AT WHICH THIS INTERCEPT     00000
083*                                  ROUTINE IS QUEUED.                   00000
084         DC    FL1'0'              HIGHEST COMPLETION CODE ASSOCIATED   00000
085*                                  WITH THE ATTEMPT TO   QUEUE OR DELETE  000
00086*                                  THIS INTERCEPT ROUTINE. MUST BE      000
00087*                                  PRE-ZEROED BY THE CALLER.            000
00088         MEXIT                                                            0
0000089.MFE     ANOP                                                           0
0000090&LBL     SETC  '&NME'                                                   0
0000091&R       SETC  '1'                                                      0
0000092             }         AIF   ('&MF(2)' NE '').GETMF2
             00000093&LBL     LA    &R,SSSHIPE          --> IPE
             00000094&LBL     SETC  ''
             00000095           AGO   .GOTMF2
               00000096.GETMF2  AIF   ('&MF(2)'(1,1) EQ '(').MF2REG
               00000097&LBL     LA    &R,&MF(2)           --> IPE
               00000098&LBL     SETC    ''
                 00000099         AGO   .GOTMF2
                 00000100.MF2REG  ANOP
                 00000101&R       SETC  '&MF(2)'(2,K  '&MF(2)-2)
                   00000102.GOTMF2  ANOP
                   00000103&LBL     MVI   SSSHCC-SSSHIPE(&R),0 RESET THE COMPLET
ION CODE           00000104&LBL     SETC  ''
                     00000105         AIF   ('&IID' EQ '').NOIID
                     00000106         AIF   (K'&LIID LE 8).LIIDOK
                     00000107         MNOTE 4,'IID=&IID IS TOO LONG.'
                       00000108.LIIDOK  ANOP
                       00000109         MVC   SSSHIID-SSSHIPE(,&R),=CL8'&LIID' S
ET NEW IID             00000110.NOIID   AIF   ('&IADR' EQ '').NOIADR
                         00000111         AIF   ('&IADR' NE '&IADR(1)').IADRREG
                         00000112         LA    0,&IADR             --> INTERCEP
T                        00000113         ST    0,SSSHIADR-SSSHIPE(,&R) STORE
                         0000011  4         AGO   .NOIADR
                           00000115.IADRREG ST    &IADR(1),SSSHIADR-SSSHIPE(,&R)
 STORE DATA AREA ADDRESS   00000116.NOIADR  AIF   ('&IDA' EQ '').NOIDA
                           00000117         AIF     ('&IDA' NE '&IDA(1)').IDAREG
                             00000118         LA    0,&IDA              --> DATA
 AREA                        00000119         ST    0,SSSHIDA-SSSHIPE(,&R) STORE
                             00000120         AGO   .NOIDA
                               00000121.IDAREG  ST    &IDA(1),SSSHIDA-SSSHIPE(,&
R) STORE DATA AREA ADDRESS     00000122.NOIDA   AIF   ('&SVC#' EQ '').NOSVC#
                               00000123         AIF   ('&SVC#' NE '&SVC#(1)')  .
SVC#REG                          00000124         MVI   SSSHSVC#-SSSHIPE(&R),&SV
C# SET SVC NUMBER                00000125         AGO   .NOSVC#
                                 00000126.SVC#REG STC   &SVC#(1),SSSHSVC#-SSSHIP
E(,&R) STORE   SVC NUMBER          00000127.NOSVC#  AIF   ('&PRIO' EQ '').NOPRIO
                                   00000128         AIF   ('&PRIO' NE '&PRIO(1)'
).PRIOREG                          00000129         MVI   SSSHPRIO-SSSHIPE(&R),&
PRIO SET QUEUING PRIORITY  +         00000130         AGO   .NOPRIO
                                       00000131.PRIOREG STC   &PRIO(1),SSSHPRIO-
SSSHIPE(,&R) STORE QUEUING PRIORITY    00000132.NOPRIO  ANOP
                                       00000133         MEND
                                       0  0000134./ ADD NAME=SSSHSPE
                                                          MACRO
                                         00000001&NME     SSSHSPE &SID=,&SDA=,&T
CB=,&FLAG=,&SVC=XXX,&MF=D                00000002           LCLA  &A1
                                           00000003         LCLC  &LSID,&LSDA,&L
TCB,&LFLAG,&LBL,&R,&D                      00000004&LSID    SETC  '*'
                                           00000005         AIF   ('&S  ID' EQ '
').GOTSID                                    00000006&LSID    SETC  '&SID'
                                             00000007         AIF   ('&SID'(1,1)
 NE '''').GOTSID                             00000008&LSID    SETC  ' '
                                               00000009         AIF   (K'&SID LE
 2).GOTSID                                     00000010&LSID    SETC  '&SID'(2,K
'&SID-2)                                       00000011.GOTSID  ANOP
                                                 00000012&LSDA    SETC  '*-*'
                                                 00000013         AIF   ('&SDA'
EQ '').GOTSDA                                    00000014&LSDA    SETC  '&SDA'
                                                   00000015.GOTSDA  ANOP
                                                   00000016&LTCB    SETC  '0'
                                                   00000017         AIF   ('&TCB
' EQ '').GOTTCB                                      00000018&LTCB    SETC  '&TC
B'                                                   00000019.GOTTCB  ANOP
                                                     00000020&LFLAG   SETC  '0'
                                                     00000021&A1        SETA  0
                                                       00000022.LP1     AIF   (&
A1 EQ N'&FLAG).END1                                    00000023&A1      SETA  &A
1+1                                                    00000024&LFLAG   SETC  '&
  LFLAG+SSSH&FLAG(&A1)'                                  00000025         AGO
.LP1                                                     00000026.END1    AIF
('&LFLAG' EQ '0').GOTFLAG                                00000027&LFLAG   SETC
'&LFLAG'(3,K'&L  FLAG-2)                                   00000028.GOTFLAG AIF
  ('&MF(1)' EQ 'E').MFE                                    00000029         AIF
  ('&MF(1)' EQ 'L').MFL                                    00000030         AIF
  ('&MF(1)' EQ 'D').MFD                                      00000031         MN
OTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS ASSUMED.'         00000032.MFD     AN
OP                                                           00000033&D       SE
TC  'DSECT'                                  +                 00000034
AIF   ('&MF(2)' EQ '').MFDOK3                                    00000035
  AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3                            00000036&D
  SETC  'DS'                                                     00000037
  AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3                              00000038
    MNOTE 8,'MF(2)=&MF(2) IS INVALID. MF(2)=N IS ASSUMED.'         00000039.MFDO
K3  ANOP                                                           00000040*****
********************************************************           000000  41*
                                                         *           00000042*
      SSSHSPE -- SUB-SCREEN PARAMETER ENTRY. THIS AREA   *           00000043*
      CONTAINS DATA THAT IS ASSOCIATED WITH AN ENTIRE    *           00000044*
      SU  B-SCREEN.                                        *           00000045*
                                                           *           00000046*
************************************************************           00000047
        SPACE 1                                                          0000004
8         AIF   ('&NME' EQ '').MFDOK1                                    0000004
9&NME     &D    0F                                                       0000005
0SSSHSPE  DS    0F                  MA  P NAME                             00000
051         AGO   .MFDOK2                                                  00000
052.MFDOK1  ANOP                                                           00000
053SSSHSPE  &D    0F                                                         000
00054.MFDOK2  ANOP                                                           000
00055SSSHSID  DC    CL8'&LSID'          NAME OF THIS SUB-SCREEN              000
00056SSSHSDA  DC    A(&LSDA)            VALUE TO BE PROVIDED TO ALL            0
0000057*                                  INTERCEPT ROUTINES DEFINED UNDER     0
0000058*                                  THIS SUB-SCREEN.                     0
0000059SSSHTCB  DC    A(&LTCB)            IF SSSHFTCB, THEN THE ADDRESS OF THE 0
000  0060*                                  (FIRST) TCB TO WHICH THIS SUB-SCREEN
 00000061*                                  IS TO BE ASSIGNED.
 00000062SSSHFLAG DC    AL1(&LFLAG)         FLAG BYTE.
 00000063*                                    NOTE, AT LEAST ONE OF SSSHFCRN,
   00000064*                                  SSSHFTCB, OR SSSHFALL MUST BE ON.
   00000065*                                  REDUNDANT BIT SETTINGS ARE ALLOWED
.  00000066SSSHFDEL EQU   B'10000  000'         THIS SUB-SCREEN IS TO BE DELETED
     00000067*                                  FROM THE INDICATED TCB'S.
     00000068SSSHFSUB EQU   B'01000000'         THIS SUB-SCREEN IS TO BE PROPAGA
TED  00000069*                                    TO OR DELETED FROM ALL SUBTASK
S OF   00000070*                                  THE INDICATED TCB'S.
       00000071SSSHFCRN EQU   B'00100000'         THIS SUB-SCREEN IS TO BE ASSIG
NED TO 00000072*                                  OR DELETED FR+ OM THE CURRENT
TCB.     00000073SSSHFTCB EQU   B'00010000'         THIS SUB-  SCREEN IS TO BE A
SSIGNED TO 00000074*                                  OR DELETED FROM THE TCB PO
INTED TO   00000075*                                  BY SSSHTCB.
           00000076SSSHFALL EQU   B'00001000'         THIS SUB-SCREEN IS TO   BE
 ASSIGNED TO 00000077*                                  OR DELETED FROM ALL TCB'
S IN THIS    00000078*                                  ADDRESS SPACE EXCEPT THE
 FIRST TCB   00000079*                                  (THE REGION CONTROL TASK
'S TCB).       00000080SSSHSEND DS    0F                  END OF SSSHSPE.
               00000081SSSHSLEN EQU   SSSHSEND-SSSHSPE    LENGTH OF SSSHSPE.
               00000082         AIF   ('&SVC' EQ '').NOSVC
               00000083           SPACE 3
                 00000084SSSHSVC  EQU   &SVC                SSSH'S SVC
                 00000085.NOSVC   MEXIT
                 00000086.MFL     ANOP
                   00000087&NME     DS    0F
                   00000088         DC    CL8'&LSID'          NAME OF THIS SUB-S
CREEN              00000089         DC    A(&LSDA)              VALUE TO BE PROV
IDED TO ALL          00000090*                                  INTERCEPT ROUTIN
ES DEFINED UNDER     00000091*                                  THIS SUB-SCREEN.
                     00000092         DC    A(&LTCB)            IF SSSH  FTCB, T
HEN THE ADDRESS OF THE 00000093*                                  (FIRST) TCB TO
 WHICH THIS SUB-SCREEN 00000094*                                  IS TO BE ASSIG
NED.                   00000095         DC    AL1(&LFLAG)         FLAG BYTE.
                         00000096*                                  NOTE, AT LEA
ST ONE OF SSSHFCRN,      00000097*                                  SSSHFTCB, OR
 SSSHFALL MUST BE ON.    00000098*                                  REDUNDANT BI
T SETTINGS ARE ALLOWE  D.  00000099         MEXIT
                           00000100.MFE     ANOP
                           00000101&LBL     SETC  '&NME'
                           00000102&  R       SETC  '1'
                             00000103         AIF   ('&MF(2)' NE '').GETMF2
                             00000104&LBL     LA    &R,SSSHSPE          --> SPE
                             00000105&LBL     SETC    ''
                               00000106         AGO   .GOTMF2
                               00000107.GETMF2  AIF   ('&MF(2)'(1,1) EQ '(').MF2
REG                            00000108&LBL     LA    &R,&MF(2)             -->
SPE                              00000109&LBL     SETC  ''
                                 00000110         AGO   .GOTMF2
                                 00000111.MF2REG  ANOP
 +                                 00000112&R       SETC  '&MF(2)'(2,K'&MF(2)-2
 )                                   00000113.GOTMF2  AIF   ('&SID' EQ '').NOSID
                                     00000114         AIF   (K'&LSID LE 8).LSIDO
K                                    00000115         MNOTE 4,'SID=&SID IS TOO L
ONG.'                                  00000116.LSIDOK  ANOP
                                       00000117&LBL     MVC   SSSHSID-SSSHSPE(,&
R),=CL8'&LSID' SET NEW SID             00000118&LBL     SETC  ''
                                         00000119.NOSID   AIF   ('&SDA' EQ '').N
OSDA                                     00000120         AIF   ('&SDA' NE '&SDA
(1)').SDAREG                             00000121&LBL     LA    0,&SDA
    --> SDA                              000  00122&LBL     SETC  ''
                                           00000123         ST    0,SSSHSDA-SSSH
SPE(,&R) STORE                             00000124         AGO   .NOSDA
                                           00000125.SDAREG    ANOP
                                             00000126&LBL     ST    &SDA(1),SSSH
SDA-SSSHSPE(,&R) STORE SDA VALUE             00000127&LBL     SETC  ''
                                             00000128.NOSDA   AIF   ('&TCB  ' EQ
 '').NOTCB                                     00000129         AIF   ('&TCB' NE
 '&TCB(1)').TCBREG                             00000130&LBL     LA    0,&TCB
          --> OBJECT TCB                       00000131&LBL     SETC  ''
                                                 00000132         ST    0,SSSHTC
B-SSSHSPE(,&R) STORE                             00000133         AGO   .NOTCB
                                                 00000134.TCBREG  ANOP
                                                   00000135&LBL     ST    &TCB(1
),SSSHTCB-SSSHSPE(,&R) STORE TCB PTR               00000136&LBL     SETC  ''
                                                   00000137.NOTCB   AIF   ('&FLA
G' EQ '').NOFLAG                                     00000138&LBL     MVC   SSSH
FLAG-SSSHSPE(&R),&LFLAG SET FLAGS                    00000139&LBL     SETC  ''
                                                     00000140.NOFLAG  ANOP
                                                     0  0000141         MEND
                                                       00000142 {
         _ ./ ADD NAME=$$DOC    0100-99126-03239-0936-00016-00016-00000-DBCOLE2
           $$DOC........THIS FILE
   $$DOC   ASMFGSAM.....ASSEMBLY JCL
   00020000A  SMSCHED.....ASSEMBLY JCL
     00030000ASMSRUN......ASSEMBLY JCL
     00040000EXPORT.......JCL TO EXPORT THIS LIBRARY
     00050000FAKEGSAM.....O  BJECT DECK
       00060000FGSAM........SOURCE CODE (ASSEMBLER)
       00070000GSAMCALL.....ASSEMBLER MACRO
       00080000GSB..........ASSEMBLER MACR  O
         00090000README.......INFORMATION ABOUT THIS PROGRAM
         00100000SCHEDALC.....TSO CLIST
         00110000SCHEDRUN.....SOURCE CODE (ASSEMBLER)
           00120000SCHEDULE.....SOURCE CODE (ASSEMBLER)
           00130000SFR..........ASSEMBLER MACRO: MAPPING MACRO: SCHEDULE FILE'S
RECORD     00140000SRUNPROC.....PROC MODEL
             00150000TSOHELP......TSO HELP MEMBER
             00160000./ ADD NAME=ASMFGSAM 0100-99081-03239-0936-00025-00016-0000
0-DBCOLE2            //ASMFGSAM JOB (CSW,UPS),'540-456-8536',CLASS=A,MSGCLASS=D,
               ASMFGSAM//             MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439
               00020000//*
               00030000//ASM     EXEC PGM=ASMA90,REGION=0M,
               0004000  0//*
                 00050000//*****************************************************
******           00060000//* NOTE, YOU MAY PREFER A LINECOUNT OTHER THAT "109" F
OR   *           00070000//* THE ASSE  MBLY.
       *           00080000//***************************************************
********           00090000// PARM=('ASA,OBJ,NODECK,LC(109),MX(FULL),RENT,FLAG(N
OCONT)',           00100000// 'NORLD,TERM,TEST,US(WA  RN(11)),XREF(SHORT)')
                     00110000//*
                     00120000//*************************************************
**********           00130000//*      Dave Cole's "#" Macros
           *           00140000//***********************************************
************           00150000//SYSLIB   DD  DSN=DBCOLE.MACLIB,DISP=SHR
                       00160000//         DD  DSN=DBCOLE.SCHEDRUN.EXPORT,DISP=SH
R                        00170000//         DD  DSN=SYS1.MACLIB,DISP=SHR
                         00180000//         DD  DSN=SYS1.MODGEN,DISP=SHR
                         00190000//SYSUT1   DD  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CY
L,(15,5)),       +         00200000//             DISP=(,PASS)
                             00210000//SYSTERM  DD  SYSOUT=*
                             00220000//SYSPRINT DD  SYSOUT=*
                             00230000//SYSLIN   DD  DSN=DBCOLE.SCHEDRUN.EXPORT(F
AKEGSAM),DISP=SHR            0  0240000//SYSIN    DD  DSN=DBCOLE.SCHEDRUN.EXPORT
(FGSAM),DISP=SHR               00250000./ ADD NAME=ASMSCHED 0100-99081-03239-104
3-00056-00048-00000-DBCOLE5            //ASMSCHED JOB (CSW,UPS),'540-456-8536',C
LASS=A,MSGCLASS=D,             ASMSCHED//               MSGLEVEL=(1,1),NOTIFY=R9
999,TIME=1439                    00020000//*
                                 00030000//ASM     EXEC PGM=ASMA90,REGION=0M,
                                 00040000//*
                                   00050000//***********************************
************************           00060000//* Note, you may prefer a LINECOUNT
other that "109" for   *           00070000//* the assembly.
                         *           00080000//*********************************
**************************           00090000// PARM=('ASA,OBJ,NODECK,LC(109),MX
(FULL),RENT,FLAG(NOCONT)',           00100000// 'NORLD,TERM,TEST,US(WARN(11)),XR
EF(SHORT)'  )                          00110000//*
                                       00120000//*******************************
****************************           00130000//*      Dave Cole's "#" Macros
                             *           00140000//*****************************
******************************           00150000//SYSLIB   DD  DSN=DBCOLE.MACLI
B,DISP=SHR                               00160000//*
                                           00170000//***************************
********************************           00180000//*      SCHEDRUN's SFR macro
 and FAKEGSAM's GSAMCALL and   *           00190000//*      GSB macros. If Yale'
s GSAM IUP (available through  *           00200000//*        IBM) is installed,
 then precede this DD card with  *           00210000//*      one pointing to th
e dataset that contains the real *           00220000//*      GSAMCALL and GSB m
acros.                           *           00230000//***************  ********
************************************           00240000//         DD  DSN=DBCOLE
.SCHEDRUN.EXPORT,DISP=SHR                      00250000//*
                                               00260000//         DD  DSN=SYS1.M
ACLIB  ,DISP=SHR                                 00270000//         DD  DSN=SYS1
.MODGEN,DISP=SHR                                 00280000//SYSUT1   DD  DSN=&&SY
SUT1,UNIT=DISK,SPACE=(CYL,(15,5)),               00290000//             DISP=(,P
ASS)                                               00300000//SYSTERM  DD  SYSOUT
=*                                                 00310000//SYSPRINT DD  SYSOUT
=*                                                 00320000//SYSLIN   DD  DSN=&&
OBJSET,UNIT=DISK,SPACE=(CYL,(1,1),R+ LSE),           00330000//             DISP
=(MOD,PASS)                                            00340000//SYSIN    DD  DS
N=DBCOLE.SCHEDRUN.EXPORT(SCHEDULE),DISP=SHR            00350000//*
                                                       00360000//LKED    EXEC PG
M=IEWL,REGION=0M,                                        00370000//
PARM=(TEST,XREF,LET,LIST,RENT),                          00380000//
COND=(0,LT)                                              00390000//*
                                                         004000  00//***********
************************************************           00410000//*      FAKE
GSAM object module. Remove if Yale's GSAM IUP  *           00420000//*      (ava
ilable through IBM) is installed.              *           00430000//*********
**************************************************           00440000//SYSLIB
DD  DSN=DBCOLE.SCHEDRUN.EXPORT,DISP=SHR                      00450000//*
                                                             00460000//*********
*************  *************************************           00470000//*
Change to the load library of your choice.         *           00480000//*******
****************************************************           00490000//SYSLMOD
  DD  DSN=DBCOLE.LOAD,DISP=S  HR                                 00500000//SYSUT
1   DD  DSN=&&SYSUT1,DISP=(OLD,DELETE)                           00510000//SYSPR
INT DD  SYSOUT=*                                                 00520000//SYSLI
N   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)                             00530000//
      DD  *                                                        00540000
    ALIAS SCHED                                                    00550000
    NAME  SCHEDULE(R)                                                00560000./
ADD NAME=ASMSCRUN 0100-99081-03239-1043-00060-00046-00000-DBCOLE5            //A
SMSCRUN JOB (CSW,UPS),'540-456-8536',CLASS=A,MSGCLASS=D,             ASMSCRUN//
            MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439                    0002  0000/
/*                                                                     00030000/
/ASM     EXEC PGM=ASMA90,REGION=0M,                                    00040000/
/*                                                                     00050000/
/*******  ****************************************************           0006000
0//* Note, you may prefer a lINECOUNT other that "109" for   *           0007000
0//* the assembly.                                           *           0008000
0//********************  ***************************************           00090
000// PARM=('ASA,OBJ,NODECK,LC(109),MX(FULL),RENT,FLAG(NOCONT)',           00100
000// 'NORLD,TERM,TEST,US(WARN(11)),XREF(SHORT)')                          00110
000//*                                                                       001
20000//***********************************************************           001
30000//* Dave Cole's "#" macros.                                 *           001
40000//**********************************************+ *************           0
0150000//SYSLIB   DD  DSN=DBCOLE.MACLIB,DISP=SHR
 00160000//*
 00170000//***********************************************************
 00180000//* SCHEDRUN's SFR macro and FAKEGSAM's GSAMCALL and GSB      *
   00190000//* macros. If Yale's GSAM IUP (available through IBM) is   *
   00200000//* installed, then precede this DD card with one pointing  *
   00210000//* to the dataset that contains the real GSAMCALL and GSB  *
     00220000//* macros.                                                 *
     00230000//***********************************************************
     00240000//         DD  DSN=DBCOLE.SCHEDRUN.EXPORT,DISP=SHR
     00250000//*
       00260000//         DD  DSN=SYS1.MACLIB,DISP=SHR
       00270000//         DD  DSN=SYS1.MODGEN,DISP=SHR
       00280000//*
         00290000//***********************************************************
         00300000//* JES2 macros. Change the name of this library to point   *
         00310000//* to the JES2 macro library   on your system.               *
           00320000//***********************************************************
           00330000//         DD  DSN=SYS1.SHASMAC,DISP=SHR
           00340000//*
             00350000//SYSUT1   DD  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CYL,(15,5)),
             00360000//             DISP=(,PASS)
             00370000//SYSTERM  DD  SYSOUT=*
               00380000//SYSPRINT DD  SYSOUT=*
               00390000//SYSLIN   DD  DSN=&&OBJECT,UNIT=DISK,SPACE=(CYL,(1,1),RL
SE),           00400000//             DISP=(MOD,PASS)
                 00410000//SYSIN    DD  DSN=DBCOLE.SCHEDRUN.EXPORT(SCHEDRUN),DIS
P=SHR            00420000//*
                 00430000//LKED    EXEC PGM=IEWL,REGION=0M,
                 00440000/  /             PARM=(TEST,XREF,LET,LIST,RENT),
                   00450000//             COND=(0,LT)
                   00460000//*
                   00470000//************  *************************************
**********           00480000//*      Change to the load library of your choice.
         *           00490000//*************************************************
**********           00500000//SYSLMOD  DD  DSN=DBCOLE.L  OAD(SCHEDRUN),DISP=SHR
                       00510000//SYSUT1   DD  DSN=&&SYSUT1,DISP=(OLD,DELETE)
                       00520000//SYSPRINT DD  SYSOUT=*
                       00530000//*                                     +
                         00540000//**********************************  *********
****************           00550000//* FAKEGSAM object module. Remove if Yale's
GSAM IUP       *           00560000//* (available through IBM) is installed.
               *           00570000//*******************************************
****  ************           00580000//SYSLIB   DD  DSN=DBCOLE.SCHEDRUN.EXPORT,D
ISP=SHR                      00590000//SYSLIN   DD  DSN=&&OBJECT,DISP=(OLD,DELET
E)                           00600000./ ADD NAME=EXPORT   0101-99126-03239-1049-
00016-00016-00000-D  BCOLE5            //XPORTSCH JOB (CSW,UPS),'540-456-8536',C
LASS=A,MSGCLASS=D,             EXPORT  //             MSGLEVEL=(1,1),NOTIFY=R999
9,TIME=1439                    00020000//*
                               000  30000//CLEANUP EXEC PGM=IEFBR14
                                 00040000//SCRATCH  DD  DSN=DBCOLE.SCHEDRUN.EXPO
RT.XMIT,                         00050000//             UNIT=SYSALLDA,SPACE=(TRK
,0),DISP=(MOD,DELETE)            00060000//*
                                   00070000//TRANSMIT EXEC PGM=IKJEFT01
                                   00080000//SYSTSPRT DD  SYSOUT=*
                                   00090000//TEST     DD  DSN=DB  COLE.SCHEDRUN.
EXPORT,DISP=SHR                      00100000//MESSAGE  DD  DSN=DBCOLE.SCHEDRUN.
EXPORT(README),DISP=SHR              00110000//SYSTSIN  DD  *
                                     00120000XMIT SCHEDRUN.USER +
                                       00130000     DSNAME('DBCOLE.SCHEDRUN.EXPO
RT') +                                 00140000     MSGDDNAME(MESSAGE) NOLOG +
                                       00150000     OUTDSNAME('DBCOLE.SCHEDRUN.E
XPORT.XMIT')                             00160000./ ADD NAME=FAKEGSAM
                                                  SYM                FAKEGSAM
 PSAG   FLCIPPSW      g   FLCRNPSW   h   FAKEGSAM SYM              G   FLCICCW1
     g   FLCROPSW   G   FLCIC  CW2      e  FAKEGSAM SYM             FLCCVT  h
   g   FLCEOPSW   g   FLCSOPSW   g   FLCPOPFAKEGSAM SYM            SW   g   FLCM
OPSW   g   FLCIOPSW   h      f  <FLCCVT2  hFAKEGSAM SYM              &   h
g   FLCENPSW   h  *  g  -FLCSNPSW   h     gF  AKEGSAM SYM               FLCPNPSW
   h  %  g   FLCMNPSW   h     g   FLCINPSW   FAKEGSAM SYM            h  @  g   P
SAEPARM  G  dPSAEEPSW     f  dPSASPAD  g  fFLFAKEGSAM SYM            CEICOD  G
hPSAESPSW     h  h   g  iFLCSVILC  f   FLCSVCFAKEGSAM SYM              N  G   PS
AEPPSW      h      g   FLCPIILC  G   FLCPICOD  FAKEGSAM SYM               g   PS
AEECOD  g   PSAPICOD  E   FLCTEA     h      E  FAKEGSAM SYM            lFLCDXC
    g  lFLCTEAB3   h  m   g  nFLCMCNUM   g  oFLFAKEGSAM SYM            CPE  RCD
  g  pFLCATMID   e  qFLCPER  h      g   FLCMTRCD FAKEGSAM SYM              g   F
LCTEARN   g  ~FLCPERRN   h  s   f  tFLCARCH   e  FAKEGSAM SYM            uPSAMPL
  H  y      h  y   G   FLCIOCDP      e   FLCSID  FAKEGSAM SYM             f   FL
CIOFP   h+   {   f  HFLCFACL   h      f  MFLCESAR  FAKEGSAM SYM            f  QF
LCCTSA     f  \FLCCCSA   f  YFLCMCIC   h  0   e  8FLCFAKEGSAM SYM            FSA
  h      e   FLCFLA   g   FLCRV110   G   FLCARSAV    FAKEGSAM SYM             g
 -FLCFPSAV   G   FLCGRSAV     G  {FLCCRSAV     G   FLFAKEGSAM SYM            CHD
END     e   PSAPSA   g     PSACPUPA  g   PSACPULA  g   FAKEGSAM SYM            P
SAPCCAV  g   PSAPCCAR  g   PSALCCAV  g   PSALCCAR  f   FAKEGSAM SYM            P
SATNEW  f   PSATOLD  f   PSAANEW  f   PSAAOLD  G   PSASFAKEGSAM SYM            U
PER      f   PSASUP1   f   PSASUP2     f   PSASUP3   f   FAKEGSAM SYM
 PSASUP4   g   PSARV22C   g   PSAPTYPE   e   PSAILS   g  FAKEGSAM SYM
  PSALSVCI   g   PSAFLAGS   g   PSARV241   g  .PSASCAFF  FAKEGSAM SYM
  g  <PSALKCRF  H  &     f  &PSAMPSW   H        g     PSAMCFAKEGSAM SYM
   HEX   g  -PSATCLIN  g   PSAINTIN  g   PSAIPCIN  g  %PSAEFAKEGSAM SYM
   MS2S  g   PSASTOSM  g   PSAHLHIS  g   PSARECUR   f   PSAFAKEGSAM SYM
   RSSM   g  :PSASNSM2   g  #PSARTM1S   g  @PSALWTSA  F   PFAKEGSAM   SYM
     SACLHT      G   PSACLHT1  |   g   PSADISPL  f  dPSAASML FAKEGSAM SYM
      g  hPSASALCL  g   PSAIOSSL  g   PSARSMDL  g  mPSAIOSUL FAKEGSAM SYM
      g  qPSARVLK1  g   PSARV29C  g   PSARV2A0  g  uPSATPACL FAKEGSAM SYM
        f  yPSAOPTL  g   PSARSMGL  g   PSAVFIXL  g   PSAASMGL  FAKEGSAM SYM
       g   PSARSMSL  g   PSARSMXL  g  {PSARSMAL  g  DPSAVPAGL  FAKEGSAM SYM
       g  HPSARSMCL  g   PSARVLK2  G  }PSACLHT2      f  }PSARSMFAKEGSAM SYM
       L  g  MPSA  TRCEL  f  QPSAIOSL  g   PSARVLK4  G  \PSACLHT3FAKEGSAM SYM
               f  \PSACPUL  g  UPSARVLK5  G  YPSACLHT4      f  YPFAKEGSAM SYM
         SACMSL  g   PSALOCAL  g  0PSARVLK6  g  4PSALCPUA  F  8PSFAKEGSAM SYM
         AHLHI     F  8PSACLHS       g  8PSACLHS1   g  9PSACLHS2   FAKEGSAM SYM
           g   PSACLHS3   g   PSACLHS4   f   PSALITA  g   PSASTOR8 FAKEGSAM SYM
             e   PSACR0  g   PSAMCHFL   g   PSASYMSK   g   PSAACTCDFAKEGSAM SYM
              g   PSAMCHIC   g   PSAWKRAP  g     PSAWKVAP  g   PSAVSTFAKEGSAM SY
M            AP  g   PSACPUSA  f   PSASTOR  g   PSAIDAWK   e  :PSARETFAKEGSAM SY
M              g  @PSARETCD  h  =   F   PSARSVT      G   PSARSVTE    FAKEGSAM SY
M              f   PSACSTK  f  dPSANSTK  f  hPSASSTK  f   PSAS  SAV  f FAKEGSAM
SYM              PSAMSTK  f  mPSAMSAV  f  qPSAPSTK  f   PSAPSAV  g   PSFAKEGSAM
SYM            AESTK1  g  uPSAESAV1  g  yPSAESTK2  g   PSAESAV2  g   PSFAKEGSAM
SYM            AESTK3  g   PSAESAV3  f   PSARSTK  f   PSARSAV  H  {    FAKEGS  A
M SYM             g  {PSALWPSW   H  H     g  HPSARSPSW   f  }PSATSTK  f  FAKEGSA
M SYM            MPSATSAV  f  QPSAASTK  f   PSAASAV  H  \     g  \PSARTPSFAKEGSA
M SYM            W   g  YPSARV3E8   H  0     g  0PSASFACC   g  4PSALSFCC FAKEGSA
M SYM               g  8PSASVC13  h      f   PSAINTE   g   PSARTM1R  H     FAKEG
SAM SYM               g   PSAPCPSW   g   PSAATCVT  g   PSAWTCOD  f   PSASCWFAKEG
SAM SYM            A  g   PSARSMSA  H        g   PSASCPSW   h     H        FAKEG
SAM SYM            g   PSAS+ MPSW   h     g   PSARV428   H        g   PSAPSWSFAK
EGSAM SYM            V     H        f   PSACPUT   G   PSAPCFUN     g   PSAPCFB1F
AKEGSAM SYM               g   PSAPCFB2   g  :PSAPCFB3   g  #PSAPCFB4   g  @PSAPF
AKEGSAM SYM            CPS2  g  =PSARV47E   g   PSAPCWKA   g  qPSAPCPS3  g   PSF
AKEGSAM SYM            APCPS4  G   PSAMO  DEW     h      g   PSAMFLGS   g   PSAM
OFAKEGSAM SYM            DEH   f   PSAMODE   h      g  tPSASTNSM   f  uPSALKJW
GFAKEGSAM SYM              yPSADZERO     g  yPSAFZERO  h     g   PSALKJW2  f   P
SFAKEGSAM SYM            ALKPT  g   PSARV4B8   f   PSAL  IT2  g  {PSAECLTP  G  D
PSAFAKEGSAM SYM            CLHSE     g  DPSALHEB0   g  EPSALHEB1   g  FPSALHEB2
  gFAKEGSAM SYM              GPSALHEB3   g  HPSARV4C8   g  }PSARV4D0   f  hPSAHW
FB FAKEGSAM SYM              g  iPSACR0CB   h      g   PSACR0SV  g   P  SAPCCR0
 f  mFAKEGSAM SYM            PSARCR0  F  qPSASTKE     e  qPSATKN  e   PSAASD  e
  PSAFAKEGSAM SYM            SEL  H        g   PSASKPSW   g  uPSASKPS2  g  yPSAC
PCLS FAKEGSAM SYM             g   PSARV5AC   f   PSASCFS  f   PSAPAWA  f   PSASC
FB     FAKEGSAM SYM            h      g   PSACR0M1   g  {PSACR0M2   g  DPSARV5C4
  lf   FAKEGSAM SYM            PSATIME  g  -PSASRSAV  f   PSAESC8   G   PSADXMSI
     G FAKEGSAM SYM              PSADCR3I     g   PSADPKMI  g   PSADSASI  G   PS
ADCR4I FAKEGSAM SYM                  f   PSADAXI  g   PSADPASI  g   PSADSARS   G
   PSADXMFAKEGSAM SYM            SV     F   PSADCR3     f   PSADPKM  f   PSADSAS
  F   PSAFAKEGSAM SYM            DCR4     e   PSADAX  f   PSADPAS  g  {PSADTSAV
 G  {PSAFFAKEGSAM SYM            F6  C0      G  HPSAUSEND     g  HPSARV6C8  XH
      G   PFAKEGSAM SYM            SADATLK      g  \PSADATOF  g  UPSADATLN  g  Y
PSARV7E8   FAKEGSAM SYM            G  YPSAFF7E8      g   PSATRACE   h      g  0P
SATBVTR  g FAKEGSAM SYM             4PSATBVTV  f    8PSATRVT  e   PSATOT  G   PS
AUS2ST     G FAKEGSAM SYM              PSACDSAV      g   PSACDSAE  g   PSACDSAF
 g   PSACDSA0FAKEGSAM SYM              g   PSACDSA1  g   PSAGSPSW  g   PSAGSRGS
 g   PSARV818FAKEGSAM SYM               g   PSASV01R  g   PSASV14  R  g   PSAEMS
2R  G   PSATRSAFAKEGSAM SYM            V      g   PSATRGR0  g   PSATRGR1  g   PS
ATRGR2  g   PSAFAKEGSAM SYM            TRGR3  g   PSATRGR4  g   PSATRGR5  g   PS
ATRGR6  g   PSAFAKEGSAM SYM            TRGR7  g   PSATRGR8  g  <PSATRGR9  g  &PS
  ATRGRA  g   PSAFAKEGSAM SYM            TRGRB  g   PSATRGRC  g  *PSATRGRD  g  -
PSATRGRE  g   PSAFAKEGSAM SYM            TRGRF  g   PSARV868   H  y     f  yPSAG
SAV   G  yPSAFF8AFAKEGSAM SYM            8      g  YPSASCRG1  g   PSASCRG2  G  0
PSAGPREG     g     FAKEGSAM SYM            PSARSREG  g   PSAPCGR8  g   PSAPCGR9
 G   PSAPCGAB     gFAKEGSAM SYM               PSAPCGRA  g   PSAPCGRB  H        F
   PSALKSA      f  FAKEGSAM SYM             PSALKR0  f   PSALKR1  f   PSALKR2  f
   PSALKR3  f   PSAFAKEGSAM SY  M            LKR4  f   PSALKR5  f   PSALKR6  f
 PSALKR7  f   PSALKR8FAKEGSAM SYM              f   PSALKR9  g   PSALKR10  g   PS
ALKR11  g   PSALKR12 FAKEGSAM SYM             g   PSALKR13  g   PSALKR14  g  <PS
ALKR15  H  &     f  &FAKEGSAM SYM            + PSASLSA   G  &PSAFF950      g  qP
SAJSTSA   G  qPSAFF998 FAKEGSAM SYM                   G  QPSAUS2ND     H  Q
G  QPSASLKSA      g  QPSAFAKEGSAM SYM            SLKR0  g   PSASLKR1  g  \PSASLK
R2  g  UPSASLKR3  g  YPSAFAKEGSAM SYM            SLKR4  g   PSASLKR5  g  0PSASLK
R6  g  4PSASLKR7  g  8PSAFAKEGSAM SYM            SLKR8  g     PSASLKR9  g   PSAS
LKRA  g   PSASLKRB  g   PSAFAKEGSAM SYM            SLKRC  g   PSASLKRD  g   PSAS
LKRE  g   PSASLKRF  g   PSAFAKEGSAM SYM            RVA18   g   PSASCSAV   g  @PS
ASFLGS   g  'PSARVA7D   g  FAKEGSAM SYM             PSARVA80   g   PSAGSC  H7  g
   PSAGSCH8  g   PSALSCH1  g FAKEGSAM SYM              PSALSCH2  e  <PSASVT  f
&PSASVTX  g   PSARVB54   f  yFAKEGSAM SYM            PSAXSTK  g   PSARVBAC   H
      F   PSASTAK      H     FAKEGSAM SYM               yE   PSAEND     G   FLCE
SAME       h      h      h     FAKEGSAM SYM             g   FLCER018   h      h
 d   h  f   h  h   h  h   h  h FAKEGSAM SYM              g  iFLCESILC  h      h
     h      h      g   FLCEPILCFAKEGSAM SYM              h      h     h     h
   h      f  lFLCEDXC    h  m   hFAKEGSAM SYM              o   h  o   h  p   f
qFLCEPER   h  q   h     g   FLCEEFAKEGSAM SYM            AID  h  ~  h  s  h  t
 f  uFLCEMPL  g  yFLCETEID   f  yFAKEGSAM SYM            FLCETEA   h  y   g   FL
CETEA7   h  y   h  y   h     h  yFAKEG  SAM SYM               h  y   h     h
  g   FLCESSID   h      h  {   g  DFAKEGSAM SYM            FLCER0C4   h  H   h
H   h  I   h      h      g   FLCER0FAKEGSAM SYM            CC   g  MFLCER0D4   g
  QFLCER0D8   g  YFLCEMCIC   h  0  FAKEGSAM SYM               h  4   f  8FLCEFSA
   g   FLCER100   h      h      h    FAKEGSAM SYM              h  &   h  -   h
    g   FLCER180   h      h      h  {FAKEGSAM SYM               h  }   h  \   h
 0       TCBFIXE   TCBFRS      f   TCFAKEGSAM SYM            BFRS0    f   TCBFRS
2  f   TCBFRS4  f   TCBFRS6  H        eFAKEGSAM SYM               TCBRBP  e   TC
BPIE  e   TCBDEB  e   TCBTIO  E   TCBCMFAKEGSAM SYM            P      f   TCBCMP
F   f   TCBCMPC   E   TCBTRN     e   TCFAKEGSAM SYM            BABF   f   TCBTRN
B    E   TCBMSS     h      f   TCBMSSB  eFAKEGSAM SYM               TCBPKF   F
 TCBFLGS      g   TCBFLGS1   g   TCBFLGS2FAKEGSAM SYM               g   TCBFLGS3
   g   TCBFLGS4   g   TCBFLGS5   e   TCBLFAKEGSAM SYM            MP  e   TCBDSP
 e   TCBLLS  e   T  CBJLB  E  <TCBJPQ     gFAKEGSAM SYM              <TCBPURGE
 f  (TCBJPQB  E  &TCBGRS      f  &TCBGRS0  FAKEGSAM SYM            f   TCBGRS1
f   TCBGRS2  f  *TCBGRS3  f  -TCBGRS4  f   FAKEGSAM SYM            TCBGRS5  f
TCBGRS6  f  %TCBGRS7  f   TCBGRS8    f   TCBGFAKEGSAM SYM            RS9  g   TC
BGRS10  g  @TCBGRS11  g   TCBGRS12  g  dTCBGRFAKEGSAM SYM            S13  g  hTC
BGRS14  g   TCBGRS15  E   TCBFSA     h     f FAKEGSAM SYM             jTCBFSAB
e  mTCBTCB  e  qTCBTME  G   TCBJSTCB     h   FAK  EGSAM SYM               g   TC
BJSTCA  e   TCBNTC  e  uTCBOTC  e  yTCBLTC  e  FAKEGSAM SYM             TCBIQE
e   TCBECB  g   TCBTSFLG   g   TCBSTPCT  f   TCFAKEGSAM SYM            BTSLP  f
  TCBTSDP   d   TCBRD  d   TCBAE  F  {TCBSTAB  FAKEGSAM SYM    +            g  {
TCBNSTAE   g  ATCBSTABB  E  DTCBTCT     g  DTCBTCFAKEGSAM SYM              TGF
 f  ETCBTCTB  f  HTCBUSER  G   TCBSCNDY      F   TCFAKEGSAM SYM            BNDSP
      g   TCBNDSP0   g   TCBNDSP1   g   TCBNDSP2   FAKEGSAM SYM            g   T
CBNDSP3   g  }TCBMDIDS  F  MTCBJSCB     g  MTCBRECDFAKEGSAM SYM            E
 g  NTCBJSCBB  f  QTCBSSAT  g   TCBIOBRC  g  \TCBEXCPFAKEGSAM SYM            D
F  UTCBEXT1     h  U   g  VTCBEXT1A  F  YTCBBITS     FAKEGSAM SYM             g
 YTCBNDSP4   g  ZTCBNDSP5   g   TCBFLGS6   g   TCBFLGFAKEGSAM SYM            S7
  e   TCBDA  R   g   TCBRSV37   g   TCBSYSCT  g   TCBSTFAKEGSAM SYM            M
CT  F  0TCBEXT2     h  0   g  1TCBEXT2A  f  4TCBAECB  eFAKEGSAM SYM
 8TCBXSB  f   TCBBACK  f   TCBRTWA  f   TCBNSSP  f   TCFAKEGSAM SYM            B
XLAS  g   TCBABCUR   g   T  CBFJMCT  e   TCBTID   g   TCBFAKEGSAM SYM
 FLGS8   F   TCBXSCT     g   TCBXSCT1   g   TCBXSCT2   g FAKEGSAM SYM
   TCBCCPVI  E   TCBFOE     h      f   TCBFOEA  e   TCBSWFAKEGSAM SYM
 A  g   TCBSTAWA  g   TCBTCBID   g   TCBR  TM12  G   TCBESTFAKEGSAM SYM
   AE      g   TCBSCBKY   g   TCBESTRM   g   TCBERTYP  f   FAKEGSAM SYM
   TCBMODE  g   TCBUKYSP  f   TCBR272   f   TCBAFFN   g   TFAKEGSAM SYM
   CBFBYT1   g   TCBFBYT2   g   TCBFBYT3   g   TCBFBYT4     eFAKEGSAM SYM
        TCBRPT  e   TCBVAT  g   TCBSWASA  g   TCBSVCA2  e   TFAKEGSAM SYM
     CBERD  e  <TCBEAE  e  &TCBARC  f   TCBGRES  f   TCBSTCB FAKEGSAM SYM
      g  *TCBTTIME   g   TCBCELAP  f   TCBR148   g  |TCBRBYT1FAKEGSAM S  YM
          g  ,TCBLEVEL   e  %TCBBDT  g   TCBNDAXP  f   TCBSENV FAKEGSAM SYM
        H            TCBXTNT2E   TCBGTF     f   TCBTFLG   f   TFAKEGSAM SYM
       CBGTFA  h      f   TCBRCMP   g   TCBEVENT  g   TCBRTMCT FAKEGSAM SYM
          e   TCBTQE  f   TCBCAUF  g   TCBPERCP  g   TCBPERCT  H FAKEGSAM SYM
                    TIOTH        g   TIOCNJOB   G   TIOCSTEP     FAKEGSAM SYM
          G   TIOCSTPN      g   TIOCPSTN   g   TIOCJSTN   g   TIOFAKEGSAM SYM
         ELNGH  g   T  IOESTTA   G   TIOERLOC      g   TIOEWTCT   gFAKEGSAM SYM
              TIOELINK   g   TIOEDDNM   g   TIOEJFCB   g   TIOESTTCFAKEGSAM SYM
              g   TIOESTTB   g   TIOEFSRT  h      g   TIOPNSLT  h  FAKEGSAM SYM
               g   TIOPNSRT  g   TIO  PPOOL   g   TIOPSTTB   g   TIOPFAKEGSAM SY
M            SLOT  g   TIOTFEND       IFGACBd   ACBID   f   ACBSTYP  FAKEGSAM SY
M             F   ACBLENG     F   ACBLEN2     g   ACBLENG2  F   ACBAMFAKEGSAM SY
M            BL     E   ACBJWA     F   ACBIBCT       G   ACBSUBNM     gFAKEGSAM
SYM               ACBAMWAP  g   ACBINRTN  G   ACBMACRF      g   ACBMACRFAKEGSAM
SYM            1   g   ACBMACR2   g   ACBBSTNO  g   ACBSTRNO  g   ACBBUFAKEGSAM
SYM            FND  g   ACBBUFNI  G   ACBBUFPL     E   ACBLFB       g   AFAKEGSA
M SYM            CBMACR3   f   ACBSHRP   f   ACBJBUF  g   ACBRECFM   g   FAKEGSA
M SYM            ACBCCTYP   E   ACBOPT      G   ACBDSORG      g   ACBDSORFAKEGSA
M SYM            1   g   ACBDSOR2   g   ACBMSGAR  g   ACBPASSW  G   ACBEXFAKEGSA
M            _  SYM            LST     e   ACBUEL  f   ACBDDNM   f   ACBTIOT  f
  ACBINFAKEGSAM SYM            FL   D   ACBAM      g   ACBAMETH   f   ACBERFL
e   ACBFAKEGSAM SYM            DEB  g   ACBOFLGS   g   ACBERFLG   G   ACBINFLG
    g  FAKEGSAM   SYM             ACBINFL1   g   ACBINFL2   G   ACBUJFCB     f
 ACBOPTN FAKEGSAM SYM              h      g   ACBBUFSP  G   ACBBLKSZ     g   ACB
MSGLN  g FAKEGSAM SYM              ACBLRECL  g   ACBUAPTR  g   ACBCBMWA  F   ACB
APID     FAKEGSAM SYM              f   ACBAMAX      IFGRPLd   RPLID   f   RPLSTY
P   e   RPLFAKEGSAM SYM            REQ   E   RPLLEN      f   RPLLEN2   g   RPLPL
HPT  e   RPFAKEGSAM SYM            LECB  G   RPLFDBWD      f   RPLSTAT   F   RPL
FDBK      GFAKEGSAM SYM               RPLRTNCD        g   RPLERREG   G   RPLCNDC
D      G   RPFAKEGSAM SYM            LCMPON      f   RPLFDB2   G   RPLERRCD
 f   RPLFDB3 FAKEGSAM SYM              G   RPLKEYLE     f   RPLKEYL  g   RPLSTRI
D  g   RPLCCHFAKEGSAM SYM            AR  f   RPLDACB  g   RPL  TCBPT  f   RPLARE
A  E   RPLARG  FAKEGSAM SYM               e   RPLSAF   e   RPLDAF   G   RPLOPTCD
      f   RPLOPFAKEGSAM SYM            T1   f   RPLOPT2   f   RPLOPT3   f   RPLO
PT4   G   RPLNXFAKEGSAM SYM            TRP     g   RPLCHAIN  f   RPLRLEN  f
RPLBUFL  G   RPLOFAKEGSAM SYM            PTC2      f   RPLOPT5   f   RPLOPT6   f
   RPLOPT7   f   FAKEGSAM SYM            RPLOPT8   h      g   RPLAIXID   h
F   RPLRBAR      FAKEGSAM SYM            g   RPLAIXPC   h      f   RPLDDDD   G
 RPLEXTDS        g FAKEGSAM SYM              RPLEXTD1   g   RPLACTIV   g   RPLEM
LEN  g   RPLERMSA  FAKEGSAM SYM                    IFGRPL    FAKEGSAM    OCMAg
 OCMAFLAG   g   OCMFAKEGSAM SYM            AMAHL  f   OCMARQT   f   OCMADDN   g
  OCMAECNT  g   OCMFAKEGSA  M SYM            AMCNT  g   OCMAMADR  E   OCMAHZ
      GSBd   GSBID   FAKEGSAM SYM            f   GSBFILE   f   GSBPOOL  F   GSBF
LGW     f   GSBFLG1  FAKEGSAM SYM             f   GSBFLGS   f   GSBINDX  f   GSB
RSV1  f   GSBBUFL  f FAKEGSAM SYM                GSBBUFA  f   GSBRECL  f   GSBMS
GA  f   GSBVSAM  f   GSFAKEGSAM SYM            BVSFN  e   GSBECB  e   GSBRBA  g
  GSBPASSW   g   GSBFILFAKEGSAM SYM            KL  g   GSBFILKO  g   GSBFILRL  g
   GSBFILCL  g  <GSBFILFAKEGSAM SYM            AC   g  (  GSBFILFG   f  +GSBMSGX
  "F   GSBBUFX          FFAKEGSAM SYM            GGE   FGGREL     d   FGGID   E
  FGGACB     h      h    FAKEGSAM SYM             h     h     h     h      h
  h     h     h     h    FAKEGSAM SYM             h      h     h     h        h
     h      h     h     h  FAKEGSAM SYM               h      h      h     h
 h      h     h     h     hFAKEGSAM SYM                 h     h  <  h  &  E   FG
GRPL     h     h     h     FAKEGSAM SYM            h     h     h  *  h  -   h  /
   h       h     h     h  %  FAKEGSAM SYM            h     h     h     h  @   h
 '   h  =   h  "   h     h  dFAKEGSAM SYM              h  h  h      h      h
  h      h      h  q   h  r  FAKEGSAM SYM            h     h     F   FGGOPEN
 h     h  ~  g  uSHOW+ PLST  h FAKEGSAM SYM             y  h     h     h     h
   h     h  ]  h       h  {  h  DFAKEGSAM SYM              h  H  h     h     h
   h  }  h  K  h  M  h  O  h  Q  FAKEGSAM SYM            h     h     h     G  \S
HOWAREA     g  \FGGKEYLN  g  UFGGFAKEGSAM SYM            KEYOF  g  YFGGMAXRL  g
  FGGCISIZ  g  0FGGHIRBA  g  4FGGF  AKEGSAM SYM            MKYLN  g  6FGGPVKEY
 H  6     f  6FGGFLAG      7 E  8FGFAKEGSAM SYM            GEND         FGLe   F
GLWD1  e   FGLHSA  e   FGLLSA  e   FAKEGSAM SYM            FGLR14  e   FGLR15  d
   FGLR0  d   FGLR1  d   FGLR2  d  FAKEGSAM SYM               FGLR3  d   FGLR4
d   FGLR5  d   FGLR6  d   FGLR7  d   FAKEGSAM SYM            FGLR8  d   FGLR9  e
   FGLR10  e   FGLR11  e   FGLR12  G FAKEGSAM SYM              SAVEVSIO     G
SAVESRCH     g  qFGLCALTP     r g   FFAKEGSAM SYM            GLK  EYAD  e   FGLK
EY   f   FGLOCMA   G   AMSPLIST     G  FAKEGSAM SYM             AMSIOLST     e
 VERIFY   e  RVERDDN   h        T E  YFAKEGSAM SYM            FGLEND         ER
Cg   ERCRETUR  g   ERCREASO  g   ERCVREFAKEGSAM SYM            TU  g   ERCVREAL
   g   ERCVREAH      FAKEGSAMh     g   E0FAKEGSAM SYM            062MID   h
 h          E0062ZIDg   IHB0067F   h     FAKEGSAM SYM            h     h      G
  IHB0067C     g   E0062LEN  G   E0062ENDFAKEGSAM SYM                     FGRETR
YH  h     G  w  FGOPNPWD     h     h     h FAKEGSAM SYM                 G   FGOF
GMSG         FGOFCMSG    FGOFMSGZ    FGOPENFAKEGSAM SYM            OKh  {  h  A
 h  B  h  D  h  H  h     h     h  }  h  K  FAKEGSAM SYM            h  M  h  O  h
  Q  h     h     h     h  \    h  S  h      hFAKEGSAM SYM                 h
 h         IDA0084Bh  +   h     h      G   DIFAKEGSAM SYM            E0001Z
H  -     G   FGOPENED        fFGBUFAH        FAKEGSAM SYM                FGREADG
  UFGRSEQOK         FGRNPSEQ    FGRCKEOD      FFAKEGSAM SYM            GRLASTR
  FGRCKPOS    FGRPOSIT    FGRCKPO2   bFGROKCHK FAKEGSAM SYM               FGWRIT
EF   FGWNOWN         FGREWRIT    FGDELETE    FGFAKEGSAM SYM            RELEAS
0FGFINISH    FGRCODESh      h     h      G  <DIFAKEGSAM SYM              E0004Z
       <FGFINRETH  &         FGERRUDFH           FAKEGSAM SYM             FGERRO
PNH  *        ;FGERRPOSH            FGERRFGGH    FAKEGSAM SYM
|FGRETURN   @FGFUNCTI    FGREASONF   KEEPFGG     FAKEGSAM SYM            g    QI
HB0111F   h  R  h     h      g  YE0105LEN      VSAMFAKEGSAM SYM            GET
 4VSAMPUT    VSAMERAS    VSAMENDR    FGVSAMIOG   FGFAKEGSAM SYM            ETNUP
D     G   FGETNDIR     G  <FGETNBWD        -FGETBUFFAKEGSAM SYM            A   f
FGETMSGAG     VSIOPTOK     G  UVSIOVECT        UVSIOVFAKEGSAM SYM            GET
   YVSIOVPUT    VSIOVERA   0VSIOVENDF  4VSIOGET     FFAKEGSAM SYM
VSIOPUT     G  +VSIOERAS     G   VSIOENDR     G   VSIFAKEGSAM SYM            OAF
TR         IDA0118A    I  DA0118BG   VSIONCRE         SFAKEGSAM SYM            R
CHh      h     h      G   DIE0005Z         SRCHUP   %SRFAKEGSAM SYM            C
HUP2   :SRCHDOWN   dSRCHPARE    SRCHNFND    SRCHNULL   FAKEGSAM SYM
SRCHFND   DCOMPARED  \FGREL     c  \FGI+ D   D  YFGACB   FAKEGSAM SYM
   h  Y   h  Z  h     h     h  0  h    4   h  5   h  6  h  FAKEGSAM SYM
   7  h  8  h     h      h     h     h      h      h      hFAKEGSAM SYM
        h     h     h      h      h     h      h      h    FAKEGSAM SYM
    h     h     h     h     h     h     D   FGRPL       h    FAKEGSAM SYM
      h     h     h     h     h     h      h      h     h    FAKEGSAM SYM
      h     h  <  h  &  h     h     h  *   h  )   h  ;   h  ^FAKEGSAM SYM
        h  -  h     h     h  %   h  _   h  >   h  ?   h      FAKEGS  AM SYM
       h      h     h  :  h  @  E   FGOPEN     h     h  a  E  dFAKEGSAM SYM
       ERCMAP      H  d     H  i     H        H  l     H  q    FAKEGSAM SYM
        H        H  s     H  x     H        H        H        HFAKEGSAM SYM
                 H  {     H  E     H        H        H  M     F  FAKEGSAM SYM
         RERCMAPZ         R h  \   h     h     H        h     H  FAKEGSAM SYM
               H        H        H        h     h      h     h   FAKEGSAM SYM
            h        h     h      h     h      H        H        h FAKEGSAM SYM
            |  h  ,  h  %  h  _  h  >     ?     SYSPRINT    SYSINh FAKEGSAM SYM
            f   h  i  h      G   DIE0006Z     H  w        }SYSIN4  FAKEGSAM SYM
            MSYSIN0   QSYSINRET       h  0   h  2                    FAKEGSAM ES
D            FAKEGSAM                                                FAKEGSAM TX
T             00  FAKEGSAM 08/27/03 09.31  }     {    0{      0{     FAKEGSAM TX
T                {  \    &\} &}\ qJ}  0{    Y       q ~ rj     B    8  FAKEGSAM
TXT            {    j     8  &   Kt  G\ 0  &0 %K 0   j     {w    & 0 n FAKEGSAM
TXT   y         q  B              \        D N 0    =  a & 0        &1FAKEGSAM
TXT   \               j     A  \I       c  c o c  \   0I   I       I   FAKEGSA
M TXT            I      Uc K cR    c  0A         IDCAMS          j     A FAKEGSA
M TXT   &           +j     A       A k          " 0I       A j     A  T  FAKEGSA
M TXT   h          A       A  3\  \\ .0I ]3I  }A  0I    0D o   P      0AUFAKE  G
SAM TXT   {                                               uK   0  0  &0   0FAKEG
SAM TXT   8          &0   0  &0   0  &0   0  &0   0  &0  o    0  &0   0 \&0FAKEG
SAM TXT               0   01  00  \0    \  I  }B   [ 1      4K    \k2 <k* (FAKEG
SAM TXT                  N   G\  D       I   Bf    !  U&    0 4K      0Bk    FAK
EGSAM TXT             qi    1B  0B  0C  0C  0C  0C  0H\ 0I  0C0j     BUj j6  FAK
EGSAM TXT   Q        C N  6    C    \D ]2I|  C j    \Cb 0 4    N      0C   CbFAK
EGSAM TXT             0I  \  D  0Cb]3I   C j    \Cb 0I  \D  0Cb]3I   Cb 0I  \D F
AKEGSAM TXT            ]2I|  C ]3I   Cbj     C  0Cb 0 4    N      0C%  C j     F
AKEGSAM TXT            C m"j6n  /  D K  6  o j6 0D j  '  C    \E  0I  \D4 0D j F
AKEGSAM TXT             '  D;   0 \D4 0D j    '  D;   0 \D  0D j  '  D;   \E  0D
 FAKEGSAM TXT   0        m   j     D<       0D< 0Hd      HR \F     D|  D<  [ 4 U
NFAKEGSAM TXT            ANTICIPATED VSAM RETURN/REASON CODE   D|    D|    D|
 FAKEGSAM TXT   -        D|    D|   0I n     D@   0  &0  +    0  n     D  0  n
   FAKEGSAM TXT   q        D  0  &0  j     D m      8         r&   k"   0     }}
 &0} FAKEGSAM TXT   }          DY 0D      0DQ  q }      Y YI, 0E  YI% 0E  YI_ 0E
  YI>FAKEGSAM TXT             0E         0I   E k   ka  j     E p   j     E p-
  0E<FAKEGSAM TXT            j     E<o    0  &0        E- 0  &0   0  &  0
0 +j   FAKEGSAM TXT              Ef      Ef  &0       0  &0   0  &0   0 < 0I o
  0Ewh0FAKEGSAM TXT               0E m    0E h0  o    0EBh0   0EOm    0EK   0
 EU 0E4FAKEGSAM TXT   Y         0F  0F+ 0F        1        K    dK    m    F m
'm"j6   0FAKEGSAM TXT            F        1        K    mm  'm"j6    F      0F
    1    FAKEGSAM TXT                K    mm  'm"j6    F          1        m  'm
"j6n  /  FAKEGSAM TXT            F n     F    u 0  j 0   F  0F  0     0FH 0   01
  00  \0 FAKEGSAM TX  T   H           0  F       m      8       r&    0{ q
2 / 0      FAKEGSAM TXT               00       GD   1     \ +  G   [ 5 SEARCH LI
ST SIZE INCFAKEGSAM TXT            OMPATIBLE WITH LIST ENTRY SIZE    G  &   -
     G     FAKEGSAM TXT              h&     0Gd    h&      G     G: 4 \ 1 S  G:
 G       G  &FAKEGSAM TXT   y           0G% 0   \ 1n G &0  q     N  /0  =N   0
 N   0       FAKEGSAM TXT   \        FAKEGSAM   <
     FILLEDINFAKEGSAM TXT                                             <
               FAKEGSAM TXT   &
               FAKEGSAM TXT   h                                               %%
               FAKEGSAM TXT   {           mm   qq   {{
                 FAKEGSAM TXT   \          [ 2 GSAM MONITER NOT SUPPORTED
                 FAKEGSAM TXT                              DDSYSPRINTDDSYSIN
 "     [ 3 GSAM MFAKEGSAM TXT   &        AINTAIN NOT SUPPORTED                 }
         n     {   FAKEGSAM TXT   h        [ 6 n     {-    n     {*K   {= 0  \
0j 0   K 0 {@ \ I  FAKEGSAM TXT   {         \           0{-  {   {  0{  0 00  \}
 q }               FAKEGSAM TXT   0        )  VERIFY FILE(
                     FAKEGSAM RLD
                     FAKEGSAM END                            1569623400
9                    FAKEGSAM./ ADD NAME=FGSAM    0100-99081-03239-0938-01050-01
050-00000-DBCOLE2            F  AKEGSAM TITLE 'SUBSTITUTE GSAM ROUTINE'
                       FGSAM   FAKEGSAM CSECT ,
                       00020000         PRINT NOGEN
                       00030000         SPACE   3
                         00040000***********************************************
**************           00050000*        PSA = PREFIXED STORAGE AREA
             *           00060000*        PSA = DSECT AND BA  SE
               *           00070000*********************************************
****************           00080000         SPACE 1
                           00090000         IHAPSA ,                       +
                             00100000         SPACE 3
                               00110000*****************************************
********************           00120000*        TCB = TASK CONTROL BLOCK
                   *           00130000*        TCBFIX = PREFIX AND BASIC SECTIO
NS DSECT             *           00140000*        TCBFIX = PREFIX SECTION BASE
                     *           00150000*        TCB = BASIC SECTION BASE
                     *           00160000*        TCBXTNT2 = COMMON EXTENSION DS
ECT AND BASE         *             00170000*************************************
************************           00180000         SPACE 1
                                   00190000         IKJTCB LIST=YES
                                   002  00000         SPACE 3
                                     00210000***********************************
**************************           00220000*        TIOT = TASK INPUT/OUTPUT T
ABLE                     *           00230000*          DSECT CARD NOT GENERATED
                           *           00240000*        TIOCNJOB = BASIC SECTION
 BASE                      *           00250000*        TIOENTRY = DD ENTRY BASE
                           *           00260000*        TIOESTTB = D  EVICE ENTR
Y BASE                       *           00270000*******************************
******************************           00280000         SPACE 1
                                         00290000TIOT     DSECT ,
                                           00300000         IEFTIOT1 ,
                                           00310000         SPACE 3
                                           00320000*****************************
******************  **************           00330000*        ACB = ACCESS METHO
D CONTROL BLOCK (VSAM)           *           00340000*        IFGACB = DSECT AND
 BASE                            *           00350000***************************
*********************************  *           00360000         SPACE 1
                                               00370000         IFGACB ,
                                               00380000         SPACE 3
                                               0  0390000***********************
**************************************           00400000*        RPL = REQUEST
PARAMETER LIST (VSAM)                *           00410000*        IFGRPL = DSECT
 AND BASE                            *           00420000******  ***************
****************************************           00430000         SPACE 1
                                                   00440000         IFGRPL ,
                                                   00450000         SPACE 3
                                                     00460000*******************
******************************************           00470000*        STANDARD R
EGISTER NAMES                            *           00480000*******************
*************+ *****************************           00490000         SPACE 1
                                                         00500000         #REGS
R,                  STANDARD REGISTER NAMES             *00510000
(BASE1REG,R12),     PROGRAM BASE REGISTER               *00520000
(GSBREG,R10),       GSAM R  EQUEST BLOCK POINTER          *00530000
  (FGGREG,R9),        GLOBAL DATA AREA POINTER            *00540000
  (FGLREG,R8)         LOCAL DATA AREA POINTER              00550000         SPAC
E 3                                                          00560000         PR
INT ON,GEN,NODATA                                            00570000FAKEGSAM CS
ECT ,                                                        00580000         TI
TLE 'OCMA MAP -- VSAM OPEN/CLOSE/TCLOSE MESSAGE AREA HEA  DER' 00590000OCMA
DSECT ,                                                        00600000OCMAFLAG
DS    B                   FLAG BYTE                            00610000OCMAFMAH
EQU   B'10000000'         A COMPLETE MESSAGE HAEDER EXISTS     00620000  OCMAMAH
L DS    HL2                 L'MESSAGE AREA HEADER                00630000OCMARQT
  DS    X                   REQUEST TYPE                         00640000OCMARO
  EQU   1                   OPEN REQUEST                         00650000OCMARC
  EQU     2                   CLOSE REQUEST                        00660000OCMAR
TC  EQU   3                   TCLOSE REQUEST                       00670000OCMAD
DN  DS    CL8                 DDNAME BEING OPENED/CLOSED           00680000OCMAE
CNT DS    H                     ERROR COUNT                          00690000OCM
AMCNT DS    H                   ERROR MESSAGE COUNT                  00700000OCM
AMADR DS    A                   --> 1ST ERROR MESSAGE                00710000OCM
AHZ   DS    0X                  EO-O  CMA HEADER                       00720000O
CMAHLEN EQU   OCMAHZ-OCMA         L'OCMA HEADER                        00730000
        TITLE 'GSB MAP -- GSAM REQUEST BLOCK'                          00740000
        GSB   ,                                                          0075000
0         SPACE 3                                                        0076000
0*************************************************************           0077000
0*        MODIFIED GSB FIELDS FOR FAKEGSAM SUPPORT           *             00780
000*************************************************************           00790
000         SPACE 1                                                        00800
000FGSBOFLG EQU   GSBFLG1             OPEN FLAGS                           00810
0  00FGSBOPEN EQU   B'01000000'         THE "GSAM" FILE HAS BEEN OPENED      008
20000FGSBFGG  EQU   GSBINDX,4           AFTER OPEN: --> FFG                  008
30000         TITLE 'FGG MAP -- GLOBAL DATA AREA'                            008
40000FGG      DS  ECT ,                                                        0
0850000         SPACE 3                                                        0
0860000*************************************************************           0
0870000*        THE FOLLOWING A+ REA IS INITIALIZED AS A UNIT, SO IT *
 00880000*        MUST CONFOR  M TO THE SHAPE OF THE STATIC DATA AREA  *
   00890000*        NAMED "FGREL".                                     *
   00900000*************************************************************
   00910000         SPACE 1
     00920000FGGREL   DS    0F                  START OF AREA
     00930000FGGID    DC    CL8'FAKEGSAM'       AREA ID
     00940000         SPACE 1
       00950000FGGACB   ACB   AM=VSAM,
      *00960000               BUFND=4,
      *00970000               BUFNI=10,
        *00980000               DDNAME=FILLEDIN,    FROM GSBFILE
        *00990000               MACRF=(DIR,SEQ,IN,OUT),
        *01000000               MAREA=*-*,
        *  01010000               MLEN=L'FGLOCMA,
          *01020000               PASSWD=*-*          POINTS TO GSBPASSW
           01030000         SPACE 1
           01040000FGGRP  L   RPL   ACB=FGGACB,
            *01050000               AM=VSAM,
            *01060000               AREA=*-*,           FROM GSBBUFA
            *01070000               ARE  ALEN=*-*,        FROM GSBBUFL
              *01080000               ARG=*-*,            POINTS TO GSBBUFX
              *01090000               ECB=*-*,            FROM GSBECB
              *01100000               MSGAREA=*-*,          FROM GSBMSGA
                *01110000               MSGLEN=L'GSBMSGX,
                *01120000               OPTCD=(KEY,SYN,KGE,NWAITX,MVE),
                *01130000               RECLEN=*-*          FROM GSBR  ECL
                   01140000         SPACE 1
                   01150000FGGOPEN  OPEN  FGGACB,MF=L
                   01160000         SPACE 1
                     01170000FGGRELL  EQU   *-FGGREL            LENGTH OF AREA
                     01180000         SPACE 3
                     01190000***************************************************
**********             01200000*        SHOWCB PLIST AND SINKS
           *           01210000*************************************************
************           01220000         SPACE 1
                       01230000SHO  WPLST SHOWCB ACB=*-*,
                        *01240000               AREA=SHOWAREA,      GSB FEEDBACK
 FIELDS                 *01250000               LENGTH=SHOWALEN,    TOTAL FIELDS
 LENGTH                 *01260000               F+ IELDS=(KEYLEN,     KEY KENGTH
                          *01270000                 RKP,                RELATIVE
 KEY POSITION               *01280000               LRECL,              MAX RECO
RD LENGTH                   *01290000               CINV,               CONTROL
INTERVAL LENGTH             *01300000               ENDRBA),              HIGH R
BA                            *01310000               MF=L                LIST F
ORM                            01320000         SPACE 1
                               01330000SHOWAREA DS    0F
                                 01340000FGGKEYLN DS    F                   KEYL
EN                               01350000FGGKEYOF DS    F                   RKP
                                 01360000FGGMAXRL DS    F                   LREC
L                                  01370000FGGCISIZ DS    F                   CI
NV                                 01380000SHGSBNFO EQU   FGGKEYLN,*-FGGKEYLN FI
ELDS COPIED TO THE GSB             01390000FGGHIRBA DS    F                   EN
DRBA                                 01400000SHOWALEN EQU   *-SHOWAREA
                                     01410000         SPACE 3
                                     01420000***********************************
**************************           01430  000*        MISC DATA
                           *           01440000*********************************
****************************           01450000         SPACE 1
                                       01460000FGGMKYLN D  S    H
    KEY LENGTH-1                         01470000         SPACE 1
                                         01480000FGGPVKEY DS    CL256
    PREVIOUS KEY (FOR CONTROLLING        01490000*
      SEQUENTIAL GETS)                     01500000         #TEST SIZE=(L'FGGPVK
EY,EQ,L'FGLKEY)                            01510000         SPACE 1
                                           01520000FGGFLAG  DS    B
      F  LAG BYTE                            01530000FGGFPVKY EQU   B'10000000'
        THE CONTENTS OF FGGPVKEY ARE VALID   01540000         SPACE 3
                                             01550000***************************
**********************  ************           01560000*        END OF GLOBAL DA
TA AREA                            *           01570000*************************
************************************           01580000         SPACE 1
                                                 01590000FGGEND   DS    0D
                                                 01600000FGGLEN   EQU   FGGEND-F
GG                                               01610000         TITLE 'FGL MAP
 -- LOCAL DATA AREA'                             016  20000*********************
****************************************           01630000*        STANDARD REG
ISTER SAVE AREA                        *           01640000*********************
****************************************           01650000        +  SPACE 1
                                                     01660000FGL        #DSA  ,
                                                       01670000         SPACE 3
                                                       01680000SAVEVSIO DS    4A
                  FGGET                                01690000SAVESRCH DS    16
  A                 SRCH                                 01700000         SPACE
3                                                        01710000FGLCALTP DS
AL1                 GSAM CALL TYPE                       01720000FGLCTREA EQU
0                     READ                                 01730000FGLCTWRI EQU
  1                   WRITE                                01740000FGLCTREW EQU
  2                   REWRITE                              01750000FGLCTDEL EQU
  3                   DELETE                                 01760000FGLCTREL EQ
U   4                   RELEASE                              01770000FGLCTMON EQ
U   5                   MONITER                              01780000FGLCTMAI EQ
U   6                   MAINTAIN                               01790000FGLCTFIN
EQU   7                   FINISH                               01800000
SPACE 3                                                        01810000FGLKEYAD
DS    A                   --> KEY IN RECORD BUFFER               01820000FGLKEY
  DS    CL256               SEARCH KEY BUFFER                    01830000
  SPACE 3                                                        01840000FGLOCMA
  DS    CL512               VSAM OPEN/CLOSE/TCLOSE MSG AREA      01850000
    SPACE 3                                                        01860000*****
********************************************************           01870000*
    DATA FOR CALLING IDCAMS WITH A VERIFY REQUEST.     *           01880000*****
**********  **********************************************           01890000
      SPACE 1                                                        01900000AMS
PLIST DS    4A                  PLIST                                01910000AMS
IOLST DS    7A                    I/O LIST                             01920000
        SPACE 1                                                        01930000V
ERIFY   DC    C' VERIFY FILE('                                         01940000V
ERDDN   DS    CL(L'ACBDDNM),C') '                                        0195000
0         SPACE 3                                                        0196000
0*************************************************************           0197000
0*        END OF LOCAL DATA AREA                               *           01980
000*************************************************************           01990
000         SPACE 1                                                        02000
000FGLEND   DS    0D                                                         020
10000FGLLEN   EQU   FGLEND-FGL                                               020
20000         TITLE 'ERROR CODES CONTROL ENTRY MAP'                          020
30000ERC      DSECT ,                                                        020
40000            _ ERCRETUR DS    FL1                 GSAM RETURN CODE
           02050000ERCREASO DS    FL1                 GSAM REASON CODE
           02060000         SPACE 3
           02070000*  **********************************************************
**           02080000*        NOTE, THE FOLLOWING FIELDS DO NOT APPEAR IN ALL
 *           02090000*        ENTRIES. THEY MUST NOT BE REFERENCED BY THE CODE
 *           02100000*        AT 'F  GRETURN'.
   *           02110000*********************************************************
****           02120000         SPACE 1
               02130000ERCVRETU DS    FL1                   MAPPED FROM VSAM RET
URN CODE         02140000ERCVREAL DS    FL1                  AND VSAM REASON COD
E RANGE (LOW)    02150000ERCVREAH DS    FL1                  AND VSAM REASON COD
E RANGE (HIGH)   02160000ERCELEN  EQU   *-ERC               ENTRY   LENGTH
                   02170000         TITLE 'ENTRY PROCESSING'
                   02180000*****************************************************
********           02190000*        STANDARD REENTRANT ENTRY LINKAGE
         *           02200000***************************************************
**********           02210000         SPACE 1
                     02220000FAKEGSAM #ENTER BASES=(BASE1REG),SAVTYPE=(RENT,FGLL
EN)                    02230000         SPACE 1
                       02240000         LR    FGLREG,R13          LOAD FGL POINT
ER                     02250000         USING FGL,FGLREG          DECLARE ITS BA
SE                     0226000  0         STC   R0,FGLCALTP         SAVE THE CAL
L TYPE                   02270000         SPACE 1
                         02280000         LR    GSBREG,R1           COPY GSB POI
NTER                     02290000         USI  NG GSB,GSBREG          DECLARE IT
S BASE                     02300000         SR    FGGREG,FGGREG       SIGNAL NO
FGG POINTER (YET)          02310000         SPACE 3
                           02320000*************************  ******************
******************           02330000*        IF THIS IS THE FIRST CALL, THEN OB
TAIN A GLOBAL    *           02340000*        DATA AREA, INITIALIZE IT, AND OPEN
 AN ACB FOR THE  *           02350000*        VSAM FILE TO BE PROCESSED.
                   *           02360000*****************************************
********************           02370000         SPACE 1
                               02380000FGRETRY  TM    FGSBOFLG,FGSBOPEN   IS THE
 ACB ALREA  DY OPEN?             02390000         BNZ   FGOPENED            YES,
 NOT THE FIRST CALL              02400000         SPACE 1
                                 02410000         LA    R0,FGGLEN           NO,
GET L'FGG                +         02420000         GETMAIN R,LV=(0)          AL
LOCATE AN FGG                        02430000         LR    FGGREG,R1
COPY ITS POINTER                     02440000         USING FGG,FGGREG
DECLARE ITS BASE                     02450000         SPACE 1
                                     0  2460000         LR    R0,FGGREG
  CLEAR -                              02470000         LA    R1,FGGLEN
   THE -                               02480000         MVCL  R0,R14
    FGG (R15=0 FROM GETMAIN)           02490000           ST    FGGREG,FGSBFGG
    SAVE THE FGG POINTER IN THE GSB      02500000         SPACE 3
                                         02510000*******************************
******************************           02520000*        INITIALIZE   AN ACB FO
R THE FILE TO BE PROCESSED.    *           02530000*****************************
********************************           02540000         SPACE 1
                                           02550000         MVC   FGGREL(FGGRELL
),F  GREL INITIALIZE ACB, ETC.               02560000         #TEST SIZE=(FGGREL
L,EQ,FGRELL)                                 02570000         LA    R15,FGGACB
        --> ACB                              02580000         USING IFGACB,R15
        DCL ACB BA  SE                         02590000         ST    R15,RPLDAC
B-IFGRPL+FGGRPL LINK TO THE RPL                02600000         MVC   ACBDDNM,GS
BFILE     GET THE DDNAME                       02610000         TM    GSBPASSW,2
55-C' '   IS A PASSWORD PROVIDED?                02620000         BZ    FGOPNPWD
            NO, PROCEED                          02630000         LA    R0,GSBPA
SSW         YES, --> IT                          02640000         ST    R0,ACBPA
SSW         STORE INTO THE ACB                     02650000FGOPNPWD DS    0H
                                                   02660000         SPACE 3
                                                   02670000*********************
****************************************           02680000*          IF THIS IS
 ACTUALLY A FINISH REQUEST, THEN DON'T   *           02690000*        BOTHER TO
ACTUALLY OPEN THEN VSAM FILE.            *           02700000*******************
******************************************           02710000         SPACE 1
                                                       02720000         CLI   FG
LCALTP,FGLCTFIN   "FINISH" REQUEST?                    02730000         BE    FG
OPENED            YES, SKIP OPEN PROCESSING            02740000         SPACE 3
                                                         02750000***************
**********************************************           02760000*        SCAN T
HE TIOT TO SEE IF THE DESIRED FILE IS        *           02770000*        DEFINE
D.                                             *           02780000*************
************************************************           02790000         SPAC
E 1                                                        02800000         L
  R1,PSATOLD-PSA      --> MY TCB           +                 02810000         L
    R1,TCBTIO-TCB(,R1)  --> MY TIOT                            02820000
LA    R0,TIOENTRY-TIOT    OFFSET TO 1ST DD ENTRY               02830000
USING TIOENTRY,R1         DCL TIOT DD-ENTRY BASE               02840000
SPACE 1                                                          02850000
  BALR  R14,0               LOAD LOOP HEAD                       02860000
  AR    R1,R0               --> NEXT DD ENTRY                    02870000
  ICM   R0,1,TIOELNGH       GET ITS LENGTH; EO-TIOT?             028800  00
    BZ    FGERRUDF            YES, OPEN WILL FAIL; ERROR RETURN    02890000
    CLC   ACBDDNM,TIOEDDNM    NO, DESIRED DDNAME FOUND?            02900000
    BNER  R14                 NOT YET; KEEP SCANNING               02910000
    DR  OP  R1                  YES, RELEASE TIOENTRY BASE           02920000
      SPACE 3                                                        02930000***
**********************************************************           02940000*
      THE DESIRED FIL  E IS DEFINED. ATTEMPT TO OPEN IT.   *           02950000*
************************************************************           02960000
        SPACE 1                                                        02970000
        LA    R0,FGLOCMA          --  > OCMA                             0298000
0         ST    R0,ACBMSGAR         LINK TO THE ACB                      0299000
0         OPEN  ((R15)),MF=(E,FGGOPEN) OPEN THE ACB                      0300000
0         DROP  R15                 RELEASE ACB BAS  E                     03010
000         SPACE 1                                                        03020
000         TM    ACBOFLGS-IFGACB+FGGACB,ACBOPEN OK?                       03030
000         BNZ   FGOPENOK            YES, DONE HERE                         030
40000         SPACE 3                                                        030
50000*************************************************************           030
60000*        THE OPEN HAS FAILED. ASSUMING THAT THE FAILURE CAN *           030
7  0000*        BE CORRECTED, LINK TO IDCAMS WITH A "VERIFY"       *           0
3080000*        REQUEST, AND THEN REATTEMPT THE OPEN REQUEST.      *           0
3090000*************************************************************           0
3100000           SPACE 1
 03110000         LA    R14,=H'0'           --> NULL PARMS
 03120000         SR    R15,R15             NO DDNAMES SUBSTITUTE LIST
 03130000         SR    R0,R0                 NO PAGE NUMBER PARAMETER
   03140000         LA    R1,AMSIOLST         --> I/O ROUTINES CONTROL LIST
   03150000         STM   R14,R1,AMSPLIST     BUILD IDCAMS' PLIST
   03160000         OI    AMSPLIST+12,B'100000  00' SET EO-PLIST SIGNAL
     03170000         SPACE 1
     03180000         LA    R14,2               GET I/O LIST ENTRY COUNT
     03190000         LA    R15,=CL10'DDSYSPRINT' 1ST ENTRY I+ S FOR SYSPRINT
       03200000         L     R0,=A(SYSPRINT)     --> SYSPR  INT HANDLER
         03210000         SR    R1,R1               NO USER DATA
         03220000         LA    R2,=CL10'DDSYSIN'   2ND ENTRY IS FOR SYSIN
         03230000         L     R3,=A(SYSIN)        --> SYSIN HANDLER
           03240000         LA    R4,FGL              LOAD USER DATA (--> FGL)
           03250000         STM   R14,R4,AMSIOLST     BUILD I/O LIST FOR IDCAMS
           03260000         SPACE 1
             03270000         MVC   VERDDN,ACBDDNM-IFGACB+FGGACB MAKE DDNAME AVA
IL TO        03280000*                                  THE 'SYSIN' HANDLER ROUT
INE THAT     03290000*                                  IDCAMS WILL BE REQUIRED
TO USE       03300000           LA    R1,AMSPLIST         --> PLIST
               03310000         LINK  EP=IDCAMS           CALL IDCAMS
               03320000         SPACE 1
               03330000         OPEN  M  F=(E,FGGOPEN)      REATTEMPT THE OPEN R
EQUEST           03340000         TM    ACBOFLGS-IFGACB+FGGACB,ACBOPEN OPEN OK N
OW?              03350000         BNZ   FGOPENOK            YES, DONE HERE
                 03360000         SPACE 3
                   03370000*****************************************************
********           03380000*        THE OPEN FAILURE PERSISTS. SETUP AN ERROR ME
SSAGE  *           03390000*        FOR THE CALLER, AND THEN RETURN W  ITH AN ER
ROR      *           03400000*        INDICATION.
         *           03410000***************************************************
**********           03420000         SPACE 1
                       03430000         LA    R1,GSBMSGX          --> POSSIBLE E
RROR MSG RETURN BUFFER 03440000         TM    GSBBUFA,B'10000000' CONTIGUOUS BUF
FERS PRESENT?          03450000         BNZ   FGOFGMSG            YES, PROCEED
                         03460000         ICM   R1,15,GSBMSGA       NO, --> NON-
CONTIG MSG BUF; EXIST?   03470000         BZ    FGOFMSGZ            NO, FORGET R
ETURNING A MESSAGE       03480000FGOFGMSG DS    0H                  YES, PROCEED
                         03490000           SPACE 1
                           03500000         MVI   0(R1),C' '          INSURE AT
LEAST ONE BLANK IN MSG     03510000         LA    R0,1(,R1)           COPY AND A
DVANCE MSG SCANNER         03520000         LA      R1,L'GSBMSGX-1      GET L'MS
G SINK                       03530000         SPACE 1
                             03540000         L     R15,=AL1(C' ',0,0,0) ASSUME
NO SOURCE MSG                03550000         ICM   R2,15,ACBMSG  AR-IFGACB+FGGA
CB --> OCMA; EXIST?            03560000         BZ    FGOFCMSG            NO, CL
EAR GSBMSGA W/O A SOURCE MSG   03570000         USING OCMA,R2             YES, D
CL OCMA BASE                   03580000         TM    OCMAFLAG,OCMAFMAH   IS TH+
 E OCMA LONG ENOUGH TO HOLD AN   03590000*                                  O  M
CA HEADER?                         03600000         BZ    FGOFCMSG            NO
, NO SOURCE MSG                    03610000         ICM   R14,3,OCMAMCNT      YE
S, WAS AT LEAST ONE MSG BUFFERED?  03620000         BZ    FGOFCMSG            NO
, NO SOURCE   MSG                    03630000         ICM   R14,15,OCMAMADR
YES, --> 1ST MSG; EXIST?             03640000         BZ    FGOFCMSG
NO, NO SOURCE MSG                    03650000         ICM   R15,3,0(R14)
YES, GET ITS LENGTH+4                  03660000         LA    R14,4(,R14)
  --> MSG DATA                         03670000         SH    R15,=H'4'
  GET L'MSG                            03680000         CLM   R15,3,=X'7FFF'
  WAS THE LENGTH VALID?                036  90000         BNH   FGOFCMSG
    YES, PROCEED                         03700000         L     R15,=AL1(C' ',0,
0,0) NO, JUST PREPAER TO CLEAR SINK      03710000         DROP  R2
    RELEASE OCMA BASE                    03720000FGOFCMSG   MVCL  R0,R14
      COPY MSG OR JUST CLAER SINK          03730000FGOFMSGZ B     FGERROPN
      GO MAKE AN ERROR RETURN              03740000         SPACE 3
                                           03750000*********************  ******
**********************************           03760000*        THE OPEN HAS SUCCE
EDED.                            *           03770000***************************
**********************************           03780000         SPACE 1
                                               03790000FGOPENOK OI    FGSBOFLG,F
GSBOPEN   REMEMBER THE GSB IS NOW OPEN         03800000         XC    ACBMSGAR-I
FGACB+FGGACB,ACBMSGAR-IFGACB+FGGACB CLEAR PTR  03810000         SPACE 3
                                                 03820000***********************
**************************************           03830000*        EXTRACT SOME I
NFORMATION ABOUT THE VSAM FILE.      *           03840000***********************
*************************************  *           03850000         SPACE 1
                                                   03860000         SHOWCB ACB=(
S,FGGACB),                                        *03870000               AREA=(
S,SHOWAREA),  GSB FEEDBACK FIELDS                 *0  3880000               LENG
TH=SHOWALEN,    LENGTH THEREOF                      *03890000               FIEL
DS=(KEYLEN,     KEY KENGTH                          *03900000               RKP,
                RELATIVE KEY POSITION               *03910000                 LR
ECL,              MAX RECORD LENGTH                   *03920000               CI
NV,               CONTROL INTERVAL LENGTH             *03930000               EN
DRBA),            HIGH RBA                            *03940000               MF
=(  G,SHOWPLST)                                          03950000         SPACE
1                                                        03960000         L
R0,FGGKEYLN         GET KEY LENGTH                       03970000         CL
R0,=A(L'FGLKEY)  +    WITHIN LIMITS?                       03980000         #DIE
  H                     NO, DESIGN ERROR                     03990000         BC
TR  R0,0                YES, ADJUST FOR 'EX'                 04000000         ST
H   R0,FGGMKYLN         STORE                                04010000         SP
ACE 3                                                          04020000*********
****************************************************           04030000*
USE THE EXTRACTED INFORMATION AND OTHER            *           04040000*
INFORMATION TO FILL IN THE GSB FEEDBACK FIELD  S     *           04050000*******
******************************************************           04060000
  SPACE 1                                                        04070000
  MVC   GSBFILKL(L'GSBFILKL+L'GSBFILKO+L'GSBFILRL+L'GSBFILCL  ),SH*04080000
          GSBNFO              COPY SOME OF IT TO THE GSB           04090000
    #TEST SIZE=(L'GSBFILKL+L'GSBFILKO+L'GSBFILRL+L'GSBFILCL,EQ,L'S*04100000
          HGSBNFO)                                                 04110000
      SPACE 1                                                        04120000
      MVI   GSBFILAC,GSBACC2    SIGNAL "UPDATE ACCESS PERMITTED"     04130000
      MVI   GSBFILFG,GSBRDWT    SIGNAL "FULL ACCESS PERMITTED"       04140000
      SPAC  E 3                                                        04150000*
************************************************************           04160000*
        RESUME COMMON CODE. THE FILE IS OPEN. VALIDATE THE *           04170000*
        FGG.                                                 *           0418000
0*************************************************************           0419000
0         SPACE 1                                                        0420000
0FGOPENED DS    0H                                                         04210
000         DROP  FGGREG              RELEASE FGG BASE                     04220
000         L     FGGREG,FGSBFGG      --> FGG                              04230
000         USING FGG,FGGREG          DCL FGG BASE                           042
40000         CLC   FGGID,FGID          IS THE FGG POINTER VALID?            042
50000         BNE   FGERRFGG            NO, ERROR EXIT                       042
60000         SPACE 3                                                          0
4270000*************************************************************           0
4280000*        LOCATE AND EXTRACT A COPY OF THE CURRENT           *           0
4290000*        PROCESSING KEY.                                    *           0
43000  00*************************************************************
 04310000         SPACE 1
 04320000         L     R1,GSBBUFA          --> RECORD BUFFER (MAYBE)
 04330000         CH      R1,=H'-1'           BUFFER IN A SPECIAL PLACE?
   04340000         BNE   FGBUFA              NO, PROCEED
   04350000         LA    R1,GSBBUFX          YES, --> IT
   04360000FGBUFA   A     R1,FGGKEY+ OF         --> RECORD'S KEY AREA
     04370000         ST    R1,FG  LKEYAD         SAVE FOR PROCESSING
       04380000         SPACE 1
       04390000         LH    R15,FGGMKYLN        GET KEY LENGTH-1
       04400000         MVC   FGLKEY(*-*),0(R1)     (EXECUTED)
         04410000         EX    R15,*-6             COPY KEY TO LOCAL BUFFER
         04420000         #TEST SIZE=(L'FGLKEY,LE,256)
         04430000         SPACE 3
           04440000*************************************************************
           04450000*        BRANCH ACCORDING TO THE GSAM CALL TYPE.            *
           04460000***********************************************************
**           04470000         SPACE 1
             04480000         SR    R1,R1               CLEAR FOR INSERT
             04490000         IC    R1,FGLCALTP         GET THE CALL TYPE CODE
               04500000         SLL   R1,2                CNVRT TO FWORD OFFSET
               04510000         B     *+4(R1)             ENTER BRANCH VECTOR
               04520000         SPACE 1
               04530000           B     FGREAD              0 READ
                 04540000         B     FGWRITE             1 WRITE
                 04550000         B     FGREWRIT            2 REWRITE
                 04560000         B     FGD  ELETE            3 DELETE
                   04570000         B     FGRELEAS            4 RELEASE
                   04580000         #DIE  C,15,'GSAM MONITER NOT SUPPORTED'
                   04590000         #DIE  C,15,'GSAM MAINT  AIN NOT SUPPORTED'
                     04600000         B     FGFINISH            7 FINISH
                     04610000         TITLE 'FGREAD -- GSAM READ REQUESTS'
                     04620000********************************************  *****
************           04630000*        IF THIS IS A SEQUENTIAL GET, THEN INSURE
 THAT      *           04640000*        VSAM'S NOTION OF THE CURRENT POSITION MA
TCHES THE  *           04650000*        USER'S NOTION. IF NOT, THEN USE THE USER
'S NOTIO  N. *           04660000***********************************************
**************           04670000         SPACE 1
                         04680000FGREAD   TM    GSBFLGS,GSBDIR      DIRECT REQUE
ST?                        04690000         BNZ   FGRSEQOK            YES, IT'S
OK; SKIP THIS JUNK         04700000         TM    FGGFLAG,FGGFPVKY    NO, SEQUEN
TIAL; IS MY RECORD OF THE  04710000*                                  PREVIOUSLY
 READ KEY VALID?           04720000           BZ    FGRPOSIT            PROBABLY
 NOT, GO ESTABLISH POSITION  04730000*                                  USING TH
E USER'S KEY                 04740000         CLC   FGGPVKEY,FGLKEY     YES, IS
THE USER PLAYING MUSICAL     04750000*               +                    POSITI
ONING ON ME?                   04760000         BNE     FGRPOSIT            YES,
 GO ESTABLISH POSITION USING THE 04770000*                                  USER
'S KEY                           04780000FGRSEQOK DS    0H                  NO,
PROCEED                          04790000         SPACE 3
                                   04800000*************************************
************************           04810000*        ATTEMPT "JOE GET" AND SEE WH
AT HAPPENS             *           04820000*************************************
*  ***********************           04830000         SPACE 1
                                     04840000         SR    R15,R15
NO SPECIAL OPTCD OVERRIDES           04850000         BAL   R14,VSAMGET
ATTEMPT THE GET                        04860000         CLM   R15,2,=AL1(0)
  RETURN=0?                            04870000         BNE   FGRCKEOD
  NO, GO CHECK FOR EOD                 04880000         SPACE 1
                                         04890000         TM    GSBFLGS,GSBBACK+
GSBDIR YES, BACKWARDS/DIRECT?            04900000         BNO   FGROKCHK
    NO, GO SAVE MY NEW POSITION, IF ANY  04910000         SPACE 3
                                         04920  000*****************************
********************************           04930000*        A "NORMAL RETURN" HA
S BEEN RECEIVED FOR A          *           04940000*        BACKWARDS/DIRECT REA
D REQUEST. SUCH A GSAM REQUEST *           04950000*        I  MPLIES A "KLE" SE
ARCH. IF I GOT A "KEQ" RESULT,   *           04960000*        THEN FINE. IF NOT,
 THEN I GOT A "KGT" RESULT WHICH *           04970000*        I NOW HAVE TO CONV
ERT TO A "KLT" RESULT.           *           04980000***********************  **
************************************           04990000         SPACE 1
                                               05000000         LH    R15,FGGMKY
LN        GET KEY LENGTH-1                     05010000         L     R1,FGLKEYA
D         -  -> KEY JUST READ                    05020000         CLC   FGLKEY(*
-*),0(R1)   (EXECUTED)                           05030000         EX    R15,*-6
            "KEQ" RESULT?                        05040000         BE    FGROKCHK
            YES, GO SAVE M  Y NEW POSITION, IF ANY 05050000*        FALL THROUGH
              NO, RESULT WAS "KGT". I MUST NOW     05060000*
              CONVERT THAT TO A "KLT" RESULT.      05070000         SPACE 3
                                                     05080000*******************
******************************************           05090000*        FORCED SEQ
UENTIAL READ (FORWARDS OR BACKWARDS)     *           05100000*******************
******************************************           051  10000         SPACE 1
                                                       05120000FGRNPSEQ L     R1
5,=AL1(RPLDIR,RPLSEQ,0,0) FORCE "SEQ"                  05130000         BAL   R1
4,VSAMGET         GET NEXT/PRIOR SEQUENTIAL RECORD     05140000        +  B
FGROKCHK            GO SAVE MY NEW POSITION, IF ANY      05150000           SPAC
E 3                                                        05160000*************
************************************************           05170000*        "EOD
" HANDLING                                     *           05180000*************
****  ********************************************           05190000         SP
ACE 1                                                        05200000FGRCKEOD CL
M   R15,3,=AL1(8,4)     VSAM EOD ERROR?                      05210000         BN
E   FGRCKPOS              NO, SKIP                             05220000
TM    GSBFLGS,GSBBACK+GSBDIR YES, BACKWARDS/DIRECT REQUEST?    05230000
BNO   FGROKCHK            NO, GO SAVE MY NEW POSITION, IF ANY  05240000
SPACE 3                                                          05250000*******
******************************************************           05260000*
  VSAM EOD HAS OCCURED DURING A GSAM                 *           05270000*
  BACKWARDS/DIRECT REQUEST. THIS MEANS THAT THE U  SER *           05280000*
    WANTS THE LAST RECORD IN THE FILE.                 *           05290000*****
********************************************************           05300000
    SPACE 1                                                          05310000FGR
LASTR L     R15,=AL1(RPLSEQ,RPLDIR,0,RPLBWD+RPLLRD) FORCED OPTCDS    05320000
      BAL   R14,VSAMGET         VSAM GET                             05330000
      B     FGROKCHK            GO SAVE MY NEW POSITION, IF ANY      05340000
        SPACE 3                                                        05350000*
************************************************************           05360000*
        "POSITIONING ERROR" HANDLING                       *           05370000*
**************  **********************************************           0538000
0         SPACE 1                                                        0539000
0FGRCKPOS CLM   R15,3,=AL1(8,88)    VSAM POSITIONING ERROR?              0540000
0         BNE   FGROKCHK              NO, GO SAVE MY NEW POSITION, IF ANY  05410
000         SPACE 1                                                        05420
000FGRPOSIT L     R15,=AL1(RPLSEQ,RPLDIR,0,0) YES, FORCE DIRECT GET        05430
000         BAL   R14,VSAMGET         VSAM G  ET                             054
40000         CLM   R15,2,=AL1(0)       "AOK"?                               054
50000         BE    FGRCKPO2            PROBABLY, GO CHECK FOR FURTHER       054
60000         CLM   R15,3,=AL1(8,4)     NO, "EOD"?                             0
5470000         BNE   FGROKCHK            NO, GO SAVE MY NEW POSITION, IF ANY  0
5480000         TM    GSBFLGS,GSBBACK     YES, GSAM BACKWARDS REQUEST?         0
5490000         BNZ   FGRLASTR            YES, GO GET FILE'S LAST RECORD
 05500000         B     FGROKCHK            NO, GO SAVE MY NEW POSITION, IF ANY
 05510000         SPACE 3
 05520000*************************************************************
 05530000            _ *        A DIRECT GET (AFTER A POSITIONING FAILURE ON A
   *           05540000*        SEQUENTIAL GET) HAS SUCCEEDED. IF THIS IS A GSAM
   *           05550000*        FORWARDS REQUEST, AND IF THE VSAM-GET RESULT WAS
   *           05560000*          "KGT", THEN FINE. OTHERWISE, A VSAM SEQUENTIAL
 GET *           05570000*        (FORWARDS OR BACKWARDS) IS NOW NEEDED TO GET T
HE   *           05580000*        CORRECT RECORD.
     *           05590000**************  ***************************************
********           05600000         SPACE 1
                   05610000FGRCKPO2 LH    R15,FGGMKYLN        GET KEY LENGTH-1
                   05620000         L     R1,FGLKEYAD           --> KEY JUST REA
D                    05630000         CLC   FGLKEY(*-*),0(R1)   (EXECUTED)
                     05640000         EX    R15,*-6             "KEQ" RESULT?
                     05650000         BE    FGRNPSEQ            YES,   NOW PERFO
RAM A SEQ-GET          05660000         TM    GSBFLGS,GSBBACK     NO, RESULT WAS
 "KGT"; GSAM-BACK?     05670000         BNZ   FGRNPSEQ            YES, CONVERT T
O "KLT" RESULT         05680000         SPACE 3
                         05690000***********************************************
**************           05700000*        THE GET REQUEST HAS EITHER COMPLETED O
R FAILED. IF *           05710000*        IT HAS COMPLETED SUCCESSFULLY, THEN SA
VE THE       *             05720000*        CURRENT POSITIONING INFORMATION.
               *           05730000*********************************************
****************           05740000         SPACE 1
                           0575000  0FGROKCHK NI    FGGFLAG,255-FGGFPVKY ASSUME
FAILURE                      05760000         CLI   RPLRTNCD-IFGRPL+FGGRPL,0 RIG
HT?                          05770000         BNE   FGRCODES            YES, EXI
T TO THE CALLER              05780000         MVC     FGGPVKEY,FGLKEY     YES, S
AVE THIS NEW KEY               05790000         OI    FGGFLAG,FGGFPVKY    REMEMV
ER VALID POSITIONING INFO      05800000         B     FGRCODES            EXIT T
O THE CALLER                   05810000         TITLE 'FGWRITE -  - GSAM WRITE R
EQUESTS'                         05820000***************************************
**********************           05830000*        INSERT A NEW RECORD INTO THE F
ILE                  *           05840000**************************************
 ***********************           05850000         SPACE 1
                                   05860000FGWRITE  TM    RPLOPT2-IFGRPL+FGGRPL,
RPLUPD DO I OWN A RECORD?          05870000         BZ    FGWNOWN             NO
, PROCEED                            05880000         SR    R15,R15
YES, SIGNAL "NO OPTCDS OVERRIDES"    05890000         BAL   R14,VSAMENDR
RELEASE THE OWNED RECORD             05900000FGWNOWN  DS    0H
                             +         05910000         SPACE 1
                                         05920000         L     R15,=AL1(0,0,RPL
LRD+RPLUPD,RPLNSP)                       05930000         BAL   R14,VSAMPUT
    WRITE THE NEW RECORD                 05940000         B     FGRCODES
    EXIT TO CALLER                       0  5950000         TITLE 'FGREWRIT -- G
SAM REWRITE REQUESTS'                      05960000*****************************
********************************           05970000*        IF THE CURRENT RECOR
D IS OWNED FOR UPDATE, THEN    *           05980000*          REWRITE IT.
                                 *           05990000***************************
**********************************           06000000         SPACE 1
                                             06010000FGREWRIT TM    RPLO  PT2-IF
GRPL+FGGRPL,RPLUPD DO I OWN THE CURRENT RCD?   06020000         BZ    FGERRPOS
          NO, ERROR EXIT                       06030000         SPACE 1
                                               06040000         SR    R15,R15
            YES, SET "DO NOT MUCK -              06050000         BCTR  R15,0
             WITH THE OPTCDS" SIGNAL             06060000         BAL   R14,VSAM
PUT         REWRITE THE CURRENT RECORD           06070000         B     FGRCODES
            EXIT TO CA  LLER                       06080000         TITLE 'FGDEL
ETE -- GSAM DELETE REQUESTS'                       06090000*********************
****************************************           06100000*        IF THE CURRE
NT RECORD IS OWNED, THEN DELETE IT.      *           06110000*******************
******************************************           06120000         SPACE 1
                                                     06130000FGDELETE TM    RPLO
PT2-IFGRPL+FGGRPL,RPLUPD DO I OWN THE CRNT RCD?        06140000         BZ    FG
ERRPOS            NO, ERROR EXIT                       06150000         SPACE 1
                                                       06160000         SR    R1
5,R15             YES, SET "DON'T MUCK WITH -          06170000           BCTR
R15,0                THE OPTCDS" SIGNAL                  06180000         BAL
R14,VSAMERAS        DELETE THE CURRENT RECORD            06190000         B
FGRCODES            EXIT TO CALLER                       06200000         TITLE
'F  GRELEAS -- GSAM RELEASE REQUESTS'                      06210000*************
************************************************           06220000*        IF I
 OWN THE CURRENT RECORD, THEN RELEASE IT       *           06230000*************
*****************  *******************************           06240000         SP
ACE 1                                                        06250000FGRELEAS TM
    RPLOPT2-IFGRPL+FGGRPL,RPLUPD DO I OWN THE CURRENT RCD?   06260000         BZ
    FGERRPOS            NO, ERRO  R EXIT                       06270000
SR    R15,R15             YES, SIGNAL "NO OPTCDS OVERRIDES"    06280000
BAL   R14,VSAMENDR        RELEASE THE CURRENT RECORD           06290000
B     FGRCODES            EXIT TO CALLER       +                 06300000
  TITLE 'FGFINISH -- GSAM FINISH REQUESTS'                         06310000*****
********************************************************           06320000*
    CLOSE THE VSAM FILE AND RETURN TO THE CALLER.      *           06330000*****
********************************************************             06340000
      SPACE 1                                                        06350000FGF
INISH NI    FGSBOFLG,255-FGSBOPEN CLEAR GSB'S "OPEN" SIGNAL          06360000
      TM    ACBOFLGS-IFGACB+FGGACB,ACBOPEN IS THE FILE OPEN?         063700  00
        BZ    FGFINRET            NO, DONE HERE                        06380000
        CLOSE MF=(E,FGGOPEN)      YES, CLOSE THE VSAM FILE             06390000
        B     FGFINRET            EXIT TO CALLER                       06400000
        TI  TLE 'ERROR AND NORMAL RETURNS TO CALLER'                     0641000
0*************************************************************           0642000
0*        MAP THE VSAM RETURN/REASON CODES INTO GSAM CODES.  *           0643000
0************************  *************************************           06440
000         SPACE 1                                                        06450
000FGRCODES LA    R15,ERCMAP          --> CODES MAP                        06460
000         LA    R0,ERCELEN          GE  T L'MAP ENTRY                      064
70000         LA    R1,ERCMAPZ          --> EO-MAP                           064
80000         BAL   R14,SRCH            SEARCH THE MAP; VSAM CODES FOUND?    064
90000         LR    R2,R1               (COPY THE POSSI  BLE ERC PTR)          0
6500000         BE    FGRETURN            YES, TO RETURN TO FAKEGSAM'S CALLER  0
6510000         #DIE  'UNANTICIPATED VSAM RETURN/REASON CODE' NO, LOGIC ERROR  0
6520000         SPACE 3
 06530000*************************************************************
 06540000*        DISTINGUISH VARIOUS RETURNS                        *
 06550000*************************************************************
 0656  0000         SPACE 1
   06570000FGFINRET BAL   R2,FGRETURN         NORMAL FINISH PROCESSING RETURN
   06580000         DC    AL1(0,0)
   06590000           SPACE 1
     06600000FGERRUDF BAL   R2,FGRETURN         UNDEFINED FILE
     06610000         DC    AL1(GSAMEFIL,0)
     06620000         SPACE 1
       06630000FGERROPN BAL   R2,FGRETURN         OPEN FAILURE
       06640000         DC    AL1(GSAMEFIL,-1)
       06650000         SPACE 1
         06660000FGERRPOS BAL   R2,FGRETURN         UPDATE SEQUENCE ERROR
         06670000         DC    AL1(GSAMEPOS,8)
         06680000         SPACE 1                                +
           06690000FGERRFGG BAL   R2,FGRETURN         BAD FGG E  RROR
             06700000         DC    AL1(GSAMEPRM,16)
             06710000         SPACE 3
             06720000*********************************************************
****           06730000*        DEVELOP THE VARIOUS GSAM RETURN AND REASON CODES
.  *           06740000*********************************************************
****           06750000         SPACE 1
                 06760000         USING ERC,R2              DCL ERC BASE
                 06770000FGRETURN LH    R15,=H'-1'          ASSUME VSAM FUNCTION
 CODE N/A        06780000         CLI   ERCRETUR,GSAMEIO    VSAM PHYSICAL I/O ER
ROR?             06790000           BNE   FGFUNCTI            NO, ASSUMPTION COR
RECT               06800000         SR    R15,R15             YES, CLEAR FOR INS
ERT                06810000         IC    R15,RPLCMPON-IFGRPL+FGGRPL GET VSAM FU
NCTION CODE        06820000FGFUNCTI ST    R  15,GSBVSFN         STORE INTO GSB
                     06830000         SPACE 1
                     06840000         SR    R15,R15             CLEAR FOR INSERT
                     06850000         IC    R15,ERCREASO          GET GSAM REASO
N CODE                 06860000         CLI   ERCREASO,X'100'-1   USE VSAM REASO
N CODE?                06870000         BNE   FGREASON            NO, PROCEED
                       06880000         IC    R15,ACBERFLG-IFGACB+FGGACB   YES,
ASSUME OPEN/CLOSE ERROR  06890000         CLI   ERCRETUR,GSAMEFIL   RIGHT?
                         06900000         BE    FGREASON            YES, PROCEED
                         06910000         IC    R15,RPLERRCD-IFGRPL+FGGRPL NO, G
ET VSAM   REASON CODE      06920000FGREASON ST    R15,GSBVSAM         STORE INTO
 GSB                       06930000         SPACE 3
                           06940000*********************************************
****************             06950000*        IF THE VSAM FILE IS NOT OPEN, THEN
 RELEASE THE FGG *           06960000*        AND RESTORE THE GSB.
                 *           06970000*******************************************
******************           06980000           SPACE 1
                               06990000         TM    ACBOFLGS-IFGACB+FGGACB,ACB
OPEN IS THE FILE OPEN?         07000000         BNZ   KEEPFGG             YES, S
KIP                            07010000         NI      FGSBOFLG,255-FGSBOPEN NO
, INSURE GSB "OPEN-FILE" SIGNAL  07020000*                                  IS O
FF                               07030000         LA    R0,FGGLEN           GET
L'FGG                            07040000         FREEMAIN R,LV=(0),  A=(FGGREG)
 RELEASE THE FGG                   07050000         PUSH  USING               SA
VE STATUS                          07060000         DROP  FGGREG              RE
LEASE THE FGG BASE                 07070000         SR    FGGREG,FGGREG       CL
EAR+  THE FGG PTR                    07080000         ST    FGGREG,FGSBFGG
C  LEAR THE GSB LINK TO THE FGG        07090000KEEPFGG  DS    0H
                                       07100000         SPACE 3
                                       07110000         MVI   GSBECB,X'7F'
  INSURE THAT TH  E GSB ECB IS POSTED    07120000         SPACE 3
                                         07130000*******************************
******************************           07140000*        EXIT TO MY CALLER
                             *             07150000*****************************
********************************           07160000         SPACE 1
                                           07170000         IC    R15,ERCRETUR
      GET GSAM RETURN CODE                 071  80000         #EXIT ((R14,R12)),
RC=(R15) RETURN TO CALLER                    07190000         POP   USING
        RESTORE STATUS (FGG BASE)            07200000         DROP  R2
        RELEASE ERC BASE                     07210000           TITLE 'FGVSAMIO
-- VSAM I/O ROUTINE'                           07220000*************************
************************************           07230000*        DISTINGUISH VARI
OUS CALL TYPES                     *           07240000*********************  **
**************************************           07250000         SPACE 1
                                                 07260000VSAMGET  ICM   R14,8,=A
L1(VSIOVGET-VSIOVECT) LOAD "GET" SIGNAL          07270000         B     FGVSAMIO
              PROCEED                              07280000         SPACE 1
                                                   07290000VSAMPUT  ICM   R14,8,
=AL1(VSIOVPUT-VSIOVECT) LOAD "PUT" SIGNAL          07300000         B     FGVSAM
IO            PROCEED                                07310000         SPACE 1
                                                     07320000VSAMERAS ICM   R14,
8,=AL1(VSIOVERA-VSIOVECT) LOAD "ERASE" SIGNAL        07330000         B     FGVS
AMIO            PROCEED                                07340000         SPACE 1
                                                       07350000VSAMENDR ICM   R1
4,8,=AL1(VSIOVEND-VSIOVECT) LOAD "ENDREQ" SIGNAL       07360000         B     FG
VSAMIO            PROCEED                              0  7370000         SPACE
3                                                        07380000***************
**********************************************           07390000*        COMMON
 ENTRY POINT                                 *           07400000******  *******
************************************************           07410000         SPAC
E 1                                                        07420000FGVSAMIO STM
  R14,R1,SAVEVSIO     SAVE REGISTERS                       07430000         LA
  R1,F  GGRPL           --> RPL                              07440000         US
ING IFGRPL,R1           DCL RPL BASE                         07450000         SP
ACE 3                                                        07460000***********
*********************+ *****************************           07470000*
SET RPL OPTCD FLAGS   ASSUMING ALL RELEVENT GSB      *           07480000*
  FLAGS ARE OFF. THEN EXAMINE THE GSB FLAGS TO SEE   *           07490000*
  HOW THE RPL OPTCD FLAGS SHOULD REALLY BE SET.      *           07500000*******
**********************************  ********************           07510000
    SPACE 1                                                        07520000
    CL    R15,=F'-1'          SHOULD I MUCK WITH THE OPTCDS?       07530000
    BE    VSIOPTOK            NO, SKIP                               07540000
      SPACE 1                                                        07550000
      MVI   RPLOPT1,RPLSEQ+RPLKGE+RPLECBSW YES, LOAD OPTCD1          07560000
      MVI   RPLOPT2,RPLNSP+RPLKEY LOAD OPTCD2                          07570000
        SPACE 1                                                        07580000
        TM    GSBFLGS,GSBUPD      UPDATE?                              07590000
        BZ    FGETNUPD            NO, SKIP                             07600000
          XI    RPLOPT2,RPLNSP+RPLUPD YES, FLIP FLAGS                    0761000
0FGETNUPD DS    0H                                                       0762000
0         SPACE 1                                                        0763000
0         TM      GSBFLGS,GSBDIR      DIRECT?                              07640
000         BZ    FGETNDIR            NO, SKIP                             07650
000         XI    RPLOPT1,RPLSEQ+RPLDIR YES, FLIP FLAGS                    07660
000         B     FGETNBWD              SKIP NEXT                            076
70000FGETNDIR DS    0H                                                       076
80000         SPACE 1                                                        076
90000         TM    GSBFLGS,GSBBACK     BACK  WARDS?                           0
7700000         BZ    FGETNBWD            NO, SKIP                             0
7710000         OI    RPLOPT2,RPLBWD      YES, FLIP FLAG                       0
7720000FGETNBWD DS    0H
 07730000         SPACE 3
 07740000*************************************************************
 07750000*        PROPAGATE OTHER INFORMATION FROM THE GSB TO THE    *
   07760000*        RPL.                                               *
   07770000*************************************************************
   07780000         SPACE 1
   077900  00         L     R15,GSBBUFL         GET L'BUFFER
     07800000         ST    R15,RPLBUFL
     07810000         SPACE 1
     07820000         IC  M   R15,15,GSBBUFA      --> BUFFER; SPECIAL LOCATION?
       07830000         BNM   FGETBUFA            NO, PROCEED
       07840000         LA    R15,GSBBUFX         YES, --> IT
       07850000FGETBUFA ST    R15,RPLAR+ EA
         07860000         SPACE 1
           07870000         L     R15,GSBRECL         GET L'RECORD
           07880000         ST    R15,RPLRLEN
           07890000         SPACE 1
             07900000         LA    R0,L'GSBMSGX        ASSUME MSG AREA; GET MAN
DATORY LEN   07910000         LA    R15,GSBMSGX         ASSUME SPECIALLY LOCATED
             07920000         TM    GSBBUFA,B'10000000' SPECIALLY L  OCATED BUFF
ERS?           07930000         BNZ   FGETMSGA            YES, PROCEED
               07940000         ICM   R15,15,GSBMSGA      NO, LOAD MSG AREA PTR;
 EXIST?        07950000         BNZ   FGETMSGA            YES, PROCEED
                 07960000         SR    R0,R0               GET SET L'MSG=0 (==>
 NO MSG AREA)    07970000FGETMSGA ST    R15,RPLERMSA
                 07980000         STH   R0,RPLEMLEN
                   07990000         SPACE 1
                   08000000         LA    R15,GSBECB          --> ECB
                   08010000         ST    R15,RPLECB
                   08020000           SPACE 1
                     08030000         LA    R15,FGLKEY          --> POSSIBLE SEA
RCH KEY              08040000         ST    R15,RPLARG          STORE
                     08050000         SPACE 3
                       08060000*************************************************
************           08070000*        NOW SET RPL OPTCD BITS ACCORDING TO THE
MANDATORY  *           08080000*        REQUIREMENTS OF THIS S  PECIFIC CALL.
             *           08090000***********************************************
**************           08100000         SPACE 1
                         08110000         L     R15,SAVEVSIO+4      RESTORE R  E
QUIRED SETTINGS CONTROL    08120000         X     R15,=X'FF00FF00'    FLIP THE A
NDED BITS                  08130000         OI    RPLOPT2,*-*         (EXECUTED)
                           08140000         EX    R15,*-4             TURN ON OP
TCD2 BITS                    08150000         SPACE 1
                             08160000         SRL   R15,8               SHIFT TH
E SOURCE                     08170000         B     *+8                 SKIP EXE
CUTED STMT                     08180000         NI    RPLOPT2,*-*         (EXECU
TED)                           08190000         EX    R15,*-4             TURN O
FF OPTCD2 BITS                 08200000         SPACE 1
                               08210000           SRL   R15,8               SHIF
T THE SOURCE                     08220000         OI    RPLOPT1,*-*         (EXE
CUTED)                           08230000         EX    R15,*-4             TURN
 ON OPTCD1 BITS                  08240000         SPACE 1+
                                   08250000         SRL     R15,8
SHIFT THE SOURCE                     08260000         B     *+8
SKIP EXECUTED STMT                   08270000         NI    RPLOPT1,*-*
(EXECUTED)                           08280000         EX    R15,*-4
  TURN OFF OPTCD1 BITS                 08290000         SPACE 1
                                       08300000VSIOPTOK DS    0H
                                       08310000         SPACE 3
                                         08320000*******************************
******************************           08330000*        ISSUE THE VSAM I/O REQ
UEST                         *           08340000*******************************
********************  **********           08350000         SPACE 1
                                           08360000         DROP  R1
      RELEASE RPL BASE                     08370000         SR    R15,R15
      CLEAR FOR INSERT                       08380000         IC    R15,SAVEVSIO
        LOAD CALL TYPE                       08390000         B     VSIOVECT(R15
)       ENTRY BRANCH VECTOR                  08400000         SPACE 1
                                             08410  000VSIOVECT DS    0H
                                               08420000VSIOVGET B     VSIOGET
                                               08430000VSIOVPUT B     VSIOPUT
                                               08440000VSIOVERA B       VSIOERAS
                                                 08450000VSIOVEND B     VSIOENDR
                                                 08460000         SPACE 1
                                                 08470000VSIOGET  GET   RPL=(1)
              VSAM GET                             08480000         MVC   GSBREC
L,RPLRLEN-IFGRPL+FGGRPL FEEDBACK THE LRECL         08490000         MVC   GSBRBA
,RPLDDDD-IFGRPL+FGGRPL RETURN CRNT RBA (IF ANY)    08500000         LTR   R15,R1
5             G  ET OK?                              08510000         BZ    VSIO
AFTR            YES, PROCEED                         08520000         NI    RPLO
PT2-IFGRPL+FGGRPL,255-RPLUPD NO, CLEAR OWNERSHIP     08530000         NI    FGGF
LAG,255-FGGFPVKY SEQ-GET POSIT  ION INFO NOW BAD       08540000         B     VS
IOAFTR            RESUME COMMON CODE                   08550000         SPACE 1
                                                       08560000VSIOPUT  PUT   RP
L=(1)             VSAM PUT                               08570000         MVC
GSBRBA,RPLDDDD-IFGRPL+FGGRPL RETURN CRNT RBA (IF ANY)    08580000         NI
RPLOPT2-IFGRPL+FGGRPL,255-RPLUPD DON'T OWN RCD NOW       08590000         NI
FGGFLAG,255-FGGFPVKY SEQ-GET POSITION INFO NOW BAD       086  00000         LTR
  R15,R15             I/O OK?                              08610000         BNZ
  VSIOAFTR            NO, DONE HERE                        08620000         LA
  R1,FGGRPL           YES, INSURE RPL PTR RESTORED         08630000        +  B
    VSIOENDR            GO FLUSH BUFFER                      08640000
SPACE 1                                                        08650000VSIOERAS
ERASE RPL=(1)             VSAM ERASE                           08660000
MVC   GSBRBA,RPLDDDD-IFGRPL+FGGRPL RETURN CRNT RBA (IF ANY)    08670000
NI    RP  LOPT2-IFGRPL+FGGRPL,255-RPLUPD DON'T OWN RCD NOW       08680000
  NI    FGGFLAG,255-FGGFPVKY SEQ-GET POSITION INFO NOW BAD       08690000
  LTR   R15,R15             I/O OK?                              08700000
  BNZ   VSIOAFTR              NO, DONE HERE                        08710000
    LA    R1,FGGRPL           YES, INSURE RPL PTR RESTORED         08720000
    SPACE 1                                                        08730000VSIOE
NDR ENDREQ RPL=(1)            VSAM END  REQ                          08740000
      NI    RPLOPT2-IFGRPL+FGGRPL,255-RPLUPD DON'T OWN RCD NOW       08750000
      NI    FGGFLAG,255-FGGFPVKY SEQ-GET POSITION INFO NOW BAD       08760000VSI
OAFTR DS    0H                                                         08770000
        SPACE 3                                                        08780000*
************************************************************           08790000*
        HANDLE ERRORS THAT RESULT FROM REQUESTS THAT ARE   *             0880000
0*        INVALID DURING THE CREATION OF VSAM DATASETS. IF   *           0881000
0*        THE FILE IS TRUELY STILL EMPTY, THEN PASS THE      *           0882000
0*        ERROR CONDITION BACK TO THE CALLER. IF THE FILE IS *           0883000
0*          NOT EMPTY, THEN CLOSE IT AND THEN RE-OPEN IT AND   *           08840
000*        THEN RETRY THE REQUEST.                            *           08850
000*************************************************************           08860
000         SPACE   1                                                        088
70000         CLI   RPLRTNCD-IFGRPL+FGGRPL,8 DATA ERROR?                     088
80000         BNE   VSIONCRE            NO, FORGET IT                        088
90000         CLI   RPLERRCD-IFGR  PL+FGGRPL,116 YES, INVALID REQUEST DURING   0
8900000*                                  FILE CREATION?                       0
8910000         BNE   VSIONCRE            NO, SKIP                             0
8920000         SHOWCB MF=(E,SHOWPLST)    YES, E  XTRACT THE HIGH RBA
 08930000         SPACE 1
 08940000         ICM   R15,15,FGGHIRBA     IS THE FILE STILL EMPTY?
 08950000         BZ    VSIONCRE            YES, JUST RETURN TH  E ERROR TO CALL
ER 08960000         SPACE 1
   08970000         CLOSE MF=(E,FGGOPEN)      NO, CLOSE THE FILE
   08980000         NI    FGSBOFLG,255-FGSBOPEN RESET THE GSB
     08990000         SPACE 1
     09000000         LA    R0,FGGLEN           GET L'FGG
     09010000         FREEMAIN R,LV=(0),A=(FGGREG) FREE THE FGG
     09020000            _          SR    FGGREG,FGGREG       CLEAR FGG POINTER
                   09030000         ST    FGGREG,FGSBFGG      CLEAR FGG POINTER
                   09040000         B     FGRETRY             GO RE-OPEN AND RET
RY                 09050000V  SIONCRE DS    0H
                     09060000         SPACE 3
                     09070000***************************************************
**********           09080000*        LOAD   RETURN CODES AND RETURN TO CALLER
           *           09090000*************************************************
************           09100000         SPACE 1
                       09110000         LM    R14,R1,SAVEV  SIO     RESTORE REGI
STERS                    09120000         SR    R15,R15             CLEAR FOR IN
SERTS                    09130000         ICM   R15,2,RPLRTNCD-IFGRPL+FGGRPL GET
 VSAM RETURN CODE        09140000         IC    R15,RPLERRCD-IFGRPL+FGGRP  L GET
 REASON CODE               09150000         BR    R14                 RETURN TO
CALLER                     09160000         TITLE 'SRCH -- SORTED LIST SEARCH RO
UTINE'                     09170000SRCH     #SEARCH SVID=SAVESRCH,CMPRID=COMPARE
                             09180000         TITLE 'COMPARE -- ERROR CODES MAP
SEARCH COMPARE ROUTINE'      09190000         USING ERC,R15             DCL ERC
BASE                         09200000COMPARE  CLC   RPLRTNCD-IFGRPL+FGGRPL,ERCVR
ETU RIGHT RETURN CODE?         09210000         BNER  R14                 NO, RE
TURN TO SEARCH                 09220000         CLC   RPLERRCD-IFGRPL+FGGRPL,ERC
VREAL YES, REASON CODE WITHIN  09230000*                                  LOW LI
MIT?                           0924000  0         BNHR  R14                 NO,
OR JUST BARELY; RETURN TO SEARCH 09250000         CLC   RPLERRCD-IFGRPL+FGGRPL,E
RCVREAH YES, WITH HI LIMIT TOO?  09260000         BNLR  R14                 NO,
OR JUST BARELY; RETURN TO SEARCH 09270000         CR      R14,R14             YE
S, SET "FOUND" SIGNAL              09280000         BR    R14                 RE
TURN TO SEARCH                     09290000         DROP  R15                 RE
LEASE ERC BASE                     09300000         TITLE 'STATIC DA  TA AREA'
                                     09310000         DROP  ,
DONE WITH ALL BASES        03/99 DBC 09320000         SPACE 3
                           03/99 DBC 09330000***********************************
***  ***********************           09340000*        THE FOLLOWING DATA IS US
ED TO INITIALIZE A SECTION *           09350000*        OF THE FGG AS A UNIT, SO
 IT MUST CONFORM TO THE    *           09360000*        SHAPE OF "FGGREL" IN THE
 FGG.                        *           09370000*******************************
******************************           09380000         SPACE 1
                                         09390000FGREL    DS    0F
    START OF AREA                +         09400000FGID     DC    CL8'FAKEGSAM'
                                             09410000         SPACE 1
                                             09420000FGACB    ACB   AM=VSAM,
                                            *09430000               BUFND=4,
                                            *0  9440000               BUFNI=10,
                                              *09450000               DDNAME=FIL
LEDIN,    FROM GSBFILE                        *09460000               MACRF=(DIR
,SEQ,IN,OUT),                                 *09470000                 MAREA=*-
*,                                              *09480000               MLEN=L'F
GLOCMA,                                         *09490000               PASSWD=*
-*          POINTS TO GSBPASSW                   09500000         SPACE 1
                                                   09510000FGRPL    RPL   ACB=*-
*,                                                *09520000               AM=VSA
M,                                                *09530000               AREA=*
-*,             FROM GSBBUFA                        *09540000               AREA
LEN=*-*,        FROM GSBBUFL                        *09550000               ARG=
*-*,            POINTS TO GSBBUFX                   *09560000               ECB=
*-*,            FROM GSBEC  B                         *09570000               MS
GAREA=*-*,        FROM GSBMSGA                        *09580000               MS
GLEN=L'GSBMSGX,                                       *09590000               OP
TCD=(KEY,SYN,KGE,NWAITX,MVE),                           *09600000
RECLEN=*-*          FROM GSBRECL                         09610000         SPACE
1                                                        09620000FGOPEN   OPEN
*-*,MF=L                                                   09630000         SPAC
E 1                                                        09640000FGRELL   EQU
  *-FGREL             LENGTH OF AREA                       09650000         EJEC
T ,                                                        09660000****  *******
**************************************************           09670000*        VS
AM TO GSAM ERROR CODES MAP                       *           09680000***********
**************************************************           09690000         SP
ACE 1                                                          09700000ERCMAP
DS    0X                                                       09710000
DC    AL1(0,-1,0,0,X'FF')                                      09720000
DC    AL1(GSAMEKEY,-1  ,8,4,8)                                   09730000
  DC    AL1(GSAMEKEY,-1,8,16,16)                                 09740000
  DC    AL1(GSAMEDS,-1,8,24,32)                                  09750000
  DC    AL1(GSAMEKEY,-1,8,36,36)                                   09760000
    DC    AL1(GSAMECOR,36,8,40,40)                                 09770000
    DC    AL1(GSAMEREC,-1,8,44,44)                                 09780000
    DC    AL1(GSAMEREC,-1,8,100,100)               +                 09790000
      DC    AL1(GSAMEREC,-1,8,108,108)                                 09800000
        DC    AL1(GSAMEDS,-1,8,116,116)                                09810000
        DC    AL1(GSAMEREC,-1,8,140,140)                               09820000
        DC    AL1(GSAMEDS,-1,8,144,144)                                  0983000
0         DC    AL1(GSAMEKEY,-1,8,148,148)                               0984000
0         DC    AL1(GSAMECOR,36,8,152,152)                               0985000
0         DC    AL1(GSAMEKEY,-1,8,192,192)                               098600
 00         DC    AL1(GSAMEIO,-1,12,0,X'FF')                               09870
000         DC    AL1(GSAMEBUG,0,X'FF',X'FF',X'FF')                        09880
000ERCMAPZ  DS    0X                  END OF MAP                           09890
000         SP  ACE 3                                                        099
00000         LTORG ,                                                        099
10000         TITLE 'SYSPRINT -- DUMMY SYSPRINT I/O ROUTINE FOR IDCAMS'      099
20000SYSPRINT SR    R15,R15               SET RC=0                             0
9930000         BR    R14                 NOP BACK TO IDCAMS                   0
9940000         TITLE 'SYSIN -- I/O ROUTINE FOR IDCAMS'                        0
9950000*************************************  ************************
 09960000*                                                           *
 09970000*        SYSIN -- THIS ROUTINE HANDLES SYSIN I/O FOR        *
 09980000*        IDCAMS. ESSENTIALLY ALL IT DOES IS RETURN   A VERIFY *
   09990000*        COMMAND TO IDCAMS. THIS ROUTINE IS USED ONLY WHEN  *
   10000000*        AN OPEN ATTEMPT FOR A GIVEN "GSAM" FILE HAS        *
   10010000*        FAILED.                                            *
     10020000*                                                           *
     10030000*************************************************************
     10040000         SPACE 1
     1005  0000SYSIN    STM   R14,R12,12(R13)     SAVE ALL REGISTERS
       10060000         LR    R12,R15             LOAD A LOCAL BASE
       10070000         USING SYSIN,R12           DECLARE IT
       10080000           SPACE 1
         10090000         L     R2,4(,R1)           --> CALL FLAGS
         10100000         CLI   0(R2),X'0C'         IS THIS A PUT REQUEST?
         10110000         #DIE  E                     YES, LOGIC ERROR
           10120000         CLI   0(R2),X'08'         NO, IS THIS A GET REQUEST?
           10130000         BNE   SYSIN0              NO, OPEN/CLOSE; RETURN AOK
           10140000         SPACE 1
             10150000         L     R11,0(,R1)          YES, --> THE FGL
             10160000         USING FGL,R11             DCL THE FGL BASE
             10170000         CLI   VERIFY,0            IS THIS THE F+ IRST GET
REQUEST?       10180000         BNE   SYSIN4              NO, RETUR  N SIGNALLIN
G "NO MORE       10190000*                                  GETS, PLEASE"
                 10200000         MVC   VERIFY,=C' VERIFY FILE(' YES, BUILD VERI
FY COMMAND       10210000         #TEST SIZE=(L'VERIFY,EQ,13)
                   10220000         LA    R15,VERDDN+L'VERDDN  --> PAST PROBLEM
DDNAME             10230000         BALR  R14,0               LOAD LOOP HEAD
                   10240000         BCTR  R15,0               BACK UP
                     10250000         TM    0(R15),255-C' '     TRAILING BLANK?
                     10260000         BER   R14                 YES, CONTINUE TH
E BACKSCAN           10270000         MVC   1(2,R15),=C') '     NO, APPEND TRAIL
ER                   10280000           LA    R14,VERIFY-3        --> SO COMMAND
                       10290000         SR    R15,R14             GET L'COMMAND
                       10300000         LA    R14,VERIFY          --> TRUE SO-CO
MMAND                  10310000         L     R  1,8(,R1)           --> RETURN D
ATA AREA                 10320000         STM   R14,R15,0(R1)       RETURN COMMA
ND DESCRIPTOR TO IDCAMS  10330000         B     SYSIN0              RETURN AOK
                         10340000         SPACE 3
                           10350000SYSIN4   BAL   R0,SYSINRET         RETURN RC=
4                          10360000SYSIN0   BAL   R0,SYSINRET         RETURN RC=
0                          10370000SYSINRET LA    R15,SYSINRET        LOAD VE  C
TOR BASE                     10380000         SR    R15,R0              GET RC
                             10390000         LA    R15,0(,R15)         PURIFY
                             10400000         SPACE 1
                               10410000         L     R14,12(,R13)        RESTOR
E REGISTER                     10420000         LM    R0,R12,20(R13)      RESTOR
E REGISTERS                    10430000         DROP  R11                 RELEAS
E FGL BASE                       10440000         DROP  R12                 RELE
ASE LOCAL BASE                   10450000         BR    R14                 RETU
RN TO IDCAMS                     10460000         SPACE 3
                                 10470000           LTORG ,
                                   10480000         SPACE 3
                                   10490000         END   ,
                                   10500000./ ADD NAME=GS  AMCALL 0100-03239-032
39-0938-00223-00223-00000-DBCOLE2                     MACRO
                                     GSAMCALL&LABEL   GSAMCALL &VERB,
                                    *00020000               &MF=,
                                      *00030000               &POOL=,
                                      *00040000               &FILE=,
                                      *00050000               &OPTIONS=,
       +                                *00060000               &BUFFER=,
                                          *00070000               &BUFFLEN=,
                                          *00080000               &RECLEN=,
                                          *00090000               &MSGAREA=,
                                            *00100000               &RBA=,
                                            *00110000               &PASS=
                                             00120000.**************************
**********************************             00130000.*
                                   *           00140000.* MACRO NAME = GSAMCALL
                                   *           00150000.*
                                   *           001  60000.* DESCRIPTIVE NAME = F
AKE GSAM CALL MACRO.                 *           00170000.*
                                     *           00180000.* FUNCTION = MODIFIES
A GSB AND "BALR"S TO A GSAM          *           00190000.*              SIMULAT
ION ROUTINE WHICH TRANSLATES THE GSAM  *           00200000.*            CALL IN
TO A SIMPLE VSAM CALL.                 *           00210000.*
                                       *           00220000.* PROCESSOR = ASSEMB
  LER XF                                 *           00230000.*
                                         *           00240000.* DATA AREAS = GSB
                                         *           00250000.*
                                           *           00260000.****************
********************************************           00270000         LCLC  &S
ET                                                     00280000         LCLC  &R
ESET                                                     00290000         LCLA
&I,&GSAMSVC                                              00300000         LCLB
&ZERO                                                    00310000         LCLC
&R                                                         00320000.************
************************************************           00330000.*       CHAN
GE THE FOLLOWING LINE IF A DIFFERENT SVC       *           00340000.*       NUMB
ER IS ASSIGNED AT YOUR INSTALLATION            *           0  0350000.**********
**************************************************           00360000&GSAMSVC SE
TA  999                 IMPLIES GSAM NOT AVAILABLE           00370000         AI
F   (K'&LABEL EQ 0).NOLAB                                    00380000&LABEL
DS    0H                                                       00390000.NOLAB
ANOP                                                           00400000.*
LOCATE THE GSB                                                 00410000
AIF   ('&M  F(1)' NE 'E').BADMF                                  00420000
  AIF   ('&MF(2)' EQ '').BADMF                                   00430000
  AIF   ('&MF(2)' EQ '(1)').GOTMF                                00440000
  IHBSETR &MF(2),1       +                                         00450000.GOTM
F   ANOP                                                             00460000.*
      PROCESS OPTIONS LOOP                                           00470000&I
      SETA  1                                                        00480000.OP
TLOOP AIF   ('&OPTIONS(&I)' EQ '').END  OPT                            00490000
        AIF   ('&OPTIONS(&I)' NE 'RESET').NZERO                        00500000&
ZERO    SETB  (1)                                                      00510000
        AGO   .NEXTOPT                                                   0052000
0.NZERO   AIF   ('&OPTIONS(&I)' NE 'INITIAL').NA1                        0053000
0         MVC   GSBID-GSB(4,1),=CL4'GSB'                                 0054000
0         XC    4(GSBLEN-4,1),4(1)                                         00550
000&ZERO    SETB  (1)                                                      00560
000         AGO   .NEXTOPT                                                 00570
000.NA1     AIF   ('&OPTIONS(&I)' NE 'WAIT').NA2                           00580
000  &SET     SETC  '&SET+GSBWAIT'                                           005
90000         AGO   .NEXTOPT                                                 006
00000.NA2     AIF   ('&OPTIONS(&I)' NE 'NOWAIT').NB1                         006
10000&RESET   SETC    '&RESET-GSBWAIT'                                         0
0620000         AGO   .NEXTOPT                                                 0
0630000.NB1     AIF   ('&OPTIONS(&I)' NE 'UPDATE').NB2                         0
0640000&SET     SETC  '&SET+GSBUP  D'
 00650000         AGO   .NEXTOPT
 00660000.NB2     AIF   ('&OPTIONS(&I)' NE 'NOUPDATE').NC1
 00670000&RESET   SETC  '&RESET-GSBUPD'
   00680000         AGO   .NEXTOPT
   00690000.NC1     AIF   ('&OPTIONS(&I)' NE 'ASYNC').NC2
   00700000&SET     SETC  '&SET+GSBASYNC'
     00710000         AGO   .NEXTOPT
     00720000.NC2     AIF   ('&OPTIONS(&I)' NE 'SYNC').ND1
     00730000&RESET   SETC  '&RESET-GSBASYNC'
       00740000         AGO   .NEXTOPT
       00750000.ND1     AIF   ('&OPTIONS(&I)' NE 'DIR').ND2
       00760000&SET     SETC  '&SET+GSBDIR'
       007700  00         AGO   .NEXTOPT
         00780000.ND2     AIF   ('&OPTIONS(&I)' NE 'SEQ').NE1
         00790000&RESET   SETC  '&RESET-GSBDIR'
         00800000         AG  O   .NEXTOPT
           00810000.NE1     AIF   ('&OPTIONS(&I)' NE 'BACK').NE2
           00820000&SET     SETC  '&SET+GSBBACK'
           00830000         AGO   .NEXTOPT +
             00840000.NE2     AIF   ('&OP  TIONS(&I)' NE 'FWD').NF1
               00850000&RESET   SETC  '&RESET-GSBBACK'
               00860000         AGO   .NEXTOPT
               00870000.NF1     AIF   ('&OPTIONS(&I)' NE   'PTY').NF2
                 00880000&SET     SETC  '&SET+GSBPTY'
                 00890000         AGO   .NEXTOPT
                 00900000.NF2     AIF   ('&OPTIONS(&I)' NE 'NOPTY').NH1
                   00910000&RESET   SETC  '&RESET-GSBPTY'
                   00920000         AGO   .NEXTOPT
                   00930000.NH1     AIF   ('&OPTIONS(&I)' NE 'ABTERM').NH2
                     00940000&SET     SETC  '&SET+GSBABTRM'
                     00950000         AGO   .NEXTOPT
                     00960000.NH2     AIF   ('&OPTIONS(&I)' NE 'NOABTERM').NI1
                       00970000&RESET   SETC  '&RESET-GSBABTRM'
                       00980000         AGO   .NEXTOPT
                       00990000.NI1     AIF   ('&OPTIONS(&I)' NE 'DEBUG').NI2
                       01000000&SET       SETC  '&SET+GSBDEBUG'
                         01010000         AGO   .NEXTOPT
                         01020000.NI2     AIF   ('&OPTIONS(&I)' NE 'NODEBUG').NJ
1                        01030000&RESET   SETC  '&R  ESET-GSBDEBUG'
                           01040000         AGO   .NEXTOPT
                           01050000.NJ1     MNOTE 8,'GSAM002E INVALID OPTION &OP
TIONS(&I)'                 01060000.NEXTOPT ANOP
                             01070000&I       SETA  &I+1
                             01080000         AGO   .OPTLOOP
                             01090000.ENDOPT  ANOP
                               01100000.*       NOW EXPAND OUT OPTION BIT SETTIN
G INSTRUCTIONS                 01110000         AIF   (&ZERO).SET2
                               01120000         AIF   ('&SET' EQ '').SET1
                                 01130000&SET     SETC  '&SET'(2,K'&SET-1)
                                 01140000         OI    GSBFLGS-GSB(1),&SET
                                 01150000.SET1    AIF   ('&RESET' EQ '').SET3
                                   01160000         NI    GSBFLGS-GSB(1),X'FF'&R
ESET                               01170000         AGO   .SET3
                                   01180000.SET2    AIF   ('&SET' EQ '').SET3
                                   01190000&SE  T     SETC  '&SET'(2,K'&SET-1)
                                     01200000         MVI   GSBFLGS-GSB(1),&SET
                                     01210000.SET3    ANOP
                                     01220000         AIF   (+ '&POOL' EQ '').NO
POOL                                   01230000&R       SET  C  '&POOL(1)'
                                         01240000         AIF   ('&R' NE '&POOL'
).GOTPOOL                                01250000         LA    15,&POOL
                                         01260000&R       SETC  '15'
                                           01270000.GOTPOOL ANOP
                                           01280000         STH   &R,GSBPOOL-GSB
(,1)                                       01290000.NOPOOL  AIF   ('&FILE' EQ ''
).NOFILE                                     01300000         AIF   ('&FILE'(1,1
) NE '''').GETFILE                           01310000         MVC   GSBFILE-GSB(
8,1),=CL8&FILE                               01320000         AGO   .NOFILE
                                               01330000.GETFILE ANOP
                                               01340000&R       SETC  '&FILE(1)'
                                               01350000         AIF   ('&R' NE '
&FILE').GOTFILE                                  01360000         LA    15,&FILE
                                                 01370000&R       SETC  '15'
                                                 01380000.GOTFILE ANOP
                                                 01390  000         MVC   GSBFIL
E-GSB(8,1),0(&R)                                   01400000.NOFILE  AIF   ('&BUF
FER' EQ '').NOBUF                                  01410000&R       SETC  '&BUFF
ER(1)'                                             01420000         A  IF   ('&R
' NE '&BUFFER').GOTBUF                               01430000         AIF   ('&B
UFFER' NE '-1').GETBUF                               01440000         SR    15,1
5                                                    01450000         BCTR  15,0
                                                       01460000         AGO   .G
ETBUF2                                                 01470000.GETBUF  ANOP
                                                       01480000         LA    15
,&BUFFER                                                 01490000.GETBUF2 ANOP
                                                         01500000&R       SETC
'15'                                                     01510000.GOTBUF  ANOP
                                                           01520000         ST
  &R,GSBBUFA-GSB(,1)                                       01530000.NOBUF   AIF
  ('&BUFFLEN' EQ '').NOBUFL                                01540000&R       SETC
  '&BUFFLEN(1)'                                              01550000         AI
F   ('&R' NE '&BUFFLEN').GOTBUFL                             01560000         LA
    15,&BUFFLEN                                              01570000&R       SE
TC  '15'                                                     015  80000.GOTBUFL
ANOP                                                           01590000
ST    &R,GSBBUFL-GSB(,1)                                       01600000.NOBUFL
AIF   ('&RECLEN' EQ '').NORECL                                 01610000&R      +
  SETC  '&RECLEN(1)'                                             01620000
    AIF   ('&R' NE '&RECLEN').GOTRECL                              01630000
    LA    15,&RECLEN                                               01640000&R
    SETC  '15'                                                     01650000.GOTR
ECL ANOP                                                             01660000
      ST    &R,GSBRECL-GSB(,1)                                       01670000.NO
RECL  AIF   ('&MSGAREA' EQ '').NOMSG                                 01680000&R
      SETC  '&MSGAREA(1)'                                              01690000
        AIF   ('&R' NE '&MSGAREA').GOTMSG                              01700000
        LA    15,&MSGAREA                                              01710000&
R       SETC  '15'                                                       0172000
0.GOTMSG  ANOP                                                           0173000
0         ST    &R,GSBMSGA-GSB(,1)                                       0174000
0.NOMSG   AIF   ('&RBA' EQ '').NORBA                                       01750
000&R       SETC  '&RBA(1)'                                                01760
000         AIF   ('&R' NE '&RBA').GOTRBA                                  01770
000         LA    15,&RBA                                                    017
80000&R       SETC  '15'                                                     017
90000.GOTRBA  ANOP                                                           018
00000         MVC   GSBRBA-GSB(4,1),0(&R)                                    018
10000.N  ORBA   AIF   ('&PASS' EQ '').NOPASS                                   0
1820000&R       SETC  '&PASS(1)'                                               0
1830000         AIF   ('&R' NE '&PASS').GOTPASS                                0
1840000         LA      15,&PASS
 01850000&R       SETC  '15'
 01860000.GOTPASS ANOP
 01870000         ST    &R,GSBPASSW-G  SB(,1)
   01880000.NOPASS  AIF   ('&VERB' EQ 'MODIFY').EXIT
   01890000         AIF   ('&VERB' NE 'READ').NREAD
   01900000         SR    0,0                 INDICA  TE READ
     01910000         AGO   .SVC
     01920000.NREAD   AIF   ('&VERB' NE 'WRITE').NWRITE
     01930000         LA    0,1                 INDICATE WRITE
       01940000         AGO   .SVC
       01950000.NWRITE  AIF   ('&VERB' NE 'REWRITE').NREWRIT
       01960000         LA    0,2                 INDICATE REWRITE
         01970000         AGO   .SVC
         01980000.NREWRIT AIF   ('&VERB' NE 'DELETE').NDEL
         01990000         LA    0,3                 INDICATE DELETE
         02000000            _          AGO   .SVC
                       02010000.NDEL    AIF   ('&VERB' NE 'RELEASE').NRLSE
                       02020000         LA    0,4                 INIDCATE RELEA
SE                     02030000           AGO   .SVC
                         02040000.NRLSE   AIF   ('&VERB' NE 'MONITOR').NMON
                         02050000         LA    0,5                 INDICATE MON
ITOR                     02060000         AGO     .SVC
                           02070000.NMON    AIF   ('&VERB' NE 'MAINTAIN').NMAINT
                           02080000         LA    0,6                 INDICATE M
AINTAIN                    02090000         AGO   .SVC
                             02100000.NMAINT  AIF   ('&VERB' NE 'FINISH').VERBER
R                            02110000         LA    0,7
                             02120000         AGO   .SVC
                               02130000.VERBERR MNOTE 8,'GSAM001E UNRECOGNIZED V
ERB: &VERB'                    02140000.SVC     AIF   (&GSAMSVC GT 255).FAKEIT
                               02150000         SVC   &GSAMSVC            ISSUE
SVC                              02160000         MEXIT
                                 02170000.FAKEIT  ANOP
                                 02180000         L     R15,=V(FAKEGSAM)    -->
SUBSTITUTE ROUTINE                 02190000         BALR  R14,R15             GO
 PERFORM THE VSAM I/O              02200000         MEXIT
                                   02210000.BADMF   MNOTE 8,'GSAM003E IMPROPER O
R OMITTED ''MF'' PARAMETER'        0222000  0.EXIT    MEND
                                     02230000./ ADD NAME=GSB      0100-03239-032
39-0938-00154-00154-00000-DBCOLE2                     MACRO
                                     GSB              GSB     &DSECT=YES
                                       00020000.********************************
****************************           00030000.*
                           *           00040000.* MACRO NAME = GSB
                             *           00050000.*
                             *           00060000.* DESCRIPTIVE NAME = GSAM SIMU
LATION ROUTINE'S PARAMETER   *           00070000.*                    BLOCK.
                               *           00080000.*
                               *           00090000.* PROCESSOR = ASSEMBLER XF
                               *           00100000.*
                                 *           00110000.**************************
**********************************           00120000***************************
**********************************           00130000*
                                 *   +         00140000*        GSB -- GSAM SVC
PARAMETER BLOCK                      *           00150000*
                                     *           00160000***********************
**************************************           00170000         SPACE 1
                                                 0  0180000         IEZBITS ,
                                                   00190000         AIF   ('&DSE
CT' NE 'YES').NODSECT                              00200000GSB      DSECT ,
                                                   00210000           AGO   .YES
DSEC                                                 00220000.NODSECT ANOP
                                                     00230000GSB      DS    0F
                ALIGNMENT                            00240000.YESDSEC ANOP
                                                       00250000GSBID    DC    CL
4'GSB'            MUST BE FILLED IN                    00260000GSBFILE  DS    CL
8                 FILE NAME DEFINED TO GSRTASK         00270000GSBPOOL  DS    H
                    VALUES 0-7. KEY OF GSR POOL.         00280000GSBFLGW  DS
0H                  OPTION BITS FOR USER -               00290000GSBFLG1  DS
X                    IN HALFWORD SO THEY CAN -           00300000GSBFLGS  DS
X                     BE SET I  N FORTRAN AND COBOL        00310000GSBWAIT  EQU
  BIT0                INDICATION THAT USER                 00320000*
                      WANTS TO WAIT FOR A                  00330000*
                      RECORD. APPLICABLE ONLY                00340000*
                        IF UPDATE INDICATOR SET.             00350000GSBUPD   EQ
U   BIT1                USER WANTS TO UPDATE THE             00360000*
                        RECORD. GSAM WILL OBTAIN               00370000*
                          OWNERSHIP OF THE RECORD              00380000GSBASYNC
EQU   BIT2                THE USER WANTS TO                    00390000*
                          ASYNCHRONOUSLY CONTEND FOR           00400000*
                            RECORD OWNERSHIP.                    00410000*
                            GSBUPD MUST BE ON,                   00420000*
                            GSBWAIT MUST BE OFF                  00430000GSBDIR
  EQU   BI  T3                THIS IS A DIRECT REQUEST.            00440000*
                              FOR A KSDS, A KEY IS IN              00450000*
                              THE BUFFER. OTHERWISE, IT            00460000*
                                IS IN GSBRBA.                        00470000GSB
BACK  EQU   BIT4                THIS IS A 'BACKWARDS'                00480000*
                                OPERATION. THE USER WANTS            00490000*
                                TO SEQUE  NTIALLY READ RECORDS         00500000*
                                  IN DESCENDING ORDER OF KEY OR        00510000*
                                  ADDRESS. GSBDIR MUST BE OFF.         00520000G
SBPTY   EQU   BIT5                PRIORITY REQUEST. CAL+ LER             0053000
0*                                  MUST BE IN SYSTEM   KEY OR             00540
000*                                  SUPERVISOR STATE. UPDATE BIT         00550
000*                                  MUST BE ON. CALLER WILL              00560
000*                                  STEAL RECORD OWNERSHIP FROM            005
70000*                                  ANYONE WHO HOLDS IT.                 005
80000GSBABTRM EQU   BIT6                ABEND MY TASK WHEN GSAM              005
90000*                                  GOES DOWN OR THIS FILE IS            006
000  00*                                  PURGED                               0
0610000GSBDEBUG EQU   BIT7                INVOKE DBC (REQUIRES AUTH            0
0620000*                                  LEVEL 2 AND DEBUG FLAG)              0
0630000GSBINDX  DS      H                   INDEX OF OUR GSAM PLACEHOLDER
 00640000*                                  SET TO ZERO BEFORE FIRST CALL
 00650000*                                  USER MUST NOT SUBSEQUENTLY
 00660000*                                    MODIFY THIS FIELD
   00670000GSBRSV1  DS    H                   RESERVED
   00680000GSBBUFL  DS    F                   TOTAL LENGTH OF BUFFER WHOSE
   00690000*                                  AD  DRESS IS SPECIFIED IN GSBBUFA.
     00700000*                                  SPECIFIED BY USER.
     00710000*                                  ON A READ REQUEST, BUFFER IS
     00720000*                                  PADDED WITH BLA  NKS FOR A LENGT
H OF   00730000*                                  GSBBUFL.
       00740000*                                  CANNOT BE GREATER THAN INSTALL
ATION  00750000*                                  SPECIFIED MAX.
         00760000GSBBUFA  DS    A                   -> USER BUFFER FOR READS, RE
WRITES,  00770000*                                  DELETES.
         00780000*                                  IF F'-1' THEN THE MSG AREA &
 BUFFER  0079  0000*                                  FOLLOW THE GSB (FOR LANGUA
GES THAT   00800000*                                  DO NOT SUPPORT THE PTR DAT
A TYPE)    00810000GSBRECL  DS    A                   FOR READ, LENGTH OF BUFFER
 RETURNED  00820000*                                    TO USER. FOR REWRITE, WR
ITE, LENGTH  00830000*                                  OF RECORD, SUPPLIED BY U
SER.         00840000*                                  MUST BE >0, <=GSBBUFL
             00850000GSBMSGA  DS    A                     ->128 BYTE AREA FOR RE
TURNING I/O    00860000*                                  ERROR MESSAGES, OR NUL
L.             00870000GSBVSAM  DS    F                   VSAM FEEDBACK CODE THA
T CAUSED       00880000*                                    THE SVC'S NON-0 RETU
RN CODE. 0 IF    00890000*                                  NONE APPLIES.
                 00900000*                                  OR, ON SUCCESSFUL CO
MPLETION,        00910000*                                  THE VSAM FEED+ BACK
CODE FOR 0         00920000*                                  RETURN CO  DE. (SE
E VSAM MANUAL).      00930000GSBVSFN  DS    F                   VSAM FUNCTION CO
DE ON LOGICAL        00940000*                                  OR PHYSICAL ERRO
R. -1 WHEN NONE      00950000*                                  APPLIES.
                       00960000GSBECB   DS    A                   ECB WHICH WILL
 BE POSTED             00970000*                                  WHEN ASYNCHRON
OUS REQUEST FOR        00980000*                                  RECORD OWNERSH
IP COMPLETES             00990000GSBRBA   DS    F                   RBA OF RECOR
D FOR READ, REWRITE,     01000000*                                  WRITE (RETUR
NED BY SVC).             01010000*                                  ONLY TRUE WH
EN GSBPATH IS OFF        01020000*                                    RBAS ARE N
OT RETURNED BY VSAM FOR    01030000*                                  A PATH.
                           01040000GSBPASSW DS    CL8                 PASSWORD-F
OR EXAMINATION BY          01050000*                                    INSTALLA
TION EXITS                   01060000*        THE GSBFIL.. FIELDS ARE RETURNED T
O THE USER                   01070000*        WHENEVER THE GSAM FILE SPECIFIED I
S FOUND BY THE SVC.          01080000GSBFILKL DS    F                     KEY LE
NGTH OF FILE. 0 FOR ESDS.      01090000GSBFILKO DS    F                   KEY OF
FSET IN RECS. 0 FOR ESDS.      01100000*                                  0-INDE
XED.                           01110000GSBFILRL DS    F                   MAXINU
M   RECORD LENGTH FOR THE FILE.  01120000GSBFILCL DS    F                   CONT
ROL INTERVAL LENGTH OF FILE      01130000*                                  (RET
URNED W/ OTHER GSBFIL.. FIELDS)  01140000GSBFILAC DS    C                   ACCE
SS CODE OF FILE                    01150000*                                  RE
TURNED WITH OTHER GSBFIL.. INFO    01160000GSBACC1  EQU   C'1'                RE
AD-ONLY ACCESS.                    01170000GSBACC2  EQU   C'2'                UP
DATE ACCESS.                         01180000GSBACC3  EQU   C'3'
WRITE-ONLY,TO AN ESDS.               01190000GSBFILFG DS    C
FLAGS RETURNED,DESCRIBING FILE       01200000*
(ALONG WITH OTHER GSBFIL.. FIELDS)   01210000G  SBRD    EQU   C'R'
  READ ONLY                            01220000GSBWT    EQU   C'W'
  WRITE ONLY                           01230000GSBRDWT  EQU   C'*'
  FULL ACCESS                          01240000GSBNO    EQU     C'C'
    NO ACCESS                            01250000GSBLEN   EQU   *-GSB
                                         01260000         SPACE 3
                                         01270000***************************  **
********************************           01280000* OPTIONAL FIELDS (IF GSBBUFA
 IS F'-1')                     *           01290000*****************************
********************************           01300000         SPACE 1
           +                                 01310000GSBMSGX  DS    CL128
        C  ONTIGUOUS MESSAGE AREA              01320000GSBBUFX  DS    0C
          CONTIGUOUS BUFFER.                   01330000         SPACE 3
                                               01340000*************************
************************  ************           01350000*        RETURN CODES T
O CALLER OF GSAM SVC:                *           01360000*        (NOTE THAT MEA
NINGS OF RETURN CODES DEPEND ON      *           01370000*        THE VSAM RETUR
N CODE-GSBVSAM).                     *             01380000*********************
****************************************           01390000         SPACE 1
                                                   01400000GSAMEKEY EQU   4
              KEY OR ENDFILE CONDITION             014  10000GSAMEREC EQU   8
                RECORD CONDITION                     01420000GSAMENAV EQU   12
                SOME GSR OBJECT UNAVAILABLE          01430000GSAMEFIL EQU   16
                UNDEFINEDFILE CONDITION.             01440000GSAMEPOS   EQU   20
                  POSITIONING ERROR.                   01450000GSAMEDS  EQU   24
                  DATASET FULL OR BAD.                 01460000GSAMEAUT EQU   28
                  AUTHORIZATION ERROR.                 01470000GSAMEACC EQU   32
                    WRONG KIND OF ACCESS FOR THISFILE.   01480000GSAMECOR EQU
36                  NOT ENOUGH CORE AVAILABLE.           01490000GSAMEPRM EQU
40                  PARMS BAD OR INCONSISTANT.           01500000GSAMEIO  EQU
44                    I/O PHYSICAL ERROR                   01510000GSAMEBUG EQU
  48                  BUG IN THE SVC                       01520000GSAMEUBG EQU
  52                  BUG IN INSTALLATION EXIT             01530000         MEND
                                                             01540000./ ADD NAME
=README   0102-00230-03239-1052-00314-00276-00000-DBCOLE5            You are rea
ding DBCOLE.SCHEDRUN.EXPORT(README).
 
 
             THE SCHEDULE FACILITY
 
                                                                         CONTACT
 INFORMATION:
                                                                         Dave C
 ole                                                                       Cole
Software. LLC                                                              736 F
ox Hollow Road                                                             Afton
, Va. 22920                                                                  Nov
ember 2001
                                                                             540
-456-8536: VOICE             +                                                 5
40-456-6658: FAX
 dbcole@colesoft.com
 www.colesoft.com
 
 
 
   LEGAL INFORMATION:
 
     This program is copyrighted (c) 1999, 2003 by David B. Cole.
 
       This program is distributed freely and may be reproduced and
       redistributed without restriction other than:
         - This copyright and usage/warranty/liability restriction statement
             ("Legal Statement") may not be modified or removed.
           - A similar Legal Statement located in this program's source code and
             in the Online Help file also may not be removed.
           - The Onlin  e Help File must be installed in a suitable "HELP librar
y"             (such as SYS1.HELP) so that users may see both the Legal Statemen
t              as well as usage instruction.
 
             This program is distributed without warranty of any kind, including
             (without limitation) warranties of merchantability and of fitness f
or a         particular purpose. It is up to the use  r to make his own determin
ation          of the usefulness of this program in his own system.
 
               The user agrees not to hold me (David B. Cole) liabl  e for any d
amage            whatsoever, and the user agrees to indemnify me against third p
arties           for any action arising from the user's use, modification, and/o
r                redistribution of this program.
 
                   This program may be modified freely so long as all modificati
ons are            clearly marked both internally and externally to distinguish
them from            the distributed code and functionallity.
 
                     As a courtesy, please notify me if you discover any bugs or
 if you need         to make or   have made any code changes. (I of of course do
 not guarantee         either that I will or that I will not make any future cha
nges or                corrections.)
                                               +
 
 
                           FUNCTIONAL SUMMARY
 
                             The SCHEDULE facility makes it possible to schedule
 the automatic               execution of any operator command at any time of da
y on any date. The           execution of the command can be repeated accor  din
g to any of a large            variety of daily, weekly, monthly, and/or yearly
repeat cycles. (See            the accompanying TSO HELP file for details).
 
                                 The SCHEDULE facility supports an override capa
bility whereby                   particular sets of periodically scheduled comma
nds can be overridden on         selected dates (such as holidays) with another
set of commands to be              executed instead. Such overrides can be defin
ed even years in advance,          if desired.
 
                                   The S  CHEDULE facility permits the definitio
n of a "window" period               (defined separately for each scheduled auto
matic command) whereby:
                                        - If the system   is down at the time th
at a command is scheduled to                be executed,
 
                                          - But if the system comes up   any tim
e during the specified "window                period" following the command's sc
heduled time,
                                            - Then that command will be executed
 anyw  ay.
                                           Thus the execution of important comma
nds won't be missed just because           the system wasn't up in time.
 
                                             In JES2 "Multi-Access Spool" config
urations, the SCHEDULE facility's            VSAM data base can be shared betwee
n multiple systems, and operator               commands can be scheduled to exec
ute on either one or another or any of         the attached CPUs.
 
                                               The   SCHEDULE facility can maint
ain a log file where it records a                timestamped copy of all operato
r commands that it issues.
                                                 The SCHEDULE fac+ ility is desi
gned to execute in a JES2 environment. If          you wish to   use it in a JES
3 system, then you must make suitable                modifications to the facili
ty's source code.
 
 
                                                       OPERATIONAL OVERVIEW
 
                                                         This SCHEDULE facility
consists of two programs: an authorized TSO              command processor named
 SCHEDULE, and an authorized started task named          SCHEDRUN. The TSO comma
nd ("SCHEDULE") is used to c  reate, display, and          manipulate the schedu
le of automatic operator commands. (This schedule          is kept in a VSAM key
-sequenced dataset. It is NOT the same schedule            implemented by the JE
S2 "automatic commands facility"). The                       started-task ("SCHE
DRUN") reads the schedule of automatic commands, and         executes them at th
e appointed time.
                                                               Both the SCHEDULE
 TSO command and the SCHEDRUN started-task will                attempt to use Ya
le's GSAM IUP (available through IBM) to access the            "schedule" VSAM d
ataset. If the GSAM IUP is not available, the SCHEDULE         facility w  ill u
se normal dataset allocation and VSAM I/O to access the          VSAM file.
 
                                                                 The SCHEDULE TS
O comman  d operates as follows:
                                                                      - If a sui
tably authorized TSO user wishes to examine or modify the               automati
c commands schedule, he   types SCHEDULE. He is then placed               in sub
command mode. The user can then use the following                         subcom
mands:
                                                                            - HE
LP to learn how to use the SCHEDULE facility.
                                                                            - DI
SPLAY to examine the commands schedule.
                                                                              -
SCHED to add new entries to the commands schedule.
 
- CHANGE either to change existing command schedule entries or to
  create new entries that are modelled on existing entries.
 
- D+ ELETE to delete entries from the commands schedule.
 
    - END to leave the SCHEDULE command processor and return to READY.
 
  - Upon leaving   the SCHEDULE command processor, if the user has done
      anything to change the commands schedule, then a "S SCHEDRUN"
      operator command is automatically issued (via SVC 34) so that the
      next execution time of th  e next automatic operator command can be
        re-evaluated.
 
      - Whenever the SCHEDULE command processo  r is invoked, it searches
          for its VSAM schedule dataset as follows:
 
          - If a ddname of SCHEDULE has been pre-allocated, t  hen the command
              processor assumes that it points to the desired VSAM dataset, so
              it opens it and uses it.
 
              - If the SCHEDULE ddname cannot be found, then the command
                processor attempts to dynamically allocate (SHR) a dataset named
                CSW.SCHEDULE. If this succeeds, then it is opened and used.
 
                - If the dynamic allocation fails, then the SCHEDULE command
                  processor also fails.
 
             The SCHEDRUN started-task operates as follows:
 
                - Whenever it executes, i  t examines the automatic schedule to
                    determine if any automatic commands are scheduled to be issu
ed                  right now. If so, then it issues SVC 34 to execute them.
 
                    - It then examines the schedule to see when the next automat
ic                    command needs to be executed. It then issues a JES2 "$TA .
.."                   command that will cause SCHEDRUN to be re-execute  d eithe
r at that               time or at the next midnight, which ever is sooner. Thus
 unless                 the "$TA" commands are interfered with, SCHEDRUN will ex
ecute                   automatically whenever necessary.
 
                     Note, "extra" executions of SCHEDRUN do no damage. If SCHED
RUN is               executed at any time when no automatic commands are schedul
ed,                              _ it does nothing more than determine when it n
ext needs to be executed           and schedules a JES2 automatic command "$TA .
.." to cause itself to be          re-executed at the correct time.
 
                                     After each IPL a "S SCHEDRUN" operator comm
and needs to be issued in            order to get the schedule process going. Th
is can be done in any of the         following ways  :
 
                                          - The operator can be instructed to ma
nually issue the "S SCHEDRUN"               command during each IP  L (not recom
mended since he might forget).
                                            - A "S SCHEDRUN" command may be plac
ed in SYS1.PARMLIB(COMMND00).
                                              - A "$VS,'S SCHEDRUN'" command may
 be placed among the JES2                       initialization parameters.
 
 
 
                                             THE INSTALLATION OF THE SCHEDULE FA
CILITY
                                                1.) Obtain and install Dave Cole
's macro library (Call it                           DBCOLE.MACLIB). The macros a
re available from Cole Software's                     web site: www.colesoft.com
.
                                                  2.) Use TSO's RECEIVE command
to load the SCHEDULE source library to                disk. (  Call it DBCOLE.SC
HEDRUN.EXPORT).
                                                    3.) Add the name "SCHEDULE"
to the "AUTHCMD" section of the active                  IKJTSOxx member of S  YS
1.PARMLIB. Then use the "PARMLIB UPDATE(xx)"              TSO command to activat
e it. This is necessary for permitting the                SCHEDULE command to ru
n authorized in TSO.
                                                        4.) Create, in a PROCLIB
 accessable to started-tasks, a proc named                  SCHEDRUN. This proc
should be modelled on                                       DBCOLE.SCHEDRUN.EXPO
RT(SRUNPROC). Note, the SC  HEDLOG DD can be                  DUMMY'd out. Also
note the JCL changes to be made if the Yale                   GSAM IUP is instal
led on your system.
                                         +                      - IMPORTANT: If
this proc is named anything other than   SCHEDRUN,                  then the sou
rce for both the SCHEDRUN started-task and the                      SCHEDULE TSO
 command must be suitably modified.
                                                                5.) If a SCHEDLO
G dataset is to be used, then:
                                                                    - Allocate o
ne with the following attributes: DCB=(DSORG=PS,                        RECFM=VB
,LRECL=267,BLKSIZE=nnn)
                                                                      - Implemen
t a facility to periodically print it out and empty it.                 This mig
ht c  onsist of a started task (or other automatically                    readab
le job) that can be invoked periodically (say monthly) by                 the sc
hedule facility itself.
                                                                      6.) Create
 an empty VSAM dataset that eventually will contain the                   schedu
le of automatic commands. Use the CLIST in                                DBCOLE
.SCHEDRUN.EXPORT(SCHEDALC) as a mo  del.
                                                                            - Th
e VSAM dataset should be named CSW.SCHEDULE. If you wish to                   us
e a different name, then the source for the SCHED  ULE command
must be suitably modified.
                                                                          7.) Co
py SCHEDULE's HELP file from DBCOLE.SCHEDRUN.EXPORT(TSOHELP) to
a suitable TSO HELP library. Name the member "SCHEDULE". Assign it
an alias name of "SCHED" (because the default assembly/linkedit
JCL for the SCHEDULE command assigns an alias of SCHED to that
  command).
                                                                              8.
) Print out a listing of the HELP file and study it to learn how to
  use the SCHE  DULE command and its subcommands.
 
9.) Provide a mechanism for automatically issuing the "S SCHEDRUN"
    command during every IPL.   This can be accomplished by:
 
      - putting a "S SCHEDRUN" command in SYS1.PARMLIB(COMMNDxx), or by
 
        - putting a "$VS,'S SCHEDRUN'" command into the JES2
          initialization parameters dataset.
                                                           +
     10.) Modify the source code for both the SCHEDULE an  d SCHEDRUN programs
            to perform whatever security checks your company requires.
 
       11.) If you have changed the name of the SCHEDRUN proc, then you   will
              have to modify the source code for both the SCHEDRUN program and
              the SCHEDULE command:
                - SCHEDRUN:
                      - Search for the string "$VS" to find the "S SCHEDRUN"
                        command that this program issues. You will need to chang
e                       the name of the proc that this command starts.
                        - You may also want to change the text of numerous messa
ges.                - SCHEDULE:
                        - Search for the string "S SCHEDRUN" to find the command
                          that this p  rogram issues. You will need to change th
e name                      of the proc that this command starts.
 
               12.) If you have changed the name of   the "CSW.SCHEDULE" VSAM
                      dataset, you will have to change the source code for the S
CHEDULE               command:
                        - Search for the string "DBCOLE" to find th  e default d
sname                       used by SCHEDULE.
 
                   13.) Assemble and linkedit DBCOLE.SCHEDRUN.EXPORT(SCHEDULE) i
nt  o an                  authorized TSO commands library. Use
                          DBCOLE.SCHEDRUN.EXPORT(ASMSCHED) as model JCL. Note th
e JCL                     changes to be made if the Yale GSAM IUP is installed o
n your                      system.
 
                       14.) Assemble and linkedit DBCOLE.SCHEDRUN.EXPORT(SCHEDRU
N) into an                  auth  orized link-library. Use DBCOLE.SCHEDRUN.EXPOR
T(ASMSRUN) as                 model JCL. Note the JCL changes to be made if the
Yale GSAM IUP is              installed on your system.
 
                           15.) Logon to TSO and type SCHEDULE. This will initia
lize schedule's                 VSAM dataset (first time only) and then place yo
u in subcommand                 mode where you can define the   automatic comman
ds schedule that you              desire.
 
                             16.) Use the SCHED subcommand to begin to popula+ t
e the automatic                     commands schedule. Example:
                                  SCHED 'any Operator command' TIME(hh:mm) DATE(
mm/dd/yy) NAME(name)              DISPLAY
                                  DELETE NAME(name)
                                    END
 
                                   17.) When you are running the SCHEDULE comman
d processor, you can use                  the following commands to obtain infor
mation about the various                  subcommmands:
 
                                                HELP
                                                Lists the subcommands available.
 
                                                HELP S
                                                  Describes how to use the SCHED
 subcommand.
                                                  HELP DISPLAY
                                                    Describes how to use the DIS
PLAY subcommand.
                                                    HELP DELETE
                                                      Describes how to use the D
ELETE subcommand.
                                                      HELP CHANGE
                                                        Describes how to use the
 CHANGE subcommand.
 
 
 
                                                 ./ ADD NAME=SCHEDALC 0106-99082
-01334-0633-00015-00007-00000-DBCOLE             P  ROC 1 VOLUME
                                                   CONTROL LIST
 
                                                   /*************  *************
***********************************/                 /* The following command de
fines the VSAM dataset used to    */                 /* contain the schedule inf
ormation maintained by the        */                 /* SCHEDULE and SCHEDRUN pr
  ograms.                           */                 /************************
*************************************/
                                                       DEF CL(NAME('CSW.SCHEDULE
') VOL(&VOLUME)+  ATT(3) CODE(SCHEDULE) -                ERAS KEYS(12 0) OWNER('
ColeSoft') TO  (99365) UNQ -                               MRPW(PASSWORD) CTLPW(
PASSWORD) UPDPW(PASSWORD) RDPW(PASSWORD)) -                DATA(NAME('CSW.SCHEDU
LE.DATA') RECORDS(1000 100) -                              RECSZ(X'48' X'12D'))
-                                                            INDEX(NAME('CSW.SCH
EDULE.INDEX'))                                               ./ ADD NAME=SCHEDRU
N 0100-89335-03239-0925-02221-01904-00000-DBCOLE2            SCHEDRUN TITLE 'Des
criptive Commentary'                         03/99 DBC SCHEDRUN*****************
********************************************           00020000*
                                           *           00030000* Module Name = S
CHEDRUN.                                   *           000  40000*
                                             *           00050000* Descriptive N
ame = Automatic Operator Commands Scheduler. *           00060000*
                                             *           00070000* Copyri  ght =
 David B. Cole - 1980, 1999, 2003.             * 08/03 DBC 00080000*
                                               *           00090000* Status = Re
lease 2, Modification Level 7.                 * 01/03 DBA 00100000*
                                                 *           00110000* Function
= Automatically executes operator commands       *           00120000* according
 to a schedule maintained by the TSO schedule    *           00130000* command.
Whenever this program r  uns, it examines the      *           00140000* schedul
e to see (a) if any operator commands need to be   *           00150000* execute
d now, and (b) to see when the next operator       *           00160000* command
 is to be executed so that it can sche  dule its own *           00170000* reexe
cution at that time. It does this by means of the    *           00180000* JES2
automatic commands execution facility.               *           00190000*
                                                       *           00200000* Pro
cessor = High Level Assembler.                         * 03/99 DBC 00210000*
                                                       *           00220000* Typ
e = Procedure.                                         *           0  0230000*
                                                         *           00240000* A
ttributes = Task mode, Authorized, Reentrant.            *           00250000*
                                                         *           00260000* D
epe  ndancies = JES2.                                      * 03/99 DBC 00270000*
                                                           *           00280000*
 Author = David B. Cole.                                   *           00290000*
                                                             *           0030000
0*************************************************************           0031000
0         SPACE 3                                              03/99 DBC 0032000
0********************************+ *****************************           00330
000*                                                             *           003
40000* LEGAL INFORMATION:                                        *           003
50000*                                                           *           003
60000* This program is copyrighted (c) 1999 by   David B. Cole.    *           0
0370000*                                                           *           0
0380000* This program is distributed freely and may be reproduced  *           0
0390000* and redistributed without restriction other than:           *
 00400000*   - This copyright and usage/warranty/liability           *
 00410000*     restriction statement ("Legal Statement") may not be  *
 00420000*     modified or removed.                                  *
   00430000*   - A similar Legal Statement located in this program's   *
   00440000*     source code and in the Online Help file also may not  *
   00450000*     be removed.                                           *
   00460000  *   - The Online Help File must be installed in a suitable  *
     00470000*     "HELP library" (such as SYS1.HELP) so that users may  *
     00480000*     see both the Legal Statement as well as usage         *
     00490000*     instruc  tion.                                          *
       00500000*                                                           *
       00510000* This program is distributed without warranty of any kind, *
       00520000* including (without limit  ation) warranties of              *
         00530000* merchantability and of fitness for a particular purpose.  *
         00540000* It is up to the user to make his own determination of the *
         00550000* usefulness of this program in his own   system.             *
           00560000*                                                           *
           00570000* The user agrees not to hold me (David B. Cole) liable for *
           00580000* any damage whatsoever, and the user agrees to inde  mnify
 *           00590000* me against third parties for any action arising from the
 *           00600000* user's use, modification, and/or redistribution of this
 *           00610000* program.
 *             00620000*
   *           00630000* This program may be modified freely so long as all
   *           00640000* modifications are clearly marked both internally and
   *           006500  00* externally to distinguish them from the distributed c
ode  *           00660000* and functionallity.
     *           00670000*
     *           00680000* As a cour  tesy, please notify me if you discover any
 bugs  *           00690000* or if you need to make or have made any code change
s. (I  *           00700000* of of course do not guarantee either that I will or
 that  *           00710000* I will not make any fu+ ture changes or corrections
.)       *           00720000*
           *           00730000*************************************************
************           00740000         TITLE 'SCHEDULE COMMAND -- CHANGE HISTOR
Y'                     00750000*********************************  **************
************** 01/03 DBA 00760000* Release 2.7
             * 01/03 DBA 00770000*
             * 01/03 DBA 00780000* Last Change Date - January 2003 (David A. An
 drews)        * 08/03 DBC 00790000*                                 (A. Duda an
d Sons, Inc.)  * 08/03 DBC 00800000*                                 (dba@duda.c
om)            * 08/03 DBC 00810000*
                 * 01/03 DBA 00820000*   - SCHEDRUN develops local time from GMT
 by adding       * 01/03 DBA 00830000*     the CVTTZ offset calculated at IPL ti
me to the        * 01/03 DBA 00840000*     TOD clock.  Unfortunately CVTTZ only
has resolution   * 01/03 DBA   00850000*     of approximately one second.  When
SCHEDRUN is        * 01/03 DBA 00860000*     started precisely at midnight, it i
s possible for     * 01/03 DBA 00870000*     SCHEDRUN to believe that local time
 is still          * 01/03 DBA 00880000*       yesterday.  SCHEDRUN issues a $TA
,T=24.00 command     * 01/03 DBA 00890000*     and no further operations are sch
eduled for the       * 01/03 DBA 00900000*     entire day.  SCHEDRUN was modifie
d to use the         * 01/03 DBA 00910000*     doubleword C  VTLDTO (if availabl
e).                    * 01/03 DBA 00920000*
                       * 01/03 DBA 00930000*************************************
************************ 01/03 DBA 00940000         SPACE 3
                           01/03 DBA 00950000***********************************
************************** 11/01 DBC 00960000* Release 2.6
                         * 11/01 DBC 00970000*
                           * 11/01 DBC 00980000* Last Change Date - November 30,
 2001                      * 11/01 DBC 00990000*
                           * 11/01 DBC 01000000*   - Logic error fixed: The $TA
command issued by this       * 11/01 DBC 01010000*     program contains two inst
ances of the JES2 command    * 11/01 DBC 01020000*     character, but only one o
f those was being updated    * 11/01 DBC 01030000*     when JES2's command chara
cter was different from "$". * 11/01 DB  C 01040000*     (Thanks go to Jack Schu
del of the University of       * 11/01 DBC 01050000*     Florida for pointing th
is out to me.)                 * 11/01 DBC 01060000*
                               * 11/01 DBC 01070000*     - Changed the database'
s default DSNAME from            * 11/01 DBC 01080000*     DBCOLE.SCHEDULE to CS
W.SCHEDULE.                      * 11/01 DBC 01090000*
                                 * 11/01 DBC 01100000****************+ *********
************************************ 11/01 DBC 01110000         SPA  CE 3
                                       03/99 DBC 01120000***********************
************************************** 03/99 DBC 01130000* Release 2.5
                                     * 03/99 DBC 01140000*
                                       * 03/99 DBC 01150000* Last Change Date -
May 6, 1999.                           * 05/99 DBC 01160000*
                                       * 03/99 DBC 01170000*   - JES2's command
character has bee  n moved from          * 03/99 DBC 01180000*     $SVTCOMCH in
the SSVT to CCTCOMCH in the HCCT. Also,  * 03/99 DBC 01190000*     SSIBSUSE now
points to an SJB instead of the SSCT.    * 05/99 DBC 01200000*     Therefore, SC
HEDRUN's logic for finding the o  wning    * 03/99 DBC 01210000*     JES2's comm
and character has had to be changed        * 03/99 DBC 01220000*     accordingly
.                                          * 03/99 DBC 01230000*
                                           * 03  /99 DBC 01240000*   - Also, JES
2 mapping macros are no longer invoked       * 03/99 DBC 01250000*     directly.
 Instead, the $MODULE macro is now used.     * 03/99 DBC 01260000*
                                             * 03/99 DBC 01270  000*   - Changed
 the "security" check to permit this command   * 03/99 DBC 01280000*     for use
rs who have either OPER authority or CONSOLE   * 03/99 DBC 01290000*     authori
ty according to flags in PSCBATR1.             * 03/99 DBC 01300000*
                                                 * 03/99 DBC 01310000*   - Chang
ed the database's default DSNAME from            * 03/99 DBC 01320000*     SYSVS
AM.SCHEDULE to DBCOLE.SCHEDULE.                  * 05/99 DBC 01330000*
                                                   * 03/99 DBC 01340000*********
**************************************************** 03/99 DBC 01350000
SPACE 3                                              03/99 DBC 01360000*********
***************************  ************************* 10/90 MDL 01370000*
                                                     * 10/90 MDL 01380000* RELEA
SE 2.4                                               * 10/90 MDL 01390000*
                                                       * 10/90 MDL 01400000* LAS
T CHANGE DATE - OCTOBER 29, 1990 (Michael D. Lewis)    * 08/03 DBC 01410000*
                                                       * 10/90 MDL 01420000*
              - ADDED SUPPORT FOR MASTER OPTION.       *   10/90 MDL 01430000*
                  WHEN SET, THE SCHEDULED COMMAND WILL   * 10/90 MDL 01440000*
                  BE ISSUED WITH THE MASTER CONSOLE'S    * 10/90 MDL 01450000*
                  UCMID.  IN OTHERWORDS, THE MASTER      * 10/90 MDL 014  60000*
                    CONSOLE'S AUTHORITY.                   * 10/90 MDL 01470000*
                                                           * 10/90 MDL 01480000*
************************************************************ 10/90 MDL 01490000
       +  SPACE 3                                              03/99 DBC 0150000
0****  ********************************************************* 12/89 MDL 01510
000*                                                           * 12/89 MDL 01520
000* RELEASE 2.3                                               * 12/89 MDL 01530
000*                                                             * 12/89 MDL 015
40000* LAST CHANGE DATE - DECEMBER 1, 1989 (Michael D. Lewis)    * 08/03 DBC 015
50000*                                                           * 12/89 MDL 015
60000*                  - ADDED $SC  AT, $XECB, AND $HASPEQU FOR   * 12/89 MDL 0
1570000*                    VALID ASSEMBLY IN JES2 1.3.6.          * 12/89 MDL 0
1580000*                                                           * 12/89 MDL 0
1590000*                  - $SVCOMCH FIELD WAS REN  AMED AS          * 12/89 MDL
 01600000*                    SVTCOMCH IN JES2 1.3.6.                * 12/89 MDL
 01610000*                                                           * 12/89 MDL
 01620000*                  - ADDED DAVE COLE FIX FOR SITUATION        * 12/89 M
DL 01630000*                    WHERE LOCAL TIME AND GMT DIFFER.       * 12/89 M
DL 01640000*                                                           * 12/89 M
DL 01650000*                  - ACCOUNT FOR THE RMCT BEING ABOVE       * 12/89 M
  DL 01660000*                    THE LINE IN XA ENVIRONMENTS.           * 12/89
 MDL 01670000*                                                           * 12/89
 MDL 01680000************************************************************* 12/89
 MDL 01690000           SPACE 3                                              03/
99 DBC 01700000************************************************************* 07/
86 MDL 01710000*                                                           * 07/
86 MDL 01720000* RELEASE 2.2                                                 * 0
7/86 MDL 01730000*                                                           * 0
7/86 MDL 01740000* LAST CHANGE DATE - JULY 10, 1986 (Michael D. Lewis)       * 0
8/03 DBC 01750000*                                                             *
 07/86 MDL 01760000*                  - WEEKDAY OPERAND EXPANDED AND MODIFIED: *
 07/86 MDL 01770000*                                                           *
 07/86 MDL 01780000*                    OPERAND WEEKDAY(XXX)   HAS BEEN REPLACED
 * 07/86 MDL 01790000*                       BY WEEKDAY(+XXX) TO BE CONSISTANT
 * 07/86 MDL 01800000*                       WITH THE -XXX FORM.
 * 07/86 MDL 01810000*
   * 07/86 MDL 01820000*                    WEEKDAY(XXX) NOW IMPLIES THAT THE
   * 07/86 MDL 01830000*                       COMMAND WILL ONLY EXECUTE ON THAT
   * 07/86 MDL 01840000*                       EXACT WEEKDAY, SUBJECT TO OTHER
   * 07/86   MDL 01850000*                       TIMESTAMP MATCHING.
     * 07/86 MDL 01860000*
     * 07/86 MDL 01870000*                    WEEKDAY(^XXX) IMPLIES THAT THE COM
MAND * 07/86 MDL 01880000            _ *                       WILL EXECUTE ON A
LL WEEKDAYS EXCEPT * 07/86 MDL 01890000*                       THE ONE SPECIFIED
, SUBJECT TO OTHER * 07/86 MDL 01900000*                       TIMESTAMP MATCHIN
G.                 * 07/86 MDL 01910000*
                     * 07/86 MDL 01920000***************************************
********************** 07/86 MDL 01930000         SPACE 3
                       03/99 DBC 01940000**************  ***********************
************************ 02/84 DBC 01950000*
                       * 02/84 DBC 01960000* RELEASE 2.1
                       * 02/84 DBC 01970000*
                         * 02/84 DBC 01980000* LAST CHANGE DATE - FEBRUARY 15, 1
984                      * 02/84 DBC 01990000*
                         * 02/84 DBC 02000000*                  - "TIME OF DAY"
RECOG  NITION HAS BEEN     * 02/84 DBC 02010000*                    CHANGED. SCH
EDRUN NOW RECOGNIZES AND   * 02/84 DBC 02020000*                    USES LOCAL T
IME INSTEAD OF GMT.        * 02/84 DBC 02030000*
                             * 02/84 DBC 02040000*******************************
****************************** 02/84 DBC 02050000         SPACE 3
                               03/99 DBC 02060000*******************************
******************************             02070000*
                               *           02080000* RELEASE 2.0
                               *           02090000*
                               *           0210000  0* LAST CHANGE DATE - MAY 1,
 1983                            *           02110000*
                                 *           02120000*                  - THE DE
PENDANCY UPON THE AVAILABILITY   *           02130000*                      OF T
HE GSAM IUP (WRITTEN AT YALE) HAS  *           02140000*                    BEEN
 REMOVED.                          *           02150000*
                                   *           02160000*                  - SCHE
  DULE WILL NOW AUTOMATICALLY        *           02170000*                    IN
ITIALIZE AN EMPTY SCHEDULE FILE.     *           02180000*
                                     *           02190000*                  - TH
E APPLICATION N  AME HAS BEEN EXPANDED *           02200000*
FROM 4 CHARACTERS TO 8 CHARACTERS.     *           02210000*
                                       *           02220000*                  -
THE DELETE COMMAND HAS BEEN RE  WRITTEN  *           02230000*
  TO BE CONGRUENT WITH THE DISPLAY       *           02240000*
  COMMAND. IT NOW HAS SELECTION          *           02250000*
  CAPABILITIES THAT ARE IDENTICAL TO THE *   +         02260000*
    DISPLAY COMMAND'S. IN ADDITION, ALL      *           02270000*
      RECORDS TO BE DELETED ARE DISPLAYED    *           02280000*
      BEFORE BEING DELETED.                  *           02290000*
                                             *           0  2300000*
      - FOR THE "DISPLAY" AND "DELETE"         *           02310000*
        SUBCOMMANDS, "ALL" IS NOW AN ALIAS OF  *           02320000*
        "ANYTIME".                             *           02330000*
                                                 *           02340000*
        - FOR THE "DISPLAY" AND "DELETE"         *           02350000*
          SUBCOMMANDS, "OBSOLETE" LIMITS THE     *           02360000*
            SELECTION TO THOSE SCHEDULED COMMANDS  *           02370000*
            THAT ARE OBSOLETE - I.E., WILL NEVER   *           02380000*
            EXECUTE AGAIN. "OBSOLETE" IS MUTUALLY  *           02390000*
            EXCLUSIVE W  ITH "YESTERDAY", "TODAY",   *           02400000*
              "TOMMOROW", "DATE", "ANYTIME", AND     *           02410000*
              "ID".                                  *           02420000*
                                                       *           02430000*
              - THE "DELETE" AND "DISPLAY" SUBCOMMANDS *           02440000*
                NOW SUPPORT THE FOLLOWING ADDITIONAL   *           02450000*
                MUTUALLY EXCLUSIVE OPERANDS:             *           02460000*
                                                         *           02470000*
                  - "SHORT": THIS SUPPRESSES THE DISPLAY *           02480000*
                    OF INDIVIDUAL RECORDS. FOR           *             02490000*
                      "DISPLAY", ONLY A SUMMARY MESSAGE IS *           02500000*
                      DISPLAYED SHOWING HOW MANY RECORDS   *           02510000*
                      WERE SELECTED.                       *           02520000*
                                                             *           0253000
0*                    - "LONG": THIS DISPLAYS ALL SELECTED   *           0254000
0*                      RECORDS. FOR "DISPLAY", THIS IS THE  *           0255000
0*                        DEFAULT.                             *           02560
000*                                                           *           02570
000*                    - "NOPROMPT": THIS IS AN ALIAS OF      *           02580
000*                      "LONG".                                *           025
90000*                                                           *           026
00000*                    - "PROMPT": FOR "DELETE", THIS IS THE  *           026
10000*                      DEFAULT. IT DISPLAYS   EACH SELECTED   *           0
2620000*                      RECORD AND THEN PROMPTS THE USER FOR *           0
2630000*                      A FINAL DELETION DECISION. FOR       *           0
2640000*                      "DISPLAY", "PROMPT" IS AN ALIAS O+ F   *
 02650000*                      "LONG".                                *
   02660000*                                                           *
   02670000*                  - THE "DELETE" AND "DISPLAY" SUBCOMMANDS *
   02680000*                    NOW SUPPORT THE FOLLOWING ADDITIONAL   *
     02690000*                    MUTUALLY EXCLUSIVE OPERANDS:           *
     02700000*                                                           *
     02710000*                    - "OVERRIDE": THIS SELECTS ONLY THE    *
     027200  00*                      SCHEDULED COMMANDS THAT ARE          *
       02730000*                      OVERRIDES.                           *
       02740000*                                                           *
       02750000*                      - "NOOVERRIDE": THIS SELECTS ONLY      *
         02760000*                      THOSE SCHEDULED COMMANDS THAT ARE    *
         02770000*                      NOT OVERRIDES.                       *
         02780000*                                                             *
           02790000*                    - "BOTH: THIS SELECTS SCHEDULED        *
           02800000*                      COMMANDS WITHOUT REGUARD TO WHETHER  *
           02810000*                      OR NOT THEY AR  E OVERRIDES.
 *           02820000*
 *           02830000*                    - "EITHER": THIS IS THE DEFAULT. IT
 *           02840000*                      FUNCTIONS EXACTLY LIKE "BOT  H" UNLE
SS *           02850000*                      THE SELECTION IS ALSO LIMITED BY A
   *           02860000*                      SPECIFIC DATE (I.E., "DATE",
   *           02870000*                      "YESTERDAY", "TODAY", OR "TOMORROW
"  *             02880000*                      IS ALSO GIVEN). IN THIS CASE IF
     *           02890000*                      OVERRIDES FOR A GIVEN APPLICATIO
N    *           02900000*                      NAME EXIST FOR THIS DATE, THEN O
NLY  *           0291  0000*                      THE OVERRIDES ARE DISPLAYED FO
R THAT *           02920000*                      APPLICATION; OTHERWISE, ONLY T
HE     *           02930000*                      NON-OVERRIDES ARE DISPLAYED FO
R THAT *           02940000*                        APPLICATION.
         *           02950000*
         *           02960000*                  - IF A "SCHEDULE" DDNAME IS NOT
         *           02970000*                    A  VAILABLE, THEN AN ATTEMPT I
S MADE TO  *           02980000*                    DYNAMICALLY ALLOCATE
           *           02990000*                    "CSW.SCHEDULE".
           *           03000000*
             *           03010000*                  - A "CHANGE" COMMAND HAS BEE
N            *           03020000*                    IMPLEMENTED (WITH AN OPTIO
NAL "COPY"   *           03030000*                    OPERAND TOO).
 +             *           03040000*
                 *           03050000*                  - NEW SCHEDULED COMMANDS
 WILL NO LONGER  *           03060000*                    BE SCHEDULED IMMEDIATE
LY WHEN THE      *           03070000*                    CURRENT TIME IS WITHIN
 THEIR WINDOWS  .  *           03080000*                    THEY WILL WAIT UNTIL
 THEIR NEXT START  *           03090000*                    TIMES.
                   *           03100000*
                   *             03110000*                  - WEEKDAYS SCOPE LIM
ITATION: IF THE      *           03120000*                    SCHEDULED DATE SPE
CIFIES A SPECIFIC    *           03130000*                    MONTH OR YEAR, THE
N WEEKDAY            *           03140000*                      MODIFICATION CAN
NOT CHANGE THAT MONTH  *           03150000*                    OR YEAR. (IT CAN
 STILL CHANGE A        *           03160000*                    SPECIFIC DAY, TH
OUGH).                 *           03170000*
                         *           03180000*                  - NEGATIVE WEEKD
AYS SUPPORT IS           *           03190000*                    IMPLEMENTED. E
.G., "-WED" MEANS THE    *           03200000*                    FIRST WE  DNES
DAY AT OR PRECEEDING THE   *           03210000*                    SCHEDULED DA
TE.                        *           03220000*
                           *           03230000*                  - "WEEKDAY(ANY
)" IS NOW   AN ALIAS FOR     *           03240000*                    "WEEKDAY(-
)".                          *           03250000*
                             *           03260000*                  - DEFAULT WI
NDOW VALUE CHANGED TO BE       *           03270000*                    "UNTIL M
IDNIGHT".                      *           03280000*
                               *           03290000*                  - EXPLICIT
 SYSTEM SELECTION HAS BEEN     *             03300000*                    IMPLEM
ENTED FOR USE IN MULTI-SYSTEM    *           03310000*                    CONFIG
URATIONS:                        *           03320000*
                                 *           03330000*                      - TH
E SCHEDULE FILE RECORD HAS BEEN    *           03340000*                      EX
PANDED TO INCLUDE A "SFRSYSID"     *           03350000*                      FI
ELD WHICH IDENTIFIES ON WHICH      *           03360000*
SYSTEM(S) THE SCHEDULE COMMAND MAY   *           03370000*
BE EXECUTED.                         *           03380000*
                                     *           03390000*                    -
THE   "SYSID" OPERAND HAS BEEN ADDED   *           03400000*
  TO THE RELEVENT SUBCOMMANDS TO       *           03410000*
  CONTROL SELECTION VIA SYSTEM-ID.     *           03420000*
                   +                     *           03430000*
- THE FORMAT OF T  HE LOG RECORD HAS BEEN  *           03440000*
    CHANGED.                               *           03450000*
                                           *           03460000*
  - IF FOR ANY DETECTABLE REASON   THE       *           03470000*
      RESCHEDULING OF SCHEDRUN FAILS, THEN   *           03480000*
      THE OPERATOR IS ALERTED VIA A WTOR     *           03490000*
      FOLLOWED BY AN ABEND (CODE U69).       *             03500000*
                                               *           03510000*
      - IF A RECORD IS MADE OBSOLETE OR        *           03520000*
        DISCOVERED TO BE OBSOLETE, THEN IT IS  *           035  30000*
          FLAGGED AS SUCH AND IGNORED ON         *           03540000*
          SUBSEQUENT RUNS.                       *           03550000*
                                                 *           03560000*
          - NEGATIVE WEEKDAY MODIFIERS SUPPORT     *           03570000*
            ADDED.                                 *           03580000*
                                                   *           03590000*
          -   MULTIPLE SYSTEMS SUPPORT HAS BEEN      *           03600000*
              ADDED. INDIVIDUAL SCHEDULE FILE        *           03610000*
              RECORDS CAN BE ASSIGNED TO BE EXECUTED *           03620000*
              ON EITHER SPE  CIFIC SYSTEMS OR ANY      *           03630000*
                SYSTEM IN A MULTI-SYSTEM ENVIRONMENT.  *           03640000*
                                                       *           03650000* THI
NGS STILL TO DO:                                         *           03660000*
                                                         *           03670000*
                - INTERVAL SCHEDULING.                   *           03680000*
                                                           *           03690000*
************************************************************           03700000
        TITLE 'IRARMCT Macro Definition (from PVTMACS)'      03/99 DBC 03710000*
        %GOTO RMCTPLS1; /*                                             0  372000
0         MACRO                                                          0373000
0         IRARMCT &DSECT=YES                                             0374000
0         IEZBITS                                                     */ 0375000
0*%RMCT  PLS1:  ;                                                          03760
000* /*                                                                 */ 03770
000* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 03780
000* /* MACSTAT Z-4 75  007/Z40BPSS                                       */ 037
90000* /* *************************************************************** */ 038
00000* /*                                                                 */ 038
10000* /*   MACRO NAME - IRARMCT     +                                      */ 0
3820000* /*                                                                   */
 03830000* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER CONTROL TABLE     */
 03840000* /*                                                                 */
 03850000* /*   COPYRIGHT - NONE
*/ 03860000* /*
*/ 03870000* /*   STATUS - OS/VS2 RELEASE 4, 10/28/75, LEVEL=1
*/ 03880000* /*
  */ 03890000* /*   FUNCTION - THE RMCT SERVES AS THE ORIGIN TO LOCATE SYSTEM
  */ 03900000* /*         RESOURCES MANAGER TABLES AND ENTRY POINTS.  THE RMCT
  */ 03910000* /*         LOCATES THE SCHEDULING / ROUTING INFORMATION USED TO
    */ 03920000* /*         INVOKE THE REQUIRED PROCESSING FOR THE VARIOUS SYSTE
M   */ 03930000* /*         RESOURCES MANAGER FUNCTIONS.
    */ 03940000* /*
    */ 03950000  * /*   METHOD OF ACCESS - THE ADDRESS OF THE RMCT IS CONTAINED
IN    */ 03960000* /*         THE -CVTOPCTP- FIELD OF THE CVT.
      */ 03970000* /*
      */ 03980000* /*           BY CONVENTION WITHIN THE SYSTEM RESOURCES MANAGE
R       */ 03990000* /*         ROUTINES, REGISTER 2 IS ALWAYS RESERVED TO CONTA
IN      */ 04000000* /*         THE ADDRESS OF THE RMCT.
        */ 04010000* /*
          */ 04020000* /* ******************************************************
********* */ 04030000*        %GOTO RMCTPLS2; /*
             04040000         AGO   .RMCTAL1
            */ 04050000* /* ****************************************************
*********** */ 04060000* /*
            */ 04070000* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =
              */ 04080000* /*
              */ 04090000* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.
              */ 04100000* /*
                */ 04110000* /*           NOTE - THE BAL FORM OF THE MACRO IS CO
DED WITH        */ 04120000* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO M
AY BE USED      */ 04130000* /*           TO ASSEMBLE THE INITIAL FIELD VALUES F
OR THE          */ 041400  00* /*           IRARMCNS MODULE, WHICH CONTAINS THE
RMCT.             */ 04150000* /*
                  */ 04160000* /*         USING ON RMCT GIVES ADDRESSABILITY TO
ALL SYMBOLS.      */ 04170000* /*
                    */ 04180000* /*     PLS - %RMCTLEVL='USERLEVL' IF THE RMCT M
APPING IS TO BE     */ 04190000* /*           CONCATENATED WITH A PREVIOUS DECLA
RATION, WITH THE    */ 04200000* /*           RMCT BEIN+ G ASSIGNED THE INDICATE
D STRUCTURE LEVEL.    */ 04210000* /*         - %RMCT  9999=',' IF THE STRUCTURE
 SHOULD NOT BE CLOSED.  */ 04220000* /*
                        */ 04230000* /*           NOTE - INASMUCH AS THE RMCT TA
BLE APPEARS AT THE      */ 04240000* /*           VERY BEGINNING OF   THE -IRARM
CNS- MODULE, ONLY A       */ 04250000* /*           STRUCTURE LEVEL OF '1' (ONE)
 SHOULD BE USED FOR       */ 04260000* /*           THE RMCT.
                          */ 04270000* /*
                            */ 04280000* /*         TO ACCESS THE RMCT AS A DECL
ARED STRUCTURE,             */ 04290000* /*         DCL RMCTPTR PTR.
                            */ 04300000* /*
                              */ 04310000* /*   CHANGE ACTIVITY = @ZM43085
                              */ 04320000* /*                     @ZA10831
                              */ 04330000* /*
                              */   04340000* /*   A000000-999999
                          Y02133*/ 04350000* /*
                                */ 04360000* /* ********************************
******************************* */ 04370000* /*
                                     04380000.RMCTAL1 ANOP
                                     04390000         SPACE 1
                                     04400000         AIF   ('&  DSECT' EQ 'NO')
.RMCTAL2                               04410000RMCT     DSECT
                                       04420000         AGO   .RMCTAL3
                                       04430000.RMCTAL2 ANOP
                                         04440000         DS    0D
                                         04450000RMCT     EQU   *
                                         04460000.RMCTAL3 ANOP
                                           04470000         SPACE 1
                                           04480000RMCTNAME DC    C'RMCT' -
      BLOCK IDENTIFICATION                 04490000RMCTCCT  DC    A(CCT) -
      CPU MANAGEMENT CONTROL   TABLE         04500000RMCTICT  DC    A(ICT) -
        I/O MANAGEMENT CONTROL TABLE         04510000RMCTMCT  DC    A(MCT) -
        STORAGE MANAGEMENT CONTROL TABLE     04520000RMCTRMPT DC    A(RMPT) -
        CTL ALGORITHM PARAMETER TABLE          04530000RMCTRMCA DC    A(RMCA) -
          CTL ALGORITHM CONTROL AREA           04540000RMCTWMST DC    A(0) -
          ADDR OF WLM SPECIFICATION TABLE      04550000RMCTRLCT DC    A(0) -
          ADDR OF LOGICAL CHANNEL MGMT TABLE   04560000RMC  TRMSA DC    A(0) -
            ADDR OF RESOURCES MANAGER SAVE AREA  04570000RMCTRMPD DC    A(0) -
            ADDR OF RESOURCES MANAGER PERF DATA  04580000RMCTRMEX DC    A(RMEX)
-           ROUTINE EXITING VECTOR TABLE         04590000RMCTRMSB DC    A+ (RMSB
) -           SUBROUTINE CALLING VECTOR TABLE      04600000RMCTEPPA DC      A(IR
AEPPA) -        PRTL ANALYSIS ENTRY TABLE            04610000RMCTEPDT DC    A(EP
DTSCN) -        USER ACTION ENTRY TABLE              04620000RMCTEPAT DC    A(EP
ATSCN) -        ALGORITHM ENTRY TABLE                04630000RMCTEPBG DC    A(EP
AT) -             ADDR OF ALG ENTRY PT TABLE  @ZA10831 04640000RMCTADJC DC    F'
0' -              ADJUSTMENT FACTOR FOR CPU RATE       04650000RMCTITT  DC    V(
IRASECHT) -       INTFC EVENT CHARACTERISTICS TABLE    04660000RMCTEPET DC    V(
IRAPRCSR) -       EVE  NT ROUTING VECTOR TABLE           04670000RMCTFLTM DC
A(IRAFLTM) -        TIME OF DAY ADJUST VECTOR TABLE      04680000RMCTEPPR DC
A(IRAEPPR) -        PROCESS RATE DEPENDENT ENTRY TABLE   04690000RMCTWAST DC
A(0) -              ADDR OF WAR SPEC  IFICATION TABLE      04700000RMCTWAMT DC
  A(0) -              ADDR OF WAR MEASUREMENT TABLE        04710000RMCTTMQE DC
  A(IRACTMQE) -       SCHEDULED RTNE QUEUE HEADER ADDR     04720000RMCTAQCT DC
  F'0' -              ACTION QUEUE MEMBER COUNT              04730000RMCTAQHD DC
    A(IRAOUCB) -        ACTION QUEUE FORWARD POINTER         04740000RMCTWTQE DC
    A(IRAWTQE) -        WAIT - QUEUE HEADER BLOCK ADDRESS    04750000RMCTOTQE DC
    A(IRAOTQE) -        OUT - QUEUE HEADER BLOCK ADDRESS     04760  000RMCTINQE
DC    A(IRAINQE) -        IN - QUEUE HEADER BLOCK ADDRESS      04770000RMCTR10
DC    F'0' -              RESERVED                    @Z40BPCH 04780000RMCTTBS
DC    F'0' -              STARTING TIME BASE FOR TIME OF DAY   04790000RMCTTOD
D  C    F'0' -              TIME OF DAY - SYST RSRC MGR INVOKE   04800000RMCTTOC
  DC    D'0' -              TIME OF CENTURY - 64BIT BINARY NMB   04810000RMCTALA
  DC    4B'00000000' -      ALGORITHM REQUEST ACCUMULATOR FIELD  04820000RMCTALR
  DC    4B'00000  000' -      IMMEDIATE ALGORITHM REQUEST FIELD    04830000RMCTR
QSV DC    A(RQSV) -           ADDR OF REQ SRV DATA AREA   @Z40BPCH 04840000RMCTF
LGS DC    1B'00000000' -      PROCESSING CONTROL FLAGS             04850000RMCTM
FA  EQU   BIT0 -              M  EASUREMENT FACILITY ACTIVE          04860000RMC
TCPS1 EQU   BIT1                CAP SWITCH                  @Z40BPSS 04870000RMC
TINIT EQU   BIT3 -              SRM INITIALIZATION WAS PERFORMED     04880000RMC
TRSV1 EQU   BIT4 -              RESERVED                     @ZM43085  04890000R
MCTSTW  EQU   BIT5 -              SET HAS STOPPED WAR COLLECTION       04900000R
MCTRSV2 EQU   BIT6 -              RESERVED                   @ZM43085  04910000
        DC    1B'00000000' -      OVERRIDE CONDITION FLAGS               0492000
0RMCTMFS  EQU   BIT1 -              MF1 ACTIVE,SET IPS RCVD    @Z40BPCH  0493000
0         DC    2B'00000000' -      RESERVED                             0494000
0RMCTTELM DC    V(IEATSELM) -       RESOURCES MANAGER TIMING ELEMENT     049  50
000RMCTCPID DC    C'RM1',X'03' -      RESOURCES MANAGER CELL POOL ID       04960
000RMCTTOCI DC    D'0' -              CLOCK READ AREA - 64BIT BINARY NMB   04970
000RMCTOUCB DC    A(IRAOUCB) -        PREASSEMBLED MODEL OUCB              04980
000RMCTOUXB+  DC    A(IRAOUXB) -        INTERPOSED DUMMY OUXB                049
90000RMCT  SRBT DC    A(IRASRBT) -        RESOURCES MANAGER SRB TABLE          0
5000000RMCTDMDT DC    A(0) -              ADDR OF DOMAIN TABLE        @Z40BPCH 0
5010000RMCTDMDE DC    A(0) -              ADDR OF LAST DMN TAB ENTRY  @Z40BPCH 0
5020000RMCTDMNC DC    H'  0' -              NUMBER OF DOMAINS           @Z40BPCH
 05030000RMCTR50  DC    H'0' -              RESERVED                    @Z40BPCH
 05040000RMCTEND  DS    0D -                END OF RMCT
 05050000RMCTLEN  EQU   RMCTEND-RMCT -        LENGTH OF RMCT
   05060000         SPACE 3
   05070000CCT      EQU   *-*
   05080000ICT      EQU   *-*
     05090000MCT      EQU   *-*
     05100000RMPT     EQU   *-*
     05110000RMCA     EQU   *-*
       05120000RMEX     EQU   *-*
       05130000RMSB     EQU   *-*
       05140000IRAEPPA  EQU   *-*
         05150000EPDTSCN  EQU   *-*
         05160000EPATSCN  EQU   *-*
         05170000EPAT     EQU   *-*
         05180000IR  AFLTM  EQU   *-*
           05190000IRAEPPR  EQU   *-*
           05200000IRACTMQE EQU   *-*
           05210000IRAOUCB  EQU     *-*
             05220000IRAWTQE  EQU   *-*
             05230000IRAOTQE  EQU   *-*
             05240000IRAINQE  EQU   *-*
               05250000RQSV     EQU   *-*
               05260000IRAOUXB  EQU   *-*
               05270000IRASRBT  EQU   *-*
                 05280000         MEND
                 05290000*
              */ 05300000*%RMCTPLS2:  ;
                   05310000         TITLE 'Misc. Cblock Setup Macros'
         03/99 DBC 05320000*****************************************************
******** 03/99 DBC 05330000* SMCA Setup Macro
       * 03/99   DBC 05340000***************************************************
********** 03/99 DBC 05350000         SPACE 1
           03/99 DBC 05360000         MACRO
           03/99 DBC 05370000            _          #SMCA &DOC=,&LIST=
                         03/99 DBC 05380000         GBLB  &SMCA
                         03/99 DBC 05390000         GBLC  &#TIT,&#INFO(20)
                         03/99 DBC 05400000           AIF   (&SMCA).MEND
                           03/99 DBC 05410000&SMCA    SETB  (1)
                           03/99 DBC 05420000&#TIT    SETC  'SMF Control Area'
                           03/99 DBC 05430000&#INFO(1) SETC   '&#TIT'
                             03/99 DBC 05440000&#INFO(2) SETC 'SMCABASE   = Dsec
t and Base'                  03/99 DBC 05450000         #TITDOC 'IEESMCA ,',
                             03/99 DBC*05460000               DOC=&DOC,LIS  T=&L
IST                            03/99 DBC 05470000         IEESMCA ,
                               03/99 DBC 05480000&SYSECT  CSECT ,
                               03/99 DBC 05490000         #TUNDOC ,
                                 03/99 DBC 05500000.MEND    MEND
                                 03/99 DBC 05510000         SPACE 3
                                 03/99 DBC 05520000*****************************
************************  ******** 03/99 DBC 05530000* RMCT Setup Macro
                                 * 03/99 DBC 05540000***************************
********************************** 03/99 DBC 05550000         SPACE 1
                                   03/9  9 DBC 05560000         MACRO
                                     03/99 DBC 05570000         #RMCT &DOC=,&LIS
T=                                   03/99 DBC 05580000         GBLB  &RMCT
                                     03/99 DBC 0559000  0         GBLC  &#TIT,&#
INFO(20)                               03/99 DBC 05600000         AIF   (&RMCT).
MEND                                   03/99 DBC 05610000&RMCT    SETB  (1)
                                       03/99 DBC 05620000&#TIT    SET  C  'SRM C
ontrol Table'                            03/99 DBC 05630000&#INFO(1) SETC '&#TIT
'                                        03/99 DBC 05640000&#INFO(2) SETC 'RMCT
      = Dsect and Base'                  03/99 DBC 05650000         #TITDOC 'IRA
RMCT   ,',                                 03/99 DBC*05660000               DOC=
&DOC,LIST=&LIST                            03/99 DBC 05670000         IRARMCT ,
                                           03/99 DBC 05680000&SYSECT  CSECT ,
                                             03/99 DBC 05690000         #TUNDOC
,                                            03/99 DBC 05700000.MEND    MEND
                                             03/99 DBC 05710000         TITLE 'M
VS Control Block Maps'                         03/99 DBC 05720000***************
********************************************** 03/99 DBC 05730000* Linkedit Cont
rol Cards                                    * 03/99 DBC 05740000***************
********************************************** 03+ /99 DBC 05750000         SPAC
E 1                                                03/99 DBC 05760000         PU
NCH '         SETCODE AC(1)'                                 05770000         SP
ACE 3                                              12/89 MDL 05780000***********
************************************************** 12/89 MDL 0  5790000*
STANDARD REGISTER NAMES OMITTED FOR JES 1.3.6.     * 12/89 MDL 05800000*
REGISTERS NAMES WILL BE SET BY THE $HASPEQU        * 12/89 MDL 05810000*
MACRO.                                             * 12/89 MDL 05820000******  *
****************************************************** 12/89 MDL 05830000
  SPACE 1                                              12/89 MDL 05840000
  #REGS R,GEN=NO                                       12/89 MDL 05850000
  SPACE 3                                                          05860000*****
******************************************************** 03/99 DBC 05870000*
                                                       * 03/99 DBC 05880000* MVS
 Control Block Maps                                      * 03/99 DBC 05890000*
                                                         * 03/99 DBC 05900000***
********************************************************** 03/99 DBC 05910000
      SPACE 1                                                03/99 DBC 05920000S
YMDEL   DSECT ,                                              03/99 DBC 05930000S
CHEDRUN CSECT ,                                              03/99 DBC 05940000
        SPACE 1                                                03/99 DBC 0595000
0         GBLB  &#DOC,&#LIST                                   03/99 DBC 0596000
0&#DOC    SETB  (1)                                            03/99 DBC 0597000
0&#LIST   SETB  (0)                                            03/99 DBC   05980
000         PRINT NOGEN                                                    05990
000         SPACE 1                                              03/99 DBC 06000
000         #ASCB ,                                              03/99 DBC 06010
000           #CVT  ,                                              03/99 DBC 060
20000         #DCB  ,                                              03/99 DBC 060
30000         #JESCT ,                                             03/99 DBC 060
40000         #JSCB ,                                                03/99 DBC 0
6050000         #PSA  ,                                              03/99 DBC 0
6060000         #RMCT LIST=YES                                       03/99 DBC 0
6070000         #SMCA ,                                                03/99 DBC
 06080000         #SSCT ,                                              03/99 DBC
 06090000         #SSIB ,                                              03/99 DBC
 06100000         #TCB  ,                                                03/99 D
BC 06110000         #TIOT ,                                              03/99 D
BC 06120000         #UCM  ,                                              03/99 D
BC 06130000         SPACE 1                                        +       03/99
 DBC 06140000         PRINT  ON,GEN,NODATA                                   03/
99 DBC 06150000SYMNODEL DSECT ,                                              03/
99 DBC 06160000SCHEDRUN CSECT ,                                              03/
99 DBC 06170000         TITLE 'JES2 Control Block Maps'                      03/
  99 DBC 06180000************************************************************* 0
3/99 DBC 06190000*                                                           * 0
3/99 DBC 06200000* JES2 Global Symbol Definitions                            * 0
3/99 DBC 062100  00*                                                           *
 03/99 DBC 06220000*************************************************************
 03/99 DBC 06230000         SPACE 1
 03/99 DBC 06240000         CO  PY  $HASPGBL
   03/99 DBC 06250000         SPACE 3
   03/99 DBC 06260000***********************************************************
** 03/99 DBC 06270000*
   * 03/99 DBC 06280000* JES2 Control Block Maps
   * 03/99 DBC 06290000*
   * 03/99 DBC 06300000*************************************  ******************
****** 03/99 DBC 06310000         SPACE 1
       03/99 DBC 06320000         $MODULE ($HCCT,GEN),
       03/99 DBC*06330000               REQCBS=JES2         Don't gen MVS c  blo
cks      03/99 DBC 06340000         SPACE 3
                   06350000         PRINT ON,GEN,NODATA
                   06360000         TITLE 'SCHEDRUN -- TIME - TIMESTAMP MAP'
                     06370000***************************************************
**********           06380000*
         *           06390000*        TIME -- TIMESTAMP MAP
         *           0640  0000*
           *           06410000*************************************************
************           06420000         SPACE 1
                       06430000TIME       DSECT ,
                         06440000TIMEYR   DS    H                   YEAR
                         06450000TIMEMO   DS    H                   MONTH
                         06460000TIMEDY   DS    H                     DAY-OF-MON
TH                         06470000TIMEYMD  EQU   TIMEYR,*-TIMEYR     DATE SEGME
NT                         06480000TIMEHR   DS    H                   HOUR
                           06490000TIMEMN   DS    H                     MINUTE
                             06500000TIMEHM   EQU   TIMEHR,*-TIMEHR     TIME-OF-
DAY SEGMENT                  06510000TIMETIME EQU   TIMEYR,*-TIMEYR
                             06520000         TITLE 'SCHEDRUN -- DSA - LOCAL DYN
AMIC + STORAGE AREA'           06530000*****************************************
***  *****************           06540000*
                     *           06550000*        DSA -- LOCAL REGISTER SAVE ARE
A AND DYNAMIC        *           06560000*        STORAGE AREA.
                       *           06570000*************************************
************************           06580000         SPACE 1
                                   06590000         #DSA  ,
                                     06600000DSADATA  DS    0D
START OF DATA AREA                   06610000         SPACE 3
                           03/99 DBC 06620000         PRINT  NOGEN
                           03/99 DBC 06630000           IFGACB DSECT=NO
                                       06640000         IFGRPL DSECT=NO
                                       06650000         PRINT  ON,GEN,NODATA
                             03/99 DBC 06660000         SPACE 3
                               03/99 DBC 06670000         GSB   DSECT=NO
    GSAM PARAMETER BLOCK                 06680000         SPACE 3
                               03/99 DBC 06690000         ORG   GSBBUFX
      LOCATE TO START OF SFR BUFFER        06700000         SFR   MF=(D,N)
      SFR MAP                              06710000         SPACE 1
                                           06720000         ORG   ,
      HIGHEST   LOCATE                       06730000GSBBUFLN EQU   *-GSBBUFX
        L'GSAM BUFFER                        06740000         SPACE 1
                                             06750000SAVEKEY  DS    XL(L'SFRKEY)
        KEY SAVE AREA                          06760000         SPACE 3
                                     03/99 DBC 06770000*************************
************************************           06780000*        LOG CONTROL BLOC
KS AND BUFFER                      *             06790000***********************
**************************************           06800000         SPACE 1
                                                 06810000         PRINT NOGEN
                                                 06820000L  OGDCB   DCB   DSORG=
PS,MACRF=PM,RECFM=VB,LRECL=LOGRCDLN+4,            *06830000               BLKSIZ
E=4096,DDNAME=SCHEDLOG                             06840000         PRINT ON,GEN
,NODATA                                            06850000         SPACE   1
                                                     06860000LOGOPEN  OPEN  (LOG
DCB,OUTPUT),MF=L                                     06870000         SPACE 1
                                                     06880000         DS    2Y
                                                       06890000LOGRCD   DS    0C
                                                       06900000LOGRCDRC DC    CL
5'RC'                                                  06910000LOGRCDGU DC    C'
   '                   +                                 06920000LOGRCMD  DS
CL(L'SFRCMD)                                               06930000LOGRCDLN EQU
  *-LOGRCD                                                 06940000         SPAC
E 3                                                        06950000*************
************************************  ************           06960000*        RE
SCHEDULING FAILURE WTOR                          *           06970000***********
**************************************************           06980000         SP
ACE 1                                                          06990000ERRWTOR
WTOR  '*** RESCHEDULING OF SCHEDRUN HAS FAILED. REPLY U TO AKN*07000000
      OWLEDGE ***',                                           *07010000
      WREPLY,L'WREPLY,WECB,                                   *070  20000
        ROUTCDE=(1,2,9,10,11),                                  *07030000
        DESC=(2,7),                                             *07040000
        MF=L                                                     07050000ERRWTOR
L   EQU   *-ERRWTOR                                                07060000
    #TEST SIZE=(ERRWTORL,EQ,MERRWTOL)                              07070000
    SPACE 1                                                        07080000WREPL
Y   DS    C                                                          07090000WEC
B     DS    A                                                        07100000
      SPACE 3                                                        07110000***
*******************************  ***************************           07120000*
        VARIOUS TIMESTAMPS                                 *           07130000*
************************************************************           07140000
        SPACE 1                                                          0715000
0IPLYR    DS    H                   TIME OF LAST IPL                     0716000
0IPLMO    DS    H                                                        0717000
0IPLDY    DS    H                                                          07180
000IPLYMD   EQU   IPLYR,*-IPLYR                                            07190
000IPLHR    DS    H                                                        07200
000IPLMN    DS    H                                                        0  72
10000IPLHM    EQU   IPLHR,*-IPLHR                                            072
20000IPLTIME  EQU   IPLYR,*-IPLYR                                            072
30000         SPACE 1                                                        072
40000NOWYR      DS    H                   CURRENT TIME                         0
7250000NOWMO    DS    H                                                        0
7260000NOWDY    DS    H                                                        0
7270000NOWYMD   EQU   NOWY  R,*-NOWYR
 07280000NOWHR    DS    H
 07290000NOWMN    DS    H
 07300000NOWHM    EQU   NOWHR,*-NOWHR    +
   07310000NOWTIME  EQU   NOWYR,*-NOWYR
     07320000NOWMINS  DS    F                   CURRENT TIME IN MINUTES
     07330000         SPACE 1
     07340000WRKPYR   DS    H                   WORK A  REA USED BY DATESCRN
       07350000WRKPMO   DS    H
       07360000WRKPDY   DS    H
       07370000WRKPYMD  EQU   WRKPYR,*-WRKPYR
         07380000WRKPHR   DS    H
         07390000WRKPMN   DS    H
         07400000WRKPHM   EQU   WRKPHR,*-WRKPHR
           07410000WRKPTIME EQU   WRKPYR,*-WRKPYR
           07420000         SPACE 1
           07430000WRKNYR   DS    H                   WORK AREA USED BY DATESCRN
           07440000  WRKNMO   DS    H
             07450000WRKNDY   DS    H
             07460000WRKNYMD  EQU   WRKNYR,*-WRKNYR
             07470000WRKNHR   DS      H
               07480000WRKNMN   DS    H
               07490000WRKNHM   EQU   WRKNHR,*-WRKNHR
               07500000WRKNTIME EQU   WRKNYR,*-WR  KNYR
                 07510000         SPACE 3
                 07520000*******************************************************
******           07530000*        MISCELLANIOUS OTHER TIME VALUE  S
       *           07540000*****************************************************
********           07550000         SPACE 1
                   07560000LTOFFGMT DS    D                   THE DIFFERENCE BE
 TWEEN     01/03 DBA 07570000*                                  LOCAL TIME AND G
MT.        02/84 DBC 07580000LASTMNIT DS    F                   TIME OF LAST MID
NIGHT IN MINUTES     07590000NEXTSCHD DS    F                   TIME OF NEXT SCH
EDRUN IN MINUT  ES     07600000         SPACE 3
                       07610000*************************************************
************           07620000*        MISCELLANIOUS SUBROUTINE SAVE AREAS
           *           076300  00***********************************************
**************           07640000         SPACE 1
                         07650000SAVDATSC DS    5A                  DATESCRN
                         07660000SAVFMINS DS      3A                  FINDMINS
                           07670000SAVFTIME DS    3A                  FINDTIME
                           07680000SAVFWKDY DS    A                   FINDWKDY
                           07690000SAVRLOCK DS    4A       +            RCDLOCK
                             07700000         SPACE 3
                               07710000*****************************************
********************           07720000*        MISCELLANIOUS DATA
                   *           07730000*********************************  ******
**********************           07740000         SPACE 1
                                 07750000         DS    0D
                                 07760000DSAWORK  DS    XL8                 VOLI
TILE WO  RK AREA                   07770000         SPACE 1
                                   07780000UCMASTER DS    X'00'               MA
STER CONSOLE UCMID       10/90 MDL 07790000MYSYSID  DS    CL(L'SMCASID)       CU
RRENT SYSTEM ID VALUE                07800000         SPACE 1
                                     07810000SCHDCMD  DS    2Y,CL60
$TA COMMAND BUILD AREA               07820000SCHDCMDL EQU   *-SCHDCMD
LENGTH                                 07830000         SPACE 3
                                       07840000*********************************
****************************           07850000*        APPLICATIONS OVERRIDE LI
ST. MUST COME AT END OF    *           07860000*          DSA.
                             *           07870000*******************************
******************************           07880000         SPACE 1
                                         07890000OVRDEOL  DS    A
      --> EO-OVERRIDE LIST                 07900000OVRDLIST DS    1000XL(L'SFRNA
ME)   TODAY'S OVERRIDE LIST (MUST BE LAST) 07910000OVRDLEND EQU   *
      END OF LIST                          07920000         DS    X'00'
        EOL INDICATOR                        07930000         SPACE 1
                                             07940000DSAEND   EQU   *
        EO-DSA                               07950000DSADLEN  EQU   DSAEND-DSADA
TA      L'DATA AR  EA                          07960000DSALEN   EQU   DSAEND-DSA
          L'DSA                                07970000         TITLE 'SCHEDRUN
-- INITIALIZATION'                             07980000*************************
********************************  ****           07990000*        REENTRANT ENTR
Y LINKAGE                            *           08000000***********************
**************************************           08010000         SPACE 1
                                                   08020000SCHEDRUN #ENTER 'SCHE
DRUN Copyright David_B. Cole - 1980, 1999 ', 9 DBC*08030000               BASES=
2,SAVTYPE=(RENT,DSALEN)                            08040000         USING DSA,R1
3             DCL DSA BASE                         08050000           SPACE 3
                                                     08060000*******************
******************************************           08070000*        INSURE THA
T I AM BEING INVOKED BY SOMEONE WHO IS   *           08080000*        AUTHORI+ Z
ED TO INVOKE ME.                           *           08090000************  ***
**********************************************           08100000         SPACE
1                                                        08110000         L
R1,PSAAOLD-PSA      --> OUR ASCB                         08120000         USING
ASCB,R1               DCL ASCB BASE                        08130000         ICM
  R0,15,ASCBTSB       TSO USER?                            08140000         BNZ
  CHEKAUTH            YES, GO VALIDATE FURTHER             08150000         ICM
  R0,15,ASCBJBNI      NO,   BATCH JOB?                       08160000         BZ
    AUTHOK              NO, STARTED TASK; VALIDATION IS OK   08170000         DR
OP  R1                  YES, RELEASE ASCB BASE               08180000         SP
ACE 1                                                          08190000CHEKAUTH
DS    0H                                                       08200000*********
****************************************************           08210000* INSERT
HERE YOUR OWN AUTHORITY CHECK                      *             08220000*******
******************************************************           08230000AUTHOK
  DS    0H                                                       08240000
  SPACE 3                                                        08250  000*****
********************************************************           08260000*
    DETERMINE THE CURRENT SMF SYSTEM ID, IF ANY.       *           08270000*****
********************************************************           08280000
    S  PACE 1                                                        08290000
      L     R1,CVTPTR           --> CVT                              08300000
      ICM   R1,15,CVTSMCA-CVTMAP(R1) --> SMCA; EXIST?                08310000
      BZ    NOSMCA                NO, SKIP                             08320000
        MVC   MYSYSID,SMCASID-SMCABASE(R1) YES, COPY CRNT SYSID        08330000N
OSMCA   DS    0H                                                       08340000
        SPACE 3                                                10/90 MDL 0835000
0************************************************************* 10/90 MDL 0836000
0*        DETERMINE THE UCMID FOR THE MASTER CONSOLE.        * 10/90 MDL 0837000
0*************************************************  ************ 10/90 MDL 08380
000         SPACE 1                                              10/90 MDL 08390
000         L     R1,CVTPTR           --> CVT                    10/90 MDL 08400
000         L     R1,CVTCUCB-CVTMAP(,R1)  UCM BASE                 10/90 MDL 084
10000         S     R1,=A(4)            --> UCM PREFIX ADDRESS     10/90 MDL 084
20000         L     R1,0(,R1)           --> UCM PREFIX             10/90 MDL 084
30000         L     R1,UCMMCENT-UCMPRFX(,R1) A(MASTER'S UCME).     10/90 MDL 084
  40000         USING UCMLIST,R1                                     10/90 MDL 0
8450000         SPACE 1                                              10/90 MDL 0
8460000         MVC   UCMASTER,UCMID      PICK UP MASTER UCMID.      10/90 MDL 0
8470000        +  DROP  R1                                             10/90 MDL
 08480000           SPACE 3
   08490000*************************************************************
   08500000*        THE SCHEDULE FILE IS ABOUT TO BE "OPENED". IF      *
   08510000*        "FAKEGSA  M" IS BEING USED, THEN A REAL OPEN IS      *
     08520000*        ABOUT TO BE PERFORMED IN WHICH CASE, IF THE        *
     08530000*        SCHEDULE FILE IS PASSWORD PROTECTED FOR UPDATE,    *
     08540000*        THEN THE OPERATOR WIL  L BE PROMPTED FOR THE         *
       08550000*        PASSWORD; HOWEVER, I AM SECURE; I AM SPECIAL; AND  *
       08560000*        IN GENERAL I AM AN ALL AROUND CERTIFIED GOOD-GUY.  *
       08570000*        SO, IT IS NOT NECESSARY THAT THE O  PERATOR BE       *
         08580000*        PROMPTED. ACCORDINGLY, I WILL NOW SET THE          *
         08590000*        "SUPPRESS PASSWORD CHECKING" FLAG; OPEN THE        *
         08600000*        SCHEDULE FILE; AND THEN RESET THE FLAG AFTER OP  EN. *
           08610000*        I WILL ALSO, HOWEVER, SET UP ESTAE PROTECTION SO   *
           08620000*        THAT AN INADVERTANT ABEND DOESN'T LEAVE THAT FLAG  *
           08630000*        ON FOREVER.                                        *
             08640000***********************************************************
**           08650000         SPACE 1
             08660000         SR    R2,R2               CLEAR "GSAM DELAYED" SIG
NAL          08670000GS  AMRTRY L     R1,PSATOLD-PSA      --> MY TCB
               08680000         L     R1,TCBJSCB-TCB(,R1) --> MY JSCB
               08690000         L     R1,JSCBACT-IEZJSCB(,R1) (HO-HUM) --> "ACTI
VE" JSCB       08700000         SR      R4,R4               SET "PASSWORD SUPPRE
SSION            08710000*                                  ALREADY SET" SIGNAL
                 08720000         TM    JSCBSWT1-IEZJSCB(R1),JSCBPASS TRUE?
                 08730000         BNZ   PASSOK                YES, NOTHING TO DO
 HERE              08740000         SPACE 1
                   08750000         LR    R4,R1               NO, COPY JSCB PTR.
 ALSO              08760000*                                  SERVES   AS A "PAS
SWORD                08770000*                                  SUPPRESSION BEIN
G SET                08780000*                                  LOCALLY" SIGNAL
                     08790000         ESTAE PASSGARD,CT,TERM=YES SET UP TEMP EST
AE   COVERAGE          08800000         MODESET KEY=ZERO          SET KEY-0
                       08810000         OI    JSCBSWT1-IEZJSCB(R4),JSCBPASS SUPP
RESS PASSWORD          08820000*                                  CHECKING
                         08830000         MODESET KEY=NZERO         RESTORE P/P-
KEY                      08840000PASSOK   DS    0H
                         08850000         SPACE 3
                         08860000            _ *********************************
****************************           08870000*        INITIALIZE GSAM ACCESS.
                           *           08880000*********************************
****************************           08890000           SPACE 1
                                         08900000         MVC   SFMRKEY,SFMRKEY-
SFMR+MASTER PRIME THE SEARCH KEY         08910000         GSAMCALL READ,OPTIONS=
(INITIAL,DIR,BACK,WAIT,SYNC,ABTERM),    *08920000                 FILE='SCHEDULE
',POOL=3,BUFFER=-1,BUFFLEN=GSBBUFLN,      *08930000               MF=(E,GSB)
      INIT GSB & TEST FILE EXISTANCE       08940000         LR    R3,R15
      SAVE THE GSAM RETURN CODE            08950000         SPACE 3
                                             08960000***************************
**********************************           08970000*        REGARDLESS OF WHET
HER OR NOT THE SCHEDULE FILE     *           08980000*        "OPEN" OCCURED OR
SUCCEEDED, IF   I SET THE          *           08990000*        "SUPPRESS PASSWO
RD CHECKING" FLAG LOCALLY, THEN    *           09000000*        RESET IT NOW.
                                   *           09010000*************************
****************************  ********           09020000         SPACE 1
                                                 09030000         LTR   R4,R4
            WAS THE FLAG SET LOCALLY?            09040000         BZ    PASSOK2
            NO, SKIP                               09050000         MODESET KEY=
ZERO          YES, LOAD KEY-0                      09060000         NI    JSCBSW
T1-IEZJSCB(R4),255-JSCBPASS RESET THE FLAG         09070000         MODESET KEY=
NZERO         RESUME P/P-KEY                       0908000  0         ESTAE 0
                CANCEL THE TEMP ESTAE                09090000PASSOK2  DS    0H
                                                     09100000         SPACE 3
                                                     09110000************  *****
********************************************           09120000*        TEST THE
 RESULTS OF THE INITIAL GSAM CALL.         *           09130000*****************
********************************************           09140000         SPACE 1
                                                         09150000         LTR
R15,R3              WAS THE READ OK?                     09160000         BZ
GSAMGO              YES, PROCEED                         09170000         CH
R15,=Y(GSAMEFIL)    NO,   IS GSAM OR THE FILE UP?          09180000         #DIE
  NE,'GSAM ACCESS ERROR (INITIAL)'                         09190000         SPAC
E 3                                                        09200000*************
**************************************  **********           09210000*        GS
AM IS NOT UP OR THE SCHEDULE FILE IS NOT DEFINED *           09220000*        TO
 GSAM. TELL THE OPERATOR AND THEN WAIT A DECENT  *           09230000*        IN
TERVAL.                                          *   +         09240000*********
***************************************************  *           09250000
  SPACE 1                                                        09260000
  LTR   R2,R2               HAS THE OPERATOR BEEN NOTIFIED?      09270000
  BNZ   NOWTO               YES, SKIP                            0  9280000
    WTO   'SCHEDRUN IS WAITING FOR ACCESS TO THE SCHEDULE FILE',  *09290000
          ROUTCDE=2,DESC=2    NO, TELL                             09300000
    LR    R2,R1               SAVE THE DOM ID                      09310000NOWTO
      DS    0H                                                       09320000
      SPACE 1                                                        09330000
      STIMER WAIT,BINTVL=DELAYTIM WAIT A DECENT INTERVAL             09340000
      B     GSAM  RTRY            RETRY GSAM                           09350000
        SPACE 1                                                        09360000G
SAMGO   LTR   R1,R2               ANY MSG TO DOM?                      09370000
        BZ    NODOM                 NO, PROCEED                          0938000
0         DOM   MSG=(1)             YES, DO SO                           0939000
0NODOM    DS    0H                                                       0940000
0         SPACE 3                                                          09410
000*************************************************************           09420
000*        VERIFY THAT THIS IS THE SCHEDULE FILE              *           09430
000**********************************************************  ***           094
40000         SPACE 1                                                        094
50000         CLC   SFMRFID,SFMRFID-SFMR+MASTER IS THE MASTER RCD VALID?     094
60000         #DIE  NE,'INVALID SHEDULE FILE MASTER RECORD'                    0
9470000         SPACE 3                                                        0
9480000*************************************************************           0
9490000*        FIND VARIOUS TIME CONSTANTS RELATING TO THE        *           0
9500000*          CURRENT TIME, THE LAST IPL TIME, AND THE NEXT      *
 09510000*        SCHEDRUN TIME.                                     *
 09520000*************************************************************
 09530000         SPACE 1                                                02/84 D
BC 09540000         TIME  STCK,DSAWORK        GET TOD CLOCK (GMT)        02/84 D
BC 09550000         L     R2,CVTPTR           GET THE CVT                04/92 D
JS 09560000         USING CVT,R2                     "                     01/03
 DBA 09570000         TM    CVTDCB,CVTOSEXT     CVTOSLVL EXISTS?           01/03
 DBA 09580000         BNO   CVT422N             PRE-ESA SYSTEM, BRANCH     01/03
 DBA 09590000         TM    CVTOSLV0,CVTJ4422   SP 4.2.2   AND BEYOND?       01/
03 DBA 09600000         BO    CVT422Y             YES, BRANCH                01/
03 DBA 09610000CVT422N  MVC   LTOFFGMT(4),CVTTZ   GET 32-BIT OFFSET FROM GMT 01/
03 DBA 09620000         MVC   LTOFFGMT+4(4),=F'0'      "               +       0
1/03 DBA 09630000         B     LTCONV              GO CONVERT TO LOC  AL TIME
 01/03 DBA 09640000CVT422Y  L     R2,CVTEXT2          GET 64-BIT OFFSET FROM GMT
 01/03 DBA 09650000         USING CVTXTNT2,R2              "
 01/03 DBA 09660000         MVC   LTOFFGMT(8),CVTLDTO      "
 01/  03 DBA 09670000         DROP  R2
   01/03 DBA 09680000         SPACE ,
   01/03 DBA 09690000LTCONV   LM    R0,R1,DSAWORK       ADD TOD TO LOCAL OFFSET
   01/03 DBA 097000  00         AL    R0,LTOFFGMT              "
     01/03 DBA 09710000         AL    R1,LTOFFGMT+4            "
     01/03 DBA 09720000         BC    12,LTCONVN          BR IF NO CARRY
     01/03 DBA 09730000         AL      R0,=F'1'            CARRY IN
       01/03 DBA 09740000LTCONVN  STM   R0,R1,DSAWORK       STORE BACK
       01/03 DBA 09750000         LA    R1,NOWTIME          --> TIMESTAMP SINK
                 09760000         BAL   R14,FINDT  IME        CNVRT TODC TO TIME
STAMP              09770000         BAL   R14,FINDMINS        CNVRT TO MINUTES
                   09780000         ST    R15,NOWMINS         SAVE
                   09790000         SPACE 1
                     09800000         LH    R0,NOWHR            GET CURRENT +HH
                     09810000         MH    R0,=H'60'           CNVRT TO +MINUTE
S                    09820000         AH    R0,NOWMN            ADD IN +MM
                       09830000         SR    R15,R0              GET TIME OF LA
ST MIDNIGHT IN MINUTES 09840000         ST    R15,LASTMNIT        SAVE
                       09850000         SPACE 1
                         09860000         AH    R15,=Y(24*60)       GET NEXT MID
NIGHT                    09870000         ST    R15,NEXTSCHD        SET MAX NEXT
 SCHEDRUN TIME           09880000         SPACE 3
               12/89 MDL 0989  0000*********************************************
**************** 12/89 MDL 09900000*        GET SRM'S "TIME BASE."  IN XA, THE R
MCT IS         * 12/89 MDL 09910000*        ABOVE THE LINE, SO WE WOULD NEED TO
SWITCH TO      * 12/89 MDL 09920000*          AMODE-31.
                 * 12/89 MDL 09930000*******************************************
****************** 12/89 MDL 09940000         SPACE 1
                   12/89 MDL 09950000         L     R14,CVT  PTR          --> CV
T                    12/89 MDL 09960000         USING CVTMAP,R14
                     12/89 MDL 09970000         TM    CVTDCB,CVTMVSE      RUNNIN
G XA?                12/89 MDL 09980000         BZ    AMODE31               NO.
 AMODE NOT AN ISSUE    12/89 MDL 09990000         LA    R1,AMODE31          YES.
 --> BRANCH POINT      12/89 MDL 10000000         O     R1,=X'80000000'     SIGN
AL AMODE-31            12/89 MDL 10010000         BSM   0,R1                CONV
ERT TO AM+ ODE-31        12/89 MDL 10020000         SPACE 1
                           12/89 MDL 10030000AMODE31  L     R2,CVTOPCTP
 --> SRM'S RMCT            12/89 MDL 10040000         L     R2,RMCTTBS-RMCT(,R2)
 GET SRM'S "TIME BASE".    02/84 DBC 10050000*
THIS VALUE IS THE            02/84 DBC 10060000*
  COMPLEMENT OF BITS 10-41   02/84 DBC 10070000*
  OF THE TODC VALUE AT THE   02/84 DBC 10080000*
  TIME OF THE LAST IPL.      02/84 DB  C 10090000         SPACE 3
                               12/89 MDL 10100000*******************************
****************************** 12/89 MDL 10110000*        REVERT TO AMODE-24.
                             * 12/89 MDL 10120000***  **************************
******************************** 12/89 MDL 10130000         SPACE 1
                                 12/89 MDL 10140000         TM    CVTDCB,CVTMVSE
      RUNNING XA?                12/89 MDL 10150000         BZ    A  MODE24
        NO.  AMODE NOT AN ISSUE    12/89 MDL 10160000         LA    R1,AMODE24
        YES. --> BRANCH POINT      12/89 MDL 10170000         BSM   0,R1
        CONVERT TO AMODE-24        12/89 MDL 10180000         DROP  R14
                                     12/89 MDL 10190000         SPACE 1
                                     12/89 MDL 10200000AMODE24  LCR   R2,R2
          RECOMPLEMENT TO GET IPL    12/89 MDL 10210000*
          TIME'S   BITS 10-41          02/84 DBC 10220000         SRL   R2,10
            ISSOLATE BITS 10-31        02/84 DBC 10230000*
            ("SECONDS" COUNTER)        02/84 DBC 10240000         TIME  STCK,DSA
WORK        GET TOD CLOCK AGAIN   (GMT)  02/84 DBC 10250000         LM    R0,R1,
DSAWORK       LOAD IT                              10260000         SRDL  R0,22
              R0 GETS BITS 0-9; R1 GETS BITS 10-41 10270000         SRL   R1,10
              ISSOLATE CURRENT BITS 10-31            10280000         CR    R1,R
2               HAS OVERFLOW OCCURED OUT   02/84 DBC 10290000*
                OF BIT 10 SINCE IPL-TIME?  02/84 DBC 10300000         BH    IPLT
GLUE            NO, PROCEED                          10310000           BCTR  R0
,0                YES, ADJUST THE CURRENT BITS 0-9     10320000*
                  BACK TO THE IPL TIME'S BITS 0-9      10330000IPLTGLUE SLL   R0
,22               RESTORE BITS 0-9 TO THEIR CORRECT    10340000*
                    POSITION                             10350000         OR
R0,R2               PUT THE PIECES TOGETHER    02/84 DBC 10360000*
                    TO GET THE IPL-TIME BITS   02/84 DBC 10370000*
                      0-31 (32-61 DON'T MATTER)  02/84 DBC 10380000         AL
  R0,LTOFFGMT         CNVRT TO LOCAL TIME        02/84 DBC 10390000         ST
  R0,DSAWORK          STORE FOR LOCAL CONVERSION           10400000         LA
  R1,IPLTIME          --> T+ IMESTAMP SINK                   10410000         BA
L   R14,FINDTIME        C  NVRT IPL-TODC TO TIMESTAMP          10420000
SPACE 3                                                        10430000*********
****************************************************           10440000*
OPEN THE LOG DATA SET AND WRITE TWO BLAN  K LINES.   *           10450000*******
******************************************************           10460000
  SPACE 1                                                        10470000
  MVC   LOGDCB(MODLEN),MODLDCB GET PROTOTYPE CONTROL BL  OCKS      10480000
    OPEN  (LOGDCB,OUTPUT),MF=(E,LOGOPEN) OPEN THE LOG              10490000
    SPACE 1                                                        10500000
    TM    DCBOFLGS-IHADCB+LOGDCB,DCBOFOPN IS THERE A LOG?          105  10000
      BZ    NOLOG0              NO, SKIP                             10520000
      LA    R0,=Y(6,0,C'  ')    YES, --> BLANK LINE                  10530000
      PUT   LOGDCB,(0)          WRITE IT                             10540000
        LA    R0,=Y(6,0,C'  ')    --> BLANK LINE AGAIN                 10550000
        PUT   LOGDCB,(0)          WRITE IT                             10560000
        SPACE 3                                                        10570000*
********************  ****************************************           1058000
0*        FORMAT AND PRINT THE LOG HEADER LINE               *           1059000
0*************************************************************           1060000
0         SPACE 1                                                          10610
000         MVC   LOGRCD-4(LMHEADL+4),LMHEADR-4 GET THE PROTOTYPE          10620
000         #TEST SIZE=(LOGRCDLN,GE,LMHEADL)                               10630
000         MVC   LMHNOW-LMHEADR+LOGRCD-2(L'LMHNOW  +2),=X'40212020612020612*106
40000               0204020207A2020'    EDIT MASK: ' XMM/DD/YY HH:MM'        106
50000         #TEST SIZE=(L'LMHNOW,EQ,14)                                    106
60000         LH    R1,NOWMO            MM                                     1
0670000         MH    R1,=H'100'          MM00                                 1
0680000         AH    R1,NOWDY            MMDD                                 1
0690000         MH    R1,=H'100'          MMDD00                               1
  0700000         LH    R15,NOWYR           CCYY (CC = 19 OR 20)
 10710000         SR    R14,R14
 10720000         D     R14,=F'100'         R14=YY, R15=CC
 10730000           AR    R1,R14              MMDDYY
   10740000         MH    R1,=H'100'          MMDDYY00
   10750000         AH    R1,NOWHR            MMDDYYHH
   10760000         MH    R1,=  H'100'          MMDDYYHH00
     10770000         AH    R1,NOWMN            MMDDYYHHMM
     10780000         CVD   R1,DSAWORK          CNVRT TO DECIMAL
     10790000         ED    LMHNOW-2-LMHEADR++ LOGRCD(L'LMHNOW+2),DSAWORK+2 CNVR
T TO E 10800000         MVC   LMHNOW-2-LMHE  ADR+LOGRCD(2),LMHNOW-2 REPAIR DAMAG
E        10810000         SPACE 1
         10820000         MVC   LMHIPL-LMHEADR+LOGRCD-2(L'LMHIPL+2),=X'4
12020612*10830000               0204020207A2020'    EDIT M  ASK: ' XMM/DD/YY HH:
MM'        10840000         #TEST SIZE=(L'LMHIPL,EQ,14)
           10850000         SPACE 1
           10860000         OC    LMHSYSID-LMHEADR+LOGRCD,MYSYSID COPY SY  SID;
DEFINED?     10870000         BNZ   LMHSIDOK            YES, PROCEED
             10880000         MVC   LMHON-LMHEADR+LOGRCD(L'LMHON+L'LMHSYSID),LMH
ON-1-LMHEADR*10890000               +LOGRCD             NO, CLEAR IT
               10900000LMHSIDOK DS    0H
               10910000         SPACE 1
               10920000         LH    R1,IPLMO            MM
               10930000           MH    R1,=H'100'          MM00
                 10940000         AH    R1,IPLDY            MMDD
                 10950000         MH    R1,=H'100'          MMDD00
                 10960000         LH      R15,IPLYR           CCYY (CC = 19 OR 2
0)                 10970000         SR    R14,R14
                   10980000         D     R14,=F'100'         R14=YY, R15=CC
                   10990000         AR    R1,R14                MMDDYY
                     11000000         MH    R1,=H'100'          MMDDYY00
                     11010000         AH    R1,IPLHR            MMDDYYHH
                     11020000         MH    R1,=H'100'          MMDD  YYHH00
                       11030000         AH    R1,IPLMN            MMDDYYHHMM
                       11040000         CVD   R1,DSAWORK          CNVRT TO DECIM
AL                     11050000         ED    LMHIPL-2-LMHEADR+LOGRCD(L'LMHIPL+2
),D  SAWORK+2 CNVRT TO E 11060000         MVC   LMHIPL-2-LMHEADR+LOGRCD(2),LMHIP
L-2 REPAIR DAMAGE        11070000         SPACE 1
                         11080000         PUT   LOGDCB,LOGRCD-4     WRITE THE HE
ADER RECORD                11090000NOLOG0   DS    0H
                           11100000         TITLE 'SCHEDRUN -- BUILD TODAY''S OV
ERRIDE LIST'               11110000*********************************************
****************           111200  00*        SCAN (BACKWARDS) THE SCHEDULE FILE
 TO BUILD A LIST *           11130000*        OF ALL APPLICATIONS THAT ARE OVERR
IDDEN ON THIS    *           11140000*        DATE.
                 *           11150000***********  ******************************
********************           11160000         SPACE 1
                               11170000         LA    R1,OVRDLIST         --> EM
PTY OVERRIDE LIST              11180000         ST    R1,OVRDEO+ L          INIT
IALIZE EOL PTR                   11190000         SPACE 1
                                   11200000OVRDREAD GSAMCALL READ,OPTIONS=(NOUPD
ATE,SEQ),MF=(E,GSB)                11210000         LTR   R15,R15             GO
T NEXT RECORD?                     11220000         BZ    OGOTSFR
YES, PROCEED                         11230000         CH    R15,=Y(GSAMEKEY)
NO, EOF?                             11240000         #DIE  NE,'GSAM ACCESS ERRO
R (OVERRIDE SCAN)'                   11250000         CLI   GSBVSAM+3,4
MAYBE, CHEC  K FURTHER                 11260000         #DIE  NE,'GSAM ACCESS ER
ROR (OVERRIDE SCAN)'                   11270000         B     OSFREOF
  YES, EO-SCAN                         11280000OGOTSFR  DS    0H
                                         11290000         SPACE 3
                                         11300000*******************************
******************************           11310000*        IF THE RECORD JUST REA
D HAS ALREADY BEEN FLAGGED   *             11320000*        OBSOLETE, THEN SKIP
IT.                            *           11330000*****************************
********************************           11340000         SPACE 1
                                           11350000           TM    SFRFLAG,SFRF
OBSO    OBSOLETE RECORD?                     11360000         BNZ   OVRDREAD
        YES, SKIP IT                         11370000         SPACE 3
                                             11380000******************  *******
************************************           11390000*        WEED OUT IRRELEV
ENT RECORDS                        *           11400000*************************
************************************           11410000         SPACE 1
                                                 11420000         TM    SFRFLAG,
SFRFOVRD    IS THIS AN OVERRIDE RECORD?          11430000         BZ    OVRDREAD
            NO, IGNORE IT                        11440000         SPACE 1
                                                   11450000         LA    R1,OVR
DLIST-L'SFRNAME YES, LOAD LIST-SO-FAR SCANNER      11460000         BALR  R14,0
              LOAD LOOP HEAD                       11470000         LA    R1,L'S
FRNAME(,R1)   --> NEXT ENTRY                         11480000         CLI   0(R1
),X'00'         REDUNDANCY SCAN DONE?                11490000         BE    ONOR
EDUN            YES, RECORD NOT REDUNDANT            11500000         CLC   0(L'
SFRNAME,R1),SFRNAME NO, REDUNDANT INFORMATION?         11510000         BNER  R1
4                 NOT YET, KEEP CHECKING               11520000         B     OV
RDREAD            YES, IGNORE THIS RECORD              11530000ONOREDUN DS    0H
                                                       11540000           SPACE
3                                                        11550000***************
**********************************************           11560000*        SEE IF
 THIS SFR IS ELIGIBLE TO RUN ON THE CURRENT  *           11570000*        SYSTEM
.+                                             *           11580000************
 *************************************************           11590000         SP
ACE 1                                                        11600000         TM
    SFRSYSID,255-C' '   "ANY"?                               11610000         BZ
    SYSIDOK1              YES, PERMIT THIS SFR                 11620000
CLC   MYSYSID,SFRSYSID    NO, RIGHT SYSID?                     11630000
#TEST SIZE=(L'MYSYSID,EQ,L'SFRSYSID)                           11640000
BNE   OVRDREAD            NO,   IGNORE THIS SFR                  11650000SYSIDOK
1 DS    0H                  YES, PERMIT THIS SFR                 11660000
  SPACE 3                                                        11670000*******
********************************************  **********           11680000*
    SEE IF THIS SFR IS SELECTED FOR THE CURRENT DATE.  *           11690000*****
********************************************************           11700000
    SPACE 1                                                          11710000
      LA    R1,NOWTIME          --> CURRENT DATE                     11720000
      BAL   R14,DATESCRN        IS THIS SFR SCHEDULED FOR TODAY?     11730000
      B     OVRDREAD            +0 NO, GO READ THE NEXT SFR          11740  000*
        FALL THROUGH              +4 YES, PROCEED                      11750000
        SPACE 3                                                        11760000*
************************************************************           11770000*
        I   HAVE A NEW OVERRIDE NAME FOR TODAY. ADD IT TO    *           1178000
0*        THE LIST.                                          *           1179000
0*************************************************************           1180000
0         SPACE 1                                                          11810
000         LA    R1,OVRDLIST         --> LIST SPACE                       11820
000         AH    R1,=Y(OVRDLEND-L'SFRNAME-OVRDLIST) --> LAST SLOT         11830
000         C     R1,OVRDEOL          W  ILL THIS OVERFLOW THE LIST?         118
40000         #DIE  L,'OVERRIDE TABLE OVERFLOW' YES, TERMINATE               118
50000         L     R1,OVRDEOL          NO, --> EO-LIST SO FAR               118
60000         MVC   0(L'SFRNAME,R1),SFRNAME SAVE OVERR  IDDEN APPLICATION NAM  1
1870000         LA    R1,L'SFRNAME(,R1)   ADVANCE EOL PTR                      1
1880000         ST    R1,OVRDEOL          STORE                                1
1890000         B     OVRDREAD            READ NEXT RECORD
 11900000OSFREOF  DS    0H
 11910000         TITLE 'SCHEDRUN -- PROCESS THE SCHEDULE FILE'
 11920000*************************************************************
 119  30000*        READ THE NEXT SCHEDULE FILE RECORD.                *
   11940000*************************************************************
   11950000         SPACE 1
   11960000        +  XC    SFRKEY,SFRKEY       INITIALIZE 2 READ FORWARD SEQUEN
TIAL 11970000NEXT  SFR  GSAMCALL READ,OPTIONS=(UPDATE,FWD,SEQ),MF=(E,GSB)
       11980000         LTR   R15,R15             GOT NEXT RECORD?
       11990000         BZ    GOTSFR              YES, PROCEED
       12000000         CH    R1  5,=Y(GSAMEKEY)    NO, EOF?
         12010000         #DIE  NE,'GSAM ACCESS ERROR (READ BACKWARDS)'
         12020000         CLI   GSBVSAM+3,4         MAYBE, CHECK AGAIN
         12030000         #DIE  NE,'GSAM ACCESS   ERROR (READ BACKWARDS)'
           12040000         B     SFREOF              YES, EOP
           12050000         SPACE 1
           12060000GOTSFR   CLC   SFRKEY,SFMRKEY-SFMR+MASTER M  ASTER RECORD?
             12070000         BE    SFREOF              YES, JUST LIKE EOF
             12080000         SPACE 3
             12090000********************************************************  *
****           12100000*        IF THE RECORD JUST READ HAS ALREADY BEEN FLAGGED
   *           12110000*        OBSOLETE, THEN SKIP IT.
   *           12120000*********************************************************
****             12130000         SPACE 1
                 12140000         TM    SFRFLAG,SFRFOBSO    OBSOLETE RECORD?
                 12150000         BNZ   NEXTSFR             YES, SKIP IT
                 12160000           SPACE 3
                   12170000*****************************************************
********           12180000*        SEE IF THIS SFR IS ELIGIBLE TO RUN ON THE CU
RRENT  *           12190000*        SYSTEM  .
         *           12200000***************************************************
**********           12210000         SPACE 1
                     12220000         TM    SFRSYSID,255-  C' '   "ANY"?
                       12230000         BZ    SYSIDOK2            YES, PERMIT TH
IS SFR                 12240000         CLC   MYSYSID,SFRSYSID    NO, RIGHT SYSI
D?                     12250000         #TEST SIZE=(L'MYSYSID,EQ,L'SFRSY  SID)
                         12260000         BNE   NEXTSFR             NO, IGNORE T
HIS SFR                  12270000SYSIDOK2 DS    0H                  YES, PERMIT
THIS SFR                 12280000         SPACE 3
                           12290000*********************************************
****************           12300000*        VALIDATE THIS SFR'S LAST EXECUTION T
IME AGAINST    *           12310000*        THE CURRENT TIME. IF SFRXTIME IS HIG
H, THEN IT IS  *             12320000*        CONSIDERED INVALID AND IS CLEARED.
                 *           12330000*******************************************
******************           12340000         SPACE 1
                             12350000            _          CLC   SFRXTIME,NOWTI
ME    IS LAST XEQ TIME VALID?              12360000         BNH   XTIMEOK
      YES, PROCEED                         12370000         XC    SFRXTIME,SFRXT
IME   NO, CLEAR IT TO ZERO                 12380000X  TIMEOK  DS    0H
                                             12390000         SPACE 3
                                             12400000***************************
**********************************           12410000*        SEE I  F THIS SFR
IS SELECTED FOR THE CURRENT DATE.  *           12420000*************************
************************************           12430000         SPACE 1
                                               12440000         LA    R1,NOWTIME
            --> CURRENT DATE                     12450000         BAL   R14,DATE
SCRN        IS THIS SFR SCHEDULED FOR TODAY?     12460000         B     CHKOBSOL
            +0 NO, GO SEE IF IT IS OBSOLETE      12470000         CLC   SFRHM,NO
WHM         +4 YE  S, HAS TODAY'S START TIME       12480000*
                 ARRIVED YET?                      12490000         BH    CHKFUT
UR            NO, GO SEE IF I NEED TO RESET THE    12500000*
              NEXT SCHEDRUN TIME                     12510000*        FALL THROU
GH              YES, PROCEED. NOTE, R15 CONTAINS THE 12520000*
                EXECUTION TIME IN MINUTES.           12530000         SPACE 3
                                                       12540000*****************
********************************************           12550000*        I NOW HA
VE A COMMAND WHICH IS SCHEDULED FOR TODAY  *           12560000*        AT SOME
TIME PRIOR TO THIS MOMENT. I MUST NOW      *           1257000  0*        CHECK
TO SEE IF THE CURRENT TIME FALLS WITHIN THIS *           12580000*        COMMAN
D'S EXECUTION WINDOW.                        *           12590000***************
**********************************************           12600000         SPA  C
E 1                                                        12610000         SR
  R1,R1                                                    12620000         ICM
  R1,3,SFRWHR         GET WINDOW HH                        12630000         MH
  R1,=H'60'             CNVRT TO MINUTES                     12640000         AH
    R1,SFRWMN           ADD MM                               12650000         AR
    R1,R15              ADD TO SCHEDULED TIME                12660000         CL
    R1,NOWMINS          DOE  S NOW FALL WITHIN THE WINDOW?     12670000
BNH   NEXTSFR             NO, LOOP FOR NEXT SFR                12680000
SPACE 1                                                        12690000
CLC   SFRXTIME,WRKPTIME   YES, HAS THIS CO  MMAND ALREADY BEEN   12700000*
                            EXECUTED IN THIS SAME WINDOW?        12710000
  BL    WNDOWOK             NO, PROCEED WITH CMD EXECUTION       12720000
  TM    SFRFLAG,SFRFIPLF    YES, CAN AN INTERVENING IPL F+ ORCE    12730000*
                              REEXECUTION OF THIS COMMA  ND IN THIS  12740000*
                                SAME WINDOW?                         12750000
      BZ    NEXTSFR             NO, FORGET IT                        12760000
      CLC   SFRXTIME,IPLTIME    YES, HAS AN IPL OCCURED SINCE THE    1  2770000*
                                  LAST EXECUTION OF THIS COMMAND?      12780000
        BH    NEXTSFR             NO, FORGET IT                        12790000W
NDOWOK  DS    0H                                                       12800000
          SPACE 3                                                        1281000
0*************************************************************           1282000
0*        I NOW HAVE A COMMAND THAT IS SCHEDULED TO EXECUTE  *           1283000
0*        NOW. IF TH  IS IS NOT AN OVERRIDE COMMAND, THEN I    *           12840
000*        MUST NOW CHECK THE APPLICATION OVERRIDE LIST TO    *           12850
000*        INSURE THAT THIS COMMAND IS NOT OVERRIDDEN.        *           12860
000********************************  *****************************           128
70000         SPACE 1                                                        128
80000         TM    SFRFLAG,SFRFOVRD    IS THIS AN OVERRIDE COMMAND?         128
90000         BNZ   OVRDNO              YES, CMD N  OT OVERRIDDEN              1
2900000         LA    R1,OVRDLIST-L'SFRNAME NO, LOAD BXH SCANNER               1
2910000         LA    R2,L'SFRNAME        LOAD BXH INCRIMENT                   1
2920000         L     R3,OVRDEOL          --> EO-LIST
 12930000         SR    R3,R2               LOAD BXH LIMIT
 12940000         BALR  R14,0               LOAD LOOP HEAD
 12950000         BXH   R1,R2,OVRDNO        SCAN TO NEXT LIST ENTRY
   12960000         CLC   0(L'SFRNAME,R1),SFRNAME IS THIS APPLICATION OVERRIDDEN
?  12970000         BNER  R14                 NOT YET; KEEP CHECKING
   12980000         B     NEXTSFR             YES, DON'T EXECUTE THIS SFR'S CMD
   12990000OVRD  NO   DS    0H
     13000000         SPACE 3
     13010000*************************************************************
     13020000*        THE COMM  AND IS TO BE EXECUTED. FIRST UPDATE THIS   *
       13030000*        SFR.                                               *
       13040000*************************************************************
       13050000         SPACE 1
         13060000         MVC   SFRXTIME,NOWTIME    SET NEW EXECUTION TIME
         13070000         GSAMCALL REWRITE,MF=(E,GSB) REWRITE THIS SFR
         13080000         LTR   R15,R15             AOK?
           13090000         #DIE  NZ,'GSAM ACCESS ERROR (REWRITE)'
           13100000         SPACE 3
           13110000********************************************************+ ***
**           13120000*        ISSUE THE COMMAND.  IF THE COMMAND HAS BEEN
   * 10/90 MDL 13130000*        SCHEDULED USING THE "MASTER" OPTION, INVOKE
   * 10/90 MDL 13140000*        SVC-34 WITH THE MASTER CONSOLE'S UCMID.
   * 10/90 MDL 13150000*********************************************************
****             13160000         SPACE 1
                 13170000         MODESET KEY=ZERO,MODE=SUP GET PRIVILEGED
                 13180000         SR    R0,R0               CLEAR UCMID INFO
                 131900  00         TM    SFRFLAG,SFRFMAST    MASTER CONSOLE COM
MAND?    10/90 MDL 13200000         BZ    MGCR                NO.  LEAVE UCMID Z
EROED    10/90 MDL 13210000         IC    R0,UCMASTER         YES. LOAD MASTER U
CMID     10/90 MDL 13220000MGCR     MG  CR  SFRCMDL             ISSUE THE COMMAN
D          10/90 MDL 13230000         LR    R2,R15              SAVE THE RETURN
CODE                 13240000         MODESET KEY=NZERO,MODE=PROB GET NORMAL
                     13250000         SPACE 3
                       13260000*************************************************
************           13270000*        LOG THE COMMAND JUST ISSUED
           *           13280000*************************************  **********
**************           13290000         SPACE 1
                         13300000         TM    DCBOFLGS-IHADCB+LOGDCB,DCBOFOPN
IS LOG OPEN?             13310000         BZ    NEXTSFR             NO, SKIP
                           13320000         CVD   R2,DSAWORK          CNVRT SVC-
34 RC TO DECIMAL           13330000         MVC   LOGRCDRC(L'LOGRCDRC+1),EDMASKZ
-L'LOGRCDRC EDIT MASK      13340000         MVC   LOGRCDRC+L'LOGRCDRC+1,LOGRCDRC
+L'LOGRCDRC PROPAG  ATE PAD  13350000         LA    R1,LOGRCDRC+L'LOGRCDRC PRIME
 FOR EDMK                    13360000         EDMK  LOGRCDRC-1(L'LOGRCDRC+1),DSA
WORK+8-(L'LOGRCDRC+1)/2      13370000         MVC   LOGRCDRC,0(R1)      LEFT ADJ
UST THE TEXT                 1338  0000         MVC   LOGRCDGU+1,LOGRCDGU CLEAR
THE GUTTER                     13390000         LTR   R2,R2               WAS SV
C-34 OK?                       13400000         BNZ   CMDNOK1             NO, MS
G IS DONE                      13410000           MVC   LOGRCDRC(2),=C'OK'  YES,
 SAY "NO ERROR"                  13420000CMDNOK1  DS    0H
                                 13430000         SPACE 1
                                 13440000         LH    R1,SFRC  MDL          GE
T L'CMD+4                          13450000         SH    R1,=H'5'            GE
T L'CMD-1; NULL?                   13460000         BM    LOGNULL             YE
S, SKIP                            13470000         MVC   LOGRCMD(*-*),SFRCMD
(EXECUTED)                           13480000         EX    R1,*-6
NO, COPY TO LOG RECORD               13490000LOGNULL  LA    R1,LOGRCMD+5-LOGRCD(
R1) GET L'LOG RECORD+4               13500000         STH   R1,LOGRCD-4
STORE FOR REC+ FM=VB                   13510000         PUT   LOGDCB,LOGRCD-4
  WRITE THE   LOG RECORD                 13520000         B     NEXTSFR
    LOOP FOR THE NEXT SFR                13530000         EJECT ,
                                         13540000*******************************
**************************  ****           13550000*        THE CURRENT SFR IS S
CHEDULED TO BE EXECUTED TODAY, *           13560000*        BUT NOT YET. R15 CON
TAINS THE SCHEDULED TIME IN    *           13570000*        MINUTES. SEE IF IT I
S THE SOONEST SO FAR. IF SO,   *             13580000*        THEN:
                                 *           13590000*              - IF IT IS A
N OVERRIDE, THEN USE IT.         *           13600000*              - IF IT IS N
OT AN OVERRIDE, THEN I MUST      *           13610000*                  CHECK TH
E OVERRIDE LIST. IF THIS SFR IS    *           13620000*                OVERRIDD
EN TODAY, THEN I CAN SKIP IT.      *           13630000*        IF THIS SFR PASS
ES THE ABOVE TESTS, THEN I MUST    *           13640000*        USE IT   TO ADJU
ST THE SCHEDULED TIME FOR THE NEXT   *           13650000*        EXECUTION OF S
CHEDRUN.                             *           13660000***********************
**************************************           13670000         SPACE 1
                                                   13680000CHKFUTUR CL    R15,NE
XTSCHD        EARLIEST NEXT TIME SO FAR?           13690000         BNL   NEXTSF
R             NO, DONE WITH THIS SFR               13700000         SPACE 1
                                                     13710000         TM    SFRF
LAG,SFRFOVRD    YES, AN OVERRIDE?                    13720000         BNZ   FUTU
SET             YES, USE IT                          13730000         SPACE 1
                                                       13740000         LA    R1
,OVRDLIST-L'SFRNAME NO, --> OVERRIDE LIST              13750000         LA    R2
,L'SFRNAME        GET BXH INCRIMENT                    13760000         L     R3
,OVRDEOL          --> EO-LIST                            13770000         SR
R3,R2               GET BXH LIMIT                        13780000         BALR
R14,0               LOAD LOOP HEAD                       13790000         BXH
R1,R2,FUTUSET       SCAN TO NEXT ENTRY                   13800000           CLC
  0(L'SFRNAME,R1),SFRNAME SFR OVERRIDDEN TODAY?            13810000         BNER
  R14                 NOT YET, CONTINUE SCANNING           13820000         B
  NEXTSFR             YES, SKIP IT                         13830000         SPAC
E   1                                                        13840000FUTUSET  ST
    R15,NEXTSCHD        SET NEW NEXT SCHEDRUN TIME           13850000         B
    NEXTSFR             LOOP FOR NEXT SFR                    13860000         SP
ACE 3                                                          13870000*********
****************************************************           13880000*
THE CURRENT COMMAND WILL NOT EXECUTE TODAY. IT MAY *           13890000*
BE OBSOLETE. IF IT IS OBSOLETE,+  THEN FLAG IT AS    *           13900000*
  SUCH, REWRITE IT, AND THEN   LOOP TO GET THE NEXT    *           13910000*
    RECORD.                                            *           13920000*****
********************************************************           13930000
    SPACE 1                                                          13940000CHK
OBSOL LTR   R14,R14             IS THE CURRENT SFR OBSOLETE?         13950000
      BNM   NEXTSFR             NO, DONE WITH THIS SFR               13960000
      SPACE 1                                                          13970000
        BAL   R14,RCDLOCK         YES, LOCK ONTO THE CURRENT RECORD    13980000
        OI    SFRFLAG,SFRFOBSO    FLAG IT AS OBSOLETE                  13990000
        SPACE 1                                                        140  0000
0         GSAMCALL REWRITE,MF=(E,GSB) REWRITE THIS SFR                   1401000
0         LTR   R15,R15             AOK?                                 1402000
0         BZ    NEXTSFR             YES, LOOP FOR NEXT RECORD            1403000
0           #DIE  'GSAM ACCESS ERROR (REWRITE)'                            14040
000NOTOBSOL DS    0H                                                       14050
000         TITLE 'SCHEDRUN -- TERMINATION'                                14060
000*********************  ****************************************           140
70000*        RELEASE GSAM CONTROL BLOCKS.                       *           140
80000*************************************************************           140
90000         SPACE 1                                                          1
4100000SFREOF   GSAMCALL FINISH,MF=(E,GSB)                                     1
4110000         SPACE 3                                              03/99 DBC 1
4120000***********************************************  ************** 03/99 DBC
 14130000* Determine the controlling JES2's command character        * 03/99 DBC
 14140000* (usually "$").                                            * 03/99 DBC
 14150000************************************************************  * 03/99 D
BC 14160000         SPACE 1                                              03/99 D
BC 14170000         LA    R15,C'$'            ASSUME "$"                 03/99 D
BC 14180000         SPACE 1                                              03/99 D
BC 1  4190000         L     R1,PSATOLD-PSA      --> MY TCB
     14200000         L     R1,TCBJSCB-TCB(,R1) --> MY JSCB
     14210000         L     R1,JSCBACT-IEZJSCB(,R1) --> ACTIVE JSCB
     14220000           L     R1,JSCBSSIB-IEZJSCB(,R1) --> MY SSIB
       14230000         L     R0,SSIBSSNM-SSIB(,R1) GET THE CONTROLLING      03/
99 DBC 14240000*                                  JES2'S NAME                03/
99 DBC 14250000         SPACE 1                                                0
3/99 DBC 14260000         L     R1,CVTPTR           @'CVT                      0
3/99 DBC 14270000         L     R1,CVTJESCT-CVTMAP(,R1) @'JESCT                0
3/99 DBC 14280000         LA    R1,JESSSCT-(SSCTS+ CTA-SSCT)-JESCT(,R1) SSCT
 03/99 DBC 14290000         USING SSCT,R1               DCL SSCT BASE
   03/99 DBC 14300000         BALR  R14,0               TOL: SSCT SEARCH
   03/99 DBC 14310000         ICM   R1,15,SSCTSCTA      @'NEXT SSCT; ANY MORE?
   03/99 DBC 14320000         BZ    COMCHROK            NO, AS  SUME "$" IS OK
     03/99 DBC 14330000         CL    R0,SSCTSNAM         RIGHT SSCT YET?
     03/99 DBC 14340000         BNER  R14                 NO, KEEP SEARCHING
     03/99 DBC 14350000         SPACE 1
       03/99 DBC 14360000         ICM   R1,15,SSCTSUS2      @'HCCT; EXIST?
       03/99 DBC 14370000         DROP  R1                  (DONE W/SSCT BASE)
       03/99 DBC 14380000         BZ    COMCHROK            NO, ASSUME "$" IS OK
       03/99   DBC 14390000         SH    R1,=H'8'            BACK UP A BIT
         03/99 DBC 14400000         USING HCCT-8,R1           DCL HCCT BASE
         03/99 DBC 14410000         CLC   =C'HCCT',0(R1)      RIGHT CBLOCK ID?
         03/99 DBC 14420000           BNE   COMCHROK            NO, ASSUME "$" I
S OK       03/99 DBC 14430000         TM    CCTCOMCH,255-C' '   IS A COMMAND CHA
RACTER     03/99 DBC 14440000*                                  SET?
           03/99 DBC 14450000         BZ      COMCHROK            NO, ASSUME "$"
 IS OK       03/99 DBC 14460000         IC    R15,CCTCOMCH        GET ACTUAL CMD
 CHARACTER   03/99 DBC 14470000         DROP  R1                  DONE W/HCCT BA
SE           03/99 DBC 14480000COMCHROK DS    0H
               03/99 DBC 14490000         SPACE 3
                         14500000***********************************************
**************           14510000*        SCHEDULE THE NEXT SCHEDRUN.
               *           14520000*********************************************
****************           14530000         SPACE 1
                           14540000         MVC   SCHDCMD(SCHDPROL),SCHDPROT GET
 PROTOT  YPE                 14550000         STC   R15,SCHDCMD+$CMDCHR1 SET JES
2'S CMD CHARACTER  11/01 DBC 14560000         STC   R15,SCHDCMD+$CMDCHR2 SET JES
2'S CMD CHARACTER  11/01 DBC 14570000         SPACE 1
                               14580000         L     R15,NEXTSCHD        GET SC
HEDULED TIME                   14590000         S     R15,LASTMNIT        RELATI
VE TO LAST MIDNIGHT            14600000         SR    R14,R14
                               146100  00         D     R14,=F'60'          CNVR
T TO +MM, HH                     14620000         MH    R15,=H'100'         DECI
MAL SHIFT HH 2 PLACES            14630000         AR    R15,R14             CREA
TE HHMM                          14640000         CV  D   R15,DSAWORK         CN
VRT TO DECIMAL                     14650000         UNPK  SCHDCMD+15(4),DSAWORK+
5(3) CNVRT TO EBCDIC               14660000         OI    SCHDCMD+18,B'11110000'
 FIX THE FUCKING SIGN              14670000         MVC   SCHDCMD+1+ 4(2),SCHDCM
D+15 ADJUST POSITIONING              14680000         MVI   SCHDC  MD+16,C'.'
  DECORATION                           14690000         SPACE 1
                                       14700000         MODESET KEY=ZERO,MODE=SU
P GET PRIVILEGED                       14710000         SR    R0,R0
    CLEAR UCMID                          14720000         MGCR  SCHDCMD
    SCHEDULE THE NEXT SCHEDRUN           14730000         LR    R2,R15
    SAVE THE RC                          14740000         MODESET KEY=NZERO,MODE
=PROB GET NORMA  L                         14750000         SPACE 3
                                           14760000*****************************
********************************           14770000*        LOG THE ABOVE COMMAN
D AND THEN CLOSE THE LOG.        *           14780000***************************
**********************************           14790000         SPACE 1
                                             14800000         TM    DCBOFLGS-IHA
DCB+LOGDCB,DCBOFOPN IS LOG OPEN?               14810000         BZ    NOLOG2
          NO, SKIP                             14820000         CVD   R2,DSAWORK
          CNVRT SVC-34 RC TO DECIMAL           14830000         MVC   LOGRCDRC(L
'LOGRCDRC+1),EDMASKZ-L'LOGRCDRC EDIT MASK      14840000           MVC   LOGRCDRC
+L'LOGRCDRC+1,LOGRCDRC+L'LOGRCDRC PROPAGATE PAD  14850000         LA    R1,LOGRC
DRC+L'LOGRCDRC PRIME FOR EDMK                    14860000         EDMK  LOGRCDRC
-1(L'LOGRCDRC+1),DSAWORK+8-(L'LOGRCDRC+1)/2      14870000         MVC   LOG  RCD
RC,0(R1)      LEFT ADJUST THE TEXT                 14880000         MVC   LOGRCD
GU+1,LOGRCDGU CLEAR THE GUTTER                     14890000         LTR   R2,R2
              WAS SVC-34 OK?                       14900000         BNZ   CMDNOK
2               YES, PROCEED                         14910000         MVC   LOGR
CDRC(2),=C'OK'  NO, RESET THE MSG                    14920000CMDNOK2  MVC   LOGR
CMD(SCHDPROL-4),SCHDCMD+4 COPY THE RE-SCHED CMD      14930000         #TEST SIZE
=(SCHDPROL-4,LE,L'LOGRCMD  )                           14940000         LA    R1
,SCHDPROL+LOGRCMD-LOGRCD L'RECORD+4                    14950000         STH   R1
,LOGRCD-4         STORE FOR RECFM=VB                   14960000         PUT   LO
GDCB,LOGRCD-4     WRITE THE LOG RECORD                   14970000         SPACE
1                                                        14980000         CLOSE
MF=(E,LOGOPEN)      CLOSE THE LOG                        14990000NOLOG2   DS
0H                                                         15000000         SPAC
E 3                                                        15010000*************
************************************************           15020000*        IF R
ESCHEDULING HAS FAILED, THEN ALERT THE         *           15030000*          OP
ERATOR.                                          *           15040000***********
**************************************************           15050000         SP
ACE 1                                                        15060000         LT
R   R+ 2,R2               WAS THE SVC-34 OK?                   15070000
BZ      EXIT                YES, SKIP THIS                       15080000
  MVC   ERRWTOR(ERRWTORL),MERRWTOR NO, GET WTOR PROTOTYPE        15090000
  MVI   WECB,0              CLEAR THE WTOR ECB                   15100000
  WTOR  ,WREPLY,,W  ECB,MF=(E,ERRWTOR) GET OPERATOR'S ATTENTION    15110000
    WAIT  ECB=WECB            WAIT FOR HIM                         15120000
    ABEND 69,DUMP             NOW TERMINATE DRAMATICALLY           15130000
    SPACE 3                                                          15140000***
**********************************************************           15150000*
      RETURN TO CALLER.                                  *           15160000***
************************************************  **********           15170000
        SPACE 1                                                        15180000E
XIT     #EXIT ((R14,R12)),RC=0                                         15190000
        TITLE 'SCHEDRUN -- DATESCRN - DATE SCREENING ROUTINE'            1520000
0*************************************************************           1521000
0*                                                           *           1522000
0*        DATESCRN -- THIS ROUTINE SCREENS THE CURRENT       *           15230
000*        SCHEDULE FILE RECORD AGAINST A GIVEN DATE TO SEE   *           15240
000*        IF THE RECORD IS SELECTED BY THAT DATE.            *           15250
000*                                                           *           15260
000*        N  OTE, IN THE COMMENTARY FOR THIS ROUTINE ALL       *           152
70000*        REFERENCES TO THE "CURRENT DATE" SHOULD BE TAKEN   *           152
80000*        TO MEAN THE SELECTION DATE.                        *           152
90000*                                                             *           1
5300000*        INPUTS:                                            *           1
5310000*              - R1 POINTS TO THE SELECTION DATE (TIMESTAMP *           1
5320000*                FORM).                                       *
 15330000*              - R14 POINTS TO A RETURN ADDRESS.            *
 15340000*              - SFR CONTAINS THE CURRENT SCHEDULE FILE     *
 15350000*                RECORD.                                      *
   15360000*                                                           *
   15370000*        RETURN 0(,R14):                                    *
   15380000*              - THE CURRENT SFR IS REJECTED. IT IS NOT     *
     15390000*                SELECTED BY THE GIVEN DATE.                *
     15400000*              - R14: THE HIGH-ORDER BIT IS SET ON IF THE   *
     15410000*                SFR IS OBSOLETE WITH RESPECT TO THE GIVEN  *
     154  20000*                DATE; OTHERWISE, IT IS SET OFF.            *
       15430000*              - ALL OTHER REGISTERS ARE RESTORED.          *
       15440000*              - WRKPTIME AND WRKNTIME ARE ALTERED IN AN    *
       15450000*       +          UNUSEFUL WAY.                              *
         15460000*                                                             *
           15470000*        RETURN 4(,R14):                                    *
           15480000*              - THE CURRENT SFR IS ACCEPTED. IT IS         *
           15490000*                  SELECTED BY THE GIVEN DATE.
 *           15500000*              - R14: THE HIGH-ORDER BIT IS SET OFF
 *           15510000*                SIGNIFYING THAT THE SFR IS NOT OBSOLETE
 *           15520000*                WITH RESPECT   TO THE GIVEN DATE.
   *           15530000*              - R15 CONTAINS THE SCHEDULED EXECUTION TIM
E  *           15540000*                IN MINUTES (SINCE THE START OF THE
   *           15550000*                CENTURY).
     *           15560000*              - ALL OTHER REGISTERS ARE RESTORED.
     *           15570000*              - WRKPTIME CONTAINS THE SCHEDULED EXECUT
ION  *           15580000*                TIMESTAMP.
       *           15590000*              - WRKNTIME HAS BEEN ALTERED IN AN UNUS
EFUL   *           15600000*                WAY.
       *           15610000*
       *             15620000***************************************************
**********           15630000         SPACE 1
                     15640000DATESCRN LA    R14,0(,R14)         CLEAR THE HIGH-B
IT                   15650000           STM   R14,R2,SAVDATSC     SAVE REGISTERS
                       15660000         SPACE 1
                       15670000         LR    R2,R1               COPY THE SELEC
TION TIMESTAMP PTR     15680000         USING   TIME,R2             DCL THE TIME
STAMP BASE               15690000         SPACE 3
                         15700000***********************************************
**************           15710000*        GENERATE A START DA  TE BY SUBSTITUTIN
G CURRENT DATE *           15720000*        VALUES INTO THOSE FIELDS OF THE SFR
ASSIGNED DATE  *           15730000*        THAT CONTAIN ZEROS. IF THE RESULTING
 DATE FALLS    *           15740000*        PAST THE VALID END OF THE MONTH,   T
HEN ADJUST THE   *           15750000*        DAY TO BE THE LAST DAY OF THAT MON
TH.              *           15760000*******************************************
******************           15770000         SPACE 1
                               15780000         MVC   WRKPTIME,SFRTIME    COPY T
HE SFR ASSIGNED TIME TO A WORK 15790000*                                  AREA
                               15800000         SPACE 1
                                 15810000         ICM   R1,3,WRKPYR         IS A
 YEAR ASSIGNED?                  15820000         BNZ   GOTYR               YES,
 SKIP                            15830000         MVC   WRKPYR,TIMEYR       NO,
SET TO THE CURRENT YEAR          15840000            _ GOTYR    DS    0H
                                               15850000         SPACE 1
                                               15860000         ICM   R1,3,WRKPM
O         IS A MONTH ASSIGNED?                 15870000           BNZ   GOTMO
            YES, SKIP                            15880000         MVC   WRKPMO,T
IMEMO       NO, SET TO THE CURRENT MONTH         15890000GOTMO    DS    0H
                                                 15900000         SPACE   1
                                                   15910000         ICM   R1,3,W
RKPDY         IS A DAY ASSIGNED?                   15920000         BNZ   GOTDY
              YES, SKIP                            15930000         MVC   WRKPDY
,TIMED  Y       NO, SET TO THE CURRENT DAY           15940000GOTDY    DS    0H
                                                     15950000         SPACE 1
                                                     15960000         LH    R1,W
RKPMO           GET T  HE MONTH VALUE                  15970000         AR    R1
,R1               CNVRT TO A HWORD OFFSET              15980000         LA    R0
,=Y(0,31,28,31,30,31,30,31,31,30,31,30,31) MO LENS     15990000         AR    R1
,R0               --> THIS MONTH'S L  ENGTH              16000000         LH
R0,WRKPDY           GET THE DAY VALUE                    16010000         CH
R0,0(,R1)           VALID FOR THIS MONTH?                16020000         BNH
GOTDYOK             YES, NO ADJUSTMENT NEEDED              16030000         LH
  R0,0(,R1)           NO, RESET TO THE MONTH'S LAST DAY    16040000         TM
  WRKPYR+1,B'00000011' IS THIS A LEAP YEAR?                16050000         BNZ
  GOTDYSET            NO, SKIP                             1606000  0         CL
I   WRKPMO+1,2          YES, IS THIS FEBRUARY?               16070000         BN
E   GOTDYSET            NO, SKIP                             16080000         LA
    R0,29               YES, RESET TO LEAP-FEB'S LAST DAY    16090000GOTDYSET ST
H     R0,WRKPDY           RESET DAY TO EO-MONTH                16100000
SPACE 1                                                        16110000GOTDYOK
MVC   WRKNTIME,WRKPTIME   PRIME "WRKN" = "WRKP"                16120000
SPACE 3                                                          16130000*******
******************************************************           16140000*
  ADJUST THE GENERATED START DATE SO THAT "WRKPTIME" *           16150000*
  CONTAINS EITHER TODAY OR THE   MOST RECENT PRIOR     *           16160000*
    EXECUTION DATE, AND "WRKNTIME" CONTAINS EITHER     *           16170000*
    TODAY OR THE EARLIEST NEXT EXECUTION DATE FOR THIS *           16180000*
    SCHEDULED COMMAND (UNLESS THE RANGE OF POS  SIBLE    *           16190000*
      EXECUTION DATES DOES NOT SPAN THE CURRENT DATE IN  *           16200000*
      WHICH CASE ONE OR THE OTHER OF "WRKPTIME" OR       *           16210000*
      "WRKNTIME" WILL CONTAIN AN INCORRECT VALUE BUT THE *   +         16220000*
        ERROR WILL BE SUCH THAT THE VALIDITY OF SUBSEQUENT   *           1623000
0*        TESTS WILL NOT BE AFFECTED).                       *           1624000
0*************************************************************           1625000
0         SPACE 1                                                        1  6260
000         CLC   WRKPYMD,TIMETIME    WHICH WAY DO I HAVE TO               16270
000*                                  TIME-TRAVEL?                         16280
000         BE    CHKWDY              NIETHER; GO PERFORM WEEKDAY          16290
000*                                    MODIFICATION                         163
00000         BH    ROLLBACK            BACKWARDS; GO DO IT                  163
10000*        FALL THROUGH              FORWARDS; GO DO IT                   163
20000         SPACE 3                                                          1
6330000*************************************************************           1
6340000*        THE GENERATED DATE FALLS PRIOR TO THE CURRENT      *           1
6350000*        DATE. ENTER A LOOP TO A  DJUST THE DATE FORWARD IN   *
 16360000*        TIME EITHER UNTIL A FUTURE DATE IS ACHIEVED OR     *
 16370000*        UNTIL THE DATE OVERFLOWS BACK TO EITHER THE SAME   *
 16380000*        DATE OR A PRIOR DATE (IN WHICH CASE   THIS SCHEDULED *
   16390000*        COMMAND WILL NEVER BE EXECUTED AGAIN).             *
   16400000*************************************************************
   16410000         SPACE 1
     16420000ROLL4WRD MVC   WRKPTIME,WRKNTIME   NEXT IS STILL IN THE PAST. COPY
     16430000*                                  IT IN CASE IT TURNS OUT TO BE TH
E    16440000*                                  MOST RECENT PAST DATE FOR THIS S
FR.    16450000         SPACE 1
       16460000         LA    R0,1                LOAD AN ARITHMATIC "CARRY" SIG
NAL.   16470000*                                  ASSUME "CARRY"
       16480000           ICM   R1,3,SFRDY          IS THE DAY SPECIFICALLY DEFI
NED?     16490000         BNZ   GOTDYF              YES, GO STORE IT
         16500000         SR    R0,R0               NO, ASSUME "NO CARRY"
         16510000         LH    R1  ,WRKNDY           GET DAY VALUE
           16520000         LA    R1,1(,R1)           ADVANCE A DAY
           16530000         CH    R1,=H'31'           OVERFLOW? (NOTE, THE "FIND
MINS"      16540000*                                    ROUTINE COMPENSATES FOR
SHORTER      16550000*                                  MONTHS)
             16560000         BNH   GOTDYF              NO, GO STORE NEW DAY
             16570000         BCTR  R0,0                YES, SIG  NAL "CARRY"
               16580000         LA    R1,1                RESET TO START OF NEXT
 MONTH         16590000GOTDYF   STH   R1,WRKNDY           STORE NEW DAY VALUE
               16600000         SPACE 1                                        +
                 16610000         LTR   R0,R0               WAS THERE A CARRY
TO THE MONTHS      16620000*                                  VALUE?
                   16630000         BZ    VCHKINCR            NO, GO TEST THE NE
W DATE             16640000         ICM   R1,3,SFRMO          YES, IS THE MONTH
SPECIFICALLY         16650000*                                  ASSIGNED?
                     16660000         BNZ   GOTMOF              YES, GO STORE IT
 ("CARRY" IS SET)    16670000         SR    R0,R0               NO, SET "NO CARR
Y"                   166800  00         LH    R1,WRKNMO           GET MONTH VALU
E                      16690000         LA    R1,1(,R1)           INCRIMENT IT
                       16700000         CH    R1,=H'12'           OVERFLOW?
                       16710000         BN  H   GOTMOF              NO, GO STORE
 NEW VALUE               16720000         BCTR  R0,0                YES, RESTORE
 "CARRY" SIGNAL          16730000         LA    R1,1                RESET TO 1ST
 MONTH OF NEXT YEAR      16740000GOTMOF   STH   R1,WRKNMO             STORE NEW
MONTH VALUE                16750000         SPACE 1
                           16760000         LTR   R0,R0               WAS THERE
A CARRY TO THE YEAR VALUE? 16770000         BZ    VCHKINCR            NO  , GO T
EST THE NEW DATE             16780000         ICM   R1,3,SFRYR          YES, IS
THE YEAR SPECIFICALLY        16790000*                                  ASSIGNED
?                            16800000         BNZ   GOTYRF              YES, GO
STORE I  T                     16810000         LH    R1,WRKNYR           NO, GE
T OLD YEAR VALUE               16820000         LA    R1,1(,R1)           INCRIM
ENT IT                         16830000GOTYRF   STH   R1,WRKNYR           STORE
NEW YEAR VALUE                   16840000         SPACE 1
                                 16850000VCHKINCR CLC   WRKPYMD,WRKNYMD     DID
THE DATE ADVANCE?                16860000         BL    VCHKSCHD            YES,
 GO SEE HOW FAR                  1687  0000         OI    SAVDATSC,B'10000000' N
O (BUT IT STILL MIGHT DUE TO       16880000*                                  WE
EKDAY MODIFICATION). PROBABLY THIS 16890000*                                  SF
R IS OBSOLETE. (SAY SO).           16900000           B     CHKWDY
GO CHECK THE WEEKDAY MODIFIER. NOTE, 16910000*
"WRKPTIME" IS GOOD; "WRKNTIME" IS    16920000*
TRASH.                               16930000         SPACE 1
                                       16940000VCHKSCHD CLC   WRKNYMD,TIMETIME
  YES, DID THE DATE REACH THE PRESENT  16950000*
  OR FUTURE?                           16960000         BL    ROLL4WRD
    NO, LOOP TO TRY AGAIN                16970000         B     CHKWDY
    YES, GO EXAMINE WEEKDAY MODIFICATION 16980000         SPACE 3
                                         16990000*******************************
*****************+ *************           17000000*        THE GENERATED DATE F
ALLS AFTER THE   CURRENT DATE.   *           17010000*        ENTER A LOOP TO AD
JUST THE DATE BACKWARDS IN TIME  *           17020000*        EITHER UNTIL A PAS
T DATE IS ACHIEVED OR UNTIL THE  *           17030000*        DATE UNDERFLOWS BA
CK TO EITHER THE SAME DATE OR   A  *           17040000*        MORE FUTURE DATE
 (IN WHICH CASE THIS SCHEDULED     *           17050000*        COMMAND HAS NEVE
R YET BEEN EXECUTED).              *           17060000*************************
************************************             17070000         SPACE 1
                                                 17080000ROLLBACK MVC   WRKNTIME
,WRKPTIME   WRKP IS STILL IN THE FUTURE. COPY    17090000*
            IT IN CASE IT TURNS OUT TO BE THE    17100000*
              EARLIEST FUTURE DATE FOR THIS SFR.   17110000         SPACE 1
                                                   17120000         LA    R0,1
              LOAD AN ARITHMATIC "CARRY" SIGNAL.   17130000*
                ASSUME "CARRY"                       17140000         ICM   R1,3
,SFRDY          IS THE DAY SPECIFICALLY DEFINED?     17150000         BNZ   GOTD
YB              YES, GO STORE IT                     17160000         SR    R0,R
0                 NO, ASSUME "NO CARRY"                17170000         LH    R1
,WRKPDY           GET THE DAY VALUE                    17180000         BCTR  R1
,0                RETREAT A DAY                        17190000         LTR   R1
,R1               UNDERFL  OW?                           17200000         BNZ
GOTDYB              NO, GO STORE NEW VALUE               17210000         BCTR
R0,0                YES, SIGNAL "CARRY"                  17220000         LA
R1,31               RESET TO END OF PRIO  R MONTH (NOTE,   17230000*
                      THE "FINDMINS" ROUTINE COMPENSATES   17240000*
                      FOR SHORTER MONTHS)                  17250000GOTDYB   STH
  R1,WRKPDY           STORE NEW DAY VALUE                    17260000         SP
ACE 1                                                        17270000         LT
R   R0,R0               WAS THERE A CARRY TO THE MONTHS      17280000*
                        VALUE?                               17290000
BZ    VCHKDECR            NO, GO TEST THE NEW DATE             17300000
ICM   R1,3,SFRMO          YES, IS THE MONTH SPECIFICALLY       17310000*
                          ASSIGNED?                            17320000
BNZ     GOTMOB              YES, GO STORE IT ("CARRY" IS SET)    17330000
  SR    R0,R0               NO, SET "NO CARRY"                   17340000
  LH    R1,WRKPMO           GET MONTH VALUE                      17350000
  BCTR  R1,0                  DECRIMENT IT                         17360000
    LTR   R1,R1               UNDERFLOW?                           17370000
    BNZ   GOTMOB              NO, GO STORE NEW VALUE               17380000
    BCTR  R0,0                YES, + RESTORE "CARRY" SIGNAL          17390000
      LA    R1,12               R  ESET TO LAST MONTH OF PRIOR YEAR    17400000G
OTMOB   STH   R1,WRKPMO           STORE NEW MONTH VALUE                17410000
        SPACE 1                                                        17420000
        LTR   R0,R0               WAS THERE A CA  RRY TO THE YEAR VALUE? 1743000
0         BZ    VCHKDECR            NO, GO TEST THE NEW DATE             1744000
0         ICM   R1,3,SFRYR          YES, IS THE YEAR SPECIFICALLY        1745000
0*                                  ASSIGNED?                              17460
000         BNZ   GOTYRB              YES, GO STORE IT                     17470
000         LH    R1,WRKPYR           NO, GET OLD YEAR VALUE               17480
000         BCTR  R1,0                DECRIMENT IT                         174
90000GOTYRB   STH   R1,WRKPYR           STORE NEW YEAR VALUE                 175
00000         SPACE 1                                                        175
10000VCHKDECR CLC   WRKPYMD,WRKNYMD     DID THE DATE RETREAT?                175
20000           BNL   CHKWDY              NO, BUT IT STILL MIGHT DUE TO        1
7530000*                                  WEEKDAY MODIFICATION. NOTE,          1
7540000*                                  "WRKNTIME" IS GOOD. "WRKPTIME" IS    1
7550000*                                    TRASH.
 17560000         CLC   WRKPYMD,TIMETIME    YES, DID IT REACH THE PRESENT OR
 17570000*                                  PAST?
 17580000         BH    ROLLBACK              NO, LOOP TO TRY AGAIN
   17590000*        FALL THROUGH              YES, EXAMINE WEEKDAY MODIFICATION
   17600000         SPACE 3
   17610000***********************************************  **************
     17620000*        PROBABLY VALID BUT CERTAINLY USABLE VALUES FOR     *
     17630000*        "WRKPTIME" AND "WRKNTIME" HAVE BEEN DEVELOPED.     *
     17640000*                                                             * 07/
86 MDL 17650000*        IF THE WEEKDAY MODIFICATION OPERAND CONTAINS A     * 07/
86 MDL 17660000*        MIXED RESULT WHEN TESTED WITH MASK '00C0', THEN    * 07/
86 MDL 17670000*        THE WEEKDAY VALUE IS AN EXACT MATCH MODIFIER, AND  * 07/
86 MDL 1  7680000*        SHOULD BE PROCESSED SEPARATELY FROM THE OTHER      * 0
7/86 MDL 17690000*        POSSIBLE VALUES FOR WEEKDAY.                       * 0
7/86 MDL 17700000*                                                           * 0
7/86 MDL 17710000*          NOW MODIFY EITHER THE PREVIOUS DATE FORWARD OR THE *
           17720000*        NEXT DATE BACKWARD ACCORDING TO WHETHER THE        *
           17730000*        WEEKDAY MODIFICATION IS FORWARDS OR BACKWARDS. IF  *
           17740000*        THE MODIFI  CATION RESULTS IN THE GENERATION OF THE
 *           17750000*        CURRENT DATE, THEN I HAVE A HIT; OTHERWISE I
 *           17760000*        DON'T.
 *           17770000********************************+ *************************
****           17780000         SPACE 1
                 17790000CHKWDY   DS    0H
       07/86 MDL 17800000         TM    SFRWK+1,SFRWKNOT+SFRWKXCT EXACT WEEKDAY
MODIFIER? 86 MDL 17810000         BM    CHKWDY10            YEP, C  HECK EXACT W
EEKDAY OUT /86 MDL 17820000         SPACE 1
         07/86 MDL 17830000         ICM   R1,3,SFRWK          IS THERE A WEEKDAY
 MODIFIER?         17840000         BP    WDY4WRD             YES, FORWARDS; GO
P  ROCESS IT         17850000         BM    WDYBACK             YES, BACKWARDS;
GO PROCESS IT        17860000         SPACE 1
                     17870000         CLC   WRKPYMD,TIMETIME    NO, IS THE EXECU
TION DATE TODAY?       17880000*                                  (NOTE, IF IT I
S, THEN PRECEEDING     17890000*                                  LOGIC FORCES W
RKPTIME=WRKNTIME).     17900000         BE    DSCRRET4            YES, ACCEPT TH
IS SFR; RETURN +4      17910000           B     DSCRRET0            NO, REJECT T
HIS SFR; RETURN +0       17920000         SPACE 2
               07/86 MDL 17930000CHKWDY10 DS    0H
               07/86 MDL 17940000         CLC     WRKPYMD,TIMETIME    IS THE EXE
CUTION DATE TODAY? /86 MDL 17950000         BNE   DSCRRET0            NO. REJECT
 THIS SFR; RETURN07/86 MDL 17960000         SPACE 1
                 07/86 MDL 17970000         LA    R1,TIMETIME           --> CURR
ENT TIME/DATE      07/86 MDL 17980000         BAL   R14,FINDMINS        CNVRT TO
 MINUTES IN CENTURY07/86 MDL 17990000         BAL   R14,FINDWKDY        CNVRT TO
 DAY IN WEEK       07/86 MDL 18000000         TM    SFRWK+1,SFRWKXCT    WEEK  DA
Y MUST MATCH?        07/86 MDL 18010000         BO    CHKWDY20            YES, G
O CHECK IT OUT       07/86 MDL 18020000*                                  NO, IT
 MUST NOT MATCH      07/86 MDL 18030000         O     R15,=A(SFRWKNOT)    EXTRA
BIT INTO DA  Y IN WEEK 07/86 MDL 18040000         CLM   R15,1,SFRWK+1       COMP
ARE VALUES OF DAY IN WEEK 86 MDL 18050000         BNE   DSCRRET4            NO M
ATCH, ACCEPT SFR, RET +4 /86 MDL 18060000         B     DSCRRET0            MATC
H, REJECT SFR, RETURN +0 /  86 MDL 18070000         SPACE 1
                         07/86 MDL 18080000CHKWDY20 DS    0H
                         07/86 MDL 18090000         O     R15,=A(SFRWKXCT)    EX
TRA BIT INTO DAY IN WEEK 07/86 MDL 181000  00         CLM   R15,1,SFRWK+1
COMPARE VALUES OF DAY IN WEEK 86 MDL 18110000         BE    DSCRRET4
MATCH, ACCEPT SFR, RETURN +4 /86 MDL 18120000         B     DSCRRET0
NO MATCH, REJECT SFR, RET +0 /86 MDL 18130000         SP  ACE 3
                                       18140000*********************************
****************************           18150000*        THE WEEKDAY MODIFICATION
 IS FORWARDS               *           18160000************************+ *******
******************************           18170000         SPACE 1
                                           18180000WDY4WRD  LA    R1,WRKPTIME
      --> MOST RECENT PRIOR DATE           18190000         BAL   R14,FINDMINS
      CNVRT TO MINUTES SINCE SO-CENTURY    18200000         LR    R0,R15
        SAVE                                 18210000         BAL   R14,FINDWKDY
        CNVRT TO WEEKDAY ID NUMBER           18220000         SH    R15,SFRWK
        DISTANCE FROM THE SCHEDULED          18230000*
        WEEKDAY. IS   THE DATE THAT DAY?       18240000         BZ    WDYFCHK
          YES, GO SEE IF THE DATE IS TODAY     18250000         LCR   R15,R15
          NO, RESET THE DIRECTION; IS THE      18260000*
          SCHEDULED WEEKDAY AFTER   THE DATE'S   18270000*
            WEEKDAY?                             18280000         BP    WDYFAVNC
            YES, SKIP                            18290000         LA    R15,7(,R
15)         NO, RESET THE DATE'S WEEKDAY TO        18300000*
              "LAST WEEK"                          18310000WDYFAVNC MH    R15,=Y
(60*24)       CNVRT THE DISTANCE TO MINUTES        18320000         AR    R15,R0
              ADVANCE THE GENERATED DATE           18330000           LA    R1,W
RKPTIME         --> CONVERSION SINK                  18340000         BAL   R14,
MINSTIME        CNVRT MINUTES BACK TO TIMESTAMP      18350000         SPACE 1
                                                     18360000WDYFCHK  CLC   WRK
 PYMD,TIMETIME    IS THE GENERATED DATE TODAY?         18370000         BL    DS
CRRET0            NO, REJECT THE SFR; RETURN +0 (IT    18380000*
                  MAY OR MAY NOT BE OBSOLETE. R14 IS   18390000*
                    ALREADY SET).                        18400000         L
R14,SAVDATSC        (MAYBE, BUT IT DEFINITELY IS NOT -   18410000         LA
R14,0(,R14)          OBSOLETE. INSURE THAT THE -         18420000         ST
R14,SAVDATSC          "OBSOLE  TE" FLAG IS CLEAR)          18430000         BH
  DSCRRET0            NO, REJECT THE SFR; RETURN +0        18440000         B
  WDYFRAME            YES, GO MAKE FINAL TESTS             18450000         SPAC
E 3                                                          18460000***********
**************************************************           18470000*        TH
E WEEKDAY MODIFICATION IS BACKWARDS              *           18480000***********
**************************************************             18490000
SPACE 1                                                        18500000WDYBACK
LA    R1,WRKNTIME         --> EARLIEST FUTURE DATE             18510000
BAL   R14,FINDMINS        CNVRT TO MINUTES SINCE SO-CENTURY    18520000
  LR    R0,R15              SAVE                                 18530000
  BAL   R14,FINDWKDY        CNVRT TO WEEKDAY ID NUMBER           18540000
  AH    R15,SFRWK           DISTANCE FROM THE SCHEDULED          18550000*
         +                    WEEKDAY; IS THE DATE'S WEEKDAY THAT  18560000*
                                DAY?                                 18570000
      BZ    WDYBCHK             YES, GO SEE IF THE DATE IS TODAY     18580000
      BP    WDYBRTRT            NO, THE SCHEDULED WEEKDAY FALLS      18590000*
                                  EARLIER IN THE WEEK THAN THE DATE'S  18600000*
                                  WEEKDAY; PROCEED                     18610000
        LA    R15,7(,R15)         NO, THE SCHEDULED WEEKDAY FALLS      18620000*
                                  LAT  ER IN THE WEEK THAN THE DATE'S    1863000
0*                                  WEEKDAY. ADJUST THE DATE'S WEEKDAY   1864000
0*                                  TO THE PRECEEDING WEEK               1865000
0WDYBRTRT MH    R15,=Y(-60*24)      CNVRT THE DISTAN  CE TO MINUTES AND    18660
000*                                  COMPLEMENT                           18670
000         AR    R15,R0              ADJUST THE DATE BACK IN TIME         18680
000         LA    R1,WRKNTIME         --> CONVERSION SINK                    186
90000         BAL   R14,MINSTIME        CNVRT DATE BACK TO TIMESTAMP         187
00000         SPACE 1                                                        187
10000WDYBCHK  CLC   WRKNYMD,TIMETIME    IS THE GENERATED DATE TODAY?         187
20  000         BNE   DSCRRET0            NO, REJECT THIS SFR                  1
8730000         SPACE 3                                                        1
8740000*************************************************************           1
8750000*        T  HE GENERATED DATE AS MODIFIED BY THE WEEKDAY      *
 18760000*        VALUE IS TODAY. BUT THAT IS NOT ENOUGH. IF THE     *
 18770000*        SFR'S DATE CONTAINS SPECIFIC VALUES FOR MONTH AND  *
 18780000*        YEAR, THEN THE   WEEKDAY MODIFICATION MUST NOT       *
   18790000*        CHANGE THOSE VALUES.                               *
   18800000*************************************************************
   18810000         SPACE 1
     18820000WDYFRAME SR    R1,R1               CLEAR FOR INSERTS
     18830000         ICM   R1,3,SFRYR          IS A SPECIFIC YEAR ASSIGNED?
     18840000         BZ    WDYYROK             NO, SKIP
       18850000         CH    R1,TIMEYR           YES, CHANGED?
       18860000         BNE   DSCRRET0            YES, REJECT THIS SFR
       18870000         SPACE 1
         18880000WDYYROK  ICM   R1,3,SFRMO          NO, IS A SPECIFIC MONTH ASSI
GNED?    18890000         BZ    DSCRRET4            NO, ACCEPT THIS SFR
         18900000         CH    R1,TIMEMO           YES, CHANGED?
         189  10000         BNE   DSCRRET0            YES, REJECT THIS SFR
           18920000*        FALL THROUGH              NO, ACCEPT THIS SFR
           18930000         SPACE 3
           18940000********+ ***************************************************
**           18950000*          ACCEPT THE SFR. CONSTRUCT THE SCHEDULED TIMESTAM
P  *           18960000*        IN WRKPTIME. GET THE SCHEDULED TIME, IN MINUTES,
   *           18970000*        INTO R15. RETURN +4 TO THE CALLER.
   *           18980000*****************  **************************************
******           18990000         SPACE 1
                 19000000DSCRRET4 MVC   WRKPYMD,TIMEYMD     GET THE SCHEDULED DA
TE               19010000         MVC   WRKPHM,SFRHM          APPEND THE SCHEDUL
ED TIME            19020000         SPACE 1
                   19030000         LA    R1,WRKPTIME         --> TIMESTAMP
                   19040000         BAL   R14,FINDMINS        CONVERT   TO MINUT
ES IN R15            19050000         SPACE 1
                     19060000         L     R14,SAVDATSC        RESTORE R14 WITH
 OBSOLETE=0          19070000         LM    R0,R2,SAVDATSC+8    RESTORE REGISTER
S                      19080000         DROP  R2                  RELEASE TIMEST
AMP BASE               19090000         B     4(,R14)             RETURN +4 TO C
ALLER                  19100000         SPACE 3
                         19110000***********************************************
**************           19120000*        REJECT THE SFR. RETURN +0
             *           19130000***********************************************
**************           19140000           SPACE 1
                           19150000DSCRRET0 LM    R14,R2,SAVDATSC     RESTORE RE
GISTERS                    19160000         BR    R14                 RETURN +0
TO CALLER                  19170000         TITLE   'SCHEDRUN -- FINDTIME/MINSTI
ME - TODC TO TIMESTAMP CONVE*19180000               RSION'
                             19190000*******************************************
******************           19200000*
                   *           19210000*        FINDTIME -- CONVERTS A TIME-OF-D
AY CLOCK VALUE TO  *           19220000*        A TIMESTAMP OF THE FORM YY/MM/DD
/HH/MM.            *           19230000*
                     *           19240000*        MINSTIME - CONVERTS A TIME VAL
UE GIVEN IN MINUTES  *           19250000*        (SINCE THE START OF THE CENTUR
Y) TO A TIMESTAMP.   *           19260000*
                       *           19270000*        INPUTS (FINDTIME):
                       *           19280000*              - R1 POINTS TO A TIMES
TAMP OUTPUT AREA WHICH *           19290000*                CONSISTS OF FIVE CON
SECUATIVE HALFWORDS.   *             19300000*              - DSAWORK CONTAINS A
 TOD CLOCK VALUE.        *           19310000*              - R14 POINTS TO THE
RETURN ADDRESS.          *           19320000*
                         *           19330000            _ *        INPUTS (MINS
TIME):                                 *           19340000*              - R1 P
OINTS TO A TIMESTAMP OUTPUT AREA.      *           19350000*              - R14
POINTS TO A RETURN ADDRESS.            *           19360000*                - R1
5 CONTAINS THE MINUTES VALUE TO BE       *           19370000*                CO
NVERTED.                                 *           19380000*
                                         *           19390000*        RETUR  N 0
(,R14):                                    *           19400000*              -
THE CLOCK VALUE IS CONVERTED AND STORED    *           19410000*
INTO THE AREA POINTED TO BY R1.            *           19420000*              -
ALL REGIST  ERS ARE RESTORED.                *           19430000*
                                             *           19440000***************
**********************************************           19450000         SPACE
1                                                          19460000         USIN
G TIME,R1             DCL TIME BASE                        19470000FINDTIME STM
  R14,R0,SAVFTIME     SAVE REGISTERS                       19480000         LM
  R14,R15,DSAWORK     LOAD TODC VALUE                        19490000         SR
DL  R14,12              CNVRT TO MICROSECONDS                19500000         D
    R14,=F'60000000'    CNVRT TO MINUTES                     19510000         B
    GOTMINUT            SKIP ALTERNATE ENTRY                   19520000
SPACE 3                                                        19530000MINSTIME
STM   R14,R0,SAVFTIME     SAVE REGISTERS                       19540000GOTMINUT
SR    R14,R14                                                  1955000  0
  D     R14,=F'60'          GET +MM, HOURS                       19560000
  STH   R14,TIMEMN          SAVE +MM                             19570000
  SR    R14,R14                                                  19580000
  D       R14,=F'24'          GET +HH, DAYS                        19590000
    STH   R14,TIMEHR          SAVE +HH                             19600000
    SPACE 1                                                        19610000
    LA    R15,1(,R15  )         PRETEND 1900 WAS A LEAPYEAR          19620000
      SR    R14,R14                                                  19630000
      D     R14,=A(365*4+1)     GET +DAYS, QUADYEARS                 19640000
      SLL   R15,2               GET   YEARS (ALMOST)                   19650000
        CH    R14,=H'366'         ANY RESIDUAL YEARS?                  19660000
        BL    GOTYYDDD            NO, SKIP                             19670000
        BCTR  R14,0               YES, DECR FOR LE  APDAY                1968000
0         LR    R0,R15              SAVE QUADYEARS*4                     1969000
0         SRDL  R14,32              SHIFT +DAYS                          1970000
0         D     R14,=F'365'         GET +DAYS, +YEARS            +         19710
000         AR    R15,R0              GET +YEARS                             197
20000GOTYYDDD LA    R15,1900(,R15)      GET YY                               197
30000         STH   R15,TIMEYR          SAVE                                 197
40000         SPACE 1                                                        1
9750000         LA    R14,1(,R14)         CNVRT +DAYS TO 1-ORIGIN              1
9760000         TM    TIMEYR+1,B'00000011' IN A LEAPYEAR?                      1
9770000         BNZ   NRMLYEAR            NO, PROCEED                          1
9780000           CH    R14,=Y(31+29)       YES, PAST THE LEAPDAY?
 19790000         BL    NRMLYEAR            NO, PROCEED
 19800000         BH    LEAPYEAR            YES, MUST ADJUST
 19810000         LA    R15,  2               NO, ON THE LEAP DAY; GET MM
   19820000         LA    R14,29              GET DD
   19830000         B     GOTMMDD             DONE HERE
   19840000LEAPYEAR BCTR  R14,0                 ADJUST FOR THE EXTRA (LEAP) DAY
     19850000NRMLYEAR LA    R15,MONTHSIZ-2      --> MONTH SIZES
     19860000         LR    R0,R15              (SAVE)
     19870000MONSIZLP LA    R15,2(,R15)         --> NEXT M  ONTH SIZE
       19880000         SH    R14,0(,R15)         DECR +DAYS; TOO FAR YET?
       19890000         BP    MONSIZLP            NO, KEEP LOOPING
       19900000         AH    R14,0(,R15)         YES, RESTORE CORRECT DD
         19910000         SR    R15,R0              GET MM*2
         19920000         SRL   R15,1               GET MM
         19930000GOTMMDD  STH   R15,TIMEMO          STORE MM
           19940000         STH   R14,TIMEDY          STORE DD
           19950000         SPACE 1
           19960000         LM    R14,R0,SAVFTIME     RESTORE REGISTERS
           19970000           BR    R14                 RETURN TO CALLER
             19980000         DROP  R1                  RELEASE TIME BASE
             19990000         TITLE 'SCHEDRUN -- FINDMINS - TIMESTAMP TO MINUTES
 CONVERSION' 20000000*****************  ****************************************
****           20010000*
   *           20020000*        FINDMINS -- CONVERTS A TIMESTAMP VALUE TO MINUTE
S  *           20030000*        SINCE THE START OF TH  E CENTURY.
     *           20040000*
     *           20050000*        INPUTS:
     *           20060000*              - R1 POINTS TO A TIMESTAMP.
       *           20070000*              - R14 POINTS TO THE RETURN ADDRESS.
       *           20080000*
       *           20090000*        RETURN 0(,R14):
   +     *           20100000*              - R15 CONTAINS THE MINUTES VALUE.
           *           20110000*              - ALL OTHER REGISTERS ARE RESTORED
.          *           20120000*
           *           20130000*************************************************
************             20140000         SPACE 1
                         20150000         USING TIME,R1             DCL TIME BAS
E                        20160000FINDMINS STM   R14,R0,SAVFMINS     SAVE REGISTE
RS                       201700  00         LH    R15,TIMEYR          GET YY
                           20180000         SH    R15,=H'1900'        CNVRT TO +
YEARS                      20190000         SR    R14,R14
                           20200000         D       R14,=F'4'           CNVRT TO
 +YEARS, QUADYEARS           20210000         MH    R15,=Y(365*4+1)     CNVRT QU
ADYEARS TO DAYS              20220000         BCTR  R15,0               ADJUST F
OR THE FACT THAT 1900 WAS    20230000*                                    NOT A
LEAPYEAR.                      20240000         LTR   R14,R14             ANY +Y
EARS?                          20250000         BZ    NORSDUYR            NO, SK
IP                             20260000         MH    R14,=H'365'         YE  S,
 CNVRT TO +DAYS - 1 (LEAPDAY)    20270000         LA    R15,1(R14,R15)      GET
+DAYS (INCL LEAPDAY)             20280000NORSDUYR DS    0H                  GOT
YY CONVERTED TO DAYS             20290000         SPACE 1
                                   20300000         LH    R14,TIMEMO          GE
T MM                               20310000         AR    R14,R14             CN
VRT TO HWORD OFFSET                20320000         LA    R14,MONTHSIZ-2(R14) --
> SIZE OF THE MM                     20330000         LH    R0,TIMEDY
GET THE DD                           20340000         CH    R0,0(,R14)
IS IT TOO LARGE FOR THIS MM?         20350000         BNH   FMDYOK
NO, PROCEED                          2036  0000         LH    R0,0(,R14)
  YES, USE MAX DD                      20370000         TM    TIMEYR+1,B'0000001
1' IS THIS A LEAPYEAR?                 20380000         BNZ   FMDYOK
  NO, GOT DD                           20390000           CLI   TIMEMO+1,2
    YES, IS THIS FEBRUARY?               20400000         BNE   FMDYOK
    NO, GOT DD                           20410000         LA    R0,29
    YES, (JESUS CHRIST.)                 20420000FMDYOK   BCTR  R0,0
      CNVRT FROM 1-ORIGIN TO 0-ORIGIN      20430000         AR    R15,R0
      ADD DD TO DAYS                       20440000         SPACE 1
                                           20450000FMMSZLP  BCTR  R14,0
        --> PREVIOUS -                       20460000         BCTR  R14,0
         MONTH'S SIZE                        20470000         AH    R15,0(,R14)
        ADD ITS SIZE TO DAYS                 20480000         CLI   1(R14),0
        BACK PAST JAN+ UARY YET?               20490000         BNE   FMMSZLP
          NO, KEEP   LOOPING                     20500000         TM    TIMEYR+1
,B'00000011' YES, IS THIS A LEAP YEAR?           20510000         BNZ   FMNOLPYR
            NO, GAT DAYS (FINALLY)               20520000         CLI   TIMEMO+1
,2          YES, IS MM PAST FEBRUA  RY?            20530000         BNH   FMNOLP
YR            NO, GOT DAYS                         20540000         LA    R15,1(
,R15)         YES, ADJUST DAYS                     20550000FMNOLPYR DS    0H
              GOT DAYS SINCE START OF CENTURY        20560000         SPACE 1
                                                     20570000         MH    R15,
=H'24'          CNVRT TO HOURS                       20580000         AH    R15,
TIMEHR          INCLUDE HH                           20590000           MH    R1
5,=H'60'          CNVRT TO MINUTES                     20600000         AH    R1
5,TIMEMN          INCLUDE MM                           20610000         SPACE 1
                                                       20620000         L     R
 14,SAVFMINS        RESTORE REGISTER                     20630000         L
R0,SAVFMINS+8       RESTORE REGISTERS                    20640000         BR
R14                 RETURN TO CALLER                     20650000         DROP
R1                    RELEASE TIME BASE                    20660000         TITL
E 'SCHEDRUN -- FINDWKDY - FROM GIVEN MINUTES'              20670000*************
************************************************           20680000*
                                                 *           20690000*        FI
NDWKDY -- FINDS THE DAY OF THE WEEK ON WHICH A   *           20700000*        TI
ME VALUE, GIVEN IN MINUTES, FALLS.               *           20710000*
                                                   *           20720000*
INPUTS:                                            *           20730000*
      - R14 POINTS TO THE RETURN ADDRESS.          *           20740000*
      - R15 CONTAINS THE GIVEN TIME VALUE IN       *             20750000*
          MINUTES SINCE THE START OF THE CENTURY.    *           20760000*
                                                     *           20770000*
  RETURN 0(,R14):                                    *           20780000*
          - R15 CONTAINS THE DAY OF THE WEEK.          *           20790000*
            (SUNDAY = 1).                              *           20800000*
          - ALL OTHER REGISTERS ARE RESTORED.          *           20810000*
                                                         *           20820000***
**********************************************************           20830000
      SPACE 1                                                        20840000FIN
DWKDY ST    R14,SAVFWKDY          SAVE REGISTER                        20850000
        SR    R14,R14                                                  20860000
        D     R14,=A(60*24)       CNVRT MINUTES TO DAYS                20870000
        LA    R15,1(,R15)         ADJUS+ T THE ORIGIN                    2088000
0         SR    R14,R14                                                    20890
000         D     R14,=F'7'           GET THE WEEKDAY                      20900
000         LA    R15,1(,R14)         COPY AND CNVRT TO 1-ORIGIN           20910
000         L     R14,SAVFWKDY        RESTORE                                209
20000         BR    R14                 RETURN TO CALLER                     209
30000         TITLE 'SCHEDRUN -- RCDLOCK - LOCK ONTO A SCHEDULE RECORD FOR U*209
40000               PDATE'                                                     2
0950000*************************************************************           2
0960000*                                                           *           2
0970000*        RCDLOCK -- THIS ROUTINE LOCKS ONTO A SCHEDULE FILE *           2
09  80000*        RECORD SO THAT IT CAN BE UPDATED.                  *
 20990000*                                                           *
 21000000*        INPUTS:                                            *
 21010000*                - R14 POINTS TO A RETURN ADDRESS.            *
   21020000*              - SFRKEY CONTAINS THE KEY OF THE RECORD TO   *
   21030000*                BE LOCKED ONTO.                            *
   21040000*                                                             *
     21050000*        RETURN 0(,R14):                                    *
     21060000*              - THE DESIRED RECORD HAS BEEN LOCKED ONTO    *
     21070000*                AND READ INTO THE   SFR BUFFER.              *
       21080000*              - ALL REGISTERS ARE RESTORED.                *
       21090000*                                                           *
       21100000*        EXIT NEXTSFR:                                        *
         21110000*              - THE DESIRED RECORD DOES NOT EXIST IN THE   *
         21120000*                FILE. IT MAY HAVE BEEN DELETED JUST NOW BY *
         21130000*                SOMEONE ELSE.                                *
           21140000*              - R14, R15, R0, AND R1 ARE NOT RESTORED.     *
           21150000*              - ALL OTHER REGISTERS ARE UNCHANGED.         *
           21160000*                                                           *
           2  1170000***********************************************************
**           21180000         SPACE 1
             21190000RCDLOCK  STM   R14,R1,SAVRLOCK     SAVE REGISTERS
             21200000           MVC   SAVEKEY,SFRKEY      SAVE THE DESIRED KEY
               21210000         SPACE 1
               21220000         GSAMCALL READ,OPTIONS=(DIR,UPDATE),MF=(E,GSB)
               21230000         LTR   R15,  R15             GOT THE RECORD?
                 21240000         BZ    LOCKDSFR            YES, PROCEED
                 21250000         CH    R15,=Y(GSAMEKEY)    NO, RNF ERROR?
                 21260000         #DIE  NE,'GSAM ACCESS E+ RROR (READ-UPDATE)'
                   21270000         CLI   GSBVSAM+3,16          MAYBE, CHECK AGA
IN                   21280000         BE    NEXTSFR             YES, LOOP FOR NE
XT RECORD            21290000         #DIE  'GSAM ACCESS ERROR (READ-UPDATE)'
                     21300000         SPACE 1
                       21310000LOCKDSFR CLC   SFRKEY,SAVEKEY      SAME RECORD GO
TTEN?                  21320000         BE    RLOCKRET            YES, RETURN TO
 CALLER                21330000         GSAMCALL RELEASE,MF=(E,GSB) NO, THE SFR
BEING   PROCESSED MUST  *21340000                                   HAVE BEEN DE
LETED BY SOMEONE ELSE    21350000         B     NEXTSFR             LOOP FOR NEX
T RECORD                 21360000         SPACE 1
                           21370000RLOCKRET LM    R14,R1,SAVRLOCK     RESTORE RE
GISTERS                    21380000         BR    R14                 RETURN TO
CALLER                     21390000         TITLE 'SCHEDRUN -- STATIC DATA AREA'
                           21400000  MASTER   SFR   MF=(L,M)
                             21410000         SPACE 3
                             21420000DELAYTIM DC    A(30*100)           30-SECON
D INTERVAL                   21430000         SPAC  E 3
                               21440000         DC    Y(0)
                               21450000MONTHSIZ DC    Y(31,28,31,30,31,30,31,31,
30,31,30,31)                   21460000         SPACE 3
                                 21470000         DC    20X'20',X'2020'     NO F
ORCED SIGNIFICANCE               21480000EDMASKZ  EQU   *
                                 21490000         DC    C' '
                                   21500000         SPACE 3
                                   21510000SCHDPROT DC    Y(SCHDPROL,0)
                                   21520000$CMDCHR1 EQU   *-SCHDPROT          O'
1ST COMMAND CHA  RACTER    11/01 DBC 21530000         DC    C'$TASCHD,T=##.##,''
'                          11/01 DBC 21540000$CMDCHR2 EQU   *-SCHDPROT
O'2ND COMMAND CHARACTER    11/01 DBC 21550000         DC    C'$VS,''''S SCHEDRUN
'''''' '                   11/  01 DBC 21560000SCHDPROL EQU   *-SCHDPROT
                                       21570000         #TEST SIZE=(SCHDPROL,LE,
SCHDCMDL)                              21580000         SPACE 3
                                       215900  00         PRINT NOGEN
                                         21600000MODLDCB  DCB   DSORG=PS,MACRF=P
M,RECFM=VB,LRECL=LOGRCDLN+4,            *21610000               BLKSIZE=4096,DDN
AME=SCHEDLOG                             21620000         PR  INT ON,GEN,NODATA
                                           21630000         SPACE 1
                                           21640000         OPEN  (*-*,OUTPUT),M
F=L                                        21650000MODLEN   EQU   *-MODLDCB+
                                             21660000         SPACE 3
                                               21670000MERRWTOR WTOR  '*** RESCH
EDULING OF SCHEDRUN HAS FAILED. REPLY U TO AKN*21680000               OWLEDGE **
*',                                           *21690000               *-*,L'WREP
LY,*-*,                                         *21700000               ROUTCDE=
(1,2,9,10,11),                                  *21710000               DESC=(2,
7),                                             *21720000               MF=L
                                                   21730000MERRWTOL EQU   *-MERR
WTOR                                               21740000         SPACE 3
                                                   21750000         DC    Y(LMHE
ADL+4,0)                                             21760000LMHEADR  DC    C'ER
ROR   COMMAND   (SCHEDRUN EXECUTING AT '             21770000LMHNOW   DC    C'MM
/DD/YY HH:MM',C' '                                   21780000LMHON    DC    C'ON
 '                                                     21790000LMHSYSID DC    XL
(L'MYSYSID)'00',C'   LAST IPL WAS '                    21800000LMHIPL   DC    C'
MM/DD/YY HH:MM',C')'                                   21810000LMHEADL  EQU   *-
LMHEADR                                                21820000           #TEST
SIZE=(LMHEADL,LE,LOGRCDLN)                               21830000         SPACE
3                                                        21840000         LTORG
,                                                        21850000         TITLE
'SC  HEDRUN -- PASSGARD - SECURITY CONTROL ESTAE'          21860000*************
************************************************           21870000*
                                               *           21880000*        PASS
GARD -- IF "SCHEDR  UN" ABENDS, THEN THIS ESTAE  *           21890000*        RO
UTINE TURNS OFF THE "JSCBPASS" FLAG SO AS TO     *           21900000*        CL
OSE THE POSSIBILITY OF THE CALLER BEING GIVEN    *           21910000*        "B
YPASS PASSWORDS" AUTHORITY.                        *           21920000*
                                                   *           21930000*
THIS ESTAE IS IN EFFECT ONLY WHEN NEEDED.          *           21940000*
                                                     *           21950000*
  INPUTS:                                            *           21960000*
        - R15 POINTS TO THE ENTRY LOCATION.          *           21970000*
        - R14 POINTS TO A RETURN ADDRESS.            *             21980000*
                                                       *           21990000*
    RETURN 0(,R14):                                    *           22000000*
          - THE "JSCBPASS" FLAG IS TURNED OFF.         *           22010000*
            - R15 IS SET TO 0 (SIGNALLING                *           22020000*
              "PERCOLATION").                            *           22030000*
            - NO OTHER REGISTERS ARE RESTORED.           *           22040000*
             +                                             *           22050000*
***********  *************************************************           2206000
0         SPACE 1                                                        2207000
0PASSGARD LR    R12,R15             LOAD LOCAL BASE                      2208000
0         USING PASSGARD,R  12        DECLARE IT                           22090
000         SPACE 1                                                        22100
000         L     R2,PSATOLD-PSA      --> MY TCB                           22110
000         L     R2,TCBJSCB-TCB(,R2) -->   MY JSCB                          221
20000         L     R2,JSCBACT-IEZJSCB(,R2) --> THE ACTIVE JSCB              221
30000         MODESET KEY=ZERO          LOAD KEY-ZERO                        221
40000         NI    JSCBSWT1-IEZJSCB(R2),255-JSCBPASS CL  EAR THE FLAG         2
2150000         SPACE 1                                                        2
2160000         SR    R15,R15             LOAD THE RETURN CODE                 2
2170000         BR    R14                 RETURN TO THE RTM
 22180000         DROP  ,                   RELEASE ALL BASES
 22190000         SPACE 3
 22200000         END   SCHEDRUN
 22210  000./ ADD NAME=SCHEDULE 0100-89335-03239-0929-04552-04356-00000-DBCOLE2
           SCHED    TITLE 'SCHEDULE COMMAND'
   SCHEDULE*************************************************************
   00020000*                                                             *
     00030000* MODULE NAME = SCHEDULE.                                   *
     00040000*                                                           *
     00050000* DESCRIPTIVE NAME = AU  TOMATIC OPERATOR COMMANDS SCHEDULE   *
       00060000*                    MAINTENANCE PROGRAM.                   *
       00070000*                                                           *
       00080000* COPYRIGHT = DAVID B. COLE - 1980,   1999, 2003.             * 0
8/03 DBC 00090000*                                                           *
         00100000* STATUS = RELEASE 2, MODIFICATION LEVEL 7.                 * 0
8/03 DBC 00110000*                                                             *
           00120000* FUNCTION = ADDS, DELETES, AND DISPLAYS ENTRIES IN THE     *
           00130000*            SCHEDULE OF AUTOMATICALLY ISSUED SYSTEM        *
           00140000*            OPERATOR COMMANDS. SUCH ENTRIES IDENTIFY A     *
             00150000*            SYSTEM OPERATOR COMMAND AND DEFINE A SET OF
 *           00160000*            DATES AND A TIME-OF-DAY WHEN (AS WELL AS
 *           00170000*            VARIOUS OTHER CIRCUMSTANCES UNDER WHICH) THAT
 *           001  80000*            COMMAND IS TO BE EXECUTED BY THE SYSTEM. THE
   *           00190000*            COMMAND MAY BE ANY COMMAND (OS, JES2, ETC.)
   *           00200000*            THAT CAN BE ISSUED FROM AN OPERATOR'S CONSOL
E. *           00210000*       +
     *           00220000* PR  OCESSOR = OS/VS ASSEMBLER.
       *           00230000*
       *           00240000* TYPE = TSO COMMAND PROCESSOR.
       *           00250000*
         *           00260000* ATTRIBUTES = TASK MODE, AUTHORIZED, REENTRANT.
         *           00270000*
         *           00280000* DEPENDANCIES = REQUIRES THE   GSAM IUP.
           *           00290000*
           *           00300000* AUTHOR = DAVID B. COLE.
           *           00310000*
             *           00320000***********************************************
**************           00330000         SPACE 3
               03/99 DBC 00340000***********************************************
*********  *****           00350000*
               *           00360000* LEGAL INFORMATION:
               *           00370000*
               *             00380000* This program is copyrighted (c) 1999 by D
avid B. Cole.    *           00390000*
                 *           00400000* This program is distributed freely and ma
y be reproduced  *           00410000*   and redistributed without restriction o
ther than:         *           00420000*   - This copyright and usage/warranty/l
iability           *           00430000*     restriction statement ("Legal State
ment") may not be  *           00440000*     modified   or removed.
                     *           00450000*   - A similar Legal Statement located
 in this program's   *           00460000*     source code and in the Online Hel
p file also may not  *           00470000*     be removed.
                       *           00480000*   - The Online Help File must be in
stalled in a suitable  *           00490000*     "HELP library" (such as SYS1.HE
LP) so that users may  *           00500000*     see both the Legal Statement as
 wel  l as usage         *           00510000*     instruction.
                         *           00520000*
                         *           00530000* This program is distributed witho
ut warranty of any   kind, *           00540000* including (without limitation)
warranties of              *           00550000* merchantability and of fitness
for a particular purpose.  *           00560000* It is up to the user to make hi
s own determination of the *             00570000* usefulness of this program in
 his own system.             *           00580000*
                             *           00590000* The user agrees not to hold m
e (David B. Cole) liable for *           00600000            _ * any damage what
soever, and the user agrees to indemnify   *           00610000* me against thir
d parties for any action arising from the  *           00620000* user's use, mod
ification, and/or redistribution of this   *           00630000*   program.
                                             *           00640000*
                                             *           00650000* This program
may be modified freely so long as all        *           00660000* modification
 s are clearly marked both internally and      *           00670000* externally
to distinguish them from the distributed code  *           00680000* and functio
nallity.                                       *           00690000*
                                                 *           00700000* As a cour
tesy, please notify me if you discover any bugs  *           00710000* or if you
 need to make or have made any code changes. (I  *           00720000* of of cou
rse do not guarantee either t  hat I will or that  *           00730000* I will
not make any future changes or corrections.)       *           00740000*
                                                   *           00750000*********
********************************************  ********           00760000
  TITLE 'SCHEDULE COMMAND -- CHANGE HISTORY'                     00770000*******
****************************************************** 01/03 DBA 00780000* Relea
se 2.7                                               * 01/0  3 DBA 00790000*
                                                       * 01/03 DBA 00800000* Las
t Change Date - January 2003 (David A. Andrews)        * 08/03 DBC 00810000*
                             (A. Duda and Sons, Inc.)  * 08/03 DBC 0082000  0*
                               (dba@duda.com)            * 08/03 DBC 00830000*
                                                         * 01/03 DBA 00840000*
 - SCHEDRUN develops local time from GMT by adding       * 01/03 DBA 00850000*
   the CV  TTZ offset calculated at IPL time to the        * 01/03 DBA 00860000*
     TOD clock.  Unfortunately CVTTZ only has resolution   * 01/03 DBA 00870000*
     of approximately one second.  When SCHEDRUN is        * 01/03 DBA 00880000*
     started precisely a  t midnight, it is possible for     * 01/03 DBA 0089000
0*     SCHEDRUN to believe that local time is still          * 01/03 DBA 0090000
0*     yesterday.  SCHEDRUN issues a $TA,T=24.00 command     * 01/03 DBA 0091000
0*     and no further operations are sc  heduled for the       * 01/03 DBA 00920
000*     entire day.  SCHEDRUN was modified to use the         * 01/03 DBA 00930
000*     doubleword CVTLDTO (if available).                    * 01/03 DBA 00940
000*                                                             * 01/03 DBA 009
50000************************************************************* 01/03 DBA 009
60000         SPACE 3                                              01/03 DBA 009
70000************************************************************* 11+ /01 DBC 0
0980000* Release 2.6                                                 * 11/01 DBC
 00990000*                                                           * 11/01 DBC
 01000000* Last Change Date - November 30, 2001                      * 11/01 DBC
 01010000*                                                           * 11/01 DBC
 0  1020000*   - Logic error fixed: The $TA command issued by this     * 11/01 D
BC 01030000*     program contains two instances of the JES2 command    * 11/01 D
BC 01040000*     character, but only one of those was being updated    * 11/01 D
BC 01050000*       when JES2's command character was different from "$". * 11/01
 DBC 01060000*     (Thanks go to Jack Schudel of the University of       * 11/01
 DBC 01070000*     Florida for pointing this out to me.)                 * 11/01
 DBC 01080000*                                                             * 11/
01 DBC 01090000*   - Changed the database's default DSNAME from            * 11/
01 DBC 01100000*     DBCOLE.SCHEDULE to CSW.SCHEDULE.                      * 11/
01 DBC 01110000*                                                             * 1
1/01 DBC 01120000************************************************************* 1
1/01 DBC 01130000         SPACE 3                                              1
1/01 DBC 01140000*********************************************  ****************
 03/99 DBC 01150000* Release 2.5                                               *
 03/99 DBC 01160000*                                                           *
 03/99 DBC 01170000* Last Change Date - May 6, 1999.
 * 05/99 DBC 01180000*
 * 03/99 DBC 01190000*   - JES2's command character has been moved from
 * 03/99 DBC 01200000*     $SVTCOMCH in the SSVT to CCTCOMCH in the HCCT. Also,
 * 03/99 DBC   01210000*     SSIBSUSE now points to an SJB instead of the SSCT.
   * 05/99 DBC 01220000*     Therefore, SCHEDRUN's logic for finding the owning
   * 03/99 DBC 01230000*     JES2's command character has had to be changed
   * 03/99 DBC 01240000*       accordingly.
     * 03/99 DBC 01250000*
     * 03/99 DBC 01260000*   - Also, JES2 mapping macros are no longer invoked
     * 03/99 DBC 01270000*     directly. I  nstead, the $MODULE macro is now use
d.     * 03/99 DBC 01280000*
       * 03/99 DBC 01290000*   - Changed the "security" check to permit this com
mand   * 03/99 DBC 01300000*     for users who have eithe  r OPER authority or C
ONSOLE   * 03/99 DBC 01310000*     authority according to flags in PSCBATR1.
         * 03/99 DBC 01320000*
         * 03/99 DBC 01330000*   - Changed the database's default DSNAME   from
           * 03/99 DBC 01340000*     SYSVSAM.SCHEDULE to DBCOLE.SCHEDULE.
           * 05/99 DBC 01350000*
           * 03/99 DBC 01360000*************************************************
*******+ ***** 03/99 DBC 01370000         SPACE 3
                 03/99 DBC 01380000*********************************************
**************** 10/90 MDL 01390000*
               * 10/90 MDL 01400000* RELEASE 2.4
               * 10/  90 MDL 01410000*
                 * 10/90 MDL 01420000* LAST CHANGE DATE - OCTOBER 29, 1990 (Mich
ael D. Lewis)    * 08/03 DBC 01430000*
                 * 10/90 MDL 014400  00*                  - ADDED SUPPORT FOR MA
STER OPTION.       * 10/90 MDL 01450000*                    WHEN SET, THE SCHEDU
LED COMMAND WILL   * 10/90 MDL 01460000*                    BE ISSUED WITH THE M
ASTER CONSOLE'S    * 10/90 MDL 01470000*                      UCMID.  IN OTHERWO
RDS, THE MASTER      * 10/90 MDL 01480000*                    CONSOLE'S AUTHORIT
Y.                   * 10/90 MDL 01490000*
                     * 10/90 MDL 01500000************************  *************
************************ 10/90 MDL 01510000         SPACE 3
                         03/99 DBC 01520000*************************************
************************ 12/89 MDL 01530000*
                         * 12/89 MDL 01540000* RELEASE 2.3
                         * 12/89 MDL 01550000*
                         * 12/89 MDL 01560000* LAST CHANGE DATE - DECEMBER 1, 19
89 (Michael D.   Lewis)    * 08/03 DBC 01570000*
                           * 12/89 MDL 01580000*                  - ADDED $SCAT,
 $XECB, AND $HASPEQU FOR   * 12/89 MDL 01590000*                    VALID ASSEMB
LY IN JES2 1.3.6.          * 1  2/89 MDL 01600000*
                             * 12/89 MDL 01610000*                  - $SVCOMCH F
IELD WAS RENAMED AS          * 12/89 MDL 01620000*                    SVTCOMCH I
N JES2 1.3.6.                * 12/89 MDL 0163  0000*
                               * 12/89 MDL 01640000*                  - ADDED DA
VE COLE FIX FOR SITUATION      * 12/89 MDL 01650000*                    WHERE LO
CAL TIME AND GMT DIFFER.       * 12/89 MDL 01660000*
                                 * 12/89 MDL 01670000*                  - ACCOUN
T FOR THE RMCT BEING ABOVE       * 12/89 MDL 01680000*                    THE LI
NE IN XA ENVIRONMENTS.           * 12/89 MDL 01690000*
                                   * 12/89 MDL 01700000*************************
************************************ 12/89 MDL 01710000         SPACE 3
                                     03/99 DBC 01720000*************************
**********  ************************** 07/86 MDL 01730000*
                                     * 07/86 MDL 01740000* RELEASE 2.2
                                     * 07/86 MDL 01750000*
                         +             * 07/86 MDL 01760000* LAST CHANGE DATE -
JULY 10, 1986 (Michael   D. Lewis)       * 08/03 DBC 01770000*
                                         * 07/86 MDL 01780000*
- WEEKDAY OPERAND EXPANDED AND MODIFIED: * 07/86 MDL 01790000*
                                           * 07/86 MDL 01800000*
    OPERAND WEEKDAY(XXX) HAS BEEN REPLACED * 07/86 MDL 01810000*
       BY WEEKDAY(+XXX) TO BE CONSISTANT   * 07/86 MDL 01820000*
       WITH THE -XXX FORM.                 * 07/86 MD  L 01830000*
                                             * 07/86 MDL 01840000*
      WEEKDAY(XXX) NOW IMPLIES THAT THE      * 07/86 MDL 01850000*
         COMMAND WILL ONLY EXECUTE ON THAT   * 07/86 MDL 01860000*
           EXACT WEEKDAY, SUBJECT TO OTHER     * 07/86 MDL 01870000*
           TIMESTAMP MATCHING.                 * 07/86 MDL 01880000*
                                               * 07/86 MDL 01890000*
          WEEKDAY(^XXX) IMPLIES THAT THE COMMAND * 07/86 MDL 01900000*
             WILL EXECUTE ON ALL WEEKDAYS EXCEPT * 07/86 MDL 01910000*
             THE ONE SPECIFIED, SUBJECT TO OTHER * 07/86 MDL 01920000*
             TIMES  TAMP MATCHING.                 * 07/86 MDL 01930000*
                                                   * 07/86 MDL 01940000*********
**************************************************** 07/86 MDL 01950000
SPACE 3                                                03/99 DBC 01960000*******
****************************************************** 02/84 DBC 01970000*
                                                     * 02/84 DBC 01980000* RELEA
SE 2.1                                                 * 02/84 DBC 01990000*
                                                       * 02/84 DBC 02000000* LAS
T CHANGE DATE - FEBRUARY 15, 1984                      * 02/84 DBC 02010000*
                                                       * 02/84   DBC 02020000*
                - "TIME OF DAY" RECOGNITION HAS BEEN     * 02/84 DBC 02030000*
                  CHANGED. SCHEDRUN NOW RECOGNIZES AND   * 02/84 DBC 02040000*
                  USES LOCAL TIME INSTEAD OF GMT.        * 02/84 DBC 02050000*
                                                           * 02/84 DBC 02060000*
************************************************************ 02/84 DBC 02070000
        SPACE 3                                              03/99 DBC 02080000*
*************  ***********************************************           0209000
0*                                                           *           0210000
0* RELEASE 2.0                                               *           0211000
0*                                                             *           02120
000* LAST CHANGE DATE - MAY 1, 1983                            *           02130
000*                                                           *           02140
000*                  - THE DEPENDANCY UPON+  THE AVAILABILITY   *           021
50000*                    OF THE GSAM IUP   (WRITTEN AT YALE) HAS  *           0
2160000*                    BEEN REMOVED.                          *           0
2170000*                                                           *           0
2180000*                  - SCHEDULE WILL NOW AUTOMATICA  LLY        *
 02190000*                    INITIALIZE AN EMPTY SCHEDULE FILE.     *
 02200000*                                                           *
 02210000*                  - THE APPLICATION NAME HAS BEEN EXPANDED *
   02220000*                    FROM 4 CHARACTERS TO 8 CHARACTERS.     *
   02230000*                                                           *
   02240000*                  - THE DELETE COMMAND HAS BEEN REWRITTEN  *
   022  50000*                    TO BE CONGRUENT WITH THE DISPLAY       *
     02260000*                    COMMAND. IT NOW HAS SELECTION          *
     02270000*                    CAPABILITIES THAT ARE IDENTICAL TO THE *
     02280000*                      DISPLAY COMMAND'S. IN ADDITION, ALL    *
       02290000*                    RECORDS TO BE DELETED ARE DISPLAYED    *
       02300000*                    BEFORE BEING DELETED.                  *
       02310000*                                                             *
         02320000*                  - FOR THE "DISPLAY" AND "DELETE"         *
         02330000*                    SUBCOMMANDS, "ALL" IS NOW AN ALIAS OF  *
         02340000*                    "ANYTIME".                               *
           02350000*                                                           *
           02360000*                  - FOR THE "DISPLAY" AND "DELETE"         *
           02370000*                    SUBCOMMANDS, "OBSOLETE" LI  MITS THE
 *           02380000*                    SELECTION TO THOSE SCHEDULED COMMANDS
 *           02390000*                    THAT ARE OBSOLETE - I.E., WILL NEVER
 *           02400000*                    EXECUTE AGAIN. "OBSOLETE" IS MUTUALLY
   *           02410000*                    EXCLUSIVE WITH "YESTERDAY", "TODAY",
   *           02420000*                    "TOMMOROW", "DATE", "ANYTIME", AND
   *           02430000*                    "ID".
   *           0  2440000*
     *           02450000*                  - THE "DELETE" AND "DISPLAY" SUBCOMM
ANDS *           02460000*                    NOW SUPPORT THE FOLLOWING ADDITION
AL   *           02470000*                      MUTUALLY EXCLUSIVE OPERANDS:
       *           02480000*
       *           02490000*                    - "SHORT": THIS SUPPRESSES THE D
ISPLAY *           02500000*                        OF INDIVIDUAL RECORDS. FOR
         *           02510000*                      "DISPLAY", ONLY A SUMMARY ME
SSAGE IS *           02520000*                      DISPLAYED SHOWING HOW MANY R
ECORDS   *           02530000*                      WERE SELE+ CTED.
           *           02540000*
             *           02550000*                    - "LONG": THIS DISPLAYS AL
L SELECTED   *           02560000*                      RECORDS. FOR "DISPLAY",
THIS IS THE  *           02570000*                      DEFAULT.
               *           02580000*
               *           02590000*                    - "NOPROMPT": THIS IS AN
 ALIAS OF      *           02600000*                      "LONG".
                 *           02610000*
                 *           02620000*                    - "PROMPT": FOR "DELET
E", THIS IS THE  *           02630000*                      DEFAULT. IT DISPLAYS
 EACH SELECTED   *             02640000*                      RECORD AND THEN PR
OMPTS THE USER FOR *           02650000*                      A FINAL DELETION D
ECISION. FOR       *           02660000*                      "DISPLAY", "PROMPT
" IS AN ALIAS OF   *           02670000  *                      "LONG".
                     *           02680000*
                     *           02690000*                  - THE "DELETE" AND "
DISPLAY" SUBCOMMANDS *           02700000*                      NOW SUPPORT THE
FOLLOWING ADDITIONAL   *           02710000*                    MUTUALLY EXCLUSI
VE OPERANDS:           *           02720000*
                       *           02730000*                    - "OV  ERRIDE":
THIS SELECTS ONLY THE    *           02740000*                      SCHEDULED CO
MMANDS THAT ARE          *           02750000*                      OVERRIDES.
                         *           02760000*
                           *           02770000*                    - "NOOVERRID
E": THIS SELECTS ONLY      *           02780000*                      THOSE SCHE
DULED COMMANDS THAT ARE    *           02790000*                      NOT OVERRI
DES.                         *           02800000*
                             *           02810000*                    - "BOTH: T
HIS SELECTS SCHEDULED        *           02820000*                      COMMANDS
 WITHOUT REGUARD TO WHETHER  *             02830000*                      OR NOT
 THEY ARE OVERRIDES.           *           02840000*
                               *           02850000*                    - "EITHE
R": THIS IS THE DEFAULT. IT    *           028600  00*                      FUNC
TIONS EXACTLY LIKE "BOTH" UNLESS *           02870000*                      THE
SELECTION IS ALSO LIMITED BY A   *           02880000*                      SPEC
IFIC DATE (I.E., "DATE",         *           02890000*                        "Y
ESTERDAY", "TODAY", OR "TOMORROW"  *           02900000*                      IS
 ALSO GIVEN). IN THIS CASE IF      *           02910000*                      OV
ERRIDES FOR A GIVEN APPLICATION    *           02920000*                      N+
 AME EXIST FOR THIS DATE, THEN ONLY  *           02930000*
  THE OVERRIDES ARE DISPLAYED FOR THAT *           02940000*
  APPLICATION; OTHERWISE, ONLY THE     *           02950000*
  NON-OVERRIDES ARE DISPLAYED FOR THAT *           02960000*
  APPLICATIO  N.                         *           02970000*
                                         *           02980000*
- IF A "SCHEDULE" DDNAME IS NOT          *           02990000*
  AVAILABLE, THEN AN ATTEMP  T IS MADE TO  *           03000000*
    DYNAMICALLY ALLOCATE                   *           03010000*
    "CSW.SCHEDULE".                        *           03020000*
                                             *           03030000*
    - A "CHANGE" COMMAND HAS BEEN            *           03040000*
      IMPLEMENTED (WITH AN OPTIONAL "COPY"   *           03050000*
      OPERAND TOO).                          *             03060000*
                                               *           03070000*
      - NEW SCHEDULED COMMANDS WILL NO LONGER  *           03080000*
        BE SCHEDULED IMMEDIATELY WHEN THE      *           03090000*
          CURRENT TIME IS WITHIN THEIR WINDOWS.  *           03100000*
          THEY WILL WAIT UNTIL THEIR NEXT START  *           03110000*
          TIMES.                                 *           03120000*
                                                   *           03130000*
          - WEEKDAYS SCOPE LIMITATION: IF THE      *           03140000*
            SCHEDULED DATE SPECIFIES A SPECIFIC    *           03150000*
            MONTH OR Y  EAR, THEN WEEKDAY            *           03160000*
              MODIFICATION CANNOT CHANGE THAT MONTH  *           03170000*
              OR YEAR. (IT CAN STILL CHANGE A        *           03180000*
              SPECIFIC DAY, THOUGH).                   *           03190000*
                                                       *           03200000*
              - NEGATIVE WEEKDAYS SUPPORT IS           *           03210000*
                IMPLEMENTED. E.G., "-WED" MEANS THE      *           03220000*
                  FIRST WEDNESDAY AT OR PRECEEDING THE   *           03230000*
                  SCHEDULED DATE.                        *           03240000*
                                                         *             03250000*
                  - "WEEKDAY(ANY)" IS NOW AN ALIAS FOR     *           03260000*
                    "WEEKDAY(-)".                          *           03270000*
                                                           *           03280000*
                    - DEFAULT WINDOW VALUE CHANGED TO BE     *           0329000
0*                    "UNTIL MIDNIGHT".                      *           0330000
0*                                                           *           0331000
0*               +    - EXPLICIT SYSTEM SELECTION HAS BEEN     *           03320
000*                      IMPLEMENTED FOR USE IN MULTI-SYSTEM    *           033
30000*                    CONFIGURATIONS:                        *           033
40000*                                                           *           033
50000*                    - TH  E SCHEDULE FILE RECORD HAS BEEN    *           0
3360000*                      EXPANDED TO INCLUDE A "SFRSYSID"     *           0
3370000*                      FIELD WHICH IDENTIFIES ON WHICH      *           0
3380000*                      SYSTEM(S) THE S  CHEDULE COMMAND MAY   *
 03390000*                      BE EXECUTED.                         *
 03400000*                                                           *
 03410000*                    - THE "SYSID" OPERAND HAS BEEN   ADDED   *
   03420000*                      TO THE RELEVENT SUBCOMMANDS TO       *
   03430000*                      CONTROL SELECTION VIA SYSTEM-ID.     *
   03440000*                                                           *
     03450000*                  - THE FORMAT OF THE LOG RECORD HAS BEEN  *
     03460000*                    CHANGED.                               *
     03470000*                                                           *
     03480  000*                  - IF FOR ANY DETECTABLE REASON THE       *
       03490000*                    RESCHEDULING OF SCHEDRUN FAILS, THEN   *
       03500000*                    THE OPERATOR IS ALERTED VIA A WTOR     *
       03510000*                      FOLLOWED BY AN ABEND (CODE U69).       *
         03520000*                                                           *
         03530000*                  - IF A RECORD IS MADE OBSOLETE OR        *
         03540000*                    DI  SCOVERED TO BE OBSOLETE, THEN IT IS  *
           03550000*                    FLAGGED AS SUCH AND IGNORED ON         *
           03560000*                    SUBSEQUENT RUNS.                       *
           03570000*
 *           03580000*                  - NEGATIVE WEEKDAY MODIFIERS SUPPORT
 *           03590000*                    ADDED.
 *           03600000*
   *           03610000*                  - MULTIPLE SYSTEMS SUPPORT HAS BEEN
   *           03620000*                    ADDED. INDIVIDUAL SCHEDULE FILE
   *           03630000*                    RECORDS CAN BE ASSIGNED TO BE EXECUT
ED *             03640000*                    ON EITHER SPECIFIC SYSTEMS OR ANY
     *           03650000*                    SYSTEM IN A MULTI-SYSTEM ENVIRONME
NT.  *           03660000*
     *           036  70000* THINGS STILL TO DO:
       *           03680000*
       *           03690000*                  - INTERVAL SCHEDULING.
       *           03700000*       +
         *           03710000****  *********************************************
************           03720000         TITLE 'SCHEDULE COMMAND -- IBM CONTROL B
LOCK MAPS'             03730000         PUNCH '         SETCODE AC(1)'
                       03740000         SPACE 3
                         03750000SCHEDULE CSECT ,
                         03760000         PRINT NOGEN
                         03770000         SPACE 3
                           03780000*********************************************
****************           03790000*        CPPL = COMMAND PROCESSOR PARAMETER L
IST (TSO       *           03800000*               COMMANDS)
                 *           03810000*        CPPL = DSECT AND BASE
                 *           03820000*******************************************
******************           03830000         SPACE 1
                               03840000         IKJCPPL ,
                               03850000CPPLLEN  EQU   *-CPPL              L'CPPL
                               03860000         SPACE 3
                                 03870000***************************************
**********************           03880000*        CSOA = COMMAND SCAN OUTPUT ARE
A (TSO COMMAND SCAN) *           03890000*        CSOA = DSECT AND BASE
                     *           03900000**  ***********************************
************************           03910000         SPACE 1
                                   03920000         IKJCSOA ,
                                   03930000CSOALEN  EQU     *-CSOA
L'CSOA                               03940000         SPACE 3
                                     03950000***********************************
**************************           03960000*        CSPL = COMMAND SCAN   PARA
METER LIST (TSO COMMAND    *           03970000*               SCAN)
                           *           03980000*        CSPL = DSECT AND BASE
                           *           03990000*********************************
********  ********************           04000000         SPACE 1
                                         04010000         IKJCSPL ,
                                         04020000CSPLLEN  EQU   *-CSPL
    L'CSPL                                 04030000         SPACE 3
                                           04040000*****************************
********************************           04050000*        CVT = COMMUNICATIONS
 VECTOR TABLE                  *             04060000*        CVTFIX = PREFIX AN
D BASIC SECTIONS DSECT           *           04070000*        CVTFIX = PREFIX SE
CTION BASE                       *           04080000*        CVTMAP = BASIC SEC
TION BASE                        *           04090000            _ *        CVTX
TNT1 = OS COMMON EXTENSION DSECT AND BASE      *           04100000*        CVTX
TNT2 = VS1/VS2 COMMON EXTENSION DSECT AND BASE *           04110000*************
************************************************           04120000           SP
ACE 1                                                        04130000         CV
T   DSECT=YES,PREFIX=YES,LIST=YES                            04140000         SP
ACE 3                                                        04150000***********
***  ***********************************************           04160000*
ECB = EVENT CONTROL BLOCK                          *           04170000*
ECB = BASIC SECTION DSECT AND BASE                 *           04180000*
ECBE = EXTENSION D  SECT AND BASE                    *           04190000*******
******************************************************           04200000
  SPACE 1                                                        04210000
  IHAECB EXT=YES                                                   04220000
    SPACE 3                                                        04230000*****
********************************************************           04240000*
    ECT = ENVIRONMENT CONTROL TABLE (TSO)                *           04250000*
      ECT = DSECT AND BASE                               *           04260000***
**********************************************************           04270000
      SPACE 1                                                          04280000
        IKJECT ,                                                       04290000
        SPACE 3                                                        04300000*
************************************************************           0431000
0*        IOPL = INPUT/OUTPUT SERVICE ROUTINE PARAMETER LIST *           0432000
0*               (TSO)                                       *           0433000
0*        IOPL = DSECT AND BASE                              *           0434000
0************  *************************************************           04350
000         SPACE 1                                                        04360
000         IKJIOPL ,                                                      04370
000IOPLLEN  EQU   *-IOPL                L'IOPL                               043
80000         SPACE 3                                                        043
90000*************************************************************           044
00000*        JSCB = JOB STEP CONTROL BLOCK                        *           0
4410000*        IEZJSCB = DSECT AND BASE                           *           0
4420000*************************************************************           0
4430000         SPACE 1
 04440000         IEZJSCB ,
 04450000         SPACE 3
 04460000*************************************************************   +
   04470000*        PGPB = PUTGET PARAMETER BLOCK (TSO)                  *
     04480000*        PGPB = DSECT AND BASE                              *
     04490000*************************************************************
     04500000         SPACE 1
     0  4510000         IKJPGPB ,
       04520000PGPBLEN  EQU   *-PGPB              L'PGPB
       04530000         SPACE 3
       04540000******  *******************************************************
         04550000*        PPL = PARSE PARAMETER LIST (TSO)                   *
         04560000*        PPL = DSECT AND BASE                               *
         04570000*******************  ******************************************
           04580000         SPACE 1
           04590000         IKJPPL ,
           04600000PPLLEN   EQU   *-PPL                 L'PPL
             04610000         SPACE 3
             04620000***********************************************************
**           04630000*        PSA = PREFIXED STORAGE AREA
   *           04640000*        PSA = DSECT AND BASE
   *           04650000*********************************************************
****           04660000         SPACE 1
                 04670000         IHAPSA ,
                 04680000         SPACE 3
                 04690000*******************************************************
******             04700000*        PSCB = PROTECTED STEP CONTROL BLOCK (TSO)
       *           04710000*        PSCB = DSECT AND BASE
       *           04720000*****************************************************
********           04730000           SPACE 1
                     04740000         IKJPSCB ,
                     04750000         SPACE 3
                     04760000*****************  ********************************
************           04770000*        PTPB = PUTLINE PARAMETER BLOCK (TSO)
           *           04780000*        PTPB = DSECT AND BASE
           *           04790000******************************  *****************
**************           04800000         SPACE 1
                         04810000         IKJPTPB ,
                         04820000PTPBLEN  EQU   *-PTPB              L'PTPB
                           04830000         SPACE 3
                           04840000*********************************************
****************           04850000*        SDWA = SYSTEM DIAGNOSTIC WORK AREA
           +     *           04860000*        SDWA = DSECT AND BASE
                   *           04870000*****************************************
********************           04880000         SPACE 1
                               04890000         IHASDWA ,
                                 04900000         SPACE 3
                                 04910000***************************************
**********************           04920000*        SMCA = SMF (SYSTEM MANAGEMENT
FACILITIES) CONTROL  *           049300  00*               AREA
                       *           04940000*        SMCABASE = DSECT AND BASE
                       *           04950000*************************************
************************           04960000         SP  ACE 1
                                     04970000         IEESMCA ,
                                     04980000         SPACE 3
                                     04990000************************  *********
****************************           05000000*        STPL = STACK PARAMETER L
IST (TSO)                  *           05010000*        STPL = DSECT AND BASE
                           *           05020000*********************************
****  ************************           05030000         SPACE 1
                                         05040000         IKJSTPL ,
                                         05050000STPLLEN  EQU   *-STPL
    L'STPL                                 05060000         SPACE 3
                                           05070000*****************************
********************************           05080000*        S99 = SVC 99 PARAMET
ERS (DYNAMIC ALLOCATION)       *             05090000*        S99RBP = SVC 99 IN
PUT REQUEST BLOCK POINTER DSECT  *           05100000*                 AND BASE
                                 *           05110000*        S99RB = SVC 99 INP
UT REQUEST BLOCK DSECT AND BASE  *           0512  0000*        S99TUPL = SVC 99
 TEXT UNITS POINTER LIST DSECT AND *           05130000*                  BASE
                                   *           05140000*        S99TUNIT = SVC 9
9 TEXT UNIT DSECT AND BASE         *           05150000*          S99TUFLD = SVC
 99 TEXT UNIT FIELDS DSECT AND BASE  *           05160000***********************
**************************************           05170000         SPACE 1
                                                 05180000         IEFZB4D0 ,
                                                   05190000         SPACE 3
                                                   05200000*********************
****************************************           05210000*        TEXT KEY NAM
ES FOR SVC 99   (DYNAMIC ALLOCATION)     *           05220000*******************
******************************************           05230000         SPACE 1
                                                     05240000         IEFZB4D2 ,
                             +                         05250000         SPACE 3
                                                         05260000***************
**********************************************           05270000*        TCB =
TASK CONTROL BLOCK                           *           05280000*        TCBFIX
 = PREFIX AND BASIC SECTIONS DSECT             *           05290000*        TCBF
IX = PREFIX SECTION BASE                       *           05300000*        TCB
= BASIC SECTION BASE                           *           05310000*        TCBX
TNT2 = COMMON EXTENSION DSECT AND BASE         *             05320000***********
**************************************************           05330000         SP
ACE 1                                                        05340000         IK
JTCB LIST=YES                                                05350000
SPACE 3                                                        05360000*********
****************************************************           05370000*
TIOT = TASK INPUT/OUTPUT TABLE                     *           05380000*
DSECT C  ARD NOT GENERATED                           *           05390000*
  TIOCNJOB = BASIC SECTION BASE                      *           05400000*
  TIOENTRY = DD ENTRY BASE                           *           05410000*
  TIOESTTB = DEVICE EN  TRY BASE                       *           05420000*****
********************************************************           05430000
    SPACE 1                                                        05440000TIOT
    DSECT ,                                                          05450000
      IEFTIOT1 ,                                                     05460000
      SPACE 3                                                        05470000***
****************************************************  ******           05480000*
        STANDARD REGISTER NAMES                            *           05490000*
************************************************************           05500000
        SPACE 1                                                          0551000
0         #REGS R,                  STANDARD REGISTER NAMES             *0552000
0               (BASE1REG,R12),     PROGRAM BASE                        *0553000
0               (BASE2REG,R11),     PROGRAM BASE                        *0554000
0                 (BASE3REG,R7)       PROGRAM BASE                         05550
000         SPACE 3                                                        05560
000         PRINT ON,GEN,NODATA                                            05570
000         TITLE   'SCHEDULE COMMAND -- ATTENTION EXIT PARAMETER LIST'      055
80000*************************************************************           055
90000*                                                           *           056
00000*        AEPI -- ATTENTION   EXIT PARAMETER LIST              *           0
5610000*                                                           *           0
5620000*************************************************************           0
5630000         SPACE 1                        +
 05640000AEPL     DSECT ,
   05650000AEPLTAIE DS    A                   --> TAIE
   05660000AEPLIBUF DS    A                   --> IBUF (IF ANY)
   05670000AEPLUSER DS    A                   --> USER DATA   (FROM STXUSER)
     05680000AEPLLEN  EQU   *-AEPL              L'AEPL
     05690000         TITLE 'SCHEDULE COMMAND -- VALIDITY CHECK PARAMETER LIST M
AP'  05700000*************************************************************
       05710000*                                                           *
       05720000*        VCPL -- VALIDITY CHECK PARAMETER LIST.             *
       05730000*                                                           *
       057  40000*************************************************************
         05750000         SPACE 1
         05760000VCPL     DSECT ,
         05770000PDEADR     DS    A                   --> PDE BUILT BY IKJPARS
           05780000USERWORD DS    A                   USER SUPPLIED VALUE (FROM
PPLUWA)    05790000VALMSG   DC    X'FF000000'         2ND-LVL MSG PTR (FEEDBACK
FIELD)     05800000VCPLLEN  EQU   *-VCPL                L'VCPL
             05810000         TITLE 'SCHEDULE COMMAND -- PARAMETER DESCRIPTER EN
TRY MAP'     05820000***********************************************************
**           05830000*
   *           05840000*        PDE -- PARAMETER DESCRIPTER ENTRY.
   *           05850000*
   *           05860000***********************************************  ********
******           05870000         SPACE 1
                 05880000PDE      DSECT ,
                 05890000PDEPTR   DS    A                   --> THE PARSED PARAM
ETER               05900000PDELNGTH DS    Y                   L'PARSED PARAMETER
                   05910000PDEFLAGS DS    B                   FLAG BYTE
                   05920000PDEFEXST EQU   B'10000000'         THE PARAMETER IS P
RESENT             0  5930000PDECHAIN DS    A                   CHAIN FIELD FOR
LISTS                05940000         SPACE 1
                     05950000         ORG   PDECHAIN            RELOCATE
                     05960000PDEPTR  2  DS    A                   --> 2ND PARM I
N A RANGE              05970000PDELNGT2 DS    Y                   L'2ND PARM OF
A RANGE                05980000PDEFLAG2 DS    B                   FLAG BYTE FOR
2ND PARM OF A RANGE    05990000PDECHAI2 DS    A                     CHAIN FIELD
FOR LISTS OF RANGES      06000000         TITLE 'SCHEDULE COMMAND -- OUTPUT LINE
 DESCRIPTER MAP'         06010000***********************************************
**************           06020000*                               +
               *           06030000*        OLD -- OUTPUT LINE   DESCRIPTER
                 *           06040000*
                 *           06050000*******************************************
******************           06060000         SPACE 1
                               06070000OLD      DSECT ,
                               06080000OLDCHAIN DS    A                   --> NE
XT OLD OR ZERO                 06090000OLDSEGCT DS    F                   MESSAG
E SEGMENT COU  NT                06100000OLDTEXTP DS    A                   -->
MESSAGE SEGMENT TEXT (-4)        06110000         SPACE 1
                                 06120000OLDEND   DS    0F                  EO-O
LD                                 06130000OLDLEN   EQU   OLDEND-OLD          L'
OLD                                06140000         TITLE 'SCHEDULE COMMAND -- T
IME - TIMESTAMP MAP'               06150000*************************************
************************           06160000  *
                         *           06170000*        TIME -- TIMESTAMP MAP
                         *           06180000*
                         *           06190000*************  ********************
****************************           06200000         SPACE 1
                                       06210000TIME     DSECT ,
                                       06220000TIMEYR   DS    H
    YEAR                                 06230000TIMEMO   DS    H
    MONTH                                06240000TIMEDY   DS    H
    DAY-OF-MONTH                         06250000TIMEYMD  EQU   TIMEYR,*-TIMEYR
    DATE   SEGMENT                         06260000TIMEHR   DS    H
      HOUR                                 06270000TIMEMN   DS    H
      MINUTE                               06280000TIMEHM   EQU   TIMEHR,*-TIMEH
R     TIME-OF-DAY SEGME  NT                  06290000TIMETIME EQU   TIMEYR,*-TIM
EYR                                          06300000         TITLE 'SCHEDULE CO
MMAND -- LOCAL DATA STORAGE AREA'            06310000***************************
**********************************             06320000*
                                   *           06330000*        #DSA - LOCAL DYN
AMIC STORAGE AREA                  *           06340000*
                                   *           063500  00***********************
**************************************           06360000         SPACE 1
                                                 06370000         #DSA  ,
                                                 06380000         SP  ACE 3
                                                   06390000*********************
****************************************           06400000*        START OF DAT
A AREA. MISCELLANIOUS DATA.            *           06410000*********************
***+ *************************************           06420000         SPACE 1
                                                       06430000SAVDATSC DS    5A
                  DATESCRN                             06440000SAVDISPL DS    4A
                  DISPLAY                              06450000SAVFTIME DS    3A
                    FINDTIME/MINSTIME                    06460000SAVFMINS DS
3A                  FINDMINS                             06470000SAVFWKDY DS
A                   FINDWKDY                             06480000SAVNXTID DS
3A                  NEXTID                                 06490000SAVPMSG  DS
  8A                  PUTMSG                               06500000         SPAC
E 1                                                        06510000DSAPUTL  DS
  A                   --> IKJPUTL                            06520000DSAPTGT  DS
    A                   --> IKJPTGT                          06530000         SP
ACE 1                                                        06540000DSAECB   DS
    A                   PUTLINE/PUTGET ECB                     06550000SUBTTCBA
DS    A                   --> SUBTASK TCB                      06560000STARMINS
DS    F                                                        06570000LTOFFGMT
DS    F                   THE DIFFERENCE BETWEEN     02/84 DBC 06580000*
                            LOCAL TIME AND GMT         02/84 DBC 06590000
  SPACE 1                                                        06600000NOWYR
  DS    H                   CURRENT YEAR                         06610000NOWMO
  DS    H                     CURRENT MONTH                        06620000NOWDY
    DS    H                   CURRENT DAY                          06630000NOWYM
D   EQU   NOWYR,*-NOWYR       DATE SEGMENT                         06640000NOWHR
    DS    H                     CURRENT HOUR                         06650000NOW
MN    DS    H                   CURRENT MINUTE                       06660000NOW
HM    EQU   NOWHR,*-NOWHR       TIME-OF-DAY SEGMENT                  06670000NOW
TIME  EQU   NOWYR,*-NOWYR                                              06680000N
OWWK    DS    H                   CURRENT WEEKDAY                      06690000
        SPACE 1                                                        06700000S
CHDYR   DS    H                   SCHEDULED YEAR (IF ANY  )              0671000
0SCHDMO   DS    H                   SCHEDULED MONTH (IF ANY)             0672000
0SCHDDY   DS    H                   SCHEDULED DAY (IF ANY)               0673000
0SCHDYMD  EQU   SCHDYR,*-SCHDYR     DATE SEGMENT                           06740
000SCHDHR   DS    H                   SCHEDULED HOUR                       06750
000SCHDMN   DS    H                   SCHEDULED MINUTE                     06760
000SCHDHM   EQU   SCHDHR,*-SCHDHR     TIME-OF-DAY SEGMENT                  06770
000SCH  DTIME EQU   SCHDYR,*-SCHDYR                                          067
80000SCHDWK   DS    H                   SCHEDULED WEEKDAY (IF ANY)           067
90000         SPACE 1                                                        068
00000WRKPYR   DS    H+                                                         0
6810000WRKPMO   DS      H
 06820000WRKPDY   DS    H
 06830000WRKPYMD  EQU   WRKPYR,*-WRKPYR
 06840000WRKPHR   DS    H
   06850000WRKPMN   DS    H
   06860000WRKPHM   EQU   WRKPHR,*-WRKPHR
   06870000WRKPTIME EQU   WRKPYR,*-WRKPYR
     06880000         SPACE 1
     06890000WRKNYR   DS    H
     06900000WRKNMO   DS    H
       06910000WRKNDY   DS    H
       06920000WRKNYMD  EQU   WRKNYR,*-WRKNYR
       06930000WRKNHR   DS    H
         06940000WRKNMN   DS    H
         06950000WRKNHM   EQU   WRKNHR,*-WRKNHR
         06960000WRKNTIME EQU   WRKNYR,*-WRKNYR
         06970  000         SPACE 1
           06980000WNDOHR   DS    H                   SCHEDULED WINDOW SIZE (HHH
H)         06990000WNDOMN   DS    H                   SCHEDULED WINDOW SIZE (MM)
           07000000         S  PACE 1
             07010000MYSYSID  DS    CL(L'SMCASID)       LOCAL SYSTEM IDENTIFIER
             07020000         SPACE 1
             07030000OFFSSAVE DS    H                     OFFSET SAVE AREA
               07040000NEXTID#  DS    H                   NEXT SFRID
               07050000         SPACE 1
               07060000         DS    0D
                 07070000DSAWORK  DS    XL18                MISC VOLITILE WORK A
REA              07080000         SPACE 1
                 07090000DSAFLAGS DS    B                   FLAG BYTE
                   07100000DSAFSUBC EQU   B'10000000'         SUBCOMMAND PROCESS
ING HAS BEEN       07110000*                                  INVOKED
                   07120000DSAFNTLD EQU   B'01000000'         ESSENTIAL INITIALI
ZATION IS   COMPLETE 07130000DSAFADD2 EQU   B'00100000'         THE SCHEDULE FIL
E HAS BEEN ADDED TO  07140000DSAFWNDX EQU   B'00010000'         THE WINDOW VALUE
 GIVEN WITH THE      07150000*                                  SCHEDULE COMMAND
 HAS BEEN REDUCED TO 071  60000*                                  END AT MIDNIGH
T.                     07170000DSAFOVRD EQU   B'00001000'         THE DISPLAY CO
MMAND IS PERFORMING A  07180000*                                  PRELIMINARY PA
SS OF THE SCHEDULE     07190000*       +                            FILE TO CHEC
K FOR OVERRIDES.         07200000DSAF  TITL EQU   B'00000100'         A DISPLAY
TITLE LINE HAS BEEN        07210000*                                  WRITTEN
                           07220000DSAFHIT  EQU   B'00000010'         A "HIT" HA
S BEEN MADE ON THE         07230000*                                    SCHEDULE
 FILE                        07240000         SPACE 1
                             07250000CMDID    DS    X                   CURRENT
SUBCOMMAND ID                07260000CMDFGDSH EQU   B'10000000'           FLAG:
THE "DATE" OPERAND FOR THIS    07270000*                                  SUBCOM
MAND IS PERMITTED TO CONTAIN   07280000*                                  DASHES
 (SIGNIFYING NON-SPECIFIC      07290000*                                  VALUES
)                                07300000CMDFGSID EQU   B'01000000'         FLAG
: THE "SYSID" OPERAND FOR THIS   07310000*                                  SUBC
OMMAND IS PERMITTED TO SPECIFY   07320000*                                  "ALL
".                                 07330000         SPACE 1
                         CNW87 RWO 07340000CMDIDINV EQU   0                   IN
VALID                              07350000CMDIDCHA EQU   1+CMDFGDSH          CH
ANGE                                 07360000CMDIDDEL EQU   2+CMDFGSID
DELETE                               07370000CMDIDDIS EQU   3+CMDFGSID
DISPLAY                              07380000CMDIDEND EQU   4
END                                  07390000CM  DIDHEL EQU   5
  HELP                                 07400000CMDIDSCH EQU   6+CMDFGDSH
  SCHEDULE                             07410000         EJECT ,
                                       07420000***************  ****************
******************************           07430000*        GSAM REQUEST BLOCK
                             *           07440000*******************************
******************************           07450000         SPACE 1
                                           07460000         GSB   DSECT=NO
                                           07470000         EJECT ,
                                           07480000         ORG   GSBBUFX
      LOCATE   TO THE START OF THE BUFFER    07490000         SFR   MF=(D,N)
        GEN THE SFR MAP                      07500000         SPACE 1
                                             07510000         ORG   ,
                                               07520000GSBBUFLN EQU   *-GSBBUFX
          L'GSAM BUFFER                        07530000         SPACE 3
                                               07540000SAVESFR  DS    XL(SFRLEN)
          SFR SAVE AREA (USED BY CHANGE)         07550000         EJECT ,
                                                 07560000***********************
**************************************           07570000*        VARIOUS TSO CO
NTROL/PARAMETER BLOCKS               *           07580000            _ *********
****************************************************           07590000
SPACE 1                                                        07600000
DS    0F                                                       07610000D  SACPPL
  DS    XL(CPPLLEN)         COMMAND PROCESSOR PARAMETER LIST     07620000
  SPACE 1                                                        07630000
  DS    0F                                                       07640000DSAIOPL
  DS      XL(IOPLLEN)         INPUT/OUTPUT PARAMETER LIST          07650000
    SPACE 3                                                        07660000*****
********************************************************           07670000*
    COMMAND SCAN PARAM  ETER BLOCKS                      *           07680000***
**********************************************************           07690000
      SPACE 1                                                        07700000
      DS    0F                                                         07710000D
SACSPL  DS    XL(CSPLLEN)         COMMAND SCAN PARAMETER LIST          07720000
        SPACE 1                                                        07730000
        DS    0F                                                         0774000
0DSACSOA  DS    XL(CSOALEN)         COMMAND SCAN OUTPUT AREA             0775000
0         SPACE 1                                                        0776000
0CSFLGWRD DS    XL4                 COMMAND SCAN FLAG WORD                 07770
000         SPACE 3                                                        07780
000*************************************************************           07790
000*        PARSE PARAMETER BLOCKS                             *           07800
00  0*************************************************************           078
10000         SPACE 1                                                        078
20000         DS    0F                                                       078
30000DSAPPL   DS      XL(PPLLEN)          PARSE PARAMETER LIST                 0
7840000         SPACE 1                                                        0
7850000DSAPDLAD DS    A                   PARSE ANSWER AREA (--> PDL)          0
7860000         SPACE 3
 07870000*************************************************************
 07880000*        PUTLINE PARAMETER BLOCKS                           *
 07890000**************************************  ***********************
   07900000         SPACE 1
   07910000DSAPTPB  PUTLINE OUTPUT=(DSAOLDS,TERM,MULTLVL,INFOR),
  *07920000               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),
    *07930000               MF=L
     07940000DSAIBUF  DS    A                   --> SUBCOMMAND'S IBUF OR ZERO
     07950000*        NOTE                      DSAIBUF ALWAYS POINTS TO THE + I
BUF    07960000*                                  GOTTEN BY THE SUBCOMMAND-  PUT
GET CALL 07970000*                                  OR IT CONTAINS A ZERO. PGPBI
BUF      07980000*                                  (ABOVE) ALWAYS POINTS TO THE
 CURRENT 07990000*                                  WORKING IBUF WHICH MAY BE FR
OM       0  8000000*                                  EITHER THE SUBCOMMAND-PUTG
ET OR THE  08010000*                                  TMP (CPPLCBUF) OR A
           08020000*                                  PROMPTING-PUTGET.
           08030000           SPACE 1
             08040000         DS    0F,XL(OLDLEN)       GARBAGE AREA
             08050000DSAOLDS  DS    2XL(OLDLEN)         TWO OLDS
             08060000DSAOLD#  EQU   (*-D  SAOLDS)/L'DSAOLDS NUMBER OF OLDS
               08070000DSAOLDZ  DC    X'FF'               EO-OLDS SIGNAL
               08080000         SPACE 1
               08090000DSAMSGS  DS    CL256                 MSG BLOCKS CONSTRUCT
ION AREA FOR     08100000*                                  PUTMSG
                 08110000         SPACE 1
                 08120000         DS    FL1
                   08130000DYNAMSGS DS    CL256               DYNAMIC MESSAGES C
ONSTRUCTION AREA   08140000         DS    FL1'0'              TRAILER
                   08150000         SPACE 1
                     08160000         ORG   DYNAMSGS
                     08170000DMSG     DS    0C
                     08180000         DC    C' '
                       08190000DMID     DC    C'9999',C' '        ID
                       08200000DMSYSID  DC    CL(L'SFRSYSID)'SID',C'  ' SYSID
                       08210000DMDATE   DC    C'--/--/--',C' '    DATE
                       08220000           DC    C'-'
                         08230000DMDAY    DC    C'SUN',C' '         DAY
                         08240000DMTIME   DC    C'23:59',C' '       TIME
                         08250000DMWINDOW DC    C'  +9999:59',C' '    WINDOW
                           08260000DMFLAGS  DC    C'I O N',C' '       FLAGS
                           08270000DMNAME   DC    CL(L'SFRNAME)'APPLNAME',C'  '
NAME                       08280000DMCMD    DS    CL(L'DYNAMSGS-(  *-DMSG)) COMM
AND                          08290000DML      EQU   *-DMSG
                             08300000         SPACE 1
                             08310000         ORG   ,
                               08320000         SPACE 3
                               08330000*****************************************
********************           08340000*        PUTGET PARAMETER BLOCKS
               +     *           08350000***************************************
*************  *********           08360000         SPACE 1
                                   08370000DSAPGPB  PUTGET TERMPUT=(EDIT,WAIT,NO
HOLD,NOBREAK),                    *08380000               TERMGET=(EDIT,WAIT),
                                    *08390000               MF=L
                                     08400000         SPACE 3
                                     08410000***********************************
**************************           084200  00*        STAX PARAMETER BLOCKS
                           *           08430000*********************************
****************************           08440000         SPACE 1
                                       08450000DSASTPL  ST  AX  STAXEXIT,USADDR=
DSA,MF=L                                 08460000         SPACE 3
                                         08470000*******************************
******************************           08480000*        ATTACH PARAMETE  R LIS
T FOR THE HELP SUB-COMMAND     *           08490000*****************************
********************************           08500000         SPACE 1
                                           08510000HELPATTA ATTACH EP=HELP,ECB=D
SAECB,SH  SPV=78,SZERO=NO,ESTAI=ESTAHELP,   *08520000               LPMOD=1,SF=L
                                             08530000         SPACE 3
                                             08540000***************************
***********************  ***********           08550000*        DYNALLOC PARAMET
ERS                                *           08560000*************************
************************************           08570000         SPACE 1
                                                 08580000         DS    0F
            PLIST                                08590000DALPLIST DS    AL1(S99R
BPND),AL3(DALRB)                                 08600000         SPACE 1
                                                 0861  0000         DS    0F
              REQUEST BLOCK                        08620000DALRB    DS    5A(0)
                                                   08630000DALRBLEN EQU   *-DALR
B                                                  08640000           SPACE 1
                                                     08650000         DS    0F
                TEXT KEYS AND VECTOR                 08660000DALINFO  DS    XL25
6                                                    08670000         SPACE 3
                                                       08680000*****************
********************************************           08690000*        LISTS AR
EA. THIS MUST COME AT THE END OF THE DSA.  *           08700000*****************
******************  **************************           08710000         SPACE
1                                                        08720000OVRDEOL  DS
A                   --> EO-LIST                          08730000OVRDLIST DS
0X                               +                         08740000         SPAC
E 1                                                          08750000         DS
    1000XL(L'SFRNAME)   OVERRIDE LIST (USED BY "DISPLAY" AND 08760000*
                        "DELETE")                            08770000         SP
ACE 1                                                          08780000
ORG   OVRDLIST            OVERLAY                              08790000
DS    1000XL(L'SFRID)     IDS LIST (USED BY "CHANGE")          08800000
SPACE 1                                                          08810000
  ORG   ,                   RELOCATE HIGH                        08820000OVRDLEN
D EQU   *                   END OF LIST AREA                     08830000
  SPACE 3                                                        08840000***  **
********************************************************           08850000*
    END OF DSA                                         *           08860000*****
********************************************************           08870000
    SPACE 1                                                          08880000DSA
END   EQU   *                   EO-DSA                               08890000DSA
LEN   EQU   DSAEND-DSA          L'DSA                                08900000
      TITLE 'SCHEDULE COMM  AND -- INITIALIZATION'                     08910000*
************************************************************           08920000*
        REENTRANT ENTRY LINKAGE                            *           08930000*
*****************************************  *******************           0894000
0         SPACE 1                                                        0895000
0SCHEDULE #ENTER 'SCHEDULE COPYRIGHT DAVID B. COLE - 1980, 1999 ', 9 DBC*0896000
0               BASES=(BASE1REG,BASE2REG,BASE3REG),                       *08970
000               SAVTYPE=(RENT,DSALEN)                                    08980
000         USING DSA,R13             DCL DSA BASE                         08990
000         SPACE 3                                                          090
00000*************************************************************           090
10000*        INITIALIZE MISC. DSA FIELDS                        *           090
20000*************************************************************           090
30000           SPACE 1                                                        0
9040000         MVC   DSACPPL,0(R1)       SAVE THE CPPL                        0
9050000         SPACE 1                                                        0
9060000         L       R1,CVTPTR           --> CVT
 09070000         ICM   R1,15,CVTSMCA-CVTMAP(R1) --> SMCA; EXIST?
 09080000         BZ    NOSMCA              NO, SKIP
 09090000         MVC   MYSYSID,SMCA  SID-SMCABASE(R1) YES, SAVE LOCALLY
   09100000NOSMCA   DS    0H
   09110000         SPACE 1                                              02/84 D
BC 09120000         TIME  MIC,DSAWORK,        GET "+ ELAPSED" TIME         02/84
 DBC*09130000               ZONE=LT             L  OCAL TIME                 02/
84 DBC 09140000         L     R2,DSAWORK          SAVE THE SIGNIFICANT PART  02/
84 DBC 09150000         TIME  MIC,DSAWORK,        GET "ELAPSED" TIME         02/
84 DBC*09160000               ZONE=GMT            GMT                          0
2/84 DBC 09170000         SL    R2,DSAWORK          GET THE DIFFERENCE         0
2/84 DBC 09180000         ST    R2,LTOFFGMT         SAVE IT                    0
2/84 DBC 09190000         SPACE 3
           09200000*************************************************************
           09210000*        INITIALIZE VARIOUS TSO SERVICE ROUTINE RELATED     *
           09220000*        PARAMETER BLOCKS.                                  *
           092  30000***********************************************************
**           09240000         SPACE 1
             09250000         L     R2,CPPLUPT-CPPL+DSACPPL --> UPT
             09260000           L     R3,CPPLECT-CPPL+DSACPPL --> ECT
               09270000         LA    R4,DSAECB           --> ECB
               09280000         LA    R5,CSFLGWRD         --> CMD SCAN FLAG WORD
               09290000         LA    R6,DSA  CSOA          --> CSOA
                 09300000         STM   R2,R6,DSACSPL       INIT CSPL
                 09310000         SPACE 1
                 09320000         SR    R5,R5                 CLEAR
                   09330000         LA    R6,DSAPDLAD         --> IKJPARS ANSWER
 AREA              09340000         STM   R2,R6,DSAPPL        BUILD MOST OF THE
PPL                09350000         ST    R13,PPLUWA-PPL+DSAPPL BUILD REST   OF
THE PPL              09360000         SPACE 1
                     09370000         PUTLINE PARM=DSAPTPB,     INITIALIZE THE I
OPL AND PTPB        *09380000               UPT=(R2),ECT=(R3),ECB=(R4),
                      *09390000               OUTPUT=(DSAOLDS,TERM,MULTLVL,INFOR
),                    *09400000               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK)
,                     *09410000               ENTRY=PLINITED,MF=(E,DSAIOPL)
                       0  9420000PLINITED DS    0H
                         09430000         SPACE 1
                         09440000         LA    R1,DSAOLDS          --> THE OLDS
                         09450000           USING OLD,R1              DCL OLD BA
SE                         09460000         LA    R0,DSAOLD#          GET # OLDS
 ASSEMBLED                 09470000         LA    R15,1               SETUP TO I
NITIALIZE SEGMENT COUNTS   09480000         BALR  R14,  0               LOAD LOO
P HEAD                       09490000         ST    R15,OLDSEGCT        SET SEGM
ENT COUNT=1                  09500000         LA    R1,OLD+OLDLEN       --> NEXT
 OLD                         09510000         BCTR  R0,R14           +    LOOP T
O INITIALIZE IT                09520000         DROP  R1                    RELE
ASEE OLD BASE                    09530000         MVI   0(R1),X'FF'         SET
EO-OLDS SIGNAL                   09540000         SPACE 1
                                 09550000         #PUT  SUBAD=PUTMSG,MF=INIT INI
TI  ALIZE #PUT MACRO               09560000         SPACE 1
                                   09570000         L     R15,CVTPTR          --
> CVT                              09580000         ICM   R0,15,CVTPUTL-CVTMAP(R
15) --> IKJPUTL;   LOADED BY NIP?    09590000         BM    GOTPUTL
YES, PROCEED                         09600000         LOAD  EP=IKJPUTL
NO, LOAD IT NOW                      09610000GOTPUTL  ST    R0,DSAPUTL
STORE IKJPUTL ADDRESS LOCALLY          09620000         SPACE 1
                                       09630000         PUTGET PARM=DSAPGPB,
                                      *09640000               TERMPUT=(EDIT,WAIT
,NOHOLD,NOBREAK),                     *09650000                 TERMGET=(EDIT,WA
IT),                                    *09660000               ENTRY=PGINITED,M
F=(E,DSAIOPL) INIT PGPB                  09670000PGINITED DS    0H
                                         09680000         SPAC  E 1
                                           09690000         L     R15,CVTPTR
      --> CVT                              09700000         ICM   R0,15,CVTPTGT-
CVTMAP(R15) --> IKJPTGT; LOADED BY NIP?    09710000         BM    GOTPTGT
        YES, PROCEED                         09720000         LOAD  EP=IKJPTGT
        NO, LOAD IT NOW                      09730000GOTPTGT  ST    R0,DSAPTGT
        STORE IKJPTGT ADDRESS LOCALLY        09740000         SPACE 3
                                               09750000*************************
************************************           09760000*        ESTABLISH A STAX
 EXIT.                             *           09770000*************************
***************************  *********           09780000         SPACE 1
                                                 09790000         STAX  STAXEXIT
,USADDR=DSA,MF=(E,DSASTPL)                       09800000         SPACE 3
                                                   09810000*********************
****************************************           09820000*        CHECK TO SEE
 IF THE USER IS PERMITTED TO USE THIS  *           09830000*        COMMAND.
                                       *           098400  00*******************
******************************************           09850000         SPACE 1
                                                     09860000         L     R1,P
SATOLD-PSA      --> OUR TCB                          09870000         L       R1
,TCBJSCB-TCB(,R1) --> JSCB                             09880000         L     R1
,JSCBACT-IEZJSCB(,R1) --> ACTIVE JSCB                  09890000         ICM   R1
,15,JSCBPSCB-IEZJSCB(R1) --> PSCB; EXIST?              09900000         BZ    CA
LLFAIL +            NO, NOT TSO; FAIL THE CALLER         09910000***************
*****  *****************************************           09920000* INSERT HERE
 YOUR OWN AUTHORITY CHECK                      *           09930000*************
************************************************           09940000         TM
  PSCBATR1-PSCB(R1),  PSCBCTRL+PSCBCNAU DOES THE   03/99 DBC 09950000*
                        USER HAVE RELEVENT         03/99 DBC 09960000*
                        AUTHORITY?                 03/99 DBC 09970000         BN
Z   CALLEROK            YES, PROCEE  D                         09980000
SPACE 3                                                        09990000*********
****************************************************           10000000*
THE CALLER IS NOT AUTHORIZED TO USE THIS COMMAND.    *           10010000*
  BUILD A MISSLEADING MESSAGE AND THEN EXIT.         *           10020000*******
******************************************************           10030000
  SPACE 1                                                          10040000CALLF
AIL MVC   DYNAMSGS(18),=C'IKJ56500I COMMAND '                      10050000
    L     R1,CPPLECT-CPPL+DSACPPL --> ECT                          10060000
    MVC   DYNAMSGS+18(L'ECTPCMD),ECTPCMD-ECT(R1) GET CMD NAME      10070000
      LA    R1,DYNAMSGS+L'ECTPCMD+18 LOAD SCANNER                    10080000CMD
NMLP  BCTR  R1,0                BACK UP                              10090000
      TM    0(R1),B'10111111'   STILL BLANK?                         10100000
      BZ    CMD  NMLP             YES, KEEP BACKING UP                 10110000
        MVC   1(11,R1),=C' NOT FOUND ' NO, APPEND TEXT                 10120000
        LA    R1,11(,R1)          --> PAST TEXT                        10130000
        LA    R0,DYNAMSGS           --> SO-MSG BLOCK                     1014000
0         SR    R1,R0               GET L'MSG BLOCK                      1015000
0         STC   R1,DYNAMSGS-1       STORE                                1016000
0         LA    R0,DYNAMSGS-1                                              10170
000         B     MSGGET              ISSUE MSG AND EXIT                   10180
000CALLEROK DS    0H                                                       10190
000         SPACE 3                                                          102
00000*************************************************************           102
10000*        PARTIAL INITIALIZATION OF DYNALLOC PARAMETERS      *           102
20000*************************************************************             1
0230000         SPACE 1                                                        1
0240000         LA    R0,DALRB            --> REQUEST BLOCK                    1
0250000         ST    R0,DALPLIST         STORE INTO PLIST                     1
0260000           MVI   DALPLIST,S99RBPND   SET "LAST PLIST ENTRY" FLAG
 10270000         SPACE 1
 10280000         LA    R0,DALINFO          --> TEXT KEYS STUFF AREA
 10290000         ST    R+ 0,S99TXTPP-S99RB+DALRB STORE INTO REQUEST BLOCK
   10300000         SPA  CE 3
     10310000*************************************************************
     10320000*        THE SCHEDULE FILE IS ABOUT TO BE "OPENED". IF      *
     10330000*        "FAKEGSAM" IS BE  ING USED, THEN A REAL OPEN IS      *
       10340000*        ABOUT TO BE PERFORMED IN WHICH CASE, IF THE        *
       10350000*        SCHEDULE FILE IS PASSWORD PROTECTED FOR UPDATE,    *
       10360000*        THEN THE USER WILL BE PROMPTE  D FOR THE PASSWORD.   *
         10370000*        HOWEVER, I AM SECURE; I AM SPECIAL; AND IN GENERAL *
         10380000*        I AM AN ALL AROUND CERTIFIED GOOD-GUY. SO, IT IS   *
         10390000*        NOT NECESSARY THAT THE USER BE PROMPTED.             *
           10400000*        ACCORDINGLY, I WILL NOW SET THE "SUPPRESS PASSWORD *
           10410000*        CHECKING" FLAG; OPEN THE SCHEDULE FILE; AND THEN   *
           10420000*        RESET THE FLAG AFTER OPEN. I WILL ALSO, HOWEVER,   *
             10430000*        SET UP ESTAE PROTECTION SO THAT AN INADVERTANT
 *           10440000*        ABEND DOESN'T LEAVE THAT FLAG ON FOREVER.
 *           10450000***********************************************************
**           10460  000         SPACE 1
               10470000GSAMRTRY L     R1,PSATOLD-PSA      --> MY TCB
               10480000         L     R1,TCBJSCB-TCB(,R1) --> MY JSCB
               10490000         L       R1,JSCBACT-IEZJSCB(,R1) (HO-HUM) --> "AC
TIVE" JSCB       10500000         SR    R2,R2               SET "PASSWORD SUPPRE
SSION            10510000*                                  ALREADY SET" SIGNAL
                 10520000         TM    JSCBSWT1  -IEZJSCB(R1),JSCBPASS TRUE?
                   10530000         BNZ   PASSOK              YES, NOTHING TO DO
 HERE              10540000         SPACE 1
                   10550000         LR    R2,R1               N  O, COPY JSCB PT
R. ALSO              10560000*                                  SERVES AS A "PAS
SWORD                10570000*                                  SUPPRESSION BEIN
G SET                10580000*                                  LOCALLY" SIGNA
L                      10590000         ESTAE PASSGARD,CT,TERM=YES SET UP TEMP E
STAE COVERAGE          10600000         MODESET KEY=ZERO          SET KEY-0
                       10610000         OI    JSCBSWT1-IEZJSCB(R2),JSCBPASS SUPP
RESS PASSWORD            10620000*                                  CHECKING
                         10630000         MODESET KEY=NZERO         RESTORE P/P-
KEY                      10640000PASSOK   DS    0H
                         106  50000         SPACE 3
                           10660000*********************************************
****************           10670000*        INITIALIZE THE GSAM REQUEST BLOCK. S
EE IF A MASTER *           10680000*       +  RECORD EXISTS IN THE SCHEDULE FILE
.                *           10690000****  *************************************
********************           10700000         SPACE 1
                               10710000         MVC   SFMRKEY,SFMRKEY-SFMR+MASTE
R GET MASTER'S KEY             10720000         GSAMCALL   READ,            READ
 THE MASTER RECORD              *10730000               FILE=DDNAME,        DDNA
ME                              *10740000               POOL=3,             (VAL
UE INTERNAL TO GSAM)            *10750000               BUFFER=-1,            BU
FFER FOLLOWS THE GSB              *10760000               BUFFLEN=GSBBUFLN,   L'
BUFFER                            *10770000               OPTIONS=(INITIAL,   IN
ITIALIZE THE GSB -                *10780000               WAIT,SYNC,FWD,ABTERM,
WITH M  ISC "STATIC" FLAGS          *10790000               DIR),
THIS IS A DIRECT REQUEST            *10800000               MF=(E,GSB)
                                     10810000         LR    R3,R15
SAVE THE GSAM RETURN   CODE            10820000         SPACE 3
                                       10830000*********************************
****************************           10840000*        REGARDLESS OF WHETHER OR
 NOT THE SCHEDULE FILE     *             10850000*        "OPEN" OCCURED OR SUCC
EEDED, IF I SET THE          *           10860000*        "SUPPRESS PASSWORD CHE
CKING" FLAG LOCALLY, THEN    *           10870000*        RESET IT NOW.
                             *           10880000**  ***************************
********************************           10890000         SPACE 1
                                           10900000         LTR   R2,R2
      WAS THE FLAG SET LOCALLY?            10910000         BZ      PASSOK2
        NO, SKIP                             10920000         MODESET KEY=ZERO
        YES, LOAD KEY-0                      10930000         NI    JSCBSWT1-IEZ
JSCB(R2),255-JSCBPASS RESET THE FLAG         10940000         MODESET KEY=NZERO
          RESUME P/P-KEY                       10950000         ESTAE 0
          CANCEL THE TEMP ESTAE                10960000PASSOK2  DS    0H
                                               10970000         SPACE 3
                                                 10980000***********************
**************************************           10990000*        TEST THE RESUL
TS OF THE INITIAL GSAM CALL.         *           11000000***********************
*******************************  *******           11010000         SPACE 1
                                                   11020000         LTR   R15,R3
              WAS THE READ OK?                     11030000         BNZ   FILEPR
OB            NO, GO SEE WHAT HAPPENED               11040000         CLC   SFMR
KEY(L'SFMRKEY+L'SFMRFID),SFMRKEY-SFMR+MASTER YES,    11050000*
                RIGHT RECORD READ?                   11060000         BE    FILE
OK              YES, PROCEED                         11070000            _
    LA    R14,=C' THE MASTER RECORD DOES NOT EXIST' NO, --> TEXT   11080000
    B     GSAMERR             TERMINAL ERROR                       11090000FILEP
ROB DS    0H                                                       11100000
      SPACE 3                                                        11110000***
**********************************************************           11120000*
      AN ERROR HAS OCCURED WHILE ATTEMPTING TO READ THE  *           11130000*
      MASTE  R RECORD. IF THE ERROR IS BECAUSE THE         *           11140000*
        SCHEDULE FILE IS NOT ALLOCATED, THEN ATTEMPT TO    *           11150000*
        ALLOCATE IT NOW. NOTE, THIS WILL BE EFFECTIVE ONLY *           11160000*
        IF FAKEGSAM IS RUN  NING. IF REAL GSAM IS RUNNING,   *           1117000
0*        THEN THIS WILL HAVE NO EFFECT.                     *           1118000
0*************************************************************           1119000
0         SPACE 1                                                          11200
000         CH    R15,=Y(GSAMEFIL)    GSAM FILE ERROR?                     11210
000         BNE   NOTEFIL             NO, SKIP                             11220
000         CLI   GSBVSAM+3,0         YES, FILE NOT DEFI  NED?               112
30000         BNE   NOTEFIL             NO, SKIP                             112
40000         SPACE 1                                                        112
50000         L     R1,PSATOLD-PSA      YES, --> MY TCB                        1
1260000         L     R1,TCBTIO-TCB(,R1)  --> MY TIOT                          1
1270000         LA    R0,TIOENTRY-TIOT    GET 1ST DD-ENTRY OFFSET              1
1280000         USING TIOENTRY,R1         DCL DD-ENTRY BASE                    1
129000  0         BALR  R14,0               LOAD LOOP HEAD
 11300000         AR    R1,R0               --> NEXT DD ENTRY
 11310000         ICM   R0,1,TIOELNGH       GET ITS LENGTH; EO-TIOT?
 11320000         BZ      ALOCSCHD            YES, "SCHEDULE" NOT ALREADY
   11330000*                                  ALLOCATED; GO ATTEMPT ALLOCATION
   11340000         CLC   TIOEDDNM,DDNAME     NO, "SCHEDULE" DD-ENTRY?
   11350000         BNER  R14                   NO, KEEP SEARCHING
     11360000         DROP  R1                  YES, RELEASE DD-ENTRY BASE
     11370000         SPACE 1
     11380000IMRRFAIL LA    R14,=C' INITIAL MASTER   RECORD READ' --> FAILURE MS
G      11390000         LA    R15,GSAMEFIL        RESTORE GSAM'S RC
       11400000         B     GSAMERR             ISSUE ERROR MSG AND TERMINATE
       11410000         SPACE 1
         11420000ALOCSCHD MVC   S99RBLN-S99RB+DALRB(L'S99RBLN+L'S99VERB+L'S99FLA
G1),=AL1*11430000               (DALRBLEN,S99VRBAL,S99NOMNT,0) BUILD DAL RB
         11440000         LA    R14,DSADDNAM-DSADATA+DALINFO+4*DSACOUNT --> DDNA
M+ E KEY   11450000         LA    R15,DSADSNAM-DSADATA+DALINFO+4*DSACOUNT --> D
 SNAME KEY   11460000         LA    R0,DSASTATS-DSADATA+DALINFO+4*DSACOUNT --> 1
ST DISP KEY  11470000         STM   R14,R0,DALINFO      BUILT TEXT KEYS VECTOR
             11480000         MVI   DALINFO+4*DSACOUNT-4,S99TUPLN FLAG EO-VECTOR
             1  1490000         MVC   DALINFO+4*DSACOUNT(DSADATAL),DSADATA GET T
EXT KEYS       11500000         #TEST SIZE=(L'DALINFO,GE,4*DSACOUNT+DSADATAL)
               11510000         LA    R1,DALPLIST         --> PLIST
               11520000           DYNALLOC ,                ATTEMPT ALLOCATION
                 11530000         LTR   R15,R15             SCHEDULE FILE ALLOCA
TED?             11540000         BZ    GSAMRTRY            YES, RETRY THE MASTE
R RECORD READ    11550000         B     IMRR  FAIL            NO, ISSUE ERROR MS
G AND QUIT         11560000NOTEFIL  DS    0H
                   11570000         SPACE 3
                   11580000********************************  *******************
**********           11590000*        SEE IF THE MASTER FILE READ FAILURE IS BEC
AUSE THE *           11600000*        SCHEDULE FILE IS ALLOCATED BY SOMEONE ELSE
 (AND IT *           11610000*        IS NOT SHARABLE).
           *           11620000*************************************************
************           11630000         SPACE 1
                       11640000         CH    R15,=Y(GSAMEFIL)    FILE OPEN ERRO
R?                       11650000         BNE   NOTRESOU            NO, SKIP
                         11660000         CLI   GSBVSAM+3,168       YES, RESOURC
E(S) UNAVAILABLE ERR?    11670000         BNE   NOTRESOU            NO, SKIP
                           11680000         MVC   GSBMSGX(77),=C' THE SCHEDULE F
ILE IS IN USE BY ANOTHER J*11690000               OB OR USER. PLEASE TRY AGAIN L
ATER. ' YES, MSG           11700000         MVC   GSBMSGX+77(L'GSBMSGX-77),GSBMS
GX+76 CLEAR REST OF BUF    11710000           B     IMRRFAIL            GO TAKE
ERROR EXIT                   11720000NOTRESOU DS    0H
                             11730000         SPACE 3
                             11740000*****************  ************************
********************           11750000*        SEE IF THE MASTER FILE READ FAIL
URE IS BECAUSE THE *           11760000*        SCHEDULE FILE IS EMPTY.
                   *           11770000******************************  *********
**********************           11780000         SPACE 1
                                 11790000         CH    R15,=Y(GSAMEDS)     GSAM
 DATASET ERROR?                  11800000         BNE   IMRRFAIL            NO,
NOT   RECOVERABLE                  11810000         CLI   GSBVSAM+3,116       YE
S, EMPTY DATASET?                  11820000         BNE   IMRRFAIL            NO
, TERMINATE                        11830000         SPACE 3
                   +                 11840000***********************************
*****************  *********           11850000*        THE SCHEDULE FILE IS EMP
TY. INITIALIZE IT BY       *           11860000*        WRITING A NEW MASTER REC
ORD TO IT.                 *           11870000*********************************
****************************             11880000         SPACE 1
                                         11890000         MVC   SFMR(SFMRLEN),MA
STER GET A NEW MASTER RECORD             11900000         GSAMCALL WRITE,
    WRITE THE NEW MASTER RECORD         *119100  00               OPTIONS=SEQ,
                                          *11920000               RECLEN=SFMRLEN
,                                         *11930000               MF=(E,GSB)
                                           11940000         SP  ACE 1
                                             11950000         LA    R14,=C' MAST
ER RECORD CREATION'                          11960000         LTR   R15,R15
        AOK?                                 11970000         BNZ   GSAMERR
          NO, TERMINAL ERROR                   11980000         SPACE 3
                                               11990000*************************
************************************           12000000*        NOW RESET THE DA
TASET AND VA  LIDATE THE NEW MASTER  *           12010000*        RECORD BY RE-R
EADING IT.                           *           12020000***********************
**************************************           12030000         SPACE 1
                                                   12040000         GSAMCALL REA
D,            RE-READ THE NEW MASTER RECORD       *12050000               OPTION
S=(DIR,NOUPDATE),                                 *12060000               MF=(E,
GSB)                                                 12070000         LA    R14,
=C' INITIAL MASTER RECORD REREAD'                    12080000         LTR   R15,
R15             AOK?                                 12090000         BNZ   GSAM
ERR             NO, TERMINAL ERROR                   1210  0000FILEOK   DS    0H
                                                       12110000         SPACE 3
                                                       12120000*****************
********************************************           12130000*          ESSENT
IAL INITIALIZATION IS NOW COMPLETE.          * 02/84 DBC 12140000***************
**********************************************           12150000         SPACE
1                                                        12160000         OI
DSAFLAG  S,DSAFNTLD   ESSENTIAL INITIALIZATION IS COMPLETE 12170000         EJEC
T ,                                                        12180000*************
************************************************           12190000*        CALL
 COMMAND-SCAN TO DETER  MINE IF THE INVOCATION   *           12200000*        CO
MMAND CONTAINS A SUBCOMMAND.                     *           12210000***********
**************************************************           12220000         SP
ACE 1                                +                         12230000
L     R1,CPPLCBUF-CPPL+DSACPPL -->   INVOCATION CMD              12240000
  ST    R1,PGPBIBUF-PGPB+DSAPGPB (PRETENT IT'S PUTGET INPUT)     12250000
  ST    R1,CSPLCBUF-CSPL+DSACSPL STORE FOR IKJSCAN               12260000
  MVC   OFFSSAVE,2(R1)      SAVE CURRENT OFFSET VA  LUE            12270000
    MVI   DSAECB,0            CLEAR ATTENTION SIGNAL               12280000
    CALLTSSR EP=IKJSCAN,MF=(E,DSACSPL) CALL IKJSCAN                12290000
    LTR   R15,R15             AOK?                                   12300000
      #DIE  NZ                  NO, LOGIC ERROR                      12310000
      TM    CSOAFLG-CSOA+DSACSOA,CSOAQM+CSOABAD+CSOAEXEC IS AN       12320000*
                                INVALID COMMAND NAME PRESENT?        12330000
        BNZ   JUSTSCHD            YES, IMPLIED SCHEDULE COMMAND        12340000
        TM    CSOAFLG-CSOA+DSACSOA,CSOAVWP+CSOAVNP NO, IS A VALID      12350000*
                                  COMMAND NAME PRESENT?                12360000
        BNZ   C  MDDCODE            YES, GO IDENTIFY IT                  1237000
0         TM    CSOAFLG-CSOA+DSACSOA,CSOANOC NO, IS "NO OPERANDS" SIGNAL 1238000
0*                                  SET?                                 1239000
0         #DIE  Z                     NO, LOGIC ERROR                      12400
000         OI    DSAFLAGS,DSAFSUBC   YES, REMEMBER SUBCOMMAND MODE        12410
000         B     PUTGET              GO GET 1ST SUBCOMMND                 12420
000         TITLE 'SCHEDULE COMMAND -- SUBCOM  MAND AQUISITION LOOP'         124
30000*************************************************************           124
40000*        DISPLAY AN (ERROR) MESSAGE AND THEN FALL THROUGH   *           124
50000*        TO GET THE NEXT SUBCOMMAND.                          *           1
2460000*************************************************************           1
2470000         SPACE 1                                                        1
2480000MSGGET   #PUT  (R0)                SEND THE MESSAGE
 12490000         NOP   0                   +0 ATTENTION; IGNORE IT
 12500000*        FALL THROUGH              +4 AOK; PROCEED
 12510000         SPACE 3
 12520000*  ************************************************************
   12530000*        MAIN PUTGET LOOP. FIRST CLEAN UP ANY TRASH THAT    *
   12540000*        MIGHT BE LYING AROUND.                             *
   12550000**************  ***********************************************
     12560000         SPACE 1
     12570000PUTGET   ICM   R1,15,DSAIBUF       DOES A PUTGET INPUT BUFFER EXIST
?    12580000         BZ    PUTGET1               NO, PROCEED
       12590000         LH    R0,0(,R1)           YES, GET CBUF'S LENGTH
       12600000         ICM   R0,8,=AL1(1)        SET SUBPOOL=1
       12610000         FREEMAIN R,LV=(0),A=(1)   RELEA+ SE THE BUFFER
         12620000         XC    DSAIBUF,DSAIBUF     C  LEAR THE IBUF PTR
           12630000PUTGET1  DS    0H
           12640000         SPACE 1
           12650000         IKJRLSA DSAPDLAD          IF PDL EXISTS,   THEN RELE
ASE IT TOO   12660000         XC    DSAPDLAD,DSAPDLAD   CLEAR PDL PTR
             12670000         SPACE 1
             12680000         TM    DSAFLAGS,DSAFNTLD   HAS ESSENTIAL INITIALIZA
TIO  N         12690000*                                  COMPLETED?
               12700000         BZ    EXIT16              NO, ERROR
               12710000         SPACE 3
               127  20000*******************************************************
******           12730000*        IF THIS IS SUBCOMMAND MODE, THEN PUT OUT THE M
ODE  *           12740000*        MESSAGE AND GET THE NEXT SUBCOMMAND.
     *           12750000********  *********************************************
********           12760000         SPACE 1
                   12770000         TM    DSAFLAGS,DSAFSUBC   SUBCOMMAND MODE?
                   12780000         BZ    EXIT0                 NO, RETURN TO TM
P                    12790000         LA    R1,=X'4016'         YES, --> BLANK,
BACKSPACE            12800000         LA    R0,2                GET L'MSG
                     12810000         ICM   R1,8,=B'00001001'     TPUT ASIS, HOL
D                      12820000         TPUT  (1),(0),R           WAIT FOR ALL O
UTPUT TO COMPLETE     *12830000                                   BEFORE CANCELL
ING THE STAX           12840000         STAX  ,                   CANCEL THE S
TAXEXIT                  12850000         MVI   DSAECB,0            CLEAR THE AT
TENTION ECB              12860000         XC    PGPBIBUF-PGPB+DSAPGPB,PGPBIBUF-P
GPB+DSAPGPB ZAP IBUF PTR 12870000         L     R15,DSAPTGT         --> IKJPTGT
                           12880000         PUTGET PARM=DSAPGPB,      GET NEXT C
OMMAND                    *12890000               OUTPUT=(MODEMSG-12,SINGLE,MODE
),                        *12900000               ENTRY=(15),MF=(E,DSAIOPL)
                           1  2910000         MVC   DSAIBUF,PGPBIBUF-PGPB+DSAPGP
B GET IBUF PTR, IF ANY       12920000         SPACE 1
                             12930000         CL    R15,=F'32'          IS THE R
C VALID?                     12940000           #DIE  H                   NO, LO
GIC ERROR                      12950000         B     *+4(R15)            YES, A
CT ON THE RC                   12960000         B     CMDSCAN             +0 CMD
 RECEIVED FROM TERMINAL        12970000         B     CMDS  CAN             +4 C
MD RECEIVED FROM ^TERMINAL       12980000         B     EXIT4               +8 A
TTENTION INTERRUPT               12990000         B     PUTGET              +12
SUPPRESSED DUE TO 2ND-LVL MSGS   13000000         #DIE  C,15             +    +1
6 TPUT-NOWAIT FAILURE              13010000         #DIE  C,15
+20 TGET-NOWAIT FAILURE              13020000         #DIE  C,15
+24 INVALID PARAMETERS               13030000         B     EXIT12
+28 GETMAIN FAILURE                  13040000         B     EXIT8
+32 TE  RMINAL DISCONNECTED            13050000         SPACE 3
                                       13060000*********************************
****************************           13070000*        USE IKJSCAN TO EXTRACT A
ND SYNTAX CHECK THE          *           13080000*        SUBCOMMAND.
                             *           13090000*******************************
******************************           13100000         SPACE 1
                                           13110000CMDSCAN  STAX  STAXEXIT,USADD
R=DSA,MF=(E,DSASTPL) RESTORE STAX EXIT     13120000         MVC   CSPLCBUF-CSPL+
DSACSPL,PGPBIBUF-PGPB+DSAPGPB --> CBUF     13130000         MVI   DSAECB,0
      CLEAR ATTENTION ECB                  13140000           CALLTSSR EP=IKJSCA
N,MF=(E,DSACSPL) CALL IKJSCAN                13150000         LTR   R15,R15
        AOK?                                 13160000         #DIE  NZ
        NO, LOGIC ERROR                      13170000         TM      CSOAFLG-CS
OA+DSACSOA,CSOANOC ANYTHING PRESENT?           13180000         BNZ   PUTGET
          NO, IGNORE NULL LINE                 13190000         L     R0,=A(MSYN
TERR-1)   YES, ASSUME INVALID                  13200000         TM    CSOAFLG-CS
O  A+DSACSOA,CSOAQM+CSOABAD+CSOAEXEC INVALID     13210000*
            COMMAND PRESENT?                     13220000         BNZ   MSGGET
            YES, ERROR                           13230000         SPACE 3
                                                   13240000*********************
****************************************           13250000*        IDENTIFY THE
 GIVEN SUBCOMMAND. CHECK FOR AMBIGUOUS *           13260000*        OR UNRECOGNI
ZED NAMES.                               *           13270000*******************
******************************************           13280000         SPACE 1
                                                     13290000CMDDCODE ICM   R1,1
5,CSOACNM-CSOA+DSACSOA --> CBUF; EXIST?                13300000         #DIE  Z
                  NO, LOGIC ERROR                      13310000         LH    R1
5,CSOALNM-CSOA+DSACSOA YES, GET ITS LENGTH             13320000         LTR   R1
5,R15             NULL?                                133300  00         #DIE
NP                  YES, LOGIC ERROR                     13340000         CH
R15,=H'8'           NO, TOO LONG?                        13350000         #DIE
H                   YES, LOGIC ERROR                     13360000         BC  TR
  R15,0               NO, ADJUST FOR 'EX'                  13370000         SR
  R3,R3               CLEAR A(COMMAND HANDLER)             13380000         MVI
  CMDID,CMDIDINV      BE PESSIMISTIC                       13390000         LA
  R2,COMMAN+ DS-CMDROOTL-1 LOAD VALID CMDS LIST SCANNER      13400000         SR
    R14,R  14             CLEAR L'CMD                          13410000
SPACE 1                                                        13420000CMDLOOP
LA    R2,CMDROOTL+1(R14,R2) --> NEXT LIST ENTRY                13430000
IC    R14,CMDLNGTH(,R2)     GET LENGTH VALUE                     13440000
  CLR   R15,R14             IS THIS CMD LONG ENOUGH?             13450000
  BH    CMDLOOP             NO, TRY NEXT ENTRY                   13460000
  CLC   0(*-*,R1),CMDNAME(R2) (EXECUTED  )                         13470000
    EX    R15,*-6             YES, RIGHT ENTRY?                    13480000
    BH    CMDLOOP             NO, TRY NEXT ENTRY                   13490000
    BL    CMDCHK              NO, UNRECOGNIZED; GO HAN  DLE          13500000
      L     R0,=A(MAMBGERR-1)   YES, ASSUME AMBIGUOUS                13510000
      LTR   R3,R3               AMBIGUOUS?                           13520000
      BNZ   MSGGET              YES, ERROR                             13530000
        LR    R3,R2               NO, SAVE A(ENTRY)                    13540000
        B     CMDLOOP             LOOP TO CHECK FOR AMBIGUITY          13550000
        SPACE 1                                                        13560000C
MDCH  K   LTR   R3,R3               WAS A HANDLER FOUND?                 1357000
0         BNZ   GOTCMD              YES, PROCEED                         1358000
0         L     R0,=A(MUNREERR-1)   NO, --> 'UNRECOGNIZED COMMAND'       1359000
0         TM    DSA  FLAGS,DSAFSUBC   SUBCOMMAND MODE?                     13600
000         BNZ   MSGGET              YES, ERROR                           13610
000         SPACE 3                                                        13620
000*******************************  ******************************           136
30000*        NOT SUBCOMMAND MODE. POSSIBLE IMPLIED SCHEDULE     *           136
40000*        COMMAND GIVEN.                                     *           136
50000********************************************  *****************           1
3660000         SPACE 1                                                        1
3670000JUSTSCHD L     R1,PGPBIBUF-PGPB+DSAPGPB --> TMP'S CBUF                  1
3680000         MVC   2(2,R1),OFFSSAVE    RESTORE ORIGINAL OFFSE  T VALUE
 13690000         LA    R3,CMDSCHED         --> SCHEDULE'S TABLE ENTRY
 13700000         SPACE 3
 13710000*************************************************************
   13720000*        GOT A COMMAND. SET UP SOME STANDARD STUFF AND THEN *
   13730000*        GO TO IT.                                          *
   13740000*************************************************************
   13750000           SPACE 1
     13760000GOTCMD   MVC   CMDID,CMDIDENT(R3) SAVE A COMMAND ID
     13770000         L     R1,CPPLECT-CPPL+DSACPPL --> ECT
     13780000         LA    R+ 0,ECTSCMD-ECT(,R1) --> SUBCOMMAND NAME AREA (COPY
 SINK) 13790000         LA      R1,L'ECTSCMD        GET L'SINK
         13800000         SR    R15,R15
         13810000         IC    R15,CMDLNGTH(,R3)   GET L'CMD NAME - 1
         13820000         LA    R15,1(,R15  )         GET L'CMD NAME
           13830000         ICM   R15,8,=C' '         GET PAD CHARACTER
           13840000         LA    R14,CMDNAME(,R3)    --> COMMAND NAME
           13850000         MVCL  R0,R14              COP  Y TO ECT
             13860000         NI    DSAFLAGS,255-DSAFTITL CLEAR FLAGS
             13870000         ICM   R3,7,CMDHNDLR(R3)   --> COMMAND HANDLER
             13880000         BR    R3                  GO TO IT
               13890000         SPACE 1
               13900000INVALCMD #DIE  ,                   (LOGIC ERROR)
               13910000         TITLE 'SCHEDULE COMMAND -- SCHEDULE SUBCOMMAND'
                 13920000*******************************************************
******           13930000*        PRIME SOME VALUE-LIMITING DATA USED BY THE PAR
SE   *           13940000*        VALIDITY CHECK ROUTINES.
     *           13950  000*****************************************************
********           13960000         SPACE 1
                   13970000SCHEDCMD NI    DSAFLAGS,255-DSAFWNDX CLEAR FLAGS
                   13980000         T  IME  STCK,DSAWORK        GET TODC (GMT)
           02/84 DBC 13990000         L     R0,DSAWORK          LOAD SIGNIFICANT
 PART      02/84 DBC 14000000         AL    R0,LTOFFGMT         CNVRT TO LOCAL T
IME        02/84 DBC 14010000         ST    R0,DSAWO  RK          STORE BACK
             02/84 DBC 14020000         LA    R1,NOWTIME          --> OUTPUT ARE
A                      14030000         BAL   R14,FINDTIME        CNVRT TO YYMMD
DHHMM                  14040000         SPACE 3
                         14050000***********************************************
**************           14060000*        PARSE THE SCHEDULE COMMAND OPERANDS.
             *           14070000***********************************************
**  ************           14080000         SPACE 1
                           14090000         MVC   PPLCBUF-PPL+DSAPPL,PGPBIBUF-PG
PB+DSAPGPB --> CBUF        14100000         MVC   PPLPCL-PPL+DSAPPL,=A(PCLSCHED)
 --> SCHEDULE'S P  CL        14110000         MVI   DSAECB,0            CLEAR AT
TENTION ECB                  14120000         CALLTSSR EP=IKJPARS,MF=(E,DSAPPL)
CALL IKJPARS                 14130000         CL    R15,=F'28'          VALID RC
?                            141  40000         #DIE  H                   NO, LO
GIC ERROR                      14150000         B     *+4(R15)            ACT UP
ON THE RC                      14160000         B     SCHEDOK             +0 PAR
SE COMPLETED OK                14170000        +  B     PUTGET              +4 P
ROMPT FAILURE                    14180000           B     PUTGET              +8
 ATTENTION INTERRUPT               14190000         #DIE  C,15                +1
2 INVALID PARAMETERS               14200000         B     EXIT12              +1
6 GETMAIN FAILURE                  14210000         B     PU  TGET
+20 TERMINATED BY VALIDCK ROUTINE    14220000         #DIE  C,15
+24 CONFLICTING PARAMETERS           14230000         B     EXIT8
+28 TERMINAL DISCONNECTED            14240000SCHEDOK  DS    0H
                                       14250000         SPACE 3
                                       14260000*********************************
****************************           14270000*        BUILD AND WRITE THE NEW
COMMAND RE  CORD. START BY   *           14280000*        SETTING A UNIQUE ID NU
MBER FOR IT.                 *           14290000*******************************
******************************           14300000         SPACE 1
                                           14310000         BAL   R14,NEXTID
      GET THE NEXT RECORD ID               14320000         LR    R2,R1
      SAVE IT FOR A MOMENT                 14330000         SPACE 1
                                             14340000         LA    R0,SFR
        --> RECORD BUFFER                    14350000         LA    R1,SFRLEN
        GET ITS LENGTH                       14360000         SR    R15,R15
        SETUP TO CLEAR                       14370000           MVCL  R0,R14
          CLEAR THE RECORD BUFFER              14380000         STH   R2,SFRID
          STORE UNIQUE ID NUMBER               14390000         SPACE 3
                                               14400000***************  ********
**************************************           14410000*        SET THE SCHEDU
LED DATE AND TIME.                   *           14420000***********************
**************************************           14430000         SPACE 1
                                                   14440000         MVC   SFRTIM
E,SCHDTIME    COPY YYMMDDHHMM                      14450000         MVC   SFRWK,
SCHDWK                                             14460000         MVC   SFRXTI
ME,NOWTIME    PREVEN  T IMMEDIATE WINDOW TRIGGERING  14470000         SPACE 1
                                                     14480000         LH    R14,
SCHDHR          GET THE SCHEDULED HOUR               14490000         MH    R14,
=H'60'          CONVERT TO MINUTES                     14500000         AH    R1
4,SCHDMN          ADD IN SCHEDULED MINUTE              14510000         SPACE 3
                                                       14520000*****************
********************************************             14530000*        SET TH
E COMMAND'S EXECUTION WINDOW.                *           14540000***************
**********************************************           14550000         SPACE
1                                                        14560000            _
        LA    R15,24*60           ASSUME "UNTIL MIDNIGHT" WINDOW       14570000*
                                  DEFAULT REQUESTED                    14580000
        SPACE 1                                                        14590000
          LH    R1,WNDOHR           GET THE WINDOW HOURS                 1460000
0         MH    R1,=H'60'           CNVRT TO MINUTES                     1461000
0         AH    R1,WNDOMN           ADD IN WINDOW MINUTES; DEFAULT       1462000
0*                                    REQUESTED?                           14630
000         BNP   SWNOOFLW            YES, USE THE MIDNIGHT VALUE          14640
000         LA    R15,0(R1,R14)       NO, GENERATE THE END OF THE WINDOW   14650
000         CH    R15,=Y(24*60  )       PAST MIDNIGHT?                       146
60000         BNH   SWNOOFLW            NO, PROCEED                          146
70000         OI    DSAFLAGS,DSAFWNDX   YES, REMEMBER "WINDOW TOO LARGE"     146
80000*                                  ERROR                                  1
4690000         LA    R15,24*60           RESET EO-WINDOW TO MIDNIGHT          1
4700000         SPACE 1                                                        1
4710000SWNOOFLW SR    R15,R14             GET WINDOW LENGTH
 14720000         SR    R14,R14             CLEAR FOR DIVIDE
 14730000         D     R14,=F'60'          CNVRT TO HOURS (R15) & MINUTES (R14)
 14740000         STH   R15,SFRWHR          STORE WINDOW LENGTH (HOURS)
   14750000         STH   R14,SFRWMN          STORE WINDOW LENGTH (MINUTES)
   14760000         SPACE 3
   14770000*************************************************************
   1478000  0*        SET THE COMMAND'S APPLICATION NAME.                *
     14790000*************************************************************
     14800000         SPACE 1
     14810000         L       R2,DSAPDLAD         --> PARSED DATA
       14820000         USING PDLSCHED,R2         DCL BASE
       14830000         LA    R14,SFRNAME         --> COPY SINK
       14840000         LA    R15,L'SFRN  AME       GET L'SINK
         14850000         L     R0,PDEPTR-PDE+PDLNAME --> COPY SOURCE
         14860000         LH    R1,PDELNGTH-PDE+PDLNAME GET L'SOURCE
         14870000         ICM   R1,8,=C' '          PAD   CHARACTER
           14880000         MVCL  R14,R0              COPY APPLICATION NAME
           14890000         #DIE  L                   (LOGIC ERROR)
           14900000         SPACE 3
             14910000***********************************************************
**           14920000*        SET THE COMMAND'S SYSTEM AFFINITY.
 *           14930000***********************************************************
**   +         14940000         SPACE 1
                 14950000         LA    R14,SFRSYSID        --> COPY SINK
                 14960000         LA    R15,L'SFRSYSID      GET L'COPY SINK
                 14970000         L     R0,PDEPTR-PDE+PDLSYSID --> COPY SOURCE
                 1  4980000         LH    R1,PDELNGTH-PDE+PDLSYSID GET L'COPY SO
URCE               14990000         ICM   R1,8,=C' '          LOAD PAD CHARACTER
                   15000000         MVCL  R14,R0              COPY SYSID TO SFR
                   15010000           SPACE 1
                     15020000         CLC   =CL(L'SFRSYSID)'ANY',SFRSYSID "ANY"
SPECIFIED?           15030000         BNE   SCSIDANY            NO, SKIP
                     15040000         XC    SFRS  YSID,SFRSYSID   YES, CLEAR TO
SIGNAL "ANY"           15050000SCSIDANY DS    0H
                       15060000         SPACE 1
                       15070000         CLC   =CL(L'SFRSYSID)'C  RNT',SFRSYSID "
CRNT" SPECIFIED?         15080000         BNE   SCSIDCRN            NO, SKIP
                         15090000         MVC   SFRSYSID,MYSYSID    YES, SET TO
CURRENT SYSID            15100000         #TEST SIZE=(L'SFRSYSID,EQ,L'MYSYSID)
                           15110000SCSIDCRN DS    0H
                           15120000         SPACE 3
                           15130000*********************************************
*************  ***           15140000*        MAYBE SET THE "IPLFORCED" FLAG.
                 *           15150000*******************************************
******************           15160000         SPACE 1
                               15170000         CLI   KEYIPLFO+1,IPLFORCE IPLFOR
CED?                           15180000         BNE   SNIPLF              NO, SK
IP                             15190000         CLI   SUBIPLFO+1,YES      MAYBE,
 IPLFORCED(YES)?               15200000           BNE   SNIPLF              NO,
SKIP                             15210000         OI    SFRFLAG,SFRFIPLF    YES,
 REMEMBER                        15220000SNIPLF   DS    0H
                                 15230000         SPACE 3
                                   15240000*************************************
************************           15250000*        MAYBE SET THE "OPERRIDE" FLA
G.                     *           15260000******************************  *****
**************************           15270000         SPACE 1
                                     15280000         CLI   KEYOVERR+1,OVERRIDE
OVERRIDE?                            15290000         BNE   SNOVRR
NO, SKIP                               15300000         CLI   SUBOVERR+1,YES
  MAYBE, OVERRIDE(YES)?                15310000         BNE   SNOVRR
  NO, SKIP                             15320000         OI    SFRFLAG,SFRFOVRD
  YES, REMEMBER        +                 15330000SNOVRR   DS    0H
                                           15340000         SPACE 3
                                 10/90 MDL 15350000*****************************
******************************** 10/90 MDL 15360000*        MAYBE SET THE "MASTE
R" FLAG.                       * 10/  90 MDL 15370000***************************
********************************** 10/90 MDL 15380000         SPACE 1
                                   10/90 MDL 15390000         CLI   KEYMASTR+1,Y
MASTER  MASTER?                    10/90 MDL 154000  00         BNE   SNMASTR
          NO, SKIP                   10/90 MDL 15410000         CLI   SUBMASTR+1
,YES      MAYBE, MASTER(YES)?        10/90 MDL 15420000         BNE   SNMASTR
          NO, SKIP                   10/90 MDL 15430000         OI      SFRFLAG,
SFRFMAST    YES, REMEMBER              10/90 MDL 15440000SNMASTR  DS    0H
                                       10/90 MDL 15450000         SPACE 3
                                                 15460000***********************
*  *************************************           15470000*        COPY THE COM
MAND TEXT.                             *           15480000*********************
****************************************           15490000         SPACE 1
                                                     15500000         LA    R14,
SFRCMD          --> COPY SINK                        15510000         L     R0,P
DEPTR-PDE+PDLCMD --> COPY SOURCE                     15520000         LH    R1,P
DELNGTH-PDE+PDLCMD L'SOURCE                            15530000         LA    R1
5,4(,R1)          GET L'CMD BLOCK                      15540000         STH   R1
5,SFRCMDL         STORE                                15550000         LR    R1
5,R1              SET L'SINK = L'SOURCE                  15560000         MVCL
R14,R0              COPY THE COMMAND TEXT                15570000         DROP
R2                  RELEASE PDL BASE                     15580000         SPACE
3                                                        1559  0000*************
************************************************           15600000*        WRIT
E THE NEW SCHEDULE RECORD.                     *           15610000*************
************************************************           15620000           SP
ACE 1                                                        15630000         LA
    R0,SFR              --> SO-RECORD                        15640000         SR
    R14,R0              GET L'RECORD                         15650000         GS
AMCALL WRIT  E,RECLEN=(R14),MF=(E,GSB) WRITE THE NEW COMMAND R 15660000
LA    R14,=C' WRITE'      --> REQUEST DESCRIPTION              15670000
LTR   R15,R15             AOK?                                 15680000
BNZ   GSAMERR               NO, ERROR                            15690000
  OI    DSAFLAGS,DSAFADD2   YES, REMEMBER FILE HAS BEEN ADDED TO 15700000
  SPACE 3                                                        15710000*******
*****************************************+ *************           15720000*
    DISPLAY THE SCHEDULED COMMAND JUST   CREATED         *           15730000***
**********************************************************           15740000
      SPACE 1                                                        15750000
      BAL   R14,DISPLAY         GO TO DISPLAY ROUTINE                  15760000
        NOP   0                   +0 ATTN RECEIVED; IGNORE             15770000*
        FALL THROUGH              +4 AOK; PROCEED                      15780000
        SPACE 3                                                          1579000
0*************************************************************           1580000
0*        DONE. RETURN OR RETURN WITH AN INFO MSG            *           1581000
0*************************************************************           1582000
0           SPACE 1                                                        15830
000         TM    DSAFLAGS,DSAFWNDX   WAS WINDOW ADJUSTED?                 15840
000         BZ    PUTGET              NO, DONE HERE                        15850
000         L     R  0,=A(MWNDOADJ-1)   YES, --> WARNING MESSAGE             158
60000         B     MSGGET              DISPLAY IT                           158
70000         TITLE 'SCHEDULE COMMAND -- CHANGE SUBCOMMAND'                  158
80000*****************************  ********************************           1
5890000*        PRIME SOME VALUE-LIMITING DATA USED BY THE PARSE   *           1
5900000*        VALIDITY CHECK ROUTINES.                           *           1
5910000******************************************  *******************
 15920000         SPACE 1
 15930000CHANGCMD NI    DSAFLAGS,255-DSAFWNDX-DSAFHIT CLEAR FLAGS
 15940000         TIME  STCK,DSAWORK        GET TODC (GMT)               02/84 D
BC 15950000         L     R0,DSAWORK          LOAD SIGNIFICANT PART      02/84 D
BC 15960000         AL    R0,LTOFFGMT         CNVRT TO LOCAL TIME        02/84 D
BC 15970000         ST    R0,DSAWORK          STORE BACK                 02/84
 DBC 15980000         LA    R1,NOWTIME          --> OUTPUT AREA
     15990000         BAL   R14,FINDTIME        CNVRT TO YYMMDDHHMM
     16000000         SPACE 3
     16010000*  ************************************************************
       16020000*        PARSE THE CHANGE COMMAND OPERANDS.                 *
       16030000*************************************************************
       16040000         SPACE   1
         16050000         MVC   PPLCBUF-PPL+DSAPPL,PGPBIBUF-PGPB+DSAPGPB --> CBU
F        16060000         MVC   PPLPCL-PPL+DSAPPL,=A(PCLCHANG) --> SCHEDULE'S PC
L        16070000         MVI   DSAECB,0              CLEAR ATTENTION ECB
           16080000         CALLTSSR EP=IKJPARS,MF=(E,DSAPPL) CALL IKJPARS
           16090000         CL    R15,=F'28'          VALID RC?
           16100000         #DIE  H                   NO, L+ OGIC ERROR
             16110000         B     *+4(R15)            A  CT UPON THE RC
               16120000         B     CHANGEOK            +0 PARSE COMPLETED OK
               16130000         B     PUTGET              +4 PROMPT FAILURE
               16140000         B     PUTGET              +8 ATTENTION I  NTERRU
PT               16150000         #DIE  C,15                +12 INVALID PARAMETE
RS               16160000         B     EXIT12              +16 GETMAIN FAILURE
                 16170000         B     PUTGET              +20 TERMINATED BY VA
LIDCK R  OUTINE    16180000         #DIE  C,15                +24 CONFLICTING PA
RAMETERS           16190000         B     EXIT8               +28 TERMINAL DISCO
NNECTED            16200000         SPACE 1
                   162  10000CHANGEOK L     R9,DSAPDLAD         --> PDL
                     16220000         USING PDLCHANG,R9         DCL THE PDL BASE
                     16230000         SPACE 3
                     16240000********  *****************************************
************           16250000*        SEARCH THE SCHEDULE FILE FOR THE SCHEDUL
ED COMMAND *           16260000*        TO BE CHANGED.
           *           16270000*********************  **************************
**************           16280000         SPACE 1
                         16290000         LA    R1,OVRDLIST         --> SO-LISTS
 AREA                    16300000         ST    R1,OVRDEOL            RESET THE
AREA EMPTY                 16310000         SPACE 1
                           16320000         XC    SFRKEY,SFRKEY       CLEAR THE
SEARCH KEY                 16330000CHNGSRCH GSAMCALL READ,            READ NEXT
RE  CORD                    *16340000               OPTIONS=(SEQ,NOUPDATE),
                            *16350000               MF=(E,GSB)
                             16360000         LTR   R15,R15             GOT IT?
                               16370000         BZ    CSRCNEOF            YES, P
ROCEED                         16380000         LA    R14,=C' SEQUENTIAL-READ' N
O, --> REQUEST DESCRIPTION     16390000         CH    R15,=Y(GSAMEKEY)    KEY ER
ROR?                           1  6400000         BNE   GSAMERR             NO,
ERROR                            16410000         CLI   GSBVSAM+3,4         YES,
 EOD ERROR?                      16420000         BNE   GSAMERR             NO,
ERROR                            16430000           SPACE 1
                                   16440000CSRCEOF  L     R0,=A(MDISPERR-1)   YE
S, --> MSG                         16450000         TM    DSAFLAGS,DSAFHIT    WE
RE THERE ANY HITS?                 16460000         BZ    MSGG  ET
NO, DISPLAY "MISS" MSG               16470000         TM    DSAFLAGS,DSAFWNDX
YES, WAS A WINDOW ADJUSTED?          16480000         BZ    PUTGET
NO, DONE HERE                        16490000         L     R0,=A(MWNDOAD2-1)+
  YES, --> WARNING MESSAGE             16500000         B     MSGGET
    DISPLAY IT                           16510000         SPACE 1
                                         16520000CSRCNEOF CLI   SFRKEY,X'FF'
    MASTER RECORD?                       16530000         BE    CSRCEOF
    YES, J  UST LIKE EOF                   16540000         SPACE 3
                                           16550000*****************************
********************************           16560000*        GOT THE NEXT RECORD.
 SEE IF IT HAS ALREADY BE  EN    *           16570000*        CHANGED. (THIS IS
POSSIBLE BECAUSE THE "CHANGE"    *           16580000*        COMMAND CAN CHANGE
 A RECORD'S KEY THUS CAUSING IT  *           16590000*        TO BE MOVED AROUND
).                               *             16600000*************************
************************************           16610000         SPACE 1
                                               16620000         LH    R3,SFRID
          GET THIS RECORD'S ID                 16630000           LA    R1,OVRDL
IST-L'SFRID LOAD BXH SCANNER                     16640000         LA    R14,L'SF
RID         LOAD BXH INCRIMENT                   16650000         L     R15,OVRD
EOL         LOAD BXH -                           16660000         SR      R15,R1
4              LIMIT                               16670000         SPACE 1
                                                   16680000CHRDUNCK BXH   R1,R14
,CHRDUNZ      SCAN DO NEXT LIST ENTRY              16690000         CH    R3,0(,
R1)             CRNT RECORD ALREADY CHANGED?         16700000         #TEST SIZE
=(L'SFRID,EQ,2)                                      16710000         BNE   CHRD
UNCK            DON'T KNOW YET; KEEP SCANNING        16720000         B     CHNG
SRCH            YES,   IGNORE THE CURRENT RECORD       16730000CHRDUNZ  DS    0H
                                                       16740000         SPACE 3
                                                       16750000*****************
***********************************  *********           16760000*        THE CU
RRENT RECORD HAS NOT ALREADY BEEN CHANGED.   *           16770000*        NOW SE
E IF IT IS SELECTED FOR CHANGE.              *           16780000***************
**********************************************             16790000         SPAC
E 1                                                        16800000         LA
  R2,PDLCHID          --> PDE FOR "ID"                     16810000         USIN
G PDE,R2              DCL PDE BASE                         168200  00CHIDLP   TM
    PDEFLAGS,PDEFEXST   THIS LIST ENTRY EXIST?               16830000         BZ
    CHIDNEXT            NO, GO CHECK NEXT                    16840000         IC
M   R1,7,PDEPTR+1       YES, --> 1ST VALUE; EXIST?           16850000         BZ
      CHIDNEXT            NO, GO CHECK NEXT                    16860000
C     R3,0(,R1)           YES, SFR ACCEPTED BY THIS LIST ITEM? 16870000
BL    CHIDNEXT            NO, TRY NEXT ENTRY                   16880000
BE    CHIDOK   +            YES, PROCEED                         16890000
  ICM   R1,7,  PDEPTR2+1      MAYBE, --> EO-RANGE VALUE; EXIST?    16900000
    BZ    CHIDNEXT            NO, TRY NEXT LIST ENTRY              16910000
    C     R3,0(,R1)           YES, THIS SFR SELECTED?              16920000
    BNH   CHIDOK                YES, PROCEED                         16930000CHI
DNEXT ICM   R2,7,PDECHAI2+1     NO, --> NEXT LIST ENTRY; ANY MORE?   16940000
      BNZ   CHIDLP              YES, LOOP TO TEST IT                 16950000
      DROP  R2                  NO, RELEASE   PDE BASE                 16960000
        B     CHNGSRCH            REJECT THIS RECORD                   16970000
        SPACE 1                                                        16980000C
HIDOK   OI    DSAFLAGS,DSAFHIT    SIGNAL A "HIT"                         1699000
0         #XXC  MVC,SAVESFR,SFR,(257,L'SAVESFR) SAVE THE RECORD          1700000
0         SPACE 3                                                        1701000
0*************************************************************             17020
000*        IF "COPY" HAS BEEN SPECIFIED, THEN GET A NEW       *           17030
000*        RECORD ID NUMBER FOR THE NEW RECORD.               *           17040
000*************************************************************           17050
000           SPACE 1                                                        170
60000         CLI   CHCOPY+1,COPY       "COPY" SPECIFIED?                    170
70000         BNE   CHREPLAC            NO, THE RECORD WILL BE               170
80000*                                    REPLACED                             1
7090000         BAL   R14,NEXTID          YES, GET THE NEXT AVAILABLE          1
7100000*                                  RECORD ID (NOTE, SFR IS              1
7110000*                                    DESTROYED)
 17120000         #XXC  MVC,SFR,SAVESFR,(257,SFRLEN) RESTORE THE RECORD TO BE
 17130000*                                  CHANGED
 17140000         STH   R1,SFRID            STORE A N  EW SFR ID NUMBER
   17150000         B     CHANGEIT            PROCEED WITH THE CHANGE
   17160000         SPACE 3
   17170000*********************************************************  ****
     17180000*        "COPY" HAS NOT BEEN SPECIFIED. DELETE THE ORIGINAL *
     17190000*        RECORD.                                            *
     17200000*************************************************************
       17210000         SPACE 1
       17220000CHREPLAC GSAMCALL READ,            GET EXCLUSIVE CONTROL OF THE R
ECORD *17230000               OPTIONS=(DIR,UPDATE),
      *17240000                 MF=(E,GSB)
         17250000         LA    R14,=C' UPDATE-READ' --> REQUEST DESCRIPTION
         17260000         LTR   R15,R15             AOK?
         17270000         BNZ   G+ SAMERR             NO, ERROR
           17280000         GSA  MCALL DELETE,MF=(E,GSB) YES, DELETE THE RECORD
             17290000         LA    R14,=C' DELETE'     --> REQUEST DESCRIPTION
             17300000         LTR   R15,R15             AOK?
             17310000         BNZ   GSAMERR               NO, ERROR
               17320000         SPACE 3
               17330000*********************************************************
****           17340000*        IF THE COMMAND TEXT HAS BEEN   CHANGED, THEN UPD
ATE  *           17350000*        IT.
     *           17360000*******************************************************
******           17370000         SPACE 1
                   17380000CHANGEIT CLI   CHCOMMAN+1,0        'COMMAND' OMITTED?
                   17390000         BE    CHCMDZ              YES, SKIP
                   17400000         LA    R14,SFRCMD          NO, --> COPY SINK
                     17410000         L     R0,PDEPTR-PDE+PDLCHCOM --> COPY SOUR
CE                   17420000         LH    R1,PDELNGTH-PDE+PDLCHCOM L'SOURCE
                     17430000         LA    R15,4(,R1)          GET L'CMD BLOCK
                     17440  000         STH   R15,SFRCMDL         STORE
                       17450000         LR    R15,R1              SET L'SINK = L
'SOURCE                17460000         MVCL  R14,R0              COPY THE COMMA
ND TEXT                17470000CHCMDZ   D  S    0H
                         17480000         SPACE 3
                         17490000***********************************************
**************           17500000*        IF THE APPLICA  TION NAME HAS BEEN CHA
NGED, THEN     *           17510000*        UPDATE IT.
               *           17520000*********************************************
****************           17530000         SPACE 1
                             17540000         CLI   CHNAME+1,0          'NAME' O
MITTED?                      17550000         BE    CHNAMEZ             YES, SKI
P                            17560000         LA    R14,SFRNAME         NO, -->
COPY S  INK                    17570000         LA    R15,L'SFRNAME       GET L'
SINK                           17580000         L     R0,PDEPTR-PDE+PDLCHNAM -->
 COPY SOURCE                   17590000         LH    R1,PDELNGTH-PDE+PDLCHNAM G
ET L'SOURCE                      17600000         ICM   R1,8,=C' '          PAD
CHARACTER                        17610000         MVCL  R14,R0              COPY
 APPLICATION NAME                17620000         #DIE  L                   (LOG
IC ERROR)                        176  30000CHNAMEZ  DS    0H
                                   17640000         SPACE 3
                                   17650000*************************************
************************           17660000*       +  IF THE SYSTEM AFFINITY HAS
 BEEN CHANGED, THEN      *           17670000*          UPDATE IT.
                           *           17680000*********************************
****************************           17690000         SPACE 1
                                       17700000         CLI   CH  SYSID+1,0
    "SYSID" SPECIFIED?                   17710000         BE    CHSIDZ
    NO, SKIP                             17720000         LA    R14,SFRSYSID
    YES, --> COPY SINK                   17730000         LA    R15,L'SFRSYSID
      GET L'COPY SINK                      17740000         L     R0,PDEPTR-PDE+
PDLCHSYS --> COPY SOURCE                   17750000         LH    R1,PDELNGTH-PD
E+PDLCHSYS GET L'COPY SOURCE               17760000         ICM   R1,8,=C' '
      LOAD PAD   CHANACTER                   17770000         MVCL  R14,R0
        COPY THE SYSID TO THE SFR            17780000         SPACE 1
                                             17790000         CLC   =CL(L'SFRSYS
ID)'ANY',SFRSYSID "ANY" SPECI  FIED?           17800000         BNE   CHSIDANY
          NO, SKIP                             17810000         XC    SFRSYSID,S
FRSYSID   YES, RESET                           17820000CHSIDANY DS    0H
                                                 17830000         SPACE 1
                                                 17840000         CLC   =CL(L'SF
RSYSID)'CRNT',SFRSYSID "CRNT" SPECIFIED?         17850000         BNE   CHSIDZ
            NO, SKIP                             17860000           MVC   SFRSYS
ID,MYSYSID    YES, SET TO CURRENT SYSID            17870000         #TEST SIZE=(
L'SFRSYSID,EQ,L'MYSYSID)                           17880000CHSIDZ   DS    0H
                                                   17890000         SPACE   3
                                                     17900000*******************
******************************************           17910000*        IF A NEW D
ATE HAS BEEN GIVEN, THEN UPDATE IT.      *           17920000*******************
*********  *********************************           17930000         SPACE 1
                                                       17940000         CLI   CH
DATE+1,0          'DATE' OMITTED?                      17950000         BE    CH
DATEZ             YES, S  KIP                            17960000         MVC
SFRYR,SCHDYR        NO, COPY YEAR                        17970000         MVC
SFRMO,SCHDMO        COPY MONTH                           17980000         MVC
SFRDY,SCHDDY        COPY DAY                               17990000         MVC
  SFRXTIME,NOWTIME    PREVENT IMMEDIATE WINDOW TRIGGERING  18000000         NI
  SFRFLAG,255-SFRFOBSO MIGHT NOT BE OBSOLETE NOW           18010000CHDATEZ  DS
  0H                                                         18020000         SP
ACE 3                                                        18030000***********
**************************************************           18040000*        IF
 A NEW TIME HAS BEEN GIVEN, THEN UPDATE IT.      *           18050000
 _ *************************************************************           18060
000         SPACE 1                                                        18070
000         CLI   CHTIME+1,0          'TIME' OMITTED?                      18080
000           BE    CHTIMEZ             YES, SKIP                            180
90000         MVC   SFRHR,SCHDHR        NO, COPY HOUR                        181
00000         MVC   SFRMN,SCHDMN        COPY MINUTE                          181
10000         MVC     SFRXTIME,NOWTIME    PREVENT IMMEDIATE WINDOW TRIGGERING  1
8120000         NI    SFRFLAG,255-SFRFOBSO MIGHT NOT BE OBSOLETE NOW           1
8130000CHTIMEZ  DS    0H                                                       1
8140000         SPACE 3
 18150000*************************************************************
 18160000*        IF A NEW WEEDKAY HAS BEEN GIVEN, THEN UPDATE IT.   *
 18170000****************************************  *********************
   18180000         SPACE 1
   18190000         CLI   CHWEEKDA+1,0        'WEEKDAY' OMITTED?
   18200000         BE    CHWEEKDZ            YES, SKIP
     18210000         MVC   SFRWK,SCHDWK        NO, COPY WEEKDAY
     18220000         MVC   SFRXTIME,NOWTIME    PREVENT IMMEDIATE WINDOW TRIGGER
ING  18230000         NI    SFRFLAG,255-SFRFOBSO MIGHT NOT BE OBSOLETE NOW
       18240000CHWEEKDZ DS    0H
       18250000         SPACE 3
       18260000*************************************************************
       1827000  0*        IF A NEW WINDOW HAS BEEN GIVEN, THEN UPDATE IT.    *
         18280000*************************************************************
         18290000         SPACE 1
         18300000         CLI     CHWINDOW+1,0        'WINDOW' OMITTED?
           18310000         BE    CHWINDOZ            YES, SKIP
           18320000         MVC   SFRWHR,WNDOHR       NO, STORE WINDOW HOURS
           18330000         MVC   SFRWMN,WND  OMN       STORE WINDOW MINUTES
             18340000CHWINDOZ DS    0H
             18350000         SPACE 3
             18360000**************************************  *******************
****           18370000*        IF EITHER "WINDOW" OR "TIME" HAS BEEN GIVEN, THE
N  *           18380000*        VALIDITY CHECK THE WINDOW TO INSURE THAT IT DOES
   *           18390000*        NOT CROSS MIDNIGHT.
     *           18400000*******************************************************
******           18410000         SPACE 1
                 18420000         CLI   CHWINDOW+1,0        "WINDOW" OMITTED?
         +         18430000         BNE   CHWNDCHK            NO, CHECK THE WIND
OW                   18440000         CLI   CHTIME+1,0          YES, "TIME" ALSO
 OMITTED?            18450000         BE    CHWNKOK             YES, NO CHECK IS
 NECESSARY           18460000         SPACE 1
                     1  8470000CHWNDCHK LH    R14,SFRHR           GET THE SCHEDU
LED HOUR               18480000         MH    R14,=H'60'          CONVERT TO MIN
UTES                   18490000         AH    R14,SFRMN           ADD IN SCHEDUL
ED MINUTE              18500000           SPACE 1
                         18510000         LA    R15,24*60           ASSUME "UNTI
L MIDNIGHT" WINDOW       18520000*                                  DEFAULT REQU
ESTED                    18530000         SPACE 1
                           18540000         LH    R1,SFRWHR           GET THE WI
NDOW HOURS                 18550000         MH    R1,=H'60'           CNVRT TO M
INUTES                     18560000         AH    R1,SFRWMN             ADD IN W
INDOW MINUTES; DEFAULT       18570000*                                  REQUESTE
D?                           18580000         BNP   CWNOOFLW            YES, USE
 THE MIDNIGHT VALUE          18590000         LA    R15,0(R1,R14)       NO, GENE
RA  TE THE END OF THE WINDOW   18600000         CH    R15,=Y(24*60)       PAST M
IDNIGHT?                       18610000         BNH   CWNOOFLW            NO, PR
OCEED                          18620000         OI    DSAFLAGS,DSAFWNDX   YES, R
EMEMBER "WINDOW T  OO LARGE"     18630000*                                  ERRO
R                                18640000         LA    R15,24*60           RESE
T EO-WINDOW TO MIDNIGHT          18650000         SPACE 1
                                   18660000CWNOOFLW SR    R15,R14             GE
T WINDOW LENGTH                    18670000         SR    R14,R14             CL
EAR FOR DIVIDE                     18680000         D     R14,=F'60'          CN
VRT TO HOURS (R15) & MINUTES (R14) 18690000           STH   R15,SFRWHR
STORE WINDOW LENGTH (HOURS)          18700000         STH   R14,SFRWMN
STORE WINDOW LENGTH (MINUTES)        18710000CHWNKOK  DS    0H
                                     18720000         SPACE 3
                                       18730000*********************************
****************************           18740000*        IF IPLFORCED HAS BEEN GI
VEN, THEN UPDATE IT.       *           18750000******************************  *
******************************           18760000         SPACE 1
                                         18770000         CLI   CHIPLFOR+1,0
    'IPLFORCED'/'NOTIPLFORCED' OMITTED?  18780000         BE    CHIPLFOZ
    YES, SKI  P                            18790000         OI    SFRFLAG,SFRFIP
LF    NO, ASSUME 'IPLFORCED'               18800000         CLI   CHIPLFOR+1,IPL
FORCE RIGHT?                               18810000         BE    CHIPLFOZ
      YES, DONE HERE       +                 18820000         NI    SFRFLAG,255-
SFRFIPLF NO, 'NOTIPLFORCE  D'; RESET           18830000CHIPLFOZ DS    0H
                                               18840000         SPACE 3
                                               18850000*************************
************************************             18860000*        IF OVERRIDE HA
S BEEN GIVEN, THEN UPDATE IT.        *           18870000***********************
**************************************           18880000         SPACE 1
                                                 188900  00         CLI   CHOVER
RI+1,0        'OVERRIDE'/'NOOVERRIDE' OMITTED?     18900000         BE    CHOVER
RZ            YES, SKIP                            18910000         NI    SFRFLA
G,255-SFRFOVRD NO, ASSUME 'NOOVERRIDE'             18920000         CL  I   CHOV
ERRI+1,NOOVERRI RIGHT?                               18930000         BE    CHOV
ERRZ            YES, DONE HERE                       18940000         OI    SFRF
LAG,SFRFOVRD    NO, 'OVERRIDE'; RESET                18950000CHOVERRZ DS    0H
                                                       18960000         SPACE 3
                                             10/90 MDL 18970000*****************
******************************************** 10/90 MDL 18980000*        IF MASTE
R HAS BEEN GIVEN, TH  EN UPDATE IT.          * 10/90 MDL 18990000***************
********************************************** 10/90 MDL 19000000         SPACE
1                                              10/90 MDL 19010000         CLI
CHMASTER+1,0        'MASTER'/'NOMAS  TER' OMITTED? /90 MDL 19020000         BE
  CHMASTRZ            YES, SKIP                  10/90 MDL 19030000         NI
  SFRFLAG,255-SFRFMAST NO, ASSUME 'NOMASTER'     10/90 MDL 19040000         CLI
  CHMASTER+1,NOMASTER RIGHT?                     1  0/90 MDL 19050000         BE
    CHMASTRZ            YES, DONE HERE             10/90 MDL 19060000         OI
    SFRFLAG,SFRFMAST    NO, 'MASTER'; RESET        10/90 MDL 19070000CHMASTRZ DS
    0H                                             10/90 MDL 1908  0000
SPACE 3                                                        19090000*********
****************************************************           19100000*
NOW WRITE THE NEW CHANGED RECORD.                  *           19110000*********
  ****************************************************           19120000
  SPACE 1                                                        19130000
  LH    R14,SFRCMDL         GET L'COMMAND BLOCK                  19140000
  LA    R14,SFR  CMDL-SFR(,R14) GET L'SFR                          19150000
    OI    DSAFLAGS,DSAFADD2   REMEMBER TO RERUN SCHEDRUN           19160000
    GSAMCALL WRITE,RECLEN=(R14),MF=(E,GSB) WRITE THE NEW COMMAND R 19170000
    LA    R14,=C' WRITE'        --> REQUEST DESCRIPTION              19180000
      LTR   R15,R15             AOK?                                 19190000
      BNZ   GSAMERR             NO, ERROR                            19200000
      SPACE 3                                +                         19210000*
*******************************************  *****************           1922000
0*        DISPLAY THE SCHEDULED COMMAND JUST CREATED         *           1923000
0*************************************************************           1924000
0         SPACE 1                                                          19250
000         BAL   R14,DISPLAY         GO TO DISPLAY ROUTINE                19260
000         NOP   0                   +0 ATTN RECEIVED; IGNORE             19270
000*        FALL THROUGH              +4 AOK; PROCEED                        192
80000         SPACE 3                                                        192
90000*************************************************************           193
00000*        IF THE "CHANGE" COMMAND GAVE THIS RECORD A HIGHER  *           193
10000*          KEY (AND, THUS, WAS MOVED FORWARD IN THE FILE),    *           1
9320000*        THEN THIS RECORD'S ID NEEDS TO BE SAVED IN A LIST  *           1
9330000*        TO PREVENT IT FROM BEING CHANGED AGAIN.            *           1
9340000****************  *********************************************
 19350000         SPACE 1
 19360000         CLC   SFRKEY,SFRKEY-SFR+SAVESFR WAS THE KEY CHANGED?
 19370000         BE    CHNGSRCH              NO, LOOP FOR NECT RECORD
   19380000         MVC   SFRKEY,SFRKEY-SFR+SAVESFR (YES, RESTORE THE ORIGINAL K
EY 19390000*                                  SO THAT GSAM WILL PROCEED
   19400000*                                  SEQUENT  IALLY).
     19410000         BL    CHNGSRCH            YES, THE RECORD WAS MOVED BACK.
NO   19420000*                                  SPECIAL ACTION IS NECESSARY. LOO
P    19430000*                                  FOR THE NEXT RECORD
       19440000         SPACE 1
       19450000         L     R1,OVRDEOL          YES, BUT THE RECORD WAS MOVED
       19460000*                                  FORWARD. --> LIST SAVE AREA
         19470000         LA    R14,L'SFRID(,R1)    GET NEW EOL
         19480000         LA    R0,OVRDLIST         --> MAX -
         19490000         AH    R0,=Y(OVRDLEND-OVRDLIST) POSSIBLE EOL
         19500000           CR    R0,R14              WILL THE LIST OVERFLOW?
           19510000         BL    CHNGSRCH            YES, FORGET IT (NO CATASTR
OPHIE      19520000*                                  ANYWAY)
           19530000         ST      R14,OVRDEOL         NO, STORE NEW EOL PTR
             19540000         MVC   0(L'SFRID,R1),SFRID SAVE THIS RECORD'S ID
             19550000         B     CHNGSRCH            LOOP FOR NEXT RECORD
             19560000         DROP  R9                    RELEASE THE CHANGE PDL
 BASE          19570000         TITLE 'SCHEDULE COMMAND -- DISPLAY AND DELETE SU
BCOMMANDS'     19580000*********************************************************
****           19590000*        PARSE THE COMMAND OPERANDS.    +
     *           19600000************************************  *****************
********           19610000         SPACE 1
                   19620000DISPDELE NI    DSAFLAGS,255-DSAFOVRD CLEAR FLAGS
                   19630000         MVC   PPLCBUF-PPL+DSAPPL,PGPBIBUF-PGPB+D  SA
PGPB --> CBUF        19640000         MVC   PPLPCL-PPL+DSAPPL,=A(PCLDISPL) --> D
ISPLAY'S PCL         19650000         MVI   DSAECB,0            CLEAR THE ATTENT
ION ECB              19660000         CALLTSSR EP=IKJPARS,MF=(E,DSAPPL) CALL IKJ
PARS                   19670000         CL    R15,=F'28'          VALID RC?
                       19680000         #DIE  H                   NO, LOGIC ERRO
R                      19690000         B     *+4(R15)            ACT UPON THE R
C                      197  00000         B     DISPLOK             +0 PARSE COM
PLETED OK                19710000         B     PUTGET              +4 PROMPT FA
ILURE                    19720000         B     PUTGET              +8 ATTENTION
 INTERRUPT               19730000           #DIE  C,15                +12 INVALI
D PARAMETERS               19740000         B     EXIT12              +16 GETMAI
N FAILURE                  19750000         B     PUTGET              +20 TERMIN
ATED BY VALIDCK ROUTINE    19760000         #DIE  C,15                  +24 CONF
LICTING PARAMETERS           19770000         B     EXIT8               +28 TERM
INAL DISCONNECTED            19780000         SPACE 1
                             19790000DISPLOK  L     R9,DSAPDLAD           --> PD
L                              19800000         USING PDLDISPL,R9         DCL TH
E BASE FOR IT                  19810000         SPACE 3
                               19820000*****************************************
******  **************           19830000*        IF THIS IS THE DELETE COMMAND,
 THEN INSURE THAT AT *           19840000*        LEAST SOME SELECTION CRITERIA
OPERANDS HAVE BEEN   *           19850000*        GIVEN.
                       *           19860000*************************************
************************           19870000         SPACE 1
                                   19880000         CLI   CMDID,CMDIDDEL      DE
LETE COMMAND?                      1  9890000         BNE   DDFLTDIS
NO, DISPLAY; GO POSSIBLY SET         19900000*
DEFAULTS                             19910000         CLI   DISANAME+1,0
YES, "NAME" OMITTED?                 19920000           BNE   DDFLTDIS
  NO, GIVEN; GO POSSIBLY SET OTHER     19930000*
  DEFAULTS                             19940000         CLI   DDSYSID+1,0
  YES, "SYSID" OMITTED?                19950000         BNE   DDFL  TDIS
    NO, GIVEN; GO POSSIBLY SET OTHER     19960000*
    DEFAULTS                             19970000         CLI   DISWHEN+1,0
    YES, OTHER SELECTION ALSO OMITTED?   19980000         BNE   DDFLTOK
 +    NO, GIVEN; AOK                       19990000         L     R0,=A(MDELOPR
 N-1)   YES, --> MSG                         20000000         B     MSGGET
        SEND MSG AND FORGET THE COMMAND      20010000         SPACE 1
                                             20020000DDFLTDIS CLI   DISWHEN+1,0
        MISC S  ELECTION OMITTED?              20030000         BNE   DDFLTOK
          NO, GIVEN; AOK                       20040000         MVI   DISWHEN+1,
ANYTIME   YES, DEFAULT TO "ANYTIME"            20050000DDFLTOK  DS    0H
                                                 20060000         SPACE 3
                                                 20070000***********************
**************************************           20080000*        IF 'YESTERDAY'
, 'TODAY', OR 'TOMORROW' IS GIVEN,   *             20090000*        THEN DEVELOP
 A SUITABLE YYMMDD VALUE.              *           20100000*********************
****************************************           20110000         SPACE 1
                                                   20120000           CLI   DISW
HEN+1,TOMORROW  'YESTERDAY', 'TODAY', OR             20130000*
                'TOMORROW'?                          20140000         BH    DIGO
TDTE            NO, SKIP                             20150000         TIME    ST
CK,DSAWORK        YES, GET TODC (GMT)        02/84 DBC 20160000         LM    R1
4,R15,DSAWORK     LOAD IT                              20170000         AL    R0
,LTOFFGMT         CNVRT TO LOCAL TIME        02/84 DBC 20180000         SRDL  R1
4,12                CNVRT TO MICRO-SECONDS               20190000         D
R14,=F'60000000'    CONVERT TO MINUTES                   20200000         LH
R1,DISWHEN          'YESTERDAY' ==> -1                   20210000         BCTR
R1,0                 'TO  DAY' ==> 0                       20220000         BCTR
  R1,0                  'TOMORROW' ==> +1                  20230000         MH
  R1,=Y(24*60)        CNVRT TO +-MINUTES                   20240000         AR
  R15,R1              ADJUST TOD VALUE                       20250000         LA
    R1,SCHDTIME         --> CONVERSION SINK                  20260000         BA
L   R14,MINSTIME        CNVRT TO YYMMDD                      20270000DIGOTDTE DS
    0H                                                         20280000
SPACE 3                                                        20290000*********
****************************************************           20300000*
RESET THE OVERRIDE LIST AND SEE IF AN OVERRIDE     *           203100  00*
  PASS IS NECESSARY. ONE IS NECESSARY IF AN EXPLICIT *           20320000*
  DATE IS TO BE DISPLAYED, AND "EITHER" HAS BEEN     *           20330000*
  GIVEN.                                             *           20340000*******
****  **************************************************           20350000
    SPACE 1                                                        20360000
    LA    R1,OVRDLIST         --> LIST                             20370000
    ST    R1,OVRDEO+ L          EMPTY IT                             20380000
      CLI   DISWH  EN+1,DATE      EXPLICIT DATE BEING DISPLAYED?       20390000
        BH    DIDOVNO             NO, SKIP                             20400000
        CLI   DDOVERRI+1,EITHER   YES, "EITHER" GIVEN?                 20410000
        BNE   DIDOVNO               NO, SKIP                             2042000
0         OI    DSAFLAGS,DSAFOVRD   YES, SIGNAL "OVERRIDE SCAN NEEDED"   2043000
0DIDOVNO  DS    0H                                                       2044000
0         EJECT ,                                                          20450
000*************************************************************           20460
000*        SEARCH THE SCHEDULE FILE FOR COMMANDS THAT MATCH   *           20470
000*        THE GIVEN CRITERIA. DISPLAY THOSE COMMANDS.          *           204
80000*************************************************************           204
90000         SPACE 1                                                        205
00000DIDPASS2 XC    SFRKEY,SFRKEY       CLEAR THE SEARCH KEY                   2
0510000         SR    R8,R8               CLEAR THE HIT SIGNAL/COUNTER         2
0520000         SR    R5,R5               CLEAR THE (SURVIVING) RECORDS CNTR   2
0530000         SPACE 1                                                        2
0540000DSRCH  LP  GSAMCALL READ,            READ NEXT RECORD
*20550000               OPTIONS=(SEQ,NOUPDATE),
*20560000               MF=(E,GSB)
 20570000         LTR   R15  ,R15             GOT IT?
   20580000         BZ    DSRCNEOF            YES, PROCEED
   20590000         LA    R14,=C' SEQUENTIAL-READ' NO, --> REQUEST DESCRIPTION
   20600000         CH    R15,=Y(GSAMEKEY)      KEY ERROR?
     20610000         BNE   GSAMERR             NO, ERROR
     20620000         CLI   GSBVSAM+3,4         YES, EOD ERROR?
     20630000         BNE   GSAMERR             NO, ERROR
       20640000         SPACE 3
       20650000*************************************************************
       20660000*        EOF PROCESSING. IF THIS IS THE END OF AN OVERRID  E  *
         20670000*        SCAN, THEN RESET AND REPASS THE FILE; OTHERWISE,   *
         20680000*        EXIT APROPRIATELY.                                 *
         20690000*************************************************************
           20700000         SPACE 1
           20710000DSRCEOF  LTR   R8,R8               ANY HITS?
           20720000         BNZ   DDSOME              YES, GO EXAMINE FURTHER
           20730000           L     R0,=A(MDISPERR-1)   NO, ASSUME NOT DUE TO EM
PTY FILE     20740000         LTR   R5,R5               IS THE FILE EMPTY?
             20750000         BNZ   MSGGET              NO, SIMPLY ALL MISSES
             20760000         L     R+ 0,=A(MFILEMPT-1)   YES, SAY SO
               20770000         B       MSGGET              SAY SO
                 20780000         SPACE 1
                 20790000DDSOME   TM    DSAFLAGS,DSAFOVRD   THERE WERE HITS; OVE
RRIDE SCAN?      20800000         BZ    DDSOME2               NO, SKIP
                   20810000         NI    DSAFLAGS,255-DSAFOVRD YES, RESET FLAG
                   20820000         B     DIDPASS2            RE-PASS THE FILE T
O ACTUALLY         20830000*                                  PER  FORM THE DISP
LAY OR DELETE        20840000         SPACE 1
                     20850000DDSOME2  CLI   CMDID,CMDIDDEL      "DELETE" COMMAND
?                    20860000         BE    DDSMYMSG            YES, GO SETUP A
  SUMMARY MSG          20870000         CLI   DDPROMPT+1,SHORT    NO, "DISPLAY";
 "SHORT" GIVEN?        20880000         BNE   PUTGET              NO, DONE HERE
                       20890000         SPACE 1
                         20900000DDSMYMSG CVD   R8,DSAWORK          YES, CNVRT D
ELETION/DISPLAY COUNT TO 20910000*                                  DECIMAL
                         20920000         MVC   DYNAMSGS(6),=X'402020202120' EDI
T MASK                   20930  000         ED    DYNAMSGS(6),DSAWORK+5 CNVRT TO
 EBCDIC                    20940000         MVC   DYNAMSGS+6(19),=C' COMMANDS DE
LETED  ' MORE TEXT         20950000         CLI   CMDID,CMDIDDEL      "DELETE" C
OMMAND?                    20960000         B  E    DDSMYDEL            YES, PRO
CEED                         20970000         MVC   DYNAMSGS+16(8),=C'SELECTED'
NO, "DISPLAY"; ADJUST TEXT   20980000DDSMYDEL LA    R1,24               L'MSG
                             20990000         STC   R1,DYNAM  SGS-1       STORE
FOR PUTLINE                    21000000         #PUT  DYNAMSGS            DISPLA
Y THE MESSAGE                  21010000         NOP   0                   +0 ATT
ENTION; IGNORE                 21020000*        FALL THROUGH              +  4 A
OK; PROCEED                      21030000         SPACE 1
                                 21040000         CLI   CMDID,CMDIDDEL      "DEL
ETE" COMMAND?                    21050000         BNE   PUTGET              NO,
"DISPLAY";   DONE HERE             21060000         CR    R5,R8               YE
S, WERE ALL RECORDS DELETED?       21070000         BNE   PUTGET              NO
, DONE HERE                        21080000         L     R0,=A(MFILEMPT-1)   YE
S, --> INFO MSG                      21090000         B     MSGGET
DISPLAY THE MESSAGE AND EXIT         21100000         SPACE 1
                                     21110000DSRCNEOF CLI   SFRKEY,X'FF'
MASTER RECORD?                       211  20000         BE    DSRCEOF
  YES, JUST LIKE EOF                   21130000         BCTR  R5,0
  NO, INCRIMENT ACTUAL RECORD COUNT    21140000         SPACE 3
                                       21150000********+ ***********************
******************************           21160000*          CHECK APPLICATION NA
ME SELECTION.                  *           21170000*****************************
********************************           21180000         SPACE 1
                                           21190000         ICM   R1  ,3,DISANAM
E       'NAME' KEYWORD GIVEN?                21200000         BZ    DINMOK
        NO, ACCEPT                           21210000         LA    R2,DISNAME
        YES, --> ITS PDE                     21220000         USING PDE,R2
          DCL PDE BASE                         21230000DINMLP   TM    PDEFLAGS,P
DEFEXST   THIS VALUE EXIST?                    21240000         BZ    DINMNEXT
          NO, TRY NEXT                         21250000         ICM   R14,7,PDEP
TR+1      MAYBE; -  -> IT; EXIST?                21260000         BZ    DINMNEXT
            NO, TRY NEXT                         21270000         LH    R15,PDEL
NGTH        YES, GET L'VALUE                     21280000         LTR   R15,R15
            NULL VALUE?                            21290000         BNP   DINMNE
XT            YES, TRY NEXT                        21300000         LA    R0,DSA
WORK          NO, --> COPY SINK                    21310000         LA    R1,L'S
FRNAME        GET L'COPY SINK                        21320000         ICM   R15,
8,=C' '         SET PAD VALUE                        21330000         MVCL  R0,R
14              COPY VALUE TO SINK; TOO LONG?        21340000         #TEST SIZE
=(L'SFRNAME,LE,L'DSAWORK)                            21350000           BL    DI
NMNEXT            YES, TRY NEXT VALUE                  21360000         CLC   SF
RNAME,DSAWORK     NO, SELECTED NAME?                   21370000         BE    DI
NMOK              YES, PROCEED                         21380000DINMNEXT ICM
R2,7,PDECHAIN+1     NOT YET, --> NEWXT PDE IN LIST; XST? 21390000         BNZ
DINMLP              YES, GO CHECK IT OUT                 21400000         DROP
R2                  NO, RELEASE PDE BASE                 21410000         B
DSRCHLP               SKIP THIS SFR                        21420000DINMOK   DS
  0H                                                       21430000         SPAC
E 3                                                        21440000*************
****************************  ********************           21450000*        CH
ECK FOR SELECTION VIA SYSTEM AFFINITY.           *           21460000***********
**************************************************           21470000         SP
ACE 1                                                          21480000
CLI   DDSYSID+1,0         "SYSID" SPECIFIED?                   21490000
BE    DDSIDOK             NO, PERMIT                           21500000
LA    R2,PDLDDSYS         YES, --> PDE                           21510000
  USING PDE,R2              DCL PDE BASE                         21520000
  SPACE 1                                                        21530000DDSIDLP
  TM    PDEFLAGS,PDEFEXST   THIS ENTRY EXIST?                    21540000
     _          BZ    DDSIDNXT            NO, SKIP TO NEXT PDE IN THE LIST     2
1550000         ICM   R14,7,PDEPTR+1      MAYBE, --> TEXT; EXIST?              2
1560000         BZ    DDSIDNXT            NO, SKIP TO NEXT PDE IN THE LIST     2
1570000           LH    R15,PDELNGTH        GET L'SYSID
 21580000         LTR   R15,R15             NULL?
 21590000         BNP   DDSIDNXT            YES, SKIP TO NEXT PDE IN THE LIST
 21600000         LA      R0,DSAWORK          NO, --> COPY SINK
   21610000         LA    R1,L'SFRSYSID       GET L'COP SINK
   21620000         #TEST SIZE=(L'DSAWORK,GE,L'SFRSYSID)
   21630000         ICM   R15,8,=C' '           LOAD PAD CHARACTER
     21640000         MVCL  R0,R14              COPY AND PAD THE SYSID
     21650000         BL    DDSIDNXT            FORGET IT IF TOO LONG
     21660000         SPACE 1
       21670000         CLC   =CL(L'SFRSYSID)'ALL',DSAWORK "ALL" SPECIFIED?
       21680000         BE    DDSIDOK             YES, ACCEPT THIS SFR
       21690000         SPACE 1
         21700000         CLC   =CL(L'SFRSYSID)'ANY',DSAWORK NO, "ANY" SPECIFIED
?        21710000         BNE   DDSIDANY            NO, SKIP
         21720000         XC    DSAWORK(L'SFRSYSID),DSAWORK YES, CLEAR TO SIGNAL
 "A  NY"   21730000DDSIDANY DS    0H
           21740000         SPACE 1
           21750000         CLC   =CL(L'SFRSYSID)'CRNT',DSAWORK "CRNT" SPECIFIED
?          2176000  0         BNE   DDSIDCRN            NO, SKPI
             21770000         MVC   DSAWORK(L'SFRSYSID),MYSYSID YES, SET CURRENT
 SYSID       21780000         #TEST SIZE=(L'SFRSYSID,EQ,L'MYSYSID)
             21790000DDSIDCRN DS      0H
               21800000         SPACE 1
               21810000         CLC   SFRSYSID,DSAWORK    IS THE CURRENT RECORD
SELECTED?      21820000         BE    DDSIDOK               YES, PROCEED
                 21830000DDSIDNXT ICM   R2,7,PDECHAIN+1     NO, --> NEXT PDE IN
THE LIST; EXIST? 21840000         BNZ   DDSIDLP             YES, LOOP TO TEST IT
                 21850000         DROP  R2                  NO,   RELEASE PDE BA
SE                 21860000         B     DSRCHLP             REJECT THIS RECORD
                   21870000DDSIDOK  DS    0H
                   21880000         SPACE 3
                     21890000***************************************************
**********           21900000*        CHECK FOR "OVERRIDE" VS. "NOOVERRIDE" VS.
         *           21910000*        "BOTH"-OR-"EITHER" SELECTION.
         *   +         21920000*************************************************
***********  *           21930000         SPACE 1
                         21940000         CLI   DDOVERRI+1,OVERRIDE "OVERRIDE" G
IVEN?                    21950000         BE    DDOVRCHK            YES, GO SEE
IF CRNT RCD IS OVRIDE    2  1960000         CLI   DDOVERRI+1,NOOVERRI NO, "NOOVE
RRIDE"?                    21970000         BNE   DDNOVRCK            NO, "BOTH"
 OR "EITHER"; SKIP OUT     21980000         TM    SFRFLAG,SFRFOVRD    YES, AN OV
ERRIDE RECORD?             21990000           BNZ   DSRCHLP             YES, SKI
P IT                         22000000         B     DDNOVRCK            NO, ACCE
PT IT                        22010000         SPACE 1
                             22020000DDOVRCHK TM    SFRF  LAG,SFRFOVRD    "OVERR
IDE" REQUESTED; AN OVERRIDE    22030000*                                  RECORD
?                              22040000         BZ    DSRCHLP             NO, SK
IP IT                          22050000DDNOVRCK DS    0H                    YES,
 ACCEPT IT (SO FAR)              22060000         SPACE 3
                                 22070000***************************************
**********************           22080000*        CHECK FOR OBSOLETE COMMANDS SE
LECTIO  N              *           22090000*************************************
************************           22100000         SPACE 1
                                   22110000         CLI   DISWHEN+1,OBSOLETE  OB
SOLETE CMDS WANTED?                  22120000         BNE   DDNOBSOL
NO, PROCEED                          22130000         TM    SFRFLAG,SFRFOBSO
YES, IS THIS AN OBSOLETE CMD?        22140000         BZ    DSRCHLP
NO, SKIP IT                            22150000DDNOBSOL DS    0H
                                       22160000         SPACE 3
                                       22170000*********************************
****************************           22180000*          CHECK FOR "ID" VS. DAT
E SELECTION.                 *           22190000*******************************
******************************           22200000         SPACE 1
                                         22210000         CLI   DI  SWHEN+1,ID
      WHICH KEYWORD(S) GIVEN?              22220000         BH    DIGO
      'ANYTIME' OR 'OBSOLETE', PROCEED     22230000         BL    DIDATE
      'DATE', 'YESTERDAY', 'TODAY', OR     22240000*
        'TOMORROW'; GO PROCESS               22250000         LH    R3,SFRID
        'ID', GET THIS SFR'S ID              22260000         LA    R2,DISID
        --> 'ID' PDE                         22270000         USING PDE,R2
        DCL PDE   BASE                         22280000DIIDLP   TM    PDEFLAGS,P
DEFEXST   THIS LIST ENTRY EXIST?               22290000         BZ    DIIDNEXT
          NO, GO CHECK NEXT                    22300000         ICM   R1,7,PDEPT
R+1       YES, --> 1ST VALUE; E+ XIST?           22310000         BZ    DIIDNEXT
            NO, GO CHECK NEXT                      22320000         C     R3,0(,
R1)           YES, SFR ACCEPTED BY THIS LIST ITEM? 22330000         BL    DIIDNE
XT            NO, TRY NEXT ENTRY                   22340000         BE    DIGO
              YES, PROCEED                           22350000         ICM   R1,7
,PDEPTR2+1      MAYBE, --> EO-RANGE VALUE; EXIST?    22360000         BZ    DIID
NEXT            NO, TRY NEXT LIST ENTRY              22370000         C     R3,0
(,R1)           YES, THIS SFR SELECTED?              223800  00         BNH   DI
GO                YES, PROCEED                         22390000DIIDNEXT ICM   R2
,7,PDECHAI2+1     NO, --> NEXT LIST ENTRY; ANY MORE?   22400000         BNZ   DI
IDLP              YES, LOOP TO TEST IT                 22410000         DR  OP
R2                  NO, RELEASE PDE BASE                 22420000         B
DSRCHLP             REJECT THIS SFR                      22430000         SPACE
3                                                        22440000***************
*********  *************************************           22450000*        CHEC
K FOR 'DATE', 'YESTERDAY', 'TODAY', OR         *           22460000*        'TOM
ORROW' SELECTION.                              *           22470000*************
************************  ************************           22480000         SP
ACE 1                                                        22490000DIDATE   LA
    R1,SCHDTIME         --> SELECTION DATE                   22500000         BA
L   R14,DATESCRN        IS THIS SFR SEL  ECTED?                22510000
B     DSRCHLP             +0 NO, LOOP FOR NEXT SFR             22520000*
FALL THROUGH              +4 YES, PROCEED                      22530000
SPACE 3                                                          22540000*******
******************************************************           22550000*
  THE CURRENT SFR HAS BEEN ACCEPTED. DISTINGUISH     *           22560000*
  BETWEEN THE OVERRIDE PASS AND THE DISPLAY PASS.    *           2257  0000*****
********************************************************           22580000
    SPACE 1                                                        22590000
    TM    DSAFLAGS,DSAFOVRD   OVERRIDE PASS?                       22600000
      BZ    DIDOVCHK            NO, DISPLAY PASS                     22610000
      SPACE 3                                                        22620000***
**********************************************************           22630000*
      OVERRIDE PASS  . SEE IF THIS SFR ADDS TO THE         *           22640000*
        OVERRIDE LIST.                                     *           22650000*
************************************************************           22660000
        SPACE 1                                                          2267000
0         BCTR  R8,0                SIGNAL THAT A SECOND PASS IS         2268000
0*                                  NECESSARY                            2269000
0         TM    SFRFLAG,SFRFOVRD    IS THIS AN OV+ ERRIDE CMD?             22700
000         BZ    DSRCHLP             NO, READ   NEXT SFR                    227
10000         LA    R1,OVRDLIST-L'SFRNAME YES, --> SO-LIST                   227
20000         LA    R14,L'SFRNAME       GET L'LIST ENTRY                     227
30000         L     R15,OVRDEOL         --> EO-LIST                            2
2740000         SR    R15,R14             GET BXH LIMIT                        2
2750000DIDOVLP1 BXH   R1,R14,DIDOVNEW     SCAN THE LIST                        2
2760000         CLC   0(L'SFRNAME,R1),SFRNAME NAME ALREADY IN THE LIST?
 22770000         BNE   DIDOVLP1            NOT YET, CONTINUE SCAN
 22780000         B     DSRCHLP             YES, READ NEXT SFR
 22790000         SPACE 1
 22800000DID  OVNEW AR    R14,R1              --> NEW EOL
   22810000         LA    R0,OVRDLIST         --> MAX -
   22820000         AH    R0,=Y(OVRDLEND-OVRDLIST) POSSIBLE EOL
   22830000         CR    R  14,R0              WILL THE LIST OVERFLOW?
     22840000         BH    DSRCEOF             YES, HANDLE LIKE EOF
     22850000         ST    R14,OVRDEOL         NO, STORE NEW EOL PTR
     22860000         MVC   0(L'SFRNAME,R1  ),SFRNAME SAVE THIS APPL NAME
       22870000         B     DSRCHLP             LOOP FOR NEXT RECORD
       22880000         SPACE 3
       22890000******************************************  *******************
         22900000*        DISPLAY PASS. SEE IF THIS SFR IS OVERRIDDEN.       *
         22910000*************************************************************
         22920000         SPACE 1
           22930000DIDOVCHK TM    SFRFLAG,SFRFOVRD    IS THIS AN OVERRIDE?
           22940000         BNZ   DIGO                YES, DISPLAY IT
           22950000         LA    R1,OVRDLIST-L'SFRNAME NO, --> EO-LIST
             22960000         LA    R14,L'SFRNAME       GET L'LIST ENTRY
             22970000         L     R15,OVRDEOL         --> EO-LIST
             22980000         SR    R15,R14             GET BXH LIMIT
             22990000D  IDOVLP2 BXH   R1,R14,DIGO         SCAN THE LIST
               23000000         CLC   0(L'SFRNAME,R1),SFRNAME IS THIS SFR OVERRI
DDEN?          23010000         BNE   DIDOVLP2            NOT YET, CONTINUE SCAN
               23020000         B       DSRCHLP             YES, READ NEXT SFR
                 23030000         SPACE 3
                 23040000*******************************************************
******           23050000*        SEE IF THE SFR IS   TO BE DISPLAYED.
       *           23060000*****************************************************
********           23070000         SPACE 1
                   23080000DIGO     CLI   DDPROMPT+1,SHORT    "SHOR+ T" GIVEN?
                     23090000         BE    DDDISKIP            Y  ES, SKIP THE
DISPLAY                23100000DRESHOW  BAL   R14,DISPLAY         DISPLAY THE SC
HEDULED COMMAND        23110000         B     DSRCEOF             +0 ATTENTION.
PROCESS LIKE EOF       23120000*        FALL THROUGH              +4 AOK. PROCEE
  D                      23130000         SPACE 3
                         23140000***********************************************
**************           23150000*        IF THIS IS A "DELETE" COMMAND, AND IF
"PROMPT" HAS *             23160000*        BEEN GIVEN, THEN PROMPT THE USER TO
SEE IF HE      *           23170000*        REALLY WANTS TO DELETE THIS RECORD.
               *           23180000*********************************************
****************           231  90000         SPACE 1
                             23200000         CLI   CMDID,CMDIDDEL      "DELETE"
 COMMAND?                    23210000         BNE   DDNOPROM            NO, "DIS
PLAY"; SKIP PROMTING         23220000           CLI   DDPROMPT+1,PROMPT   YES, "
PROMPT" REQUESTED?             23230000         BNE   DDNOPROM            NO, SK
IP; GO DIRECTLY TO DELETE      23240000         SPACE 1
                               23250000         MVI   DSAECB  ,0            CLEA
R THE PUTGET ECB                 23260000         XC    PGPBIBUF-PGPB+DSAPGPB,PG
PBIBUF-PGPB+DSAPGPB ZAP IBUF PTR 23270000         L     R15,DSAPTGT         -->
IKJPTGT                          23280000         PUTGET PARM=DSAPGPB,        YE
S, PROMPT THE USER FOR A DECISION *23290000               OUTPUT=(DELASKO1,MULTL
VL,PROMPT),                       *23300000               ENTRY=(15),MF=(E,DSAIO
PL)                                23310000         B     *+4(R15)            PR
OCESS ACCO  RDING TO THE RC          23320000         B     DASKCHK
+0 RESPONSE RECEIVED FROM TERMINAL   23330000         #DIE  C,15
+4 RESPONSE RECEIVED FROM ^TERMINAL  23340000         B     DSRCEOF
+8 ATTENTION RECEIVED                  23350000         B     DSRCEOF
  +12 "PROFILE NOPAUSE" IN EFFECT      23360000         #DIE  C,15
  +16 NOWAIT ON TPUT                   23370000         #DIE  C,15
  +20 NOWAIT ON TGET                   2  3380000         #DIE  C,15
    +24 INVALID PARAMETERS               23390000         B     EXIT12
    +28 GETMAIN FAILURE                  23400000         B     EXIT8
    +32 TERMINAL DISCONNECT              23410000           SPACE 3
                                           23420000*****************************
********************************           23430000*        THE USER HAS RESPOND
ED TO THE PROMPT. EXAMINE IT.  *           23440000*        IF "Y", TH  EN DELET
E THE CURRENT RECORD. IF "N",    *           23450000*        THEN KEEP THE CURR
ENT RECORD. IF ANYTHING ELSE,    *           23460000*        THEN REDISPLAY THE
 CURRENT RECORD AND REPROMPT.    *           23470000***************************
*****+ *****************************           23480000         SPACE 1
                                                 23490000DASKCHK  MVI   DSAWORK,
C' '        PRIME THE EXTRACTION SINK            23500000         L     R15,PGPB
IBUF-PGPB+DSAPGPB --> IBUF                       23510000         LH    R1,0(,R1
5)          GET IT  S LENGTH                       23520000         AR    R1,R15
              --> PAST IT                          23530000         LA    R0,1
              GET BXH INCRIMENT                    23540000         SR    R1,R0
              --> IBUF'S LAST BYT  E                 23550000         LA    R15,
3(,R15)         --> SO-TEXT-1                        23560000         SPACE 1
                                                     23570000         BALR  R14,
0               LOAD LOOP HEAD                         23580000         BXH   R1
5,R0,DPROMFRE     SCAN IBUF                            23590000         TM    0(
R15),255-C' '     STILL A LEADING BLANK?               23600000         BZR   R1
4                 YES, CONTINUE THE SCAN               23610000           OC
DSAWORK(1),0(R15)   NO, COPY 1ST CHAR W/ UPCASING        23620000         SPACE
1                                                        23630000DPROMFRE L
R1,PGPBIBUF-PGPB+DSAPGPB --> PROMPT'S IBUF               23640000         LH
  R0,0(,R1)           GET ITS LENGTH                       23650000         ICM
  R0,8,=AL1(1)        GET ITS SUBPOOL                      23660000         FREE
MAIN R,LV=(0),A=(1)   FREE IT                              23670000         SPAC
E 1                                                          23680000         CL
I   DSAWORK,C'N'        KEEP?                                23690000         BE
    DSRCHLP             YES, LOOP FOR NEXT RECORD            23700000         CL
I   DSAWORK,C'Y'        NO,   DELETE?                          23710000
BNE   DRESHOW             NO, GO REDISPLAY AND REPROMPT        23720000DDNOPROM
DS    0H                  YES, FALL THROUGH TO DELETION        23730000
SPACE 3                                                          23740000*******
******************************************************           23750000*
  IF THIS IS "DELETE" COMMAND PROCESSING, THEN       *           23760000*
  DELETE THE RECORD JUST DISPLAYED.                  *             23770000*****
********************************************************           23780000
    SPACE 1                                                        23790000DDDIS
KIP BCTR  R8,0                COUNT THE SELECTED RECORD            238000  00
      CLI   CMDID,CMDIDDEL      "DELETE" COMMAND?                    23810000
      BNE   DSRCHLP             NO, LOOP TO DISPLAY NEXT RECORD      23820000
      SPACE 1                                                        23830000
      OI      DSAFLAGS,DSAFADD2   YES, MUST RERUN SCHEDRUN             23840000
        GSAMCALL READ,            GET EXCLUSIVE CONTROL OF THE RECORD *23850000
              OPTIONS=(DIR,UPDATE),                                   *23860000
              MF=(E,GSB+ )                                               2387000
0         LA    R14,=  C' UPDATE-READ' --> REQUEST DESCRIPTION             23880
000         LTR   R15,R15             AOK?                                 23890
000         BNZ   GSAMERR             NO, ERROR                            23900
000         GSAMCALL DELETE,MF=(E,GS  B) YES, DELETE THE RECORD              239
10000         LA    R14,=C' DELETE'     --> REQUEST DESCRIPTION              239
20000         LTR   R15,R15             AOK?                                 239
30000         BNZ   GSAMERR             NO, ERROR                              2
3940000         B     DSRCHLP             YES, LOOP TO SELECT NEXT RECORD      2
3950000         DROP  R9                  RELEASE THE PDL BASE                 2
3960000         TITLE 'SCHEDULE COMMAND -- HELP SUBCOMMAND'
 23970000*************************************************************
 23980000*        ATTACH THE HELP COMMAND PROCESSOR.                 *
 23990000*************************************************************
   24000000         SPACE 1
   24010000HELPCMD  MVI   DSAECB,0            CLEAR ECB FOR ATTACH
   24020000         MVC   CPPLCBUF-CPPL+DSACPPL,PGPBIBUF-PGPB+DSAPGPB --> CBUF
   24030000           LA    R1,DSACPPL          --> CPPL
     24040000         ATTACH EP=HELP,ECB=DSAECB,SHSPV=78,SZERO=NO,ESTAI=ESTAHELP
,   *24050000               LPMOD=1,SF=(E,HELPATTA)
     24060000         ST    R1,  SUBTTCBA         SAVE A(SUBTASK TCB)
       24070000         WAIT  ECB=DSAECB          WAIT FOR COMPLETION
       24080000         DETACH SUBTTCBA,STAE=YES  DETACH THE HELP COMMAND
       24090000         XC    SUBTTCBA,SUBTTCB  A   CLEAR TCB PTR
         24100000         SPACE 3
         24110000*************************************************************
         24120000*        MARK NOT-IN-USE ANY DATA SETS THAT   HELP MIGHT HAVE *
           24130000*        USED.                                              *
           24140000*************************************************************
           24150000         SPACE 1
             24160000         MVC   S99RBLN-S99RB+DALRB(L'S99RBLN+L'S99VERB+L'S9
9FLAG1),=AL1*24170000               (DALRBLEN,S99VRBRI,S99NOMNT,0) BUILD DAL RB
             24180000         LA    R14,MNUCURNT-MNUDATA+DALINFO+4*MNUCOUNT -->
"MARK NOT-I  N 24190000*                                  -USE" KEY
               24200000         ST    R14,DALINFO         BUILD TEXT KEY VECTOR
               24210000         MVI   DALINFO+4*MNUCOUNT-4,S99TUPLN SET EO-VECTO
R SIGNAL       24220000           MVC   DALINFO+4*MNUCOUNT(MNUDATAL),MNUDATA GET
 TEXT KEYS       24230000         #TEST SIZE=(L'DALINFO,GE,4*MNUCOUNT+MNUDATAL)
                 24240000         SPACE 1
                 24250000         LA    R+ 1,DALPLIST         --> PLIST
                   24260000         DYN  ALLOC ,                GO TO DAL
                     24270000         B     PUTGET              DONE HERE
                     24280000         TITLE 'SCHEDULE COMMAND -- TERMINATION'
                     24290000*************************  ************************
************           24300000*        RETURNS TO CALLER
           *           24310000*************************************************
************           24320000         SPACE 1
                         24330000EXIT16   BAL   R0,EXIT             RC=16 AUTHOR
IZATION OR GSAM FAILURE  24340000EXIT12   BAL   R0,EXIT             RC=12 GETMAI
N FAILURE                24350000EXIT8    BAL   R0,EXIT             RC=8 TERMINA
L DI  SCONNECT             24360000EXIT4    BAL   R0,EXIT             RC=4 ATTEN
TION INTERRUPT             24370000EXIT0    BAL   R0,EXIT             RC=0 NORMA
L COMPLETION               24380000EXIT     LA    R2,EXIT             LOAD RC BA
SE                           24390000         SR    R2,R0               GET RC V
ALUE                         24400000         LA    R2,0(,R2)           PURIFY
                             24410000         SPACE 3
                             24420  000*****************************************
********************           24430000*        RELEASE GSAM CONTROL BLOCKS.
                   *           24440000*****************************************
********************           24450000         S  PACE 1
                                 24460000         GSAMCALL FINISH,MF=(E,GSB) CLE
AR GSAM CONTROL                  24470000         SPACE 3
                                 24480000***********************  **************
************************           24490000*        IF THE SCHEDULE FILE HAS BEE
N ALTERED, THEN I MUST *           24500000*        NOW START THE SCHEDRUN PROGR
AM TO ACCOMPLISH THE   *           24510000*        ALTERED SCHEDULE.
                         *           24520000***********************************
**************************           24530000         SPACE 1
                                     24540000         TM    DSAFLAGS,DSAFADD2
HAS THE FILE B  EEN ADDED TO?          24550000         BZ    NOADDED2
  NO, SKIP                             24560000         MODESET KEY=ZERO
  YES, SET KEY=0                       24570000         SR    R0,R0
  CLEAR THE UCM ID VALUE                 24580000         MGCR  SCHEDRUN-4
    EXECUTE THE SCHEDRUN PROGRAM         24590000         MODESET KEY=NZERO
    RESTORE P/P KEY                      24600000NOADDED2 DS    0H
                                         246  10000         SPACE 3
                                           24620000*****************************
********************************           24630000*        RELEASE THE DSA AND
RETURN TO THE CALLER.          *           24640000********+ *******************
**********************************           24650000           SPACE 1
                                               24660000         #EXIT ((R14,R12)
),RC=(R2) RETURN TO CALLER                     24670000         TITLE 'SCHEDULE
COMMAND -- DATESCRN - DATE SCREENING ROUTINE'  24680000*****************  ******
**************************************           24690000*
                                     *           24700000*        DATESCRN -- TH
IS ROUTINE SCREENS THE CURRENT       *           24710000*        SCHEDULE FILE
RECORD   AGAINST A GIVEN DATE TO SEE   *           24720000*        IF THE RECOR
D IS SELECTED BY THAT DATE.            *           24730000*
                                       *           24740000*        NOTE, IN THE
 COMMENTARY FOR THIS R  OUTINE ALL       *           24750000*        REFERENCES
 TO THE "CURRENT DATE" SHOULD BE TAKEN   *           24760000*        TO MEAN TH
E SELECTION DATE.                        *           24770000*
                                           *           24780000*        INPUTS:
                                           *           24790000*              -
R1 POINTS TO THE SELECTION DATE (TIMESTAMP *           24800000*
FORM).                                     *             24810000*
- R14 POINTS TO A RETURN ADDRESS.            *           24820000*
- SFR CONTAINS THE CURRENT SCHEDULE FILE     *           24830000*
  RECORD.                                    *           24840000*
                                               *           24850000*        RETU
RN 0(,R14):                                    *           24860000*
  - THE CURRENT SFR IS REJECTED. IT IS NOT     *           24870000*
      SELECTED BY THE GIVEN DATE.                *           24880000*
    - R14: THE HIGH-ORDER BIT IS SET ON IF THE   *           24890000*
      SFR IS OBSOLETE WITH RESPECT TO THE GIVEN  *           24900000*
      DATE; OTHER  WISE, IT IS SET OFF.            *           24910000*
      - ALL OTHER REGISTERS ARE RESTORED.          *           24920000*
      - WRKPTIME AND WRKNTIME ARE ALTERED IN AN    *           24930000*
        UNUSEFUL WAY.                                *           24940000*
                                                     *           24950000*
  RETURN 4(,R14):                                    *           24960000*
        - THE CURRENT SFR IS ACCEPTED. IT IS           *           24970000*
            SELECTED BY THE GIVEN DATE.                *           24980000*
          - R14: THE HIGH-ORDER BIT IS SET OFF         *           24990000*
            SIGNIFYING THAT THE SFR IS NOT OBSOLETE    *             25000000*
              WITH RESPECT TO THE GIVEN DATE.            *           25010000*
            - R15 CONTAINS THE SCHEDULED EXECUTION TIME  *           25020000*
              IN MINUTES (SINCE THE START OF THE         *           25030000
         _ *                CENTURY).                                  *
   25040000*              - ALL OTHER REGISTERS ARE RESTORED.          *
   25050000*              - WRKPTIME CONTAINS THE SCHEDULED EXECUTION  *
   25060000*                  TIMESTAMP.                                 *
     25070000*              - WRKNTIME HAS BEEN ALTERED IN AN UNUSEFUL   *
     25080000*                WAY.                                       *
     25090000*                                                             *
       25100000*************************************************************
       25110000         SPACE 1
       25120000DATESCRN LA    R14,0(,R14)           CLEAR THE HIGH-BIT
         25130000         STM   R14,R2,SAVDATSC     SAVE REGISTERS
         25140000         SPACE 1
         25150000         LR    R2,R1               COPY   THE SELECTION TIMESTA
MP PTR     25160000         USING TIME,R2             DCL THE TIMESTAMP BASE
           25170000         SPACE 3
           25180000*****************************************************  ******
**           25190000*        GENERATE A START DATE BY SUBSTITUTING CURRENT DATE
 *           25200000*        VALUES INTO THOSE FIELDS OF THE SFR ASSIGNED DATE
 *           25210000*        THAT CONTAIN ZEROS. IF THE RESULTING DATE FALLS
 *             25220000*        PAST THE VALID END OF THE MONTH, THEN ADJUST THE
   *           25230000*        DAY TO BE THE LAST DAY OF THAT MONTH.
   *           25240000*********************************************************
****           2525000  0         SPACE 1
                 25260000         MVC   WRKPTIME,SFRTIME    COPY THE SFR ASSIGNE
D TIME TO A WORK 25270000*                                  AREA
                 25280000         SPA  CE 1
                   25290000         ICM   R1,3,WRKPYR         IS A YEAR ASSIGNED
?                  25300000         BNZ   GOTYR               YES, SKIP
                   25310000         MVC   WRKPYR,TIM  EYR       NO, SET TO THE C
URRENT YEAR          25320000GOTYR    DS    0H
                     25330000         SPACE 1
                     25340000         ICM   R1,3,WRKPMO         IS   A MONTH ASS
IGNED?                 25350000         BNZ   GOTMO               YES, SKIP
                       25360000         MVC   WRKPMO,TIMEMO       NO, SET TO THE
 CURRENT MONTH         25370000GOTMO    DS    0H
                         25380000         SPACE 1
                         25390000         ICM   R1,3,WRKPDY         IS A DAY ASS
IGNED?                   25400000         BNZ   GOTDY               YES, SKIP
                 +         25410000         MVC   WRKPDY,TIMEDY       NO, SET TO
 THE CURRENT DA  Y           25420000GOTDY    DS    0H
                             25430000         SPACE 1
                             25440000         LH    R1,WRKPMO           GET THE
MONTH VALUE                  2  5450000         AR    R1,R1               CNVRT
TO A HWORD OFFSET              25460000         LA    R0,=Y(0,31,28,31,30,31,30,
31,31,30,31,30,31) MO LENS     25470000         AR    R1,R0               --> TH
IS MONTH'S LENGTH              25480000           LH    R0,WRKPDY           GET
THE DAY VALUE                    25490000         CH    R0,0(,R1)           VALI
D FOR THIS MONTH?                25500000         BNH   GOTDYOK             YES,
 NO ADJUSTMENT NEEDED            25510000         LH    R0,0  (,R1)           NO
, RESET TO THE MONTH'S LAST DAY    25520000         TM    WRKPYR+1,B'00000011' I
S THIS A LEAP YEAR?                25530000         BNZ   GOTDYSET            NO
, SKIP                             25540000         CLI   WRKPMO+1,2
YES, IS THIS FEBRUARY?               25550000         BNE   GOTDYSET
NO, SKIP                             25560000         LA    R0,29
YES, RESET TO LEAP-FEB'S LAST DAY    25570000GOTDYSET STH   R0,WRKPDY
RESET DAY   TO EO-MONTH                25580000         SPACE 1
                                       25590000GOTDYOK  MVC   WRKNTIME,WRKPTIME
  PRIME "WRKN" = "WRKP"                25600000         SPACE 3
                                         25610000*******************************
******************************           25620000*        ADJUST THE GENERATED S
TART DATE SO THAT "WRKPTIME" *           25630000*        CONTAINS EITHER TODAY
OR THE MOST RECENT PRIOR     *             25640000*        EXECUTION DATE, AND
"WRKNTIME" CONTAINS EITHER     *           25650000*        TODAY OR THE EARLIES
T NEXT EXECUTION DATE FOR THIS *           25660000*        SCHEDULED COMMAND (U
NLESS THE RANGE OF POSSIBLE    *           25670000*          EXECUTION DATES DO
ES NOT SPAN THE CURRENT DATE IN  *           25680000*        WHICH CASE ONE OR
THE OTHER OF "WRKPTIME" OR       *           25690000*        "WRKNTIME" WILL CO
NTAIN AN INCORRECT VALUE BUT THE *           25700000*        ERROR WI  LL BE SU
CH THAT THE VALIDITY OF SUBSEQUENT *           25710000*        TESTS WILL NOT B
E AFFECTED).                       *           25720000*************************
************************************           25730000         SPACE 1
                                                 25740000         CLC   WRKPYMD,
TIMETIME    WHICH WAY DO I HAVE TO               25750000*
            TIME-TRAVEL?                         25760000         BE    CHKWDY
            NIETHER;   GO PERFORM WEEKDAY          25770000*
              MODIFICATION                         25780000         BH    ROLLBA
CK            BACKWARDS; GO DO IT                  25790000*        FALL THROUGH
              FORWARDS; GO DO IT   +                 25800000         SPACE 3
                                                       25810000*****************
********************************************           25820000*        THE GENE
RATED DATE FALLS PRIOR TO THE CURRENT      *           25830000*        DATE. EN
TER A LOOP TO ADJUST THE DATE FORWARD IN   *             25840000*        TIME E
ITHER UNTIL A FUTURE DATE IS ACHIEVED OR     *           25850000*        UNTIL
THE DATE OVERFLOWS BACK TO EITHER THE SAME   *           25860000*        DATE O
R A PRIOR DATE (IN WHICH CASE THIS SCHEDULED *           258700  00*        COMM
AND WILL NEVER BE EXECUTED AGAIN).             *           25880000*************
************************************************           25890000         SPAC
E 1                                                        25900000ROLL4WRD MV
C   WRKPTIME,WRKNTIME   NEXT IS STILL IN THE PAST. COPY      25910000*
                        IT IN CASE IT TURNS OUT TO BE THE    25920000*
                        MOST RECENT PAST DATE FOR THIS SFR.  25930000         SP
ACE 1                                                          25940000
LA    R0,1                LOAD AN ARITHMATIC "CARRY" SIGNAL.   25950000*
                          ASSUME "CARRY"                       25960000
ICM   R1,3,SFRDY          IS   THE DAY SPECIFICALLY DEFINED?     25970000
  BNZ   GOTDYF              YES, GO STORE IT                     25980000
  SR    R0,R0               NO, ASSUME "NO CARRY"                25990000
  LH    R1,WRKNDY           GET DAY VALUE                          26000000
    LA    R1,1(,R1)           ADVANCE A DAY                        26010000
    CH    R1,=H'31'           OVERFLOW? (NOTE, THE "FINDMINS"      26020000*
                              ROUTINE COMPENSATES FOR SHOR  TER      26030000*
                                MONTHS)                              26040000
      BNH   GOTDYF              NO, GO STORE NEW DAY                 26050000
      BCTR  R0,0                YES, SIGNAL "CARRY"                  2606  0000
        LA    R1,1                RESET TO START OF NEXT MONTH         26070000G
OTDYF   STH   R1,WRKNDY           STORE NEW DAY VALUE                  26080000
        SPACE 1                                                        26090000
          LTR   R0,R0               WAS THERE A CARRY TO THE MONTHS      2610000
0*                                  VALUE?                               2611000
0         BZ    VCHKINCR            NO, GO TEST THE NEW DATE             2612000
0         ICM   R1,3,SF  RMO          YES, IS THE MONTH SPECIFICALLY       26130
000*                                  ASSIGNED?                            26140
000         BNZ   GOTMOF              YES, GO STORE IT ("CARRY" IS SET)    26150
000         SR    R0,R0                 NO, SET "NO CARRY"                   261
60000         LH    R1,WRKNMO           GET MONTH VALUE                      261
70000         LA    R1,1(,R1)           INCRIMENT IT                         261
80000         CH    R1,=H'12'           OVERFLOW?    +                         2
6190000         BNH   GOTMOF              NO, GO ST  ORE NEW VALUE
 26200000         BCTR  R0,0                YES, RESTORE "CARRY" SIGNAL
 26210000         LA    R1,1                RESET TO 1ST MONTH OF NEXT YEAR
 26220000GOTMOF   STH   R1,WRKNMO           STORE NEW MONTH VALUE
   26230000         SPACE 1
   26240000         LTR   R0,R0               WAS THERE A CARRY TO THE YEAR VALU
E? 26250000         BZ    VCHKINCR            NO, GO TEST THE NEW DATE
     26260000         ICM   R1,3,SFRYR          YES, IS THE YEAR SPECIFICALLY
     26270000*                                  ASSIGNED?
     26280000         BNZ   GOTYRF              YES, GO STORE IT
     26290000           LH    R1,WRKNYR           NO, GET OLD YEAR VALUE
       26300000         LA    R1,1(,R1)           INCRIMENT IT
       26310000GOTYRF   STH   R1,WRKNYR           STORE NEW YEAR VALUE
       26320000         SPACE 1
         26330000VCHKINCR CLC   WRKPYMD,WRKNYMD     DID THE DATE ADVANCE?
         26340000         BL    VCHKSCHD            YES, GO SEE HOW FAR
         26350000         OI    SAVDATSC,B'100  00000' NO (BUT IT STILL MIGHT DU
E TO       26360000*                                  WEEKDAY MODIFICATION). PRO
BABLY THIS 26370000*                                  SFR IS OBSOLETE. (SAY SO).
           26380000         B     CHKWDY              GO CHEC  K THE WEEKDAY MOD
IFIER. NOTE, 26390000*                                  "WRKPTIME" IS GOOD; "WRK
NTIME" IS    26400000*                                  TRASH.
             26410000         SPACE 1
               26420000VCHKSCHD CLC   WRKNYMD,TIMETIME    YES, DID THE DATE REAC
H THE PRESENT  26430000*                                  OR FUTURE?
               26440000         BL    ROLL4WRD            NO, LOOP TO TRY AGAIN
                 26450000         B     CHKWDY              YES, GO EXAMINE WEEK
DAY MODIFICATION 26460000         SPACE 3
                 26470000*******************************************************
******           26480000*          THE GENERATED DATE FALLS AFTER THE CURRENT D
ATE.   *           26490000*        ENTER A LOOP TO ADJUST THE DATE BACKWARDS IN
 TIME  *           26500000*        EITHER UNTIL A PAST DATE IS ACHIEVED OR UNTI
L THE  *           26510000*        DATE   UNDERFLOWS BACK TO EITHER THE SAME DA
TE OR A  *           26520000*        MORE FUTURE DATE (IN WHICH CASE THIS SCHED
ULED     *           26530000*        COMMAND HAS NEVER YET BEEN EXECUTED).
         *           26540000***************************  **********************
************           26550000         SPACE 1
                       26560000ROLLBACK MVC   WRKNTIME,WRKPTIME   WRKP IS STILL
IN THE FUTURE. COPY    26570000*                                  IT IN+  CASE I
T TURNS OUT TO BE THE    26580000*                                  E  ARLIEST F
UTURE DATE FOR THIS SFR.   26590000         SPACE 1
                           26600000         LA    R0,1                LOAD AN AR
ITHMATIC "CARRY" SIGNAL.   26610000*                                  ASSUME "CA
RRY"                         26620000         ICM   R1,3,SFRDY          IS THE D
AY SPECIFICALLY DEFINED?     26630000         BNZ   GOTDYB              YES, GO
STORE IT                     26640000         SR    R0,R0               NO, ASSU
ME "NO CARRY"                  26650000         LH    R1,WRKPDY           GET TH
E DAY VALUE                    26660000         BCTR  R1,0                RETREA
T A DAY                        26670000         LTR   R1,R1               UNDERF
LOW?                           266  80000         BNZ   GOTDYB              NO,
GO STORE NEW VALUE               26690000         BCTR  R0,0                YES,
 SIGNAL "CARRY"                  26700000         LA    R1,31               RESE
T TO END OF PRIOR MONTH (NOTE,   26710000*                                    TH
E "FINDMINS" ROUTINE COMPENSATES   26720000*                                  FO
R SHORTER MONTHS)                  26730000GOTDYB   STH   R1,WRKPDY           ST
ORE NEW DAY VALUE                  26740000         SPACE 1
                                     26750000         LTR   R0,R0
WAS THERE A CARRY TO THE MONTHS      26760000*
VALUE?                               26770000         BZ    VCHKDECR
  NO, GO TEST THE NEW DATE             26780000         ICM   R1,3,SFRMO
  YES, IS THE MONTH SPECIFICALLY       26790000*
  ASSIGNED?                            26800000         BNZ   GOTMOB
  YES, GO STOR  E IT ("CARRY" IS SET)    26810000         SR    R0,R0
    NO, SET "NO CARRY"                   26820000         LH    R1,WRKPMO
    GET MONTH VALUE                      26830000         BCTR  R1,0
    DECRIMENT IT                           26840000         LTR   R1,R1
      UNDERFLOW?                           26850000         BNZ   GOTMOB
      NO, GO STORE NEW VALUE               26860000         BCTR  R0,0
      YES, RESTORE "CARRY" SIGNAL          2  6870000         LA    R1,12
        RESET TO LAST MONTH OF PRIOR YEAR    26880000GOTMOB   STH   R1,WRKPMO
        STORE NEW MONTH VALUE                26890000         SPACE 1
                                             26900000           LTR   R0,R0
          WAS THERE A CARRY TO THE YEAR VALUE? 26910000         BZ    VCHKDECR
          NO, GO TEST THE NEW DATE             26920000         ICM   R1,3,SFRYR
          YES, IS THE YEAR SPECIFICALLY        26930000*
            ASSIGNED?                            26940000         BNZ   GOTYRB
            YES, GO STORE IT                     26950000         LH    R1,WRKPY
R           NO, GET OLD YEAR VALUE               26960000         BCTR  R1,0
         +    DECRIMENT IT                         26970000GOTYRB   STH   R1,WRK
PYR             STORE NEW YEAR VALUE                 26980000         SPACE 1
                                                     26990000VCHKDECR CLC   WRKP
YMD,WRKNYMD     DID THE DATE RETREAT?                27000000         BNL   CHKW
DY              NO, BU  T IT STILL MIGHT DUE TO        27010000*
                  WEEKDAY MODIFICATION. NOTE,          27020000*
                  "WRKNTIME" IS GOOD. "WRKPTIME" IS    27030000*
                  TRASH.                                 27040000         CLC
WRKPYMD,TIMETIME    YES, DID IT REACH THE PRESENT OR     27050000*
                    PAST?                                27060000         BH
ROLLBACK            NO, LOOP TO TRY AGAIN                  27070000*        FALL
 THROUGH              YES, EXAMINE WEEKDAY MODIFICATION    27080000         SPAC
E 3                                                        27090000*************
************************************************           27100000  *        PR
OBABLY VALID BUT CERTAINLY USABLE VALUES FOR     *           27110000*        "W
RKPTIME" AND "WRKNTIME" HAVE BEEN DEVELOPED.     *           27120000*
                                                 * 07/86 MDL 27130000*        IF
 T  HE WEEKDAY MODIFICATION OPERAND CONTAINS A     * 07/86 MDL 27140000*
MIXED RESULT WHEN TESTED WITH MASK '00C0', THEN    * 07/86 MDL 27150000*
THE WEEKDAY VALUE IS AN EXACT MATCH MODIFIER, AND  * 07/86 MDL 27160000*
SHOULD BE PROCESS  ED SEPARATELY FROM THE OTHER      * 07/86 MDL 27170000*
  POSSIBLE VALUES FOR WEEKDAY.                       * 07/86 MDL 27180000*
                                                     * 07/86 MDL 27190000*
  NOW MODIFY EITHER THE PREVIOUS   DATE FORWARD OR THE *           27200000*
    NEXT DATE BACKWARD ACCORDING TO WHETHER THE        *           27210000*
    WEEKDAY MODIFICATION IS FORWARDS OR BACKWARDS. IF  *           27220000*
    THE MODIFICATION RESULTS IN THE GENERATION   OF THE  *           27230000*
      CURRENT DATE, THEN I HAVE A HIT; OTHERWISE I       *           27240000*
      DON'T.                                             *           27250000***
**********************************************************             27260000
        SPACE 1                                                        27270000C
HKWDY   DS    0H                                             07/86 MDL 27280000
        TM    SFRWK+1,SFRWKNOT+SFRWKXCT EXACT WEEKDAY MODIFIER? 86 MDL 272900  0
0         BM    CHKWDY10            YEP, CHECK EXACT WEEKDAY OUT /86 MDL 2730000
0         SPACE 1                                              07/86 MDL 2731000
0         ICM   R1,3,SFRWK          IS THERE A WEEKDAY MODIFIER?         2732000
0         BP      WDY4WRD             YES, FORWARDS; GO PROCESS IT         27330
000         BM    WDYBACK             YES, BACKWARDS; GO PROCESS IT        27340
000         SPACE 1                                                        27350
000         CLC   WRKPYMD,T+ IMETIME    NO, IS THE EXECUTION DATE TODAY?     273
60000*                                    (NOTE, IF IT IS, THEN PRECEEDING     2
7370000*                                  LOGIC FORCES WRKPTIME=WRKNTIME).     2
7380000         BE    DSCRRET4            YES, ACCEPT THIS SFR; RETURN +4      2
7390000         B     DSCRRET0              NO, REJECT THIS SFR; RETURN +0
 27400000         SPACE 2                                              07/86 MDL
 27410000************************************************************* 07/86 MDL
 27420000*                                                             * 07/86 M
DL 27430000*        NEITHER EXACT MATCH WEEKDAY OPERATORS EFFECT THE   * 07/86 M
DL 27440000*        CURRENT DATE, SO PROCESSING MAY STOP IF A DATE     * 07/86 M
DL 27450000*        MATCH IS NOT FOUND.  IF MATCHED, CALCULATE TODAYS    * 07/86
 MDL 27460000*        DAY IN THE WEEK, AND OR IN THE APPROPRIATE FLAG    * 07/86
 MDL 27470000*        BIT TO MATCH THE WEEKDAY OPERATOR.  A SIMPLE       * 07/86
 MDL 27480000*        COMPARE WILL DETERMINE HITS AND MISSES.            * 07/86
 MDL   27490000*                                                           * 07/
86 MDL 27500000************************************************************* 07/
86 MDL 27510000CHKWDY10 DS    0H                                             07/
86 MDL 27520000           CLC   WRKPYMD,TIMETIME    IS THE EXECUTION DATE TODAY?
 /86 MDL 27530000         BNE   DSCRRET0            NO. REJECT THIS SFR; RETURN0
7/86 MDL 27540000         SPACE 1                                              0
7/86 MDL 27550000         LA    R1,  TIMETIME         --> CURRENT TIME/DATE
 07/86 MDL 27560000         BAL   R14,FINDMINS        CNVRT TO MINUTES IN CENTUR
Y07/86 MDL 27570000         BAL   R14,FINDWKDY        CNVRT TO DAY IN WEEK
 07/86 MDL 27580000         TM    SFRWK+1,SFRWKXCT      WEEKDAY MUST MATCH?
   07/86 MDL 27590000         BO    CHKWDY20            YES, GO CHECK IT OUT
   07/86 MDL 27600000*                                  NO, IT MUST NOT MATCH
   07/86 MDL 27610000         O     R15,=A(SFRWKNOT)    EXTRA BIT   INTO DAY IN
WEEK 07/86 MDL 27620000         CLM   R15,1,SFRWK+1       COMPARE VALUES OF DAY
IN WEEK 86 MDL 27630000         BNE   DSCRRET4            NO MATCH, ACCEPT SFR,
RET +4 /86 MDL 27640000         B     DSCRRET0            MATCH, REJECT SFR, RET
  URN +0 /86 MDL 27650000         SPACE 1
       07/86 MDL 27660000CHKWDY20 DS    0H                  WEEKDAY MUST NOT MAT
CH.    07/86 MDL 27670000         O     R15,=A(SFRWKXCT)    EXTRA BIT INTO DAY I
N WEEK 07/86 MD  L 27680000         CLM   R15,1,SFRWK+1       COMPARE VALUES OF
DAY IN WEEK 86 MDL 27690000         BE    DSCRRET4            MATCH, ACCEPT SFR,
 RETURN +4 /86 MDL 27700000         B     DSCRRET0            NO MATCH, REJECT S
FR, RET +0 /86 MDL 27710000           SPACE 3
                     27720000***************************************************
**********           27730000*        THE WEEKDAY MODIFICATION IS FORWARDS
         *           27740000****************+ *********************************
************           27750000         SPA  CE 1
                         27760000WDY4WRD  LA    R1,WRKPTIME         --> MOST REC
ENT PRIOR DATE           27770000         BAL   R14,FINDMINS        CNVRT TO MIN
UTES SINCE SO-CENTURY    27780000         LR    R0,R15                SAVE
                           27790000         BAL   R14,FINDWKDY        CNVRT TO W
EEKDAY ID NUMBER           27800000         SH    R15,SFRWK           DISTANCE F
ROM THE SCHEDULED          27810000*                                  WEE  KDAY.
 IS THE DATE THAT DAY?       27820000         BZ    WDYFCHK             YES, GO
SEE IF THE DATE IS TODAY     27830000         LCR   R15,R15             NO, RESE
T THE DIRECTION; IS THE      27840000*                                  SCHEDULE
D WEEKDA  Y AFTER THE DATE'S   27850000*                                  WEEKDA
Y?                             27860000         BP    WDYFAVNC            YES, S
KIP                            27870000         LA    R15,7(,R15)         NO, RE
SET THE DATE'S WEEKDAY   TO      27880000*                                  "LAS
T WEEK"                          27890000WDYFAVNC MH    R15,=Y(60*24)       CNVR
T THE DISTANCE TO MINUTES        27900000         AR    R15,R0              ADVA
NCE THE GENERATED DATE           27910  000         LA    R1,WRKPTIME         --
> CONVERSION SINK                  27920000         BAL   R14,MINSTIME        CN
VRT MINUTES BACK TO TIMESTAMP      27930000         SPACE 1
                                   27940000WDYFCHK  C  LC   WRKPYMD,TIMETIME
IS THE GENERATED DATE TODAY?         27950000         BL    DSCRRET0
NO, REJECT THE SFR; RETURN +0 (IT    27960000*
MAY OR MAY NOT BE OBSOLETE. R14 IS   27970000*
  ALREADY SET).                        27980000         L     R14,SAVDATSC
  (MAYBE, BUT IT DEFINITELY IS NOT -   27990000         LA    R14,0(,R14)
   OBSOLETE. INSURE THAT THE -         28000000         ST    R14,SAVDATSC
      "OBSOLETE" FLAG IS CLEAR)          28010000         BH    DSCRRET0
    NO, REJECT THE SFR; RETURN +0        28020000         B     WDYFRAME
    YES, GO MAKE FINAL TESTS             28030000         SPACE 3
                                           28040000*****************************
********************************           28050000*        THE WEEKDAY MODIFICA
TION IS BACKWARDS              *           28060000*****************************
********************************             28070000         SPACE 1
                                             28080000WDYBACK  LA    R1,WRKNTIME
        --> EARLIEST FUTURE DATE             28090000         BAL   R14,FINDMINS
        CNVRT TO MINUTES SINCE SO-CENTURY    281  00000         LR    R0,R15
          SAVE                                 28110000         BAL   R14,FINDWK
DY        CNVRT TO WEEKDAY ID NUMBER           28120000         AH    R15,SFRWK
          DISTANCE FROM THE SCHEDULED          28130000*       +
            WEEKDAY; IS THE DATE'S WEEKDAY THAT  28140000*
              DAY?                                 28150000         BZ    WDYBCH
K             YES, GO SEE IF THE DATE IS TODAY     28160000         BP    WDYBRT
RT            NO, THE SCHEDULED WEEKDAY FALLS      28170000*
                EARLIER IN THE WEEK THAN THE DATE'S  28180000*
                WEEKDAY; PROCEED                     28190000         LA    R15,
7(,R15)         NO, THE SCHEDULED WEEKDAY FALLS      28200000*
                  LATER IN THE WEEK THAN THE DATE'S    28210000*
                  WEEKDAY. ADJUST THE DATE'S WEEKDAY   28220000*
                  TO THE PRECEEDING WEEK               28230000WDYBRTRT MH    R1
5,=Y(-60*24)      CNVRT TH  E DISTANCE TO MINUTES AND    28240000*
                    COMPLEMENT                           28250000         AR
R15,R0              ADJUST THE DATE BACK IN TIME         28260000         LA
R1,WRKNTIME         --> CONVERSION SINK                    28270000         BAL
  R14,MINSTIME        CNVRT DATE BACK TO TIMESTAMP         28280000         SPAC
E 1                                                        28290000WDYBCHK  CLC
  WRKNYMD,TIMETIME    IS THE GENERATED DATE TODAY?           28300000         BN
E   DSCRRET0            NO, REJECT THIS SFR                  28310000         SP
ACE 3                                                        28320000***********
**************************************************           28330000*
THE GENERATED DATE AS MODIFIED BY THE WEEKDAY      *           28340000*
VALUE IS TODAY. BUT THAT IS NOT ENOUGH. IF THE     *           28350000*
SFR'S DATE CONTAINS SPECIFIC VALUES FOR MONTH AND  *           28360000*
YEAR,   THEN THE WEEKDAY MODIFICATION MUST NOT       *           28370000*
  CHANGE THOSE VALUES.                               *           28380000*******
******************************************************           28390000
  SPACE 1                                                          28400000WDYFR
AME SR    R1,R1               CLEAR FOR INSERTS                    28410000
    ICM   R1,3,SFRYR          IS A SPECIFIC YEAR ASSIGNED?         28420000
    BZ    WDYYROK             NO, SK  IP                             28430000
      CH    R1,TIMEYR           YES, CHANGED?                        28440000
      BNE   DSCRRET0            YES, REJECT THIS SFR                 28450000
      SPACE 1                                                          28460000W
DYYROK  ICM   R1,3,SFRMO          NO, IS A SPECIFIC MONTH ASSIGNED?    28470000
        BZ    DSCRRET4            NO, ACCEPT THIS SFR                  28480000
        CH    R1,TIMEMO           YES, CHANGED?                          2849000
0         BNE   DSCRRET0            YES, REJECT THIS SFR                 2850000
0*        FALL THROUGH              NO, ACCEPT THIS SFR                  2851000
0         SPACE 3                                                        2852000
0            _ *************************************************************
       28530000*        ACCEPT THE SFR. CONSTRUCT THE SCHEDULED TIMESTAMP  *
       28540000*        IN WRKPTIME. GET THE SCHEDULED TIME, IN MINUTES,   *
       28550000*          INTO R15. RETURN +4 TO THE CALLER.                 *
         28560000*************************************************************
         28570000         SPACE 1
         28580000DSCRRET4 MVC     WRKPYMD,TIMEYMD     GET THE SCHEDULED DATE
           28590000         MVC   WRKPHM,SFRHM        APPEND THE SCHEDULED TIME
           28600000         SPACE 1
           28610000         LA    R1,WRKPTIME           --> TIMESTAMP
             28620000         BAL   R14,FINDMINS        CONVERT TO MINUTES IN R1
5            28630000         SPACE 1
             28640000         L     R14,SAVDATSC        RESTO  RE R14 WITH OBSOL
ETE=0          28650000         LM    R0,R2,SAVDATSC+8    RESTORE REGISTERS
               28660000         DROP  R2                  RELEASE TIMESTAMP BASE
               28670000         B     4(,R14)             RETURN +4 TO CALLE  R
                 28680000         SPACE 3
                 28690000*******************************************************
******           28700000*        REJECT THE SFR. RETURN +0
     *             28710000*****************************************************
********           28720000         SPACE 1
                   28730000DSCRRET0 LM    R14,R2,SAVDATSC     RESTORE REGISTERS
                   2874000  0         BR    R14                 RETURN +0 TO CAL
LER                  28750000         TITLE 'SCHEDULE COMMAND -- DISPLAY - DISPL
AY A SCHEDULED COMMA*28760000               ND TO THE USER'
                     28770000************  *************************************
************           28780000*
           *           28790000*        DISPLAY -- DISPLAY A SCHEDULED COMMAND T
O THE      *           28800000*        USER.
             *           28810000*
             *           28820000*        INPUTS:
             *           28830000*              - R14 POINTS TO A RETUR  N ADDRE
SS.            *           28840000*              - SFR CONTAINS THE SCHEDULED C
OMMAND TO BE   *           28850000*                DISPLAYED.
               *           28860000*              - DSAFLAGS(DSAFTITL) GATES WHE
THER O  R NOT A  *           28870000*                DISPLAY LISTING TITLE LINE
 HAS BEEN        *           28880000*                GENERATED ALREADY.
                 *           28890000*
                 *   +         28900000*        RETURN 0(,R14):
                     *           28910000*              - THE DISPLAY HAS BEEN I
NTERRUPTED BY AN     *           28920000*                ATTENTION SIGNAL FROM
THE USER.            *           28930000*              - ALL REGISTERS ARE REST
ORE.                 *           2  8940000*
                       *           28950000*        RETURN 4(,R14):
                       *           28960000*              - THE DISPLAY LINE HAS
 BEEN PRINTED WITHOUT  *           28970000*                  INTERRUPTION.
                         *           28980000*              - ALL REGISTERS ARE
RESTORED.                *           28990000*
                         *           29000000*******************  **************
****************************           29010000         SPACE 1
                                       29020000DISPLAY  STM   R14,R1,SAVDISPL
  SAVE REGISTERS                       29030000         SPACE 3
                                         29040000*******************************
******************************           29050000*        SEE IF A TITLE LINE HA
S BEEN WRITTEN YET.          *           29060000*******************************
**************  ****************           29070000         SPACE 1
                                           29080000         TM    DSAFLAGS,DSAFT
ITL   TITLE ALREADY PRINTED?               29090000         BNZ   DSTITLED
      YES, DON'T REPRINT IT                  29100000         OI    DSAFLAGS,DSA
FTITL   NO, CLOSE THE GATE                   29110000         #PUT  MDISPTIT%
        DISPLAY THE TITLE LINE               29120000         B     DISPRET0
        +0 ATTENTION; RETURN +0 TO CALLER      29130000DSTITLED DS    0H
          +4 AOK; PROCEED                      29140000         SPACE 3
                                               29150000*************************
************************************           29160000*          GENERATE THE S
FR DISPLAY LINE.                     *           29170000***********************
**************************************           29180000         SPACE 1
                                                 29190000         MVI   DM  SG,C
' '           CLEAR THE -                          29200000         MVC   DMSG+1
(DML-1),DMSG   MSG BUFFER                          29210000         SPACE 1
                                                   29220000         LH    R1,SFR
ID              GET THE ID NUMBER                    29230000         CVD   R1,D
SAWORK          CNVRT TO DECIMAL                     29240000         MVC   DSAW
ORK+8(9),=X'402020202120404040' EDIT MASK            29250000         #TEST SIZE
=(17,LE,L'DSAWORK)                                     29260000         LA    R1
,DSAWORK+13       PRIME ICO SIGNIFICANCE IS FORCED     29270000         EDMK  DS
AWORK+8(6),DSAWORK+5 CNVRT TO EBCDIC                   29280000         MVC   DM
ID(4),0(R1)       COPY LEFT-JUSTIFIED T+ O MSG           29290000         SPACE
1                                                          29300000         MVC
  DMSYSID,SFRSYSID    GET THE SYSTEM-ID                    29310000         TM
  DMSYSID,255-C' '    "ANY"?                               29320000         BNZ
  DSTSYSID            NO, DONE HERE                          29330000         MV
C   DMSYSID,=CL(L'SFRSYSID)'ANY' YES, SAY SO                 29340000DSTSYSID DS
    0H                                                       29350000         SP
ACE 1                                                        293600  00
MVC   DMDATE(8),=C'--/--/--' JUNK                              29370000
SR    R1,R1                                                    29380000
ICM   R1,3,SFRMO          EXPLICIT MONTH?                      29390000
BZ      DSTNOMO             NO, SKIP                             29400000
  CVD   R1,DSAWORK          YES, CNVRT TO DECIMAL                29410000
  UNPK  DMDATE(2),DSAWORK+6(2) CNVRT TO EBCDIC                   29420000
  OI    DMDATE+1,  B'11110000' FIX THE FUCKING SIGN                29430000DSTNO
MO  ICM   R1,3,SFRDY          EXPLICIT DAY?                        29440000
    BZ    DSTNODY             NO, SKIP                             29450000
    CVD   R1,DSAWORK          YE  S, CNVRT TO DECIMAL                29460000
      UNPK  DMDATE+3(2),DSAWORK+6(2) CNVRT TO EBCDIC                 29470000
      OI    DMDATE+4,B'11110000' FIX THE FUCKING SIGN                29480000DST
NODY  ICM   R1,3,SFRYR          EXPLICIT YEAR?                         29490000
        BZ    DSTNOYR             NO, SKIP                             29500000
        CVD   R1,DSAWORK          YES, CNVRT TO DECIMAL                29510000
        UNPK  DMDATE+6(2),DSAWORK+6(2) CNVRT TO EBCDIC                   2952000
0         OI    DMDATE+7,B'11110000' FIX THE FUCKING SIGN                2953000
0DSTNOYR  DS    0H                                                       2954000
0         SPACE 1                                                        2955  0
000         ICM   R1,3,SFRWK          EXPLICIT WEEK?                       29560
000         BZ    DSTNOWK             NO, SKIP                             29570
000         LA    R15,WEEKDAYS-WDYROOTL-1 YES, --> LOOKUP TABLE            29580
000           SR    R14,R14             CLEAR FOR LENGTH INSERTS             295
90000DSTWKLP  LA    R15,WDYROOTL+1(R14,R15) --> NEXT ENTRY                   296
00000         ICM   R14,1,WDYLNGTH(R15) GET L'ENTRY; EOL?                    296
10000         #DIE  M                     YES, LOGIC ERROR                     2
9620000         CLM   R1,1,WDYNUMBR(R15)  NO, RIGHT DAY?                       2
9630000         BNE   DSTWKLP             NO, KEEP LOOKING                     2
9640000         MVC   DMDAY,WDYNAME(R15)    YES, COPY TO MSG
 29650000         TM    DMDAY,X'C0'         SPECIAL CHARACTER WEEKDAY? 07/86 MDL
 29660000         BO    DSTNOWK             NO, DONE HERE              07/86 MDL
 29670000         MVC   DMDAY-1(L'DMDAY+1),WDYNAME(R15) Y+ ES, ADJUST THE TEXT
   29680000DSTNOWK  DS    0H
     29690000         SPACE 1
     29700000         LH    R1,SFRWHR           GET WINDOW HOURS
     29710000         MH    R1,=H'100'          DECIMAL SHIFT 2 PLACES
       29720000         AH    R1,SFRWMN           INCLUDE WINDOW MINUTES
       29730000         CVD   R1,DSAWORK          CNVRT TO DECIMAL
       29740000         MVC   DMWINDOW-1(9),=X'4020202021207A2020' EDIT MASK
         29750000         LA    R1,DMWINDOW+4       PRIME ICO SIGNIFICANCE FORCE
D        29760000         EDMK  DMWINDOW-1(9),DSAWORK+4 CNVRT TO EBCDIC
         29770000         BCTR  R1,0                BACK OFF
         29780000           MVI   0(R1),C'+'          DECORATION
           29790000         SPACE 1
           29800000         LH    R1,SFRHR            GET HOUR
           29810000         MH    R  1,=H'100'          DECIMAL SHIFT 2 PLACES
             29820000         AH    R1,SFRMN            INCLUDE MINUTES
             29830000         CVD   R1,DSAWORK          CNVRT TO DECIMAL
             29840000         UNPK  DMTIME+1(4),DS  AWORK+5(3) CNVRT TO EBCDIC
               29850000         OI    DMTIME+4,B'11110000' FIX THE FUCKING SIGN
               29860000         MVC   DMTIME(2),DMTIME+1  CORRECT POSITION
               29870000         MVI   DMTIME+2,C':'       DECORAT  ION
                 29880000         SPACE 1
                 29890000         LA    R1,DMFLAGS          --> FLAGS FIELD
                 29900000         TM    SFRFLAG,SFRFIPLF    IF?
                   29910000         BZ    DSTNOIF             NO, SKIP
                   29920000         MVI   0(R1),C'I'          YES, SAY SO
                   29930000         LA    R1,2(,R1)           ADVANCE
                     29940000DSTNOIF  TM    SFRFLAG,SFRFOVRD    OVERRIDE?
                     29950000         BZ    DSTNOOV             NO, SKIP
                     29960000         MVI   0(R1),C'O'          YES, SAY SO
                     29970000           LA    R1,2(,R1)           ADVANCE
                       29980000DSTNOOV  TM    SFRFLAG,SFRFMAST    MASTER?
             10/90 MDL 29990000         BZ    DSTNOMAS            NO, SKIP
             10/90 MDL 30000000         MVI     0(R1),C'M'          YES, SAY SO
               10/90 MDL 30010000         LA    R1,2(,R1)           ADVANCE
               10/90 MDL 30020000DSTNOMAS TM    SFRFLAG,SFRFOBSO    OBSOLETE COM
MAND?          10/90 MDL 30030000         BZ    DSTNOOBS              NO, SKIP
                           30040000         MVI   0(R1),C'N'          YES, SAY S
O                          30050000DSTNOOBS DS    0H
                           30060000         SPACE 1                        +
                             30070000         MVC   DMNAME,SFRNAME      G  ET TH
E APPLICATION NAME             30080000         SPACE 1
                               30090000         LA    R0,DMCMD-2          EO-MSG
 IF NULL COMMAND               30100000         LH    R15,SFRCMDL         GET L'
CMD + 4                          30110000         LA    R15,SFRCMDL(R15)    -->
EO-CMD                           30120000DSTCLN   BCTR  R15,0               BACK
 UP                              30130000         TM    0(R15),B'10111111'  C' '
 OR X'00'?                         30140000         BZ    DSTCLN              YE
S, KEEP SCANNING                   30150000         LA    R14,SFRCMD-1        NO
, --> SO-FIELD                     30160000         SR    R15,R14             GE
T L'COMMAND TEXT; NULL?            301  70000         BNP   DSTPUT
YES, DONE HERE                       30180000         LA    R14,SFRCMD
NO, --> COPY SOURCE                  30190000         LA    R0,DMCMD
--> COPY SINK                        30200000           LA    R1,L'DMCMD
  L'SINK                               30210000         CR    R1,R15
  IS SINK TOO LONG?                    30220000         BNH   DSTCMOVE
  NO, PROCEED                          30230000         LR    R1,R15
    YES, USE L'SOURCE                    30240000DSTCMOVE MVCL  R0,R14
    COPY CMD TEXT TO MSG                 30250000         SPACE 1
                                         30260000DSTPUT   LA    R1,DMSG
      --> MSG                              30270000         SR    R0,R1
      GET L'MSG                            30280000         STC   R0,DMSG-1
      STORE FOR "PUTMSG"                   30290000         AR    R1,R0
      --> EO-MSG                             30300000         MVI   0(R1),0
        SET TRAILER                          30310000         #PUT  DMSG
        DISPLAY THE MESSAGE                  30320000         B     DISPRET0
        +0 ATTENTION; RETURN +4 T  O THE CALLR 30330000*        FALL THROUGH
          +4 AOK; RETURN +4 TO THE CALLER      30340000         SPACE 3
                                               30350000*************************
************************************           3  0360000*        AOK. RETURN +4
                                     *           30370000***********************
**************************************           30380000         SPACE 1
                                                 30390000           LM    R14,R1
,SAVDISPL     RESTORE REGISTERS                    30400000         B     4(,R14
)             RETURN TO CALLER                     30410000         SPACE 3
                                                   30420000*******************
******************************************           30430000*        ATTENTION
RECEIVED. RETURN +0                      *           30440000*******************
******************************************           30450000         SPACE 1
             +                                         30460000DISPRET0 LM    R1
4,R1,SAVDIS  PL     RESTORE REGISTERS                    30470000         BR
R14                 RETURN +0                            30480000         TITLE
'SCHEDULE COMMAND -- FINDTIME/MINSTIME - TODC TO TIMESTA*30490000
MP CONVERSION'                                             30500000*************
************************************************           30510000*
                                               *           30520000*        FIND
TIME -- CONVERTS A TIME-OF-DAY CLOCK VALU  E TO  *           30530000*        A
TIMESTAMP OF THE FORM YY/MM/DD/HH/MM.            *           30540000*
                                                 *           30550000*        MI
NSTIME - CONVERTS A TIME VALUE GIVEN IN MINUTES  *             30560000*
(SINCE THE START OF THE CENTURY) TO A TIMESTAMP.   *           30570000*
                                                   *           30580000*
INPUTS (FINDTIME):                                 *           30590000  *
        - R1 POINTS TO A TIMESTAMP OUTPUT AREA WHICH *           30600000*
          CONSISTS OF FIVE CONSECUATIVE HALFWORDS.   *           30610000*
        - DSAWORK CONTAINS A TOD CLOCK VALUE.        *           30620000*
          - R14 POINTS TO THE RETURN ADDRESS.          *           30630000*
                                                       *           30640000*
    INPUTS (MINSTIME):                                 *           30650000*
          - R1 POINTS   TO A TIMESTAMP OUTPUT AREA.      *           30660000*
            - R14 POINTS TO A RETURN ADDRESS.            *           30670000*
            - R15 CONTAINS THE MINUTES VALUE TO BE       *           30680000*
              CONVERTED.                                   *           30690000*
                                                           *           30700000*
        RETURN 0(,R14):                                    *           30710000*
              - THE CLOCK VALUE IS CONVERTED AND ST  ORED    *           3072000
0*                INTO THE AREA POINTED TO BY R1.            *           3073000
0*              - ALL REGISTERS ARE RESTORED.                *           3074000
0*                                                           *             30750
000*************************************************************           30760
000         SPACE 1                                                        30770
000         USING TIME,R1             DCL TIME BASE                        30780
0  00FINDTIME STM   R14,R0,SAVFTIME     SAVE REGISTERS                       307
90000         LM    R14,R15,DSAWORK     LOAD TODC VALUE                      308
00000         SRDL  R14,12              CNVRT TO MICROSECONDS                308
10000         D       R14,=F'60000000'    CNVRT TO MINUTES                     3
0820000         B     GOTMINUT            SKIP ALTERNATE ENTRY                 3
0830000         SPACE 3                                                        3
0840000MINSTIME STM   R14,R0,SA+ VFTIME     SAVE REGISTERS
 30850000GOTMINUT SR    R14,R  14
   30860000         D     R14,=F'60'          GET +MM, HOURS
   30870000         STH   R14,TIMEMN          SAVE +MM
   30880000         SR    R14,R14
     30890000         D     R14,=F'24'          GET +HH, DAYS
     30900000         STH   R14,TIMEHR          SAVE +HH
     30910000         SPACE 1
       30920000         LA    R15,1(,R15)         PRETEND 1900 WAS A LEAPYEAR
       30930000         SR    R14,R14
       30940000         D     R14,=A(365*4+1)     GET +DAYS, QUADYEARS
         30950000         SLL   R15,2               GET YEARS (ALMOST)
         30960000         CH    R14,=H'366'         ANY RESIDUAL YEARS?
         30970000         BL    GOTYYDDD            NO, SKIP
           30980000         BCTR  R14,0               YES, DECR FOR LEAPDAY
           30990000         LR    R0,R15              SAVE QUADYEARS*4
           31000000         SRDL  R14,32              SHIFT +DAYS
           31010000           D     R14,=F'365'         GET +DAYS, +YEARS
             31020000         AR    R15,R0              GET +YEARS
             31030000GOTYYDDD LA    R15,1900(,R15)      GET YY
             31040000         STH   R15  ,TIMEYR          SAVE
               31050000         SPACE 1
               31060000         LA    R14,1(,R14)         CNVRT +DAYS TO 1-ORIGI
N              31070000         TM    TIMEYR+1,B'00000  011' IN A LEAPYEAR?
                 31080000         BNZ   NRMLYEAR            NO, PROCEED
                 31090000         CH    R14,=Y(31+29)       YES, PAST THE LEAPDA
Y?               31100000         BL    NRMLYEAR            NO, PROCE  ED
                   31110000         BH    LEAPYEAR            YES, MUST ADJUST
                   31120000         LA    R15,2               NO, ON THE LEAP DA
Y; GET MM          31130000         LA    R14,29              GET DD
                     31140000         B     GOTMMDD             DONE HERE
                     31150000LEAPYEAR BCTR  R14,0               ADJUST FOR THE E
XTRA (LEAP) DAY      31160000NRMLYEAR LA    R15,=Y(0,31,28,31,30,31,30,31,31,30,
31,30,31)              31170000         LR    R0,R15              (SAVE)
                       31180000MONSIZLP LA    R15,2(,R15)         --> NEXT MONTH
 SIZE                  31190000         SH    R14,0(,R15)         DECR +DAYS; TO
O FAR YET?             31200000           BP    MONSIZLP            NO, KEEP LOO
PING                     31210000         AH    R14,0(,R15)         YES, RESTORE
 CORRECT DD              31220000         SR    R15,R0              GET MM*2
                         31230000         SRL   R+ 15,1               GET MM
                           31240000GOTMMDD  STH     R15,TIMEMO          STORE MM
                             31250000         STH   R14,TIMEDY          STORE DD
                             31260000         SPACE 1
                             31270000         LM    R14,R0,SAV  FTIME     RESTOR
E REGISTERS                    31280000         BR    R14                 RETURN
 TO CALLER                     31290000         DROP  R1                  RELEAS
E TIME BASE                    31300000         TITLE 'SCHEDULE COMMAND -- FI  N
DMINS - TIMESTAMP TO MINUTES CON*31310000               VERSION'
                                 31320000***************************************
**********************           31330000*
                       *           31340000*        FINDMINS -- CONVERTS A TIMES
TAMP VALUE TO MINUTES  *           31350000*        SINCE THE START OF THE CENTU
RY.                    *           31360000*
                       *             31370000*        INPUTS:
                         *           31380000*              - R1 POINTS TO A TIM
ESTAMP.                  *           31390000*              - R14 POINTS TO THE
RETURN ADDRESS.          *           31400  000*
                           *           31410000*        RETURN 0(,R14):
                           *           31420000*              - R15 CONTAINS THE
 MINUTES VALUE.            *           31430000*                - ALL OTHER REGI
STERS ARE RESTORED.          *           31440000*
                             *           31450000*******************************
******************************           31460000         SPACE 1
                                           31470000         USING TIME,R1
      DCL TIME BASE                        31480000FINDMINS STM   R14,R0,SAVFMIN
S     SAVE REGISTERS                       31490000         LH    R15,TIMEYR
      G  ET YY                               31500000         SH    R15,=H'1900'
        CNVRT TO +YEARS                      31510000         SR    R14,R14
                                             31520000         D     R14,=F'4'
        CNVRT TO +YEAR  S, QUADYEARS           31530000         MH    R15,=Y(365
*4+1)     CNVRT QUADYEARS TO DAYS              31540000         BCTR  R15,0
          ADJUST FOR THE FACT THAT 1900 WAS    31550000*
          NOT A LEAPYEAR.                        31560000         LTR   R14,R14
            ANY +YEARS?                          31570000         BZ    NORSDUYR
            NO, SKIP                             31580000         MH    R14,=H'3
65'         YES, CNVRT TO +DAYS - 1 (LEAPDAY)    315  90000         LA    R15,1(
R14,R15)      GET +DAYS (INCL LEAPDAY)             31600000NORSDUYR DS    0H
              GOT YY CONVERTED TO DAYS             31610000         SPACE 1
                                                   31620000        +  LH    R14,
TIMEMO          GET MM                               31630000           AR    R1
4,R14             CNVRT TO HWORD OFFSET                31640000         LA    R0
,=Y(0,31,28,31,30,31,30,31,31,30,31,30,31)             31650000         AR    R1
4,R0                                                   31660000         LH    R0
  ,TIMEDY           GET THE DD                           31670000         CH
R0,0(,R14)          IS IT TOO LARGE FOR THIS MM?         31680000         BNH
FMDYOK              NO, PROCEED                          31690000         LH
R0,0(,R14)            YES, USE MAX DD                      31700000         TM
  TIMEYR+1,B'00000011' IS THIS A LEAPYEAR?                 31710000         BNZ
  FMDYOK              NO, GOT DD                           31720000         CLI
  TIMEMO+1,2          YES, IS   THIS FEBRUARY?               31730000         BN
E   FMDYOK              NO, GOT DD                           31740000         LA
    R0,29               YES, (JESUS CHRIST.)                 31750000FMDYOK   BC
TR  R0,0                CNVRT FROM 1-ORIGIN T  O 0-ORIGIN      31760000
AR    R15,R0              ADD DD TO DAYS                       31770000
SPACE 1                                                        31780000FMMSZLP
BCTR  R14,0               --> PREVIOUS -                         31790000
  BCTR  R14,0                MONTH'S SIZE                        31800000
  AH    R15,0(,R14)         ADD ITS SIZE TO DAYS                 31810000
  CLI   1(R14),0            BACK PAST JANUARY YET?               31820000
    BNE   FMMSZLP             NO, KEEP LOOPING                     31830000
    TM    TIMEYR+1,B'00000011' YES, IS THIS A LEAP YEAR?           31840000
    BNZ   FMNOLPYR            NO, GAT DAYS (FINALLY)               31850000
    CLI     TIMEMO+1,2          YES, IS MM PAST FEBRUARY?            31860000
      BNH   FMNOLPYR            NO, GOT DAYS                         31870000
      LA    R15,1(,R15)         YES, ADJUST DAYS                     31880000FMN
OLPYR DS    0H                    GOT DAYS SINCE START OF CENTURY      31890000
        SPACE 1                                                        31900000
        MH    R15,=H'24'          CNVRT TO HOURS                       31910000
        AH    R15,TIMEHR          INCLUD  E HH                           3192000
0         MH    R15,=H'60'          CNVRT TO MINUTES                     3193000
0         AH    R15,TIMEMN          INCLUDE MM                           3194000
0         SPACE 1                                                          31950
000         L     R14,SAVFMINS        RESTORE REGISTER                     31960
000         L     R0,SAVFMINS+8       RESTORE REGISTERS                    31970
000         BR    R14                 RETURN TO CALLER                       319
80000         DROP  R1                  RELEASE TIME BASE                    319
90000         TITLE 'SCHEDULE COMMAND -- FINDWKDY - FROM GIVEN MINUTES'      320
00000*************************************************************           320
10000            _ *                                                           *
           32020000*        FINDWKDY -- FINDS THE DAY OF THE WEEK ON WHICH A   *
           32030000*        TIME VALUE, GIVEN IN MINUTES, FALLS.               *
           32040000*
 *           32050000*        INPUTS:
 *           32060000*              - R14 POINTS TO THE RETURN ADDRESS.
 *           32070000*                - R15 CONTAINS THE GIVEN TIME VALUE IN
   *           32080000*                MINUTES SINCE THE START OF THE CENTURY.
   *           32090000*
   *           32100000*        RETURN 0(,R14):
     *           32110000*              - R15 CONTAINS THE DAY OF THE WEEK.
     *           32120000*                (SUNDAY = 1).
     *           32130000*              - ALL OTHER REGISTERS ARE   RESTORED.
       *           32140000*
       *           32150000*****************************************************
********           32160000         SPACE 1
                     32170000FINDWKDY ST    R14,SAVFWKDY        SAVE REGISTER
                     32180000         SR    R14,R14
                     32190000         D     R14,=A(60*24)       CNVRT MINUTES TO
 DAYS                  32200000         LA    R15,1(,R15)         ADJUST THE ORI
GIN                    32210000         SR    R14,R14
                       32220000         D     R14,=F'7'           GET THE WEEKDA
Y                      3223000  0         LA    R15,1(,R14)         COPY AND CNV
RT TO 1-ORIGIN           32240000         L     R14,SAVFWKDY        RESTORE
                         32250000         BR    R14                 RETURN TO CA
LLER                     32260000         TIT  LE 'SCHEDULE COMMAND -- GSAMERR -
 MESSAGE GENERATER'        32270000*********************************************
****************           32280000*
               *           32290000*        GSAMERR -- A GSA  M ERROR HAS OCCURE
D. ISSUE THE     *           32300000*        GSAM GENERATED ERROR MESSAGE. STAC
K BEHIND IT A    *           32310000*        MESSAGE GIVING THE EXPLICIT ERROR
CODES RECIEVED   *           32320000*        FROM GSAM. THEN LOOP TO MSGGE  T.
                   *           32330000*
                   *           32340000*        INPUTS:
                   *           32350000*              - R14 POINTS TO THE GSAM R
EQUEST               *           32360000*                DESCRIPTION.
                     *           32370000*              - R15 CONTAINS THE GSAM
ERROR CODE.          *           32380000*              - GSBVSAM CONTAINS THE G
SAM REASON CODE.     *   +         32390000*              - GSBMSGX CONTAINS THE
 GSAM GENERATED          *           32400000*                MESSAGE.
                         *           32410000*
                         *           32420000*        EXIT MSGGET:
                         *           3  2430000*              - MESSAGES ARE ISS
UED/STACKED VIA PUTLINE.   *           32440000*
                           *           32450000*********************************
****************************           32460000           SPACE 3
                                         32470000*******************************
******************************           32480000*        GET THE PRIMARY MESSAG
E FROM GSAM. IF NONE IS      *           32490000*        PROVIDED,   THEN USE A
 DEFAULT MESSAGE.              *           32500000*****************************
********************************           32510000         SPACE 1
                                           32520000GSAMERR  MVC   DYNAMSGS(L'GSB
MSG  X),GSBMSGX GET GSAM'S MESSAGE           32530000         #TEST SIZE=(L'DYNA
MSGS,GT,L'GSBMSGX)                           32540000         LA    R2,DYNAMSGS+
L'GSBMSGX LOAD SCANNER                       32550000GEBLP0   BCTR  R2,0
        BACK UP                                32560000         TM    0(R2),B'10
111111'   STILL C' ' OR X'00'?                 32570000         BZ    GEBLP0
          YES, KEEP SCANNING                   32580000         LA    R0,DYNAMSG
S-1       NO, LOAD BASE                          32590000         SR    R2,R0
            GET L'MSG; NULL?                     32600000         BP    GOTGMSG1
            NO, PROCEED                          32610000         MVC   DYNAMSGS
(27),=C' SCHEDULE FILE ACCESS ERROR' YES, USE DF   32620000         LA    R2,27
              GET L'DEFAULT                        32630000GOTGMSG1 LA    R2,1(,
R2)           GET L'MSG                            32640000         STC   R2,DYN
AMSGS-1       STORE                                32650000           LA    R2,D
YNAMSGS-1(R2)   --> EO-TEXT (SO FAR)                 32660000         MVI   0(R2
),C'+'          INSERT STACKED MESSAGES SIGNAL       32670000         LA    R3,1
(,R2)           --> ENTIRELY PAST 1ST MSG            32680000         SPACE 3
                                                       32690000*****************
********************************************           32700000*        CONSTRUC
T A 2ND-LEVEL INFORMATION MESSAGE.         *           32710000*****************
*************  *******************************           32720000         SPACE
1                                                        32730000         MVC
1(14,R3),=C' GSAM ERROR - '                              32740000         MVC
15(8,R3),GSBFILE                                           32750000         LA
  R2,23(,R3)                                               32760000GEBLP1   BCTR
  R2,0                                                     32770000         TM
  0(R2),B'10111111'  C' ' OR X'00'?        +                 32780000         BZ
    GEBLP1              YES, KEEP SCANNIN  G                   32790000
MVC   1(7,R2),=C' FILE, '                                      32800000
SR    R1,R1                                                    32810000
IC    R1,0(,R14)          GET L'REQUEST DESCRIPTER               32820000
  MVC   8(*-*,R2),1(R14)    (EXECUTED)                           32830000
  EX    R1,*-6              COPY TO MSG                          32840000
  LA    R2,9(R1,R2)         ADVANCE                              328500  00
    MVC   0(13,R2),=C', ERROR CODE '                               32860000
    CVD   R15,DSAWORK                                              32870000
    MVC   DSAWORK+8(10),=X'40202020212040404040'                   32880000
    #T  EST SIZE=(18,LE,L'DSAWORK)                                   32890000
      LA    R1,DSAWORK+13       PRIME ICO SIGNIFICANCE FORCED        32900000
      EDMK  DSAWORK+8(6),DSAWORK+5 CNVRT TO EBCDIC                   32910000
      MVC   13(5,R2),  0(R1)      COPY LEFT JUSTIFIED                  32920000
        LA    R15,DSAWORK+14                                           32930000
        SR    R15,R1              L'DIGITS                             32940000
        LA    R2,13(R15,R2)       --  > EO-MSG SO FAR                    3295000
0         MVC   0(14,R2),=C', REASON CODE ' TEXT                         3296000
0         L     R15,GSBVSAM         GET REASON CODE                      3297000
0         CVD   R15,DSAWORK         CNVRT TO DECIMA  L                     32980
000         MVC   DSAWORK+8(10),=X'40202020212040404040' EDIT MASG & PAD   32990
000         #TEST SIZE=(18,LE,L'DSAWORK)                                   33000
000         LA    R1,DSAWORK+13       PRIME ICO SIGNIFICANCE FORCE  D        330
10000         EDMK  DSAWORK+8(6),DSAWORK+5 CNVRT TO EBCDIC; SET R1           330
20000         MVC   14(5,R2),0(R1)      COPY LEFT JUSTIFIED                  330
30000         LA    R15,DSAWORK+14                                           330
4  0000         SR    R15,R1              L'DIGITS                             3
3050000         LA    R2,13(R15,R2)       --> LAST CHARACTER OF THE MSG        3
3060000         SR    R2,R3               L'MSG                                3
3070000           STC   R2,0(,R3)           STORE FOR PUTLINE
 33080000         SPACE 1
 33090000         AR    R3,R2               --> LAST CHARACTER OF 2ND MSG
 33100000         MVI   1(R3),0               SET "NO 3RD MSG" SIGNAL
   33110000         SPACE 1
   33120000         LA    R0,DYNAMSGS+L'DYNAMSGS-1 --> EO-MSGS BUFFER
   33130000         CR    R3,R0                 OVERFLOW?
     33140000         #DIE  H                   YES, DESIGN ERROR
     33150000         SPACE 3
     33160000************************************************+ *************
       33170000*        CALL PUTLINE TO DISPLAY THE MESSAGE  (S).            *
         33180000*************************************************************
         33190000         SPACE 1
         33200000         #PUT  DYNAMSGS            DISPLAY THE MESSAGES
           33210000         #DIE  C,15                +0 ATTENTION; TERMINATE
           33220000         B     PUTGET              +4 AOK; LOOP FOR NEXT SUB-
CMD        33230000         TITLE 'SCHEDULE COMMAND -- NEXTID - READ AND UPDATE
"SFMRNXID  "*33240000               '
             33250000***********************************************************
**           33260000*
 *           33270000*          NEXTID -- THIS ROUTINE READS THE SCHEDULE FILE'S
   *           33280000*        MASTER RECORD; EXTRACTS, INCRIMENTS, AND UPDATES
   *           33290000*        THE SFMRNXID FIELD; REWRITES THE UPDATED MASTER
   *           33300000*        RECORD;   AND RETURNS THE UPDATED VALUE TO THE
     *           33310000*        CALLER.
     *           33320000*
     *           33330000*        INPUTS:
       *           33340000*              - R14 POINTS TO THE RETURN ADDRESS.
       *           33350000*
       *           33360000*        RETURN 0(,R14):
         *           33370000*              - R1 CONTAINS THE NEXT ID VALUE.
         *           33380000*              - ALL OTHER REGISTERS ARE RESTORED.
         *           33390000*              - NEXTID# CONTAINS A COPY OF THE UPD
ATED   ID  *           33400000*                VALUE.
           *           33410000*              - THE SFMRNXID FIELD OF THE SCHEDU
LE FILE'S  *           33420000*                MASTER RECORD IS INCRIMENTED, AN
D THE      *             33430000*                ENTIRE MASTER RECORD IS REWRIT
TEN TO THE   *           33440000*                SCHEDULE FILE.
             *           33450000*              - THE SFR BUFFER CONTAINS A COPY
 OF THE      *           33460000*                  UPDATED MASTER RECORD. (THE
BUFFER'S PRIOR *           33470000*                CONTENTS ARE LOST).
               *           33480000*
               *           33490000*        EXIT   GSAMERR:
                 *           33500000*              - AN ERROR HAS OCCURED DURIN
G THE PROCESSING *           33510000*                OF THE SCHEDULE FILE.
                 *           33520000*              - R14 POINTS   TO A MESSAGE
SEGMENT.           *           33530000*              - R15 CONTAINS THE GSAM RE
TURN CODE.         *           33540000*              - R0 AND R1 ARE NOT RESTOR
ED.                *           33550000*              - ALL OTHER REGISTERS ARE+
  RESTORED.          *           33560000*
                       *           33570000*************************************
************************           33580000         SPACE 1
                                   33590000NEXTID   STM   R14,R0,SAVNXTID     SA
VE REGISTERS                         33600000         MVI   SFMRKEY,X'FF'
SET THE MASTER -                     33610000         MVC   SFMRKEY+1(L'SFMRKEY-
1),SFMRKEY RECORD'S KEY              33620000         GSAMCALL READ,OPTIONS=(DIR
,UPDATE),MF=(E,GSB) EXCLUSI  VE READ   33630000         LA    R14,=C' UPDATE-REA
D' --> REQUEST DESCRIPTION             33640000         LTR   R15,R15
  AOK?                                 33650000         BNZ   GSAMERR
  NO, ERROR                            336  60000         LH    R1,SFMRNXID
    YES, GET THE MASTER ID               33670000         LA    R1,1(,R1)
    INCREMENT IT                         33680000         CH    R1,=H'9999'
    OVERFLOW?                            33690000           BNH   NIDGOTID
      NO, PROCEED                          33700000         SR    R1,R1
      YES, RESET                           33710000NIDGOTID STH   R1,SFMRNXID
      STORE NEW VALUE                      33720000         STH   R1,NEX  TID#
        SAVE LOCALLY TOO                     33730000         GSAMCALL REWRITE,M
F=(E,GSB) REWRITE THE MASTER RECORD          33740000         LA    R14,=C' REWR
ITE'    --> REQUEST DESCRIPTION              33750000         LTR   R15,R15
          AOK?                                 33760000         BNZ   GSAMERR
          NO, ERROR                            33770000         SPACE 1
                                               33780000         LH    R1,NEXTID#
          YES, RESTORE   UPDATED ID#             33790000         LM    R14,R0,S
AVNXTID     RESTORE REGISTERS                    33800000         BR    R14
            RETURN TO CALLER                     33810000         TITLE 'SCHEDUL
E COMMAND -- PUTMSG - INTERFACE TIO P  UTLINE'     33820000*********************
****************************************           33830000*
                                       *           33840000*        PUTMSG -- TH
IS ROUTINE INTERFACES TO THE TSO       *           3  3850000*        "PUTLINE"
SERVICE ROUTINE TO DISPLAY MESSAGES AT   *           33860000*        THE USER'S
 TERMINAL.                               *           33870000*
                                         *           33880000*          INPUTS:
                                           *           33890000*              -
R1 POINTS TO THE MESSAGES TO BE DISPLAYED. *           33900000*
EACH MESSAGE IS PRECEEDED BY A SINGLE BYTE *           33910000*
CO  NTAINING THAT MESSAGE'S TRUE LENGTH. THE *           33920000*
  END OF THE MESSAGES LIST IS SIGNALLED BY A *           33930000*
  LENGTH BYTE CONTAINING X'00'.              *           33940000*
- R14 POINTS TO A+  RETURN ADDRESS.            *           33950000*
                                                 *           33960000*        RE
TURN 0(,R14):                                    *           33970000*
    - THE MESSAGE DISPLAY HAS FAILED, LIKELY DUE *           33980000*
      TO AN ATTENTION SIGNAL.                      *           33990000*
      - ALL REGISTERS ARE RESTORED.                *           34000000*
                                                   *           34010000*
RETURN 4(,R14):                                      *           34020000*
        - THE MESSAGES HAVE BEEN DISPLAYED WITHOUT   *           34030000*
          PROBLEMS.                                  *           34040000*
        - ALL REGISTERS ARE RESTORED.                *             34050000*
                                                       *           34060000*****
********************************************************           34070000
    SPACE 1                                                        34080000  PUT
MSG   STM   R14,R5,SAVPMSG      SAVE REGISTERS                       34090000
      CLI   0(R1),0             NULL CALL?                           34100000
      BE    PMSGRET4            YES, RETURN +4                       34110000
      SPAC  E 3                                                        34120000*
************************************************************           34130000*
        CONVERT THE MESSAGES BLOCK TO TSO "OLD" BLOCKS.    *           34140000*
*************************  ***********************************           3415000
0         SPACE 1                                                        3416000
0         LA    R2,DSAOLDS-OLDLEN PRIME THE OLDS SCANNER                 3417000
0         USING OLD,R2              DCL   OLD BASE                         34180
000         LA    R14,DSAMSGS         --> MSG BLOCKS CONSTRUCTION AREA     34190
000         LA    R3,L'DSAMSGS        GET THE AREA'S LENGTH                34200
000         SR    R5,R5               CLEAR FOR INSERTS                      342
10000         SPACE 1                                                        342
20000PMSGBUIL ICM   R5,1,0(R1)          GET NEXT MSG'S LENGTH; EO-LIST?      342
30000         BZ    PMSGPUT             YES, DONE HERE                         3
4240000         LA    R0,OLD+OLDLEN       NO, --> NEXT OLD                     3
4250000         ST    R0,OLDCHAIN         LINK TO CURRENT OLD (MAY BE THE      3
4260000*                                  GARBAGE AREA)                        3
42700  00         LR    R2,R0               LOAD NEXT OLD POINTER
 34280000         CLI   0(R2),X'FF'         OLD OVERFLOW?
 34290000         #DIE  E                   YES, CAPACITY ERROR
 34300000         SP  ACE 1
   34310000         LA    R0,1(,R14)          NO, ROUND -
   34320000         SRL   R0,1                 UP -
   34330000         AR    R0,R0    +              THE -
     34340000         SR    R0,R1  4                 NEXT -
       34350000         AR    R14,R0                  TEXT POINTER
       34360000         SR    R3,R0               ADJUST THE AREA RESIDUE
       34370000         ST    R14,OLDTEXTP          STORE TEXT PTR INTO THE OLD
         34380000         SPACE 1
         34390000         LA    R0,4(,R5)           GET L'TEXT BLOCK
         34400000         SR    R3,R0               WILL IT FIT   IN THE AREA?
           34410000         #DIE  M                   NO, CAPICITY ERROR
           34420000         STH   R0,0(,R14)          YES, STORE L'TEXT BLOCK+4
           34430000         SR    R0,R0               GET A ZERO
             34440000         STH   R0,2(,R14)          CLEAR
             34450000         ST    R0,OLDCHAIN         ASSUME THIS WILL BE THE
LAST OLD     34460000         SPACE 1
               34470000         LA    R14,4(,R14)         --> TEXT SINK
               34480000         LR    R15,R5              GET L'SINK
               34490000         LA    R4,1(,R1)           --> TEXT SOURCE
               34500000           MVCL  R14,R4              COPY TEXT TO TSO TEX
T BLOCK          34510000         LR    R1,R4               ADVANCE THE SOURCE P
OINTER           34520000         B     PMSGBUIL            LOOP FOR NEXT MESSAG
E (IF ANY)       34530000         DROP  R2                    RELEASE OLD BASE
                   34540000PMSGPUT  DS    0H
                   34550000         SPACE 3
                   34560000*******************************  ********************
**********           34570000*        CALL PUTLINE TO DISPLAY THE MESSAGE(S)
         *           34580000***************************************************
**********           34590000         SPACE 1
                       34600000         MVI   DSAECB,0            CLEAR PUTLINE'
S ECB                  34610000         L     R15,DSAPUTL         --> PUTLINE
                       34620000         PUTLINE PARM=DSAPTPB,
                        *34630000               ENTRY=(15),MF=(E,DSAIOPL)
                         34640000         LTR   R15,R15             AOK?
                         34650000         BNZ   PMSGRET0            NO, RETURN +
0                          34660000         SPACE 3
                           34670000*********************************************
****************           34680000*        AOK: RETURN +4
               *           34690000***  ****************************************
******************           34700000         SPACE 1
                             34710000PMSGRET4 LM    R14,R5,SAVPMSG      RESTORE
REGISTERS                    34720000         B     4+ (,R14)             RETURN
 +4                            34730000         SPA  CE 3
                                 34740000***************************************
**********************           34750000*        ERROR (LIKELY ATTENTION): RETU
RN +0                *           34760000*************************  ************
************************           34770000         SPACE 1
                                   34780000PMSGRET0 LM    R14,R5,SAVPMSG      RE
STORE REGISTERS                    34790000         BR    R14                 RE
T  URN +0                            34800000         DROP  ,
RELEASE ALL BASES                    34810000         TITLE 'SCHEDULE COMMAND --
 STAXEXIT - ATTENTION ROUTINE'       34820000***********************************
****************  **********           34830000*
                           *           34840000*        STAXEXIT -- POSTS DSAECB
 TO SIGNAL MAINLINE THAT   *           34850000*        AN ATTENTION INTERRUPT H
AS BEEN RECEIVED.          *             34860000*
                             *           34870000*        INPUTS:
                             *           34880000*              - R1 POINTS TO A
N AEPL.                      *           34890  000*              - R13 POINTS T
O A STANDARD REGISTER SAVE     *           34900000*                AREA.
                               *           34910000*              - R14 POINTS T
O THE RETURN ADDRESS.          *           34920000*                - R15 POINTS
 TO THE ENTRY ADDRESS.           *           34930000*
                                 *           34940000*        RETURN 0(,R14):
                                 *           34950000*              - DSAECB   H
AS BEEN POSTED.                    *           34960000*              - R15 IS S
ET TO RC=0.                        *           34970000*              - ALL OTHE
R REGISTERS ARE RESTORED.          *           34980000*
                                     *           34990000***********************
**************************************           35000000         SPACE 1
                                                 35010000         USING AEPL,R1
            DCL AEPL BASE                          35020000STAXEXIT STM   R14,R1
2,DSAR14-DSA(R13) SAVE REGISTERS                   35030000         LR    R12,R1
5             COPY BASE REG                        35040000         USING STAXEX
IT,R12        DCL LOCAL BASE                         35050000         SPACE 1
                                                     35060000         L     R2,A
EPLUSER         --> DSA                              35070000         USING DSA,
R2              DCL DSA BASE                         350  80000         DROP  R1
                  RELEASE AEPL BASE                    35090000         ICM   R1
,15,SUBTTCBA      DOES A SUBTASK EXIST?                35100000         BZ    NO
SUBTCB            NO, SKIP                             35110000        +  STATUS
 STOP,TCB=SUBTTCBA  YES, HALT IT                         35120000NOSU  BTCB DS
  0H                                                       35130000         SPAC
E 1                                                        35140000         LA
  R0,ECBPOST          GET POST CODE                        35150000         SLL
  R0  ,24               SHIFT TO HI-BYTE                     35160000         PO
ST  DSAECB,(0)          POST THE ECB                         35170000         LM
    R14,R12,DSAR14-DSA(R13) RESTORE REGISTERS                35180000         DR
OP  R2                    RELEASE DSA BASE                     35190000
DROP  R12                 RELEASE LOCAL BASE                   35200000
SR    R15,R15             SET RC=0                             35210000
BR    R14                 RETURN T  O CALLER                     35220000
  DROP  ,                   RELEASE ALL BASES                    35230000
  TITLE 'SCHEDULE COMMAND -- ESTAHELP - PROTECTION ROUTINE'      35240000*******
*************************************************  *****           35250000*
                                                       *           35260000*
    ESTAHELP -- THIS ROUTINE PROTECTS AGAINST ABENDS   *           35270000*
    IN THE  ATTACHED HELP COMMAND PROCESSOR.           *             35280000*
                                                         *           35290000***
**********************************************************           35300000
      SPACE 1                                                        35310000ES
 TAHELP LA    R15,12                                                   35320000
        CR    R0,R15              SDWA EXIST?                          35330000
        LA    R15,16              (ASSUME NOT; LOAD RC)                35340000
        BER     R14                 NO, RETURN TO RTM                    3535000
0         USING SDWA,R1             YES, DCL SDWA BASE                   3536000
0         SETRP RC=16               PREVENT PERCOLATION                  3537000
0         BR    R14                   RETURN TO RTM                        35380
000         DROP  ,                   RELEASE ALL BASES                    35390
000         TITLE 'SCHEDULE COMMAND -- PARSE VALIDITY CHECK EXITS'         35400
000*****************************************  ********************           354
10000*                                                           *           354
20000*        CHKDATE -- VALIDITY CHECKS THE DATE OPERAND. THE   *           354
30000*        DATE MUST BE OF THE FORM MM/DD/YY. IF THIS OP  ERAND *           3
5440000*        IS BEING PARSED FOR THE SCHEDULE COMMAND, THEN     *           3
5450000*        DASHES MAY BE SUBSTITUTED FOR MM, DD, AND/OR       *           3
5460000*        YY. ZERO VALUES ARE STORED WHEN DASHES ARE         *
 35470000*        ENCOUNTERED.                                       *
 35480000*                                                           *
 35490000*************************************************************
 35500000            _          SPACE 1
               35510000CHKDATE  BAL   R15,CHKENTRY-CHKDATE(,R15) GOTO ENTRY LINK
AGE            35520000         #USING ,                  DCL LOCAL BASES
               35530000           USING DSA,R10             DCL DSA BASE
                 35540000         USING PDE,R9              DCL PDE BASE
                 35550000         SPACE 3
                 35560000**************  ***************************************
********           35570000*        INSURE THAT A NON-NULL PARM EXISTS.
       *           35580000*****************************************************
********           35590000         SPACE 1
                     35600000         TM    PDEFLAGS,PDEFEXST   VALUE EXIST?
                     35610000         BZ    CHKRET4             NO, ERROR
                     35620000         LH    R15,PDELNGTH        YES,   GET ITS L
ENGTH                  35630000         LTR   R15,R15             NON-NULL?
                       35640000         BNP   CHKRET4             NO, ERROR
                       35650000         SPACE 3
                         35660000***********************************************
**************           35670000*        SCAN THE GIVEN OPERAND. EXTRACT THE MM
, DD, AND YY *           35680000*        VALUES.
             *             35690000*********************************************
****************           35700000         SPACE 1
                           35710000         L     R1,PDEPTR           --> OPERAN
D                          3572000  0         AR    R15,R1              --> EO-V
ALUE                         35730000         BCTR  R15,0               GET BXH
LIMIT                        35740000         LA    R14,1               GET BXH
INCRIMENT                    35750000         SPA  CE 1
                               35760000         TM    CMDID,CMDFGDSH      DASHES
 PERMITTED?                    35770000         BZ    CDTMO#              NO, DA
SHES NOT ALLOWED               35780000         CLI   0(R1),C'-'            YES,
 DASH GIVEN?                     35790000         BNE   CDTMO#              NO,
GO CHECK FOR #                   35800000         SR    R2,R2               YES,
 GET A ZERO                      35810000         BXH   R1,R14,CHKRET4      ADV
 ANCE SCANNER                      35820000         CLI   0(R1),C'-'          2N
D DASH GIVEN?                      35830000         BNE   CDTMODLM            NO
, GO CHECK FOR /                   35840000         BXH   R1,R14,CHKRET4      YE
S, ADVANCE SCA  NNER                 35850000         B     CDTMODLM
GO CHECK FOR /                       35860000CDTMO#   TM    0(R1),B'11110000'
DIGIT?                               35870000         BNO   CHKRET4
NO, ERROR                    +         35880000         IC    R2,0(,R1)
  YES, GET IT                            35890000         N     R2,=X'0000000F'
    ISSOLATE IT                          35900000         BXH   R1,R14,CHKRET4
    ADVANCE SCANNER                      35910000         TM    0(R1),B'
'   2ND DIGIT?                           3  5920000         BNO   CDTMOCK#
      NO, GO VALIDATE THE MM VALUE         35930000         IC    R0,0(,R1)
      YES, GET IT                          35940000         N     R0,=X'0000000F
'     ISSOLATE IT                          35950000           MH    R2,=H'10'
        DECIMAL SHIFT THE ACCUMULATER        35960000         AR    R2,R0
        ACCUMULATE THE 2ND DIGIT             35970000         BXH   R1,R14,CHKRE
T4      ADVANCE THE SCANNER                  35980000CDTMOCK# LTR   R2,R  2
          VALID MM GIVEN?                      35990000         BNP   CHKRET4
          NO, ERROR                            36000000         CH    R2,=H'12'
          MAYBE, CHECK AGAIN                   36010000         BH    CHKRET4
            NO, ERROR                            36020000CDTMODLM CLI   0(R1),C'
/'          YES, DLM OK?                         36030000         BNE   CHKRET4
            NO, ERROR                            36040000         STH   R2,SCHDM
O           YES, STORE   MM                        36050000         SPACE 1
                                                   36060000         BXH   R1,R14
,CHKRET4      ADVANCE THE SCANNER                  36070000         TM    CMDID,
CMDFGDSH      DASHES ALLOWED?                        36080000         BZ    CDTD
Y#              NO, DASHES NOT PERMITTED             36090000         CLI   0(R1
),C'-'          YES, DASH GIVEN?                     36100000         BNE   CDTD
Y#              NO, GO GET DD VALUE                    36110000         SR    R2
,R2               YES, GET A ZERO                      36120000         BXH   R1
,R14,CHKRET4      ADVANCE THE SCANNER                  36130000         CLI   0(
R1),C'-'          2ND DASH PRESENT?                    36140000           BNE
CDTDYDLM            NO, GO CHK FOR /                     36150000         BXH
R1,R14,CHKRET4      YES, ADVANCE THE SCANNER             36160000         B
CDTDYDLM            GO CHECK FOR /                       36170000CDTDY#   TM
0(  R1),B'11110000'   DIGIT PRESENT?                       36180000         BNO
  CHKRET4             NO, ERROR                            36190000         IC
  R2,0(,R1)           YES, GET IT                          36200000         N
  R2,=X'0000000F'       ISSOLATE IT                          36210000         BX
H   R1,R14,CHKRET4      ADVANCE THE SCANNER                  36220000         TM
    0(R1),B'11110000'   2ND DIGIT PRESENT?                   36230000         BN
O   CDTDYCK#            NO, GO V  ALIDATE THE DD VALUE         36240000
IC    R0,0(,R1)           YES, GET IT                          36250000
N     R0,=X'0000000F'     ISSOLATE IT                          36260000
MH    R2,=H'10'           DECIMAL SHIFT THE ACC+ UMULATER        36270000
  AR    R2,R0               ACCUMULATE THE 2N  D DIGIT             36280000
    BXH   R1,R14,CHKRET4      ADVANCE THE SCANNER                  36290000CDTDY
CK# LTR   R2,R2               VALID DAY VALUE?                     36300000
    BNP   CHKRET4             NO, ERROR                              36310000CDT
DYDLM CLI   0(R1),C'/'          MAYBE, VALID DELIMITER?              36320000
      BNE   CHKRET4             NO, ERROR                            36330000
      STH   R2,SCHDDY           YES, STORE THE DD VALUE              363400  00
        SPACE 1                                                        36350000
        BXH   R1,R14,CHKRET4      ADVANCE THE SCANNER                  36360000
        TM    CMDID,CMDFGDSH      DASHES ALLOWED?                      36370000
        BZ      CDTYR#              NO, DASH NOT PERMITTED               3638000
0         CLI   0(R1),C'-'          YES, DASH GIVEN?                     3639000
0         BNE   CDTYR#              NO, GO CHECK FOR YY VALUE            3640000
0         SR    R2,R2                 YES, GET A ZERO                      36410
000         BXH   R1,R14,CDTYRSTO     ADVANCE THE SCANNER                  36420
000         CLI   0(R1),C'-'          2ND DASH PRESENT                     36430
000         BNE   CHKRET4             NO  , ERROR                            364
40000         BXLE  R1,R14,CHKRET4      INSURE EO-VALUE                      364
50000         B     CDTYRSTO            GO STORE A ZERO YY                   364
60000CDTYR#   TM    0(R1),B'11110000'   DIGIT PRESENT?                         3
6470000         BNO   CHKRET4             NO, ERROR                            3
6480000         IC    R2,0(,R1)           YES, GET IT                          3
6490000         N     R2,=X'0000000F'     ISSOLATE IT
 36500000         BXH   R1,R14,CDTYRCK#     ADVANCE THE SCANNER
 36510000         TM    0(R1),B'11110000'   IS 2ND CHAR A DIGIT?
 36520000         BNO   CHKRET4             NO, ERROR
 3653  0000         IC    R0,0(,R1)           YES, GET IT
   36540000         N     R0,=X'0000000F'     ISSOLATE IT
   36550000         MH    R2,=H'10'           DECIMAL SHIFT THE ACCUMULATER
   36560000           AR    R2,R0               ACCUMULATE THE 2ND DIGIT
     36570000         BXLE  R1,R14,CHKRET4      INSURE EO-VALUE
     36580000CDTYRCK# LA    R2,1900(,R2)        ASSUME 20TH CENTURY
     36590000         CH    R2,=H'1  950'         LOW HALF OF CENTURY?
       36600000         BH    CDTYRSTO            NO, PROCEED
       36610000         LA    R2,100(,R2)         YES, ASSUME 21ST CENTURY WANTE
D      36620000CDTYRSTO STH   R2,SCHDYR             STORE YEAR VALUE
         36630000         SPACE 3
         36640000*************************************************************
         36650000*        INSURE THAT THE GIVEN DD VALUE IS NOT T+ OO LARGE.   *
           36660000********************************************  ***************
**           36670000         SPACE 1
             36680000         LH    R2,SCHDMO           GET MM
             36690000         AR    R2,R2               CNVRT TO HWORD OFFSET
               36700000         LA    R1,=Y(31,31,28,31,30,31,30,31,31,30,31,30,
31)            36710000         LH    R1,0(R2,R1)         GET SIZE OF THE GIVEN
MM             36720000         CLI   SCHDMO+1,2          FEBRUARY?
                 36730000         BNE   CDTNLPMO            NO, PROCEED
                 36740000         TM    SCHDYR+1,B'00000011' YES, LEAPYEAR?
                 36750000         BNZ   CDTNLPMO            NO, PROCEED
                 36760000           LA    R1,29               YES, ADJUST MONTH
SIZE               36770000CDTNLPMO CH    R1,SCHDDY           IS DD VALUE VALID?
                   36780000         BL    CHKRET4             NO, ERROR
                   36790000         SPACE 3
                     36800000***************************************************
**********           36810000*        IF THIS OPERAND IS FOR THE "SCHEDULE" OR "
CHANGE"  *           36820000*        SUBCOMMAND, THEN THE   GIVEN DATE CANNOT B
E IN THE   *           36830000*        PAST.
           *           36840000*************************************************
************           36850000         SPACE 1
                         36860000         TM    CMDID,CMDFGDSH      DASHES PERMI
TTED?                    36870000         BZ    CHKRET0             NO, DONE HER
E                        36880000         SR    R1,R1               YES, CLEAR
                           36890000         ICM   R1,3,SCHDYR         GET YY; EX
PLICIT?                    36900000         BZ    CHKRET0             NO, DONE H
ERE                        36910000         CH    R1,NOWYR            YES, WHEN?
                             36920000         BL    CHKRET4             PAST, ER
ROR                          36930000         BH    CHKRET0             FUTURE,
DONE HERE                    36940000         ICM   R1,3,SCHDMO         PRESENT;
 GET MM; EXPLICIT?           36950000           BZ    CHKRET0             NO, DO
NE HERE                        36960000         CH    R1,NOWMO            YES, W
HEN?                           36970000         BL    CHKRET4             PAST,
ERROR                          36980000         BH      CHKRET0             FUTU
RE, DONE HERE                    36990000         ICM   R1,3,SCHDDY         PRES
ENT, GET DD; EXPLICIT?           37000000         BZ    CHKRET0             NO,
DONE HERE                        37010000         CH    R1,NOWDY              YE
S, WHEN?                           37020000         BL    CHKRET4             PA
ST, ERROR                          37030000         B     CHKRET0             PR
ESENT OR FUTURE; DONE HERE         37040000         DROP  ,                   RE
LEA+ SE ALL BASES                    37050000         EJECT ,
                                       37060000*********************************
****************************           37070000*
                           *           37080000*        CHKSYSID -- VALIDITY CHE
CKS THE "SYSID"   OPERAND.   *           37090000*
                             *           37100000*        INPUTS:
                             *           37110000*              - R9 POINTS TO A
 PDE.                        *             37120000*              - R10 POINTS T
O THE DSA.                     *           37130000*
                               *           37140000*****************************
********************************           371  50000         SPACE 1
                                             37160000CHKSYSID BAL   R15,CHKENTRY
-CHKSYSID(,R15) GOTO ENTRY LINKAGE           37170000         #USING ,
        DCL BASE REGS                        37180000           USING DSA,R10
          DCL DSA BASE                         37190000         USING PDE,R9
          DCL PDE BASE                         37200000         SPACE 1
                                               37210000         TM    PDEFLA  GS
,PDEFEXST   IS PARAM PRESENT?                    37220000         BZ    CHKRET4
            NO, REJECT                           37230000         LH    R15,PDEL
NGTH        YES, GET ITS LENGTH                  37240000         LTR   R15,R15
              NULL?                                37250000         BNP   CHKRET
4             YES, REJECT                          37260000         SPACE 3
                                                   37270000*********************
**************************  **************           37280000*        RESTRICT T
HE VALUE "ALL" TO ONLY THE "DISPLAY" AND *           37290000*        "DELETE" C
OMMANDS.                                 *           37300000*******************
*****************************************  *           37310000         SPACE 1
                                                       37320000         TM    CM
DID,CMDFGSID      IS "ALL" PERMITTED?                  37330000         BNZ   CH
KRET0             YES, RETURN 0                        3  7340000         SPACE
1                                                        37350000         L
R14,PDEPTR          NO, --> TEXT                         37360000         ICM
R15,8,=C' '         LOAD PAD CHARACTER                   37370000           LA
  R0,DSAWORK          --> COPY SINK                        37380000         LA
  R1,L'SFRSYSID       GET L'COPY SINK                      37390000         #TES
T SIZE=(L'DSAWORK,GE,L'SFRSYSID)                           37400000         MVCL
  R0,R  14              COPY AND PADD THE TEXT               37410000         SP
ACE 1                                                        37420000         CL
C   =CL(L'SFRSYSID)'ALL',DSAWORK "ALL" SPECIFIED?            37430000         BE
    CHKRET4          +    YES, RETURN +4                       37440000
B     CHKRET0               NO, RETURN +0                        37450000
  DROP  ,                   RELEASE ALL BASES                    37460000
  EJECT ,                                                        37470000*******
**********************************  ********************           37480000*
                                                       *           37490000*
    CHKWEEKD -- VALIDITY CHECKS THE WEEKDAY OPERAND.   *           37500000*
    NOTE, IF A * IS GIVEN, THEN 0 IS SAVED.              *           37510000*
                                                         *           37520000*
      INPUTS:                                            *           37530000*
            - R9 POINTS TO A PDE.                        *             37540000*
              - R10 POINTS TO THE DSA.                     *           37550000*
                                                           *           37560000*
************************************************************           37570000
          SPACE 1                                                        3758000
0CHKWEEKD BAL   R15,CHKENTRY-CHKWEEKD(,R15) GOTO ENTRY LINKAGE           3759000
0         #USING ,                  DCL BASE REGS                        3760000
0         USIN  G DSA,R10             DCL DSA BASE                         37610
000         USING PDE,R9              DCL PDE BASE                         37620
000         SPACE 1                                                        37630
000         TM    PDEFLAGS,PD  EFEXST   IS PARAM PRESENT?                    376
40000         BZ    CHKRET4             NO, REJECT                           376
50000         LH    R15,PDELNGTH        YES, GET ITS LENGTH                  376
60000         LTR   R15,R15             NULL  ?                                3
7670000         BNP   CHKRET4             YES, REJECT                          3
7680000         L     R1,PDEPTR           NO, --> PARAM                        3
7690000         BCTR  R15,0               ADJUST LENGTH
 37700000         LA    R14,WEEKDAYS-WDYROOTL-1 --> WEEKDAYS LIST
 37710000         SR    R2,R2               CLEAR L'NAME
 37720000         SR    R3,R3               CLEAR HIT SIGNAL
   37730000CKWLP    LA    R14,WDYROOTL+1(R2,R14) --> NEXT ENTRY
   37740000         ICM   R2,1,WDYLNGTH(R14)  GET L'NAME; EOL?
   37750000         BM    CKWLPEND            YES, SEE IF SOMETHING FOUND
   377600  00         CR    R15,R2              NO, IS ENTRY LONG ENOUGH?
     37770000         BH    CKWLP               NO, TRY NEXT ENTRY
     37780000         CLC   0(*-*,R1),WDYNAME(R14) (EXECUTED)
     37790000         EX      R15,*-6             YES, MATCH?
       37800000         BH    CKWLP               NO, TRY NEXT ENTRY
       37810000         BL    CKWLPEND            NO, SEE IF SOMETHING FOUND
       37820000         CR    R15,R2   +            YES, EXACT MATCH?
         37830000         BNE   CKWGN  RIC            NO, PROCEED
           37840000         LR    R3,R14              YES, COPY WDY ENTRY POINTE
R          37850000         B     CKWLPEND            TERMINATE THE LOOP
           37860000CKWGNRIC LTR   R3,R3                 SOMETHING FOUND PREVIOUS
LY?          37870000         BNZ   CHKRET4             YES, ERROR
             37880000         LR    R3,R14              NO, REMEMBER HIT
             37890000         B     CKWLP               CONTINUE
               37900000CKWLPEND LTR   R3,R3               ANYTHING FOUND?
               37910000         BZ    CHKRET4             NO, ERROR
               37920000         ICM   R2,8,WDYNUMBR(R3)   YES, GET WEEKDAY'S NUM
BE  R            37930000         SRA   R2,24               SHIFT AND PROPAGATE
THE SIGN         37940000         STH   R2,SCHDWK           SAVE
                 37950000         B     CHKRET0             DONE HERE
                   37960000         DROP  ,                   RELEASE ALL BASES
                   37970000         EJECT ,
                   37980000*****************************************************
********           37990000*
         *           38000000*        CHKTIME -- VALIDITY CHECK THE TIME OPERAND
. IT IS  *           38010000*        IN THE FORM HH:MM. MM MUST FALL WITHIN THE
 RANGE   *           38020000*        OF 00 - 5  9. HH MUST FALL WITH THE RANGE
OF 00 -    *           38030000*        23.
           *           38040000*
           *           38050000*******************************  ****************
**************           38060000         SPACE 1
                         38070000CHKTIME  BAL   R15,CHKENTRY-CHKTIME(,R15) GOTO
ENTRY LINKAGE            38080000         #USING ,                  DCL BASE   R
EGS                        38090000         USING DSA,R10             DCL DSA BA
SE                         38100000         USING PDE,R9              DCL PDE BA
SE                         38110000         SPACE 1
                             38120000         TM    PDEFLAGS,PDEFEXST   IS PARAM
 PRESENT?                    38130000         BZ    CHKRET4             NO, REJE
CT                           38140000         LH    R15,PDELNGTH        YES, GET
 ITS LENGTH                    38150000         LTR   R15,R15             NULL?
                               38160000         BNP   CHKRET4             YES, R
EJECT                          38170000         SPACE 3
                               38180000***  ************************************
**********************           38190000*        SCAN THE GIVEN OPERAND. EXTRAC
T THE HH AND MM      *           38200000*        VALUES.
                     *           38210000****************+ *********************
************************           38220000         SPA  CE 1
                                     38230000         L     R1,PDEPTR
--> OPERAND                          38240000         AR    R15,R1
--> EO-OPERAND                       38250000         BCTR  R15,0
  GET MXH LIMIT                        38260000         LA    R14,1
  GET BXH INCRIMENT                    38270000         SPACE 1
                                       38280000         TM    0(R1),B'11110000'
  DIG  IT PRESENT?                       38290000         BNO   CHKRET4
    NO, ERROR                            38300000         IC    R2,0(,R1)
    YES, GET IT                          38310000         N     R2,=X'0000000F'
    ISSOLATE IT                            38320000         BXH   R1,R14,CHKRET4
      ADVANCE THE SCANNER                  38330000         TM    0(R1),B'111100
00'   2ND DIGIT?                           38340000         BNO   CTMDLM
      NO, GO CHECK FOR A :                   38350000         IC    R0,0(,R1)
        YES, GET IT                          38360000         N     R0,=X'000000
0F'     ISSOLATE IT                          38370000         MH    R2,=H'10'
        DECIMAL SHIFT THE ACCUMULATER        38380  000         AR    R2,R0
          ACCUMULATE THE 2ND DIGIT             38390000         BXH   R1,R14,CHK
RET4      ADVANCE THE SCANNER                  38400000CTMDLM   CLI   0(R1),C':'
          DELIMITER OK?                        38410000         B  NE   CHKRET4
            NO, ERROR                            38420000         CH    R2,=H'23
'           YES, VALUE OK?                       38430000         BH    CHKRET4
            NO, ERROR                            38440000         STH   R2,SCHDH
  R           YES, STORE HH                        38450000         SPACE 1
                                                   38460000         BXH   R1,R14
,CHKRET4      ADVANCE THE SCANNER                  38470000         TM    0(R1),
B'11110000'   1  ST MM DIGIT PRESENT?                38480000         BNO   CHKR
ET4             NO, ERROR                            38490000         IC    R2,0
(,R1)           YES, GET IT                          38500000         N     R2,=
X'0000000F'     ISSOLATE IT                            38510000         MH    R2
,=H'10'           DECIMAL SHIFT IT                     38520000         BXH   R1
,R14,CHKRET4      ADVANCE THE SCANNER                  38530000         TM    0(
R1),B'11110000'   2ND MM DIGIT PRESENT?                  38540000         BNO
CHKRET4             NO, ERROR                            38550000         IC
R0,0(,R1)           YES, GET IT                          38560000         N
R0,=X'0000000F'     ISSOLATE IT                          385  70000         AR
  R2,R0               ACCUMULATE IT                        38580000         BXLE
  R1,R14,CHKRET4      INSURE EO-VALUE                      38590000         CH
  R2,=H'59'           IS MM VALUE VALID?                   38600000        +  BH
    CHKRET4             NO, ERROR                            38610000
STH   R2,SCHDMN           YES, SAVE IT                         38620000
B     CHKRET0             NO, DONE HERE                        38630000
DROP  ,                   RELEASE ALL BASES                    38640000
EJECT ,                                                          38650000*******
******************************************************           38660000*
                                                     *           38670000*
  CHKWINDO -- VALITITY   CHECK THE WINDOW OPERAND. IT  *           38680000*
    IS IN THE FORM HH:MM. MM MUST FALL WITHIN THE      *           38690000*
    RANGE OF 00 - 59. HH MUST FALL WITHIN THE RANGE    *           38700000*
    OF 0 - 24. IF HH IS 24, THEN MM MU  ST BE 00.        *           38710000*
                                                         *           38720000***
**********************************************************           38730000
      SPACE 1                                                          38740000C
HKWINDO BAL   R15,CHKENTRY-CHKWINDO(,R15) GOTO ENTRY LINKAGE           38750000
        #USING ,                  DCL BASE REGS                        38760000
        USING DSA,R10             DCL DSA BASE                           3877000
0         USING PDE,R9              DCL PDE BASE                         3878000
0         SPACE 1                                                        3879000
0         TM    PDEFLAGS,PDEFEXST   IS PARAM PRESENT?                    3880000
0           BZ    CHKRET4             NO, REJECT                           38810
000         LH    R15,PDELNGTH        YES, GET ITS LENGTH                  38820
000         LTR   R15,R15             NULL?                                38830
000         BNP     CHKRET4             YES, REJECT                          388
40000         SPACE 3                                                        388
50000*************************************************************           388
60000*        SCAN THE GIVEN OPER  AND. EXTRACT THE HHHH AND MM    *           3
8870000*        VALUES.                                            *           3
8880000*************************************************************           3
8890000         SPACE 1
 38900000         L     R1,PDEPTR           NO, --> PARAM
 38910000         TM    0(R1),B'11110000'   IS 1ST CHAR A DIGIT?
 38920000         BNO   CHKRET4             NO, ERROR
   38930000         BCTR  R1,0                YES, BACK UP
   38940000         AR    R15,R1              GET BXH LIMIT
   38950000         LA    R14,1               GET BXH INCRIMENT
     38960000         SR    R2,R2               CLEAR THE HHHH ACCUMULATER
     38970000CWIHHLP  BXH   R1,R14,CHKRET4      ADVANCE SCANNER
     38980000         TM    0(R1),B'11110000'   DIGIT?
     38990000            _          BNO   CWIDLM              NO, GO CHECK FOR :
                   39000000         IC    R0,0(,R1)           YES, GET IT
                   39010000         N     R0,=X'0000000F'     ISSOLATE IT
                   39020000           MH    R2,=H'10'           DECIMAL SHIFT TH
E ACCUMULATER        39030000         AR    R2,R0               ACCUMULATE THE N
EW DIGIT             39040000         CH    R2,=H'24'           HH TOO LARGE?
                     39050000         BH      CHKRET4             YES, ERROR
                       39060000         B     CWIHHLP             NO, LOOP FOR N
EXT DIGIT              39070000CWIDLM   CLI   0(R1),C':'          IS DLM VALID?
                       39080000         BNE   CHKRET4               NO, ERROR
                         39090000         STH   R2,WNDOHR           YES, SAVE HH
HH                       39100000         SPACE 1
                         39110000         BXH   R1,R14,CHKRET4      ADVAN  CE TH
E SCANNER                  39120000         TM    0(R1),B'11110000'   DIGIT PRES
ENT?                       39130000         BNO   CHKRET4             NO, ERROR
                           39140000         IC    R2,0(,R1)           YES, GET I
T                            39150000         N     R2,=X'0000000F'     ISSOLATE
 IT                          39160000         MH    R2,=H'10'           DECIMAL
SHIFT IT                     39170000         BXH   R1,R14,CHKRET4      ADVANCE
THE SCANNER                    39180000         TM    0(R1),B'11110000'   2ND MM
 DIGIT PRESENT?                39190000         BNO   CHKRET4             NO, ER
ROR                            39200000         IC    R0,0(,R1)           YES, G
ET IT                          3921000  0         N     R0,=X'0000000F'     ISSO
LATE IT                          39220000         AR    R2,R0               ACCU
MULATE IT                        39230000         BXLE  R1,R14,CHKRET4      INSU
RE EO-VALUE                      39240000         CH      R2,=H'59'           IS
 THE VALUE VALID?                  39250000         BH    CHKRET4             NO
, ERROR                            39260000         STH   R2,WNDOMN           YE
S, SAVE                            39270000         LA    R1,24
GET MAX HH TEST VALUE                39280000         CH    R1,WNDOHR
WINDOW AT MAX VALUE?                 39290000         BL    CHKRET4
OVER; ERROR RETURN                   39300000         BH    CHKRET0
NO,   UNDER; RETURN AOK                39310000         LTR   R2,R2
  YES, IS MM ZERO?                     39320000         BNZ   CHKRET4
  NO, ERROR                            39330000         B     CHKRET0
  YES, RETURN AOK                        39340000         DROP  ,
    RELEASE ALL BASES                    39350000         EJECT ,
                                         39360000*******************************
******************************   +         39370000*
                                 *           39380000*        CHKID -- VALIDITY
CHECK THE ID OPERANDS. THEY ARE  *           39390000*        IN THE FORM OF ASC
ENDING PAIRS OF DECIMAL NUMBERS  *           39400000*        THAT MUST FALL WIT
HIN THE RANGE OF 0 TO 65535.     *           3  9410000*
                                   *           39420000*************************
************************************           39430000         SPACE 1
                                               39440000CHKID      BAL   R15,CHKE
NTRY-CHKID(,R15) GOTO ENTRY LINKAGE              39450000         #USING ,
            DCL BASE REGS                        39460000         USING DSA,R10
            DCL DSA BASE                         39470000         USING PDE,  R9
              DCL PDE BASE                         39480000         SPACE 1
                                                   39490000         TM    PDEFLA
GS,PDEFEXST   IS PARAM PRESENT?                    39500000         BZ    CHKRET
4               NO, REJECT                           39510000         ICM   R1,7
,PDEPTR+1       --> 1ST NUMBER; EXIST?               39520000         BZ    CHKR
ET4             NO, ERROR                            39530000         CLC   0(4,
R1),=X'0000FFFF' YES, VALI  D VALUE?                   39540000         BH    CH
KRET4             NO, ERROR                            39550000         ICM   R1
5,7,PDEPTR2+1     YES, --> 2ND NUMBER; EXIST?          39560000         BZ    CH
KRET0             NO, DONE HERE                          39570000         CLC
0(4,R15),=X'0000FFFF' YES, VALID VALUE?                  39580000         BH
CHKRET4             NO, ERROR                            39590000         CLC
0(4,R1),0(R15)      YES, ASCENDING RANGE?                  39600000         BH
  CHKRET4             NO, ERROR                            39610000         B
  CHKRET0             OK; DONE HERE                        39620000         DROP
  ,                   RELEASE ALL BASES                    39630000           TI
TLE 'SCHEDULE COMMAND -- PARSE VALIDITY CHECK EXITS - COMMON*39640000
     ENTRY CODE'                                             39650000***********
**************************************************           39660000*
                                                   *           39670000*
CHKENTRY -- PROVIDE ENTRY LINKAGE COMMON TO ALL    *           39680000*
PARSE VALIDITY CHECK ROUTINES.                     *           39690000*
                                                     *           39700000*
  INPUTS:                                            *           39710000*
        - R1 POINTS TO THE VALIDITY CHECK PARAMETER  *           39720000*
          LIST.                                        *           39730000*
          - R1%+8 CONTAINS X'FF000000'.                *           39740000*
          - R13 POINTS TO A STANDARD REGISTER SAVE     *           39750000*
            AREA.                                  +     *           39760000*
            - R14 POINTS TO A RETURN ADDRESS IN I  KJPARS. *           39770000*
              - R15 POINTS TO THE PARTICULER VALIDITY      *           39780000*
                CHECK ROUTINE THAT WAS CALLED BY IKJPARS.  *           39790000*
                                                           *             3980000
0*        EXIT 0(,R15):                                      *           3981000
0*              - A STANDARD REGISTER SAVE HAS BEEN OBTAINED *           3982000
0*                FOR LOCAL USE AND IS CHAINED TO THE HIGHER *           398300
 00*                SAVE AREA.                                 *           39840
000*              - ALL OF IKJPARS'S REGISTERS HAVE BEEN SAVED *           39850
000*                IN THE HIGHER SAVE AREA.                   *           39860
000*                                                             *           398
70000*************************************************************           398
80000         SPACE 1                                                        398
90000         USING VCPL,R1               VCPL BASE                            3
9900000CHKENTRY ST    R15,VALMSG          TEMP SAVE                            3
9910000         BALR  R15,0               TEMP LOCAL BASE                      3
9920000TEMPBASE #ENTER ESDTYPE=NONE,BASES=*,  SAVTYPE=RENT ENTRY LINKAGE
 39930000         LM    R9,R10,PDEADR       --> PDE AND DSA
 39940000         USING DSA,R10             DCL DSA BASE
 39950000         L     R15,VALMSG          RESTORE A(VALID  CK ROUTINE)
   39960000         MVC   VALMSG,=X'FF000000' RESTORE PREVIOUS CONTENTS
   39970000         BR    R15                 ENTER THE VALIDITY CHECK ROUTINE
   39980000         DROP  ,                   RELEASE ALL BASES
     39990000         TITLE 'SCHEDULE COMMAND -- PARSE VALIDITY CHECK EXITS - CO
MMON*40000000                EXIT CODE'
     40010000*************************************************************
     4002  0000*                                                           *
       40030000*        CHKRET# -- COMMON EXIT CODE FOR THE VARIOUS        *
       40040000*        VALIDITY CHECK ROUTINES CALLED BY IKJPARS.         *
       40050000*                                                             *
         40060000*        INPUTS:                                            *
         40070000*              - R13 POINTS TO THE LOCAL STANDARD REGISTER  *
         40080000*                SAVE   AREA.                                 *
           40090000*                                                           *
           40100000*        EXIT R13%+4%+C% (THE CALLER'S R14):                *
           40110000*              - R15 IS LOADED WITH   A RETURN CODE.
 *           40120000*              - ALL OTHER REGISTERS ARE RESTORED FROM THE
 *           40130000*                HIGHER SAVE AREA.
 *           40140000*              - THE LOCAL SAVE AREA IS DECHAINE+ D AND
   *           40150000*                RELEASED.
     *           40160000*              - CONTROL IS RETURNED TO IKJPARS.
     *           40170000*
     *           40180000*******************************************************
**  ****           40190000         SPACE 1
                   40200000         #USING ,                  REDECLARE LOCAL BA
SES                40210000CHKRET8  BAL   R0,CHKRET           RC=8
                     40220000CHKRET4  BAL   R0,CHKRET           RC=4
                     40230000CHKRET0  BAL   R0,CHKRET           RC=0
                     40240000CHKRET   LA    R15,CHKRET          LOAD RC BASE
                     40250000           SR    R15,R0              GET RC
                       40260000         LA    R15,0(,R15)         PURIFY
                       40270000         #EXIT ((R14,R12)),RC=(R15) RETURN TO IKJ
PARS                   40280000         DROP  ,                     RELREASE ALL
 BASES                   40290000         TITLE 'SCHEDULE COMMAND -- STATIC DATA
'                        40300000DSADATA  DS    0F                  DSNAME ALLOC
ATION TEXT KEYS          40310000DSADDNAM DC    Y(DALDDNAM,1,L  'DDNAME)
                           40320000DDNAME   DC    CL8'SCHEDULE'
                           40330000DSADSNAM DC    Y(DALDSNAM,1,L'DSNAME)
                           40340000DSNAME   DC    CL44'CSW.SCHEDULE'
                   11/01 DBC 40350000DSASTATS DC    Y(DALSTATS,1,1),X'08'
                             40360000DSADATAL EQU   *-DSADATA
                             40370000DSACOUNT EQU   3
                               40380000         SPACE 3
                               40390000MNUDATA  DS    0F                  MARK-N
OT-IN-USE TEXT KEYS            40400000MNUCURNT DC    Y(DRICURNT,0)
                                 40410000MNUDATAL EQU   *-MNUDATA
                                 40420000MNUCOUNT EQU   1
                                 40430000         SPACE 3
                                 40440000C  OMMANDS DS    0C
                                   40450000         DC    AL3(CHANGCMD),AL1(CMDI
DCHA,5),C'CHANGE'                  40460000         DC    AL3(DISPDELE),AL1(CMDI
DDEL,5),C'DELETE'                  40470000         DC      AL3(DISPDELE),AL1(CM
DIDDIS,6),C'DISPLAY'                 40480000         DC    AL3(EXIT0),AL1(CMDID
END,2),C'END'                        40490000         DC    AL3(HELPCMD),AL1(CMD
IDHEL,3),C'HELP'                     40500000CMDSCHED DC    AL3(SCHEDCMD  ),AL1(
CMDIDSCH,7),C'SCHEDULE'                40510000         DC    AL3(INVALCMD),AL1(
CMDIDINV,7),8X'FF' DELIMITER           40520000         SPACE 1
                                       40530000CMDHNDLR EQU   0,3
  --> C+ OMMAND HANDLER                  40540000CMDIDENT EQU   CMDHNDLR+L'CMDHN
DLR,1   COMMAND ID NUMBER                  40550000CMDLNGTH EQU   CMDIDENT+L'CMD
IDENT,1 L'COMMAND NAME - 1                 40560000CMDNAME  EQU   CMDLNGTH+L'CMD
LNGTH COMMAND NAME                         40570000CMDROOTL EQU   CMDNAME
      LIST ENTRY ROO  T LENGTH               40580000         SPACE 3
                                             40590000WEEKDAYS DS    0C
                                             40600000         DC    AL1(6,6),C'+
FRIDAY'                              07/86 MDL 40610000         DC    AL1(6,2),C
'+MONDAY'                            07/86 MDL 40620000         DC    AL1(8,7),C
'+SATURDAY'                          07/86 MDL 40630000         DC    AL1(6,1),C
'+SUNDAY'                            07/86 MDL 406  40000         DC    AL1(8,5)
,C'+THURSDAY'                          07/86 MDL 40650000         DC    AL1(7,3)
,C'+TUESDAY'                           07/86 MDL 40660000         DC    AL1(9,4)
,C'+WEDNESDAY'                         07/86 MDL 40670000           DC    AL1(6,
6+SFRWKNOT),C'^FRIDAY'                   07/86 MDL 40680000         DC    AL1(6,
2+SFRWKNOT),C'^MONDAY'                   07/86 MDL 40690000         DC    AL1(8,
7+SFRWKNOT),C'^SATURDAY'                 07/86 MDL 40700000         DC    AL1(6,
  1+SFRWKNOT),C'^SUNDAY'                   07/86 MDL 40710000         DC    AL1(
8,5+SFRWKNOT),C'^THURSDAY'                 07/86 MDL 40720000         DC    AL1(
7,3+SFRWKNOT),C'^TUESDAY'                  07/86 MDL 40730000         DC    AL1(
9,4+SFRWKNOT),C  '^WEDNESDAY'                07/86 MDL 40740000         DC    AL
1(0,0),C'-'                                            40750000         DC    AL
1(6,-6),C'-FRIDAY'                                     40760000         DC    AL
1(6,-2),C'-MONDAY'                                       40770000         DC
AL1(8,-7),C'-SATURDAY'                                   40780000         DC
AL1(6,-1),C'-SUNDAY'                                     40790000         DC
AL1(8,-5),C'-THURSDAY'                                     40800000         DC
  AL1(7,-3),C'-TUESDAY'                                    40810000         DC
  AL1(9,-4),C'-WEDNESDAY'                                  40820000         DC
  AL1(2,0),C'ANY'                                          4  0830000         DC
    AL1(5,6+SFRWKXCT),C'FRIDAY'                    07/86 MDL 40840000         DC
    AL1(5,2+SFRWKXCT),C'MONDAY'                    07/86 MDL 40850000         DC
    AL1(7,7+SFRWKXCT),C'SATURDAY'                  07/86 MDL 40860000
DC    AL1(5,1+SFRWKXCT),C'SUNDAY'                    07/86 MDL 40870000
DC    AL1(7,5+SFRWKXCT),C'THURSDAY'                  07/86 MDL 40880000
DC    AL1(6,3+SFRWKXCT),C'TUESDAY'                   07/86 MDL 40890000
DC    AL1(  8,4+SFRWKXCT),C'WEDNESDAY'                 07/86 MDL 40900000
  DC    B'10000000'         DELIMITER                            40910000
  SPACE 1                                                        40920000WDYLNGT
H EQU   0,1              +    L'NAME - 1                           40930000WDYNU
MBR EQU   WDYLNGTH+L'WD  YLNGTH,1 WEEKDAY'S SEQUENCE # (1-ORIGIN)    40940000WDY
NAME  EQU   WDYNUMBR+L'WDYNUMBR WEEKDAY'S NAME                       40950000WDY
ROOTL EQU   WDYNAME             LIST ENTRY ROOT LENGTH               40960000
      SPACE 3                                                          40970000M
ASTER   SFR   MF=(L,M)            SCHEDULE FILE'S MASTER RECORD        40980000
        SPACE 3                                                        40990000
        DC    Y(L'SCHEDRUN+4,0)                                          4100000
0SCHEDRUN DC    C'S SCHEDRUN '                                           4101000
0         SPACE 3                                                        4102000
0         DC    A(1,MODEMSG-4)                                             41030
000         DC    Y(L'MODEMSG+4,0)                                         41040
000MODEMSG  DC    C' SCHED'                                                41050
000         SPACE 3                                                        41060
000  DELASKO1 DC    A(DELASKO2,1,DELASKM1-4)                                 410
70000         DC    Y(L'DELASKM1+4,0)                                        410
80000DELASKM1 DC    C' DELETE?+'                                             410
90000         SPAC  E 1                                                        4
1100000DELASKO2 DC    A(0,1,DELASKM2-4)                                        4
1110000         DC    Y(L'DELASKM2+4,0)                                        4
1120000DELASKM2 DC    C' REPLY "Y  " TO DELETE. REPLY "N" TO KEEP. REPLY ANYTHIN
*41130000               G ELSE TO REDISPLAY.'
 41140000         SPACE 3
 41150000         SPACE 3
   41160000         LTORG ,
   41170000         TITLE 'SCHEDULE COMMAND -- STATIC DATA - MESSAGES'
   41180000         DC    AL1(L'MDELOPRN)
     41190000MDELOPRN DC    C' AT LEAST SOME SELECTION CRITERIA OPERANDS ARE REQ
UIRE*41200000               D'
     41210000         DC    FL1'0'
       41220000         SPACE 3
       41230000         DC    AL1(L'MFILEMPT)
       41240000MFILEMPT DC    C' THE SCHEDULE FILE IS EMPTY'
       412500  00         DC    FL1'0'
         41260000         SPACE 3
         41270000         DC    AL1(L'MSYNTERR)
         41280000MSYNTERR DC      C' INVALID COMMAND NAME SYNTAX - TYPE HELP IF
YOU NEED H*41290000               ELP'
           41300000         DC    FL1'0'
           41310000         SPACE 3        +
             41320000         DC    AL1(L  'MWNDOADJ)
               41330000MWNDOADJ DC    C' WARNING - WINDOW VALUE ADJUSTED TO END
AT MIDNIGHT'   41340000         DC    FL1'0'
               41350000         SPACE 3
                 41360000         DC    AL1(L'MWNDOAD2)
                 41370000MWNDOAD2 DC    C' WARNING - ONE OR MORE WINDOW VALUES W
ERE ADJUSTED TO *41380000               END AT MIDNIGHT'
         07/86 MDL 41390000         DC    FL1'0'
                   41400000         SPACE 3
                   41410000         DC    AL1(L'MAMBGERR)
                     41420000MAMBGERR DC    C' AMBIGUOUS COMMAND NAME'
                     41430000         DC    FL1'0'
                     41440000         SPACE 3
                       41450000         DC    AL1(L'MUNREERR)
                       41460000MUNREERR DC    C' UNRECOGNIZED COMMAND NAME - TYP
E HELP IF YOU NEED HEL*41470000               P'
                       41480000           DC    FL1'0'
                         41490000         SPACE 3
                         41500000         DC    AL1(L'MDISPERR)
                         41510000MDISPERR DC    C'   NO SCHEDULED COMMANDS FIT T
HE GIVEN SELECTION CRITERI*41520000               A'
                           41530000         DC    FL1'0'
                           41540000         SPACE 3
                             41550000         DC    AL1(MDISPTIL)
                             41560000MDISPTIT DC    C' ID   SYSID DATE      DAY
TIME    WINDOW FLAGS '       41570000         DC    CL(L'SFRNAME)'NAME',C'  COMM
A  ND'                         41580000MDISPTIL EQU   *-MDISPTIT
                               41590000         DC    FL1'0'
                               41600000         TITLE 'SCHEDULE COMMAND -- PASSG
ARD - SECURITY C  ONTROL ESTAE'  41610000***************************************
**********************           41620000*
                     *           41630000*        PASSGARD -- IF "SCHEDULE" ABEN
DS, THEN THIS ESTAE  *             41640000*        ROUTINE TURNS OFF THE "JSCBP
ASS" FLAG SO AS TO     *           41650000*        CLOSE THE POSSIBILITY OF THE
 CALLER BEING GIVEN    *           41660000*        "BYPASS PASSWORDS" AUTHORITY
.                      *           41670000*
                         *           41680000*        THIS ESTAE IS IN EFFECT ON
LY WHEN NEEDED.          *           41690000*
                         *           41700000*        INPUTS:+
                           *           41710000*                - R15 POINTS TO
THE ENTRY LOCATION.          *           41720000*              - R14 POINTS TO
A RETURN ADDRESS.            *           41730000*
                             *           41740000*        RETURN 0(,R14):
                               *           41750000*              - THE "JSCBPAS
S" FLAG IS TURNED OFF.         *           41760000*              - R15 IS SET T
O 0 (SIGNALLING                *           41770000*                "PERCOLATION
").                              *           41780000*              - NO OTHER R
EGISTERS ARE RESTORED.           *           41790000*
                                 *           41800000***************************
************************  **********           41810000         SPACE 1
                                               41820000PASSGARD LR    R12,R15
          LOAD LOCAL BASE                      41830000         USING PASSGARD,R
12        DECLARE IT                             41840000         SPACE 1
                                                 41850000         L     R2,PSATO
LD-PSA      --> MY TCB                           41860000         L     R2,TCBJS
CB-TCB(,R2) --> MY JSCB                          41870  000         L     R2,JSC
BACT-IEZJSCB(,R2) --> THE ACTIVE JSCB              41880000         MODESET KEY=
ZERO          LOAD KEY-ZERO                        41890000         NI    JSCBSW
T1-IEZJSCB(R2),255-JSCBPASS CLEAR THE FLAG         41900000         S  PACE 1
                                                     41910000         SR    R15,
R15             LOAD THE RETURN CODE                 41920000         BR    R14
                RETURN TO THE RTM                    41930000         DROP  ,
                  RELEASE ALL BASES                    41940000         TITLE 'S
CHEDULE COMMAND -- PARSE CONTROL LISTS'                41950000*****************
********************************************           41960000*
                                             *           41970000*        PCL AN
D PDL FOR SCHEDULE SUBCOMMAND                *           41980000*
                                             *           41990000***************
**********************************  ************           42000000         SPAC
E 1                                                        42010000         PRIN
T NOGEN                                                    42020000PCLSCHED IKJP
ARM DSECT=PDLSCHED                                           42030000         SP
ACE 1                                                        42040000PDLCMD   IK
JPOSIT QSTRING,UPPERCASE,                                   *42050000
    PROMPT='THE COMMAND TO BE SCHEDULED, ENCLOSED WITHIN SIN*420  60000
      GLE QUOTES.'                                             42070000
SPACE 1                                                        42080000KEYNAME
IKJKEYWD DEFAULT='NAME'                                        42090000        +
  IKJNAME 'NAME',SUBFLD=PCLNAME                                  42100000
    SPACE 1                                                        42110000KEYDA
TE  IKJKEYWD DEFAULT='DATE'                                        42120000
    IKJNAME 'DATE',SUBFLD=PCLDATE                                  42130000
    SPACE 1                                                          42140000KEY
TIME  IKJKEYWD DEFAULT='TIME'                                        42150000
      IKJNAME 'TIME',SUBFLD=PCLTIME                                  42160000
      SPACE 1                                                          42170000K
EYWEEKD IKJKEYWD DEFAULT='WEEKDAY(-)'                                  42180000
        IKJNAME 'WEEKDAY',SUBFLD=PCLWEEKD                              42190000
        SPACE 1                                                          4220000
0KEYWINDO IKJKEYWD DEFAULT='WINDOW(0:00)'                                4221000
0         IKJNAME 'WINDOW',SUBFLD=PCLWINDO                               4222000
0         SPACE 1                                                          42230
000KEYSYSID IKJKEYWD DEFAULT='SYSID(CRNT)'                                 42240
000         IKJNAME 'SYSID',                                              *42250
000               ALIAS='SYSTEM',                                           *422
60000               SUBFLD=PCLSYSID                                          422
70000         SPACE 1                                                        422
80000KEYIPLFO IKJKEYWD DEFAULT='NOTIPLFORCED'                                422
90000           IKJNAME 'IPLFORCED',SUBFLD=PCLIPLFO                            4
2300000         IKJNAME 'NOTIPLFORCED'                                         4
2310000IPLFORCE EQU   1                                                        4
2320000NOTIPLFO EQU     2
 42330000         SPACE 1
 42340000KEYOVERR IKJKEYWD DEFAULT='NOOVERRIDE'
 42350000         IKJNAME 'OVERRIDE',  SUBFLD=PCLOVERR
   42360000         IKJNAME 'NOOVERRIDE'
   42370000OVERRIDE EQU   1
   42380000NOOVERRI EQU   2
     42390000         SPACE 1                                              10/90
 MDL 42400000KEYMASTR IKJKEYWD DEFAULT='NOMASTER'                          10/90
 MDL 42410000         IKJNAME 'MASTER',SUBFLD=PCLMASTR                       10/
90 MDL 42420000         IKJNAME 'NOMASTER'                                   10/
90 MDL 42430000YMASTER  EQU   1                                              10/
90 MDL 42440000NOMASTER EQU   2                                              10/
90   MDL 42450000         SPACE 1
         42460000PCLNAME  IKJSUBF
         42470000PDLNAME  IKJIDENT 'APPLICATION NAME',
        *42480000            _                UPPERCASE,MAXLNTH=8,FIRST=ALPHA,OT
HER=ALPHANUM,         *42490000               PROMPT='THE NAME OF THE APPLICATIO
N TO WHICH THE COMMAND*42500000                IS ASSOCIATED.'
                       42510000           #TEST SIZE=(L'SFRNAME,EQ,8)
                         42520000         SPACE 1
                         42530000PCLDATE  IKJSUBF
                         42540000PDLDATE  IKJID  ENT 'DATE OF EXECUTION',
                          *42550000               MAXLNTH=8,FIRST=ANY,OTHER=ANY,
VALIDCK=CHKDATE,          *42560000               PROMPT='THE MONTH, DAY, AND YE
AR (MM/DD/YY) OF EXECUTION*42570000               .+',
                            *42580000               HELP='- FOR MM, DD, AND/OR Y
Y IF THE COMMAND IS TO BE EX*42590000               ECUTED ON EVERY MONTH, DAY,
AND/OR YEAR.'                42600000         SPACE 1
                               42610000PCLTIME  IKJSUBF
                               42620000PDLTIME  IKJIDENT 'TIME OF EXECUTION',
                              *42630000               MAXLNTH=5,FIRST=ANY,OTHER=
ANY,VALIDCK=  CHKTIME,          *42640000               PROMPT='THE HOUR AND MIN
UTE (HH:MM) OF EXECUTION.'       42650000         SPACE 1
                                 42660000PCLWEEKD IKJSUBF
                                   42670000PDLWEEKD IKJIDENT 'WEEKDAY OF EXECUTI
ON',                              *42680000               MAXLNTH=9,FIRST=ANY,OT
HER=ANY,                          *42690000               VALIDCK=CHKWEEKD,
                                  *4270000  0               PROMPT='THE NAME OF
THE WEEKDAY ON WHICH THE COMMAND IS *42710000               TO BE EXECUTED, OPTI
ONALLY PREFIXED BY +, -, OR ^. +',  *42720000               HELP='"ANY" IF THE C
OMMAND CAN BE EXECUTED ON ANY WEEKDA*42730000                 Y.'
                             07/86 MDL 42740000         SPACE 1
                                       42750000PCLWINDO IKJSUBF
                                       42760000PDLWINDO IKJIDENT 'EXECUT  ION WI
NDOW',                                  *42770000               MAXLNTH=5,FIRST=
ANY,OTHER=ANY,VALIDCK=CHKWINDO,         *42780000               PROMPT='THE SIZE
 OF THE EXECUTION WINDOW FOR THIS COMMAN*42790000               D.+',
                                          *42800000               HELP='THE LENG
TH OF TIME (HH:MM) FOLLOWING THE SCHEDULED*42810000                EXECUTION TIM
E DURING WHICH THE COMMAND MIGHT STILL BE *42820000               EXECUTED IF TH
E SCHEDULED TIME WERE   MISSED. THE WINDOW C*42830000               ANNOT EXTEND
 PAST MIDNIGHT. "0:00" MEANS "UNTIL MIDNIGHT*42840000               ".'
                                             42850000         SPACE 1
                                     +         42860000PCLSYSID IKJSUBF
                                                 42870000PDLSYSID IKJIDENT 'SYST
EM IDENTIFICATION',                             *42880000               MAXLNTH=
4,FIRST=ALPHANUM,OTHER=ALPHANUM,                *42890000               VALIDCK=
CHKSYSID,                                       *4  2900000               PROMPT
='THE NAME OF THE SYSTEM ON WHICH THE COMMAND MAY *42910000               BE EXE
CUTED.+',                                         *42920000               HELP='
"CRNT" FOR THE SYSTEM WHICH YOU ARE LOGGED ON TO, *42930000                 AND
"ANY" IF THE COMMAND MAY BE EXECUTED ON ANY AVAILABL*42940000               E SY
STEM.'                                               42950000         #TEST SIZE
=(L'SFRSYSID,EQ,4)                                   42960000         SPACE 1
                                                       42970000PCLIPLFO IKJSUBF
                                                       42980000SUBIPLFO IKJKEYWD
 DEFAULT='YES'                                         42990000         IKJNAME
'YES'                                                    43000000         IKJNAM
E 'NO'                                                   43010000YES      EQU
1                                                        43020000NO       EQU
2                                                          43030000         SPAC
E 1                                                        43040000PCLOVERR IKJS
UBF                                                        43050000SUBOVERR IKJK
EYWD DEFAULT='YES'                                           43060000         IK
JNAME 'YES'                                                  43070000         IK
JNAME 'NO'                                                   43080000*YES     EQ
U   1                                                          43090000*NO
EQU   2                                                        43100000
SPACE 1                                              10/90 MDL 43110000PCLMASTR
IKJSUBF ,                                            10/90 MDL 43120000SUBM  AST
R IKJKEYWD DEFAULT='YES'                               10/90 MDL 43130000
  IKJNAME 'YES'                                        10/90 MDL 43140000
  IKJNAME 'NO'                                         10/90 MDL 43150000*YES
  EQU   1                                                10/90 MDL 43160000*NO
    EQU   2                                              10/90 MDL 43170000
    SPACE 1                                                        43180000
    IKJENDP                                                          43190000
      PRINT ON,GEN,NODATA                                            43200000
      EJECT ,                                                        43210000***
****************************************  ******************           43220000*
                                                           *           43230000*
        PCL AND PDL FOR THE CHANGE COMMAND                 *           43240000*
                                                       +     *           4325000
0****************************************************  *********           43260
000         SPACE 1                                                        43270
000         PRINT NOGEN                                                    43280
000PCLCHANG IKJPARM DSECT=PDLCHANG                                           432
90000         SPACE 1                                                        433
00000CHID     IKJKEYWD DEFAULT='ID'                                          433
10000         IKJNAME 'ID',SUBFLD=PCLCHID                                    433
200  00         SPACE 1                                                        4
3330000CHCOMMAN IKJKEYWD                                                       4
3340000         IKJNAME 'COMMAND',SUBFLD=PCLCHCOM,                            *4
3350000                 ALIAS='CMD'
 43360000         SPACE 1
 43370000CHNAME   IKJKEYWD
 43380000         IKJNAME 'NAME',  SUBFLD=PCLCHNAM
   43390000         SPACE 1
   43400000CHDATE   IKJKEYWD
   43410000         IKJNAME 'DATE',SUBFLD=PCLCHD  AT
     43420000         SPACE 1
     43430000CHTIME   IKJKEYWD
     43440000         IKJNAME 'TIME',SUBFLD=PCLCHTIM
       43450000         SPACE 1
       43460000CHWEEKDA IKJKEYWD
       43470000         IKJNAME 'WEEKDAY',SUBFLD=PCLCHWEE
         43480000         SPACE 1
         43490000CHWINDOW IKJKEYWD
         43500000         IKJNAME 'WINDOW',SUBFLD=PCLCHWIN
         4351  0000         SPACE 1
           43520000CHSYSID  IKJKEYWD
           43530000         IKJNAME 'SYSID',
          *43540000                 ALIAS='SYSTEM',
            *43550000               SUBFLD=PCLCHSYS
             43560000         SPACE 1
             43570000CHIPLFOR IKJKEYWD
               43580000         IKJNAME 'IPLFORCED',SUBFLD=PCLCHIPL
               43590000         IKJNAME 'NOTIPLFORCED'
               43600000*IPLFORCE EQU  1
                 43610000*NOTIPLFO EQU  2
                 43620000         SPACE 1
                 43630000CHOVERRI IKJKEYWD                               +
                   43640000         IKJNAME 'OVERRIDE',SUBFLD=PCLCHOVE
                     43650000         IKJNAME 'NOOVERRIDE'
                     43660000*OVERRIDE EQU  1
                     43670000*NOOVERRI EQU  2
                       43680000         SPACE 1
             10/90 MDL 43690000CHMASTER IKJKEYWD ,
             10/90 MDL 43700000         IKJNAME 'MASTER',SUBFLD=PCLCHMAS
             10/90 MD  L 43710000         IKJNAME 'NOMASTER'
               10/90 MDL 43720000*YMASTER  EQU  1
               10/90 MDL 43730000*NOMASTER EQU  2
               10/90 MDL 43740000           SPACE 1
                           43750000CHCOPY   IKJKEYWD DEFAULT='NOCOPY'
                           43760000         IKJNAME 'COPY'
                           43770000         IKJNAME   'NOCOPY'
                             43780000COPY     EQU   1
                             43790000NOCOPY   EQU   2
                             43800000         SPACE 1
                               43810000PCLCHID  IKJSUBF
                               43820000PDLCHID  IKJIDENT 'IDENTIFICATION NUMBER'
,                             *43830000               LIST,RANGE,INTEG,VALIDCK=C
H  KID,                         *43840000               PROMPT='THE ID NUMBER OF
 THE COMMAND TO BE CHANGED.'     43850000         SPACE 1
                                 43860000PCLCHCOM IKJSUBF
                                   43870000PDLCHCOM IKJPOSIT QSTRING,UPPERCASE,
                                  *43880000               PROMPT='THE NEW COMMAN
D TO BE SCHEDULED, ENCLOSED WITHIN*43890000                SINGLE QUOTES.'
                                     43900000         SPACE 1
                                     43910000PCLCHNAM IKJSUBF
                                     43920000PDLCHNAM IKJIDENT 'APPLICATION NAME
',                                  *43930000                 UPPERCASE,MAXLNTH=
8,FIRST=ALPHA,OTHER=ALPHANUM,         *43940000               PROMPT='THE NAME O
F THE NEW APPLICATION TO WHICH THE COM*43950000               MAND IS TO BE ASSO
CIATED.'                               43960000         #TEST   SIZE=(L'SFRNAME,
EQ,8)                                    43970000         SPACE 1
                                         43980000PCLCHDAT IKJSUBF
                                         43990000PDLCHDAT IKJIDENT 'DATE OF   EX
ECUTION',                                 *44000000               MAXLNTH=8,FIRS
T=ANY,OTHER=ANY,VALIDCK=CHKDATE,          *44010000               PROMPT='THE NE
W MONTH, DAY, AND YEAR (MM/DD/YY) OF EXECU*44020000               TION.+',
           +                                *44030000               HELP='- FOR
MM, DD, A  ND/OR YY IF THE COMMAND IS TO BE EX*44040000               ECUTED ON
EVERY MONTH, DAY, AND/OR YEAR.'                44050000         SPACE 1
                                               44060000PCLCHTIM IKJSUBF
                                                 44070000PDLCHTIM IKJIDENT 'TIME
 OF EXECUTION',                                 *44080000               MAXLNTH=
5,FIRST=ANY,OTHER=ANY,VALIDCK=CHKTIME,          *44090000               PROMPT='
THE NEW HOUR AND MINUTE (HH:MM) OF EXEC  UTION.'   44100000         SPACE 1
                                                   44110000PCLCHWEE IKJSUBF
                                                   44120000PDLCHWEE IKJIDENT 'WE
EKDAY OF EXECUTION',                              *441  30000               MAXL
NTH=9,FIRST=ANY,OTHER=ANY,                          *44140000               VALI
DCK=CHKWEEKD,                                       *44150000               PROM
PT='THE NAME OF THE NEW WEEKDAY ON WHICH THE COMMAND*44160000                 TO
 BE EXECUTED OR -.+',                                 *44170000               HE
LP='"ANY" IF THE COMMAND CAN BE EXECUTED ON ANY WEEKDA*44180000               Y.
'                                                      44190000         SPACE 1
                                                         44200000PCLCHWIN IKJSUB
F                                                        44210000PDLCHWIN IKJIDE
NT 'EXECUTION WINDOW',                                  *44220000
MAXLNTH=5,FIRST=ANY  ,OTHER=ANY,VALIDCK=CHKWINDO,         *44230000
  PROMPT='THE NEW SIZE OF THE EXECUTION WINDOW FOR THIS CO*44240000
  MMAND.+',                                               *44250000
  HELP='THE LENGTH OF TIME (HH:MM)   FOLLOWING THE SCHEDULED*44260000
     EXECUTION TIME DURING WHICH THE COMMAND MIGHT STILL BE *44270000
    EXECUTED IF THE SCHEDULED TIME WERE MISSED. THE WINDOW C*44280000
    ANNOT EXTEND PAST MIDNIGHT. "0:00" MEANS "UNT  IL MIDNIGHT*44290000
      ".'                                                      44300000
SPACE 1                                                        44310000PCLCHSYS
IKJSUBF                                                        4  4320000PDLCHSY
S IKJIDENT 'SYSTEM IDENTIFICATION',                             *44330000
        MAXLNTH=4,FIRST=ALPHANUM,OTHER=ALPHANUM,                *44340000
        VALIDCK=CHKSYSID,                                       *44350000
          PROMPT='THE NAME OF THE SYSTEM ON WHICH THE COMMAND MAY *44360000
          BE EXECUTED.+',                                         *44370000
          HELP='"CRNT" FOR THE SYSTEM WHICH YOU ARE LOGGED ON TO, *44380000
          AND   "ANY" IF THE COMMAND MAY BE EXECUTED ON ANY AVAILABL*44390000
            E SYSTEM.'                                               44400000
      #TEST SIZE=(L'SFRSYSID,EQ,4)                                   44410000
      SPACE 1                +                                         44420000P
CLCHIPL IKJSUBF                                                          4443000
0PDLCHIPL IKJKEYWD DEFAULT='YES'                                         4444000
0         IKJNAME 'YES'                                                  4445000
0         IKJNAME 'NO'                                                     44460
000*YES     EQU   1                                                        44470
000*NO      EQU   2                                                        44480
000         SPACE 1                                                          444
90000PCLCHOVE IKJSUBF                                                        445
00000PDLCHOVE IKJKEYWD DEFAULT='YES'                                         445
10000         IKJNAME 'YES'                                                    4
4520000         IKJNAME 'NO'                                                   4
4530000*YES     EQU   1                                                        4
4540000*NO      EQU   2                                                        4
4550000           SPACE 1                                              10/90 MDL
 44560000PCLCHMAS IKJSUBF ,                                            10/90 MDL
 44570000PDLCHMAS IKJKEYWD DEFAULT='YES'                               10/90 MDL
 44580000         IKJN  AME 'YES'                                        10/90 M
DL 44590000         IKJNAME 'NO'                                         10/90 M
DL 44600000*YES     EQU   1                                              10/90 M
DL 44610000*NO      EQU   2                                                10/90
 MDL 44620000         SPACE 1
     44630000         IKJENDP
     44640000         PRINT ON,GEN,NODATA
       44650000         EJECT ,
       44660000*************************************************************
       44670000*                                                             *
         44680000*        PCL AND PDL FOR THE DISPLAY AND DELETE SUBCOMMANDS *
         44690000*                                                           *
         44700000*************************************************************
           44710000         SPACE 1
           44720000         PRINT NOGEN
           44730000PCLDISPL IKJPARM DSECT=PDLDISPL
           447400  00         SPACE 1
             44750000DISWHEN  IKJKEYWD
             44760000         IKJNAME 'YESTERDAY'            | (1)
             44770000         IK  JNAME 'TODAY'                | (2)
               44780000         IKJNAME 'TOMORROW'             | (3)
               44790000         IKJNAME 'DATE',SUBFLD=PCLDISDT | (4)
               44800000         IKJNAME 'ID',SU+ BFLD=PCLDISID   | (5)
                 44810000         IKJNAME 'AN  YTIME',             | (6)
                  *44820000               ALIAS='ALL'              | (6)
                   44830000         IKJNAME 'OBSOLETE'             V (7)
                   44840000YESTERDA EQU   1
                     44850000TODAY    EQU   2
                     44860000TOMORROW EQU   3
                     44870000DATE     EQU   4
                       44880000ID       EQU   5
                       44890000ANYTIME  EQU   6
                       44900000OBSOLETE EQU   7
                         44910000         SPACE 1
                         44920000DISANAME IKJKEYWD
                         44930000         IKJNAME 'NAME',SUBFLD=PCLDISNM
                           44940000         SPACE 1
                           44950000DDSYSID  IKJKEYWD
                           44960000         IKJNAME 'SYSID',
                          *44970000                 ALIAS='SYSTEM',
                            *44980000               SUBFLD=PCLDDSYS
                             44990000         SPACE 1
                             45000000DDPROMPT IKJKEYWD   DEFAULT='PROMPT'
                               45010000         IKJNAME 'SHORT'           (1)
                               45020000         IKJNAME 'LONG',           (2)
                              *45030000               ALIAS='NOPROMPT'      (2)
                                 45040000         IKJNAME 'PROMPT'          (3)
                                 45050000SHORT    EQU   1
                                 45060000LONG     EQU   2
                                   45070000PROMPT   EQU   3
                                   45080000         SPACE 1
                                   45090000DDOVERRI IKJKEYWD DEFAULT='EITHER'
                                     45100000         IKJNAME 'OVERRIDE'
(1)                                  45110000         IKJNAME 'NOOVERRIDE'
(2)                                  45120000         IKJNAME 'BOTH'
(3)                                    45130000         IKJNAME 'EITHER'
  (4)                                  45140000*OVERRIDE EQU  1
                                       45150000*NOOVERRI EQU  2
                                       45160000BOT  H     EQU   3
                                         45170000EITHER   EQU   4
                                         45180000         SPACE 1
                                         45190000PCLDISDT IKJSUBF+
                                           45200000DISDATE  IKJ  IDENT 'EXECUTIO
N DATE',                                    *45210000               MAXLNTH=8,FI
RST=ANY,OTHER=ANY,VALIDCK=CHKDATE,          *45220000               PROMPT='THE
MONTH, DAY, AND YEAR (MM/DD/YY) OF EXECUTION*45230000               .'
                                               45240000         SPACE 1
                                               45250000PCLDISID IKJSUBF
                                               45260000DISID    IKJIDENT 'IDENTI
FICATION NUMB  ERS',                            *45270000               LIST,RAN
GE,INTEG,VALIDCK=CHKID,                         *45280000               PROMPT='
THE ID NUMBERS OF THE COMMANDS TO BE SELECTED.'  45290000         SPACE 1
                                                   45300000PCLDISNM IKJSUBF
                                                   45310000DISNAME  IKJIDENT 'AP
PLICATION NAMES',                                 *45320000               LIST,U
PPERCASE,MAXLNTH=8,FIRST=ALPHA,                     *45330000               OTHE
R=ALPHANUM,                                         *45340000               PROM
PT='THE APPLICATION NAMES TO BE SELECTED.'           45350000         #TEST SIZE
=(L'SFRNAME,EQ,8)                                    45360  000         SPACE 1
                                                       45370000PCLDDSYS IKJSUBF
                                                       45380000PDLDDSYS IKJIDENT
 'SYSTEM IDENTIFICATIONS',                            *45390000
LIST,MAXLNTH=4,FIRST=ALPHANUM,OTHER=ALPHANUM,           *45400000
VALIDCK=CHKSYSID,                                       *45410000
PROMPT='THE NAMES OF THE SYSTEMS ON WHICH THE COMMANDS T*45420000
O BE SEL  ECTED MUST BE ELIGIBLE TO EXECUTE.+',           *45430000
  HELP='"CRNT" FOR THE SYSTEM WHICH YOU ARE LOGGED ON TO; *45440000
  "ANY" FOR THOSE COMMANDS THAT CAN EXECUTE ON ANY SYSTEM;*45450000
  AND "ALL" FOR ALL COM  MANDS (THE DEFAULT).'               45460000         #T
EST SIZE=(L'SFRSYSID,EQ,4)                                   45470000         SP
ACE 1                                                        45480000         IK
JENDP                                                          45490000
PRINT ON,GEN,NODATA                                            45500000
SPACE 3                                                        45510000
END   SCHEDULE                                                   45520000./ ADD
NAME=SFR      0100-90302-03239-0939-00141-00141-00000-DBCOLE2
  MACRO                                                          SFR     &NME
  SFR   &MF=D                                                    000  20000.*
                                                                   00030000.*
  MODIFICATION HISTORY                                             00040000.*
                                                                   00050000.*
  1+ 0/90 MDL ADDED EQUATE TO SUPPORT MASTER KEYWORD                 00060000.*
                                                                       00070000.
*     07/86 MDL ADDED EQUATES TO SUPPORT NEW WEEKDAY FEATURES:         00080000.
*               SFRWKXCT - WEEKDAY IS CURRENT DAY                      00090000.
*                 SFRWKNOT - WEEKDAY IS NOT CURRENT DAY                  0010000
0.*                                                                      0011000
0         LCLC  &D                                                       0012000
0         AIF   ('&MF(1)' EQ 'L  ').MFL                                    00130
000         AIF   ('&MF(1)' EQ 'D').MFD                                    00140
000         MNOTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS ASSUMED.'         00150
000.MFD     ANOP                                                             001
60000&D       SETC  'DSECT'                                                  001
70000         AIF   ('&MF(2)' EQ '').MFDOK3                                  001
80000         AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3                              0
0190000&D       SETC  'DS'                                                     0
0200000         AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3                            0
0210000         MNOTE 8,'MF=&MF IS INVALID. MF=(&MF(1),N) IS ASSUMED.'
 00220000.MFDOK3  ANOP
 00230000*************************************************************
 00240000*                                                           *
 00250000*          SFR -- SCHEDULE FILE RECORD                        *
   00260000*                                                           * 02/84 D
BC 00270000*        ALL TIMESTAMPS IN THE SCHEDULE FILE ARE LOCAL      * 02/84 D
BC 00280000*        TIME.                                                * 02/84
 DBC 00290000*                                                           *
     00300000*        A NEW SCHEDULE FILE CAN BE ALLOCATED VIA AN AMS    *
     00310000*        COMMAND SUCH AS THE   FOLLOWING:                     *
       00320000*                                                           *
       00330000*        DEF CL(NAME('CSW.SCHEDULE') VOL(SYSRES) -          * 11/
01 DBC 00340000*            ATT(3) CODE(SCHEDULE) ERAS K  EYS(12 0) -        *
         00350000*            OWNER(DAVECOLE) TO(99365) UNQ MRPW(XYZZY) -    *
         00360000*            RDPW(SCHEDULE)) -                              *
         00370000*                                                             *
           00380000*            DATA(NAME('CSW.SCHEDULE.DATA')-                *
 11/01 DBC 00390000*            RECORDS(1000 100) RECSZ(X'48' X'12D')) -       *
           00400000*                                                           *
             00410000*            INDEX(NAME('CSW.SCHEDULE.INDEX'))
 * 11/01 DBC 00420000*
 *           00430000***********************************************************
**           00440000            _          SPACE 1
                           00450000         AIF   ('&NME' EQ '').MFDOK1
                           00460000&NME     &D    0H
                           00470000S  FR      DS    0H                  MAP NAME
                             00480000         AGO   .MFDOK2
                             00490000.MFDOK1  ANOP
                             00500000SFR      &D      0H
                               00510000.MFDOK2  ANOP
                               00520000SFRYR    DS    H                   SCHEDU
LED YEAR                       00530000SFRMO    DS    H                     SCHE
DULED MONTH                      00540000SFRDY    DS    H                   SCHE
DULED DAY                        00550000SFRYMD   EQU   SFRYR,*-SFRYR       DATE
 SEGMENT                         00560000SFRHR    DS    H                   SCHE
D  ULED HOUR                       00570000SFRMN    DS    H                   SC
HEDULED MINUTE                     00580000SFRHM    EQU   SFRHR,*-SFRHR       TI
ME-OF-DAY SEGMENT                  00590000SFRTIME  EQU   SFRYR,*-SFRYR       SC
HEDULED TIME                         00600000SFRID    DS    H
UNIQUE IDENTIFICATION NUMBER         00610000SFRKEY   EQU   SFRYR,*-SFRYR
RECORD'S KEY FIELD                   00620000SFRNAME  DS    CL8
APPLICATION NAME                       00630000         SPACE 1
                                       00640000SFRWK    DS    H
  SCHEDULED DAY OF THE WEEK            00650000SFRWKNOT EQU   B'10000000'
     EXACT WEEKDAY MATCHING    7/86MDL 0066000  0SFRWKXCT EQU   B'01000000'
       EXACT WEEKDAY MATCHING    7/86MDL 00670000         SPACE 1
                                         00680000SFRXYR   DS    H
    YEAR OF LAST EXECUTION               00690000SFRXMO   DS      H
      MONTH OF LAST EXECUTION              00700000SFRXDY   DS    H
      DAY OF LAST EXECUTION                00710000SFRXYMD  EQU   SFRXYR,*-SFRXY
R     DATE SEGMENT                         00720000SFRXHR   DS    H
        HOUR OF LAST EXECUTION               00730000SFRXMN   DS    H
        MINUTE OF LAST EXECUTION             00740000SFRXHM   EQU   SFRXHR,*-SFR
XHR     TIME-OF-DAY SEGMENT                  00750000SFRXTIME EQU   SFRXYR,*-SFR
XYR     LAS  T EXECUTION TIME                  00760000         SPACE 1
                                               00770000SFRWHR   DS    H
          LENGTH OF EXECUTION WINDOW: HOURS    00780000SFRWMN   DS    H
          LENGTH OF EXECUT  ION WINDOW: MINUTES  00790000         SPACE 1
                                                 00800000SFRSYSID DS    CL4
            SMF-SYSID OF SYSTEM ON WHICH THIS    00810000*
            COMMAND MAY BE EXECUTED. X'00+ 00'     00820000*
              IMPLIES "ANY" SYSTEM.                  00830000         SPACE 1
                                                     00840000SFRFLAG  DS    B
                FLAG BYTE                            00850000SFRFIPLF EQU   B'10
000000'         FORCE REEXECUTION OF THIS COMMAND    0  0860000*
                  IF AN IPL OCCURS WITHIN THE CURRENT  00870000*
                  WINDOW EVEN IF THIS COMMAND HAS      00880000*
                  ALREADY BEEN EXECUTED IN THIS SAME   00890000*
                    WINDOW.                              00900000SFRFOVRD EQU
B'01000000'         THIS COMMAND OVERRIDES ALL OTHER     00910000*
                    COMMANDS FOR THIS APPLICATION FOR    00920000*
                      THIS DATE FOR WHICH THIS FLAG IS     00930000*
                      OFF.                                 00940000SFRFOBSO EQU
  B'00100000'         THIS COMMAND IS OBSOLETE. (SET BY    00950000*
                        SCHEDRUN. CHECKED BY SCHEDULE).      00960000SFRFMAST EQ
U   B'00010000'         THIS COMMAND SHOULD BE      10/90MDL 00970000*
                        ISSUED USING THE MASTER     10/90MDL 00980000*
                        CONSOLE'S   AUTHORITY         10/90MDL 00990000
SPACE 1                                                        01000000SFRCMDL
DS    2H                  L'COMMAND TEXT, ZERO                 01010000SFRCMD
DS    CL255               COMMAND TEXT                           01020000
  SPACE 1                                                        01030000SFREND
  EQU   *                   MAX END OF SFR                       01040000SFRLEN
  EQU   SFREND-SFR          MAX L'SFR                              01050000
    SPACE 3                                                        01060000*****
********************************************************           01070000*
    SCHEDULE FILE'S MASTER RECORD                      *           01080000****
 *********************************************************           01090000
      SPACE 1                                                        01100000
      ORG   SFR                 LOCATE TO START OF BUFFER            01110000SFM
R     DS    0H                                                         01120000S
FMRKEY  DS    XL(L'SFRKEY)      | KEY (ALL HEX-FF)                     01130000S
FMRFID  DC    CL8'SCHEDULE'     V FILE ID                              01140000S
FMRNXID DS    H                     NEXT DATA RECORD ID VALUE            0115000
0SFMREND  EQU   *                   EO-SFMR                              0116000
0SFMRLEN  EQU   SFMREND-SFMR        L'SFMR                               0117000
0         ORG   SFREND              RELOCATE   HIGH                        01180
000         MEXIT                                                          01190
000.*                                                                      01200
000.MFL     AIF   ('&MF(2)' EQ '').MFLD                    +                 012
10000         AIF   ('&MF(2)'(1,1) EQ 'M').MFLM                                0
1220000         MNOTE 8,'MF=&MF IS INVALID. MF=L IS ASSUMED'                   0
1230000.MFLD    ANOP                                                           0
1240000&NME     DS    0H
 01250000         DC    5H'0'               SCHEDULED TIME
 01260000         DC    2H'0'               SFRID, SFRWK
 01270000         DC    5H'0'               LAST EXECUTION TIME
 012800  00         DC    2H'0'               EXECUTION WINDOW
   01290000         DC    CL4' '              APPLICATION NAME
   01300000         DC    B'00000000'         FLAG BYTE
   01310000         DC      2H'0'               SFRCMDL
     01320000         DC    CL255' '            SFRCMD
     01330000         MEXIT
     01340000.*
       01350000.MFLM    ANOP
       01360000&NME     DS    0H
       01370000         DC    (L'SFMRKEY)X'FF'    SF  MRKEY
         01380000         DC    CL(L'SFMRFID)'SCHEDULE' SFMRFID
         01390000         DC    H'0'                SFMRNXID
         01400000         MEND
           01410000./ ADD NAME=SRUNPROC 0100-99126-03239-0939-00012-00010-00000-
DBCOLE2            //IEFPROC EXEC PGM=SCHEDRUN
           SRUNPROC//SCHEDLOG DD  DSN=DBCOLE.SCHEDRUN.LOG,DISP=MOD
             00020000//*
             00030000//*********************************************************
**           00040000//*      IF YALE'S GSAM IUP (AVAILABLE THROUGH IBM) IS
 *           0005  0000//*      INSTALLED, THEN REMOVE THE FOLLOWING CARD.
   *           00060000//*
   *           00070000//SCHEDULE DD  DSN=CSW.SCHEDULE,DISP=SHR
   *           00080000//*
     *           00090000//*****************************************************
******           00100000//*
                 00110000//SYSUDUMP DD  SYSOUT=  A
                   00120000./ ADD NAME=TSOHELP  0100-90309-03239-0940-00749-0071
0-00000-DBCOLE2            COPYRIGHT DAVID B. COLE - 1980, 1999, 2003
                   TSOHELP )F FUNCTION -
                     00020000The SCHEDULE command displays and alters the automa
tic operator         00030000commands schedule. (These are the operator commands
 that are issued     00040000automatically by the system at particular dates + a
nd times).             00050000
                         00060000
                         00070000LEGAL INFORMATION:
                         00080000
                           00090000This program is copyrighted (c) 1999, 2003 by
 David B. Cole.            00100000
                           00110000This program is distributed freely and may be
 reproduced and              00120000redistributed without restriction other tha
n:                           00130000  - This copyright and usage/warranty/liabi
lity restriction statement   00140000    ("Legal Statement") may not be modified
 or removed.                 00150000  -   A similar Legal Statement located in
this program's source code and 00160000    in the Online Help file also may not
be removed.                    00170000  - The Online Help File must be installe
d in a suitable "HELP library" 00180000    (such as SYS  1.HELP) so that users m
ay see both the Legal Statement  00190000    as well as usage instruction.
                                 00200000
                                 00210000This program is distributed w  ithout w
arranty of any kind, including     00220000(without limitation) warranties of me
rchantability and of fitness for a 00230000particular purpose. It is up to the u
ser to make his own determination  00240000of the usefulness of this program in
his o  wn system.                    00250000
                                     00260000The user agrees not to hold me (Dav
id B. Cole) liable for any damage    00270000whatsoever, and the user agrees to
indemnify me against   third parties   00280000for any action arising from the u
ser's use, modification, and/or        00290000redistribution of this program.
                                       00300000
                                         00310000This program may be modified fr
eely so long as all modifications are    00320000clearly marked both internally
and externally to distinguish them from  00330000the distributed code and functi
onallity.                                00340000
                                           00350000As a courtesy, please notify
me if you discover any bugs or if you need 00360000to make or have made any code
 changes. (I of of course do not guarantee 00370000either that I   will or that
I will not make any future changes or        00380000corrections.)
                                             00390000
                                             00400000)X SYNTAX -
                                               00410000SCHEDULE 'a subcommand an
d its operands'                                00420000
                                               00430000Alias    - SCHED
               +                                 00440000
                                                   00450000Required - none.
                                                   00460000
                                                   00470000Default  - If no oper
ands are given, then subcomm  ands are prompted      00480000           for.
                                                     00490000
                                                     00500000Notes    - If opera
nds are given, then they are processed as a            00510000           subcom
mand. In this case when the subcommand is finished,    00520000           the SC
HEDULE command processor ends without prompting for    00530000           more s
ubcommands.                                            005  40000
                                                         00550000)O OPERANDS -
                                                         00560000Operands are op
tional. If given, then they are processed as a           00570000subcomma  nd. T
he following are subcommands of the SCHEDULE command       00580000processor.
                                                           00590000
                                                           00600000))SCHED    -
Adds ent  ries to the automatic operator commands schedule.  00610000))DISPLAY
- Displays entries in the automatic operator commands        00620000
  schedule.                                                  00630000))CHANGE
- Changes existing entr  ies in the automatic operator         00640000
    commands schedule. Also can be used to create new entries  00650000
    that are similar to existing entries.                      00660000))DELETE
  - Removes entries from the automatic   operator commands       00670000
      schedule.                                                  00680000))END
    - Terminates the SCHEDULE command processor.                 00690000))HELP
    - Displays complete subcommand usage information.              00700000
                                                                   00710000)S SU
BCOMMANDS - SCHED (or S), DISPLAY, CHANGE, DELETE, END, and HELP.  00720000
                                                                   0  0730000WAR
NING: If you have renamed the SCHEDULE command processor to "SCHED", 00740000the
n you will have to use the "HELP S" command to display information   00750000abo
ut the SCHED subcommand (because "HELP SCHED" will only display      00760000gen
era  l information about the command processor as a whole).            00770000
                                                                       00780000=
SCHED=S                                                                00790000)
F FUNCTION -                                                             0080000
0The SCHED subcommand adds an entry to the automatic operator commands   0081000
0schedule.                                                               0082000
0                                +                                         00830
000)X SYNTAX -                                                               008
40000SCHED    'operator command' SYSID(system id) DATE(mm/dd/yy) TIME(hh:mm) 008
50000         NAME(application name) WEEKDAY(day name) WINDOW(hh:mm)         008
60000         (NOT)IPLFORCED (NO)OVERRIDE (NO)  MASTER                         0
0870000                                                                        0
0880000Alias    - The minimum abreviation is S.                                0
0890000
 00900000Required - 'operator command', DATE, TIME, and NAME.
 00910000
 00920000Defaults - SYSID(CRNT) WEEKDAY(ANY) WINDOW("until midnight")
   00930000           NOTIPLFORCED NOOVERRIDE NOMASTER.
   00940000
   00950000)O OPERANDS -
   00960000
     00970000))'OPERATOR COMMAND' - This is required. It gives the operator comm
and  00980000that is to be automatically scheduled. The command may be any comma
nd   00990000that can be i  ssued from an operator's console. The command must b
e      01000000enclosed within single quotes ('). Imbedded quotes must be repres
ented  01010000by pairs of quotes; i.e., a ' appearing within the command must b
e      01020000represented by '' (not ").
         01030000
         01040000))SYSID(system id) - For multi-system configurations, this oper
and      01050000specifies on which computer this schedu  led command is permitt
ed to be   01060000executed. "System id" must be the "SMF-id" of the desired com
puter.     01070000System ids consist of from one to four alphameric characters.
           01080000
             01090000"SYSID(CRNT)" means the "current computer" - i.e., the comp
uter which   01100000you are currently logged on to. This is the default.
             01110000
               01120000"SYSID(ANY)" means "any computer". The scheduled command
may be         01130000executed by any computer in the configuration - which eve
r one gets     01140000around to it first.
               011500  00
                 01160000))SYSTEM(system id) - This is an alias for SYSID.
                 01170000
                 01180000))DATE(mm/d  d/yy) - This is required. It gives the dat
e or dates on      01190000which the operator command is to be executed.
                   01200000
                   01210000mm, dd, and/or yy may ea+ ch be given as a dash (-).
This is a "wild      01220000card" character that   causes that field to match a
ny value. For example, 01230000a dash given for mm means "any month".
                       01240000
                       01250000If yy is equal to or less than 50  , then the 21s
t century is assumed.    01260000
                         01270000When - is given for mm, then a value of 31 give
n for dd means "the      01280000last day of the month" - even those months tha
 t are shorter than 31     01290000days.
                           01300000
                           01310000Examples:      DATE(2/9/80)        means Febr
uary 2, 1980.                01320000               DATE(2/8/40)        means Fe
bruary 2, 2040.              01330000               DATE(-/31/81)       means Th
e last day of every month in 01340000                                         19
81.                            01350000               DATE(-/1/-)         means
The first day of every month   01360000
in every year.                 01370000               DATE(-/-/-)         means
Everyday.                      01380000
                                 01390000))TIME(hh:mm) - This is required. It gi
ves the time of day at which the 01400000operator command is to be executed. hh:
mm is a 24-hour clock; i.e.,     01410000afternoon hours ar  e represented by va
lues of 13 through 23 for hh.      01420000
                                   01430000))NAME(application name) - This is re
quired. It gives a name by which   01440000this and other automatic comman  ds c
an be referenced. "Application name" 01450000is a single name consisting of from
 one to eight alphameric or national 01460000characters. The first character can
not be numeric.                      01470000
                                       01480000All scheduled commands having the
 same application name can be          01490000referenced as a group by the DISP
LAY and DELETE commands. In addition,  01500000the "scope" of overriding schedul
ed commands is defined i  n terms of     01510000application names. Type HELP SC
HED O(OVERRIDE) for more information.    01520000
                                         01530000))WEEKDAY(day name) - This modi
fies the date on which the automatic       01540000command is to be executed. If
 a date selected by the DATE operand does  01550000not fall on the weekday named
 by this operand, then the command is not  01560000issued.
                                           01570000
                                             01580000"Day name" must be either t
he name of a weekday or a unique abreviation 01590000of the name of a weekday.
                                             01600000                +
                                               01610000"Day name" m  ay be prece
eded by a not sign (^): e.g., WEEKDAY(^THU).     01620000In this case, if a date
 selected by the DATE operand falls on the       01630000weekday named by this o
perand, then the command is not issued.          01640000
                                                   01650000"Day name" may be pre
ceeded by a plus sign (+): e.g., WEEKDAY(+THU).    01660000In this case, if a da
te selected by the DATE operand does not fall on   01670000the weekday named by
this operand, the  n the execution of the automatic  01680000command is delayed
until the named weekday arrives.                     01690000
                                                     01700000"Day name" may be p
receeded by a minus sign (-): e.  g., WEEKDAY(-THU).   01710000In this case if t
he selected date does not fall on the named weekday,   01720000then the executio
n of the automatic command, instead of being delayed,  01730000is moved forward
to the desired weekday.                                  01740000
                                                         01750000Examples:
DATE(6/-/83) WEEKDAY(TUE)   means every Tuesday in       01760000
                                  June, 1983.            01770  000
  DATE(-/-/-) WEEKDAY(WED)    means Every Wednesday.       01780000
  DATE(-/-/-) WEEKDAY(^WED)   means Every Day of the year  01790000
                                    that is not Wednesday. 01800000
    DATE(2/1/80) WEEKDAY(+THU)  means the Thursday that is   01810000
                                      on or following        01820000
                                      February 1, 1980. In   01830000
                                        this case that would   01840000
                                        be February 7th.       01850000
      DATE(-/1/-) WEEKDAY(+MON)   means The first Monday of    01860000
                                          every month.           01870000
        DATE(-/31/-) WEEKDAY(-FRI)  means the last Friday of     01880000
                                          every month.           01890000
                                                                   01900000The d
efault value for WEEKDAY is ANY.                                   01910000
                                                                   01920000))WIN
DOW(hh:mm) - This gives the length of time following the             01930000sch
eduled execution of an automatic command that the command can still  01940000be
executed if, for some reason such as a system crash, the command was 01950000not
 executed when it was supposed to be.                                019  60000
                                                                       01970000T
he default value is "0:00" which has the special meaning "until        01980000m
idnight".                                                              01990000
       +                                                                 0200000
0The   window cannot extend past midnight.                                 02010
000                                                                        02020
000))IPLFORCED - This indicates that if the system crashes and is re-IPLed 02030
000within the "windo  w" period for this automatic command, then this        020
40000command is to be executed after the IPL even if it has already been     020
50000executed before the IPL. The default is NOTIPLFORCED.                   020
60000                                                                          0
2070000When a scheduled command defined with the IPLFORCED attribute is        0
2080000displayed, the letter I appears in the FLAGS column.                    0
2090000
 02100000))NOTIPLFORCED - nullifies IPLFORCED. Type HELP SCHED O(IPLFORCED)
 02110000for more information.
 02120000
   02130000))OVERRIDE - This causes the scheduling of certain automatic commands
   02140000to be overridden by this command for a particular date. The
   02150000circumstances are these.
     02160000
     02170000         - The commands to be overridden must have the same applica
tion 02180000           name as this command.
     02190000           - The commands to be overridden must not themselves be
       02200000           designated as "override" commands.
       02210000         - The commands to be overridden will be overridden only
on     02220000           thos  e dates that this command will execute. The time
 of day  02230000           is not relevent.
         02240000
         02250000Use the "DISPLAY DATE(mm/dd/  yy) NAME(application name) BOTH"
command to 02260000find which automatic commands are overridden. Those commands
showing    02270000the letter O in the FLAGS column override all commands withou
t          02280000the O flag.
             02290000
             02300000The default is NOOVERRIDE.
             02310000
               02320000))NOOVERRIDE - nullifies OVERRIDE. Type HELP SCHED O(OVER
RIDE) for      02330000more information.
               02340000
                 02350000))MASTER - This causes the scheduled command to be issu
ed as if it      02360000had been entered from the master console.  This allows
priviledged      02370000commands such as "FORCE" and "F CICS."
                 02380000            _
                               02390000))NOMASTER - nullifies MASTER.  The sched
uled command is issued         02400000without special authority.
                               02410000
                                 02420000=DISPLAY=DI
                                 02430000)F FUNCTION -
                                 02440000The DISPLAY su  bcommand displays one o
r more entries in the automatic    02450000operator commands schedule.
                                   02460000
                                   02470000)X SYNTAX -
                                     02480000DISPLAY YESTERDAY | TODAY | TOMORRO
W | DATE(mm/dd/yy) | ANYTIME         02490000                  | OBSOLETE | ID(i
dentification numbers)               02500000        NAME(application names) SYS
ID(sy  stem ids)                       02510000        OVERRIDE | NOOVERRIDE | B
OTH | EITHER                           02520000        SHORT | LONG
                                       02530000
                                         02540000Alias    - The minimum abreviat
ion is DI.                               02550000
                                         02560000Required - none.
                                           02570000
                                           02580000Default  - ANYTIME SYSID(ALL)
 EITHER LONG and all names.                02590000
                                           0260000  0Notes    - YESTERDAY, TODAY
, TOMORROW, DATE, ANYTIME, OBSOLETE, and ID  02610000           are mutually exc
lusive.                                      02620000         - OVERRIDE, NOOVER
RIDE, BOTH, and EITHER are mutually          02630000           e  xclusive.
                                               02640000         - SHORT and LONG
 are mutually exclusive.                       02650000         - Type HELP DISP
LAY O(FLAGS) for a description of the          02660000           displayed flag
   characters.                                   02670000
                                                 02680000)O OPERANDS -
                                                 02690000
                                                   02700000))YESTERDAY - limits
the display of scheduled commands to those that    02710000executed yesterday. T
he default is ANYTIME.                             02720000
                                                     02730000))TODAY - limits th
e display of scheduled commands to those that        02740000execute today. The
default is ANYTIME.                                  02750000
                                             +         02760000))TOMORROW - limi
ts the display of scheduled commands to tho  se that     02770000will execute to
morrow. The default is ANYTIME.                          02780000
                                                         02790000))DATE(mm/dd/yy
) - limits the display of scheduled commands to those    0  2800000that will exe
cute on the given date. If yy is 50 or less, then the      0281000021st century
is assumed. When this operand is omitted, the default is   02820000ANYTIME.
                                                           02830000
                                                             02840000))ANYTIME -
 does not limit the display of scheduled commands with       02850000respect to
either execution date or ID number or obsolescence. This is  02860000the default
.                                                              02870000
                                                               02880000An alias
for ANYTIME is ALL.                                            02890000
                                                                 02900000))ALL -
 This is an alias for ANYTIME.                                   02910000
                                                                 02920000))OBSOL
ETE - limits the display to those sche  duled commands that are    02930000obsol
ete - i.e., those commands that can never execute again. The       02940000defau
lt is ANYTIME.                                                     02950000
                                                                     02960000Whe
n an obsolete scheduled command is displayed, the letter N appears   02970000in
the FLAGS column.                                                    02980000
                                                                       02990000)
)ID(identification numbers) - limits the display of scheduled commands 03000000t
o those having the given identification numbers. "Identification       03010000n
umbers" is a list of one or more decimal numbers or pairs of decimal   03020000n
umb  ers joined by a colin (:). Each number must be in the range of 0 to 0303000
065535. When joined pair of numbers are given, the second number must be 0304000
0equal to or larger than the first. Such pairs indicate a range of       0305000
0scheduled command  s to be displayed.                                     03060
000                                                                        03070
000When this operand is omitted, the default is ANYTIME.                   03080
000                                                                          030
90000))NAME(application names) - limits the display to only those scheduled  031
00000commands associated with the given applications. "Application names" is 031
10000a list of one or more names each of which c  onsists of from one to eight 0
3120000alphameric or national characters. The first character of each name     0
3130000cannot be numeric.                                                      0
3140000                                                        +
 03150000Type HELP SCHED O(NAME) for more information.
   03160000
   03170000))SYSID(system ids) - For multi-system configurations. This operand
   03180000limits the selection of scheduled commands to those that are perm  it
ted  03190000to be executed on the computers having the listed system ids.
     03200000
     03210000A "system id" is a four-character identifier assigned by SMF to a
     032200  00computer (for accounting purposes). Each character is alphameric.
       03230000
       03240000The "SYSID" operand may specify any number of system identifiers.
 If a  03250000scheduled c  ommand matches any listed identifier, then it is sel
ected.   03260000
         03270000"SYSID(CRNT)" means the "current computer" - i.e., the computer
 which   03280000you are currently logged   on to.
           03290000
           03300000"SYSID(ANY)" limits the selection to those scheduled commands
 that are  03310000permitted to execute on any computer   in the configuration.
             03320000
             03330000"SYSID(ALL)" does not limit the selection. This is the defa
ult.         03340000
               03350000Example:
               03360000
               03370000         SYSID(AAA6 ANY)
                 03380000         This selects those scheduled commands that mus
t be executed    03390000         specifically by the computer named "AAA6" as w
ell as those     03400000         commands that may be executed by any computer
in the           0341  0000         configuration. (Scheduled commands that must
 be executed       03420000         specifically by the "CC58" computer are not
selected).         03430000
                   03440000))SYSTEM(  system ids) - This is an alias for SYSID.
                     03450000
                     03460000))OVERRIDE - limits the display to only those sched
uled commands that   03470000are overrides. The def  ault is EITHER. Type HELP S
CHED O(OVERRIDE) for   03480000more information.
                       03490000
                       03500000When an overriding scheduled comman  d is display
ed, the letter O appears 03510000in the FLAGS column.
                         03520000
                         03530000))NOOVERRIDE - limits the display to only those
 + scheduled commands that 03540000are not overrides. The default is EITHER. Ty
 pe                          03550000HELP SCHED O(OVERRIDE) for more information
.                            03560000
                             03570000))BOTH - displays scheduled commands withou
t reguard to w  hether or not  03580000they are overrides. The default is EITHER
. Type                         03590000HELP SCHED O(OVERRIDE) for more informati
on.                            03600000
                                 03610000When an overriding scheduled command is
 displayed, the letter O appears 03620000in the FLAGS column.
                                 03630000
                                 03640000))E  ITHER - If the display of schedule
d commands is limited to a         03650000particular date (via the DATE, YESTER
DAY, TODAY, or TOMORROW            03660000operands), then for particular applic
ation names if overriding          03670000scheduled comman  ds exist for that d
ate, then they are displayed and the 03680000overridden commands are not display
ed. If no overriding commands exist  03690000for that date for the application,
then the non-overriding commands are 03700000displayed.
                                       03710000
                                       03720000When an overriding scheduled comm
and is displayed, the letter O appears 03730000in the FLAGS column.
                                         03740000
                                         03750000If a specific date is not given
, then EITHER functions exactly like     03760000BOTH.
                                           03770000
                                           03780000EITHER is the default.
                                           03790000
                                             03800000))LONG - displays a discrip
tive message for each scheduled command      03810000selected for display. This
is the default.                              03820000
                                             03830000A  liases for LONG are PROM
PT and NOPROMPT. (Don't ask why. That's just   03840000the way it is).
                                               03850000
                                               03860000))PROMPT - Thi  s is an a
lias for LONG.                                   03870000
                                                 03880000))NOPROMPT - This is an
 alias for LONG.                                 03890000
                                                   03900000))SHORT - displays on
ly a count of the number of scheduled commands     03910000selected by the DISPL
AY command. Individual descriptive messages are    03920000not generated. The de
fault is LONG.     +                                 03930000
                                                       03940000))FLAGS - Charact
ers appearing in the FLAGS column of the displays have 03950000the following mea
nings:                                                 03960000
                                                         03970000         I - Th
is scheduled command has been defined with the           03980000             IP
LFORCED attribute. Type HELP SCHED O(IPLFORCED) for more 03990000             in
formation.                                                 04000000         O -
This scheduled command is an OVERRIDE. Type                04010000
HELP SCHED O(OVERRIDE) for more information.               04020000         N -
This scheduled command is OBSOLETE. It will never be       040  30000
  executed again. Type HELP DISPLAY O(OBSOLETE) for          04040000
  more information.                                          04050000
                                                             04060000=CHANGE=  C
                                                               04070000)F FUNCTI
ON -                                                           04080000The CHANG
E subcommand changes one or more characteristics of one or     04090000more entr
ies in the a  utomatic operator commands schedule.               04100000
                                                                 04110000)X SYNT
AX -                                                             04120000CHANGE
ID(identification numbers)   (NO)COPY                              04130000
  COMMAND('operator command') DATE(mm/dd/yy) TIME(hh:mm)           04140000
  NAME(application name) SYSID(system id) WEEKDAY(day name)        04150000
  WINDOW(hh:mm) (NOT)IPLFORCED (NO)OVERRID  E (NO)MASTER             04160000
                                                                     04170000Ali
as    - The minimum abreviation is C.                                04180000
                                                                       04190000R
equired - ID.                                                          04200000
                                                                       04210000D
efaults - NOCOPY                                                       0  422000
0         - Leave unchanged those items not specified.                   0423000
0                                                                        0424000
0)O OPERANDS -                                                           0425000
0                                                                          04260
000))ID(identification numbers) - identifies which scheduled commands are  04270
000to be changed. "Identification numbers" is a list of one or more        04280
000decimal numbers or   pairs of decimal numbers joined by a colin (:). Each 042
90000number must be in the range of 0 to 65535. When joined pair of numbers  043
00000are given, the second number must be equal to or larger than the first. 043
10000Such pairs indicate a range of s+ cheduled commands to be changed.        0
4320000
 04330000When multiple scheduled commands are being changed, they are all
 04340000changed identically.
 04350000
   04360000The ID operand is required. There is no default.
   04370000
   04380000))COPY - causes a copy of the original record(s) to be   made before
any  04390000changes are made to that record. Thus when the COPY operand is used
,    04400000the original record(s) remains unchanged, and the changed record
     04410000becomes a new record in the SCHEDULE file.
       04420000
       04430000The default is NOCOPY.
       04440000
       04450000  ))NOCOPY - causes all changes to be made directly to the select
ed       04460000record(s). A copy of the original record(s) is not kept.
         04470000
         04480000This is the d  efault.
           04490000
           04500000))COMMAND('operator command') - gives the new operator comman
d          04510000that is to be automaticall  y scheduled. The command may be a
ny command   04520000that can be issued from an operator's console. The command
must be      04530000enclosed within single quotes ('). Imbedded quotes must be
represented  04540000by pairs of quotes; i.e., a ' appearing   within the comman
d must be      04550000represented by '' (not ").
               04560000
               04570000This operand is optional. If omitted, then the opera  tor
 command to be   04580000issued remains unchanged.
                 04590000
                 04600000))DATE(mm/dd/yy) - gives the new date or dates on
                   04610000which the operator command is to be executed.
                   04620000
                   04630000mm, dd, and/or yy may each be given as a dash (-). Th
is is a "wild      046400  00card" character that causes that field to match any
 value. For example, 04650000a dash given for mm means "any month".
                     04660000
                     04670000If yy is eq  ual to or less than 50, then the 21st
century is assumed.    04680000
                       04690000When - is given for mm, then a value of 31 given
for dd means "the      04700000last day of the month" -+  even those months that
 are shorter than 31     04710000days.
                           04720000
                           04730000Examples:      DATE(2/9/80)        means Febr
uary 2, 1980.              04740000               DATE(2/8/40)          means Fe
bruary 2, 2040.              04750000               DATE(-/31/81)       means Th
e last day of every month in 04760000                                         19
81.                          04770000               DATE(-/1/-)         means Th
e f  irst day of every month   04780000
in every year.                 04790000               DATE(-/-/-)         means
Everyday.                      04800000
                                 04810000))TIME(hh:mm) - gives the new time of d
ay at which the                  04820000operator command is to be executed. hh:
mm is a 24-hour clock; i.e.,     04830000afternoon hours are represented by valu
es of 13 through 23 for hh.        04840000
                                   04850000))NAME(application name) - gives a ne
w name by which                    04860000this automatic command can be referen
ced. "Application name"            04870000is a   single name consisting of from
 one to eight alphameric or national 04880000characters. The first character can
not be numeric.                      04890000
                                     04900000All scheduled comm  ands having the
 same application name can be          04910000referenced as a group by the DISP
LAY and DELETE commands. In addition,  04920000the "scope" of overriding schedul
ed commands is defined in terms of     04930000application names. Type HELP CH
ANGE O(OVERRIDE) for more information.   04940000
                                         04950000))SYSID(system id) - For multi-
system configurations, this operand      04960000specifies on which computer thi
s scheduled c  ommand is permitted to be   04970000executed. "System id" must be
 the "SMF-id" of the desired computer.     04980000System ids consist of from on
e to four alphameric characters.           04990000
                                             05000000"SYSID(CRNT)" means the "cu
rrent computer" - i.e., the computer which   05010000you are currently logged on
 to.                                         05020000
                                               05030000"SYSID(ANY)" means "any c
omputer". The scheduled command may be         05040000executed by any computer
in the configuration - which ever one gets     05050000around to it first.
                                               05060000
                                                 05070000))SYSTEM(system id) - T
his is an alias for SYSID.                       05080000
                                                 05090000))WEEKDAY(day na+ me) -
 This modifies the date on which the automatic     05100000command is t  o be ex
ecuted. If a date selected by the DATE operand does  05110000not fall on the wee
kday named by this operand, then the command is not  05120000issued.
                                                     05130000
                                                       05140000"Day name" must b
e either the name of a weekday or a unique abreviation 05150000of the name of a
weekday.                                               05160000
                                                         05170000"Day name" may
be preceeded by a not sign (^): e.g., WEEKDAY(^THU).     05180000In this case, i
f a date selected by the DATE operand falls on the       05190000weekday named b
y this operand, then the command is   not issued.          05200000
                                                           05210000"Day name" ma
y be preceeded by a plus sign (+): e.g., WEEKDAY(+THU).    05220000In this case,
 if a date selected by the DATE operand does not fa  ll on   05230000the weekday
 named by this operand, then the execution of the automatic  05240000command is
delayed until the named weekday arrives.                     05250000
                                                             05260  000"Day name
" may be preceeded by a minus sign (-): e.g., WEEKDAY(-THU).   05270000In this c
ase if the selected date does not fall on the named weekday,   05280000then the
execution of the automatic command, instead of being delayed,  05290000is moved
f  orward to the desired weekday.                                05300000
                                                                 05310000Example
s:      DATE(6/-/83) WEEKDAY(TUE)   means every Tuesday in       05320000
                                            June, 1983.            05330000
          DATE(-/-/-) WEEKDAY(WED)    means Every Wednesday.       05340000
          DATE(-/-/-) WEEKDAY(^WED)   means Every Day of the year  05350000
                                              that is not Wednesday. 05360000
            DATE(2/1/80) WEEKDAY(+THU)  means the Thursday that is   05370000
                                              on or following        05380000
                                                February 1, 1980. In   05390000
                                                this case that would   05400000
                                                be February 7th.       05410000
              DATE(-/1/-) WEEKDAY(+MON)   means The first Mon  day of    0542000
0                                                 every month.           0543000
0               DATE(-/31/-) WEEKDAY(-FRI)  means the last Friday of     0544000
0                                                 every month.           054  50
000                                                                        05460
000Specifying WEEKDAY(ANY) removes the weekday modifier from the           05470
000scheduled commands being changed.                                       05480
000        +                                                                 054
90000))WI  NDOW(hh:mm) - gives the length of time following the                0
5500000scheduled execution of an automatic command that the command can still  0
5510000be executed if, for some reason such as a system crash, the command was 0
5520000not executed when   it was supposed to be.
 05530000
 05540000The window cannot extend past midnight.
 05550000
   05560000The special value "0:00" has the meaning "until midnight".
   05570000
   05580000))IPLFORCED - This indicates that if the sy  stem crashes and is re-I
PLed 05590000within the "window" period for this automatic command, then this
     05600000command is to be executed after the IPL even if it has already been
     05610000executed before the IPL.
       05620000
       05630000When a scheduled command defined with the IPLFORCED attribute is
       05640000displayed, the letter I appears in the FLAGS column.
         05650000
         05660000))NOTIPLFORCED - nullifies IPLFORCED. Type HELP CHANGE O(IPLFOR
CED)     05670000for more information.
         05680000
           05690000))OVERRIDE - This causes the scheduling of certain automatic
commands   05700000to be overridden by this command for a particular date. The
           05710000circumstances a  re these.
             05720000
             05730000         - The commands to be overridden must have the same
 application 05740000           name as this comm  and.
               05750000         - The commands to be overridden must not themsel
ves be         05760000           designated as "override" commands.
               05770000         - The commands to be overridden   will be overri
dden only on     05780000           those dates that this command will execute.
The time of day  05790000           is not relevent.
                 05800000
                   05810000Use the "DISPLAY DATE(mm/dd/yy) NAME(application name
) BOTH" command to 05820000find which automatic commands are overridden. Those c
ommands showing    05830000the letter O in the FLAGS column override all command
s without            05840000the O flag.
                     05850000
                     05860000))NOOVERRIDE - nullifies OVERRIDE. Type HELP CHANGE
 O(OVERRIDE) for     05870000              more information.
                                   05880000
                                   05890000))MASTER - This causes the scheduled
command to be issued as if it      05900000h  ad been entered from the master co
nsole.  This allows priviledged      05910000commands such as "FORCE" and "F CIC
S."                                  05920000
                                     05930000))NOMASTER - n  ullifies MASTER.  T
he scheduled command is issued         05940000without special authority.
                                       05950000
                                       05960000=DELETE=DE
                                         05970000)F FUNCTION -
                                         05980000The DELETE subcommand removes o
ne or more entries from the automatic    05990000operator commands schedule.
                                           06000000
                                           06010000)X SYNTAX -
                                           06020000DELETE YESTERDAY | TODAY | TO
MORROW | DATE(mm/dd/yy)   | ANYTIME          06030000                 | OBSOLETE
 | ID(identification numbers)                06040000       NAME(application nam
es) SYSID(sytem ids)                         06050000       OVERRIDE | NOOVERRID
E | BOTH | EITHER                              06060000       SHORT | LONG | PRO
MPT                                            06070000
                                               06080000Alias    - The minimum ab
reviation is DE.                               0609000  0
                                                 06100000Required - at least one
 of either YESTERDAY, TODAY, DATE, ANYTIME, ID,  06110000           OBSOLETE, NA
ME, or SYSID.                                    06120000
                                                   06130000Default  - EITHER PRO
MPT                                                06140000
                                                   06150000Notes    - YESTERDAY,
 TOD  AY, TOMORROW, DATE, ANYTIME, OBSOLETE, and ID  06160000           are mutu
ally exclusive. (Note that NAME and SYSID are not    06170000           mutually
 exclusive with these).                              06180000         - OVERRIDE
, NOOVERRIDE, BOTH,   and EITHER are mutually          06190000           exclus
ive.                                                   06200000         - SHORT,
 LONG, and PROMPT are mutually exclusive.              06210000
                                                         06220000)O OPERANDS -
                                                         06230000
                                                         06240000))YESTERDAY - l
imits the deletion of scheduled commands to those+  that   06250000executed yest
erday.                                                       06260000
                                                             06270000))TODAY - l
imits the deletion of scheduled commands to those that       06280000execute tod
ay.                                                          0  6290000
                                                               06300000))TOMORRO
W - limits the deletion of scheduled commands to those that    06310000will exec
ute tomorrow.                                                  06320000
                                                                 06330000))DATE(
mm/dd/yy) - limits the deletion of scheduled commands to those   06340000that wi
ll execute on the given date. If yy is 50 or less, then the      0635000021st ce
ntury is ass  umed.                                                06360000
                                                                   06370000))ANY
TIME - does not limit the deletion of scheduled commands with      06380000respe
ct to either execution date   or ID number or obsolescence. This is  06390000the
 default.                                                            06400000
                                                                     06410000An
alias for ANYTIME is ALL.                                              06420000
                                                                       06430000)
)ALL - This is an alias for ANYTIME.                                   06440000
                                                                         0645000
0))OBSOLETE - limits the deletion to those scheduled commands that are   0646000
0obsolete - i.e., those commands that can never execute again. The       0647000
0default is ANYTIME.                                                       06480
000                                                                        06490
000))ID(identification numbers) - limits the deletion of scheduled         06500
000commands to those having the given identification numbers.              06510
000"Ide  ntification numbers" is a list of one or more decimal numbers or    065
20000pairs of decimal numbers joined by a colin (:). Each number must be in  065
30000the range of 0 to 65535. When joined pairs of numbers are given, the    065
40000second number mus  t be equal to or larger than the first. Such pairs     0
6550000indicate a range of  scheduled commands to be deleted.                  0
6560000                                                                        0
6570000))NAME(application names) - li  mits the deletion to only those scheduled
 06580000commands associated with the given applications. "Application names" is
 06590000a list of one or more names each of which consists of from one to eight
 06600000alphameric or national characters. The firs  t character of each name
   06610000cannot be numeric.
   06620000
   06630000Type HELP SCHED O(NAME) for more information.           +
     06640000
       06650000))SYSID(system ids) - For multi-system configurations. This opera
nd     06660000limits the selection of scheduled commands to those that are perm
itted  06670000to be executed on the computers having the listed system ids.
         06680000
         06690000A "system id" is a four-character identifier assigned by SMF to
 a       06700000computer (for accounting purposes). Each character is alphameri
c.       067100  00
           06720000The "SYSID" operand may specify any number of system identifi
ers. If a  06730000scheduled command matches any listed identifier, then it is s
elected.   06740000
             06750000"SYSID(CRNT)" means the "current computer" - i.e., the comp
uter which   06760000you are currently logged on to.
             06770000
               06780000"SYSID(ANY)" limits the selection to those scheduled comm
ands that are  06790000permitted to execute on any computer in the configuration
.              06800000
                 06810000"SYSID(ALL)" does not limit the selection. This is the
default.         06820000
                 06830000Example:
                   06840000
                   06850000         SYSID(AAA6 ANY)
                   06860000         This selects those scheduled commands that m
ust be exe  cuted    06870000         specifically by the computer named "AAA6"
as well as those     06880000         commands that may be executed by any compu
ter in the           06890000         configuration. (Scheduled commands that mu
st be executed       0690  0000         specifically by the "CC58" computer are
not selected).         06910000
                       06920000))SYSTEM(system ids) - This is an alias for SYSID
.                      06930000
                         06940000))OVERRIDE - limits the deletion to only those
scheduled commands that  06950000are overrides. The default is EITHER. Type HELP
 SCHED O(OVERRIDE) for   06960000more information.
                           06970000
                           06980000))NOOVERRIDE - limits the deletion to only th
ose scheduled commands     06990000that are not overrides. The default   is EITH
ER. Type                     07000000HELP SCHED O(OVERRIDE) for more information
.                            07010000
                             07020000))BOTH - deletes scheduled commands without
 regu+ ard to whether or not   07030000they are overrides. The default is EITHER
. T  ype                         07040000HELP SCHED O(OVERRIDE) for more informa
tion.                            07050000
                                 07060000))EITHER - If the deletion of scheduled
 commands is limit  ed to a        07070000particular date (via the DATE, YESTER
DAY, TODAY, or TOMORROW            07080000operands), then for particular applic
ation names if overriding          07090000scheduled commands exist for that dat
e, then they are deleted and the     07100000overridden commands are not deleted
. If no overriding commands exist    07110000for that date for the application,
then the non-overriding commands are 07120000deleted.
                                     07130000
                                       07140000If a specific date is not given,
then EITHER functions exactly like     07150000BOTH.
                                       07160000
                                         07170000EITHER is the default.
                                         07180000
                                         07190000))PROMPT - displays a descrip
tive message for each scheduled command to 07200000be deleted, and then prompts
you to may a final delete/no-delete        07210000decision for that scheduled c
ommand. This is the default.               07220000
                                             07230000
                                             07240000))LONG - displays a discrip
tive message for each scheduled command      07250000to be deleted, and then del
etes it (without prompting y  ou for a final   07260000decision). The default is
 PROMPT.                                       07270000
                                               07280000))SHORT - displays only a
 count of the number of scheduled commands       07290000deleted. Individual des
criptive messages are not displayed. Nor are you 07300000prompted for a final de
lete/no-delete decision.                         07310000
                                                 07320000T  he default is PROMPT
.                                                  07330000
                                                   07340000=END=E
                                                   07350000)F FUNCTION -
                                                     07360000The END subcommand
causes the SCHEDULE command processor to end. If a   07370000SCHED, CHANGE, or D
ELETE subcommand has been issued, then the END       07380000subcommand automati
cally ca  uses a 'S SCHEDRUN' operator command to be   07390000issued. By this m
eans, the system is notified of possible changes to    07400000the automatic ope
rator commands schedule.                               07410000
                       +                                 07420000)X SYNTAX
                                                           07430000END
                                                           07440000
                                                           07450000Alias - The m
inimum abreviation is E.                                     07460000
                                                             07470000)O OPERANDS
 - none.                                                     07480000
                                                               07490000 {
                 _ ./ ADD NAME=ASMJCL
                   //ASMXREFA JOB (CSW,UPS),'540-456-8536',CLASS=A,MSGCLASS=J,
                   //             MSGLEVEL=(1,1),NOTIFY=R9999,TIME=1439
                   /  /*
                     //*********************************************************
**                   //*
 *                   //* Sample JCL   to assemble and linkedit the XREFIN and
   *                   //* XREFOUT programs.
   *                   //*
   *                   //* DBCOLE.MACROS is availa  ble from Cole Software's web
     *                   //* site: HTTP://WWW.COLESOFT.COM.
     *                   //*
     *                   //**************************************  *************
********                   //*
                           //ASM     EXEC PGM=ASMA90,REGION=1024K,
                           //             PARM=('OBJ,NODECK,FLAG(NOALIGN),LC(109
  ),MX(FULL)',               //             'NORLD,TERM,TEST,US(WARN(11)),XREF(S
HORT)')                      //SYSLIB   DD  DSN=DBCOLE.MACROS,DISP=SHR
                             //         DD  DSN=SYS1.MACLIB,DISP=SHR
                               //         DD  DSN=SYS1.MODGEN,DISP=SHR
                               //SYSUT1   DD  DSN=&&SYSUT1,UNIT=DISK,SPACE=(CYL,
(15,5)),                       //             DISP=(,PASS)
                                 //SYSTERM  DD  SYSOUT=*
                                 //SYSPRINT DD  SYSOUT=*
                                 //SYSLIN   DD  DSN=&&OBJSET,UNIT=DISK,SPACE=(CY
L,(1,1),RLSE),                   //               DISP=(MOD,PASS)
                                   //SYSIN    DD  DSN=DBCOLE.ASM(XREFASM),DISP=S
HR                                 //*
                                   //LKED    EXEC PGM=IEWL,R  EGION=1024K,
                                     //             PARM='TEST,XREF,MAP,LET,LIST
,NCAL',                              //             COND=(4,LE)
                                     //SYSLMOD  DD  DSN=DBCOLE.LOAD,DISP=SH  R
                                       //SYSUT1   DD  DSN=&&SYSUT1,DISP=(OLD,DEL
ETE)                                   //SYSPRINT DD  SYSOUT=*
                                       //OBJ      DD  DSN=&&OBJSET,DISP=(OLD,DEL
ETE)                                     //SYSLIN   DD  *
                                                  REPLACE XREFOUT
                                                  INCLUDE OBJ
                         +                          NAME    XREFIN(R)
                                                      REPLACE XREFIN
                                                      INCLUDE OBJ
                                                      NAME    XREFOUT(R)
 
                                               ./ ADD NAME=MANUAL
                                               1
                                               -
                                                 -
                                                 -
                                                 -
                                                   -
                                                   0
           XREFASM
           Release 1.5                                                    (A Glo
bal Cross-Reference Listing Generator)
 
          David B.   Cole
 
 
      Printed Nobvember 12, 1997                         1
                                                         -
                 XREFASM                                 -
                                                           -
                                                           -
                 DISCLAIMER                                0     The author make
s no representations or warranties expressed or implied            including, bu
t not limited to, the implied warranties of merchantability        and fitness f
or a particular purpose, the warrenty of freedom from              rightful clai
ms by way of infringement and the like, and any warranty as        to accuracy
.                                                              0        The auth
or shall not be liable for any loss or damage arising out of         the use of
the XREFASM programs (XREFIN and XREFOUT), whether such loss or      damage be d
irect, indire  ct, consequential, special or otherwise. Further,       the autho
r shall not be obligated to indemnify the user of the XREFASM          program i
n any manner for any loss which the user may experience, of any        kind or n
ature, arising out of the us  e or misuse of the XREFASM programs. -
                                                                   -
                                                                   -
                                           +                         -
                                                                       -
                                                                       -
                                                                       -
                                                                         -
                                                                         -
                                                                         -
                                                                           0
                                   - ii -                                  1
                                                                           -
                                   XREFASM                                 -
                                                                             -
                                                                             -
                              THE XREFASM PROGRAMS                           0
      Many large prog  ramming systems are constructed from a large number of
     separately assembled or compiled sections. Such systems must manage
     internal communications by means of a set of vector tables and other
     control blocks that are known t  o each of the separate sections; which is
       to say, such control blocks must contain fields that may be referenced
       and/or changed by any or all of the sections. Accordingly, a global
       cross-reference listing reporting which sect  ions reference which fields
,        is a very useful tool for a large-systems developer to have.
   0        XREFASM is a relatively simple system that generates such global
         cross-reference listings. Specifically, XREFASM generates   a report sh
owing      sorted list of all labels used in a given set of separate assemblies
or         compilations. The entries for each label show both which assemblies (
or         compilations) reference that label and how many references each assem
b  ly        has to that label. Figure 1 shows a sample XREFASM output.
       0     +------------------------------------------------------------------
------+      |
      |      |      MASTER CROSS-REFERENCE FOR <title info from the PARM field>
        |      |
        |      |    SYMBOL          ASSEMBLY-REFS     ...
        |      |    DCTEOF                 NUC-1    RTAM-16
          |      |    DCTERMNR            RTAM-19
          |      |    DCTETX               NUC-1    RTAM-4
          |      |    DCTEWF              INIT  -8     NUC-1    RTAM-3
            |      |    DCTEXORG            COMM-5    INIT-5    MISC-5     NET-5
            |      |                        PRPU-5     RDR-5    RTAM-5    SSSM-5
            |      |    DCTEXZ              COMM-3           +
              |      |    DCTFCB              COMM-8    INI  T-11    NUC-1    PR
PU-24           |      |    - - -
                |      |
                |      +--------------------------------------------------  ----
------------------+                            Figure 1  Sample XREFASM Output
                   0        Currently, XREFASM will produce global cross-referen
ce listings for          programs assembled or compiled by the following process
ors:                 0          IBM's OS/VS DOS/VSE VM/370 Assembler
                                IBM's Assembler-H Version 2, with or without the
 "S.L.A.C." mods                IBM's High Level Assembler
                                  IBM's Assembler for the Series/1 processor
                       -
                                                                - 1 -
                       1
                         -                                       XREFASM
                         -                               (The XREFASM Programs)
                         -     Recognition by XREFASM   of which kind of output
is being processed is            automatic.
                           0        XREFASM actually consists of two programs. X
REFIN accumulates                cross-reference data from each assem  bly or co
mpilation. XREFOUT sorts and       edits the accumulated data and produces the g
lobal cross-reference report.-
                                                                     XREFIN
                               0     XREFIN accumulates cross-reference data fro
m individual assemblies or           compilations. It is designed to be used as
follows:                       0      - One-step assembly jobs should be changed
 to two-step jobs c  onsisting            of the assembly step followed by the X
REFIN step.                      0      - The assembly step should write its lis
ting file to a temporary dataset          rather than to spool.
                                 0        - The XREFIN step can then read the li
sting file and extract from it the          relevant cross-reference information
. In addition, the XREFIN program           can echo the listing dataset to a SY
SPRINT file, if desired.           0        XREFI  N extracts cross-reference da
ta and writes it "mod" to an               accumulation dataset which will later
 be processed by XREFOUT. Each record      written is assigned both the name of
the current assembly and a timestamp       associated with the c  urrent run. XR
EFIN infers the assembly name by             examining the page title lines appe
aring in the assembly listing. The           first word appearing in the title l
ine is taken to be the assembly name.        For both the S/370 Assembler, Asse+
 mbler H, High Level Assembler and the         Series/1 Assembler, this first
word is set from the name field of the           "TITLE" assembler statement.
                                           0        The timestamp is stored so t
hat later XREFOUT can control the results        of repeated assemblies of the s
ame sections  . If the same section is             assembled twice and XREFIN is
, therefore, executed twice for the same           section, then two complete se
ts of cross-reference data will be written to      the accumulation file. Becaus
e of the timestamps, XREFOU  T can recognize         the situation and discard t
he older cross-reference data.                 -
                                               -
                                                 0
          - 2 -                                  1
                                                 -
         XREFASM                                 -
          (XREFIN)                                 -        XREFIN has the follo
wing JCL requirements.                             -
                                                   0     EXEC Card Keywo  rd: RE
GION=100K                                            0     XREFIN's memory requi
rements are trivial. REGION=100K should be more than       enough.
                                                     -
                                                       0     DDNAME: LISTING
                                                       0          Attributes
                                                                  access method
          QSAM                                                      DSORG
            PS                                                      RECFM
            any                                                     LRECL
            any                                                       BLKSIZE
              any                                                     defaults
              (PS,UA,255,255)                              0     This file is re
quired. It must contain the listing output produced   by           preceeding as
sembly. XREFIN echos the file to SYSPRINT (if available) and       scans it for
cross-reference data on the way. All such data is saved in an      accumulation
file for later processing by XREFOUT.                        -
                                                               0     DDNAME: XRE
F                                                              0          Attrib
utes                                                                      access
 m  ethod           QSAM                                                    DSOR
G                   PS                                                      RECF
M                   FB                                                      LREC
L                +    27                                                      BL
KSIZE                   27*n
defaults                (PS,FB,27,6210)                              0     This
is the accumulation file. The cross-reference data is extracted from       the l
isting file and written to thi  s file. It should be allocated with          DIS
P=MOD so as not to overwrite previously accumulated data. It is a            req
uired file. If it is omitted, then XREFIN will abend (probably with an       0C1
).                                                                       -
                                  - 3 -                                  1
                                                                         -
                                 XREFASM                                   -
                                  (XREFIN)                                 -
 DDNAME: SYSPRINT                                                          0
      Attributes
        access method           QSAM
        DSORG                   PS
        RECFM                   any
        LR  ECL                   any
          BLKSIZE                 any
          defaults                the attributes of the LISTING file           0
     This file is optiona  l. If present, then it receives an echo of the LISTIN
G      file. If omitted, then no echo is produced.
 -
 0     DDNAME: SYSTERM
   0          Attributes
              access method           QSAM
              DSORG                   PS
                RECFM                   UA
                BLKSIZE                 255
     0     This file is optional. If present, then XREFIN's informatio  n messag
es are       written to it. If it is omitted, then the messages are discarded. (
XREFIN       does not issue any error messages).
       -
         0     XREFIN Completion Codes
         0     0:   XREFIN has completed processing without error.
         0     16:  The LISTING file has not been given. XREFIN cannot proceed.
         -
                                                   XREFOUT
           0     XREFOUT sorts and edits accumulated cross-reference data and pr
oduces           global cross-refer+ ence report (see figure 1). If the accumula
tion dataset       contains eithe  r obsolete entries (due to re-assemblies) or
"purged"             entries (see below), then XREFOUT will discard them so that
 they will not -
                                                          - 4 -
                 1
                 -                                       XREFASM
                 -                                      (XREFOU  T)
                   -     affect the cross-reference report. Further, XREFOUT may
, at the user's          option, rewrite the sorted and compressed accumulation
file back either to      the original dataset or to a new one. This helps to c
ontrol the size of         the file.
                     0        XREFOUT performs the data sort by dynamically invo
king IBM's Sort/Merge      program. Any compatible substitute could be used inst
ead (e.g., SY  NCSORT).      XREFOUT links to Sort/Merge via the name "SORT".
                       0        XREFOUT has the following JCL requirements.
                       -
                       0       EXEC Card Keyword: REGION=
                         0     XREFOUT's memory requirements are affected by the
 size of the sort that         needs to be done. Accordingly, the appropriate So
rt/Merge manual should be      consulted an  d its recomendations followed. Gene
rally, REGION=1024K should       be a good value.
                           -
                           0     EXEC Card Keyword: PARM=
                             0     Any string given in the PARM field is display
ed in XREFOUT's page title         line as the object of the preposition "for" (
see figure 1). If no PARM          field is given, then the word "for" is   drop
ped from the title.            -
                               0     DDNAME: XREF
                               0          Attributes
                                            access method           QSAM
                                            DSORG                   PS
                                            RECFM                   FB
                                              LRECL                   27
                                              BLKSIZE                 27*n
                                   0     This file is required. It contains the
accumulated cross-reference data           that is to be processed. In addition
it may contain "purge control data"        as described below.
                                     -
                                                     +
- 5 -                                  1
                                         -
 XREFASM                                 -
(XREFOUT)                                -     DDNAME: REWRITE
                                           0          Attributes
                                                      access method           QS
AM                                                    DSORG                   PS
                                                        RECFM
FB                                                      LRECL
27                                                      BLKSIZE
27*n                                                      defaults
  same attributes as the XREF file             0     This file is optional. If p
resent, then a copy of the XREF file (with           obsolete or purged entries
edited out) is written to it. T  his ddname may        point to the identically
same dataset as the XREF ddname, since it is not       opened until after the XR
EF file is closed. If a REWRITE ddname is not          given, then compressed cr
oss-reference data is not rewritten.               -
                                                   0     DDNAME: SYSPRINT
                                                   0          Attributes
                                                                access method
        QSAM                                                    DSORG
        PS                                                      RECFM
        FBA                                                     LRECL
          133                                                     BLKSIZE
          133*n                                                   defaults
          (PS,FBA,133,3990)                            0     This file is option
al. If pres  ent, then the generated master                    cross-reference l
isting is written to it. If it is not available, then the      cross-reference l
isting is discarded.                                     -
                                                           0     DDNAME: SYSTERM
                                                           0          Attributes
              Sort/Merge dependant                                    usage
              Sort/Merge message dataset                     0     This file is
required. It is used by Sort/Merge as its message file (in         place of SYSO
UT). Its attributes are dependant upon the particular              Sort/Merge be
ing used.                                                      -
                                                               0
                        - 6 -                                  1
                                                               -       +
                         XREFASM                                 -
                          (XREFOUT)                                -     DDNAME:
 SORTLIB                                                           0          At
tributes                                                                      ac
cess   method           program fetch
DSORG                   PO
RECFM                   U
usage                     load library                                 0     Thi
s file may or may not be required depending upon the Sort/Merge program      bei
ng used. When required, this ddname should point to the SYS1.SORTLIB         dat
aset.                                                                    -
                                                                         0     D
DNAMEs: SORTWK0n                                                         0
    Attributes
      usage                   Sort/Merge work space
      size                    large                                        0
 One or more SORTWK0n files (n 1) may be required by Sort/Merge.   The work
   areas should be large enough to accomodate the number of records being
   sorted. Refer to the appropriate Sort/Merge manual for details.           -
                                                                             0
     Purging References to Obselete Assemblies                                 0
     Sometimes it is desirable to purge from the accumulated cross-reference
     references to assemblies that, for one reason or another, have become
     obselete   and have been dropped. This might also be necessary if the name
       on the TITLE card for an assembly has been changed thus making what reall
y      is the same assembly module appear to XREFOUT to be two different assembl
y      modules. To accomplish   this purging, the user should place into the
         accumulation file one or more "purge control records". These are record
s        that start with a blank character (at offset +0) followed by an assembl
y        module name (at offset +1 for up to   8 characters). The remaining byte
s of       the purge control record are ignored.
     0        When XREFOUT encounters a purge control record, it will then delet
e          from the accumulated data all records containing   an assembly module
 name        that matches the one given by the purge record. Note that an assemb
ly           module name that is entirely blank is valid. This corresponds to th
e case -
                                                  - 7 -
         1
         -                                       XREFASM
                     _ -                                      (XREFOUT)
                       -     where an assembly does not contain a TITLE card or
contains only ones           having blank name fields.
                       0          Purge control records must be put into an accu
mulation file manually.        They may be placed anywhere in the file since XRE
FOUT always sorts the          file in a way that moves them to the top. Any num
ber of purge records may       be put i  nto the file, and redundant records do
not hurt.                  0        There are any number of methods of placing p
urge records into an             accumulation file. They can be edited in assumi
ng that the file is not too      big for the editor be  ing used. They can be wr
itten in with IEBGENER. Just       be sure to use DISP=MOD. Or they can be place
d into a separate file which       would then be concatenated via JCL to the acc
umulation file when XREFOUT        is executed. Be aware, though, tha  t XREFOUT
 does not support "unlike            concatenation", thus the file containing th
e purge records must have the        same attributes as the accumulation file.
                               -
                                 0     XREFOUT Completion Codes
                                 0     0:   XREFOUT has completed processing wit
hout error.                      0     4:   The number of assemblies being cross
-referenced has exc  eeded 1000.   0     16:  The XREF ddname has not been provi
ded. XREFOUT cannot proceed.       -
                                   -
                                     -
                                     -
                                     -
                                     -
                                       -
 
- 8 -
                                         ./ ADD NAME=README
                                         This is README file for the XREFASM pro
gram.
                                           XREFASM is a two-program system (XREF
IN and XREFOUT) that can be used to        produce global cross-reference listin
gs for multi-assembly programs.
                                             The XREFASM.ZIP file contains the f
ollowing files:
                                               - XREFASM.ALC is the assembler so
urce code for the XREFIN and + XREFOUT             programs.
 
                                                   - MANUAL.TXT contains the Use
r's Guide for XREFASM. It is a text file             with ASA carriage control c
haracters. It can be printed most easily               on a mainframe printer. (
It also can be printed on a PC printer with            the assistance of the CCC
PRINT program, also available from Cole                Software.)
 
                                                       - ASMJCL.TXT is sample JC
L for assembling and link editing the XREFIN             and XREFOUT programs.
 
                                                         - SAMPJCL.TXT is sample
 JCL for running the XREFIN and XREFOUT                    programs.
 
                                                         All of the files are en
coded in ASCII. When uploading them to your              mainframe, ASCII-to-EBC
DIC translation should be enabled.
                                                           Assembling XREFASM wi
ll require a macro library available from Cole             Software's web site (
www.colesoft.com). The file there is named                 MACROS.ZIP. You will
have to obtain and install these macr  os before you         will be able to com
plete the installation of XREFASM.
                                                             To install XREFASM,
 do the following:
                                                                 - Obtain and in
stall Cole Software's macro library (MACROS.ZIP).
                                                                 -   Use WINZIP
or PKUNZIP (or whatever) to decompress and extract the               the XREFASM
.ALC, MANUAL.TXT, ASMJCL.TXT and SAMPJCL.TXT files from              XREFASM.ZIP
.
                                                                     - Upload th
e several files to your mainframe. Make sure that                      ASCII-to-
EBCDIC translation is turned on.
                                                                       - Upload
the files to a library whose DCB attributes are RECFM=FB,                LRECL=8
0, and BLKSIZE=n*80.
                                                                         - !!! P
RINT AND READ THE MANUAL MEMBER FOR COPYRIGHT INFORMATION,                 USAGE
 RESTRICTIONS, AND CONTACT INFORMATION (not to mention program             usage
 instructions too).                            +
                                                                             - C
heck out the ASMJCL member for sample JCL to assemble and linkedit             t
he XREFIN and XREFOUT programs.
                                                                               -
 Assemble the XREFIN and XREFOUT member using both system macros and
 private macros available from Cole Software.
 
 - Linkedit the XREFIN and XREFOUT programs into a suitable TSO load
   library.
 
 - Try it   out using the SAMPJCL member as a guide.
 
 
 
   CONTACT INFORMATION:
 
       Name:                David B. Col  e
         Country:             USA
 
         Telephone:           540-456-8536
           FAX:                 540-456-6658
           E-mail:              davidbcole@aol.com
           Website:             www.colesoft.com
 
             Snail Mail:          Cole Software
                                  736 Fox Hollow Road
                                    Afton, VA 22920
                                    USA
 
           ./ ADD NA  ME=SAMPJCL
             //***********************************************************
             //*                                                         *
             //*      SAMPLE JOB TO   ASSEMBLE A JES2 MODULE AND GENERATE  *
               //*      MASTER CROSS-REFERENCE ENTRIES FOR LATER DISPLAY.  *
               //*                                                         *
               //*********************************  **************************
                 //*
                 //XEQ      EXEC PGM=ASMA90,REGION=1024K,
                 //             PARM='TEST,DECK,NOOBJ,NORLD,TERM'+
                   //SYSLIB   DD  DSN=JES2.MACLIB,DISP=SHR
                     //         DD  DSN=SYS1.MACLIB,VOL=,DISP=SHR
                     //         DD  DSN=SYS1.MODGEN,VOL=,DISP=SHR
                     //SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(15,1))
                       //SYSTERM  DD  SYSOUT=*
                       //SYSPRINT DD  DSN=&&LISTING,
                       //             UNIT=SYSDA,SPACE=(CYL,(10,2),RLSE),
                         //             DCB=(RECFM=FBA,LRECL=121,BLKSIZE=3993),D
ISP=(,PASS)              //SYSPUNCH DD  DSN=JES2.OBJ(HASPXEQ),DISP=OLD
                         //SYSIN    DD  DSN=JES2.ASM(HASPXEQ),DISP=SHR
                         //*
                           //XREFGEN  EXEC PGM=XREFIN,REGION=100K
                           //SYSTERM  DD  SYSOUT=*
                           //SYSPRINT DD  S  YSOUT=*
                             //LISTING  DD  DSN=&&LISTING,DISP=(OLD,DELETE)
                             //XREF     DD  DSN=JES2.XREF,DISP=MOD
 
 
 
                               //****************************************  *****
**************                   //*
             *                   //*      SAMPLE JOB TO ASSEMBLE ANOTHER JES2 MO
DULE AND     *                   //*      GENERATE MORE MASTER CROSS-REFERENCE E
NTRIES F  OR   *                   //*      LATER DISPLAY.
               *                   //*
               *                   //*******************************************
****************                     //*
                                     //PRPU      EXEC PGM=ASMA90,REGION=1024K,
                                     //             PARM='TEST,DECK,NOOBJ,NORLD,
TERM'                                /  /SYSLIB   DD  DSN=JES2.MACLIB,DISP=SHR
                                       //         DD  DSN=SYS1.MACLIB,VOL=,DISP=
SHR                                    //         DD  DSN=SYS1.MODGEN,VOL=,DISP=
SHR                                    //SYSUT1   DD    UNIT=SYSDA,SPACE=(CYL,(1
5,1))                                    //SYSTERM  DD  SYSOUT=*
                                         //SYSPRINT DD  DSN=&&LISTING,
                                         //             UNIT=SYSDA,S  PACE=(CYL,
(10,2),RLSE),                              //             DCB=(RECFM=FBA,LRECL=1
21,BLKSIZE=3993),DISP=(,PASS)              //SYSPUNCH DD  DSN=JES2.OBJ(HASPPRPU)
,DISP=OLD                                  //SYSIN    DD  DSN=JES2.ASM(HASPPRPU)
,DI+ SP=SHR                                  //*
                                               //XREFGEN  EXEC PGM=XREFIN,REGION
=100K                                          //SYSTERM  DD  SYSOUT=*
                                               //SYSPRINT DD  SYSOUT=*
                                                 //LISTING  DD  DSN=&&LISTING,DI
SP=(OLD,DELETE)                                  //XREF     DD  DSN=JES2.XREF,DI
SP=MOD
 
 
                                                            PERFORM ASSEMBLIES O
F ALL OF THE JES2 MODULES                                     BEFORE RUNNING THE
 FINAL JOB SHOWN BELOW.
 
 
                                                       //***********************
************************************                   //*
                                   *                   //*      SAMPLE JOB T  O
SORT AND PRINT THE MASTER            *                   //*      CROSS-REFERENC
E.                                   *                   //*
                                     *                   //*********************
***********  ***************************                   //*
                                                           //XREF     EXEC PGM=X
REFOUT,REGION=4096K,                                       //             PARM='
JES2/SP V1.3.3 - PUT LEVEL   8401'                           //SYSTERM  DD  SYSO
UT=*                                                         //SYSPRINT DD  SYSO
UT=*                                                         //XREF     DD  DSN=
JES2.XREF,DISP=OLD                                             //REWRITE  DD  DS
N=*.XREF,DISP=OLD                                              //SORTLIB  DD  DS
N=SYS1.SORTLIB,DISP=SHR                                        //SORTWK01 DD  UN
IT=SYSDA,SPACE=(CYL,(40,2))
                                                                 ./ ADD NAME=XRE
FASM                                                             XREFASM  TITLE
'-- MASTER CROSS-REFERENCE FOR SYSTEMS OF ASSEMBLY PROGR*00010000
  AMS'                                                     00020000*************
************************************************           00030000*
                                               *           00040000* MODULE NAME
 = XRE  FASM.                                    *           00050000*
                                                 *           00060000* DESCRIPTI
VE NAME = MASTER CROSS REFERENCE GENERATOR FOR   *           00070000*
          SYSTEMS OF + ASSEMBLER LANGUAGE          *           00080000*
            PROGRAM  S.                              *           00090000*
                                                     *           00100000* COPYR
IGHT = DAVID B. COLE: 1989- 1989                     * 08/89 DBC 00110000*
                                                       *           00120000* STA
TUS = RELEASE 1, MODIFICATION LEVEL 5.                 * 07/89 DBC 00130000*
                                                       *           00140000* FUN
CTION = XREFIN ACCUMULATES CROSS REFERENCE LISTIN  GS    *           00150000*
          FOR ASSEMBLER LANGUAGE PROGRAMS. XREFOUT SORTS *           00160000*
          AND PRINST THE ACCUMULATED LISTINGS. REDUNDANT *           00170000*
          ENTRIES RESULTING FROM RE-ASSEMBLIES OF THE    *             00180000*
            SAME ROUTINES ARE FILTERED OUT.                *           00190000*
                                                           *           00200000*
 PROCESSOR = OS/VS ASSEMBLER.                              *           00210000
 *                                                           *           0022000
0* TYPE = PROCEDURE.                                         *           0023000
0*                                                           *           0024000
0* ATTRIBUTES   = NONE.                                        *           00250
000*                                                           *           00260
000* DEPENDANCIES = THE NAME OF THE MODULE FOR WHICH THE       *           00270
000*                ASSEMBLY   LISTING WAS CREATED MUST APPEAR   *           002
80000*                IN THE NAME FIELD OF A TITLE STATEMENT     *           002
90000*                USED IN THE ASSEMBLY.                      *           003
00000*                                                             *           0
0310000* NOTES = THIS SOURCE CONTAINS TWO CSECTS WHICH MUST BE     *           0
0320000*         LINK EDITED INTO SEPERATE LOAD MODULES.           *           0
0330000*                                                             *
 00340000* RESTRICTIONS = NONE.                                      *
 00350000*                                                           *
 00360000* AUTHOR = DAVID B. COLE.                                   *
   00370000*                                                           *
   00380000*************************************************************
   00390000         TITLE '-- CHANGE HISTORY'                            01/85 D
BC 004000  00************************************************************* 08/89
 DBC 00410000*                                                           * 08/89
 DBC 00420000* XREFASM VERSION 1.5                                       * 08/89
 DBC 00430000*                                                             * 08/
89 DBC 00440000* LAST CHANGE DATE - AUGUST 12, 1989                        * 08/
89 DBC 00450000*                                                           * 08/
89 DBC 00460000* - ADDED SUPPORT TO XRE+ FOUT FOR CONTROLLING VIA THE PARM   * 0
8/89 DBC 00470000*   FIELD THE NUMBER   OF LINES PRINTED PER PAGE AS FOLLOWS:  *
 08/89 DBC 00480000*                                                           *
 08/89 DBC 00490000*      PARM='LPP=NNN,---'                                   *
 08/89 DBC 00500000*
 * 08/89 DBC 00510000***********************************************************
** 08/89 DBC 00520000         EJECT ,
   07/85 DBC 00530000**********************************************  ***********
**** 07/85 DBC 00540000*
   * 07/85 DBC 00550000* XREFASM VERSION 1.4
   * 07/85 DBC 00560000*
     * 07/85 DBC 00570000* LAST CHANGE DATE - JULY 30, 1985.
     * 07/85 DBC 00580000*
     * 07/85 DBC 00590000*                  - IF THE REWRITE DDNAME WAS DEFINED
BUT  * 07/85 DBC   00600000*                    WAS NOT DEFINED TO BE THE SAME D
ATASET * 07/85 DBC 00610000*                    AS THE XREF FILE, THEN XREFOUT W
OULD   * 07/85 DBC 00620000*                    FAIL WITH S013 ABENDS.
       * 07/85 DBC 00630000*
         * 07/85 DBC 00640000*                  - THE DEFAULT BLKSIZE FOR THE XR
EF FILE  * 07/85 DBC 00650000*                    HAS BEEN CHANGED FROM <4K TO 6
162      * 07/85 DBC 00660000*                      (<6233) WHICH IS A GOOD SIZE
 FOR       * 07/85 DBC 00670000*                    3330S, 3350S, AND 3380S.
           * 07/85 DBC 00680000*
           * 07/85 DBC 00690000*******************************  ****************
************** 07/85 DBC 00700000         EJECT ,
               07/85 DBC 00710000***********************************************
************** 01/85 DBC 00720000*
               * 01/85 DBC 00730000* XREFASM VERSION 1.3
               * 01/85 DBC 00740000*
               * 01/85 DBC 00750000* LAST CHANGE DATE - JANUARY 22, 1985.
                 * 01/85 DBC 00760000*
                 * 01/85 DBC 00770000*                  - I ADDED CODE TO PREVEN
T THE            * 01/85 DBC 00780000*                    POSSIBILITY OF THE DIS
PLAY OF          * 01/85 DB  C 00790000*                    OBSELETE SYMBOLS. TH
IS IS DONE BY      * 01/85 DBC 00800000*                    HAVING XREFIN WRITE
A TIMESTAMP        * 01/85 DBC 00810000*                    RECORD WITH A SYMBOL
 VALUE OF          * 01/85 DBC 00820000*                      X'40FF000000'. THI
S VALUE IS LOW       * 01/85 DBC 00830000*                    ENOUGH THAT XREFOU
T WILL SORT IT       * 01/85 DBC 00840000*                    LOWER THAN ALL XRE
F RECORDS BUT        * 01/85 DBC 00850000*               +      HIGHER THAN A PO
SSIBLE PURGE RECORD    * 01/85 DBC 00860000*                      (CL9' ANAME').
 THIS TIMESTAMP RECORD   * 01/85 DBC 00870000*                    WILL NEVER BE
DISPLAYED BY XREFOUT,    * 01/85 DBC 00880000*                    BUT IT WILL GU
ARENTEE THAT XREFOUT     * 01/85 DBC 00890000*                    WILL   KNOW TH
E MOST RECENT              * 01/85 DBC 00900000*                    TIME-OF-ASSE
MBLY FOR A PARTICULAR      * 01/85 DBC 00910000*                    MODULE PRIOR
 TO IT RECEIVING FROM      * 01/85 DBC 00920000*                    SORT/MERGE A
NY DA  TA RECORDS FOR ANY    * 01/85 DBC 00930000*                    ASSEMBLIES
 OF THAT MODULE.             * 01/85 DBC 00940000*
                             * 01/85 DBC 00950000*                  - WHEN XREFO
UT REWRITES THE XREF   FILE,   * 01/85 DBC 00960000*                    IT WILL
NOW RESET THE TIMESTAMP FIELD  * 01/85 DBC 00970000*                    OF ALL R
ECORDS TO THE CURRENT DATE.    * 01/85 DBC 00980000*                    THIS PRE
VENTS THE ACCUMULATION OF      * 01  /85 DBC 00990000*                    REDUND
ANT RECORDS IN THE FOLLOWING     * 01/85 DBC 01000000*                    SCENAR
IO:                              * 01/85 DBC 01010000*
                                 * 01/85 DBC 01020  000*                    - TH
E INPUT FILE IS A CONCATENATION OF * 01/85 DBC 01030000*                      TW
O OR MORE FILES, AND               * 01/85 DBC 01040000*
                                   * 01/85 DBC 01050000*                      -
THE OUTPUT FILE WRITES BACK TO ONE   * 01/85 DBC 01060000*
OF THE INPUT FILES, AND              * 01/85 DBC 01070000*
                                     * 01/85 DBC 01080000*                    -
  THE XREFOUT JOB, USING THE IDENTICAL * 01/85 DBC 01090000*
  JCL, IS EXECUTED TWO OR MORE TIMES.  * 01/85 DBC 01100000*
                                       * 01/85 DBC 01110000*                  -
THE S.L.A.C. MO  DIFIED ASSEMBLER-H HAS  * 01/85 DBC 01120000*
  A TROUBLESOME BUG WHERE OCCASIONALLY   * 01/85 DBC 01130000*
  THE SYMBOL FIELD IN THE XREF LISTING   * 01/85 DBC 01140000*
  CONTAINS GARBAGE CHARACTERS.   THIS CAN  * 01/85 DBC 01150000*
    OCCUR BOTH ON THE FIRST XREF LINE FOR  * 01/85 DBC 01160000*
    A GIVEN SYMBOL, AS WELL AS ON          * 01/85 DBC 01170000*
    CONTINUATION LINES (WHEN THAT FIELD    *   01/85 DBC 01180000*
      SHOULD BE BLANK), AND EVEN IN THE      * 01/85 DBC 01190000*
      NAME FIELD OF TITLE LINES WITHIN THE   * 01/85 DBC 01200000*
      XREF. I HAVE ADJUSTED XREFASM TO       * 01/85 DBC 012  10000*
        COMPENSATE FOR THIS IN TWO WAYS:       * 01/85 DBC 01220000*
                                               * 01/85 DBC 01230000*
        - ALL LINES HAVING A SYMBOL FIELD      * 01/85 DBC 01240000*       +
            WHOSE FIRST BYTE'S VALUE IS LESS     * 01/85 DBC 01250000*
              THAN X'40' ARE DISCARDED.            * 01/85 DBC 01260000*
                                                   * 01/85 DBC 01270000*
            - XREFIN HAS BEEN CHANGED TO CONSIDER  * 01/85 DBC 01280000*
                XREF LINES (FROM ASM-H ASSEMBLIES)   * 01/85 DBC 01290000*
                HAVING BLANK LEN, VALUE, AND DEFN    * 01/85 DBC 01300000*
                FIELDS TO BE CONTINUATION LINES      * 01/85 DBC 01310000*
                REGUARD  LESS OF WHETHER OR NOT THE    * 01/85 DBC 01320000*
                  SYMBOL FIELD IS BLANK OR NON-BLANK.  * 01/85 DBC 01330000*
                                                       * 01/85 DBC 01340000*
              - A SUMMARY DISPLAY IS N  OW PRINTED BY    * 01/85 DBC 01350000*
                  XREFOUT AT THE END OF THE MERGED XREF  * 01/85 DBC 01360000*
                  SHOWING THE NAMES OF ALL CROSS         * 01/85 DBC 01370000*
                  REFERENCED ASSEMBLY MODULES.             * 01/85 DBC 01380000*
                                                           * 01/85 DBC 01390000*
                  - ASSEMBLY MODULES THAT HAVE NO NAME     * 01/85 DBC 01400000*
                    DEFINED IN THE TITLE LINE ARE NOW      * 01/85 D  BC 0141000
0*                    IDENTIFIED AS *BLANK*.                 * 01/85 DBC 0142000
0*                                                           * 01/85 DBC 0143000
0************************************************************* 01/85 DBC 0144000
0           TITLE '-- REGISTER AND OTHER EQUATES'                          01450
000XREFASM  CSECT ,                                                        01460
000         SPACE 3                                                        01470
000         #REGS   R,                  STANDARD REGISTER NAMES             *014
80000               (BASE1REG,R13),     1ST PGM BASE REGISTER               *014
90000               (BASE2REG,R12),     2ND PROGRAM BASE REGISTER           *015
00000               (TYPEREG,R11)  ,      XREFIN: XREF TYPE TABLE BASE        *0
1510000               (INPUTCTR,R10),     XREFIN: INPUT (LISTING) RCDS CTR    *0
1520000               (XREFCTR,R9),       XREFIN: XREF FILE RCDS CTR          *0
1530000               (SYSPCTR,R8),       XREFIN  : SYSPRINT FILE RCDS CTR
*01540000               (XRRPTR,R7),        XREFIN: POINTS TO XRR*     04/97 DKC
*                       (RCDPTR,R11)        XREFOUT/SORTOUT: RECORD PTR
 01550000         SPACE 3
   01560000PRTLEN   EQU   133                 LENGTH OF A PRINT LINE
   01570000         SPACE 3
   01580000         #PUT  SUBAD=PUTSYST,MF=INIT MACRO INITIALIZATION
     01590000         TITLE '-- IBM MAPPING MACROS'
     01600000         PUSH  PRINT
     01610000         PRINT NOGEN
     01620000            _ SYMDEL   DSECT ,                   SYM-TABLE SUPPRESS
ION      01/85 DBC 01630000         SPACE 3
                   01640000*****************************************************
********           01650000*          DCB = DATA CONTROL BLOCK
         *           01660000*        IHADCB = DSECT AND BASE
         *           01670000***************************************************
**********           01680000         SPACE   1
                       01690000         DCBD  DSORG=QS
                       01700000         SPACE 3
                       01710000SYMNODEL DSECT ,                     END SYM-TABL
E SUPPRESSION  01/85 DBC 01720000         POP   PRINT
                         01730000         TITLE '-- XREFIN -- TABLE MAP - SOURCE
 XREF DESCRIPTION TABLE' 01740000TABLE    DSECT ,
                           01750000TTCHK    CLC   *-*,*-*             IDENTIFIES
 TITLE LINES               01760000MOGET    MVC   *-*,*-*             EXTRACTS A
SSEMBLY NAMES              01770000XRCHK    TM    *-*,B'11110000'     IDENTIFIES
 XREF DA  TA LINES           01780000LBCHK    TM    *-*,255-C' '        IDENTIFI
ES LABEL FIELDS              01790000         NOPR  0                   (FILLER)
                   01/85 DBC 01800000LBGET    MVC   *-*,*-*             EXTRACTS
 LABELS                        01810000REFSOFFS DS    H                   OFFSET
 IN A DATA LINE (NOT INCLUDING 01820000*                                  THE CC
C) TO THE FIRST REFERENCE      01830000*                                  ENTRY
                               0184000  0TABLELEN EQU   *-TABLE             TABL
E LENGTH                         01850000         TITLE '-- XREFIN/XREFOUT -- XR
EFRCD MAP - XREF FILE RECORD'    01860000XREFRCD  DSECT ,
                                 01870000XRRLABEL DS      CL8                 RE
FERENCED LABEL                     01880000XRRMODUL DS    CL8                 CO
NTAINING MODULE                    01890000XRRTSTMP DS    D                   ON
E'S COMPLEMENTED TIME STAMP        01900000XRRHEAD  EQU   XREFRCD,*-  XREFRCD
HEADER AREA                          01910000         SPACE 1
                                     01920000XRRCOUNT DS    PL3
HOLDS # OF REFERENCES IN X 04/97 DKC 01930000XRRLEN   EQU   *-XREFRCD
L'X  REF RECORD                        01960000         TITLE '-- XREFOUT -- STA
MP MAP - OBSELETE REFERENCES CONTROL A*01970000               ND LABEL REFERENCE
S COUNTER'                             01980000STAMP    DSECT ,
                                         01990000STMPHEAD DS    XL(L'XRRHEAD)
    COPY OF XRRHEAD                      02000000STMPLABL EQU   XRRLABEL-XRRHEAD
+STMPHEAD,L'XRRLABEL                     02010000STMPMODU EQU   XRRMODUL-XRRHEAD
+STMPHEAD,L'XRRMODUL             +         02020000STMPTIME EQU   XRRTSTMP-XRRHE
AD+STMPHEAD,L'XRRTSTMP                       02030000STMPHITS DS    PL3
        REFERENCES COUNTER FOR THE CURRENT   02040000*
        LABEL/MODULE COMBINATION             02050000STMPLEN  EQU   *-STAMP
                                             0  2060000         TITLE 'XREFIN --
 INITIALIZATION'                               02070000*************************
************************************           02080000*        STANDARD NON-REE
NTRANT ENTRY LINKAGE WITH TWO BASE *           02090000*          REGISTERS.
                                     *           02100000***********************
**************************************           02110000         SPACE 1
                                                 02120000XREFIN   #ENTER XRE  FI
N_COPYRIGHT_DAVID_B._COLE_-_1981-1997,   04/97 DBC*02130000               BASES=
(BASE1REG,BASE2REG)                                02140000         SPACE 3
                                                   02150000*********************
***********  *****************************           02160000*        OPEN THE L
ISTING FILE. IF IT DOES NOT EXIST, THEN  *           02170000*        TERMINATE.
                                         *           02180000*******************
**************************  ****************           02190000         SPACE 1
                                                       02200000         OPEN  LI
STING             OPEN THE LISTING FILE                02210000         TM    DC
BOFLGS-IHADCB+LISTING,DCBOFOPN DID IT OPE  N OK?         02220000         BZ
EXIT16              NO, TERMINATE                        02230000         SPACE
3                                                        02240000***************
**********************************************             02250000*        OPEN
 THE REMAINING FILES.                          *           02260000*************
************************************************           02270000         SPAC
E 1                                                        02280000           OP
EN  (SYSPRINT,OUTPUT,XREF,OUTPUT,SYSTERM,OUTPUT)             02290000         SP
ACE 3                                                        02300000***********
**************************************************           02310000*        GE
T A CO  MPLEMENTED TIME STAMP. NOTE, THE ACTUAL    *           02320000*
VALUE OF THE TIMESTAMP DOESN'T PARTICULARLY        *           02330000*
MATTER SINCE IT IS NOT USED FOR REPORTING A TIME   *           02340000*
OR DATE. INSTEAD, IT   IS USED BY THE XREF-SORT      *           02350000*
  ROUTINE (CALLED BY XREFOUT) TO FORCE A LIFO        *           02360000*
  ORDERING FOR POSSIBLY REDUNDANT LABELS THAT MIGHT  *           02370000*
  EXIST IN THE ACCUMULATION FILE DUE   TO              *           02380000*
    RE-ASSEMBLIES.                                     *           02390000*****
********************************************************           02400000
    SPACE 1                                        +                 02410000
      STCK  XRRTSTMP-XRRHEAD+HEAD STORE A TIME ST  AMP                 02420000
        XC    XRRTSTMP-XRRHEAD+HEAD,=(L'XRRTSTMP)X'FF' COMPLEMENT IT   02430000
        SPACE 3                                                        02440000*
************************************************************             0245000
0*        INITIALIZE MISCELLANEOUS COUNTERS.                 *           0246000
0*************************************************************           0247000
0         SPACE 1                                                        024800
 00         SR    INPUTCTR,INPUTCTR   CLEAR LISTING FILE COUNTER           02490
000         SR    XREFCTR,XREFCTR     CLEAR XREF FILE COUNTER              02500
000         SR    SYSPCTR,SYSPCTR     CLEAR SYSPRINT FILE COUNTER          02510
000         SP  ACE 1                                                        025
20000         SR    TYPEREG,TYPEREG     CLEAR XREF TYPE TABLE PTR            025
30000         TITLE 'XREFIN -- MAIN PROCESSING LOOP'                         025
40000************************  *************************************           0
2550000*        GET THE NEXT LISTING FILE RECORD.                  *           0
2560000*************************************************************           0
2570000         SPACE 1
 02580000GETLOOP  GET   LISTING             LOCATE THE NEXT RECORD
 02590000         LA    INPUTCTR,1(,INPUTCTR) COUNT IT
 02600000         LR    R14,R1              --> IT
   02610000         LH    R15,DCBLRECL-IHADCB+LISTING GET ITS LENGTH (MAYBE)
   02620000         SPACE 1
   02630000         TM    DCBRECFM-IHADCB+LISTING,DCBRECF RECFM=F OR U?
     02640000         BNZ   GOTREC              YES, AOK
     02650000         LH    R15,0(,R1)          NO, GET L'DATA+4
     02660000         SH    R15,=H'4'           GET L'DATA; VALID?
     0267  0000         BNP   GETLOOP             NO, IGNORE IT
       02680000         LA    R14,4(,R1)          YES, --> DATA
       02690000GOTREC   DS    0H
       02700000           SPACE 1
         02710000         LA    R0,XRL              --> LOCAL BUFFER
         02720000         LA    R1,L'XRL            GET ITS LENGTH
         02730000         ICM   R15,8,=  C' '         GET PAD CHARACTER
           02740000         MVCL  R0,R14              COPY RCD TO LOCAL BUFFER
           02750000         SPACE 3
           02760000***********************************  ************************
**           02770000*        LOOK FOR AN XREF TITLE LINE FOR ONE OF THE
 *           02780000*        SUPPORTED XREF FORMATS.
 *           02790000************************************************+ *********
****           02800000         SPACE 1
                 02810000         TM    FLAG,EOXREFF        PAST XREF YET?
             V11 02820000         BNZ   XREFSKIP            YES, SKIP ALL THIS
             V11 02830000         CLI   XRL,C'1'            NO, IS THIS A TITLE
LI  NE?            02840000         BE    TITLXAMN            YES, GO EXAMINE IT
               V11 02850000         TM    FLAG,TITNEXT        MAYBE, CHK AGAIN (
MACHINE CCC)   V11 02860000         BZ    TITNXTCK            NO, SKIP
         01/85 DB  C 02870000TITLXAMN NI    FLAG,255-TITNEXT    YES, CLEAR "TITL
E NEXT"    01/85 DBC 02880000         LTR   TYPEREG,TYPEREG     AM I ALREADY PRO
CESSING    01/85 DBC 02890000*                                  THE XREF?
           01/85 DBC 02900000           BNZ   XREFSKIP            YES, NO NEED T
O EXAMINE    01/85 DBC 02910000*                                  THIS TITLE LIN
E            01/85 DBC 02920000         SPACE 1
             01/85 DBC 02930000         LA    R  1,TYPES-4          NO, --> TYPE
S VECTOR                 02940000         BALR  R14,0               LOOPER
               01/85 DBC 02950000         LA    R1,4(,R1)           --> NEXT VEC
TOR ENTRY                02960000         ICM   TYPEREG,15,0(R  1)    GET NEXT V
ECTOR ENTRY; ANY MORE?     02970000         BZ    TITNXTCK            NO, NOT A
SUPPORTED XREF SECTION V11 02980000         USING TABLE,TYPEREG       YES, DCL T
ABLE BASE                  02990000         EX    0,TTCHK             IS THIS
A RECOGNIZED TITLE LINE?     03000000         BNER  R14                 NOT YET,
 KEEP THINKING ON IT         03010000         SPACE 3
                             03020000*******************************************
************  ******           03030000*        A RECOGNIZED TITLE LINE HAS BEEN
 FOUND. EXTRACT    *           03040000*        THE ASSEMBLY NAME FROM IT.
                   *           03050000*****************************************
********************             03060000         SPACE 1
                                 03070000         EX    0,MOGET             GET
THE ASSEMBLY NAME (IF ANY)       03080000         TM    XRRMODUL-XRRHEAD+HEAD,25
5-C' ' IS THE ASSEMBLY NAME      03090000*                                    NU
LL?                      01/85 DBC 03100000         BNZ   MNOTBLNK            NO
, PROCEED                01/85 DBC 03110000         MVC   XRRMODUL-XRRHEAD+HEAD,
=CL(L'XRRMODUL)'*BLANK*' 01/85 DBC 03120000*
YES, RESET TO SOMETHING    01/85 DBC 03130000*
READABLE                   01/85 DBC 03140000MNOTBLNK MVC   XREFTITN,XRRMODUL-XR
RHEAD+HEAD COPY 2 INFO MSG 01/85 DBC 03150000TITMSG   #PUT  XREFTIT
  SEND THE INFO MSG          01/85 DBC 03160000         SPACE 3
                             01/85 DBC 03170000*********************************
**************************** 01/85 DBC 03180000*        WRITE A TIMESTAMP RECORD
 FOR TH+ IS ASSEMBLY. SET A  * 01/85 DBC 03190000*        SPECIAL FAKE SYMBOL FI
ELD I  N IT SO THAT IT WILL    * 01/85 DBC 03200000*        SORT LOWER THAN ALL
XREF RECORDS BUT NOT LOWER     * 01/85 DBC 03210000*        THAN ANY PURGE RECOR
DS.                            * 01/85 DBC 03220000*****************************
********************  ************ 01/85 DBC 03230000         SPACE 1
                                   01/85 DBC 03240000         TM    DCBOFLGS-IHA
DCB+XREF,DCBOFOPN XREF FILE EXIST? DCB 01/85 03250000         BZ    TITNXTCK
        NO, FORGET IT                01/85 DBC 03260000         PUT   XREF
          Y:GET NEXT OUTPUT BUFFR    01/85 DBC 03270000*
          & OUTPUT PRIOR XREF RECORD 04/97 DKC                  LR    XRRPTR,R1
                                     04/97 DKC                    USING XREFRCD,
XRRPTR      DCL BUFFER BASE            01/85 DBC 03280000         MVC   XRRHEAD,
HEAD        COPY ASSEMBLY NAME AND     01/85 DBC 03290000*
            TIMESTAMP                  01/85 DBC 03300000           ZAP   XRRCOU
NT,=P'0'      ZERO THE COUNT FIELD       04/97 DKC                  MVC   XRRLAB
EL,=XL8'40FF000000000000' SET            01/85 DBC 03310000*
              LOW-SORTING "SYMBOL"       01/85 DBC 03320000         #TEST SIZE=(
  L'XRRLABEL,EQ,8)                         01/85 DBC 03330000         DROP  XRRP
TR              RELEASEXREF RCD BASE       01/85 DBC 03340000         SPACE 3
                                           01/85 DBC 03350000*******************
***************  *************************** 01/85 DBC 03360000*        SEE IF T
HE NEXT LISTING LINE WILL BE A TITLE LINE  * 01/85 DBC 03370000*        (MACHINE
 CCC).                                     * 01/85 DBC 03380000*****************
******************************  ************** 01/85 DBC 03390000         SPACE
1                                                    V11 03400000TITNXTCK CLI
XRL,X'89'           NO, IS NEXT A TITLE?             V11 03410000         BE
SETITNXT            YES, GO SET SIGNAL                 V11 03420000         CLI
  XRL,X'8B'           MAYBE, CHECK AGAIN               V11 03430000         BNE
  XREFSTAT            NO, DONE HERE                    V11 03440000SETITNXT OI
  FLAG,TITNEXT        YES, SET SIGNAL                  V11 0  3450000         SP
ACE 3                                                        03460000***********
**************************************************           03470000*        A
NON-TITLE LINE HAS BEEN RECEIVED. EXAMINE IT TO  *           03480000*
SEE WHAT I CAN DO WITH IT.                         *           03490000*********
****************************************************           03500000
SPACE 1                                                        03510000XREFSTAT
LTR   TYPE  REG,TYPEREG     AM I XREFING NOW?                    03520000
  BZ    XREFSKIP            NO, SKIP                             03530000
  TM    DCBOFLGS-IHADCB+XREF,DCBOFOPN YES, DOES THE    01/85 DBC 03540000*
                         +    XREF OUTPUT FILE EXIST?    01/85 DBC 03550000
    BZ    XREFSKIP              NO, FORGET IT                        03560000
      CLC   XRL+2(L'XRL-2),XRL+1 YES, DOES THIS DATA LINE CONTAIN    03570000*
                                ANYTHING AT ALL?                     03580000
      BE    XREFSKIP            NO, IG  NORE IT                        03590000
        CLI   XRL+1,C'='          YES, INTO LITTERALS YET?         V11 03600000
        BNE   XREFGOTL            NO, PROCEED                      V11 03610000
        OI    FLAG,EOXREFF        YES, SIGNAL EO-XREF                V11 0362000
0         B     XREFSKIP            DONE HERE                        V11 0363000
0         SPACE 3                                                        0365000
0*************************************************************             03660
000*        I HAVE RECEIVED A LINE WITHIN THE CROSS-REFERENCE  *           03670
000*        AND I HAVE AN XREF OUTPUT FILE AVAILABLE. SEE IF   *           03680
000*        THIS IS AN XREF DATA LINE.                         *           03690
000  *************************************************************           037
00000         SPACE 1                                                        037
10000XREFGOTL DS    0H                                                   V11 036
40000         EX      0,XRCHK             IS THERE A DIGIT HERE?               0
3720000         BNO   XREFSKIP            NO, NOT AN XREF DATA LINE; IGNORE    0
3730000         B     GOTXR               YES, PROCEED                         0
3740000         SPACE 1
 03750000EDXXRCHK TM    XRL+6,B'11110000'   EDX EXTENDED CHECK: DIGIT HERE?
 03760000         BO    GOTXR               YES, PROCEED
 03770000         TM    XRL+24,B'11110000'  NO,   HOW ABOUT HERE?
   03780000         BNO   XREFSKIP            NO, NOT AN XREF DATA LINE; IGNORE
   03790000         SPACE 3
   03800000****************************************************  *********
     03810000*        AN XREF DATA LINE HAS BEEN ENCOUNTERED.            * 04/97
 DKC 03820000*        SEE IF IT CONTAINS A LABEL. IF IT DOESN'T, SEE     * 04/97
 DKC         *        IF XRRLABEL ALREADY CONTAINS A VALID LABEL, OR IS  * 04/
97 DKC         *        JUST A TITLE DEFAULT FIELD (NO OTHER CASES ALLOWED)* 04/
97 DKC         *************************************************************
       03860000         SPACE 1
       038700  00GOTXR    EX    0,LBCHK             IS THE LABEL FIELD FILLED?
         03880000         BNE   XREFLBL             YES: SKIP                  0
1/85 DBC 03890000         USING XREFRCD,XRRPTR      DCL XREF RECORD BASE       0
4/97 DKC                  CL  C   XRRLABEL,=XL8'40FF000000000000' XRRLABEL REFS
 04/97 DKC                  BE    XREFSKIP                      A TITLE LINE
 04/97 DKC         *                                  THIS SITUATION CAN ONLY
 04/97 DKC         *                       +            OCCUR IF THE INPUT RECOR
DS 04/97 DKC         *                                    ARE OUT OF ORDER
     04/97 DKC                  CLC   XRRLABEL,BLANKS     IS XRRLABEL EMPTY?
     04/97 DKC                  #DIE  E                   Y: WELL IT SHOULDN'T B
E!   04/97 DKC                  B     COUNTREF              DATA LABEL IS BLANK.
 COUNT 04/97 DKC         *                                  REFS TO PRIOR XRRLAB
EL     04/97 DKC                  SPACE 3
       04/97 DKC         **********************************************  *******
********           04050000*        THE XREF DATA LINE CONTAINS A BRAND-NEW LABE
L      *           04060000*        OUTPUT THE PRIOR XREF RECORD & GET A CLEAN B
UFFER  *           04070000*        & FILL IT WITH HEADER INFORMATION, ETC.
         *           04070000***************************************************
**********           04080000         SPACE 1
           04/97 DKC         XREFLBL  EX    0,LBGET             COPY LABEL TO HE
AD         04/97 DKC                    CLC   XRRLABEL,HEAD       IS THE LABEL A
 DUPLICATE?  04/97 DKC                  BE    COUNTREF            Y:(DUE TO SYNT
AX ERROR)    04/97 DKC         *                                  TREAT AS IF LA
BEL IS BLANK 04/97 DKC                    PUT   XREF                N: OUTPUT TH
E PRIOR XREF   04/97 DKC         *                                  & PROVIDE A
CLEAN BUFFER   04/97 DKC                  LR    XRRPTR,R1           MOVE POINTER
 TO NEW BUFFER 04/97 DKC                  LA    XRE  FCTR,1(,XREFCTR) COUNT #XRE
F RECORDS OUTPUT 04/97 DKC 03950000         MVC   XRRHEAD,HEAD        COPY RECOR
D HEADER TO XRR*           03970000         ZAP   XRRCOUNT,=P'0'      RESET COUN
T FIELD          04/97 DKC                  SPACE 3
                   04/97 DKC         *******************************************
******************           04050000*        COUNT THE NUMBER OF REFERENCES IN
THE DATA LINE    *           04060000*        & ADD THE COUNT TO XRRCOUNT.
                   *           04070000*        SPACEFLG INDICATES WHETHER THE P
REVIOUS CHARACTER  *           04070000*        WAS A SPACE.
                   *           04070000*****************************************
****************  ****           04080000         SPACE 1
                       04/97 DKC         COUNTREF LA    R2,XRL
                       04/97 DKC                  AH    R2,REFSOFFS         POIN
T R2 TO BEG OF REFS-2  04/97 DK  C                  LA    R3,XRL+L'XRL-1      R3
 POINTS 2 LAST DATA CHAR 04/97 DKC                  OI    FLAG,SPACEFLG       SE
T THE SPACE FLAG         04/97 DKC         *                                  NO
TE THAT IT MUST BE UNSET 04/97 DKC         *
AT THE MOMENT OR EOXREFF   04/97 DKC         *
WOULD HAVE BYPASSED THIS   04/97 DKC         CHARSCAN LA    R2,1(,R2)
INCREMENT R2 BY 1 CHAR     04/97 DKC                  CR    R+ 2,R3
  @ END OF XRL FIELD YET?    04/97 DKC                  BH      DONE
    YES                        04/97 DKC                  TM    0(R2),X'F0'
    IS CHARACTER A DIGIT?      04/97 DKC                  BNO   CHKSPACE
    N:SEE IF CHAR IS A SPACE   04/97 DKC                  TM    FLAG,SPACE  FLG
      Y:SEE IF SPACE FLAG IS SET 04/97 DKC                  BZ    CHARSCAN
      N:PREV CHAR WAS DIGIT,LOOP 04/97 DKC                  NI    FLAG,255-SPACE
FLG   Y:PREV CHAR WAS BLANK;     04/97 DKC         *
        R  ESET SPACE FLAG &       04/97 DKC                  AP    XRRCOUNT,=P'
1'        INCREMENT COUNTER        04/97 DKC                  B     CHARSCAN
          &LOOP                    04/97 DKC         CHKSPACE CLI   0(R2),C' '
        IS CHARACTER A S  PACE?      04/97 DKC                  BNE   CHKOTHER
          N: IS IT AN IGNORABLE CHAR 04/97 DKC                  OI    FLAG,SPACE
FLG       Y:SET THE SPACE FLAG       04/97 DKC                  B     CHARSCAN
            & LOOP                   04  /97 DKC         CHKOTHER CLI   0(R2),C'
_'          IS CHARACTER AN UNDERSCORE 04/97 DKC                  BE    CHARSCAN
            Y: IGNORE                  04/97 DKC                  C     TYPEREG,
=A(HLASM)   IS THIS THE HI-LEVEL ASM?  04/97 DKC                    BNE   DONE
              N: ALL REFS COUNTED        04/97 DKC                  CLI   0(R2),
C','          IS CHARACTER A COMMA?      04/97 DKC                  BE    CHARSC
AN            Y: IGNORE                  04/97 DKC                  C  LI   0(R2
),C'B'          IS CHARACTER A 'B'?        04/97 DKC                  BE    CHAR
SCAN            Y: IGNORE                  04/97 DKC                  CLI   0(R2
),C'M'          IS CHARACTER A 'M'?        04/97 DKC                  BE    CHAR
SCAN              Y: IGNORE                  04/97 DKC                  CLI   0(
R2),C'U'          IS CHARACTER A 'U'?        04/97 DKC                  BE    CH
ARSCAN            Y: IGNORE                  04/97 DKC         DONE     NI    FL
AG,255-SPACEFLG   U  NSET THE SPACE FLAG.      04/97 DKC                  DROP
XRRPTR              RELEASE XREF RECORD BASE             04010000         DROP
TYPEREG             RELEASE XREF TYPE TABLE BASE         04020000XREFSKIP DS
0H                                                         04030000         SPAC
E 3                                                        04040000*************
************************************************           04050000*        IF A
 SYSPRINT FILE IS PRESENT, THEN COPY THE       *             04060000*        LI
STING LINE OUT TO IT.                            *           04070000***********
**************************************************           04080000         SP
ACE 1                                                        040  90000
LA    R1,SYSPRINT         --> DCB                              04100000
USING IHADCB,R1           DCL DCB BASE                         04110000
TM    DCBOFLGS,DCBOFOPN   IS SYSPRINT OPENED?                  04120000        +
  BZ    GETLOOP             NO, DONE HERE                        04130000
    SPACE 1                                                        04140000
    TM    DCBRECFM,DCBRECU    YES, RECFM=I?                        04150000
    TM    DCBRECFM,DCBRECU    YES, RECFM=U?                        04160000
    BO    SY  SPPUTU            YES, GO HANDLE                       04170000
      TM    DCBRECFM,DCBRECV    NO, RECFM=V?                         04180000
      BO    SYSPPUTV            YES, GO HANDLE                       04190000
      SPACE 3                                                          04200000*
************************************************************           04210000*
        THE SYSPRINT FILE IS RECFM=F.                      *           04220000*
******************************************  ******************           0423000
0         SPACE 1                                                        0424000
0         PUT   (1)                 GET NEXT OUTPUT BUFFER               0425000
0         DROP  R1                  RELEASE SYSPRINT DCB   BASE            04260
000         LA    SYSPCTR,1(,SYSPCTR) COUNT SYSPRINT RECORD                04270
000         LR    R0,R1               --> COPY SINK                        04280
000         LH    R1,DCBLRECL-IHADCB+SYSPRINT GET L'COPY SINK                042
90000         LA    R14,XRL             --> INPUT LINE                       043
00000         LA    R15,L'XRL           GET L'INPUT LINE                     043
10000         ICM   R15,15,=C' '        GET COPY PADDING CHARACTER           043
20000           MVCL  R0,R14              COPY LISTING RECORD                  0
4330000         B     GETLOOP             DONE HERE                            0
4340000         SPACE 3                                                        0
4350000***************  **********************************************
 04360000*        THE SYSPRINT FILE IS RECFM=U.                      *
 04370000*************************************************************
 04380000         SPACE 1
   04390000         USING IHADCB,R1           RESTORE SYSPRINT DCB BASE
   04400000SYSPPUTU LA    R3,L'XRL            GET L'INPUT LINE
   04410000         CH    R3,DCBBLKSI         IS LIS  TING LINE TOO LONG?
     04420000         BNH   SYSPULOK            NO, PROCEED
     04430000         LH    R3,DCBBLKSI         YES, TRUNCATE
     04440000SYSPULOK STH   R3,DCBLRECL         SET NEEDED BUFFER L  ENGTH
       04450000         PUT   (1)                 GET NEXT OUTPUT BUFFER
       04460000         DROP  R1                  RELEASE SYSPRINT DCB BASE
       04470000         LA    SYSPCTR,1(,SYSPCTR) COUNT THE SYSPRINT LINE
         04480000         SPACE 1
         04490000         LR    R0,R1               --> COPY SINK
         04500000         LR    R1,R3               GET L'COPY SINK
         04510000            _          LA    R2,XRL              --> COPY SOURC
E                      04520000         MVCL  R0,R2               COPY LISTING L
INE                    04530000         B     GETLOOP             DONE HERE
                       04540000           SPACE 3
                         04550000***********************************************
**************           04560000*        THE SYSPRINT FILE IS RECFM=V.
             *           04570000**************  *******************************
****************           04580000         SPACE 1
                           04590000         USING IHADCB,R1           RESTORE SY
SPRINT DCB BASE            04600000SYSPPUTV LA    R3,L'XRL              GET L'IN
PUT LINE                     04610000         LA    R4,8(,R3)           GET MIN
NEEDED BLKSIZE               04620000         SH    R4,DCBBLKSI         COMPARE
WITH ACTUAL MAX; OK?         04630000         BNP   SYSPVLOK            YES,   P
ROCEED                         04640000         TM    DCBRECFM,DCBRECSB   NO, LR
ECL>BLKSIZE; CAN THIS BE       04650000*                                  SWALLO
WED?                           04660000         BNZ   SYSPVLOK            YES, P
ROCEED                           04670000         SR    R3,R4               NO,
REDUCE L'DATA APPROPRIATELY      04680000SYSPVLOK LA    R4,4(,R3)           GET
NEEDED BUFFER LENGTH             04690000         STH   R4,DCBLRECL         STOR
E FOR QSAM                         04700000         PUT   (1)                 GE
T NEXT OUTPUT BUFFER               04710000         DROP  R1                  RE
LEASE SYSPRINT DCB BASE            04720000         LA    SYSPCTR,1(,SYSPCTR) CO
UNT THE OUTPUT LINE                0473000  0         SPACE 1
                                     04740000         SLL   R4,16
CREATE AN RDW                        04750000         ST    R4,0(,R1)
STORE INTO OUTPUT BUFFER             04760000         LA      R0,4(,R1)
  --> DATA COPY SINK                   04770000         LR    R1,R3
  GET L'COPY SINK                      04780000         LA    R2,XRL
  --> COPY SOURCE                      04790000         MVCL  R0,R2
    COPY DATA TO OUTPUT BUFFER           04800000         B     GETLOOP
    DONE HERE                            04810000         TITLE 'XREFIN -- TERMI
NATION'                                  04820000*******************************
*******  ***********************           04830000*        EOD HAS OCCURED ON T
HE LISTING FILE. DISPLAY ALL   * 01/85 DBC 04840000*        COUNTERS.
                               * 01/85 DBC 04850000*****************************
**********************  **********           04860000         SPACE 1
                                             04870000EOLIST   CVD   INPUTCTR,CVD
WA      CNVRT LISTING COUNT TO DEC 01/85 DBC 04880000         LA    R1,LISTCNT#+
L'LISTCNT#-1 PRIME ICO 1-DIGIT NUMBER+         04890000         EDMK  LISTCNT#,C
VDWA+3    CNVRT TO EBCDIC                        04900000         MVC   LISTCNT#
+1(L'LISTCNT#-1),0(R1) LEFT ADJUST               04910000         #PUT  LISTCNT
          DISPLAY THE MESSAGE                    04920000         SPACE 1
                                                 0  4930000         CVD   SYSPCT
R,CVDWA       CNVRT SYSPRINT COUNT TO DECIMAL      04940000         LA    R1,SYS
PCNT#+L'SYSPCNT#-1 PRIME ICO 1-DIGIT NUMBER        04950000         EDMK  SYSPCN
T#,CVDWA+3    CNVRT TO EBCDIC                      04960000           MVC   SYSP
CNT#+1(L'SYSPCNT#-1),0(R1) LEFT ADJUST               04970000         #PUT  SYSP
CNT           DISPLAY THE MESSAGE                    04980000         SPACE 1
                                                     04990000         CVD   XREF
  CTR,CVDWA       CNVRT XREF COUNT TO DECIMAL          05000000         LA    R1
,XREFCNT#+L'XREFCNT#-1 PRIME ICO 1-DIGIT NUMBER        05010000         EDMK  XR
EFCNT#,CVDWA+3    CNVRT TO EBCDIC                      05020000         MVC   XR
EFCNT#+1(L'XREF  CNT#-1),0(R1) LEFT ADJUST               05030000         #PUT
XREFCNT           DISPLAY THE MESSAGE                    05040000         SPACE
3                                                        05050000***************
******************************  ****************           05060000*        CLOS
E ALL FILES AND FREE THEIR BUFFER POOLS.       *           05070000*************
************************************************           05080000         SPAC
E 1                                                          05090000         LA
    R1,LISTING          --> LISTING DCB                      05100000         BA
L   R14,CLOSE           CLOSE IT                             05110000         SP
ACE 1                                                          05120000
LA    R1,SYSPRINT         --> SYSPRINT DCB                     05130000
BAL   R14,CLOSE           CLOSE IT                             05140000
SPACE 1                                                        05150000
  LA    R1,XREF             --> XREF DCB                         05160000
  BAL   R14,CLOSE           CLOSE IT                             05170000
  SPACE 1                                                        05180000
  LA    R1  ,SYSTERM          --> SYSTERM DCB                      05190000
    BAL   R14,CLOSE           CLOSE IT                             05200000
    SPACE 3                                                        05210000*****
*************************  *******************************           05220000*
      TERMINATE.                                         *           05230000***
**********************************************************           05240000
      SPACE 1                                                          05250000E
XIT     LH    R15,RCD             GET THE COMPLETION CODE              05260000
        #EXIT ((R14,R12)),RC=(R15) RETURN TO CALLER                    05270000
        SPACE 1                                        +                 0528000
0EXIT16   MVI   RCD+1,16            SET ERROR RETURN   CODE                05290
000         B     EXIT                GO TERMINATE                         05300
000         TITLE 'XREFIN -- CLOSE - DATASET CLOSE AND FREEPOOL ROUTINE'   05310
000*************************************************************             053
20000*                                                           *           053
30000*        CLOSE -- THIS ROUTINE CHECKS TO SEE IF A GIVEN DCB *           053
40000*        IS OPEN. IF IT IS, THEN IT IS CLOSED AND ITS I/O   *           053
500  00*        BUFFERS ARE RELEASED.                              *           0
5360000*                                                           *           0
5370000*        INPUTS:                                            *           0
5380000*                - R1 POINTS TO THE DCB TO BE CLOSED.         *
 05390000*              - R14 POINTS TO A RETURN ADDRESS.            *
 05400000*                                                           *
 05410000*        RETURN 0(,R14):                                      *
   05420000*              - THE DCB, IF NECESSARY, IS CLOSED.          *
   05430000*              - ALL REGISTERS ARE RESTORED.                *
   05440000*                                                             *
     05450000*************************************************************
     05460000         SPACE 1
     05470000         USING IHADCB,R1           DCL DCB BASE
       05480000CLOSE    TM    DCBOFLGS,DCBOFOPN   IS THE DCB OPEN?
       05490000         BZR   R14                 NO, RETURN TO CALLER
       05500000         STM   R14,R2,SAVECLOS     YES, SAVE REGISTERS
         05510000         LR    R2,R1               COPY THE DCB PTR
         05520000         DROP  R1                  RELREASE OLD DCB BASE
         05530000         USING IHADCB,R2           DCL NEW DCB BASE
         0554  0000         SPACE 1
           05550000         CLOSE ((R2))              CLOSE THE DCB
           05560000         SPACE 1
           05570000           FREEPOOL (R2)             RELEASE ITS BUFFERS
             05580000         SPACE 1
             05590000         LM    R14,R2,SAVECLOS     RESTORE REGISTERS
             05600000         DROP  R2                    RELEASE THE DCB BASE
               05610000         BR    R14                 RETURN TO CALLER
               05620000         TITLE 'XREFIN -- PUTSYST - SYSTERM MESSAGE PRINT
ING ROUTINE'   05630000***********************************  ********************
******           05640000*
     *           05650000*        PUTSYST -- THIS ROUTINE WRITES A MESSAGE TO TH
E    *           05660000*        SYSTERM FILE, IF ANY.                  +
       *           05670000*
         *           05680000*        INPUT:
         *           05690000*              - R1 POINTS TO A MESSAGE BLOCK.
         *           05700000*              - R14 POINTS TO A RETURN ADDRESS.
           *           05710000*
           *           05720000*        RETURN 0(,R14):
           *           05730000*              - IF A SYSTERM FILE IS OPEN, THEN
THE        *             05740000*                MESSAGE HAS BEEN SENT.
             *           05750000*              - ALL REGISTERS ARE RESTORED.
             *           05760000*
             *           05770000***  ******************************************
****************           05780000         SPACE 1
                           05790000PUTSYST  TM    DCBOFLGS-IHADCB+SYSTERM,DCBOFO
PN IS SYSTERM OPEN?        05800000         BZR   R  14                 NO, RETU
RN TO CALLER                 05810000         STM   R14,R1,SAVESYST     YES, SAV
E REGISTERS                  05820000         MVC   DCBLRECL+1-IHADCB+SYSTERM(1)
,0(R1) YES, SET L'MSG        05830000         LA    R0,1(,R1)             --> MS
G                              05840000         PUT   SYSTERM,(0)         SEND T
HE MESSAGE                     05850000         LM    R14,R1,SAVESYST     RESTOR
E REGISTERS                    05860000         BR    R14                 RETURN
   TO CALLER                     05870000         TITLE 'XREFIN -- DATA AREA - C
ROSS-REFERENCE TABLES PROCESSING*05880000                CONTROLS'
                                 05890000***************************************
****************  ******           05900000*        POINTER VECTOR FOR SUPPORTED
 XREFS.                *           05910000*************************************
************************           05920000         SPACE 1
                                     05930000TYPES    DS    0F
                                     05940000         DC    A(ASM)
S/370 XF ASSEMBLER                   05950000         DC    A(ASMH2)
XA H ASSEMBLER V2                V11 05960000           DC    A(EDX)
  CROSS ASSEMBLER FOR THE SERIES/1     05970000         DC    A(HLASM)
  HIGH-LEVEL ASSEMBLER       04/97 DKC 05970000         DC    A(0)
  DELIMITER                            05980000         SPACE   3
                                         05990000*******************************
******************************           06000000*        S/370 XF ASSEMBLER
                             *           06010000***************************  **
********************************           06020000         SPACE 1
                                           06030000ASM      DS    0H
                                           06040000         CLC   ASMTTID,XRL+49
      TTCHK+                                 06050000         MVC   XRRMODUL-XRR
HEAD+HEAD  ,XRL+1 MOGET                        06060000         TM    XRL+36,C'0
'         XRCHK                            V11 06070000         CLI   XRL+1,C' '
          LBCHK                      01/85 DBC 06080000         NOPR  0
          (FILLER)                     01/85 DBC 06090000         MVC   XRRLABEL
-XRRHEAD+HEAD,XRL+1 LBGET                        06100000         DC    H'30'
            REFSOFFS                             06110000         #TEST SIZE=(*-
ASM,EQ,TABLELEN)                                   06120000         SPACE 1
                                                   06130000ASMTTID  DC    C'  CR
OSS-REFERENCE  '                                   06140000         SPACE 3
                                               V11 061  50000*******************
******************************************       V11 06160000*        XA H ASSEM
BLER VERSION 2                           *       V11 06170000*******************
******************************************       V11 06180000           SPACE 1
                                                   V11 06190000ASMH2    DS    0H
                                                   V11 06200000         CLC   AS
MH2TTI,XRL+44     TTCHK                            V11 06210000         MVC   XR
RMOD  UL-XRRHEAD+HEAD,XRL+1 MOGET                    V11 06220000         TM
XRL+34,C'0'         XRCHK                            V11 06230000         CLC
XRL+10(20),XRL+9    LBCHK                      01/85 DBC 06240000         MVC
XRRLABEL-XRRHEAD+HE  AD,XRL+1 LBGET                    V11 06250000         DC
  H'30'               REFSOFFS                         V11 06260000         #TES
T SIZE=(*-ASMH2,EQ,TABLELEN)                           V11 06270000         SPAC
E 1                                                      V11 06280000ASMH2TTI DC
    C'  CROSS REFERENCE  '                               V11 06290000         SP
ACE 3                                                        06300000***********
*************************************************  *           06310000*
CROSS ASSEMBLER FOR THE SERIES/1                   *           06320000*********
****************************************************           06330000
SPACE 1                                                        0  6340000EDX
  DS    0H                                                       06350000
  CLC   EDXTTID,XRL+39      TTCHK                                06360000
  MVC   XRRMODUL-XRRHEAD+HEAD,XRL+1 MOGET                        06370000
    B     EDXXRCHK            XRCHK: EXTENDED CHECKING NEEDED      06380000
    CLI   XRL+11,C' '         LBCHK                      01/85 DBC 06390000
    NOPR  0                   (FILLER)                   01/85 DBC 06400000
    MVC   XRRL  ABEL-XRRHEAD+HEAD,XRL+11 LBGET                       06410000
      DC    H'17'               REFSOFFS                             06420000
      #TEST SIZE=(*-EDX,EQ,TABLELEN)                                 06430000
      SPACE 1                +                                         06440000E
DXTTID  DC    C'  CROSS-REF  ERENCE LISTING  '                           0645000
0         SPACE 1                                                        0646000
0         TITLE 'XREFIN -- DATA AREA (NON-REENTRANT)'                    0648000
0         SPACE 3                                                          06340
000************************************************************* 04/97 DKC 06310
000*        HIGH-LEVEL ASSEMBLER                               * 04/97 DKC 06320
000******************************************************  ******* 04/97 DKC 063
30000         SPACE 1                                              04/97 DKC 063
40000HLASM    DS    0H                                             04/97 DKC 063
50000         CLC   HLASMTID,XRL+30     TTCHK                      04/97   DKC 0
6360000         MVC   XRRMODUL-XRRHEAD+HEAD,XRL+1 MOGET              04/97 DKC 0
6370000         TM    XRL+53,C'0'         XRCHK                      04/97 DKC 0
6380000         CLI   XRL+1,C' '          LBCHK                      04/97 DKC 0
6390000           NOPR  0                   (FILLER)                   04/97 DKC
 06400000         MVC   XRRLABEL-XRRHEAD+HEAD,XRL+1 LBGET              04/97 DKC
 06410000         DC    H'52'               REFSOFFS                   04/97 DKC
 06420000         #TES  T SIZE=(*-HLASM,EQ,TABLELEN)                     04/97 D
KC 06430000         SPACE 1                                              04/97 D
KC 06440000HLASMTID DC    C'  Ordinary Symbol and Literal Cross Reference  '   D
KC 06450000         SPACE 1                                                04/97
 DKC 06460000         DROP  ,                   RELEASE ALL BASES          04/97
 DKC 06470000         TITLE 'XREFIN -- DATA AREA (NON-REENTRANT)'          04/97
 DKC 06480000         SPACE 3
       06340000*************************************************************
       06490000*        DATA CONTROL BLOCKS.                               *
       06500000****************************************************  *********
         06510000         SPACE 1
         06520000         PUSH  PRINT
         06530000         PRINT NOGEN
           06540000         SPACE 1
           06550000LISTING  DCB   DDNAME=LISTING,DSORG=PS,MACRF=GL,EXLST=LISTXLS
T,        *06560000               EODAD=EOLIST
           065700  00         SPACE 1
             06580000SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PL,EXLST=SYSP
XLST         06590000         SPACE 1
             06600000XREF     DC  B   DDNAME=XREF,DSORG=PS,MACRF=PL,EXLST=XREFXL
ST,RECFM=FB,  *06610000               LRECL=XRRLEN
               06620000         SPACE 1
               06630000SYSTERM  DCB   DDNAME=SY+ STERM,DSORG=PS,MACRF=PM,RECFM=U
A,LRECL=255,    *06640000               BLKSI  ZE=255
                   06650000         SPACE 1
                   06660000         POP   PRINT
                   06670000         SPACE 1
                     06680000         DS    0F                  EXIT LISTS
                     06690000LISTXLST DC    X'85',AL3(LISTOPEN)
                     06700000SYSPXLST DC    X'85',AL3(SYSPOPEN)
                       06710000XREFXLST DC    X'85',AL3(XREFOPEN)
                       06720000         SPACE 3
                       06730000*************************************************
**********  **           06740000*        MISCELLANEOUS DATA.
             *           06750000***********************************************
**************           06760000         SPACE 1
                           06770000CVDWA    DS    D                   CVD WORK A
REA                        06780000         SPACE 1
                           06790000         DS    0D
                           06800000HEAD       DC    CL(L'XRRHEAD)' '    XREF REC
ORD HEADER CONSTRUCTION AREA 06810000         SPACE 1
                             06820000SAVESYST DS    4A                  SAVE ARE
A FOR PUTSYST                06830000SAVECLOS DS    5A                    SAVE A
REA FOR CLOSE                  06840000         SPACE 1
                               06850000RCD      DC    H'0'                PROGRA
M RETURN CODE                  06860000         SPACE 1
                                 06870000BLANKS   DC    CL256' '            BLAN
K LINE                 04/97 DKC                  SPACE 1
                                 06870000FLAG     DC    AL1(TITNEXT)        LOCA
L PRO  GRAM CONTROL FLAGS      V11 06880000GOTSUTIT EQU   B'10000000'         AN
 XREF LISTING SUB-TITLE HAS BEEN   06890000*                                  SA
VED IN THE XREF DATA SET.          06900000TITNEXT  EQU   B'01000000'         A
TITLE LINE IS NEXT (  MACHINE    V11 06910000*
CCC)                             V11 06920000EOXREFF  EQU   B'00100000'
PAST EO-XREF                     V11 06930000SPACEFLG EQU   B'00100000'
THE PREVIOUS CHARACTER WAS A SPACE             *
  IN THE XREF LISTING        04/97 DKC                  SPACE 1
                                       06940000         LTORG ,
  LITTERAL POOL                        06950000           SPACE 3
                                         06960000*******************************
******************************           06970000*        BUFFERS AND MESSAGES.
                             *           06980000****************+ *************
********************************           06990000         SPA  CE 3
                                             07000000XRL      DS    CL(PRTLEN)
        LOCAL INPUT DATA BUFFER              07010000         SPACE 3
                                             07020000         DC    AL1(XREFTI
TL)       DEFAULT IS SHORT TITLE               07030000XREFTIT  DC    C'1CROSS-R
EFERENCE INPUT FOR '                 01/85 DBC 07040000XREFTITN DS    CL(L'XRRMO
DUL)                                 01/85 DBC 07050000XREFTITL EQU   *-XREFTIT
                                                 07060000         SPACE 3
                                                 07070000         DC    AL1(LIST
CNTL)                                            07080000LISTCNT  DC    C'0LISTI
NG RECORDS READ -'                                 07090000LISTCNT# DC    X'4020
2020202020202120'                                  07100000LISTCNTL EQU   *-LIST
CNT                                                07110000         DC    CL(L'L
ISTCNT#-1)' '                                        07120000         SPACE 3
                                                     07130000         DC    AL1(
SYSPCNTL)                                            07140000SYSPCNT  DC    C' S
YSPRINT RECORDS WRITTEN -'                           07150  000SYSPCNT# DC    X'
40202020202020202120'                                  07160000SYSPCNTL EQU   *-
SYSPCNT                                                07170000         DC    CL
(L'SYSPCNT#-1)' '                                      07180000         S  PACE
3                                                        07190000         DC
AL1(XREFCNTL)                                            07200000XREFCNT  DC
C' XREF RECORDS WRITTEN -'                               07210000XREFCNT# DC
X'402020  20202020202120'                                  07220000XREFCNTL EQU
  *-XREFCNT                                                07230000         DC
  CL(L'XREFCNT#-1)' '                                      07240000         TITL
E 'XREFIN -- LISTOPEN -   DCB OPEN EXIT FOR THE LISTING FILE*07250000
    '                                                        07260000***********
**************************************************           07270000*        NO
TE, THIS ROUTINE IS ALSO BRANCHED TO F  ROM        *           07280000*
SYSPOPEN.                                          *           07290000*********
****************************************************           07300000
SPACE 1                                                          07310000
  USING IHADCB,R1           DCL LISTING/SYSPRINT DCB BASE        07320000
  USING LISTOPEN,R15        DCL LOCAL BASE                       07330000LISTOPE
N OI    DCBRECFM,DCBRECBR   FORCE BLOCKING                   V11 073  40000
    SR    R3,R3               CLEAR                                07350000
    ICM   R3,3,DCBBLKSI       GET BLKSIZE                          07360000
    SR    R4,R4               CLEAR                                07370000
   +  ICM   R4,3,DCBLRECL       GET LRECL                            07380000
        SPACE 1                                                        07390000
        TM    DCBRECFM,DCBRECU    RECFM=U OR UNDEFINED?                07400000
        BNM   LORFMU              YES, GO HANDLE                       07410000
        TM    DC  BRECFM,DCBRECF    NO, RECRM=F?                         0742000
0         BNZ   LORFMF              YES, GO HANDLE                       0743000
0         SPACE 3                                                        0744000
0******************************  *******************************           07450
000*        LISTING/SYSPRINT RECFM=V.                          *           07460
000*************************************************************           07470
000         SPACE 1                                                          074
80000         LTR   R4,R4               IS AN LRECL DEFINED?                 074
90000         BNZ   LOVRSIZE            YES, PROCEED                         075
00000         LA    R4,259              NO, GET DEFAULT                        0
7510000LOVRSIZE STH   R4,DCBLRECL         STORE LRECL                          0
7520000         LA    R4,4(,R4)           GET NECESSARY BLKSIZE                0
7530000         CR    R4,R3               IS GIVEN BLKSIZE BIG ENOUGH?
 07540000         BNH   LOVBSIZE            YES, PROCEED
 07550000         TM    DCBRECFM,DCBRECSB   NO, DOES IT MATTER? (SPANNED RECS?)
 07560000         BNZ   LOVBSIZE            NO, PROCEED
 07570000           LR    R3,R4               YES, RESET THE BLKSIZE
   07580000LOVBSIZE STH   R3,DCBBLKSI         STORE BLKSIZE
   07590000         BR    R14                 RETURN TO OPEN
   07600000         SPACE   3
     07610000*************************************************************
     07620000*        LISTING/SYSPRINT RECFM=U.                          *
     07630000****************************  *********************************
       07640000         SPACE 1
       07650000LORFMU   OI    DCBRECFM,DCBRECU    FORCE RECFM=U
       07660000         LTR   R3,R3               BLKSIZ  E DEFINED?
         07670000         BNZ   LOUBSIZE            YES, PROCEED
         07680000         LTR   R3,R4               NO, GET LRECL; DEFINED?
         07690000         BNZ   LOUBSIZE            YES, PROCEED
           07700000         LA    R3,255              NO, GET DEFAULT BLKSIZE
           07710000LOUBSIZE STH   R3,DCBBLKSI         SET BLKSIZE
           07720000         STH   R3,DCBLRECL         FORCE LRECL=BLKSIZE
             07730000         BR    R14                 RETURN TO OPEN
             07740000         SPACE 3
             07750000***********************************************************
**           07760000            _ *        LISTING/SYSPRINT RECFM=F.
               *           07770000*********************************************
****************           07780000         SPACE 1
                           07790000L  ORFMF   LTR   R4,R4               IS A LRE
CL GIVEN?                    07800000         BNZ   LOFRSIZE            YES, PRO
CEED                         07810000         LA    R4,255              NO, LOAD
 DEFAULT VALUE               07820000LOFRSIZE SR      R2,R2               CLEAR
                               07830000         DR    R2,R4               GET BL
OCKING FACTOR                  07840000         MR    R2,R4               ISURE
INTEGRAL BLKSIZE               07850000         CR    R3,R4                 IS F
ILE BLOCKED?                     07860000         BH    LOFBSIZE            YES,
 PROCEED                         07870000         LR    R3,R4               NO,
SET FILE UNBLOCKED               07880000         NI    DCBRECFM,255-DCBRECBR CL
E  AR BLOCKING SIGNAL              07890000LOFBSIZE STH   R4,DCBLRECL         ST
ORE LRECL                          07900000         STH   R3,DCBBLKSI         ST
ORE BLKSIZE                        07910000         BR    R14                 RE
TURN TO OPEN                         07920000         DROP  ,
RELEASE ALL BASES                    07930000         SPACE 3
                                     07940000         LTORG ,
LOCAL LITTERAL POOL                    07950000         TITLE 'XREFIN -- SYSPOPE
N - DCB OPEN EXIT FOR THE SYSPRINT FIL*07960000               E'
                                       07970000*********************************
****************************           0798000  0*        NOTE, AFTER SOME INITI
AL PROCESSING, THIS ROUTINE  *           07990000*        XFERS TO LISTOPEN TO C
OMPLETE ITS PROCESSING.      *           08000000*******************************
******************************           08010000         SPA  CE 1
                                           08020000         USING IHADCB,R1
      DCL SYSPRINT DCB BASE                08030000         USING SYSPOPEN,R15
      DCL LOCAL PROGRAM BASE               08040000SYSPOPEN L     R2,=A(LIST  IN
G)      --> LISTING DCB                      08050000         CLI   DCBRECFM,0
        IS SYSPRINT RECFM DEFINED?           08060000         BNE   SPORFMOK
        YES, PROCEED                         08070000         MVC   DCBRECFM,DCB
RECFM-IHADC  B(R2) NO, COPY FROM LISTING FILE  08080000SPORFMOK ICM   R0,3,DCBLR
ECL       IS SYSPRINT LRECL DEFINED?           08090000         BNZ   SPOLSZOK
          YES, PROCEED                         08100000         MVC   DCBLRECL,D
CBLRECL-IHADCB(R2) NO, COP  Y FROM LISTING FILE  08110000SPOLSZOK ICM   R0,3,DCB
BLKSI       IS SYSPRINT BLKSIZE DEFINED?         08120000         BNZ   SPOBSZOK
            YES, PROCEED                         08130000         MVC   DCBBLKSI
,DCBBLKSI-IHADCB(R2) NO, COPY FROM LISTIN+ G FILE  08140000SPOBSZOK DS    0H
                                                     08150000         SPACE 3
                                                     08160000*******************
******************************************           08170000*        XFER CONTR
OL TO LISTOPEN.                          *           0  8180000*****************
********************************************           08190000         SPACE 1
                                                       08200000         L     R1
5,=A(LISTOPEN)    --> LISTOPEN                         08210000           DROP
R15                 RELEASE LOCAL PROGRAM BASE           08220000         BR
R15                 XFER TO LISTOPEN                     08230000         DROP
,                   RELEASE ALL BASES                    08240000         SPACE
3                                                          08250000         LTOR
G ,                   LOCAL LITTERAL POOL                  08260000         TITL
E 'XREFIN -- XREFOPEN - DCB OPEN EXIT FOR THE XREF FILE'   08270000         USIN
G IHADCB,R1             DCL XREF DCB BASE                    08280000         US
ING XREFOPEN,R15        DCL LOCAL PROGRAM BASE               08290000XREFOPEN LH
    R3,DCBBLKSI         GET BLKSIZE                          08300000         LT
R   R3,R3               DEFINED?                               08310000
BP    XRFBSZOK            YES, PROCEED                         08320000
LH    R3,=Y(6233)         NO, GET DEFAULT MAX VALUE  07/85 DBC 08330000XRFBSZOK
LH    R4,DCBLRECL         GET LRECL                              08340000
  SR    R2,R2               CLEAR                                08350000
  DR    R2,R4               GET BLOCKING FACTOR                  08360000
  MR    R2,R4               GET INTEGRAL BLKSIZE                   08370000
    CR    R3,R4               IS FILE BLOCKED?                     08380000
    BH    XRFBSZO2            YES, PROCEED                         08390000
    LR    R3,R4               NO, RESET LRECL=BLKSIZE              08400000
      NI    DCBRECFM,255-DCBRECBR CLEAR BLOCKING SIGNAL              08410000XRF
BSZO2 STH   R3,DCBBLKSI         STORE BLKSIZE                        08420000
      BR    R14                 RETURN TO OPEN                       08430000
      DROP  ,                     RELEASE ALL BASES                    08440000
        SPACE 3                                                        08450000
        LTORG ,                   LOCAL LITTERAL POOL                  08460000
        TITLE 'XREFOUT -- INI  TIALIZATION/TERMINATION'                  0847000
0*************************************************************           0848000
0*        STANDARD NON-REENTRANT ENTRY LINKAGE WITH TWO      *           0849000
0*        BASES.                                               *           08500
000*************************************************************           08510
000         SPACE 1                                                        08520
000XREFOUT  #ENTER XREFOUT_COPYRIGHT_DAVID_B._COLE_-_1981-1+ 997,  04/97 DBC*085
30000               BASES=(BASE1REG,BASE2REG)                                  0
8540000         SPACE 3                                              08/89 DBC 0
8550000************************************************************* 08/89 DBC 0
8560000* EXAMINE THE PARM FIELD, IF ANY, TO DETERMINE OF A "LPP="  * 08/  89 DBC
 08570000* PARAMETER HAS BEEN GIVEN.                                 * 08/89 DBC
 08580000************************************************************* 08/89 DBC
 08590000         SPACE 1                                              08/89 DBC
 086000  00         ICM   R1,7,1(R1)          --> PARM FIELD; EXIST?
   08610000         BZ    NOPARM              NO, SKIP
   08620000         LH    R15,0(,R1)          YES, GET L'PARM DATA
   08630000         LA      R1,2(,R1)           --> PARM FIELD DATA        08/89
 DBC 08640000         CH    R15,=Y(5)           IS IT LONG ENOUGH TO HOLD  08/89
 DBC 08650000*                                  A "LPP=N" PARAMETER?       08/89
 DBC 08660000         BL    NOLPP                 NO, FORGET IT              08/
89 DBC 08670000         CLC   =C'LPP=',0(R1)      YES, DOES IT?              08/
89 DBC 08680000         BNE   NOLPP               NO, FORGET IT              08/
89 DBC 08690000         SPACE 1                                                0
8/89 DBC 08700000         SLR   R2,R2               YES, CLEAR ACCUMULATOR     0
8/89 DBC 08710000         LA    R1,4(,R1)           --> THE OPERAND            0
8/89 DBC 08720000         SH    R15,=Y(4)           ADJUST L'RESIDU  E
 08/89 DBC 08730000         SPACE 1
 08/89 DBC 08740000         BALR  R14,0               LOAD TOP OF LOOP
 08/89 DBC 08750000         TM    0(R1),C'0'          DIGIT?
 0  8/89 DBC 08760000         BNO   EOLPP               NO, EO-LPP PARAMETER
   08/89 DBC 08770000         IC    R0,0(,R1)           YES, GET IT
   08/89 DBC 08780000         N     R0,=X'0000000F'     ISSOLATE ITS VALUE
   08/89 DBC 0879  0000         MH    R2,=Y(10)           DECIMAL SHIFT THE ACCU
M.   08/89 DBC 08800000         ALR   R2,R0               ACCUMULATE THE NEW DIG
IT   08/89 DBC 08810000         LA    R1,1(,R1)           ADVANCE THE SCANNER
     08/89 DBC 08820000           BCTR  R15,R14             CONTINUE UNTIL I RUN
 OUT   08/89 DBC 08830000*                                  OF DIGITS
       08/89 DBC 08840000         SPACE 1
       08/89 DBC 08850000EOLPP    CH    R2,=Y(6  )            IS THE GIVEN VALUE
 BELOW   08/89 DBC 08860000*                                  THE MINIMUM?
         08/89 DBC 08870000         BNH   DFLTLPP             YES, IGNORE IT, JU
ST USE   08/89 DBC 08880000*                                    THE DEFAULT LPP.
           08/89 DBC 08890000         LNR   R2,R2               NO, COMPLEMENT T
HE VALUE   08/89 DBC 08900000         STH   R2,LPP              AND STORE IT.
           08/89 DBC 08910001         SPACE 1                                +
             08/89 DBC 08920000DFLTLPP  LTR   R15,R15             ANYMORE P  ARM
 FIELD LEFT?   08/89 DBC 08930000         BZ    NOLPP               NO, DONE HER
E              08/89 DBC 08940000         CLI   0(R1),C','          YES, WAS THE
 LPP=N VALUE   08/89 DBC 08950000*                                  DELIMITED BY
 A COMMA?        08/89 DBC 08960000         BNE   NOLPP               NO, DON'T
ADJUST           08/89 DBC 08970000         LA    R1,1(,R1)           YES, ADVAN
CE PAST IT       08/89 DBC 08980003         BCTR  R15,0               ADJUST THE
 RESIDUE         08/89 DB  C 08990000NOLPP    DS    0H
                   08/89 DBC 09000000         SPACE 3
                             09010000*******************************************
******************           09020000* T  HE REST OF THE PARM FIELD, IF ANY, IS
USED TO FORM A     * 08/89 DBC 09030000* TITLE LINE FOR THE LISTING TO BE PRODUC
ED.                * 08/89 DBC 09040000*****************************************
********************           09050000         SPACE 1
                                 09060000         LTR   R15,R15             NULL
?                                09070000         BNP   NOPARM              YES,
 SKIP                            09080000         MVC   TITLFOR,=C'FOR  '     NO
, ADJUST TITLE TEXT                09090000         LR    R14,R1              --
> PARM FIELD DATA        08/89 DBC 09100000         LA    R0,TITLWHOM         --
> TITLE FIELD                      09110000         LA    R1,L'TITLWHOM       GE
T L'C  OPY SINK                      09120000         ICM   R15,8,=C' '
LOAD PAD CHARACTER                   09130000         MVCL  R0,R14
COPY PARM TO TITLE                   09140000NOPARM   DS    0H
                                       09150000         SPACE 3
                                       09160000*********************************
****************************           09170000*        OPEN THE XREF FILE FOR I
NPUT.                      *             09180000*******************************
******************************           09190000         SPACE 1
                                         09200000         OPEN  XREFO
    OPEN THE XREF FILE FOR INPUT         09210000           TM    DCBOFLGS-IHADC
B+XREFO,DCBOFOPN DOES THE FILE EXIST?      09220000         BZ    EXITO16
      NO, TEMINATE                         09230000         SPACE 3
                                           09240000**************  *************
**********************************           09250000*        OPEN THE SYSPRINT
FILE FOR OUTPUT.                 *           09260000***************************
**********************************           09270000         SPACE 1
                                               09280000         OPEN  (SYSPRINO,
OUTPUT)   OPEN THE SYSPRINT FILE               09290000         SPACE 3
                                               09300000*************************
***************+ *********************           09310000*        FILL IN THE SO
RT/MERGE COMM  ANDS SKELETON.          *           09320000*********************
****************************************           09330000         SPACE 1
                                                   09340000         LA    R1,L'X
RRHEAD        GET LENGTH OF   SORT FIELD             09350000         CVD   R1,C
VDWAO           CNVRT TO DECIMAL                     09360000         UNPK  CMDS
ORLN,CVDWAO     CNVRT TO EBCDIC                      09370000         OI    CMDS
ORLN+L'CMDSORLN-1,B'11110000' FIX THE SIGN             09380000         SPACE 1
                                                       09390000         LA    R1
,XRRLEN           GET LENGTH OF SORT RECORD            09400000         CVD   R1
,CVDWAO           CNVRT TO DECIMAL                     094  10000         UNPK
CMDRCDLN,CVDWAO     CNVRT TO EBCDIC                      09420000         OI
CMDRCDLN+L'CMDRCDLN-1,B'11110000' FIX THE SIGN           09430000         SPACE
3                                              01/85 DBC 09440000********  *****
************************************************ 01/85 DBC 09450000*        GET
A COMPLIMENTED TIMESTAMP WHICH WILL BE USED TO * 01/85 DBC 09460000*        RESE
T THE TIMESTAMP FIELDS IN ALL RECORDS WRITTEN  * 01/85 DBC 09470000*        TO T
HE REWRI  TE FILE.                               * 01/85 DBC 09480000***********
************************************************** 01/85 DBC 09490000         SP
ACE 1                                              01/85 DBC 09500000         ST
CK  RSETSTMP              GET THE CLOCK              01/85 DBC 09510000
XC    RSETSTMP,=8X'FF'    COMPLIMENT IT              01/85 DBC 09520000
SPACE 3                                                        09530000*********
**************************************  **************           09540000*
  INVOKE SORT/MERGE. NOTE, THE MAJOR PROCESSING IS   *           09550000*
  DONE IN THE E35 (SORTOUT) EXIT.                    *           09560000*******
*****************************************************  *           09570000
    SPACE 1                                                        09580000
    LA    R1,PLISTPTR         --> THE S/M PLIST                    09590000
    LINK  EP=SORT             INVOKE SORT/MERGE                    0  9600000
      SPACE 3                                                        09610000***
**********************************************************           09620000*
      CLOSE FILES AND FREE BUFFERS.                      *           09630000***
***  *******************************************************           09640000
        SPACE 1                                                        09650000
        CLOSE REWRITE             CLOSE THE XREF/REWRITE FILE          09660000
        FREEPOOL X  REFO            FREE ITS BUFFERS                     0967000
0         SPACE 1                                                        0968000
0         TM    DCBOFLGS-IHADCB+SYSPRINO,DCBOFOPN WAS SYSPRINT USED?     0969000
0         BZ    EXITO            +    NO, DONE HERE                        09700
000         CLOSE SYSPRINO              YES, CLOSE IT                        097
10000         FREEPOOL SYSPRINO         FREE ITS BUFFERS                     097
20000         SPACE 3                                                        097
30000*****************************************  ********************           0
9740000*        RETURN TO CALLER.                                  *           0
9750000*************************************************************           0
9760000         SPACE 1
 09770000EXITO    LH    R15,RCDO            GET THE RETURN CODE
 09780000         #EXIT ((R14,R12)),RC=(R15) RETURN TO CALLER
 09790000         SPACE 1
   09800000EXITO16  MVI   RCDO+1,16           SET ERROR RETURN CODE
   09810000         B     EXITO               RETURN TO CALLER
   09820000         DROP  ,                   RELEASE ALL BASES
   09830000           TITLE 'XREFOUT -- SORTIN - SORT/MERGE E15 (INPUT) EXIT'
     09840000*************************************************************
     09850000*        STANDARD NON-REENTRANT ENTRY LINKAGE.              *
     09860000*************  ************************************************
       09870000         SPACE 1
       09880000SORTIN   #ENTER ESDTYPE=NONE,BASES=(BASE1REG)
       09890000         SPACE 3
         09900000*************************************************************
         09910000*        READ THE NEXT RECORD AND PASS IT TO SORT/MERGE.    *
         09920000***************************************  **********************
           09930000         SPACE 1
           09940000         GET   XREFO               LOCATE THE NEXT RECORD
           09950000         SPACE 1
             09960000         #EXIT ((R14,R0),(R2,R12)),RC=12 PASS IT (VIA R1) T
O SORT/MERGE 09970000         SPACE 3
             09980000***********************************************************
**             09990000*        EOD HAS OCCURED. TERMINATE THE INPUT PHASE.
   *           10000000*********************************************************
****           10010000         SPACE 1
               100200  00EOXREF   #EXIT ((R14,R12)),RC=8    TELL SORT/MERGE "NO
MORE INPUT"      10030000         DROP  ,                   RELEASE ALL BASES
                 10040000         TITLE 'XREFOUT -- SORTOUT - SORT/MERGE E35 (OU
TPUT) EXIT'      10050000         #P  UT  SUBAD=PUTSYSP,MF=INIT MACRO RESET
                   10060000         SPACE 3
                   10070000*****************************************************
********           10080000*        STANDARD NON-RE+ ENTRANT ENTRY LINKAGE.
         *           10090000********************  *****************************
************           10100000         SPACE 1
                       10110000SORTOUT  #ENTER ESDTYPE=NONE,BASES=(BASE1REG)
                       10120000         L     RCDPTR,0(,R1)         --> THE OUTP
UT RECORD                10130000         USING XREFRCD,RCDPTR      DCL A BASE F
OR IT                    10140000         SPACE 3
                         10150000**********************************************
 ***************           10160000*        IF THIS IS THE FIRST OUTPUT RECORD,
THEN CLOSE AND *           10170000*        THEN RE-OPEN THE XREF FILE FOR OUTPU
T.             *           10180000*********************************************
**************  **           10190000         SPACE 1
                             10200000         TM    FLAGO,OUTNOW        1ST OUTP
UT RECORD?                   10210000         BNZ   OUTCONT             NO, SKIP
 INITIALIZATION                10220000         OI    FLAGO,OUTNOW        YES, C
LOSE INIT GATE                 10230000         SPACE 1
                               10240000         CLOSE XREFO               CLOSE
THE XREF INPUT FILE            10250000           SPACE 1
                       01/85 DBC 10260000         OPEN  (REWRITE,OUTPUT)    RE-O
PEN FOR OUTPUT                   10270000OUTCONT  DS    0H
                                 10280000         SPACE 3
                                   10290000*************************************
************************           10300000*        IF THIS IS THE LAST CALL SIG
NAL (RCDPTR=0), THEN   *           10310000*        SET UP A FAKE RECORD P  OINT
ER SO THAT I CAN PROCEED *           10320000*        TO FORCE THE OUTPUT OF PRE
VIOUSLY ACCUMULATED      *           10330000*        DATA.
                         *           10340000***********************************
*********  *****************           10350000         SPACE 1
                                       10360000         LTR   RCDPTR,RCDPTR
  ANY MORE RECORDS?                    10370000         BNZ   OUTPROCD
  YES, PROCEED                           10380000         LA    RCDPTR,DUMYHEAD
    NO, --> DUMMY LAST RECORD            10390000OUTPROCD DS    0H
                                         10400000         SPACE 3
                               07/84 DB  C 10410000*****************************
******************************** 07/84 DBC 10420000*        IF THE CURRENT RECOR
D IS A PURGE CONTROL RECORD,   * 07/84 DBC 10430000*        THEN MOVE THE NAME O
F THE MODULE TO BE MERGED OVER * 07/84 DBC 10440000*          TO THE MODULE NAME
 FIELD SO AS NOT TO MESS UP      * 07/84 DBC 10450000*        SUBSEQUENT PROCESS
ING.                             * 07/84 DBC 10460000***************************
********************************** 07/84 DBC 10470000         SPACE 1+
                                     07/84 DBC 10480000         CLI     XRRLABEL
,C' '       P.C.R. OR TIMESTAMP RCD?   01/85 DBC 10490000         BH    NOTPCR
            NO, XREF RECORD; SKIP      01/85 DBC 10500000         BL    OUTNEXT
            NO, GARBAGE, DELETE IT     01/85 DBC 10510000         CLI   XRRLABEL
+1  ,X'FF'    YES, TIMESTAMP RCD?        01/85 DBC 10520000         BE    NOTPCR
              YES, SKIP                  01/85 DBC 10530000         SPACE 1
                                         01/85 DBC 10540000         MVC   RJBUF(
L'XRRMODUL),XRRLA  BEL+1 NO, GET THE NAME  07/84 DBC 10550000*
                OF THE MODULE TO PURGE     07/84 DBC 10560000         #TEST SIZE
=(L'RJBUF,GE,L'XRRMODUL)                   07/84 DBC 10570000         MVC   XRRL
ABEL+1(L'XRRLABEL-1),XRRLABEL CL  EAR JUNK   07/84 DBC 10580000         MVC   XR
RMODUL,RJBUF      COPY MODULE NAME TO PROPER 07/84 DBC 10590000*
                  PLACE                      07/84 DBC 10600000NOTPCR   DS    0H
                                             07  /84 DBC 10610000         SPACE
3                                                        10620000***************
**********************************************           10630000*        EXAMIN
E THE CURRENT RECORD TO SEE WHAT             *           10640  000*        RELA
TIONSHIP IT BEARS TO THE PREVIOUSLY RECEIVED   *           10650000*        RECO
RD.                                            *           10660000*************
************************************************           10670000         S  P
ACE 1                                                        10680000         IC
M   R3,15,STMPCRNT      --> CURRENT REFERENCES     07/84 DBC 10690000*
                        ACCUM CONTROL BLK; EXIST?  07/84 DBC 10700000         BZ
    DIFMODUL              NO, (1ST CALL FROM S/M);   07/84 DBC 10710000*
                          GO HANDLE LABEL/MODULE     07/84 DBC 10720000*
                          COMBO SWITCH               07/84 DBC 10730000
USING STAMP,R3            Y  ES, DCL CNTL ENTRY BASE   07/84 DBC 10740000
  CLC   =C'  ',STMPLABL     ARE REFERENCES FROM THE    01/85 DBC 10750000*
                            CURRENT ASSEMBLY BEING     07/84 DBC 10760000*
                            PURGED?                      07/84 DBC 10770000
    BNE   NOTPURGE            NO, PROCEED                01/85 DBC 10780000
    CLC   XRRMODUL,STMPMODU   YES, IS THE NEW RECORD     07/84 DBC 10790000*
                              FROM THE CURRENT ASSEMBLY?   07/84 DBC 10800000
      BE    OUTNEXT             YES, IGNORE IT             07/84 DBC 10810000NOT
PURGE DS    0H                  NO, PROCEED (FOR NOW)      07/84 DBC 10820000
      SPACE 1                                              07/84 DBC 108  30000
        CLC   XRRHEAD,OUTHEAD     IS THE CURRENT RECORD FOR THE SAME   10840000*
                                  LABEL IN THE SAME ASSEMBLY OF THE    10850000*
                                  SAME MODULE AS WAS THE     01/85 DBC 10860000*
       +                            PRIOR RECORD?              01/85 DBC 1087000
0           #DIE  E                   XREFIN SHOULD HAVE CREATED 04/97 DKC 10880
000*                                  UNIQUE LABEL-MODULE-TSTAMP 04/97 DKC 10890
000*                                  BLOCKS                     04/97 DKC
            CLC   XR  RLABEL(L'XRRLABEL+L'XRRMODUL),OUTLABEL IS THE          109
00000*                                  CURRENT RECORD FOR THE SAME LABEL IN 109
10000*                                  THE SAME MODULE BUT IN A             109
20000*                                    A DIFFERENT (OLDER) ASSEMBLY?        1
0930000         BE    OUTNEXT             YES, IGNORE                          1
0940000         CLC   XRRLABEL,OUTLABEL   NO, IS THE CURRENT RECORD  07/84 DBC 1
0950000*                                  FOR THE   SAME LABEL IN A    07/84 DBC
 10960000*                                  DIFFERENT ASSEMBLY?        07/84 DBC
 10970000         BE    DIFMODUL            YES, GO HANDLE             07/84 DBC
 10980000         SPACE 3
   10990000*************************************************************
   11000000*        THE CURRENT RECORD IS THE FIRST FOR A NEW LABEL.   *
   11010000*        BEFORE I CAN PROCESS IT, I MUST FIRST DUMP (TO THE *
     11020000*        PRINTER) MY ACCUMULATORS FOR THE PREVIOUS LABEL.   *
     11030000*************************************************************
     11040000         SPACE 1                                              07/84
 DBC 11050000           CLI   STMPLABL,C' '       WAS THE PRECEEDING RECORD  01/
85 DBC 11060000*                                  FOR A TIMESTAMP RECORD OR  01/
85 DBC 11070000*                                  A PURGED ASSEMBLY?         01/
85 DBC 11080000         BE      DIFMODUL            YES, THERE IS NOTHING TO   0
1/85 DBC 11090000*                                  DISPLAY                    0
7/84 DBC 11100000         CLC   OUTTSTMP,ZEROES     IS THE TIMESTAMP VOIDED?   0
4/97 DKC                  BE    DIFMODUL              Y: THERE'S NOTHING TO DISP
 04/97 DKC                  SPACE 1
           11110000         MVC   XRPLABEL,OUTLABEL   COPY PREV LABEL TO THE PRI
NT LINE    11230000         SPACE 1
             11240000         MVI   XRPERRF,C' '        CLEAR THE OVERFLOW ERROR
 SIGNAL      11250000         TM    FLAGO,STMPOVFL      DID A MODULE NAMES OVERF
LOW OCCUR    11260000*                                  FOR THIS LABEL?
               11270000         BZ    REFNOFLW            NO, PROCEED
               11280000         MVI   XRPERRF,C'*'        YES, SET THE VISUAL SI
GNAL           11290000         NI    FLAGO,255-STMPOVFL  CLEAR THE CONTROL SIGN
AL               11300000REFNOFLW DS    0H
                 11310000         SPACE 1
                 11320000         LM    R3,R5,STMPCTL       LOAD STAMPS SCAN CON
TROL             11330000            _          DROP  R3                  RELEAS
E OLD STAMP PTR BASE 07/84 DBC 11340000         USING STAMP,R3            DCL NE
W STAMP BASE                   11350000         SLR   R5,R4               --> LA
ST ENTRY             01/85 DBC 11360000           SLR   R3,R4               -->
0TH ENTRY (1-ORIGIN)   01/85 DBC 11370000NEXTALIN MVI   XRPENTS,C' '        CLEA
R REFERENCES DISPLAY -           11380000         MVC   XRPENTS+1(L'XRPENTS-1),X
RPENTS FIELDS                    11390000         LA      R2,XRPENTS          --
> SO-FIELDS                        11400000         LA    R0,XRPENTCT         GE
T # OF DISPLAY FIELDS              11410000NEXTAREF BXH   R3,R4,LASTALIN      --
> NEXT ACCUMULATOR                 11420000         CLC   STMPLABL,OUT  LABEL
A COUNTER FOR THE PREVIOUS LABEL?    11430000         BNE   NEXTAREF
NO, SKIP                             11440000         CP    STMPHITS,=P'0'
YES, ZERO HITS HERE?       01/85 DBC 11450000         BE    NEXTAREF
YES,   SKIP THIS ASSEMBLY    01/85 DBC 11460000         SPACE 1
                             01/85 DBC 11500000         MVC   RJBUF,STMPMODU
  MOVE MODULE NAME TO A BUFFER         11510000*
  THAT IS LEFT PADDE  D WITH BLANKS      11520000         LA    R15,RJBUF+L'RJBU
F-L'STMPMODU LOAD BLANKS BACK-SCANNER    11530000         CLC   RJBUF,RJBUF-1
    IS THE NAME BLANK?         07/84 DBC 11540000         BE    BLANKNAM
    YES, CAN'T JUSTIFY         07/8  4 DBC 11550000         SPACE 1
                                 07/84 DBC 11560000         BALR  R14,0
      NO, LOAD LOOP POINT        07/84 DBC 11570000         BCTR  R15,0
      BACK SCAN                  07/84 DBC 1158000  0         TM    L'STMPMODU(R
15),255-C' ' STILL A TRAILING BLANK?         11590000         BZR   R14
        YES, CONTINUE BACK-SCAN    07/84 DBC 11600000BLANKNAM MVC   XRPENTMO(L'S
TMPMODU,R2),1(R15) NO, GET ASM NME 07/84 DBC 11610000*
          RIGHT JUSTIFIED TO THE MSG BUFFER    11620000         MVI   XRPENTHY(R
2),C'-'   SET HYPHEN                           11630000         MVC   XRPENT#R(,
R2),=X'2020202120' INSERT EDIT MASK            11640000         LA    R1,XRPENT#
  R+L'XRPENT#R-1(,R2) PRIME ICO INSIGNIFICANCE   11650000         EDMK  XRPENT#R
-1(L'XRPENT#R+1,R2),STMPHITS CONVERT THE         11660000*
            NUMBER OF REFERENCES (TO             11670000*
            THI  S LABEL FROM THIS MODULE) TO      11680000*
              EBCDIC.                              11690000         MVC   XRPENT
#R(,R2),0(R1) LEFT ADJUST                          11700000         LA    R2,XRP
ENTLN(,R2)    --> NEXT DISPLAY   FIELD               11710000         BCT   R0,N
EXTAREF         LOOP FOR NEXT ACCUMULATOR            11720000         #PUT  XRPM
SG              THE MSG BUFFER IS FULL; DISPLAY IT   11730000         MVI   XRPL
ABEL,C' '       CLEAR LABEL FIELD            +         11740000         MVC   XR
PLABEL+1(L'XRPLABEL-1),XRPLABEL                          11750000         MVI
XRPERRF,C' '        CLEAR POSSIBLE OVERFLOW ERROR SIGNAL 11760000         B
NEXTALIN            LOOP TO REFRESH THE PRT LINE BUFFER  11770000         DROP
R3                  RELEASE THE STAMP BASE               1  1780000         SPAC
E 1                                                        11790000LASTALIN AP
  LBLCNT,=P'1'        COUNT THE REFERENCED LABEL 01/85 DBC 11830000         CLI
  XRPENTS+XRPENTHY,C' ' IS THERE A PARTIALLY FILLED        11850000*
                        PRINT LINE LEFT OVER?                11860000         BE
    DIFMODUL            NO, DONE HERE              07/84 DBC 11870000         #P
UT  XRPMSG              YES, DISPLAY THE RESIDUE             11880000         SP
ACE 3                                                          11890000*********
****************************************************           11900000*
THE CURRENT RECORD (PROBABLY) REFERENCES A         *           11910000*
DIFFERENT MODULE THAN T  HE PREVIOUS. A NEW STAMP    *           11920000*
  MUST BE FOUND.                                     *           11930000*******
******************************************************           11940000
  SPACE 1                                                          11950000DIFMO
DUL CLI   XRRMODUL,X'FF'      IS THE CURRENT "RECORD"    07/84 DBC 11960000*
                              THE DUMMY LAST RECORD?     07/84 DBC 11970000
    BE    OUTDONE             YES: GO TEMINATE                       11980000
      MVC   OUTHEAD,XRRHEAD     NO: RESET THE RECORDS RELATIONSHIP   11990000*
                                CONTROL INFORMATION                  12000000
      SPACE 1                                                          12010000
        LM    R15,R1,STMPCTL      LOAD STAMPS SEARCH CONTROLS          12020000
        BAL   R14,SRCH            SEARCH FOR A STAMP ENTRY FOR THE NEW 12030000*
                                  MODULE                               12040000
          LR    R3,R1               (COPY POSSIBLE STAMP POINTER)        1205000
0         USING STAMP,R3            (DCL POSSIBLE STAMP BASE)            1206000
0         BE    ASMFOUND            A STAMP ENTRY WAS FOUND; GO PROCESS  1207000
0         DROP  R3                    NO ENTRY FOUND; DROP BASE  07/84 DBC 12080
000         SPACE 3                                                        12090
000*************************************************************           12100
000*        THIS IS AN ENTIRELY N  EW MODULE NAME. A NEW STAMP   *           121
10000*        ENTRY MUST BE CREATED.                             *           121
20000*************************************************************           121
30000         SPACE 1                                                          1
2140000         C     R15,=A(STAMPS)      IS THERE ROOM FOR A NEW    01/85 DBC 1
2150000*                                  STAMP ENTRY?               07/84 DBC 1
2160000         BH    ASMNFITS            YES, PROCEED         +
 12170000         OI    FLAGO,STMPMOVF+STMPOVFL NO, SET ERROR   SIGNALS
   12180000         MVI   RCDO+1,4            SET ERROR COMPLETION CODE
   12190000         XC    OUTTSTMP,OUTTSTMP   CAUSE THE REMAINING RECORDS FOR TH
IS 12200000*                                  LABEL/MODULE COMBINATION TO BE
     12210000*                                  IGNORED.
     12220000         B     REWRTRCD            IGNORE THIS RECORD         01/85
 DBC 12230000         SPACE 1
     122400  00ASMNFITS CLC   =C'  ',XRRLABEL     WILL THIS NEW ENTRY BE FOR 01/
85 DBC 12250000*                                  A PURGED ASSEMBLY?         07/
84 DBC 12260000         BE    PRGNOCNT            YES, DON'T COUNT IT        01/
85 DBC 12270000         AP      ASMCNT,=P'1'        INCRIMENT MODULES COUNTER
         12280000PRGNOCNT DS    0H                                             0
1/85 DBC 12290000         SPACE 1
         12300000         LR    R14,R15               --> CURRENT SO-STAMPS LIST
 01/85 DBC 12310000         SR    R14,R0              --> NEW SO-STAMPS LIST (CO
PY SINK)   12320000         ST    R14,STMPCTL         STORE NEW SO-LIST
           12330000         LR    R0,R15              --  > CURRENT SO-STAMPS (C
OPY SOURCE)  12340000         LR    R1,R3               --> INSERTION POINT
             12350000         SR    R1,R15              GET L'STAMPS TO SHIFT (L
'COPY SRCE)  12360000         LR    R15,R1              GET L'COPY SINK
               12370000         MVCL  R14,R0              SHIFT SOME STAMPS TO M
AKE ROOM FOR   12380000*                                  THE NEW STAMP
               12390000         LR    R3,R14              COPY NEW STAMP LOCATIO
N PTR            12400000         USING STAMP,R3            DCL A BASE FOR IT
       07/84 DBC 12410000         MVC   STMPHEAD,XRRHEAD    IMPORT THE MODULE &
TSTAMP           12420000         SPACE 3
                 1243  0000*****************************************************
********           12440000*        AN EXISTING STAMP ENTRY HAS BEEN FOUND FOR T
HE NEW *           12450000*        MODULE. RESET ITS LABEL & REFERENCES COUNTER
.      *           12460000*********  ******************************************
**********           12470000         SPACE 1
                     12480000ASMFOUND ST    R3,STMPCRNT         STORE NEW CURREN
T STAMP PTR          12490000         CLC   =C'  ',  STMPLABL     SHOULD THIS RE
CORD BE      01/85 DBC 12500000*                                  PURGED?
             07/84 DBC 12510000         BE    OUTNEXT             YES, DO SO
             01/85 DBC 12520000         MVC   STMPLABL,XRRLABEL     RESET THE ST
AMP'S LABEL FIELD                         SPACE 3
                         12480000***********************************************
**************           12440000*        COMPARE THE CURRENT RECORD'S TIME STAM
P+  TO THE     *           12450000*        TIME STAMP GIVEN IN THE STAMP TABLE
 . IF THEY'RE    *           12460000*        EQUAL, THEN EVERYTHING IS OKAY. IF
 THE CURRENT     *           12460000*        RECORD'S STAMP IS HIGH, THEN THE R
ECORD CONTAINS   *           12460000*        OBSOLETE DATA DUE TO SUBSEQUENT RE
ASSEMBLY.          *           12460000*****************************************
********************           12470000         SPACE 1
                               12480000         CLC   XRRTSTMP,STMPTIME   COMPAR
E TIME STAMPS                                     BE    CNTREFS             EQUA
L; GO COUNT THE NEW REFERENCES                    #DIE  L                   LOW
(LOGIC ERROR)          01/85 DBC                  XC    OUTTSTMP,OUTTSTMP   HIGH
(OLDER); IGNORE ALL REMAINING            *                                    RE
CORDS FOR THIS LABEL/MODULE COMBO                   B     OUTNEXT             IG
NORE THIS RECORD TOO.    01/85 DBC                  SPACE 3
                                   12810000****************  *******************
************************** 04/97 DKC 12760000*        AN ACCEPTABLE XREF DATA LI
NE HAS BEEN RECEIVED. I  * 04/97 DKC 12770000*        WILL NOW COUNT THE NUMBER
OF REFERENCES THAT IT    * 04/97 DKC 12780000*        CONTAINS.
                           * 04/97 DKC 12790000*********************************
**************************** 04/97 DKC 12800000         SPACE 1
                             04/97 DKC 12810000CNTREFS  ZAP   STMPHITS,XRRCOUNT
  COUNT T  HE REFERENCES       04/97 DKC 12530000         SPACE 3
                                         13240000*******************************
******************************           13250000*        IF A REWRITE FILE IS O
PEN, THEN COPY THIS RECO  RD   *           13260000*        TO IT.
                               *           13270000*****************************
********************************           13280000         SPACE 1
                                             13290000         CLI   XRRLABEL+1,X
'FF'    TIMESTAMP RECORD?          04/97 DKC                  BE    REWRTRCD
        YES; WRITE IT OUT.         04/97 DKC                  CP    STMPHITS,=P'
0'      DOES THIS RECORD REALLY    04/97 DKC         *
          CONTAIN ANY REFERENCES?    04/97 DKC                  BNH   RWRISKIP
          NO, DON'T SAVE IT          01/85 DBC 13320000         DROP  R3
          RELEASE STAMP BASE                   13220000         DS      0H
                                                 13230000REWRTRCD TM    DCBOFLGS
-IHADCB+REWRITE,DCBOFOPN REWRITING TO BE DONE?   13340000         BZ    RWRISKIP
            NO, SKIP                             13350000         MVC   XRRTSTMP
,RSE  TSTMP   YES, RESET THE TIMESTAMP   01/85 DBC 13360000         PUT   REWRIT
E,(RCDPTR)    DO SO                                13370000RWRISKIP DS    0H
                                                   13380000         SPACE 3
                   +                                 13390000*******************
*****************  *************************           13400000*        RETURN T
O SORT/MERGE.                              *           13410000*****************
********************************************           13420000         SPACE 1
                                                         13430000OUTNEXT  #EXIT
((R14,R12)),RC=4    RETURN FOR NEXT RECORD               13440000         EJECT
,                                              01/85 DBC 13450000***************
**********************************************             13460000*        END
OF SORT DETECTED. ISSUE FINAL MESSAGES AND     *           13470000*        THEN
 MAKE A FINAL RETURN TO SORT/MERGE.            *           13480000*************
************************************************           134  90000         SP
ACE 3                                              01/85 DBC 13500000***********
************************************************** 01/85 DBC 13510000*        WI
DOW CONTROL. INSURE THAT THERE IS SUFFICIENT     * 01/85 DBC 13520000*
ROOM LEFT AT THE BOTTOM OF THE CURRENT PAGE TO     * 01/85 DBC 13530000*
MOST IF NOT ALL OF THE END-OF-PROGRAM MESSAGES.    * 01/85 DBC 13540000*********
**************************************************** 01/85 DBC 13550000
SPACE 1                                                01/85 DBC 13560000OUTDONE
  LH    R0,=H'7'            GET MIN # PRT LINES NEEDED 4 FINAL   13570000*
                            MESSAGES                             13580000
  CH    R0,LINES2GO           IS THERE ENOUGH ROOM ON THE CURRENT  13590000*
                              PAGE FOR FINAL MESSAGES?             13600000
    BNL   NOEJECT2            YES, PROCEED                         13610000
    XC    LINES2GO,LINES2GO   NO, FORCE IM  MEDIATE EJECT            13620000
      MVI   SUBTITLE,C' '       CLEAR THE SUB-TITLE                  13630000
      MVC   SUBTITLE+1(L'SUBTITLE-1),SUBTITLE                        13640000NOE
JECT2 DS    0H                                                         13650000
        SPACE 3                                              01/85 DBC 13660000*
************************************************************ 01/85 DBC 13670000*
        ISSUE "END OF PROGRAM" MESSAGE                     * 01/85 DBC 1  368000
0************************************************************* 01/85 DBC 1369000
0         SPACE 1                                                        1370000
0         #PUT  EOPMSG              ISSUE EO-PGM MESSAGE                 1371000
0           SPACE 3                                              01/85 DBC 13720
000************************************************************* 01/85 DBC 13730
000*        DISPLAY THE NUMBER OF ASSEMBLY MODULES CROSS       * 01/85 DBC 13740
000*        REFERENCED  .                                        * 01/85 DBC 137
50000************************************************************* 01/85 DBC 137
60000         SPACE 1                                              01/85 DBC 137
70000         TM    FLAGO,STMPMOVF   +    WAS THERE NAMES OVERFLOW?  01/85 DBC 1
3780000         BNZ   YESMOFLW              YES, GO SEND ERROR MSG     01/85 DBC
 13790000         SPACE 1                                              01/85 DBC
 13800000         MVC   MSGBUF(8),=XL8'F020202020202120' NO, GET CCC   01/85 DBC
 13810000*                                  AND ED  IT MASK              01/85 D
BC 13820000         LA    R1,MSGBUF+7         PRIME ICO INSIGNIFICANCE
   13830000         EDMK  MSGBUF(8),ASMCNT    CNVRT ASSEMBLIES CNT TO EBCDIC
   13840000         MVC   MSGBUF+1(6),0(R1)   LEFT ADJUST
     13850000         LA    R15,MSGBUF+8        --> EO-# FIELD
     13860000         SR    R15,R1              GET # DIGITS IN THE NUMBER
     13870000         LA    R4,MSGBUF+1(R15)    --> PAST THE DIGITS        01/85
   DBC 13880000         MVC   0(35,R4),=C' ASSEMBLED MODULES CROSS-REFERENCED' C
 01/85 13890000         #TEST SIZE=(8+35,LE,L'MSGBUF)
       13900000         LA    R0,MSGBUF-35        --> SO-MSG
       13910000           LR    R1,R4               --> "EO"-MSG               0
1/85 DBC 13920000         SR    R1,R0               GET L'MSG
         13930000         STC   R1,MSGBUF-1         STORE FOR OUTPUT
         13940000         #PUT    MSGBUF              DISPLAY THE MESSAGE
           13950000         B     #ASMSZ              SKIP ERROR MSG
 01/85 DBC 13960000         SPACE 1
 01/85 DBC 13970000YESMOFLW MVC   MSGBUF(19),  =C'0ERROR - MORE THAN '
   01/85 DBC 13980000         LH    R0,=Y((STAMPSZ-STAMPS)/L'STAMPS) GET STAMPS
CAPACITY     13990000         CVD   R0,CVDWAO           CNVRT TO DECIMAL
             14000000         MVC   MSGBUF+19(7),=XL7'202020  20202020' EDIT MAS
K    01/85 DBC 14010000         EDMK  MSGBUF+18(8),CVDWAO+4 CNVRT TO EBCDIC
               14020000         MVC   MSGBUF+19(6),0(R1)  LEFT ADJUST
               14030000         LA    R15,MSGBUF+19+7     GET NUMBER -
                 14040000         SR    R15,R1               OF DIGITS
                 14050000         LA    R1,MSGBUF+19(R15)   ADVANCE THE SINK SCA
NNER             14060000         MVC   0(93,R1),=C' ASSEMBLIES WERE CROSS-REFER
ENCED; SYM  BOLS F*14070000               OLLOWED BY AN ASTEISK (*) HAVE MISSING
 REFERENCES'       14080000         #TEST SIZE=(19+7+93,LE,L'MSGBUF)
                   14090000         LA    R0,MSGBUF-93        --> SO-MSG
                   141000  00         SR    R1,R0               GET L'MSG
                     14110000         STC   R1,MSGBUF-1         STORE
                     14120000         #PUT  MSGBUF              DISPLAY THE ERRO
R MSG                14130000         LA      R4,MSGBUF           --> ASM NAMES
FILL AREA    01/85 DBC 14140000         SPACE 1
             01/85 DBC 14150000#ASMSZ   DS    0H
             01/85 DBC 14160000         SPACE 3        +
               01/85 DBC 14170000********************  *************************
**************** 01/85 DBC 14180000*        DISPLAY THE NAMES OF THE CROSS REFER
ENCED ASSEMBLY * 01/85 DBC 14190000*        MODULES.
               * 01/85 DBC 14200000*********************************  **********
****************** 01/85 DBC 14210000         SPACE 1
                   01/85 DBC 14220000         LA    R3,MSGBUF+L'MSGBUF  --> PAST
 EO-BUFFER         01/85 DBC 14230000         SR    R3,R4               GET ROOM
 IN   BUFFER FOR     01/85 DBC 14240000*                                  ASSEMB
LY NAMES             01/85 DBC 14250000         SR    R2,R2               CLEAR
FOR DIVIDE           01/85 DBC 14260000         D     R2,=A(L'STMPMODU+1) GET #
ASM NAMES THAT CAN     01/85 DBC 14270000*                                  BE H
ELD IN THE BUFFER      01/85 DBC 14280000         LTR   R3,R3               ANY?
                       01/85 DBC 14290000         BNP   ASMNMESZ            NO,
FORGET IT              01/85 DBC   14300000         SPACE 1
                         01/85 DBC 14310000         LM    R5,R7,STMPCTL       LO
AD ASM-NAMES SCANNER     01/85 DBC 14320000         USING STAMP,R5            DC
L STAMP ENTRY BASE       01/85 DBC 14330000           SLR   R7,R6
--> LAST ENTRY             01/85 DBC 14340000         SLR   R5,R6
--> 0TH ENTRY (1-ORIGIN)   01/85 DBC 14350000NXTALINE MVI   MSGBUF,C' '
CLEAR THE -                01/85 DBC 14360000         MVC   MSG  BUF+1(L'MSGBUF-
1),MSGBUF BUFFER             01/85 DBC 14370000         LR    R1,R4
  --> SO-NAMES AREA IN MSGBU 01/85 DBC 14380000         LR    R0,R3
  GET # NAMES/LINE           01/85 DBC 14390000         SPACE 1
                               01/85 DBC 14400000NXTANAME BXH   R5,R6,LASTANAM
    --> NEXT ASM NAME          01/85 DBC 14410000         CLC   =C'  ',STMPLABL
    A PURGED MODULE?           01/85 DBC 14420000         BE    NXTANAME
    YES, SKIP                    01/85 DBC 14430000         MVC   1(L'STMPMODU,R
1),STMPMODU NO, COPY NAME TO     01/85 DBC 14440000*
      MESSAGE                    01/85 DBC 14450000         LA    R1,1+L'STMPMOD
U(,R1) ADVANCE TEXT SCANNER        01/85 DBC 14460000         BCT   R0,NXTANAME
        LOOP                       01/85 DBC 14470000         DROP  R5
        RELEASE STAMP BASE         01/85 DBC 14480000         SPACE 1
                                   01/85 DB  C 14490000LASTANAM CLI   1(R4),C' '
          ANY ASM NAMES?             01/85 DBC 14500000         BE    ASMNMESZ
          NO, DONE                   01/85 DBC 14510000         LA    R0,MSGBUF
          YES, --> SO-BUFFER         01/85 DBC 14520000           SR    R1,R0
            GET L'MSG                  01/85 DBC 14530000         STC   R1,MSGBU
F-1         STORE                      01/85 DBC 14540000         #PUT  MSGBUF
            DISPLAY THE NAMES          01/85 DBC 14550000         SLR   R+ 5,R6
              BACK OFF THE SCANNER       01/85 DBC 14560000         BXL  E  R5,R
6,NXTALINE      LOOP IF MORE NAMES         01/85 DBC 14570000ASMNMESZ DS    0H
                                           01/85 DBC 14580000         SPACE 3
                                           01/85 DBC 14590000*******************
******  ************************************ 01/85 DBC 14600000*        DISPLAY
THE NUMBER OF LABELS LISTED IN THE CROSS   * 01/85 DBC 14610000*        REFERENC
E.                                         * 01/85 DBC 14620000*****************
*********************  *********************** 01/85 DBC 14630000         SPACE
1                                                        14640000         MVC
MSGBUF(8),=XL8'4020202020202120' GET CCC AND   01/85 DBC 14650000*
                    EDIT MASK                    01/85 DBC 14660000         LA
  R1,MSGBUF+7         PRIME ICO INSIGNIFICANCE             14670000         EDMK
  MSGBUF(8),LBLCNT    CNVRT LABELS CNT TO EBCDIC           14680000         MVC
  MSGBUF+1(6),0(R1)   LEFT ADJUST                            14690000         MV
I   MSGBUF,C'0'         SET CCC                    01/85 DBC 14700000         LA
    R15,MSGBUF+8        --> EO-# FIELD                       14710000         SR
    R15,R1              GET # DIGITS IN THE NUMBER           14720  000
LA    R1,MSGBUF+1(R15)    --> PAST THE DIGITS                  14730000
MVC   0(14,R1),=C' LABELS LISTED'                              14740000
#TEST SIZE=(8+14,LE,L'MSGBUF)                                  14750000
L  A    R0,MSGBUF-14        --> SO-MSG                           14760000
  SR    R1,R0               GET L'MSG                            14770000
  STC   R1,MSGBUF-1         STORE FOR OUTPUT                     14780000
  #PUT  MSGBUF                DISPLAY THE MESSAGE                  14790000
    SPACE 3                                              01/85 DBC 14800000*****
******************************************************** 01/85 DBC 14810000*
    MAKE THE FINAL RETURN TO SO  RT.                     * 01/85 DBC 14820000***
********************************************************** 01/85 DBC 14830000
      SPACE 1                                                        14840000
      #EXIT ((R14,R12)),RC=8    FINAL RETURN T  O SORT/MERGE           14850000
        TITLE 'XREFOUT -- SORTOUT -- SEARCH - STAMPS LIST SEARCHING RO*14860000
              UTINE'                                                   14870000S
RCH     #SEARCH CMPRID=STMPCMPR,DUPRET=FIRST                   04/97 DBC 1488000
2         SPACE 3                                                        1489000
0STMPCMPR CLC   XRRMODUL,STMPMODU-STAMP(R15) RIGHT LIST ENTRY YET?       1490000
0         BR    R14                 (RETURN TO SEARCH ROUTINE)           149  10
000         TITLE 'XREFOUT -- SORTOUT -- PUTSYSP - MESSAGE PRINTING ROUTIN*14920
000               E (USEABLE ONLY BY SORTOUT)'                             14930
000*************************************************************           14940
000*       +                                                     *           149
50000*          PUTSYSP -- THIS ROUTINE SENDS A MESSAGE TO         *           1
4960000*        SYSPRINT. WARNING, THIS ROUTINE CAN BE USED ONLY   *           1
4970000*        BY THE SORTOUT ROUTINE DUE TO BASE REGISTER        *           1
4980000*        CONSIDER  ATIONS.                                    *
 14990000*                                                           *
 15000000*        INPUTS:                                            *
 15010000*              - R1 POINTS TO   A MESSAGE BLOCK.              *
   15020000*              - R13 IS SORTOUT'S BASE REGISTER.            *
   15030000*              - R14 POINTS TO A RETURN ADDRESS.            *
   15040000*                                                             *
     15050000*        RETURN 0(,R14):                                    *
     15060000*              - THE MESSAGE IS PRINTED. IF A NEW PRINTER   *
     15070000*                PAGE IS STARTED, THEN TITLE LINES ARE A  LSO *
       15080000*                PRINTED.                                   *
       15090000*              - ALL REGISTERS ARE RESTORED.                *
       15100000*                                                           *
         15110000*************************************************************
         15120000         SPACE 1
         15130000PUTSYSP  TM    DCBOFLGS-IHADCB+SYSPRINO,DCBOFOPN IS SYSPRINT AV
AILABLE? 15140000           BZR   R14                 NO, RETURN IMMEDIATELY
           15150000         STM   R14,R1,SAVESYSP     YES, SAVE REGISTERS
           15160000         MVC   NEXTCCC,1(R1)       SET NEXT CCC
           15170000         LA      R15,CCC+L'CCC       LOAD SCANNER OF VALID CC
C'S          15180000         LA    R0,L'CCC            GET # OF VALID CCC'S
             15190000         SPACE 1
             15200000CCCLP    BCTR  R15,0                 ADVANCE THE SCANNER
               15210000         CLC   NEXTCCC,0(R15)      IS THIS CCC VALID?
               15220000         BE    GOTCCC              YES, GO ADJUST PAGE RE
SIDUE          15230000         BCT   R0,CCCLP            DON'T   KNOW YET; KEEP
 CHECKING        15240000         MVI   NEXTCCC,C' '        NO, RESET TO DEFAULT
 CCC             15250000         LA    R0,2                LOAD LINES ADVANCE+1
                 15260000         SPACE 1
                   15270000GOTCCC   BCTR  R0,0                GET LINES ADVANCEM
ENT                15280000         AH    R0,LINES2GO         DECRIMENT PAGE RES
IDUE; PAGE FULL?   15290000         BNP   NOEJECT             NO, SKIP TITLES ST
UFF                  15300000         SPACE 3
                     15310000***************************************************
**********           15320000*        THE CURRENT PRINTER PAGE IS FULL. PRINT TI
TLES ON  *           15330000              *        THE NEXT PAGE. INCLUDE A PAG
E COUNTER.             *           15340000*************************************
************************           15350000         SPACE 1
                                   15360000           AP    PAGECTR,=P'1'
INCRIMENT PAGE COUNT                 15370000         MVC   PAGENO,=X'40
20' GET EDIT MASK                    15380000         EDMK  PAGENO,PAGECTR
CNVRT PAGE # TO EBCDIC               15390000         MVC     PAGENO+1(L'PAGENO-
1),0(R1) LEFT ADJUST THE PAGE NUMBER   15400000         SPACE 1
                                       15410000         PUT   SYSPRINO
  LOCATE NEXT OUTPUT BUFFER            15420000         LR    R14,R1
    --> COPY SINK                        15430000         LH    R15,DCBLRECL-IHA
DCB+SYSPRINO GET L'COPY SINK             15440000         LA    R0,TITLEBUF
    --> COPY SOURCE                      15450000         LA    R1,TITBFLEN
    GET L  'COPY SOURCE                    15460000         ICM   R1,15,=C' '
      GET PADDING CHARACTER                15470000         MVCL  R14,R0
      COPY TITLE TO OUTPUT BUFFER          15480000         SPACE 1
                                             15490000         PUT   SYSPRINO
        LOCATE OUTPUT BIFFER FOR SUB-TITLE   15500000         LR    R14,R1
        --> COPY SINK                        15510000         LH    R15,DCBLRECL
-IHADCB+SYSPRINO GET L'COPY SINK               15520000         LA    R0,SUBTITL
E         --> COPY SOURCE                      15530000         LA    R1,L'SUBTI
TLE       GET L'COPY SOURCE                    15540000         MVCL  R14,R0
          COPY SUB-TITLE TO OUTPUT BUFFER      1555000  0         SPACE 1
                                                 15560000         MVI   NEXTCCC,
C'0'        ADJUST NEXT CCC                      15570000         LH    R0,LPP
            GET MAX LINES/PAGE         08/89 DBC 15580000         AH      R0,=H'
6'            ADJUST FOR TITLES + 1ST DATA LINE    15590000NOEJECT  STH   R0,LIN
ES2GO         STORE NEW PAGE RESIDUE               15600000         SPACE 3
                                                   15610000*********************
****  ************************************           15620000*        WRITE THE
MESSAGE.                                 *           15630000*******************
******************************************           15640000         SPACE 1
                                                       15650000         PUT   SY
SPRINO            LOCATE NEXT OUTPUT BUFFER            15660000         MVC   0(
1,R1),NEXTCCC     COPY CCC                             15670000         LA    R0
,1(,R1)           --> COPY SINK                          15680000         LH
R1,DCBLRECL-IHADCB+SYSPRINO GET LRECL                    15690000         BCTR
R1,0                GET L'COPY SINK                      15700000         L
R14,SAVESYSP+12     RESTORE MSG POINTER          +         15710000         SR
  R15,R15             CLEAR                                  15720000         IC
    R15,0(,R14)         GET L'MSG                            15730000         BC
TR  R15,0               DECR FOR CCC ALREADY INSERTED        15740000         IC
M   R15,8,=C' '         GET PAD CHARACTER                    1  5750000
LA    R14,2(,R14)         --> COPY SOURCE                      15760000
MVCL  R0,R14              COPY MSG TO OUTPUT BUFFER            15770000
SPACE 3                                                        15780000******  *
******************************************************           15790000*
  RETURN TO CALLER.                                  *           15800000*******
******************************************************           15810000
  SPACE 1                                                          15820000
    LM    R14,R1,SAVESYSP     RESTORE REGISTERS                    15830000
    BR    R14                 RETURN TO CALLER                     15840000
    DROP  ,                     RELEASE ALL BASES                    15850000
      TITLE 'XREFOUT -- DATA (NON-REENTRANT)'                        15860000***
**********************************************************           15870000*
      DATA CONTROL BLOCKS.                                 *           15880000*
************************************************************           15890000
        SPACE 1                                                        15900000
        PUSH  PRINT                                                      1591000
0         PRINT NOGEN                                                    1592000
0         SPACE 1                                                        1593000
0XREFO    DCB   DDNAME=XREF,DSORG=PS,MACRF=GL,EODAD=EOXREF,    07/85 DBC  *15940
000               RECFM=FB,LRECL=XRRLEN                                    15950
000         SPACE 1                                              07/85 DBC 15960
000REWRITE  DCB   DDNAME=REWRITE,DSORG=PS,MACRF=PM,              07/85 DBC*15970
000                 EXLST=REWRXLST,RECFM=FB,LRECL=XRRLEN           07/85 DBC 159
80000         SPACE 1                                                        159
90000SYSPRINO DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PL,RECFM=FBA,            *160
00000               LR  ECL=PRTLEN,EXLST=SYSOXLST                              1
6010000         SPACE 1                                                        1
6020000         POP   PRINT                                                    1
6030000         SPACE 1
 16040000         DS    0F                  EXIT LISTS
 16050000SYSOXLST DC    X'85',AL3(SYSOOPEN)
 16060000REWRXLST DC    X'85',AL3(REWROPEN)                              07/85 D
BC 16070000         SPACE 3
   16080000*************************************************************
   16090000*        PLIST FOR SORT/MERGE.                          +     *
     16100000****************************************************  *********
       16110000         SPACE 1
       16120000PLISTPTR DC    A(PLIST)
       16130000         SPACE 1
         16140000         DS    0F
         16150000         DC    H'0'
         16160000PLIST    DC    Y(PLISTLEN)
         161700  00PLISTBEG DC    A(CMDSORT,CMDSORTZ) 'SORT' COMMAND
           16180000         DC    A(CMDRCD,CMDRCDZ)   'RECORD' COMMAND
           16190000         DC    A(SORTIN,SORTOUT)   E15/E35 EXITS
           16200000         DC      X'00',C'MAX'        MEMORY REQUIREMENTS
             16210000         DC    X'01',AL3(100*1024) RESERVED MEMORY
             16220000         DC    X'03',AL3(SYSOUT)   SUBSTITUTE 'SYSOUT' DDNA
ME           16230000         DC    X'FF',C'(  I)'        MESSAGE DISPLAY CONTRO
L              16240000         DC    C'SORT'             DDNAME PREFIX
               16250000PLISTLEN EQU   *-PLISTBEG
               16260000         SPACE 1
                 16270000CMDSORT  DC    C' SORT FIELDS=(1,'
                 16280000CMDSORLN DC    C'##',C',CH,A),EQUALS'
                 16290000CMDSORTZ DC    C' '
                   16300000         SPACE 1
                   16310000CMDRCD   DC    C' RECORD TYPE=F,LENGTH='
                   16320000CMDRCDLN DC    C'###'
                     16330000CMDRCDZ  DC    C' '
                     16340000         SPACE 1
                     16350000SYSOUT   DC    CL8'SYSTERM'        SUBSTITUTE SYSOU
T DDNAME             1636  0000         SPACE 3
                       16370000*************************************************
************           16380000*        MISCELLANEOUS DATA.
           *           16390000*********  **************************************
**************           16400000         SPACE 1
                         16410000CVDWAO   DS    D                   CVD WORK ARE
A                        16420000         SPACE 1
                 01/85 DBC 16430000RSETSTMP DS    D                   RESET TIME
STAMP BUFFER     01/85 DBC 16440000         SPACE 1
                           16450000OUTHEAD  DC    XL(L'XRRHEAD)'00'
                   07/84 DBC 16460000OUTLABEL EQU   XRRLABEL-XRRHEAD+OUTHEAD,L'X
RRLABEL                      16470000OUTMODUL EQU   XRRMODUL-XRRHEAD+OUTHEAD,L'X
RRMODUL                      16480000OUTTSTMP EQU   XRRTSTMP-XRRHEAD+OUTHEAD,L'X
RRTST+ MP                      16490000ZEROES   DC    (L'OUTTSTMP)X'00'   DETECT
S V  OIDED OUTTSTMP    04/97 DKC                  SPACE 1
                                 16500000DUMYHEAD DC    (L'XRRHEAD)X'FF'    EO-F
ILE DUMMY SUBSTITUTE RECORD      16510000         SPACE 1
                                   16520000SAVESYSP DS    4A                  SA
VE AREA FOR PUTSYSP                16530000         SPACE 1
                                   16540000RCDO     DC    H'0'                PR
OGRAM COMPLETION CODE                16550000LPP      DC    H'-60'
LINES/PRINTER PAGE (NEG)   08/89 DBC 16560000LINES2GO DC    H'0'
PRINTER PAGE RESIDUE                 16570000         SPACE 1
                                     16580000LBL  CNT   DC    PL4'0'
  LISTED LABELS COUNTER                16590000ASMCNT   DC    PL4'0'
  CROSS-REFERENCED ASSEMBLIES COUNTER  16600000PAGECTR  DC    PL3'0'
  PAGE COUNTER                         16610000CCC      DC    C  '+ 0-'
    RECOGNIZED CCC'S                     16620000NEXTCCC  DC    C' '
    NEXT CCC                             16630000         SPACE 1
                                         16640000FLAGO    DC    B'00000000'
      LOCAL PROGRAM CONTROL FLAGS          16650000OUTNOW   EQU   B'10000000'
      THE SORTOUT ROUTINE HAS INITIALIZED  16660000STMPMOVF EQU   B'00100000'
      THE STAMPS LIST (THE NUMBER OF       16690000*
      ASSEMBL  Y MODULES BEING CROSS         16700000*
        REFERENCED) HAS OVERFLOWED           16710000STMPOVFL EQU   B'00010000'
        A STAMPS LIST OVERFLOW HAS OCCURED   16720000*
        FOR THE LABEL CURREN  TLY BEING        16730000*
          PROCESSED                            16740000         SPACE 1
                                               16750000         LTORG ,
          LOCAL LITTERAL POOL                    16760000         SPACE 3
                                                 16770000***********************
**************************************           16780000*        MESSAGES.
                                     *           16790000*  ********************
****************************************           16800000         SPACE 3
                                                   16810000         DC    AL1(XR
PLEN)                                              16820000XRPMSG   DC      C' '
                                                     16830000XRPLABEL DC    CL(L
'XRRLABEL)' ',C' '                                   16840000XRPERRF  DC    C' '
                                                     16850000XRPENTS  DC    CL(P
RTLEN-(*  -XRPMSG))' '                                 16860000XRPLEN   EQU   *-
XRPMSG            L'XREF DISPLAY RECORD                16870000         SPACE 1
                                                       16880000XRPENT   EQU   0
                  XRP M+ SG ENTRY                        16890000XRPENTMO EQU
XRPENT+1,L'STMPMODU M  ODULE NAME FIELD (RIGHT JUSTIFIED)  16900000XRPENTHY EQU
  XRPENTMO+L'XRPENTMO,1 HYPHEN                             16910000XRPENT#R EQU
  XRPENTHY+L'XRPENTHY,5 NO. REFS (LEFT JUSTIFIED)          16920000XRPENTLN EQU
  XRPENT#R+L'XRPENT#R L'XRPENT                               16930000XRPENTCT EQ
U   L'XRPENTS/XRPENTLN  NUMBER OF SUCH FIELDS                16940000         #T
EST SIZE=(XRPENTCT,GT,0) INSURE THERE IS AT LEAST ONE        16950000         DC
    CL(L'XRPENT#R)' '   BLANKS FOR LEFT JUSTIFICATI  ON        16960000
SPACE 3                                                        16970000
DC    CL(L'STMPMODU-1)' ' BUFFER FOR RIGHT -                   16980000RJBUF
DS    CL(L'STMPMODU)       JUSTIFYING MODULE NAMES             169  90000
  DC    C' '                  MORE PADDING             07/84 DBC 17000000
  SPACE 3                                                        17010000
  DS    AL1                                                      17020000MSGBUF
    DS    CL(PRTLEN)                                               17030000
    SPACE 3                                                        17040000TITLE
BUF DC    C'1MASTER CROSS-REFERENCE '                              17050000TITLF
OR  DC    C'   '  ,C' '                                              17060000TIT
LWHOM DC    CL(TITLEBUF+PRTLEN-11-*)' '                              17070000
      DC    C' PAGE'                                                 17080000PAG
ENO   DC    C' #####'                                                  17090000T
ITBFLEN EQU   *-TITLEBUF                                               17100000
        #TEST SIZE=(TITBFLEN,EQ,XRPLEN)                                17110000
        DC    CL(L'PAGENO-1)' '                                          1712000
0         ORG   ,                                                        1713000
0         SPACE 3                                                        1714000
0SUBTITLE DC    CL(PRTLEN)'0SYMBOL'                                        17150
000         ORG   SUBTITLE+(XRPENTS-XRPMSG)+XRPENTHY-8                     17160
000         DC    2CL(XRPENTLN)'ASSEMBLY-REFS'                   01/85 DBC 17170
000         DC    C'. . .'                                       01/85 DBC 1  71
80000         ORG   ,                                                        171
90000         SPACE 3                                                        172
00000         DC    AL1(EOPMSGLN)                                            172
10000EOPMSG     DC    C'-END OF CROSS-REFERENCE'                               1
7220000EOPMSGLN EQU   *-EOPMSG                                                 1
7230000         SPACE 3                                                        1
7240000         DC    AL1(  L'BLNKLIN1)
 17250000BLNKLIN1 DC    C' '
 17260000         SPACE 3
 17270000********************************+ *****************************
   17280000*        REFERENCES SCANNING   TRT TABLES.                    *
     17290000*************************************************************
     17300000         SPACE 1
     17310000         DS    0D
       17320000         SPACE 1
       17330000TRTBLANK DC    256AL1(4)
       17340000         ORG   TRTBLANK+C' '
         17350000         DC    AL1(0)
         17360000         ORG   TRTBLANK+C'0'
         17370000         DC    (C'9'+1-C'0')AL1(8)
           17380000         ORG   ,
           17390000         SPACE 1
           17400000TRTDIGTS DC    256AL1(4)
           17410000           ORG   TRTDIGTS+C' '
             17420000         DC    AL1(8)
             17430000         ORG   TRTDIGTS+C'0'
             17440000         DC      (C'9'+1-C'0')AL1(0)
               17450000         ORG   ,
               17460000         SPACE 3
               17470000**************************  *****************************
******           17480000*        ENCOUNTERED ASSEMBLY NAMES SAVE TABLE.
     *           17490000*******************************************************
******           17500000         SPACE 1
                   17510000STMPCRNT DC    A(0)                CURRENT STAMP PTR
                   17520000STMPCTL  DC    A(STAMPSZ,STMPLEN,STAMPSZ) STAMPS SCAN
 CONTROLS          17530000         SPACE 1
                     17540000STAMPS   DS    1000XL(STMPLEN)     SAVE TABLE
                     17550000STAMPSZ  EQU   *                   --> LAST ENTRY
                     17560000         TITLE 'XREFOUT -- SYSOOPEN - DCB OPEN EXIT
 FOR THE SYSPR  INT FI*17570000               LE'
                       17580000         USING IHADCB,R1           DCL SYSPRINT D
CB BASE                17590000         USING SYSOOPEN,R15        DCL LOCAL PROG
RAM BASE               176000  00SYSOOPEN LH    R3,DCBBLKSI         GET BLKSIZE
                         17610000         LTR   R3,R3               ANY GIVEN?
                         17620000         BP    SOPBSZOK            YES, PROCEED
                         17630000         LH      R3,=Y(6233)         NO, GET MA
X DEFAULT VALUE  07/85 DBC 17640000SOPBSZOK LH    R4,DCBLRECL         GET LRECL
                           17650000         SR    R2,R2               CLEAR
                           17660000         DR    R2,R4    +            GET BLOC
KING FACTOR                  17670000         MR    R2,R4                 GET IN
TEGRAL BLKSIZE                 17680000         CR    R3,R4               IS FIL
E BLOCKED?                     17690000         BP    SOPBSZO2            YES, P
ROCEED                         17700000         LR    R3,R4                 NO,
SET BLKSIZE=LRECL                17710000         NI    DCBRECFM,255-DCBRECBR CL
EAR BLOCKING SIGNAL              17720000SOPBSZO2 STH   R3,DCBBLKSI         STOR
E BLKSIZE                        17730000         BR    R14                 RETU
RN TO O  PEN                       17740000         DROP  ,                   RE
LEASE ALL BASES                    17750000         SPACE 1
                                   17760000         LTORG ,                   LO
CAL LITTERAL POOL                    17770000         TITLE 'XREFOUT -- REWROPEN
 - DCB OPEN EXIT FOR THE REWRITE FIL*17780000               E'
                           07/85 DBC 17790000         USING IHADCB,R1
DCL XREF DCB BASE          07/85 DBC   17800000         USING REWROPEN,R15
  DCL LOCAL PROGRAM BASE     07/85 DBC 17810000REWROPEN LH    R3,DCBBLKSI
  GET BLKSIZE                07/85 DBC 17820000         LTR   R3,R3
  DEFINED?                   07/85 DBC 17830000           BP    RWRBSZOK
    YES, PROCEED               07/85 DBC 17840000         LH    R3,=Y(6233)
    NO, GET DEFAULT MAX VALUE  07/85 DBC 17850000RWRBSZOK LH    R4,DCBLRECL
    GET LRECL                  07/85 DBC 17860000         SR    R2,  R2
      CLEAR                      07/85 DBC 17870000         DR    R2,R4
      GET BLOCKING FACTOR        07/85 DBC 17880000         MR    R2,R4
      GET INTEGRAL BLKSIZE       07/85 DBC 17890000         CR    R3,R4
        IS FILE BLOCKED?           07/85 DBC 17900000         BH    RWRBSZO2
        YES, PROCEED               07/85 DBC 17910000         LR    R3,R4
        NO, RESET LRECL=BLKSIZE    07/85 DBC 17920000         NI    DCBRECFM,255
-DCBRECBR CLEAR B  LOCKING SIGNAL    07/85 DBC 17930000RWRBSZO2 STH   R3,DCBBLKS
I         STORE BLKSIZE              07/85 DBC 17940000         BR    R14
          RETURN TO OPEN             07/85 DBC 17950000         DROP  ,
          RELEASE ALL BASES            07/85 DBC 17960000         SPACE 3
                                       07/85 DBC 17970000         LTORG ,
            LOCAL LITTERAL POOL        07/85 DBC 17980000         SPACE 3
                                                   17990000*********************
****************************************           18000000*        END OF ASSEM
BLY.                                   *           18010000*********************
****************************************           18020000           SPACE 1
                                                     18030000         END   ,
                                                     18040000
                                                              {             \INM
R06
