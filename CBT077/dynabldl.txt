./ ADD NAME=$$DOC    0100-89041-89041-0921-00009-00009-00000-DYNABLD
$$DOC.........THIS FILE
ASMJCL........JCL TO ASSEMBLE AND LINK DYNABLDL
DBREPORT......JCL TO GENERATE DYNABLDL REPORT
DBSTART.......JCL TO START DYNABLDL
DBSTOP........JCL TO STOP DYNABLDL
DYNABLDL......SOURCE FOR DYNABLDL
EXPORT........JCL TO UNLOAD DYNABLDL SYSTEM
PROC..........PROC FOR DYNABLDL
SAMPLE........SAMPLE OUTPUT FOR A DYNABLDL REPORT
./ ADD NAME=#ALD     0100-89041-89041-0921-00051-00051-00000-DYNABLD
         MACRO
&N       #ALD  &R,&A
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED F4OM $ALD TO #ALD
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 3, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO SIMULATES A HYPOTHETICAL "ADD LOGICAL DOUBLE" MACHINE
.* INSTRUCTION. ITS FUNCTION IS SIMILAR TO THE "AL" MACHINE INSTRUCTION
.* EXCEPT THAT IT OPERATES ON 64-BIT NUMBERS. WARNING, THE RESULTING
.* CONDITION CODE IS NOT AN ANALOGOUS EXTENSION FROM THE "AL"
.* INSTRUCTION.
.*
.* INNER MACROS USED - #TEST
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLA  &A1
         LCLC  &RODD
&RODD    SETC  '&R+1'
         #TEST REGS=&R
         AIF   (&#TESERR NE 0).REGUNKN
&A1      SETA  &#TESRET(1)+1
         AIF   (&A1 LE 15).GOTA1
&A1      SETA  0
.GOTA1   #TEST PFIX=
&RODD    SETC  '&#TESRET(1)&A1'
.REGUNKN ANOP
&N       AL    &RODD,4+&A LOW-ORDER SUM; HI-ORDER AFFECTED?
         BC    12,ALD&SYSNDX NO, SKIP
         AL    &R,=F'1' YES, ADJUST HI-ORDER
ALD&SYSNDX AL  &R,&A GET HI-ORDER SUM
         MEND
./ ADD NAME=#ALDR    0100-89041-89041-0921-00060-00060-00000-DYNABLD
         MACRO
&N       #ALDR &R1,&R2
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $ALDR TO #ALDR
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - FEBRUARY 3, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO SIMULATES A HYPOTHETICAL "ADD LOGICAL DOUBLE REGISTER"
.* MACHINE INSTRUCTION. ITS FUNCTION IS SIMILAR TO THE "ALR" MACHINE
.* INSTRUCTION EXCEPT THAT IT OPERATES ON 64-BIT NUMBERS. WARNING,
.* THE RESULTING CONDITION CODE IS NOT AN ANALOGOUS EXTENSION FROM THE
.* "ALR" INSTRUCTION.
.*
.* INNER MACROS USED - #TEST
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLA  &A1
         LCLC  &R1ODD,&R2ODD
&R1ODD   SETC  '&R1+1'
         #TEST REGS=&R1
         AIF   (&#TESERR NE 0).R1UNKN
&A1      SETA  &#TESRET(1)+1
         AIF   (&A1 LE 15).GOTA1A
&A1      SETA  0
.GOTA1A  #TEST PFIX=
&R1ODD   SETC  '&#TESRET(1)&A1'
.R1UNKN  ANOP
&R2ODD   SETC  '&R2+1'
         #TEST REGS=&R2
         AIF   (&#TESERR NE 0).R2UNKN
&A1      SETA  &#TESRET(1)+1
         AIF   (&A1 LE 15).GOTA1B
&A1      SETA  0
.GOTA1B  #TEST PFIX=
&R2ODD   SETC  '&#TESRET(1)&A1'
.R2UNKN  ANOP
&N       ALR   &R1ODD,&R2ODD LOW-ORDER SUM; HI-ORDER AFFECTED?
         BC    3,ALDR&SYSNDX NO, SKIP
         BCTR  &R1,0 YES, ADJUST HI-ORDER
ALDR&SYSNDX ALR &R1,&R2 GET HI-ORDER SUM
         MEND
./ ADD NAME=#DCBD    0100-89041-89041-0921-02262-02262-00000-DYNABLD
         MACRO
&N       #DCBD &DSORG=,&DEVD=                                       DBC
.*                                                                  DBC
.*                                                                  DBC
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $DCBD TO #DCBD
.*                                                                  DBC
.* LAST CHANGE DATE - FEBRUARY 2, 1977                              DBC
.*                  - MAILING ADDRESS CHANGE.                       DBC
.*                                                                  DBC
.* LAST CHANGE DATE - APRIL 20, 1976
.*                                                                  DBC
.* THIS MACRO IS A MODIFICATION OF IBM'S DCBD MACRO FROM R21.7 OF   DBC
.* OS. ANY QUESTIONS CONCERNING IT MAY BE ADDRESSED TO:             DBC
.*       809 WHITNEY AVE.                                           DBC
.*       NEW HAVEN, CT. 06511                                       DBC
.*                                                                  DBC
.*                                                                  DBC
.*                                                                  DBC
.*   THIS MACRO DUPLICATES THE FUNCTION OF IBM'S DCBD MACRO BUT     DBC
.* WITH TWO IMPORTANT DIFFERENCES:                                  DBC
.* - THE DSECT STATEMENT IS NOT GENERATED.                          DBC
.* - A FACILITY IS PROVIDED WHEREBY THE FIRST THREE CHARACTERS      DBC
.*   (I.E. "DCB") OF EACH FIELD NAME (BUT NOT BIT NAME) CAN BE      DBC
.*   REPLACED BY ANY ONE, TWO, OR THREE CHARACTERS OF YOUR CHOICE.  DBC
.* AS A RESULT, THE #DCBD MACRO CAN BE USED ANY NUMBER OF TIMES IN  DBC
.* AN ASSEMBLY. REFER TO THE EXAMPLES GIVEN BELOW FOR A             DBC
.* PARTICULARLY USEFUL TECHNIQUE.                                   DBC
.*                                                                  DBC
.*   THIS MACRO USES THE SAME OPERANDS AS DOES THE DCBD MACRO, SO   DBC
.* PLEASE REFER TO IBM'S DATA MANAGEMENT MACROS MANUAL FOR FURTHER  DBC
.* DETAILS CONCERNING THEM.                                         DBC
.*   IN ADDITION TO THE OPERANDS, THE #DCBD MACRO RECOGNIZES THE    DBC
.* NAME FIELD WHICH SHOULD EITHER BE OMITTED OR CONTAIN A ONE, TWO, DBC
.* OR THREE CHARACTER NAME. IF THE NAME FIELD IS OMITTED, THEN THE  DBC
.* CHARACTERS "DCB" ARE USED TO PREFIX ALL FIELD NAMES. IF THE NAME DBC
.* FIELD IS GIVEN, THEN IT RATHER THAN "DCB" IS USED TO PREFIX ALL  DBC
.* FIELD NAMES. IF THE GIVEN NAME IS LONGER THAN THREE CHARACTERS,  DBC
.* THEN ASSEMBLY ERRORS ARE LIKELY TO RESULT.                       DBC
.*                                                                  DBC
.*   AS INDICATED ABOVE, THE GIVEN NAME FIELD AFFECTS ONLY FIELD    DBC
.* NAMES (E.G. "DCBOFLGS" MIGHT BE CHANGED TO "RDROFLGS"), BUT BIT  DBC
.* NAMES (E.G. "DCBOFOPN") ARE NEVER AFFECTED, SINCE THE PREFIX     DBC
.* "DCB" WILL BE USED REGUARDLESS OF WHAT IS GIVEN IN THE NAME      DBC
.* FIELD, SO IN ORDER TO TEST, FOR EXAMPLE, IF A DCB HAS BEEN       DBC
.* OPENED, YOU MIGHT USE  " TM RDROFLGS,DCBOFOPN ".                 DBC
.*   IN ADDITION, A PARTICULAR BIT NAME WILL BE GENERATED ONLY BY   DBC
.* THE FIRST #DCBD MACRO THAT REQUIRES IT, THUS A PARTICULAR BIT    DBC
.* NAME WILL BE GENERATED ONLY ONCE PER ASSEMBLY.                   DBC
.*                                                                  DBC
.*   EXAMPLES - I HAVE FOUND THAT THE MOST VALUABLE USE OF THE      DBC
.* #DCBD MACRO HAS BEEN IN SIMPLIFYING THE PROCEDURE FOR REFERING   DBC
.* TO DCB FIELDS WITHOUT USING A SPECIAL BASE REGISTER. CONSIDER    DBC
.* THE FOLLOWING EXAMPLES:                                          DBC
.*                                                                  DBC
.*       PRINT NOGEN (IF YOU'VE SEEN ONE DCB, YOU'VE SEEN THEM ALL) DBC
.*                                                                  DBC
.*RDR    #DCBD DSORG=QS                                             DBC
.*       ORG   RDRDCB                                               DBC
.*SYSIN  DCB   DDNAME=SYSIN,DSORG=PS, ...                           DBC
.*                                                                  DBC
.*SYSPRINT DCB DDNAME=SYSPRINT,DSORG=PS, ...                        DBC
.*       ORG   SYSPRINT                                             DBC
.*PRT    #DCBD DSORG=QS                                             DBC
.*                                                                  DBC
.*       ORG   *-16                                                 DBC
.*UT1    #DCBD DSORG=IS                                             DBC
.*       ORG   UT1DCB+16                                            DBC
.*SYSUT1 DCB   DDNAME=SYSUT1,DSORG=IS, ...                          DBC
.*                                                                  DBC
.*SYSUT2 DCB   DDNAME=SYSUT2,DSORG=IS, ...                          DBC
.*       ORG   SYSUT2                                               DBC
.*UT2    #DCBD DSORG=IS                                             DBC
.*                                                                  DBC
.*       PRINT GEN                                                  DBC
.*                                                                  DBC
.*   IN THE FIRST AND THIRD EXAMPLES (RDR AND UT1), THE #DCBD MACRO DBC
.* GENERATES FIELD NAMES (E.G. "RDROFLGS" AND "UT1OFLGS"); THE ORG  DBC
.* STATEMENT RESETS THE LOCATION COUNTER TO THE START OF THE FIELD  DBC
.* NAMES; AND THE DCB MACRO GENERATES THE ACTUAL DCB'S ON TOP OF    DBC
.* THE FIELD NAMES.                                                 DBC
.*   IN THE SECOND AND FOURTH EXAMPLES (PRT AND UT2) THE DCB MACRO  DBC
.* GENERATES THE DCB CODE; THE ORG STATEMENT RELOCATES BACK TO THE  DBC
.* START OF THE DCB; AND THEN THE #DCBD MACRO GENERATES THE FIELD   DBC
.* NAMES ON TOP OF THE DCB CODE. NOTE THAT THE DCB CODE IS NOT      DBC
.* DESTROYED BECAUSE THE #DCBD MACRO GENERATES ONLY DS              DBC
.* INSTRUCTIONS.                                                    DBC
.*   BIT NAMES ARE GENERATED ONLY BY THE FIRST AND THIRD #DCBD      DBC
.* MACROS. THE SECOND MACRO HAS THE IDENTICAL EXPANSION PATH AS THE DBC
.* FIRST, SO ALL BIT NAMES THAT IT MIGHT HAVE GENERATED WOULD HAVE  DBC
.* BEEN REDUNDANT, SO NONE IS GENERATED. THE SAME CAN BE SAID FOR   DBC
.* THE FOURTH #DCBD MACRO WITH RESPECT TO THE THIRD. THE THIRD      DBC
.* #DCBD MACRO HAS A DIFFERENT EXPANSION PATH FROM EITHER OF THE    DBC
.* PRECEEDING TWO, SO SOME OF THE BIT NAMES THAT IT WOULD HAVE      DBC
.* GENERATED ARE NOT REDUNDANT. THOSE BIT NAMES THAT ARE REDUNDANT  DBC
.* ARE NOT GENERATED. THOSE BIT NAMES THAT ARE NOT REDUNDANT ARE    DBC
.* GENERATED.                                                       DBC
.*   BOTH THE THIRD AND FOURTH DCB'S ARE ISAM, SO ONLY A SHORT      DBC
.* DEVICE DEPENDANT SECTION IS GENERATED BY THE DCB MACRO. TO       DBC
.* ACCOMPLISH THIS, THE DCB MACRO RELOCATES BACK 16 BYTES,          DBC
.* GENERATES THE DCB NAME, RELOCATES FORWARD 16 BYTES, AND THEN     DBC
.* GENERATES THE DCB CODE. ON THE OTHER HAND, THE PRIMARY FUNCTION  DBC
.* OF THE DCBD MACRO AND, THEREFORE, THE #DCBD MACRO IS TO CREATE   DBC
.* DSECTS. BECAUSE OF THIS IT WOULD BE LOGICALLY INCONSISTANT FOR   DBC
.* THEM TO ATTEMPT TO RELOCATE BACKWARD PRIOR TO DEFINING THE       DBC
.* STARTING POINT. THEREFORE, IN THE CASE OF ISAM (AND BDAM, AND    DBC
.* EXCP, ETC.), THE DCBD AND #DCBD MACROS FIRST DEFINE THE STARTING DBC
.* NAME AND THEN RELOCATE FORWARD (USUALLY 16 BYTES) BEFORE         DBC
.* DEFINING FIELD NAMES. IT IS FOR THIS REASON THAT THE EXTRA ORG   DBC
.* STATEMENT APPEARS IN THE THIRD EXAMPLE ABOVE. IN THE FOURTH      DBC
.* EXAMPLE THE EXTRA ORG STATEMENT IS NOT NEEDED.                   DBC
.*                                                                  DBC
.*                                                                  DBC
.*                                                                  DBC
.* INNER MACROS USED - #DSORG                                       DBC
.*                                                                  DBC
         GBLB  &#DCBDSG                                             DBC
         GBLB  &#DCBSW(150)                                         DBC
         GBLB  &ONESW
         GBLA  &IEZBITS
         LCLA  &A0            FOR DSORG= AND DEVD= ANALYSIS LOOPS
         LCLB  &DSORGIS       SET BY DSORG=IS - ISAM
         LCLB  &DSORGBX       SET BY DSORG=BX OR CX - BTAM
         LCLB  &DSORGDA       SET BY DSORG=DA - BDAM
         LCLB  &DSORGQX       SET BY DSORG=QX OR CX - QTAM
         LCLB  &DSORGCQ       SET BY DSORG=CQ - QTAM DIRECT ACCESS
.*                            MESSAGE QUEUE
         LCLB  &DSORGMQ       SET BY DSORG=MQ - QTAM PROBLEM PROGRAM
.*                            MESSAGE QUEUE INTERFACE
         LCLB  &DSORGXA       SET BY DSORG=XA - EXCP WITH APPENDAGES
         LCLB  &DSORGQS       SET BY DSORG=QS OR PS - QSAM
         LCLB  &DSORGBS       SET BY DSORG=BS OR PS OR PO - BSAM,BPAM
         LCLB  &DSORGXE       SET BY DSORG=XE - EXCP WITH EXTENSION
         LCLB  &DSORGLR       SET BY DSORG=LR - DCBLRECL FIELD ONLY
         LCLB  &DSORGGS       SET BY DSORG=GS - GAM
         LCLB  &DSORGTX       SET BY DSORG=TX - TCAM LINE GROUP
         LCLB  &DSORGTQ       SET BY DSORG=TQ - TCAM MESSAGE QUEUE
         LCLB  &DSORGTR       SET BY DSORG=TR 3705 LINE GROUP    S22024
         LCLB  &DEVDDA        DIRECT ACCESS
         LCLB  &DEVDTA        MAGNETIC TAPE
         LCLB  &DEVDPT        PAPER TAPE
         LCLB  &DEVDRD        READER OR PUNCH, DEVD=RD OR PC
         LCLB  &DEVDPR        PRINTER
         LCLB  &DEVDBS        BINARY SYNCHRONOUS
         LCLB  &DEVDWT        WORLD TRADE TELEGRAPH
         LCLB  &DEVDMR        MAGNETIC CARD READER
         LCLB  &DEVDOR        OPTICAL READER
         LCLC  &C0            SET TO EACH VALUE OF DSORG AND DEVD
         LCLB  &LSW(150)                                            DBC
         LCLC  &P                                                   DBC
&A0      SETA  0                                                    DBC
.LPXYZ   AIF   (&A0 EQ 150).ENDXYZ                                  DBC
&A0      SETA  &A0+1                                                DBC
&#DCBSW(&A0) SETB (&#DCBSW(&A0) OR &ONESW)                          DBC
         AGO   .LPXYZ                                               DBC
.ENDXYZ  ANOP                                                       DBC
&#DCBDSG SETB  (&#DCBDSG OR &ONESW)                                 DBC
&P       SETC  'DCB'                                                DBC
         AIF   ('&N' EQ '').GOTPFIX                                 DBC
&P       SETC  '&N'                                                 DBC
.GOTPFIX ANOP                                                       DBC
         AIF   (&IEZBITS GT 0).SETBTS
&IEZBITS SETA  1
BIT0     EQU   128
BIT1     EQU   64
BIT2     EQU   32
BIT3     EQU   16
BIT4     EQU   8
BIT5     EQU   4
BIT6     EQU   2
BIT7     EQU   1
.SETBTS  ANOP
.*
.*                  ANALYZE DSORG OPERAND
.*
&A0      SETA  N'&DSORG       SET NUMBER OF DSORG FLEMENTS
.A1      AIF   (&A0 LE 0).D0  IF ZERO, LOOP FINISHED
&C0      SETC  '&DSORG(&A0)'  SET TO A DSORG ELEMENT
.*
.*                  TEST FOR VALID DSORG ELEMENT
.*
         AIF   ('&C0' EQ 'IS' OR '&C0' EQ 'PS' OR '&C0' EQ 'BS' OR     *
               '&C0' EQ 'QS' OR '&C0' EQ 'DA' OR '&C0' EQ 'CX' OR      *
               '&C0' EQ 'CQ' OR '&C0' EQ 'MQ' OR '&C0' EQ 'LR').A2
         AIF   ('&C0' EQ 'XE' OR '&C0' EQ 'XA' OR '&C0' EQ 'PO' OR     *
               '&C0' EQ 'BX' OR '&C0' EQ 'QX' OR '&C0' EQ 'GS' OR      *
               '&C0' EQ 'TX' OR '&C0' EQ 'TQ' OR '&C0' EQ '').A2
         AIF   ('&C0' EQ 'TR').A2                                S22024
         IHBERMAC 156,DSORG,&C0
         AGO   .AA
.*
.*                  SET VARIABLES FOR DSORG
.*
.A2      ANOP
&DSORGIS SETB  (&DSORGIS OR '&C0' EQ 'IS')
&DSORGBX SETB  (&DSORGBX OR '&C0' EQ 'BX' OR '&C0' EQ 'CX')
&DSORGDA SETB  (&DSORGDA OR '&C0' EQ 'DA')
&DSORGQX SETB  (&DSORGQX OR '&C0' EQ 'QX' OR '&C0' EQ 'CX')
&DSORGCQ SETB  (&DSORGCQ OR '&C0' EQ 'CQ')
&DSORGMQ SETB  (&DSORGMQ OR '&C0' EQ 'MQ')
&DSORGXA SETB  (&DSORGXA OR '&C0' EQ 'XA')
&DSORGQS SETB  (&DSORGQS OR '&C0' EQ 'QS' OR '&C0' EQ 'PS')
&DSORGBS SETB  (&DSORGBS OR '&C0' EQ 'BS' OR '&C0' EQ 'PS' OR '&C0' EQ *
               'PO')
&DSORGXE SETB  (&DSORGXE OR '&C0' EQ 'XE')
&DSORGLR SETB  (&DSORGLR OR '&C0' EQ 'LR')
&DSORGGS SETB  (&DSORGGS OR '&C0' EQ 'GS')
&DSORGTX SETB  (&DSORGTX OR '&C0' EQ 'TX')
&DSORGTQ SETB  (&DSORGTQ OR '&C0' EQ 'TQ')
&DSORGTR SETB  (&DSORGTR OR '&C0' EQ 'TR')                       S22024
.AA      ANOP
&A0      SETA  &A0-1          DECREMENT ELEMENT COUNTER
         AGO   .A1            TO DO NEW LOOP
.*
.*                  TEST FOR ANY VALID DSORG OPERAND
.*
.D0      AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQX OR        *
               &DSORGCQ OR &DSORGMQ OR &DSORGXA OR &DSORGQS OR         *
               &DSORGBS OR &DSORGXE OR &DSORGLR OR &DSORGGS).D0A
         AIF   (&DSORGTX OR &DSORGTQ OR &DSORGTR).D0A            S22024
         IHBERMAC 173
.D0A     ANOP
         AIF   (T'&DEVD NE 'O').D1      BRANCH IF DEVD CODED       1318
         AIF   (&DSORGGS).B1
         AIF   (NOT (&DSORGQS OR &DSORGBS OR &DSORGXE)).B1
.*
.*                  SET DEVD DEFAULTS
.*
&DEVDDA  SETB  1
&DEVDTA  SETB  ('&DSORG' NE '(PO)')
&DEVDPT  SETB  ('&DSORG' NE '(PO)')
&DEVDPR  SETB  ('&DSORG' NE '(PO)')
&DEVDRD  SETB  ('&DSORG' NE '(PO)')
&DEVDMR  SETB  ('&DSORG' NE '(PO)')
&DEVDOR  SETB  ('&DSORG' NE '(PO)')
         AIF   ('&DSORG' EQ '(PO)').D1
         IHBERMAC 174
         AGO   .B1
.D1      ANOP
.*
.*                  ANALYZE DEVD OPERAND
.*
&A0      SETA  N'&DEVD        SET ELEMENT COUNT
.D2      ANOP
         AIF   (&A0 LE 0).B1  IF ZERO, LOOP FINISHED
&C0      SETC  '&DEVD(&A0)'   SET TO A DEVD ELEMENT
.*
.*                  TEST FOR VALID DEVD ELEMENT
.*
         AIF   ('&C0' EQ 'DA' OR '&C0' EQ 'TA' OR '&C0' EQ 'PT' OR     *
               '&C0' EQ 'PR' OR '&C0' EQ 'RD' OR '&C0' EQ 'PC' OR      *
               '&C0' EQ 'BS' OR '&C0' EQ 'WT').D3
         AIF   ('&C0' EQ 'MR' OR '&C0' EQ 'OR').D3
         AIF   ('&C0' EQ '').D4
         IHBERMAC 157,DEVD,&C0
         AGO   .D4            TO DO NEW LOOP
.*
.*                  SET VARIABLES FOR DEVD
.*
.D3      ANOP
&DSORGXE SETB  (&DSORGXE OR T'&DSORG EQ 'O') FORCE EXCP EXTENDED
&DEVDDA  SETB  (&DEVDDA OR '&C0' EQ 'DA')    DIRECT ACCESS DEVICE
&DEVDTA  SETB  (&DEVDTA OR '&C0' EQ 'TA')    MAGNETIC TAPE DEVICE
&DEVDPT  SETB  (&DEVDPT OR '&C0' EQ 'PT')    PAPER TAPE DEVICE
&DEVDPR  SETB  (&DEVDPR OR '&C0' EQ 'PR')    PRINTER
&DEVDRD  SETB  (&DEVDRD OR '&C0' EQ 'RD' OR '&C0' EQ 'PC') READER,PUNCH
&DEVDBS  SETB  (&DEVDBS OR '&C0' EQ 'BS')    BINARY SYNCHRONOUS COMM.
&DEVDWT  SETB  (&DEVDWT OR '&C0' EQ 'WT')    WORLD TRADE TELEGRAPH
&DEVDMR  SETB  (&DEVDMR OR '&C0' EQ 'MR')    MAGNETIC CHAR READER
&DEVDOR  SETB  (&DEVDOR OR '&C0' EQ 'OR')    OPTICAL READER
.D4      ANOP
&A0      SETA  &A0-1          DECREMENT ELEMENT COUNTER
         AGO   .D2            TO DO NEW LOOP
.*
.B1      ANOP
         AIF   ('&DSORG(1)' EQ 'LR').BA SKIP OVER COMMENTS
         SPACE 2
*                       DCB SYMBOLIC DEFINITION FOR
         AIF   (NOT &DSORGIS).B2
*                       INDEXED SEQUENTIAL
.B2      AIF   (NOT (&DSORGQS AND &DSORGBS)).B2A
*                       PHYSICAL SEQUENTIAL
         AGO   .B3
.B2A     AIF   (NOT &DSORGQS).B2B
*                       QSAM
.B2B     AIF   (NOT &DSORGBS).B3
*                       BSAM-BPAM
.B3      AIF   (NOT &DSORGDA).B4
*                       DIRECT ACCESS
.B4      AIF   (NOT (&DSORGBX AND &DSORGQX)).B4A
*                       COMMUNICATIONS LINE GROUP
         AGO   .B5
.B4A     AIF   (NOT &DSORGBX).B4B
*                       BTAM LINE GROUP
.B4B     AIF   (NOT &DSORGQX).B5
*                       QTAM LINE GROUP
.B5      AIF   (NOT &DSORGCQ).B6
*                       COMMUNICATIONS DIRECT ACCESS QUEUE
.B6      AIF   (NOT &DSORGMQ).B6A
*                       QTAM MESSAGE QUEUE
.B6A     AIF   (NOT &DSORGTX).B6B
*                       TCAM LINE GROUP
.B6B     AIF   (NOT &DSORGTQ).B6C                                S22024
*                       TCAM MESSAGE QUEUE
.B6C     AIF   (NOT &DSORGTR).B7                                 S22024
*                       3705 LINE GROUP
.B7      AIF   (NOT (&DSORGXA AND &DSORGXE)).B8
*                       EXCP WITH EXTENSION AND APPENDAGES
         AGO   .BA
.B8      AIF   (NOT &DSORGXE).B9
*                       EXCP WITH EXTENSION
         AGO   .BA
.B9      AIF   (NOT &DSORGXA).B0
*                       EXCP WITH APPENDAGES
         AGO   .BA
.B0      AIF   (NOT &DSORGGS).B00
*                       GRAPHICS WITH APPENDAGES
         AGO   .BA
.B00     AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQX OR        *
               &DSORGCQ OR &DSORGMQ OR &DSORGQS OR &DSORGBS OR         *
               &DSORGTX OR &DSORGTQ OR &DSORGLR OR &DSORGTR).BA  S22024
*                       EXCP WITH EXTENSION
&DSORGXE SETB  1
.BA      ANOP
         SPACE 1
**********************************************************************
*   02/29/72          LEVEL=04
*
**********************************************************************
         SPACE 1
         AIF   (&DSORGGS).SLIP
&LSW(001) SETB (1)                                                  DBC
&P.DCB   DS    0A                  FULLWORD ALIGNMENT               DBC
         SPACE 1
         AIF   (NOT (&DEVDDA OR &DEVDTA OR &DEVDPT OR &DEVDPR OR       *
               &DEVDRD OR &DEVDWT OR &DEVDOR OR &DEVDMR)).C4
&LSW(002) SETB (1)                                                  DBC
*                       DEVICE INTERFACES
         SPACE 1
         AIF   (NOT &DEVDDA).C1
&LSW(003) SETB (1)                                                  DBC
*                       DIRECT ACCESS DEVICES
         SPACE 1
&P.RELAD DS    CL4 -          PARTITIONED ORGANIZATION DATA SET -
*                             ADDRESS (IN THE FORM TTRN) OF MEMBER
*                             CURRENTLY USED.  ---
*                             SYS1.LOGREC DATA SET - IF CCH OPTION HAS
*                             BEEN SPECIFIED IN SYSGEN PROCESS, ADDRESS
*                             OF A 12-BYTE PARAMETER IN THE EXPANSION
*                             OF MACRO INSTRUCTION IGFCATAP
&P.KEYCN DS    FL1 -          KEYED BLOCK OVERHEAD CONSTANT
&P.FDAD  DS    CL8 -          FULL DISK ADDRESS IN THE FORM OF MBBCCHHR
*                             OF RECORD THAT WAS JUST READ OR WRITTEN
         SPACE 1
         ORG   &P.FDAD+7
&P.DVTBL DS    0A -           SAME AS DCBDVTBA BELOW
         DS    X -            LAST BYTE OF DCBFDAD
&P.DVTBA DS    AL3 -          ADDRESS OF ENTRY IN I/O DEVICE
*                             CHARACTERISTICS TABLE FOR DEVICE BEING
*                             USED
         DS    FL1 -          DCBKEYLE - KEY LENGTH OF DATA SET
         DS    C -            DCBDEVT - DEVICE TYPE
*   FOR MASKS FOR ISAM DIRECT ACCESS, SEE DCBOVDEV IN ISAM SECTION
         AIF   (&#DCBSW(003)).SKP003A                               DBC
DCBDV311 EQU   X'21' -        2311 DISK DRIVE
DCBDV301 EQU   X'22' -        2301 PARALLEL DRUM
DCBDV303 EQU   X'23' -        2303 SERIAL DRUM
DCBDV302 EQU   X'24' -        2302 DISK STORAGE
DCBDV321 EQU   X'25' -        2321 DATA CELL DRIVE
DCBDV314 EQU   X'28' -        2314 DISK STORAGE FACILITY
.SKP003A ANOP  ,                                                    DBC
&P.TRBAL DS    H -            TRACK BALANCE.  NUMBER OF BYTES REMAINING
*                             ON CURRENT TRACK AFTER A WRITE OPERATION
*                             (THIS QUANTITY MAY BE NEGATIVE IF THERE
*                             ARE NO BYTES REMAINING ON TRACK).
         SPACE 1
.C1      AIF   (NOT &DEVDTA).C2
&LSW(004) SETB (1)                                                  DBC
*                       MAGNETIC TAPE
         SPACE 1
         ORG   &P.DCB
         DS    CL12 -         RESERVED FOR I/O SUPERVISOR
&P.BLKCT DS    F -            BLOCK COUNT FOR EACH VOLUME
&P.TRTCH DS    C -            TAPE RECORDING TECHNIQUE FOR 7-TRACK TAPE
         AIF   (&#DCBSW(004)).SKP004A                               DBC
DCBMTE   EQU   X'23' -        E  - EVEN PARITY
DCBMTT   EQU   X'3B' -        T  - BCD/EBCDIC TRANSLATION
DCBMTC   EQU   X'13' -        C  - DATA CONVERSION
DCBMTET  EQU   X'2B' -        ET - EVEN PARITY AND TRANSLATION
.SKP004A ANOP  ,                                                    DBC
         DS    C -            DCBDEVT - DEVICE TYPE
         AIF   (&#DCBSW(004)).SKP004B                               DBC
DCBDVMT  EQU   X'81' -        2400 SERIES MAGNETIC TAPE UNIT (7-TRACK
*                             OR 9-TRACK)
DCBDVMT3 EQU   X'83' -        3400 SERIES MAGNETIC TAPE UNIT     ICB277
.SKP004B ANOP  ,                                                    DBC
&P.DEN   DS    C -            TAPE DENSITY - 2400 SERIES MAGNETIC TAPE
*                             UNITS
         AIF   (&#DCBSW(004)).SKP004C                               DBC
*                             CODE    7-TRACK     9-TRACK
DCBMTDN0 EQU   X'03' -         0       200 BPI       -
DCBMTDN1 EQU   X'43' -         1       556 BPI       -
DCBMTDN2 EQU   X'83' -         2       800 BPI     800 BPI
DCBMTDN3 EQU   X'C3' -         3         -        1600 BPI
.SKP004C ANOP  ,                                                    DBC
         DS    X -            RESERVED
         SPACE 1
.C2      AIF   (NOT &DEVDPT).C3
&LSW(005) SETB (1)                                                  DBC
*                       PAPER TAPE
         SPACE 1
         ORG   &P.DCB+8
&P.LCTBL DS    A -            ADDRESS OF TRANSLATE TABLE
         DS    XL4 -          RESERVED
&P.CODE  DS    C -            PAPER TAPE CODE BEING USED.  THE
*                             APPROPRIATE TRANSLATE TABLE IS MADE
*                             AVAILABLE
         AIF   (&#DCBSW(005)).SKP005A                               DBC
DCBPTCDN EQU   X'80' -        N - NO CONVERSION
DCBPTCDI EQU   X'40' -        I - IBM BCD
DCBPTCDF EQU   X'20' -        F - FRIDEN
DCBPTCDB EQU   X'10' -        B - BURROUGHS
DCBPTCDC EQU   X'08' -        C - NATIONAL CASH REGISTER
DCBPTCDA EQU   X'04' -        A - ASCII (8-TRACK)
DCBPTCDT EQU   X'02' -        T - TELETYPE
.SKP005A ANOP  ,                                                    DBC
         DS    C -            DCBDEVT - DEVICE TYPE
         AIF   (&#DCBSW(005)).SKP005B                               DBC
DCBDVPTP EQU   X'50' -        2671 PAPER TAPE READER
.SKP005B ANOP  ,                                                    DBC
         DS    X -            RESERVED
&P.PTFLG DS    BL1 -          PAPER TAPE FLAGS
         AIF   (&#DCBSW(005)).SKP005C                               DBC
DCBPTIC  EQU   BIT3 -         INVALID CHARACTER IN LAST RECORD READ
DCBPTECT EQU   BIT4 -         END OF RECORD CHARACTER REACHED IN
*                             TRANSLATION
DCBPTECR EQU   BIT5 -         END OF RECORD CHARACTER DETECTED DURING
*                             READ
DCBPTUCT EQU   BIT6 -         IF ONE, UPPER CASE TRANSLATE.
*                             IF ZERO, LOWER CASE TRANSLATE
DCBPTERR EQU   BIT7 -         ERROR DETECTED ON READ
.SKP005C ANOP  ,                                                    DBC
         SPACE 1
.C3      AIF   (NOT &DEVDPR).C3A
&LSW(006) SETB (1)                                                  DBC
*                       PRINTER
         SPACE 1
         ORG   &P.DCB+16
&P.PRTSP DS    C -            NUMBER INDICATING NORMAL PRINTER SPACING
         AIF   (&#DCBSW(006)).SKP006A                               DBC
DCBPRSP0 EQU   X'01' -        0 - NO SPACING
DCBPRSP1 EQU   X'09' -        1 - SPACE ONE LINE
DCBPRSP2 EQU   X'11' -        2 - SPACE TWO LINES
DCBPRSP3 EQU   X'19' -        3 - SPACE THREE LINES
.SKP006A ANOP  ,                                                    DBC
         DS    C -            DCBDEVT - DEVICE TYPE
         AIF   (&#DCBSW(006)).SKP006B                               DBC
DCBDVPR1 EQU   X'48' -        1403 PRINTER AND 1404 PRINTER (CONTINUOUS
*                             FORM SUPPORT ONLY)
DCBDVPR2 EQU   X'4A' -        1443 PRINTER
DCBDVPR3 EQU   X'49' -        3211 PRINTER
.SKP006B ANOP  ,                                                    DBC
&P.PRTOV DS    C -            TEST-FOR-PRINTER-OVERFLOW MASK
*                             (PRTOV MASK)
         AIF   (&#DCBSW(006)).SKP006C                               DBC
DCBPRC9  EQU   X'20' -        9  - TEST FOR CHANNEL 9 OVERFLOW
DCBPRC12 EQU   X'10' -        12 - TEST FOR CHANNEL 12 OVERFLOW
.SKP006C ANOP  ,                                                    DBC
         DS    X -            RESERVED
         SPACE 1
.C3A     AIF   (NOT &DEVDRD).C3B
&LSW(007) SETB (1)                                                  DBC
*                       CARD READER, CARD PUNCH
         SPACE 1
         ORG   &P.DCB+16
&P.MODE  DS    0B -           MODE OF OPERATION FOR 1442 CARD READ
*                             PUNCH (BITS 0-3)
&P.STACK DS    B -            STACKER SELECTION (BITS 4-7)
         AIF   (&#DCBSW(007)).SKP007A                               DBC
DCBMODEC EQU   BIT0 -         COLUMN BINARY MODE
DCBMODEE EQU   BIT1 -         EBCDIC MODE
DCBMODEO EQU   BIT2 -         OPTICAL MARK READ MODE
DCBMODER EQU   BIT3 -         READ COLUMN ELIMINATE MODE
DCBSTCK2 EQU   BIT6 -         STACKER 2
DCBSTCK1 EQU   BIT7 -         STACKER 1
.SKP007A ANOP  ,                                                    DBC
         DS    C -            DCBDEVT - DEVICE TYPE
         AIF   (&#DCBSW(007)).SKP007B                               DBC
DCBDVCR0 EQU   X'41' -        2540 CARD READER
DCBDVCP0 EQU   X'42' -        2540 CARD PUNCH
DCBDVCRP EQU   X'43' -        1442 CARD READ PUNCH
DCBDVCR1 EQU   X'44' -        2501 CARD READER
DCBDVCPR EQU   X'45' -        2520 CARD READ PUNCH
DCBDVCR2 EQU   X'46'          3505 CARD READER                   XM0629
DCBDVCP1 EQU   X'4C'          3525 CARD PUNCH                    XM0629
.SKP007B ANOP  ,                                                    DBC
         DS    X -            RESERVED
&P.FUNC  DS    B -            FUNCTION INDICATOR FOR THE 3525
         AIF   (&#DCBSW(007)).SKP007C                               DBC
DCBFNCBI EQU   BIT0 -         INTERPRET (PUNCH AND PRINT TWO LINES)
DCBFNCBR EQU   BIT1 -         READ
DCBFNCBP EQU   BIT2 -         PUNCH
DCBFNCBW EQU   BIT3 -         PRINT
DCBFNCBD EQU   BIT4 -         DATA PROTECTION
DCBFNCBX EQU   BIT5 -         THIS DATA SET IS TO BE PRINTED
DCBFNCBT EQU   BIT6 -         TWO-LINE PRINT SUPPORT REQUEST
.SKP007C ANOP  ,                                                    DBC
         SPACE 1
.C3B     AIF   (NOT &DEVDWT).C3C
&LSW(008) SETB (1)                                                  DBC
*                       WORLD TRADE TELEGRAPH
         SPACE 1
         ORG   &P.DCB+16
&P.BQFLG DS    BL1 -          WTTA FLAG BYTE
         AIF   (&#DCBSW(008)).SKP008A                               DBC
DCBBQWRU EQU   BIT1 -         WRU FEATURE IS TO BE USED
DCBBQIAM EQU   BIT2 -         IAM FEATURE IS TO BE USED
DCBBQWRS EQU   BIT3 -         WRU FEATURE TO BE USED IN SEND HEADER
*                             SUBGROUP
DCBBQWRE EQU   BIT4 -         WRU FEATURE TO BE USED IN END SEND
*                             SUBGROUP
.SKP008A ANOP  ,                                                    DBC
&P.WTEOM DS    C -            EOM CHARACTER
&P.WTEOT DS    C -            EOT CHARACTER
&P.WTPAD DS    FL1 -          NUMBER OF PAD (LTRS) CHARACTERS REQUIRED
*                             FOR MOTOR-ON DELAY
         SPACE 1
.C3C     AIF   (NOT (&DEVDOR OR &DEVDMR)).C4
&LSW(009) SETB (1)                                                  DBC
*                       OPTICAL READER AND MAGNETIC CHAR READER
         SPACE 1
         ORG   &P.DCB
&P.WTOID DS    0A -           SAME AS DCBWTOIA BELOW
         DS    X -            RESERVED
&P.WTOIA DS    AL3 -          A BINARY IDENTIFICATION NUMBER ASSIGNED
*                             BY COMMUNICATIONS TASK TO MESSAGE ISSUED
*                             BY WTO MACRO.  THIS NUMBER IS USED BY THE
*                             DOM MACRO WHEN MESSAGE IS NO LONGER
*                             REQUIRED (MCS SUPPORT).  ---
*                             FOR MAGNETIC CHAR READER - AFTER FIRST
*                             READ HAS BEEN ISSUED, CONTAINS ADDRESS OF
*                             MAGNETIC INTERRUPT CONTROL BLOCK (MICB)
*                             BEING USED BY THE APPENDAGES.
         SPACE 1
         AIF   (NOT &DEVDOR).C3D
&LSW(010) SETB (1)                                                  DBC
*                       OPTICAL READER DEVICES
*                       1285, 1287, 1288
         SPACE 1
         ORG   &P.WTOID+4
&P.ERRCN DS    0A -           SAME AS DCBERRCA BELOW
         DS    X -            RESERVED
&P.ERRCA DS    AL3 -          ADDRESS OF 32 BYTES OF DECLARED STORAGE
*                             SPECIFIED BY THE USER IN HIS PROGRAM.
*                             THIS STORAGE WILL BE USED BY THE
*                             PROGRAMMING SUPPORT AS EIGHT 4-BYTE
*                             COUNTERS IN WHICH TOTALS OF CERTAIN 1285,
*                             1287 AND 1288 ERROR CONDITIONS ARE
*                             ACCUMULATED.
&P.DSPLY DS    0A -           SAME AS DCBDSPLA BELOW
         DS    X -            RESERVED
&P.DSPLA DS    AL3 -          ADDRESS OF DSPLY (BSAM) ROUTINE USED FOR
*                             KEYBOARD ENTRY OF A COMPLETE FIELD
&P.RESCN DS    0A -           SAME AS DCBRESCA BELOW
&P.RDLNE DS    0A -           SAME AS DCBRDLNA BELOW
         DS    X -            RESERVED
&P.RESCA DS    0AL3 -         ADDRESS OF RESCN (BSAM) ROUTINE USED TO
*                             FORCE ON-LINE CORRECTION OF UNREADABLE
*                             CHARACTERS
&P.RDLNA DS    AL3 -          ADDRESS OF RDLNE (QSAM) ROUTINE USED TO
*                             FORCE ON-LINE CORRECTION OF UNREADABLE
*                             CHARACTERS
&P.ORBYT DS    BL1 -          OPTICAL READER BYTE USED BY BSAM/QSAM
         AIF   (&#DCBSW(010)).SKP010A                               DBC
DCBORSYN EQU   BIT0 -         SYNAD IN CONTROL
DCBOREOF EQU   BIT1 -         END OF FILE (EOF)
DCBORBFP EQU   BIT2 -         BUFFERS PRIMED (QSAM)
.SKP010A ANOP  ,                                                    DBC
         DS    C -            DCBDEVT - DEVICE TYPE
         AIF   (&#DCBSW(010)).SKP010B                               DBC
DCBDVOR5 EQU   X'5A' -        1285 OPTICAL READER
DCBDVOR7 EQU   X'5B' -        1287 OPTICAL READER
DCBDVOR8 EQU   X'5C' -        1288 OPTICAL READER
.SKP010B ANOP  ,                                                    DBC
&P.EIB   DS    BL1 -          ERROR INDICATOR BYTE
         AIF   (&#DCBSW(010)).SKP010C                               DBC
DCBORNRM EQU   BIT1 -         THE 1287 OR 1288 SCANNER WAS UNABLE TO
*                             LOCATE THE REFERENCE MARK
DCBORREJ EQU   BIT2 -         FOR 1287, A STACKER SELECT COMMAND WAS
*                             GIVEN AFTER ALLOTTED TIME HAD ELAPSED AND
*                             THE DOCUMENT HAS BEEN PUT IN REJECT
*                             POCKET.  FOR 1288 UNFORMATTED ONLY,
*                             END-OF-PAGE HAS OCCURRED.
DCBORERR EQU   BIT3 -         A NONRECOVERABLE ERROR HAS OCCURRED.
DCBORECK EQU   BIT4 -         AN EQUIPMENT CHECK RESULTED IN AN
*                             INCOMPLETE READ
DCBORWLR EQU   BIT5 -         A WRONG-LENGTH RECORD CONDITION HAS
*                             OCCURRED
DCBORHPR EQU   BIT6 -         FOR QSAM - OPERATOR ENTERED ONE OR MORE
*                             CHARACTERS FROM THE KEYBOARD.
*                             FOR BSAM - A HOPPER EMPTY CONDITION HAS
*                             OCCURRED
DCBORDCK EQU   BIT7 -         A DATA CHECK HAS OCCURRED
.SKP010C ANOP  ,                                                    DBC
         DS    X -            RESERVED
         SPACE 1
.C3D     AIF   (NOT &DEVDMR).C4
&LSW(011) SETB (1)                                                  DBC
*                       MAGNETIC CHARACTER READER DEVICES
*                       1419 MAGNETIC CHARACTER READER
*                       1275 OPTICAL READER SORTER
         SPACE 1
         ORG   &P.DCB
&P.SSID  DS    CL8 -          BEFORE DCB IS OPENED - NAME OF USER'S
*                             STACKER SELECT ROUTINE.
         SPACE 1
         ORG   &P.SSID
         DS    A -            AFTER DCB IS OPENED - DCBWTOID
&P.SSAD  DS    0A -           ADDRESS OF USER'S STACKER SELECT ROUTINE
         DS    X -            RESERVED
&P.SSADA DS    AL3 -          ADDRESS OF USER'S STACKER SELECT ROUTINE
&P.IMAGE DS    0A -           SAME AS DCBIMAGA BELOW
&P.MRFG  DS    BL1 -          BUFFER INDICATOR
         AIF   (&#DCBSW(011)).SKP011A                               DBC
DCBMRBCT EQU   BIT0+BIT1 -    TWO-BIT BINARY COUNTER WHICH INDICATES
*                             INTO WHICH BUFFER STATUS INFORMATION IS
*                             TO BE POSTED
.SKP011A ANOP  ,                                                    DBC
&P.IMAGA DS    AL3 -          ADDRESS OF PARAMETER LIST USED TO
*                             COMMUNICATE BETWEEN USER'S PROCESSING
*                             ROUTINES AND HIS STACKER SELECT ROUTINES
&P.ECBLT DS    0A -           SAME AS DCBECBLA BELOW
&P.MRIND DS    BL1 -          INDICATOR AND COUNTER BYTE
         AIF   (&#DCBSW(011)).SKP011B                               DBC
DCBMRDCT EQU   BIT0+BIT1+BIT2 THREE-BIT BINARY COUNTER OF NUMBER OF
*                             DOCUMENTS READ AFTER DISENGAGE
DCBMRSCU EQU   BIT3 -         DCB WAS ALTERED WHEN SYNAD ROUTINE WAS
*                             ENTERED DUE TO SECONDARY CONTROL UNIT
*                             (SCU) ERROR
DCBMRPLO EQU   BIT4 -         POCKET LIGHT HAS BEEN TURNED ON
DCBMRPLS EQU   BIT5 -         POCKET LIGHT 0-6 IS BEING SET ON
DCBMRERP EQU   BIT6 -         ERROR RECOVERY PROCEDURE IS EXECUTING FOR
*                             PRIMARY CONTROL UNIT (PCU)
DCBMRERS EQU   BIT7 -         ERROR RECOVERY PROCEDURE IS EXECUTING FOR
*                             SECONDARY CONTROL UNIT (SCU)
.SKP011B ANOP  ,                                                    DBC
&P.ECBLA DS    AL3 -          ADDRESS OF ECB LIST PASSED TO WAIT MACRO
*                             BY CHECK MACRO WHEN NO 1419/1275 IS
*                             AVAILABLE FOR PROCESSING
&P.MRFLG DS    BL1 -          FLAG BYTE
         AIF   (&#DCBSW(011)).SKP011C                               DBC
DCBMRSCC EQU   BIT0 -         FIRST OR SECOND SECONDARY CONTROL UNIT
*                             COMMAND CHAIN IS BEING USED
DCBMRDBG EQU   BIT1 -         DEBUGGING MODE IN USE
DCBMRDRU EQU   BIT2 -         DISENGAGE REQUESTED BY USER
DCBMRDR  EQU   BIT3 -         DISENGAGE REQUESTED
DCBMRPCC EQU   BIT4+BIT5 -    TWO-BIT BINARY COUNTER INDICATING FIRST,
*                             SECOND OR THIRD PRIMARY CONTROL UNIT
*                             COMMAND CHAIN IS BEING USED
DCBMRDWT EQU   BIT6 -         WTO MESSAGE MUST BE DELETED
DCBMRUE  EQU   BIT7 -         UNIT EXCEPTION
.SKP011C ANOP  ,                                                    DBC
         DS    C -            DCBDEVT - DEVICE TYPE
         AIF   (&#DCBSW(011)).SKP011D                               DBC
DCBDVMR  EQU   X'5D' -        1419 MAGNETIC CHARACTER READER
DCBDVORS EQU   X'5F' -        1275 OPTICAL READER SORTER
.SKP011D ANOP  ,                                                    DBC
&P.APPIN DS    C -            AN INDICATOR USED BY THE APPENDAGES TO
*                             PASS INFORMATION ABOUT ONE CHANNEL CHAIN
*                             TO AN APPENDAGE ASSOCIATED WITH ANOTHER
*                             CHANNEL CHAIN
         DS    X -            RESERVED
         SPACE 1
.C4      AIF   (NOT &DSORGTR).C4A                                S22024
&LSW(012) SETB (1)                                                  DBC
*                       3705 LINE TERMINAL                       S22024
         ORG   &P.DCB+8                                          S22024
&P.IPLTX DS    CL8            NAME OF MODULE TO BE USED TO IPL   S22024
*                             THE 3705                           S22024
&P.BCKUP DS    0A             FULL WORD LABEL                    S22024
         DS    BL1            RESERVED                           S22024
&P.BCKUA DS    AL3            ADDRESS OF THE DCB FOR THE         S22024
*                             BACKUP 3705.                       S22024
.C4A     AIF   (NOT (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS OR   *
               &DSORGXE)).C5
&LSW(013) SETB (1)                                                  DBC
*                       ACCESS METHOD COMMON INTERFACE
         SPACE 1
         ORG   &P.DCB+16
&P.RELB  DS    0F -           SAME AS DCBREL BELOW
&P.KEYLE DS    FL1 -          KEY LENGTH OF DATA SET
&P.DEVT  DS    0C -           DEVICE TYPE
         AIF   (&#DCBSW(13)).SKP13A                                 DBC
DCBDVTRM EQU   X'4F' -        TERMINAL.  (DD CONTAINS TERM=TS)
.SKP13A  ANOP  ,                                                    DBC
&P.REL   DS    FL3 -          NUMBER OF RELATIVE TRACKS OR BLOCKS IN
*                             THIS DATA SET (BDAM)
&P.BUFCB DS    0A -           ADDRESS OF BUFFER POOL CONTROL BLOCK
&P.BUFNO DS    FL1 -          NUMBER OF BUFFERS REQUIRED FOR THIS DATA
*                             SET.  MAY RANGE FROM 0 TO 255.  IF
*                             UNBLOCKED SPANNED RECORDS ARE USED,
*                             NUMBER OF SEGMENT WORK AREAS REQUIRED
*                             FOR THIS DATA SET.
&P.BUFCA DS    AL3 -          ADDRESS OF BUFFER POOL CONTROL BLOCK
&P.BUFL  DS    H -            LENGTH OF BUFFER.  MAY RANGE FROM 0 TO
*                             32,767.
&P       #DSORG                                                     DBC
&P.IOBAD DS    0A -           ADDRESS OF IOB WHEN CHAINED SCHEDULING IS
*                             USED OR FOR 1419/1275
&P.ODEB  DS    0A -           ADDRESS OF OLD DEB
&P.LNP   DS    0FL1 -         3525 PRINTER LINE POSITION COUNTER
&P.QSLM  DS    BL1 -          QSAM LOCATE MODE LOGICAL RECORD INTERFACE
*                             INDICATOR BYTE FOR UPDAT PROCESSING OF
*                             SPANNED RECORDS
         AIF   (&#DCBSW(013)).SKP013A                               DBC
DCB1DVDS EQU   BIT0 -         ONLY ONE DEVICE IS ALLOCATED TO THIS
*                             DATA SET
DCBUPDCM EQU   BIT1 -         UPDATE COMPLETE, FREE OLD DEB
DCBUPDBT EQU   BIT2+BIT3 -    UPDATE BITS
DCBUPDT  EQU   BIT2 -         UPDATE TO TAKE PLACE
DCBNUPD  EQU   BIT2+BIT3 -    NO UPDATE TO TAKE PLACE
DCBSVDEB EQU   BIT3 -         OLD DEB ADDRESS MUST BE SAVED
.SKP013A ANOP  ,                                                    DBC
&P.IOBAA DS    0AL3 -         SAME AS DCBIOBAD ABOVE
&P.ODEBA DS    AL3 -          ADDRESS OF OLD DEB
         ORG   &P.DCB+28                                     ICBI DCB-4
&P.SVCXL DS    0A -           SAME AS DCBSVCXA BELOW         ICBI DCB-4
         DS    X -            RESERVED                       ICBI DCB-4
&P.SVCXA DS    AL3 -          POINTER TO EXIT LIST OF JES    ICBI DCB-4
*                             C.I. INTERFACE CONTROL SVC     ICBI DCB-4
         SPACE 1
*                       FOUNDATION EXTENSION
         SPACE 1
&P.EODAD DS    0A -           SAME AS DCBEODA BELOW
&P.HIARC DS    0BL1 -         HIERARCHY BITS
&P.BFTEK DS    0BL1 -         BUFFERING TECHNIQUE BITS
&P.BFALN DS    BL1 -          BUFFER ALIGNMENT BITS
         AIF   (&#DCBSW(13) OR &#DCBSW(16)).SKP013B                 DBC
DCBH1    EQU   BIT0 -         HIERARCHY 1 MAIN STORAGE - BIT 5 IS ZERO
DCBBFT   EQU   BIT1+BIT2+BIT3 BUFFERING TECHNIQUE
DCBBFTA  EQU   BIT1+BIT2 -    QSAM LOCATE MODE PROCESSING OF SPANNED
*                             RECORDS - OPEN IS TO CONSTRUCT A RECORD
*                             AREA IF IT AUTOMATICALLY CONSTRUCTS
*                             BUFFERS
DCBBFTR  EQU   BIT2 -         FOR BSAM CREATE BDAM PROCESSING OF
*                             UNBLOCKED SPANNED RECORDS - SOFTWARE
*                             TRACK OVERFLOW.  FOR BSAM INPUT
*                             PROCESSING OF UNBLOCKED SPANNED RECORDS
*                             WITH KEYS - RECORD OFFSET PROCESSING.
DCBBFTS  EQU   BIT1 -         SIMPLE BUFFERING - BIT 3 IS ZERO
DCBBFTKR EQU   BIT2 -         UNBLOCKED SPANNED RECORDS - SOFTWARE
*                             TRACK OVERFLOW (BDAM)
DCBBFTE  EQU   BIT3 -         EXCHANGE BUFFERING - BIT 1 IS ZERO
DCBBFTKD EQU   BIT4 -         DYNAMIC BUFFERING (BTAM)
DCBH0    EQU   BIT5 -         HIERARCHY 0 MAIN STORAGE - BIT 0 IS ZERO
DCBBFA   EQU   BIT6+BIT7 -    BUFFER ALIGNMENT
DCBBFAD  EQU   BIT6 -         DOUBLEWORD BOUNDARY
DCBBFAF1 EQU   BIT7 -         FULLWORD NOT A DOUBLEWORD BOUNDARY,
*                             CODED IN DCB MACRO INSTRUCTION
DCBBFAF2 EQU   BIT6+BIT7 -    FULLWORD NOT A DOUBLEWORD BOUNDARY,
*                             CODED IN DCB MACRO INSTRUCTION
.SKP013B ANOP  ,                                                    DBC
&P.EODA  DS    AL3 -          ADDRESS OF A USER-PROVIDED ROUTINE TO
*                             HANDLE END-OF-DATA CONDITIONS
&P.EXLST DS    0A -           ADDRESS OF USER-PROVIDED LIST OF EXITS
&P.RECFM DS    BL1 -          RECORD FORMAT
         AIF   (&#DCBSW(013)).SKP013C                               DBC
DCBRECLA EQU   BIT0+BIT1+BIT2 RECORD LENGTH INDICATOR - ASCII
DCBRECD  EQU   BIT2 -         ASCII VARIABLE RECORD LENGTH
DCBRECL  EQU   BIT0+BIT1 -    RECORD LENGTH INDICATOR
DCBRECF  EQU   BIT0 -         FIXED RECORD LENGTH
DCBRECV  EQU   BIT1 -         VARIABLE RECORD LENGTH
DCBRECU  EQU   BIT0+BIT1 -    UNDEFINED RECORD LENGTH
DCBRECTO EQU   BIT2 -         TRACK OVERFLOW
DCBRECBR EQU   BIT3 -         BLOCKED RECORDS
DCBRECSB EQU   BIT4 -         FOR FIXED LENGTH RECORD FORMAT - STANDARD
*                             BLOCKS.  FOR VARIABLE LENGTH RECORD
*                             FORMAT - SPANNED RECORDS
DCBRECCC EQU   BIT5+BIT6 -    CONTROL CHARACTER INDICATOR
DCBRECCA EQU   BIT5           ASA CONTROL CHARACTER
DCBRECCM EQU   BIT6 -         MACHINE CONTROL CHARACTER
DCBRECC  EQU   X'00' -        NO CONTROL CHARACTER
DCBRECKL EQU   BIT7 -         KEY LENGTH (KEYLEN) WAS SPECIFIED IN DCB
*                             MACRO INSTRUCTION
.SKP013C ANOP  ,                                                    DBC
&P.EXLSA DS    AL3 -          ADDRESS OF USER-PROVIDED LIST OF EXITS
         SPACE 1
.C5      AIF   (NOT &DSORGBX).C5B
&LSW(014) SETB (1)                                                  DBC
         AIF   (&DSORGQX AND (&DSORGIS OR &DSORGDA OR &DSORGQS OR      *
               &DSORGBS OR &DSORGXE)).C5A
&LSW(015) SETB (1)                                                  DBC
*                       BTAM LINE GROUP INTERFACE
         SPACE 1
         AIF   (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS OR        *
               &DSORGXE).C5A
&LSW(016) SETB (1)                                                  DBC
         ORG   &P.DCB+20
&P.BUFCB DS    0A -           ADDRESS OF BUFFER POOL CONTROL BLOCK
&P.BUFNO DS    FL1 -          NUMBER OF BUFFERS OBTAINED BY OPEN
&P.BUFCA DS    AL3 -          ADDRESS OF BUFFER POOL CONTROL BLOCK
&P.BUFL  DS    H -            BUFFER LENGTH
&P       #DSORG                                                     DBC
&P.IOBAD DS    0A -           BASE FOR ADDRESSING IOB'S (BASE = ADDRESS
*                             OF FIRST IOB MINUS LENGTH OF AN IOB)
         DS    FL1 -          DCBDEVTP - INDEX TO DEVICE ENTRY IN THE
*                             DEVICE I/O DIRECTORY
&P.IOBAA DS    AL3 -          SAME AS DCBIOBAD ABOVE
&P.HIARC DS    0BL1 -         HIERARCHY FLAG BITS
&P.BFTEK DS    BL1 -          BUFFERING TECHNIQUE FLAG BITS
         AIF   (&#DCBSW(13) OR &#DCBSW(16)).SKP016A                 DBC
DCBH1    EQU   BIT0 -         HIERARCHY 1 MAIN STORAGE - BIT 5 IS ZERO
DCBBFT   EQU   BIT1+BIT2+BIT3 BUFFERING TECHNIQUE
DCBBFTA  EQU   BIT1+BIT2 -    QSAM LOCATE MODE PROCESSING OF SPANNED
*                             RECORDS - OPEN IS TO CONSTRUCT A RECORD
*                             AREA IF IT AUTOMATICALLY CONSTRUCTS
*                             BUFFERS
DCBBFTR  EQU   BIT2 -         FOR BSAM CREATE BDAM PROCESSING OF
*                             UNBLOCKED SPANNED RECORDS - SOFTWARE
*                             TRACK OVERFLOW.  FOR BSAM INPUT
*                             PROCESSING OF UNBLOCKED SPANNED RECORDS
DCBBFTS  EQU   BIT1 -         SIMPLE BUFFERING - BIT 3 IS ZERO
DCBBFTKR EQU   BIT2 -         UNBLOCKED SPANNED RECORDS - SOFTWARE
*                             TRACK OVERFLOW (BDAM)
DCBBFTE  EQU   BIT3 -         EXCHANGE BUFFERING - BIT 1 IS ZERO
DCBBFTKD EQU   BIT4 -         DYNAMIC BUFFERING (BTAM)
DCBH0    EQU   BIT5 -         HIERARCHY 0 MAIN STORAGE - BIT 0 IS ZERO
DCBBFA   EQU   BIT6+BIT7 -    BUFFER ALIGNMENT
DCBBFAD  EQU   BIT6 -         DOUBLEWORD BOUNDARY
DCBBFAF1 EQU   BIT7 -         FULLWORD NOT A DOUBLEWORD BOUNDARY,
*                             CODED IN DCB MACRO INSTRUCTION
DCBBFAF2 EQU   BIT6+BIT7 -    FULLWORD NOT A DOUBLEWORD BOUNDARY,
*                             CODED IN DCB MACRO INSTRUCTION
.SKP016A ANOP  ,                                                    DBC
         DS    BL1 -          DCBERROP - ERROR RECOVERY PROCEDURE BITS
         DS    FL1 -          DCBBUFCT - MAX NUMBER OF READ BUFFERS
         DS    X -            RESERVED
&P.EXLST DS    0A -           ADDRESS OF USER-PROVIDED EXIT LIST
         DS    FL1 -          DCBEIOBX - SIZE OF IOB
&P.EXLSA DS    AL3 -          ADDRESS OF USER-PROVIDED EXIT LIST
         SPACE 1
.C5A     ANOP
         ORG   &P.DCB+33
&P.ERROP DS    BL1 -          ERROR RECOVERY PROCEDURE BITS
         AIF   (&#DCBSW(014)).SKP014A                               DBC
DCBERPT  EQU   BIT3 -         ON-LINE TEST FACILITIES TO BE USED
DCBERPC  EQU   BIT4 -         THRESHOLD AND CUMULATIVE ERROR COUNTS TO
*                             BE MAINTAINED
DCBERPW  EQU   BIT5 -         TEXT-WRITE ERRORS TO BE RETRIED
DCBERPR  EQU   BIT6 -         TEXT-READ ERRORS TO BE RETRIED
DCBERPN  EQU   BIT7 -         IF ZERO, BASIC ERP TO BE FOLLOWED ---
*                             IF ONE, NO ERP TO BE FOLLOWED
.SKP014A ANOP  ,                                                    DBC
&P.BUFCT DS    FL1 -          CONTAINS MAXIMUM NUMBER OF BUFFERS TO BE
*                             OBTAINED BY BTAM FOR READ OPERATION
*                             (DYNAMIC BUFFERING ONLY)
         SPACE 1
         AIF   (&DSORGQX OR &DSORGTX).C5B
&LSW(017) SETB (1)                                                  DBC
         ORG   &P.DCB+28
&P.DEVTP DS    FL1 -          INDEX TO DEVICE ENTRY IN THE DEVICE I/O
*                             DIRECTORY
         SPACE 1
         ORG   &P.DCB+36
&P.EIOBX DS    FL1 -          SIZE OF EXTENDED IOB.  SIZE OF AN IOB
*                             ASSOCIATED WITH THIS DCB
         SPACE 1
.C5B     AIF   (NOT &DSORGTX).C5B1
&LSW(018) SETB (1)                                                  DBC
*                       TCAM LINE GROUP INTERFACE
         SPACE 1
         ORG   &P.DCB+20
&P.MHA   DS    0A -           SAME AS DCBMH BELOW
&P.BUFIN DS    0BL1 -         NUMBER OF INPUT BUFFERS (BITS 0-3)
&P.BUFOU DS    BL1 -          NUMBER OF OUTPUT BUFFERS (BITS 4-7)
         AIF   (&#DCBSW(018)).SKP018A                               DBC
DCBBFIN  EQU   BIT0+BIT1+BIT2+BIT3 NUMBER OF BUFFERS ASSIGNED
*                             INITIALLY FOR RECEIVING OPERATIONS, FOR
*                             EACH LINE IN LINE GROUP
DCBBFOUT EQU   BIT4+BIT5+BIT6+BIT7 NUMBER OF BUFFERS ASSIGNED
*                             INITIALLY FOR SENDING OPERATIONS, FOR
*                             EACH LINE IN LINE GROUP
.SKP018A ANOP  ,                                                    DBC
&P.MH    DS    AL3 -          ADDRESS OF MESSAGE HANDLER FOR THIS LINE
*                             GROUP
         DS    FL1 -          DCBINTVL - NUMBER OF SECONDS OF
*                             INVITATION DELAY
&P.PCI   DS    BL1 -          PROGRAM CONTROLLED INTERRUPTION HANDLING
         AIF   (&#DCBSW(018)).SKP018B                               DBC
DCBPCIX1 EQU   BIT0 -         PCI=(X,)                       ICBI DCB-8
DCBPCIX2 EQU   BIT1 -         PCI=(,X)                       ICBI DCB-8
DCBPCIA1 EQU   BIT2 -         PCI=(A,)
DCBPCIA2 EQU   BIT3 -         PCI=(,A)
DCBPCIN1 EQU   BIT4 -         PCI=(N,)
DCBPCIN2 EQU   BIT5 -         PCI=(,N)
DCBPCIR1 EQU   BIT6 -         PCI=(R,)
DCBPCIR2 EQU   BIT7 -         PCI=(,R)
.SKP018B ANOP  ,                                                    DBC
         AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQX OR        *
               &DSORGCQ OR &DSORGQS OR &DSORGBS OR &DSORGXE).C5B2
&LSW(019) SETB (1)                                                  DBC
&P       #DSORG                                                     DBC
         AGO   .C5B3
.C5B2    ANOP
&LSW(020) SETB (1)                                                  DBC
         DS    0BL2 -         DCBDSORG - DATA SET ORGANIZATION
         DS    BL1 -          DCBDSRG1 - FIRST BYTE OF DCBDSORG
         DS    BL1 -          DCBDSRG2 - SECOND BYTE OF DCBDSORG
.C5B3    ANOP
&P.BUFMA DS    FL1 -          MAXIMUM NUMBER OF BUFFERS TO BE USED FOR
*                             DATA TRANSFER FOR EACH LINE IN THIS GROUP
         SPACE 1
.C5B1    AIF   (NOT (&DSORGQX OR &DSORGTX)).C6
&LSW(021) SETB (1)                                                  DBC
*                       QTAM LINE GROUP INTERFACE
         SPACE 1
         ORG   &P.DCB+20
&P.CLPS  DS    0A -           ADDRESS OF LINE PROCEDURE SPECIFICATION
*                             ROUTINE
&P.BUFRQ DS    FL1 -          NUMBER OF BUFFERS REQUESTED FOR A READ
*                             OR WRITE OPERATION
&P.CLPSA DS    AL3 -          SAME AS DCBCLPS ABOVE
&P.INTVL DS    FL1 -          NUMBER OF SECONDS OF INTENTIONAL DELAY
*                             BETWEEN PASSES THROUGH A POLLING LIST
*                             FOR NONSWITCHED LINES
         DS    X -            RESERVED
         AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQS OR        *
               &DSORGBS OR &DSORGXE OR &DSORGTX).C5C
&LSW(022) SETB (1)                                                  DBC
&P       #DSORG                                                     DBC
&P.IOBAD DS    0A -           ADDRESS OF FIRST IOB
&P.DEVTP DS    AL1 -          DEVICE TYPE POINTER
&P.IOBAA DS    AL3 -          ADDRESS OF FIRST IOB
&P.LCBAD DS    0A -           BASE FOR ADDRESSING LCB'S (BASE = ADDRESS
*                             OF FIRST LCB MINUS LENGTH OF ONE LCB)
&P.CPRI  DS    BL1 -          COMMUNICATION PRIORITY BITS
         AIF   (&#DCBSW(22) OR &#DCBSW(23)).SKP022A                 DBC
DCBCPR   EQU   BIT5 -         RECEIVING HAS PRIORITY
DCBCPE   EQU   BIT6 -         RECEIVING AND SENDING HAVE EQUAL PRIORITY
DCBCPS   EQU   BIT7 -         SENDING HAS PRIORITY
.SKP022A ANOP  ,                                                    DBC
&P.LCBA  DS    AL3 -          SAME AS DCBLCBAD ABOVE
&P.EXLST DS    0A -           ADDRESS OF EXIT LIST
&P.EIOBX DS    FL1 -          EXTENDED IOB INDEX.  SIZE OF LCB.
&P.EXLSA DS    AL3 -          ADDRESS OF EXIT LIST
         SPACE 1
         AGO   .C6
.C5C     ANOP
&LSW(023) SETB (1)                                                  DBC
         DS    0BL2 -         DCBDSORG - DATA SET ORGANIZATION
         DS    BL1 -          DCBDSRG1 - FIRST BYTE OF DCBDSORG
         DS    BL1 -          DCBDSRG2 - SECOND BYTE OF DCBDSORG
         AIF   (NOT &DSORGTX).C5C1
&LSW(024) SETB (1)                                                  DBC
         AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGCQ OR        *
               &DSORGQS OR &DSORGBS OR &DSORGXE).C5C1
&LSW(025) SETB (1)                                                  DBC
&P.IOBAD DS    0A -           ADDRESS OF FIRST IOB
&P.DEVTP DS    AL1 -          DEVICE TYPE POINTER
&P.IOBAA DS    AL3 -          ADDRESS OF FIRST IOB
         SPACE 1
         AGO   .C5C2
.C5C1    ANOP
&LSW(026) SETB (1)                                                  DBC
&P.DEVTP DS    AL1 -          DEVICE TYPE POINTER
         DS    AL3 -          DCBIOBAA - ADDRESS OF FIRST IOB
         SPACE 1
.C5C2    AIF   (NOT &DSORGTX).C5D
&LSW(027) SETB (1)                                                  DBC
         ORG   &P.DCB+32
&P.TRANA DS    0A -           ADDRESS OF TRANSLATION TABLE
         DS    BL1 -          DCBCPRI - COMMUNICATION PRIORITY BITS
&P.TRANS DS    AL3 -          ADDRESS OF TRANSLATION TABLE
         SPACE 1
.C5D     ANOP
         ORG   &P.DCB+32
&P.LCBAD DS    0A -           BASE FOR ADDRESSING LCB'S (BASE = ADDRESS
*                             OF FIRST LCB MINUS LENGTH OF ONE LCB)
&P.CPRI  DS    BL1 -          COMMUNICATION PRIORITY BITS
         AIF   (&#DCBSW(22) OR &#DCBSW(23)).SKP023A                 DBC
DCBCPR   EQU   BIT5 -         RECEIVING HAS PRIORITY
DCBCPE   EQU   BIT6 -         RECEIVING AND SENDING HAVE EQUAL PRIORITY
DCBCPS   EQU   BIT7 -         SENDING HAS PRIORITY
.SKP023A ANOP  ,                                                    DBC
&P.LCBA  DS    AL3 -          SAME AS DCBLCBAD ABOVE
         AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQS OR        *
               &DSORGBS OR &DSORGXE).C5E
&LSW(028) SETB (1)                                                  DBC
&P.EXLST DS    0A -           ADDRESS OF EXIT LIST
&P.EIOBX DS    FL1 -          EXTENDED IOB INDEX.  SIZE OF LCB
&P.EXLSA DS    AL3 -          ADDRESS OF EXIT LIST
         SPACE 1
         AGO   .C6
.C5E     ANOP
&LSW(029) SETB (1)                                                  DBC
&P.EIOBX DS    FL1 -          EXTENDED IOB INDEX.  SIZE OF LCB.
         DS    AL3 -          DCBEXLSA - ADDRESS OF EXIT LIST
         SPACE 1
.C6      AIF   (NOT (&DSORGMQ OR &DSORGTQ)).C7
&LSW(030) SETB (1)                                                  DBC
*                       QTAM PROBLEM PROGRAM MESSAGE QUEUE INTERFACE
         SPACE 1
         ORG   &P.DCB+20
&P.TRMAD DS    0A -           ADDRESS OF USER-PROVIDED AREA IN WHICH
*                             THE TERMINAL NAME IS STORED
         AIF   (&DSORGQX OR &DSORGTX).C6A
&LSW(031) SETB (1)                                                  DBC
&P.BUFRQ DS    FL1 -          NUMBER OF BUFFERS TO BE FILLED FROM THE
*                             DIRECT ACCESS QUEUE
         AGO   .C6B
.C6A     ANOP
&LSW(032) SETB (1)                                                  DBC
         DS    FL1 -          DCBBUFRQ - NUMBER OF BUFFERS TO BE FILLED
*                             FROM THE DIRECT ACCESS QUEUE
.C6B     ANOP
&P.TRMA  DS    AL3 -          SAME AS DCBTRMAD ABOVE
&P.SOWA  DS    H -            SIZE OF USER-PROVIDED WORK AREA
         AIF   (&DSORGIS OR &DSORGBX OR &DSORGDA OR &DSORGQX OR        *
               &DSORGQS OR &DSORGBS OR &DSORGXE OR &DSORGTX).C6C
&LSW(033) SETB (1)                                                  DBC
&P       #DSORG                                                     DBC
&P.IOBAD DS    0A -           BEFORE OPEN - ADDRESS OF AVT  ---
*                             AFTER OPEN - BASE FOR ADDRESSING IOB'S
*                             (BASE = ADDRESS OF FIRST IOB MINUS LENGTH
*                             OF ONE IOB)
         DS    FL1 -          DCBBUFMA - MAXIMUM NUMBER OF BUFFERS TO
*                             BE USED FOR DATA TRANSFER FOR EACH LINE
*                             IN THIS GROUP
&P.IOBAA DS    AL3 -          SAME AS DCBIOBAD ABOVE
         AGO   .C6D
.C6C     ANOP
&LSW(034) SETB (1)                                                  DBC
         DS    0BL2 -         DCBDSORG - DATA SET ORGANIZATION
         DS    BL1 -          DCBDSRG1 - FIRST BYTE OF DCBDSORG
         DS    BL1 -          DCBDSRG2 - SECOND BYTE OF DCBDSORG
         DS    A -            DCBIOBAD - BASE FOR ADDRESSING IOB'S
.C6D     ANOP
         SPACE 1
         ORG   &P.DCB+28
&P.SEGAD DS    A -            ADDRESS OF CURRENT SEGMENT
         AIF   (NOT &DSORGTQ).C6D1
&LSW(035) SETB (1)                                                  DBC
&P.THRES DS    FL1 -          FOR NON-REUSABLE MESSAGE QUEUE RECORDS,
*                             PERCENTAGE OF NON-REUSABLE DISK MESSAGE
*                             QUEUE RECORDS TO BE USED BEFORE A FLUSH
*                             CLOSEDOWN OF THE SYSTEM IS INITIATED.
*                             FOR REUSABLE MESSAGE QUEUE RECORDS AND
*                             CHECKPOINT RECORDS, THIS FIELD IS
*                             RESERVED
         AGO   .C6D2
.C6D1    ANOP
&LSW(036) SETB (1)                                                  DBC
         DS    X -            RESERVED
.C6D2    ANOP
         SPACE 1
         AIF   (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS OR        *
               &DSORGXE).C7
&LSW(037) SETB (1)                                                  DBC
         ORG   &P.DCB+32
&P.EODAD DS    A -            ADDRESS OF USER-PROVIDED ROUTINE
         AIF   (&DSORGBX OR &DSORGQX OR &DSORGTX).C6E
&LSW(038) SETB (1)                                                  DBC
&P.EXLST DS    0A -           ADDRESS OF EXIT LIST
         AGO   .C6F
.C6E     ANOP
&LSW(039) SETB (1)                                                  DBC
         DS    0A -           DCBEXLST - ADDRESS OF EXIT LIST
.C6F     ANOP
&P.RECFM DS    C -            RECORD FORMAT
         AIF   (&#DCBSW(037)).SKP037A                               DBC
DCBRECR  EQU   X'02' -        RECORD
DCBRECG  EQU   X'04' -        MESSAGE
DCBRECS  EQU   X'08' -        SEGMENT
.SKP037A ANOP  ,                                                    DBC
         AIF   (&DSORGBX OR &DSORGQX OR &DSORGTX).C6G
&LSW(040) SETB (1)                                                  DBC
&P.EXLSA DS    AL3 -          ADDRESS OF EXIT LIST
         AGO   .C7
.C6G     ANOP
&LSW(041) SETB (1)                                                  DBC
         DS    AL3 -          DCBEXLSA - ADDRESS OF EXIT LIST
.C7      ANOP
         SPACE 1
         AIF   (NOT &DSORGCQ OR (&DSORGIS OR &DSORGBX OR &DSORGDA OR   *
               &DSORGQX OR &DSORGQS OR &DSORGBS OR &DSORGXE)).C8
&LSW(042) SETB (1)                                                  DBC
*                       QTAM DIRECT ACCESS MESSAGE QUEUE
         SPACE 1
         ORG   &P.DCB+20
&P.BUFCB DS    0A -           ADDRESS OF TERMINAL TABLE
&P.BUFNO DS    X -            RESERVED
&P.BUFCA DS    AL3 -          ADDRESS OF TERMINAL TABLE
&P.BUFL  DS    H -            SIZE OF THE DATA IN BUFFER EQUATED TO
*                             IECKBUFL
&P       #DSORG                                                     DBC
&P.IOBAD DS    A -            ADDRESS OF IOB
         SPACE 1
.C8      ANOP                                                    S22024
         AIF   (NOT &DSORGTR).C8A7                               S22024
&LSW(043) SETB (1)                                                  DBC
         ORG   &P.DCB+20                                         S22024
&P.DUMPD DS    0A             FULL WORD LABEL                    S22024
&P.UNITN DS    BL1            NUMBER OF UNITS FOR READ FOLLOWING S22024
*                             ATTENTION.                         S22024
&P.DUMPA DS    AL3            ADDRESS OF THE DCB USED FOR        S22024
*                             DUMPING THE 3705                   S22024
         DS    AL1            RESERVED                           S22024
&P.TRSTA DS    BL1            STATUS BYTE. WHEN SET TO 1,        S22024
*                             THE INDICATORS HAVE THE SPECIFIED  S22024
*                             MEANING                            S22024
         AIF   (&#DCBSW(043)).SKP043A                               DBC
DCBAUTOI EQU   BIT0           IPLAUTO=YES WAS SPECIFIED IN THE   S22024
*                             DCB                                S22024
DCBAUTOD EQU   BIT1           DMPAUTO=YES WAS SPECIFIED IN THE   S22024
*                             DCB MACRO.                         S22024
DCBINITL EQU   BIT2           BRINGUP=YES WAS SPECIFIED IN THE   S22024
*                             DCB MACRO.                         S22024
DCBRSTRT EQU   BIT3           RESTART IS IN PROCESS              S22024
DCBIPLED EQU   BIT4           3705 HAS BEEN IPL'D.               S22024
DCBBAKUP EQU   BIT5           BACKUP=YES WAS SPECIFIED IN THE    S22024
*                             DCB MACRO.                         S22024
DCBNIDLE EQU   BIT6           IDLE=NO WAS SPECIFIED IN THE OPEN  S22024
*                             MACRO OR WAS IMPLIED BY DEFAULT    S22024
DCBCHNGL EQU   BIT7           IPL TEXT HAS BEEN CHANGED          S22024
.SKP043A ANOP  ,                                                    DBC
         AIF   (NOT &DSORGTR OR (&DSORGCQ OR &DSORGIS OR &DSORGBX OR   *
               &DSORGDA OR &DSORGQX OR &DSORGQS OR &DSORGBS OR         *
               &DSORGXE OR &DSORGMQ OR &DSORGTQ OR &DSORGTX)).C8A0
&LSW(044) SETB (1)                                                  DBC
&P.DSORG DS    0BL2           DATA SET ORGANIZATION BEING USED   S22024
&P.DSRG1 DS    BL1            FIRST BYTE OF DCBDSORG             S22024
&P.DSRG2 DS    BL1            SECOND BYTE OF DCBDSORG            S22024
         AIF   (&#DCBDSG OR &#DCBSW(44)).SKP044A                    DBC
DCBDSGTR EQU   BIT5           DSORG=TR SPECIFIED                 S22024
&P.IOBAD DS    A              ADDRESS OF IOB                     S22024
.SKP044A ANOP  ,                                                    DBC
         AGO   .C8A1                                             S22024
.C8A0    ANOP                                                    S22024
&LSW(045) SETB (1)                                                  DBC
         DS    H              DCBDSORG                           S22024
         DS    A              DCBIOBAD                           S22024
.C8A1    ANOP                                                    S22024
&P.RNCKD DS    0A             FULL WORD LABEL                    S22024
         DS    BL1            RESERVED                           S22024
&P.RNCKA DS    AL3            ADDRESS OF THE DCB USED TO RETAIN  S22024
*                             INCIDENT CHECKPOINT RECORDS        S22024
*                             GENERATED BY THE 3705.             S22024
         AIF   (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS OR        *
               &DSORGXE OR &DSORGBX OR &DSORGQX OR &DSORGTX OR         *
               &DSORGMQ OR &DSORGTQ).C8A2                        S22024
&LSW(046) SETB (1)                                                  DBC
&P.EXLST DS    0A             FULL WORD LABEL FOR EXLIST         S22024
         AGO   .C8A3                                             S22024
.C8A2    ANOP                                                    S22024
&LSW(047) SETB (1)                                                  DBC
         DS    0A             DCBEXLST                           S22024
.C8A3    ANOP                                                    S22024
         AIF   (&DSORGBX OR &DSORGQX OR &DSORGTX).C8A4           S22024
&LSW(048) SETB (1)                                                  DBC
&P.EIOBX DS    BL1            SIZE, IN BYTES, OF THE IOB.        S22024
         AGO   .C8A5                                             S22024
.C8A4    ANOP                                                    S22024
&LSW(049) SETB (1)                                                  DBC
         DS    BL1            DCBEIOBX                           S22024
.C8A5    ANOP                                                    S22024
         AIF   (&DSORGBX OR &DSORGQX OR &DSORGTX OR &DSORGIS OR        *
               &DSORGDA OR &DSORGQS OR &DSORGBS OR &DSORGXE  OR        *
               &DSORGMQ OR &DSORGTQ).C8A6                        S22024
&LSW(050) SETB (1)                                                  DBC
&P.EXLSA DS    AL3            ADDRESS OF THE EXIT LIST.          S22024
         AGO   .C8A7                                             S22024
.C8A6    ANOP                                                    S22024
&LSW(051) SETB (1)                                                  DBC
         DS    AL3            DCBEXLSA                           S22024
.C8A7    AIF   (&DSORGLR AND NOT (&DSORGIS OR &DSORGBX OR &DSORGDA OR  *
               &DSORGQX OR &DSORGCQ OR &DSORGMQ OR &DSORGXA OR         *
               &DSORGQS OR &DSORGBS OR &DSORGXE OR &DSORGTR)).CF
&LSW(052) SETB (1)                                                  DBC
*                       FOUNDATION BEFORE OPEN
         SPACE 1
         ORG   &P.DCB+40
&P.DDNAM DS    CL8 -          NAME ON THE DD STATEMENT WHICH DEFINES
*                             THE DATA SET ASSOCIATED WITH THIS DCB
&P.OFLGS DS    BL1 -          FLAGS USED BY OPEN ROUTINE
         AIF   (&#DCBSW(052)).SKP052A                               DBC
DCBOFLWR EQU   BIT0 -         IF ZERO, LAST I/O OPERATION WAS READ OR
*                             POINT.  IF ONE, LAST I/O OPERATION WAS
*                             WRITE.
DCBOFIOD EQU   BIT0 -         DATA SET IS BEING OPENED FOR INPUT OR
*                             OUTPUT (BDAM)
DCBOFLRB EQU   BIT1 -         LAST I/O OPERATION WAS IN READ BACKWARD
*                             MODE
         AIF   (&#DCBSW(108)).SKP052A                               DBC
DCBOFEOV EQU   BIT2 -         SET TO 1 BY EOV WHEN IT CALLS CLOSE
*                             ROUTINE FOR CONCATENATION OF DATA SETS
*                             WITH UNLIKE ATTRIBUTES
DCBOFOPN EQU   BIT3 -         AN OPEN HAS BEEN SUCCESSFULLY COMPLETED
DCBOFPPC EQU   BIT4 -         SET TO 1 BY PROBLEM PROGRAM TO INDICATE A
*                             CONCATENATION OF UNLIKE ATTRIBUTES
DCBOFTM  EQU   BIT5 -         TAPE MARK HAS BEEN READ
DCBOFUEX EQU   BIT6 -         SET TO 0 BY AN I/O SUPPORT FUNCTION WHEN
*                             THAT FUNCTION TAKES A USER EXIT. SET TO 1
*                             ON RETURN FROM USER EXIT TO THE I/O
*                             SUPPORT FUNCTION WHICH TOOK THE EXIT.
DCBOFIOF EQU   BIT7 -         SET TO 1 BY AN I/O SUPPORT FUNCTION IF
*                             DCB IS TO BE PROCESSED BY THAT FUNCTION
.SKP052A ANOP  ,                                                    DBC
&P.IFLG  DS    BL1 -          FLAGS USED BY IOS IN COMMUNICATING ERROR
*                             CONDITIONS AND IN DETERMINING CORRECTIVE
*                             PROCEDURES
         AIF   (&#DCBSW(052)).SKP052B                               DBC
DCBIBEC  EQU   BIT0+BIT1 -    ERROR CORRECTION INDICATOR
DCBIFNEP EQU   X'00' -        NOT IN ERROR PROCEDURE
DCBEX    EQU   BIT1           ERROR CORRECTION OR IOS PAGE FIX IN
*                             PROCESS
DCBIFPEC EQU   BIT0+BIT1 -    PERMANENT ERROR CORRECTION
DCBIBPCT EQU   BIT2+BIT3 -    PRINTER CARRIAGE TAPE PUNCH INDICATOR
DCBIFC9  EQU   BIT2 -         CHANNEL 9 PRINTER CARRIAGE TAPE PUNCH
*                             SENSED
DCBIFC12 EQU   BIT3 -         CHANNEL 12 PRINTER CARRIAGE TAPE PUNCH
*                             SENSED
DCBIBIOE EQU   BIT4+BIT5 -    IOS ERROR ROUTINE USE INDICATOR
DCBIFER  EQU   X'00' -        ALWAYS USE I/O SUPERVISOR ERROR ROUTINE
DCBIFNE1 EQU   BIT5 -         NEVER USE I/O SUPERVISOR ERROR ROUTINE
DCBIFTIM EQU   BIT5 -         TEST IOS MASK (IMSK) FOR ERROR PROCEDURE
*                             (BTAM)
DCBIFNE2 EQU   BIT4 -         NEVER USE I/O SUPERVISOR ERROR ROUTINE
DCBIFNE3 EQU   BIT4+BIT5 -    NEVER USE I/O SUPERVISOR ERROR ROUTINE
.SKP052B ANOP  ,                                                    DBC
&P.MACR  DS    0BL2 -         MACRO INSTRUCTION REFERENCE
&P.MACR1 DS    BL1 -          FIRST BYTE OF DCBMACR
         AIF   (&#DCBSW(052)).SKP052E                               DBC
DCBMRECP EQU   BIT0 -         EXECUTE CHANNEL PROGRAM (EXCP) ---
*                             ALWAYS ZERO (BSAM, QSAM, BPAM, BISAM,
*                             QISAM, BDAM) --- RESERVED (QTAM, BTAM)
DCBMRFE  EQU   BIT1 -         FOUNDATION EXTENSION IS PRESENT (EXCP)
DCBMRGET EQU   BIT1 -         GET (QSAM, QISAM, TCAM)
DCBMRPTQ EQU   BIT1 -         PUT FOR MESSAGE GROUP (QTAM) ---
*                             ALWAYS ZERO (BSAM, BPAM, BISAM, BDAM) ---
*                             RESERVED (BTAM)
DCBMRAPG EQU   BIT2 -         APPENDAGES ARE REQUIRED (EXCP)
         AIF   (&#DCBSW(108)).SKP052C                               DBC
DCBMRRD  EQU   BIT2 -         READ (BSAM, BPAM, BISAM, BDAM, BTAM)
.SKP052C ANOP  ,                                                    DBC
DCBMRWRQ EQU   BIT2 -         WRITE FOR LINE GROUP (QTAM) ---
*                             ALWAYS ZERO (QSAM, QISAM)
DCBMRCI  EQU   BIT3 -         COMMON INTERFACE (EXCP)
DCBMRMVG EQU   BIT3 -         MOVE MODE OF GET (QSAM, QISAM)
DCBMRRDK EQU   BIT3 -         KEY SEGMENT WITH READ (BDAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (BSAM, BPAM, QTAM, BTAM)
DCBMRLCG EQU   BIT4 -         LOCATE MODE OF GET (QSAM, QISAM)
DCBMRRDI EQU   BIT4 -         ID ARGUMENT WITH READ (BDAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (EXCP, BSAM, BPAM, QTAM, BTAM)
DCBMRABC EQU   BIT5 -         USER'S PROGRAM MAINTAINS ACCURATE BLOCK
*                             COUNT (EXCP)
DCBMRPT1 EQU   BIT5 -         POINT (WHICH IMPLIES NOTE) (BSAM, BPAM)
DCBMRSBG EQU   BIT5 -         SUBSTITUTE MODE OF GET (QSAM)
DCBMRDBF EQU   BIT5 -         DYNAMIC BUFFERING (BISAM, BDAM) ---
*                             ALWAYS ZERO (QISAM) ---
*                             RESERVED (QTAM, BTAM)
DCBPGFXA EQU   BIT6 -         PAGE FIX APPENDAGE IS SPECIFIED (EXCP)
         AIF   (&#DCBSW(108)).SKP052D                               DBC
DCBMRCRL EQU   BIT6 -         CNTRL (BSAM, QSAM)
.SKP052D ANOP  ,                                                    DBC
DCBMRCHK EQU   BIT6 -         CHECK (BISAM)
DCBMRRDX EQU   BIT6 -         READ EXCLUSIVE (BDAM) ---
*                             RESERVED (BPAM, QISAM, QTAM, BTAM)
DCBMRDMG EQU   BIT7 -         DATA MODE OF GET (QSAM)
DCBMRCK  EQU   BIT7 -         CHECK (BDAM) --- RESERVED (EXCP, BSAM,
*                             BPAM, BISAM, QISAM, QTAM, BTAM)
.SKP052E ANOP  ,                                                    DBC
&P.MACR2 DS    BL1 -          SECOND BYTE OF DCBMACR
         AIF   (&#DCBSW(052)).SKP052H                               DBC
DCBMRSTL EQU   BIT0 -         SETL (QISAM) --- ALWAYS ZERO (BSAM, QSAM,
*                             BPAM, BISAM, BDAM) ---
*                             RESERVED (EXCP, QTAM, BTAM)
DCBMRPUT EQU   BIT1 -         PUT (QSAM, TCAM) - PUT OR PUTX (QISAM)
DCBMRGTQ EQU   BIT1 -         GET FOR MESSAGE GROUP (QTAM) ---
*                             ALWAYS ZERO (BSAM, BPAM, BISAM, BDAM) ---
*                             RESERVED (EXCP, BTAM)
         AIF   (&#DCBSW(108)).SKP052F                               DBC
DCBMRWRT EQU   BIT2 -         WRITE (BSAM, BPAM, BISAM, BDAM, BTAM)
.SKP052F ANOP  ,                                                    DBC
DCBMRRDQ EQU   BIT2 -         READ FOR LINE GROUP (QTAM) ---
*                             ALWAYS ZERO (QSAM, QISAM) ---
*                             RESERVED (EXCP)
DCBMRMVP EQU   BIT3 -         MOVE MODE OF PUT (QSAM, QISAM)
DCBMRWRK EQU   BIT3 -         KEY SEGMENT WITH WRITE (BDAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (EXCP, BSAM, BPAM, QTAM, BTAM)
DCBMR5WD EQU   BIT4 -         FIVE-WORD DEVICE INTERFACE (EXCP)
DCBMRLDM EQU   BIT4 -         LOAD MODE BSAM (CREATE BDAM DATA SET)
*                             (BSAM)
DCBMRLCP EQU   BIT4 -         LOCATE MODE OF PUT (QSAM, QISAM)
DCBMRIDW EQU   BIT4 -         ID ARGUMENT WITH WRITE (BDAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (BPAM, QTAM, BTAM)
DCBMR4WD EQU   BIT5 -         FOUR-WORD DEVICE INTERFACE (EXCP)
DCBMRPT2 EQU   BIT5 -         POINT (WHICH IMPLIES NOTE) (BSAM, BPAM)
DCBMRTMD EQU   BIT5 -         SUBSTITUTE MODE (QSAM)
DCBMRUIP EQU   BIT5 -         UPDATE IN PLACE (PUTX) (QISAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (BDAM, QTAM, BTAM)
DCBMR3WD EQU   BIT6 -         THREE-WORD DEVICE INTERFACE (EXCP)
         AIF   (&#DCBSW(108)).SKP052G                               DBC
DCBMRCTL EQU   BIT6 -         CNTRL (BSAM, QSAM)
.SKP052G ANOP  ,                                                    DBC
DCBMRSTK EQU   BIT6 -         SETL BY KEY (QISAM)
DCBMRAWR EQU   BIT6 -         ADD TYPE OF WRITE (BDAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (BPAM, QTAM, BTAM)
DCBMR1WD EQU   BIT7 -         ONE-WORD DEVICE INTERFACE (EXCP)
DCBMRSWA EQU   BIT7 -         USER'S PROGRAM HAS PROVIDED A SEGMENT
*                             WORK AREA POOL (BSAM CREATE BDAM, BDAM)
DCBMRDMD EQU   BIT7 -         DATA MODE (QSAM)
DCBMRSTI EQU   BIT7 -         SETL BY ID (QISAM) ---
*                             ALWAYS ZERO (BISAM) ---
*                             RESERVED (BPAM, QTAM, BTAM)
.SKP052H ANOP  ,                                                    DBC
         SPACE 1
*                       FOUNDATION AFTER OPEN
         SPACE 1
         ORG   &P.DCB+40
&P.TIOT  DS    H -            OFFSET FROM TIOT ORIGIN TO TIOELNGH FIELD
*                             IN TIOT ENTRY FOR DD STATEMENT ASSOCIATED
*                             WITH THIS DCB
&P.MACRF DS    0BL2 -         SAME AS DCBMACR BEFORE OPEN
&P.MACF1 DS    BL1 -          FIRST BYTE OF DCBMACRF
&P.MACF2 DS    BL1 -          SECOND BYTE OF DCBMACRF
&P.DEBAD DS    0A -           ADDRESS OF ASSOCIATED DEB
&P.IFLGS DS    BL1 -          SAME AS DCBIFLG BEFORE OPEN
         AIF   (&#DCBSW(052)).SKP052I                               DBC
DCBIFEC  EQU   BIT0+BIT1 -    ERROR CORRECTION INDICATOR
DCBIFPCT EQU   BIT2+BIT3 -    PRINTER CARRIAGE TAPE PUNCH INDICATOR
DCBIFIOE EQU   BIT4+BIT5 -    IOS ERROR ROUTINE USE INDICATOR
.SKP052I ANOP  ,                                                    DBC
&P.DEBA  DS    AL3 -          ADDRESS OF ASSOCIATED DEB
         SPACE 1
         AIF   (NOT (&DSORGBX OR &DSORGDA OR &DSORGQX OR &DSORGBS)).C8A
&LSW(053) SETB (1)                                                  DBC
         ORG   &P.DCB+48
&P.READ  DS    0A -           ADDRESS OF READ MODULE
&P.WRITE DS    A -            ADDRESS OF WRITE MODULE
         SPACE 1
.C8A     AIF   (NOT (&DSORGIS OR &DSORGQX OR &DSORGMQ OR &DSORGQS OR   *
               &DSORGTR)).C8B                                    S22024
&LSW(054) SETB (1)                                                  DBC
         ORG   &P.DCB+48
&P.GET   DS    0A -           ADDRESS OF GET MODULE
&P.PUT   DS    A -            ADDRESS OF PUT MODULE
         SPACE 1
.C8B     ANOP
         AIF   (NOT (&DSORGTX OR &DSORGTR)).C8B1
&LSW(055) SETB (1)                                                  DBC
*                       TCAM LINE GROUP EXTENSION
*                       3705 EXTENSION
         SPACE 1
         ORG   &P.DCB+48
&P.SCTAB DS    0A -           ADDRESS OF SPECIAL CHARACTERS TABLE (SCT)
         DS    BL1 -          DCBOFLGS - FLAGS USED BY OPEN ROUTINE
&P.SCTAD DS    AL3 -          ADDRESS OF SPECIAL CHARACTERS TABLE (SCT)
&P.ILCT  DS    FL1 -          COUNT OF INVITATION LISTS
&P.UNTCT DS    FL1 -          BEFORE OPEN - NUMERICAL VALUE OF SCT.
*                             AFTER OPEN - COUNT OF UNITS FOR 1 BUFFER.
&P.BUFSI DS    H -            SIZE OF ALL BUFFERS USED FOR THIS LINE
*                             GROUP
         AIF   (NOT &DSORGTX).C8B1                               S22024
&LSW(056) SETB (1)                                                  DBC
&P.RESER DS    0CL4 -         NUMBER OF RESERVED BYTES IN BUFFERS
&P.RESB1 DS    FL1 -          NUMBER OF BYTES RESERVED IN THE BUFFER
*                             RECEIVING FIRST INCOMING SEGMENT OF A
*                             MESSAGE
&P.RESB2 DS    FL1 -          NUMBER OF BYTES RESERVED IN ALL BUFFERS
*                             EXCEPT THE ONE CONTAINING FIRST SEGMENT
*                             OF A MESSAGE
         DS    XL2 -          RESERVED
         SPACE 1
*        THE FOLLOWING 4 BYTES MAY BE REPEATED 'N' TIMES
&P.INVLI DS    0A -           ADDRESS OF INVITATION LIST
&P.INVCI DS    BL1 -          TYPE OF COMMUNICATION INTERFACE FOR 2701
*                             DATA ADAPTER UNIT
         AIF   (&#DCBSW(056)).SKP056A                               DBC
DCBINVB1 EQU   BIT2 -         IF ZERO, UNIT (A,)
*                             IF ONE, UNIT (B,)
DCBINVB2 EQU   BIT4 -         IF ZERO, UNIT (,A)
*                             IF ONE, UNIT (,B)
.SKP056A ANOP  ,                                                    DBC
&P.INVLA DS    AL3 -          ADDRESS OF INVITATION LIST
         SPACE 1
.C8B1    ANOP
         AIF   (NOT (&DSORGXA OR &DSORGXE)).C9
&LSW(057) SETB (1)                                                  DBC
*                       EXCP WITH EXTENSION OR APPENDAGES
         SPACE 1
         ORG   &P.DCB+52
         AIF   (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS).C8C
&LSW(058) SETB (1)                                                  DBC
&P.OPTCD DS    BL1 -          OPTION CODES
         AGO   .C8D
.C8C     ANOP
&LSW(059) SETB (1)                                                  DBC
         DS    BL1 -          DCBOPTCD - OPTION CODES
.C8D     ANOP
         AIF   (&DSORGQS OR &DSORGBS).C8E
&LSW(060) SETB (1)                                                  DBC
         AIF   (&#DCBSW(60) OR &#DCBSW(83)).SKP060A                 DBC
DCBOPTZ  EQU   BIT5 -         MAGNETIC TAPE DEVICES - USE REDUCED ERROR
*                             RECOVERY PROCEDURE (EXCP, BSAM, BPAM,
*                             QSAM)
DCBSRCHD EQU   BIT5 -         USE SEARCH DIRECT, INSTEAD OF SEARCH
*                             PREVIOUS, ON RECORD POSITION SENSING
*                             DEVICE  (EXCP, BSAM, BPAM, QSAM)   ICB217
.SKP060A ANOP  ,                                                    DBC
.C8E     ANOP
         DS    XL7 -          RESERVED
         SPACE 1
         AIF   (NOT &DSORGXA).C9
&LSW(061) SETB (1)                                                  DBC
*                       EXCP APPENDAGE LIST
         SPACE 1
         ORG   &P.DCB+60
&P.EOEA  DS    CL2 -          END OF EXTENT APPENDAGE ID
&P.PCIA  DS    CL2 -          PROGRAM CONTROLLED INTERRUPTION
*                             APPENDAGE ID
&P.SIOA  DS    CL2 -          START I/O APPENDAGE ID
&P.CENDA DS    CL2 -          CHANNEL END APPENDAGE ID
&P.XENDA DS    CL2 -          ABNORMAL END APPENDAGE ID
         DS    XL2 -          RESERVED
         SPACE 1
.C9      AIF   (NOT &DSORGIS).CA
&LSW(062) SETB (1)                                                  DBC
*                       BISAM-QISAM INTERFACE
         SPACE 1
         ORG   &P.DCB+52
&P.OPTCD DS    BL1 -          OPTION CODES
         AIF   (&DSORGQS OR &DSORGBS).C9A
&LSW(063) SETB (1)                                                  DBC
         AIF   (&#DCBSW(63) OR &#DCBSW(68) OR &#DCBSW(38)).SKP063A  DBC
DCBOPTW  EQU   BIT0 -         WRITE VALIDITY CHECK (DASD)
*                             (BSAM, BPAM, QSAM, ISAM, BDAM)
.SKP063A ANOP  ,                                                    DBC
         AGO   .C9B
.C9A     ANOP
&LSW(064) SETB (1)                                                  DBC
*        BIT0 IS DCBOPTW - SAME AS BSAM
.C9B     ANOP
         AIF   (&#DCBSW(062)).SKP062A                               DBC
DCBOPTUF EQU   BIT1 -         FULL-TRACK INDEX WRITE
DCBOPTM  EQU   BIT2 -         MASTER INDEXES
DCBOPTI  EQU   BIT3 -         INDEPENDENT OVERFLOW AREA
DCBOPTY  EQU   BIT4 -         CYLINDER OVERFLOW AREA
DCBOPTL  EQU   BIT6 -         DELETE OPTION
DCBOPTR  EQU   BIT7 -         REORGANIZATION CRITERIA
.SKP062A ANOP  ,                                                    DBC
&P.MAC   DS    BL1 -          EXTENSION OF DCBMACRF FIELD FOR ISAM
         AIF   (&#DCBSW(062)).SKP062B                               DBC
DCBMACUR EQU   BIT4 -         UPDATE FOR READ
DCBMACUW EQU   BIT5 -         UPDATE TYPE OF WRITE
DCBMACAW EQU   BIT6 -         ADD TYPE OF WRITE
DCBMACRE EQU   BIT7 -         READ EXCLUSIVE
.SKP062B ANOP  ,                                                    DBC
&P.NTM   DS    FL1 -          NUMBER OF TRACKS THAT DETERMINE THE
*                             DEVELOPMENT OF A MASTER INDEX
*                             MAXIMUM PERMISSABLE VALUE - 99
&P.CYLOF DS    FL1 -          NUMBER OF TRACKS TO BE RESERVED ON EACH
*                             PRIME DATA CYLINDER FOR RECORDS THAT
*                             OVERFLOW FROM OTHER TRACKS ON THAT
*                             CYLINDER
&P.SYNAD DS    A -            ADDRESS OF USER'S SYNAD ROUTINE
&P.RKP   DS    H -            RELATIVE POSITION OF FIRST BYTE OF KEY
*                             WITHIN EACH LOGICAL RECORD
&P.BLKSI DS    H -            BLOCK SIZE
&P.LPDT  DS    0BL8 -         FOR RESUME LOAD,THE LAST PRIME DATA
*                             TRACK ON THE LAST PRIME DATA CYLINDER
*                             IN THE FORM MBBCCHHR.          ICBI DCB-5
&P.MSWA  DS    A -            ADDRESS OF MAIN STORAGE WORK AREA FOR USE
*                             BY CONTROL PROGRAM WHEN NEW RECORDS ARE
*                             BEING ADDED TO AN EXISTING DATA SET
&P.SMSI  DS    H -            NUMBER OF BYTES IN AREA RESERVED TO HOLD
*                             HIGHEST LEVEL INDEX
&P.SMSW  DS    H -            NUMBER OF BYTES IN WORK AREA USED BY
*                             CONTROL PROGRAM WHEN NEW RECORDS ARE
*                             BEING ADDED TO DATA SET
&P.MSHI  DS    0A -           ADDRESS OF MAIN STORAGE AREA TO HOLD
*                             HIGHEST LEVEL INDEX
&P.NCP   DS    FL1 -          NUMBER OF COPIES OF READ-WRITE (TYPE K)
*                             CHANNEL PROGRAMS THAT ARE TO BE
*                             ESTABLISHED FOR THIS DCB.  (99 MAXIMUM)
&P.MSHIA DS    AL3 -          SAME AS DCBMSHI ABOVE
&P.SETL  DS    A -            ADDRESS OF SETL MODULE FOR QISAM.
*                             ADDRESS OF CHECK MODULE FOR BISAM
&P.EXCD1 DS    BL1 -          FIRST BYTE IN WHICH EXCEPTIONAL
*                             CONDITIONS DETECTED IN PROCESSING DATA
*                             RECORDS ARE REPORTED TO THE USER
         AIF   (&#DCBSW(062)).SKP062C                               DBC
DCBEXNKY EQU   BIT0 -         LOWER KEY LIMIT NOT FOUND
DCBEXIDA EQU   BIT1 -         INVALID DEVICE ADDRESS FOR LOWER LIMIT
DCBEXNSP EQU   BIT2 -         SPACE NOT FOUND
DCBEXINV EQU   BIT3 -         INVALID REQUEST
DCBEXIER EQU   BIT4 -         UNCORRECTABLE INPUT ERROR
DCBEXOER EQU   BIT5 -         UNCORRECTABLE OUTPUT ERROR
DCBEXBLI EQU   BIT6 -         BLOCK COULD NOT BE REACHED (INPUT)
DCBEXBLU EQU   BIT7 -         BLOCK COULD NOT BE REACHED (UPDATE)
.SKP062C ANOP  ,                                                    DBC
&P.EXCD2 DS    BL1 -          SECOND BYTE IN WHICH EXCEPTIONAL
*                             CONDITIONS DETECTED IN PROCESSING DATA
*                             RECORDS ARE REPORTED TO THE USER
         AIF   (&#DCBSW(062)).SKP062D                               DBC
DCBEXSEQ EQU   BIT0 -         SEQUENCE CHECK
DCBEXDUP EQU   BIT1 -         DUPLICATE RECORD
DCBEXCLD EQU   BIT2 -         DCB CLOSED WHEN ERROR WAS DETECTED
DCBEXOFL EQU   BIT3 -         OVERFLOW RECORD
DCBEXLTH EQU   BIT4 -         FOR PUT - LENGTH FIELD OF RECORD LARGER
*                             THAN LENGTH INDICATED IN DCBLRECL
DCBEXRDE EQU   BIT4 -         READ EXCLUSIVE
.SKP062D ANOP  ,                                                    DBC
&P.LRECL DS    H -            FOR FIXED-LENGTH RECORD FORMATS, LOGICAL
*                             RECORD LENGTH.  FOR VARIABLE-LENGTH
*                             RECORD FORMATS, MAXIMUM LOGICAL RECORD
*                             LENGTH OR AN ACTUAL LOGICAL RECORD LENGTH
*                             CHANGED DYNAMICALLY BY USER WHEN CREATING
*                             THE DATA SET
&P.ESETL DS    A -            ADDRESS OF ESETL ROUTINE IN GET MODULE
&P.LRAN  DS    A -            ADDRESS OF READ-WRITE K MODULE OR
*                             EXCLUSIVE MODULE
&P.LWKN  DS    A -            ADDRESS OF WRITE KN MODULE
&P.RELSE DS    A -            WORK AREA FOR TEMPORARY STORAGE OF
*                             REGISTER CONTENTS
&P.PUTX  DS    A -            WORK AREA FOR TEMPORARY STORAGE OF
*                             REGISTER CONTENTS
&P.RELEX DS    A -            ADDRESS OF READ EXCLUSIVE MODULE
&P.FREED DS    A -            ADDRESS OF DYNAMIC BUFFERING MODULE
&P.HIRTI DS    FL1 -          NUMBER OF INDEX ENTRIES THAT FIT ON A
*                             PRIME DATA TRACK
&P.FTMI2 DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST
*                             TRACK OF SECOND LEVEL MASTER INDEX (IN
*                             THE FORM MBBCCHH)
&P.LEMI2 DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             ACTIVE ENTRY IN SECOND LEVEL MASTER INDEX
*                             (IN THE FORM CCHHR)
&P.FTMI3 DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST
*                             TRACK OF THIRD LEVEL MASTER INDEX (IN
*                             THE FORM MBBCCHH)
&P.LEMI3 DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             ACTIVE ENTRY IN THIRD LEVEL MASTER INDEX
*                             (IN THE FORM CCHHR)
&P.NLEV  DS    FL1 -          NUMBER OF LEVELS OF INDEX
&P.FIRSH DS    CL3 -          HHR OF FIRST DATA RECORD ON EACH
*                             CYLINDER.  FOR VARIABLE LENGTH RECORD
*                             PROCESSING, R PORTION OF THIS FIELD IS
*                             ALWAYS X'01'.
&P.HMASK DS    CL1 -          BYTE INDICATING 2301 OR NOT
         AIF   (&#DCBSW(062)).SKP062E                               DBC
DCBHMDRM EQU   X'07' -        DEVICE IS 2301 DRUM
DCBHMNDM EQU   X'FF' -        DEVICE IS OTHER THAN 2301 DRUM
.SKP062E ANOP  ,                                                    DBC
&P.LDT   DS    CL2 -          HH IS THE LAST PRIME DATA TRACK ON EACH
*                             CYLINDER
&P.HIRCM DS    CL1 -          HIGHEST POSSIBLE R FOR TRACKS OF THE
*                             CYLINDER AND MASTER INDICES
&P.HIRPD DS    CL1 -          HIGHEST R ON ANY PRIME TRACK IN DATA SET.
*                             FOR VARIABLE-LENGTH RECORDS, THIS
*                             REPRESENTS THE GREATEST NUMBER OF
*                             PHYSICAL RECORDS ON ANY PRIME TRACK IN
*                             THE DATA SET
&P.HIROV DS    CL1 -          FOR FIXED-LENGTH RECORD FORMAT, HIGHEST
*                             POSSIBLE R FOR OVERFLOW DATA TRACKS.  FOR
*                             VARIABLE-LENGTH RECORD FORMAT, UNUSED.
&P.HIRSH DS    CL1 -          FOR FIXED-LENGTH RECORD FORMAT, R OF LAST
*                             DATA RECORD ON A SHARED TRACK, IF
*                             APPLICABLE.  FOR VARIABLE-LENGTH RECORD
*                             FORMAT, UNUSED.
&P.TDC   DS    H -            USER-SUPPLIED NUMBER OF RECORDS TAGGED
*                             FOR DELETION.
&P.NCRHI DS    H -            NUMBER OF STORAGE LOCATIONS NEEDED TO
*                             HOLD THE HIGHEST LEVEL INDEX
&P.RORG3 DS    F -            FOR EACH USE OF DATA SET, NUMBER OF READ
*                             OR WRITE ACCESSES TO AN OVERFLOW RECORD
*                             WHICH IS NOT FIRST IN A CHAIN OF SUCH
*                             RECORDS
&P.NREC  DS    F -            NUMBER OF LOGICAL RECORDS IN PRIME DATA
*                             AREA
&P.ST    DS    BL1 -          STATUS INDICATORS
         AIF   (&#DCBSW(062)).SKP062F                               DBC
DCBSTSSM EQU   BIT0 -         SINGLE SCHEDULE MODE
DCBSTKSQ EQU   BIT1 -         KEY SEQUENCE CHECKING IS TO BE PERFORMED
DCBSTLOD EQU   BIT2 -         LOADING HAS COMPLETED.  SET TO 1 BY CLOSE
*                             ROUTINE AND TO 0 BY FIRST EXECUTION OF
*                             PUT ROUTINE.
DCBSTNCY EQU   BIT3 -         EXTENSION OF DATA SET WILL BEGIN ON NEW
*                             CYLINDER
DCBSTNMC EQU   BIT5 -         FIRST MACRO INSTRUCTION NOT YET RECEIVED
DCBSTLBF EQU   BIT6 -         LAST BLOCK FULL
DCBSTLTF EQU   BIT7 -         LAST TRACK FULL
.SKP062F ANOP  ,                                                    DBC
&P.FTCI  DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST
*                             TRACK OF CYLINDER INDEX (IN THE FORM
*                             MBBCCHH).
&P.HIIOV DS    CL1 -          FOR FIXED LENGTH RECORD FORMAT, HIGHEST
*                             POSSIBLE R FOR INDEPENDENT OVERFLOW DATA
*                             TRACKS.  FOR VARIABLE LENGTH RECORD
*                             FORMAT, UNUSED
&P.FTMI1 DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST
*                             TRACK OF FIRST LEVEL MASTER INDEX (IN
*                             THE FORM MBBCCHH).
&P.NTHI  DS    FL1 -          NUMBER OF TRACKS OF HIGH-LEVEL INDEX
&P.FTHI  DS    CL7 -          DIRECT ACCESS DEVICE ADDRESS OF FIRST
*                             TRACK OF HIGHEST LEVEL INDEX (IN THE
*                             FORM MBBCCHH).
&P.LPDA  DS    CL8 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             PRIME DATA RECORD IN PRIME DATA AREA
*                             (IN THE FORM MBBCCHHR).
&P.LETI  DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             ACTIVE NORMAL ENTRY OF TRACK INDEX ON
*                             LAST ACTIVE CYLINDER (IN THE FORM CCHHR).
&P.OVDEV DS    CL1 -          DEVICE TYPE FOR INDEPENDENT OVERFLOW
         AIF   (&#DCBSW(062)).SKP062G                               DBC
*        THESE SAME MASKS APPLY TO DCBDEVT FOR ISAM DIRECT ACCESS
DCBDVI11 EQU   X'01' -        2311 DISK DRIVE
DCBDVI01 EQU   X'02' -        2301 PARALLEL DRUM
DCBDVI03 EQU   X'03' -        2303 SERIAL DRUM
DCBDVI02 EQU   X'04' -        2302 DISK STORAGE
DCBDVI21 EQU   X'05' -        2321 DATA CELL DRIVE
DCBDVI14 EQU   X'08' -        2314 DISK STORAGE FACILITY
.SKP062G ANOP  ,                                                    DBC
&P.NBOV  DS    H -            FOR FIXED LENGTH RECORD FORMAT, RESERVED.
*                             FOR VARIABLE LENGTH RECORD FORMAT, IF THE
*                             INDEPENDENT OVERFLOW OPTION IS SELECTED,
*                             CONTAINS, IN BINARY, NUMBER OF BYTES LEFT
*                             ON CURRENT TRACK OF INDEPENDENT OVERFLOW
*                             AREA
&P.LECI  DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             ACTIVE ENTRY IN CYLINDER INDEX (IN THE
*                             FORM CCHHR).
         DS    X -            RESERVED
&P.RORG2 DS    H -            NUMBER OF TRACKS (PARTIALLY OR WHOLLY)
*                             REMAINING IN INDEPENDENT OVERFLOW AREA
&P.LEMI1 DS    CL5 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             ACTIVE ENTRY IN FIRST LEVEL MASTER INDEX
*                             (IN THE FORM CCHHR).
         DS    X -            RESERVED
&P.NOREC DS    H -            NUMBER OF LOGICAL RECORDS IN AN OVERFLOW
*                             AREA
&P.LIOV  DS    CL8 -          DIRECT ACCESS DEVICE ADDRESS OF LAST
*                             AREA (IN THE FORM MBBCCHHR).
&P.RORG1 DS    H -            NUMBER OF CYLINDER OVERFLOW AREAS THAT
*                             ARE FULL
         DS    XL2 -          RESERVED
&P.WKPT1 DS    A -            POINTER TO WORK AREA OR TO CONSTRUCTED
*                             CHANNEL PROGRAM FOR WHICH SPACE IS
*                             OBTAINED BY GETMAIN MACRO INSTRUCTIONS
*                             ISSUED BY OPEN EXECUTORS
&P.WKPT2 DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1
&P.WKPT3 DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1
&P.WKPT4 DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1
&P.WKPT5 DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1
&P.WKPT6 DS    A -            ADDITIONAL POINTER AS IN DCBWKPT1
         SPACE 1
.CA      AIF   (NOT &DSORGDA).CB
&LSW(065) SETB (1)                                                  DBC
*                       BDAM INTERFACE
         SPACE 1
         ORG   &P.DCB+52
&P.CHECK DS    0A -           ADDRESS OF CHECK MODULE
         AIF   (&DSORGIS).CA1
&LSW(066) SETB (1)                                                  DBC
&P.OPTCD DS    BL1 -          OPTION CODES
         AGO   .CA2
.CA1     ANOP
&LSW(067) SETB (1)                                                  DBC
         DS    BL1 -          DCBOPTCD - OPTION CODES
.CA2     ANOP
         AIF   (&DSORGIS OR &DSORGQS OR &DSORGBS).CA3
&LSW(068) SETB (1)                                                  DBC
         AIF   (&#DCBSW(63) OR &#DCBSW(68) OR &#DCBSW(38)).SKP068A  DBC
DCBOPTW  EQU   BIT0 -         WRITE VALIDITY CHECK (DASD)
*                             (BSAM, BPAM, QSAM, ISAM, BDAM)
.SKP068A ANOP  ,                                                    DBC
         AGO   .CA4
.CA3     ANOP
&LSW(069) SETB (1)                                                  DBC
*        BIT0 IS DCBOPTW - SAME AS BSAM AND ISAM
.CA4     ANOP
         AIF   (&#DCBSW(065)).SKP065A                               DBC
DCBOPTTO EQU   BIT1 -         TRACK OVERFLOW
DCBOPTE  EQU   BIT2 -         EXTENDED SEARCH
DCBOPTF  EQU   BIT3 -         FEEDBACK
DCBOPTA  EQU   BIT4 -         ACTUAL ADDRESSING
DCBOPTDB EQU   BIT5 -         DYNAMIC BUFFERING
DCBOPTRE EQU   BIT6 -         READ EXCLUSIVE
DCBOPTRB EQU   BIT7 -         RELATIVE BLOCK ADDRESSING
.SKP065A ANOP  ,                                                    DBC
&P.CHCKA DS    AL3 -          ADDRESS OF CHECK MODULE
         AIF   (&DSORGIS).CAA
&LSW(070) SETB (1)                                                  DBC
&P.SYNAD DS    A -            ADDRESS OF SYNAD ROUTINE
         DS    XL2 -          RESERVED
&P.BLKSI DS    H -            MAXIMUM BLOCK SIZE
         AGO   .CAB
.CAA     ANOP
&LSW(071) SETB (1)                                                  DBC
         DS    A -            DCBSYNAD - ADDRESS OF SYNAD ROUTINE
         DS    XL2 -          RESERVED
         DS    H -            DCBBLKSI - MAXIMUM BLOCK SIZE
.CAB     ANOP
&P.IOBSQ DS    A -            ADDRESS OF FIRST IOB ON UNSCHEDULED QUEUE
*                             FOR EITHER A WRITE-ADD REQUEST WHEN
*                             ANOTHER WRITE-ADD IS IN PROGRESS OR A
*                             READ-EXCLUSIVE REQUEST WHEN THE
*                             READ-EXCLUSIVE LIST IS FULL
&P.SQND  DS    A -            ADDRESS OF LAST IOB ON UNSCHEDULED QUEUE
&P.IOBUQ DS    A -            ADDRESS OF FIRST IOB ON UNPOSTED QUEUE
&P.UQND  DS    A -            ADDRESS OF LAST JOB ON UNPOSTED QUEUE
*                             THAT IS MAINTAINED BY THE READ EXCLUSIVE
*                             MODULE
         DS    X -            RESERVED
&P.LIMCT DS    FL3 -          NUMBER OF TRACKS OR NUMBER OF RELATIVE
*                             BLOCKS TO BE SEARCHED (EXTENDED SEARCH
*                             OPTION)
&P.XARG  DS    0A -           ADDRESS OF READ EXCLUSIVE LIST
&P.XCNT  DS    FL1 -          NUMBER OF ENTRIES IN READ EXCLUSIVE LIST
&P.XARGA DS    AL3 -          ADDRESS OF READ EXCLUSIVE LIST
&P.DRDX  DS    0A -           ADDRESS OF READ EXCLUSIVE MODULE
&P.MVXNO DS    FL1 -          TOTAL NUMBER OF EXTENTS IN MULTIVOLUME
*                             DATA SET
&P.DRDXA DS    AL3 -          ADDRESS OF READ EXCLUSIVE MODULE
&P.DFOR  DS    A -            ADDRESS OF A FORMAT MODULE
&P.DFBK  DS    A -            ADDRESS OF A FEEDBACK MODULE
&P.DYNB  DS    A -            FOR DYNAMIC BUFFERING, ADDRESS OF DYNAMIC
*                             BUFFER MODULE.  FOR UNBLOCKED SPANNED
*                             RECORDS WITH BFTEK=R SPECIFIED AND NO
*                             DYNAMIC BUFFERING, ADDRESS OF SEGMENT
*                             WORK AREA CONTROL BLOCK
         SPACE 1
.CB      AIF   (NOT &DSORGQX).CC
&LSW(072) SETB (1)                                                  DBC
*                       QTAM INTERFACE
         SPACE 1
         ORG   &P.DCB+52
&P.KSTAT DS    0CL4 -         FOUR THRESHOLD VALUES FOR ERROR COUNTS
&P.KSTA1 DS    FL1 -          THRESHOLD VALUE FOR NUMBER OF
*                             TRANSMISSIONS
&P.KSTA2 DS    FL1 -          THRESHOLD VALUE FOR NUMBER OF DATA CHECKS
&P.KSTA3 DS    FL1 -          THRESHOLD VALUE FOR NUMBER OF
*                             INTERVENTIONS REQUIRED
&P.KSTA4 DS    FL1 -          THRESHOLD VALUE FOR NUMBER OF TIMEOUTS
         SPACE 1
*                       QTAM POLLING LIST ORIGIN
         SPACE 1
&P.CPOLL DS    0A -           A 4-BYTE FIELD FOR EACH POLLING LIST
&P.PLBYT DS    BL1 -          ADAPTER TYPE
         AIF   (&#DCBSW(072)).SKP072A                               DBC
DCBCPWTT EQU   BIT4 -         WTTA
.SKP072A ANOP  ,                                                    DBC
&P.CPOLA DS    AL3 -          ADDRESS OF THE POLLING LIST
         SPACE 1
.CC      AIF   (NOT &DSORGTQ).CC1
&LSW(073) SETB (1)                                                  DBC
*                       TCAM MESSAGE QUEUE INTERFACE
         SPACE 1
         ORG   &P.DCB+52
         AIF   (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS).CC1A
&LSW(074) SETB (1)                                                  DBC
&P.OPTCD DS    BL1 -          OPTION CODES
         AGO   .CC1B
.CC1A    ANOP
&LSW(075) SETB (1)                                                  DBC
         DS    BL1 -          DCBOPTCD - OPTION CODES
.CC1B    ANOP
         AIF   (&#DCBSW(073)).SKP073A                               DBC
DCBOPTWP EQU   BIT0 -         SOURCE OR DESTINATION NAME PRECEDES
*                             MESSAGE (AFTER CONTROL BYTE)
*                             (TCAM PROCESS QUEUE)
DCBOPTUM EQU   BIT1 -         WORK UNIT IS A MESSAGE.  DEFAULT WORK
*                             UNIT IS A RECORD.  (TCAM PROCESS QUEUE)
DCBOPTCB EQU   BIT2 -         CONTROL BYTE PRECEDES WORK UNIT
*                             (TCAM PROCESS QUEUE)
DCBOPTCP EQU   BIT2 -         CHECKPOINT DATA SET
DCBOPTIM EQU   BIT6 -         NON-REUSABLE MESSAGE QUEUE DATA SET
DCBOPTRM EQU   BIT7 -         REUSABLE MESSAGE QUEUE DATA SET
.SKP073A ANOP  ,                                                    DBC
         AIF   (&DSORGIS OR &DSORGDA OR &DSORGQS OR &DSORGBS).CC1D
&LSW(076) SETB (1)                                                  DBC
*                                                            ICBI DCB-9
         DS    XL9 -           RESERVED                      ICBI DCB-9
&P.BLKSI DS    H -             BLOCK SIZE                    ICBI DCB-9
         AGO   .CC1E                                         ICBI DCB-9
.CC1D    ANOP                                                ICBI DCB-9
&LSW(077) SETB (1)                                                  DBC
         DS    XL11 -         RESERVED
.CC1E    ANOP                                                ICBI DCB-9
         SPACE 1
.CC1     ANOP
         AIF   (NOT &DSORGMQ).CD
&LSW(078) SETB (1)                                                  DBC
*                       QTAM PROBLEM PROGRAM MESSAGE QUEUE INTERFACE
         SPACE 1
         ORG   &P.DCB+52
&P.RECRD DS    A -            NOT USED BY QTAM
         AIF   (&DSORGIS OR &DSORGDA).CCA
&LSW(079) SETB (1)                                                  DBC
&P.SYNAD DS    A -            ADDRESS OF USER-PROVIDED SYNAD ROUTINE TO
*                             BE ENTERED IF A WORK UNIT IS LONGER THAN
*                             THE WORK AREA PROVIDED FOR INPUT
         AGO   .CCB
.CCA     ANOP
&LSW(080) SETB (1)                                                  DBC
         DS    A -            DCBSYNAD - ADDRESS OF USER-PROVIDED SYNAD
*                             ROUTINE TO BE ENTERED IF A WORK UNIT IS
*                             LONGER THAN THE WORK AREA PROVIDED FOR
*                             INPUT
.CCB     ANOP
&P.EOBLK DS    A -            NOT USED BY QTAM
         SPACE 1
.CD      AIF   (NOT &DSORGBX).CDF
&LSW(081) SETB (1)                                                  DBC
*                       BTAM INTERFACE
         SPACE 1
         ORG   &P.DCB+52
&P.LERB  DS    A -            ADDRESS OF LINE ERROR BLOCK
         SPACE 1
         AIF   (NOT &DEVDBS).CDF
&LSW(082) SETB (1)                                                  DBC
*                       BSC INTERFACE
         SPACE 1
         ORG   &P.DCB+56
&P.XMODE DS    BL1 -          MODE OF TRANSMISSION FOR BINARY
*                             SYNCHRONOUS COMMUNICATION (BSC)
         AIF   (&#DCBSW(082)).SKP082A                               DBC
DCBXMIBC EQU   BIT1 -         INTERMEDIATE BLOCK CHECKING IS TO BE
*                             PERFORMED
DCBXMDA1 EQU   BIT2 -         TRANSMISSION IS THROUGH A 2701 DATA
*                             ADAPTER UNIT DUAL COMMUNICATION
*                             INTERFACE B
DCBXMDA2 EQU   BIT4 -         TRANSMISSION IS IN CODE B FOR A 2701
*                             DATA ADAPTER UNIT DUAL CODE FEATURE
.SKP082A ANOP  ,                                                    DBC
&P.XCODE DS    BL1 -          BSC CONTROL STATION FLAG AND
*                             TRANSMISSION CODE
         AIF   (&#DCBSW(082)).SKP082B                               DBC
DCBXCCSF EQU   BIT0 -         BSC CONTROL STATION FLAG ---
*                             IF ZERO, THIS IS THE CONTROL STATION.
*                             IF ONE, THIS IS THE REMOTE STATION.
DCBXCPTP EQU   BIT1 -         IF PTOP IS SPECIFIED IN SYSGEN PROCEDURE
*                             - SCHEDULE AN ASYNCHRONOUS EXIT TO
*                             INTERFACE RESOLUTION ROUTINE
DCBXCTR1 EQU   BIT2 -         6-BIT TRANSCODE IS BEING USED (BIT 4 IS
*                             ALSO ON)
DCBXCAS1 EQU   BIT3 -         USASCII TRANSMISSION CODE IS BEING USED
*                             (BIT 5 IS ALSO ON)
DCBXCEBC EQU   BIT4+BIT5 -    IF BOTH BITS ARE ZERO, EBCDIC
*                             TRANSMISSION CODE IS BEING USED.
DCBXCTR2 EQU   BIT4 -         6-BIT TRANSCODE IS BEING USED (BIT 2 IS
*                             ALSO ON)
DCBXCAS2 EQU   BIT5 -         USASCII TRANSMISSION CODE IS BEING USED
*                             (BIT 3 IS ALSO ON)
.SKP082B ANOP  ,                                                    DBC
&P.BSRSV DS    CL1 -          DLE CONTROL CHARACTER
&P.BSWBT DS    X -            RESERVED
&P.IRRAD DS    0A -           BEFORE OPEN - IF PTOP IS SPECIFIED IN THE
*                             SYSGEN PROCEDURE, ADDRESS OF INTERFACE
*                             RESOLUTION ROUTINE.
*                             AFTER OPEN, THE FOLLOWING 4 CHARACTERS
*                             OCCUPY THIS SPACE.
&P.BSTSX DS    CL1 -          DLE CONTROL CHARACTER
&P.BSSTX DS    CL1 -          STX CONTROL CHARACTER
&P.BSTEX DS    CL1 -          DLE CONTROL CHARACTER
&P.BSETX DS    CL1 -          ETX CONTROL CHARACTER
&P.BSAK0 DS    CL2 -          ACK-0 CONTROL CHARACTER
&P.BSAK1 DS    CL2 -          ACK-1 CONTROL CHARACTER
&P.BSENQ DS    CL1 -          ENQ CONTROL CHARACTER
&P.BSNAK DS    CL1 -          NAK CONTROL CHARACTER
&P.BSETB DS    CL1 -          ETB CONTROL CHARACTER
&P.BSDLE DS    CL1 -          DLE CONTROL CHARACTER
&P.BSEOT DS    CL1 -          EOT CONTROL CHARACTER
&P.BSSYN DS    CL3 -          SYN, SYN, SYN CONTROL CHARACTERS
&P.BSONL DS    CL2 -          SOH % CONTROL CHARACTERS
&P.BSSAK DS    CL2 -          WACK CONTROL CHARACTERS
&P.BSRVI DS    CL2 -          DLE @ CONTROL CHARACTERS
         DS    XL18 -         RESERVED
         SPACE 1
.CDF     AIF   (NOT (&DSORGQS OR &DSORGBS)).FIN
&LSW(083) SETB (1)                                                  DBC
*                       QSAM-BSAM-BPAM COMMON INTERFACE
         SPACE 1
         ORG   &P.DCB+52
         AIF   (&DSORGDA).CDA1
&LSW(084) SETB (1)                                                  DBC
&P.GERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR GET
&P.PERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT
&P.CHECK DS    0A -           ADDRESS OF CHECK MODULE
         AIF   (&DSORGIS).CDA
&LSW(085) SETB (1)                                                  DBC
&P.OPTCD DS    BL1 -          OPTION CODES
         AGO   .CD2
.CDA1    ANOP
&LSW(086) SETB (1)                                                  DBC
         DS    0A -           DCBGERR, DCBPERR OR DCBCHECK
.CDA     ANOP
&LSW(087) SETB (1)                                                  DBC
         DS    BL1 -          DCBOPTCD - OPTION CODES
.CD2     ANOP
         AIF   (&#DCBSW(083)).SKP083C                               DBC
         AIF   (&#DCBSW(63) OR &#DCBSW(68)).SKP083A                 DBC
DCBOPTW  EQU   BIT0 -         WRITE VALIDITY CHECK (DASD)
*                             (BSAM, BPAM, QSAM, ISAM, BDAM)
.SKP083A ANOP  ,                                                    DBC
DCBOPTU  EQU   BIT1 -         ALLOW DATA CHECK CAUSED BY INVALID
*                             CHARACTER (1403 PRINTER WITH UCS FEATURE)
*                             (BSAM, BPAM, QSAM)
DCBOPTC  EQU   BIT2 -         CHAINED SCHEDULING USING PCI
*                             (BSAM, BPAM, QSAM)
DCBOPTH  EQU   BIT3 -         1287/1288 OPTICAL READER - HOPPER EMPTY
*                             EXIT (BSAM, BPAM)
DCBOPTO  EQU   BIT3 -         1285/1287 OPTICAL READER - ON-LINE
*                             CORRECTION (QSAM)
DCBBCKPT EQU   BIT3 -         CHANNEL-END APPENDAGE IS TO BYPASS DOS
*                             EMBEDDED CHECKPOINT RECORDS ON TAPE
*                             (BSAM, QSAM)                       ICB226
DCBOPTQ  EQU   BIT4 -         TRANSLATION TO OR FROM ASCII
*                             (BSAM, BPAM, QSAM)
         AIF   (&#DCBSW(060)).SKP083B                               DBC
DCBOPTZ  EQU   BIT5 -         MAGNETIC TAPE DEVICES - USE REDUCED ERROR
*                             RECOVERY PROCEDURE (EXCP, BSAM, BPAM,
*                             QSAM)
DCBSRCHD EQU   BIT5 -         USE SEARCH DIRECT, INSTEAD OF SEARCH
*                             PREVIOUS, ON RECORD POSITION SENSING
*                             DEVICE  (EXCP, BSAM, BPAM, QSAM)   ICB217
.SKP083B ANOP  ,                                                    DBC
DCBOPTT  EQU   BIT6 -         USER TOTALING (BSAM, QSAM)
.SKP083C ANOP  ,                                                    DBC
         AIF   (&DSORGDA).CD1
&LSW(088) SETB (1)                                                  DBC
&P.GERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZING ROUTINE FOR GET
&P.PERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT
&P.CHCKA DS    AL3 -          ADDRESS OF CHECK MODULE
         AGO   .CD3
.CD1     ANOP
&LSW(089) SETB (1)                                                  DBC
         DS    AL3 -          DCBGERRA, DCBPERRA OR DCBCHCKA
.CD3     AIF   (&DSORGIS OR &DSORGDA OR &DSORGMQ).CDB
&LSW(090) SETB (1)                                                  DBC
&P.SYNAD DS    0A -           ADDRESS OF USER-PROVIDED SYNAD ROUTINE
&P.IOBL  DS    FL1 -          IOB LENGTH IN DOUBLE WORDS
&P.SYNA  DS    AL3 -          ADDRESS OF USER-PROVIDED SYNAD ROUTINE
         AGO   .CD4
.CDB     ANOP
&LSW(091) SETB (1)                                                  DBC
         DS    0A -           DCBSYNAD - ADDRESS OF SYNAD ROUTINE
&P.IOBL  DS    FL1 -          IOB LENGTH IN DOUBLE WORDS
         DS    AL3 -          DCBSYNA - ADDRESS OF SYNAD ROUTINE
.CD4     ANOP
&P.FLAG1 DS    0BL1           TCAM APPLICATION PROGRAM FLAGS ICBI DCB-3
*                             (BSAM, BPAM, QSAM)
&P.CIND1 DS    BL1 -          CONDITION INDICATORS
         AIF   (&#DCBSW(083)).SKP083D                               DBC
DCBCNTOV EQU   BIT0 -         DIRECT ACCESS - TRACK OVERFLOW IN USE
*                             (BSAM, BPAM, QSAM)
*                             2540 CARD PUNCH - DATA SET WAS OPENED BUT
*                             NO DATA WAS WRITTEN (QSAM)
DCBSTQCK EQU   BIT0 -         STOP EQUAL QUICK WAS SPECIFIED FOR
*                             APPLICATION PROG. DCBS (TCAM)  ICBI DCB-3
DCBSTFLS EQU   BIT1 -         STOP EQUAL FLUSH WAS SPECIFIED FOR
*                             APPLICATION PROG. DCBS (TCAM)  ICBI DCB-3
DCBCNSRD EQU   BIT1 -         SEARCH DIRECT (BSAM, BPAM, QSAM)
DCBCNEVB EQU   BIT2 -         END OF VOLUME - USED BY EOB ROUTINES
*                             (BSAM, BPAM, QSAM)
DCBCNEVA EQU   BIT3 -         END OF VOLUME - USED BY CHANNEL-END
*                             APPENDAGE ROUTINES (BSAM, BPAM, QSAM)
DCBCNBRM EQU   BIT5 -         BLOCKED RECORD BIT MODIFIED (BSAM,BPAM,
*                             QSAM)                          ICBI DCB-2
DCBCNEXB EQU   BIT7 -         EXCHANGE BUFFERING SUPPORTED (QSAM)
.SKP083D ANOP  ,                                                    DBC
&P.CIND2 DS    BL1 -          CONDITION INDICATORS
         AIF   (&#DCBSW(083)).SKP083E                               DBC
DCBCNSTO EQU   BIT0 -         PARTITIONED DATA SET - STOW HAS BEEN
*                             PERFORMED (BSAM, BPAM, QSAM)
*                             SEQUENTIAL DATA SET - UPDATE (BSAM, BPAM)
DCBCNWR0 EQU   BIT1 -         DIRECT ORGANIZATION DATA SET - LAST I/O
*                             WAS A WRITE RECORD ZERO
*                             (BSAM, BPAM, QSAM)
*                             SEQUENTIAL DATA SET - UPDATE EOF IS
*                             INDICATED (BSAM, BPAM)
DCBCNCLO EQU   BIT2 -         CLOSE IN PROCESS (QSAM)
DCBCNIOE EQU   BIT3 -         PERMANENT I/O ERROR (BSAM, BPAM, QSAM)
DCBCNBFP EQU   BIT4 -         OPEN ACQUIRED BUFFER POOL
*                             (BSAM, BPAM, QSAM)
DCBCNCHS EQU   BIT5 -         CHAINED SCHEDULING BEING SUPPORTED
*                             (BSAM, BPAM, QSAM)
DCBCNFEO EQU   BIT6 -         FEOV BIT (BSAM, BPAM, QSAM)
DCBCNQSM EQU   BIT7 -         ALWAYS ZERO (BSAM, BPAM)
*                             THIS IS A QSAM DCB (QSAM)
.SKP083E ANOP  ,                                                    DBC
         AIF   (&DSORGIS OR &DSORGDA).CDC
&LSW(092) SETB (1)                                                  DBC
&P.BLKSI DS    H -            MAXIMUM BLOCK SIZE
         AGO   .CD7
.CDC     ANOP
&LSW(093) SETB (1)                                                  DBC
         DS    H -            DCBBLKSI - MAXIMUM BLOCK SIZE
.CD7     ANOP
&P.WCPO  DS    AL1 -          OFFSET OF WRITE CHANNEL PROGRAM FROM THE
*                             START OF IOB
&P.WCPL  DS    FL1 -          LENGTH OF WRITE CHANNEL PROGRAM
&P.OFFSR DS    AL1 -          OFFSET OF READ CCW FROM BSAM/BPAM PREFIX
*                             OF IOB
&P.OFFSW DS    AL1 -          OFFSET OF WRITE CCW FROM BSAM/BPAM PREFIX
*                             OF IOB
&P.IOBA  DS    A -            FOR NORMAL SCHEDULING, ADDRESS OF QSAM OR
*                             BSAM/BPAM PREFIX OF IOB.  FOR CHAINED
*                             SCHEDULING, ADDRESS OF ICB.  FOR
*                             1419/1275, ADDRESS OF MAGNETIC INTERRUPT
*                             CONTROL BLOCK (MICB) CURRENTLY BEING
*                             PROCESSED BY READ ROUTINE.  FOR TSO
*                             TERMINAL DATA SET OPENED FOR INPUT AND
*                             FORMAT U, SIMULATED LOW-ORDER FOUR BYTES
*                             OF IOBCSW
         SPACE 1
         ORG   &P.DCB+68                                         ICB354
&P.CICB  DS    0A -           SAME AS DCBCICBA BELOW             ICB354
         DS    X -            DCBNCP  (BSAM,BPAM)                ICB354
&P.CICBA DS    AL3 -          POINTER TO JES C.I.                ICB354
*                             CONTROL BLOCK (CICB)               ICB354
         SPACE 1
         ORG   &P.DCB+80                                     ICBI DCB-4
&P.DIRCT DS    0H -           NUMBER OF BYTES USED IN LAST DIRECTORY
*                             BLOCK (RANGE 0-254)  (BSAM, BPAM)  ICB295
&P.QSWS  DS    0BL1 -         FLAG BYTE                          ICB295
&P.USASI DS    B -            FLAG BYTE FOR ASCII TAPES
         AIF   (&#DCBSW(083)).SKP083F                               DBC
DCBBLBP  EQU   BIT1 -         BLOCK PREFIX IS FOUR BYTE FIELD
*                             CONTAINING BLOCK LENGTH IN UNPACKED
*                             DECIMAL (SPECIFIED BY BUFFER=L).
DCBQADFS EQU   BIT2+BIT3+BIT4 USED TO PERFORM SEQUENCE CHECKING WITH
*                             MULTIPLE FUNCTION SUPPORT FOR 3525
*                             (BSAM, QSAM)
DCBQADF1 EQU   BIT2 -         FIRST BIT OF DCBQADFS
DCBQADF2 EQU   BIT3 -         SECOND BIT OF DCBQADFS
DCBQADF3 EQU   BIT4 -         THIRD BIT OF DCBQADFS
DCBQSTRU EQU   BIT7 -         TRUNC ENTRY POINT ENTERED (QSAM)
.SKP083F ANOP  ,                                                    DBC
&P.BUFOF DS    0FL1 -         BLOCK PREFIX LENGTH (0-99), SPECIFIED BY
*                             BUFOFF=N OR BUFOFF=L
&P.DIRCQ DS    FL1 -          NUMBER OF BYTES USED IN LAST DIRECTORY
*                             BLOCK (RANGE 0-254)  (QSAM)        ICB295
         SPACE 1
         AIF   (NOT &DSORGBS).CE
&LSW(094) SETB (1)                                                  DBC
*                       BSAM-BPAM INTERFACE
         SPACE 1
         ORG   &P.DCB+72
&P.EOBR  DS    0A -           ADDRESS OF END-OF-BLOCK MODULE FOR READ
         AIF   (&DSORGIS).CDD
&LSW(095) SETB (1)                                                  DBC
&P.NCP   DS    FL1 -          NUMBER OF CHANNEL PROGRAMS.
         AGO   .CD8
.CDD     ANOP
&LSW(096) SETB (1)                                                  DBC
         DS    FL1 -          DCBNCP - NUMBER OF CHANNEL PROGRAMS.
.CD8     ANOP
*                             NUMBER OF READ OR WRITE REQUESTS WHICH
*                             MAY BE ISSUED PRIOR TO A CHECK, NUMBER
*                             OF IOB'S GENERATED.  (99 MAXIMUM)
&P.EOBRA DS    AL3 -          ADDRESS OF END-OF-BLOCK MODULE FOR READ
&P.EOBW  DS    A -            ADDRESS OF END-OF-BLOCK MODULE FOR WRITE.
*                             FOR BSAM CREATE BDAM PROCESSING OF
*                             UNBLOCKED SPANNED RECORDS WITH BKTEK=R
*                             SPECIFIED, ADDRESS OF SEGMENT WORK AREA
*                             CONTROL BLOCK
         DS    H -            DCBDIRCT - NUMBER OF BYTES USED IN LAST
*                             DIRECTORY BLOCK  (RANGE 0-254)     ICB295
         AIF   (&DSORGIS).CDE
&LSW(097) SETB (1)                                                  DBC
&P.LRECL DS    H -            LOGICAL RECORD LENGTH
         AGO   .CD9
.CDE     ANOP
&LSW(098) SETB (1)                                                  DBC
         DS    H -            DCBLRECL - LOGICAL RECORD LENGTH
.CD9     ANOP
&P.CNTRL DS    0A -           ADDRESS OF CNTRL MODULE
&P.NOTE  DS    0A -           ADDRESS OF NOTE/POINT MODULE
&P.POINT DS    A -            ADDRESS OF NOTE/POINT MODULE
         SPACE 1
.CE      AIF   (NOT &DSORGQS).FIN
&LSW(099) SETB (1)                                                  DBC
*                       QSAM INTERFACE
         SPACE 1
         AIF   (NOT &DSORGDA).CE1
&LSW(100) SETB (1)                                                  DBC
         ORG   &P.DCB+52
&P.GERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR GET
&P.PERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT
         DS    BL1 -          DCBOPTCD - OPTION CODES
&P.GERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZING ROUTINE FOR GET
&P.PERRA DS    AL3 -          ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT
         SPACE 1
.CE1     ANOP
         ORG   &P.DCB+72
&P.LCCW  DS    0A -           FOR EXCHANGE BUFFERING, ADDRESS OF LAST
*                             CCW IN LIST
&P.EOBAD DS    A -            FOR SIMPLE BUFFERING, ADDRESS OF LAST
*                             BYTE OF CURRENT BUFFER
&P.CCCW  DS    0A -           FOR EXCHANGE BUFFERING, ADDRESS OF
*                             CURRENT OR NEXT CCW
&P.RECAD DS    0A -           ADDRESS OF CURRENT OR NEXT LOGICAL RECORD
&P.RECBT DS    BL1 -          FLAG BYTE
         AIF   (&#DCBSW(099)).SKP099A                               DBC
DCBRCREL EQU   BIT0+BIT1+BIT2+BIT3 RELSE MACRO HAS BEEN ISSUED
*                             (QSAM WITH SIMPLE BUFFERING)
DCBRCTRU EQU   BIT0 -         TRUNC MACRO HAS BEEN ISSUED (QSAM LOCATE
*                             MODE)
DCBRCFGT EQU   BIT1 -         FIRST GET AFTER OPEN (QSAM LOCATE MODE)
.SKP099A ANOP  ,                                                    DBC
&P.RECA  DS    AL3 -          ADDRESS OF CURRENT OR NEXT LOGICAL RECORD
         DS    B -            DCBQSWS - FLAG BYTE                ICB295
         DS    FL1 -          DCBDIRCQ - NUMBER OF BYTES USED IN LAST
*                             DIRECTORY BLOCK (RANGE 0-254)      ICB295
         AIF   (&DSORGIS OR &DSORGBS).CEE
&LSW(101) SETB (1)                                                  DBC
&P.LRECL DS    H -            LOGICAL RECORD LENGTH
         AGO   .CEEA
.CEE     ANOP
&LSW(102) SETB (1)                                                  DBC
         DS    H -            DCBLRECL - LOGICAL RECORD LENGTH
.CEEA    AIF   (&DSORGBS).CEF
&LSW(103) SETB (1)                                                  DBC
&P.CNTRL DS    0A -           ADDRESS OF CNTRL MODULE
         AGO   .CEF1
.CEF     ANOP
&LSW(104) SETB (1)                                                  DBC
         DS    0A -           DCBCNTRL - ADDRESS OF CNTRL MODULE
.CEF1    ANOP
&P.EROPT DS    BL1 -          ERROR OPTION
         AIF   (&#DCBSW(099)).SKP099B                               DBC
DCBERACC EQU   BIT0 -         ACCEPT PERMANENT ERROR
DCBERSKP EQU   BIT1 -         SKIP PERMANENT ERROR
DCBERABE EQU   BIT2 -         ABNORMAL END OF TASK
.SKP099B ANOP  ,                                                    DBC
         AIF   (&DSORGBS).CEF2
&LSW(105) SETB (1)                                                  DBC
&P.CNTRA DS    AL3 -          ADDRESS OF CNTRL MODULE
         AGO   .CEF3
.CEF2    ANOP
&LSW(106) SETB (1)                                                  DBC
         DS    AL3 -          DCBCNTRA - ADDRESS OF CNTRL MODULE
.CEF3    ANOP
         DS    XL2 -          RESERVED
&P.PRECL DS    H -            BLOCK LENGTH, MAXIMUM BLOCK LENGTH OR
*                             DATA LENGTH
&P.EOB   DS    A -            ADDRESS OF END OF BLOCK MODULE
         SPACE 1
.CF      AIF   (&DSORGIS OR &DSORGQS OR &DSORGBS OR NOT &DSORGLR).FIN
&LSW(107) SETB (1)                                                  DBC
         ORG   &P.DCB+82
&P.LRECL DS    H -            LOGICAL RECORD LENGTH
         SPACE 1
         AGO   .FIN
.SLIP    ANOP
&LSW(108) SETB (1)                                                  DBC
*                       GRAPHIC DEVICE INTERFACE
         SPACE 1
&P.DCB   DS    0A                  FULLWORD ALIGNMENT               DBC
         DS    XL12 -         RESERVED
&P.BRSA  DS    AL2 -          BUFFER RESTART ADDRESS.  BLANK BEFORE
*                             EXECUTION OF SECOND I/O OPERATION
&P.GTYPE DS    CL1 -          TYPE OF BUFFER MANAGEMENT AND ATTENTION
*                             HANDLING
         AIF   (&#DCBSW(108)).SKP108A                               DBC
DCBGTEXP EQU   X'00' -        EXPRESS
DCBGTBAS EQU   X'01' -        BASIC
.SKP108A ANOP  ,                                                    DBC
         DS    X -            RESERVED
&P.BFRST DS    AL2 -          BLANK BEFORE EXECUTION OF OPEN ROUTINE.
*                             STARTING ADDRESS FOR BUFFER AFTER
*                             EXECUTION OF OPEN ROUTINE
&P.BFRSZ DS    H -            BLANK BEFORE EXECUTION OF OPEN ROUTINE.
*                             SIZE OF BUFFER AFTER EXECUTION OF OPEN
*                             ROUTINE.
         SPACE 1
*                       COMMON INTERFACE
         SPACE 1
         DS    XL6 -          RESERVED
&P       #DSORG                                                     DBC
&P.IOBAD DS    A -            BLANK BEFORE EXECUTION OF OPEN ROUTINE.
*                             ADDRESS OF STANDARD FIELDS OF FIRST IOB
*                             AFTER EXECUTION OF OPEN ROUTINE
         SPACE 1
*                       FOUNDATION EXTENSION
         SPACE 1
&P.POLST DS    0A -           ADDRESS OF AREA WHERE A DCB LIST IS TO BE
*                             CONSTRUCTED FOR POLLING PURPOSES
&P.GNCP  DS    FL1 -          NUMBER OF I/O INSTRUCTIONS TO BE ISSUED
*                             BEFORE A WAIT MACRO INSTRUCTION
&P.POLSA DS    AL3 -          SAME AS DCBPOLST ABOVE
&P.EXLST DS    0A -           ADDRESS OF USER'S EXIT LIST
         DS    X -            RESERVED
&P.EXLSA DS    AL3 -          ADDRESS OF USER'S EXIT LIST
         SPACE 1
*                       FOUNDATION BEFORE OPEN
         SPACE 1
&P.DDNAM DS    CL8 -          8-BYTE NAME FROM DD STATEMENT THAT
*                             DEFINES DATA SET ASSOCIATED WITH THIS DCB
&P.OFLG  DS    BL1 -          FLAGS USED BY OPEN ROUTINE
         AIF   (&#DCBSW(108)).SKP108B                               DBC
DCBOFGRW EQU   BIT0 -         IF ZERO, LAST I/O OPERATION WAS GREAD.
*                             IF ONE, LAST I/O OPERATION WAS GWRITE.
         AIF   (&#DCBSW(052)).SKP108B                               DBC
DCBOFEOV EQU   BIT2 -         SET TO 1 BY EOV WHEN IT CALLS CLOSE
*                             ROUTINE FOR CONCATENATION OF DATA SETS
*                             WITH UNLIKE ATTRIBUTES
DCBOFOPN EQU   BIT3 -         AN OPEN HAS BEEN SUCCESSFULLY COMPLETED
DCBOFPPC EQU   BIT4 -         SET TO 1 BY PROBLEM PROGRAM TO INDICATE A
*                             CONCATENATION OF UNLIKE ATTRIBUTES
DCBOFTM  EQU   BIT5 -         TAPE MARK HAS BEEN READ
DCBOFUEX EQU   BIT6 -         SET TO 0 BY AN I/O SUPPORT FUNCTION WHEN
*                             THAT FUNCTION TAKES A USER EXIT. SET TO 1
*                             ON RETURN FROM USER EXIT TO THE I/O
*                             SUPPORT FUNCTION WHICH TOOK THE EXIT.
DCBOFIOF EQU   BIT7 -         SET TO 1 BY AN I/O SUPPORT FUNCTION IF
*                             DCB IS TO BE PROCESSED BY THAT FUNCTION
.SKP108B ANOP  ,                                                    DBC
&P.IFLG  DS    BL1 -          SET TO ZERO BY GRAPHIC ROUTINES BUT USED
*                             BY IOS IN COMMUNICATING ERROR CONDITIONS
*                             AND IN DETERMINING CORRECTIVE PROCEDURES
&P.MACR  DS    0BL2 -         MACRO INSTRUCTION REFERENCE
&P.MACR1 DS    BL1 -          FIRST BYTE OF DCBMACR
         AIF   (&#DCBSW(52) OR &#DCBSW(108)).SKP108C                DBC
DCBMRRD  EQU   BIT2 -         READ
DCBMRCRL EQU   BIT6 -         CNTRL
.SKP108C ANOP  ,                                                    DBC
&P.MACR2 DS    BL1 -          SECOND BYTE OF DCBMACR
         AIF   (&#DCBSW(52) OR &#DCBSW(108)).SKP108D                DBC
DCBMRWRT EQU   BIT2 -         WRITE
DCBMRCTL EQU   BIT6 -         CNTRL
.SKP108D ANOP  ,                                                    DBC
         SPACE 1
*                       FOUNDATION AFTER OPEN
         SPACE 1
         ORG   &P.DCB+40
&P.TIOT  DS    AL2 -          OFFSET FROM TIOT ORIGIN TO DD ENTRY
*                             ASSOCIATED WITH THIS DCB
&P.MACRF DS    0BL2 -         SAME AS DCBMACR BEFORE OPEN
&P.MACF1 DS    BL1 -          FIRST BYTE OF DCBMACRF
&P.MACF2 DS    BL1 -          SECOND BYTE OF DCBMACRF
&P.DEBAD DS    0A -           ADDRESS OF ASSOCIATED DEB
&P.IFLGS DS    BL1 -          SAME AS DCBIFLG BEFORE OPEN
&P.DEBA  DS    AL3 -          ADDRESS OF ASSOCIATED DEB
&P.GIOCR DS    0A -           ADDRESS OF GRAPHICS I/O CONTROL ROUTINE
&P.OFLGS DS    BL1 -          SAME AS DCBOFLG BEFORE OPEN
&P.GIOCA DS    AL3 -          ADDRESS OF GRAPHICS I/O CONTROL ROUTINE
         SPACE 1
.FIN     ANOP
&A0      SETA  0                                                    DBC
.LP1     AIF   (&A0 EQ 150).EXIT                                    DBC
&A0      SETA  &A0+1                                                DBC
&#DCBSW(&A0) SETB (&#DCBSW(&A0) OR &LSW(&A0))                       DBC
         AGO   .LP1                                                 DBC
.EXIT    ANOP  ,                                                    DBC
         MEND
./ ADD NAME=#DIAG    0100-89041-89041-0921-00041-00041-00000-DYNABLD
         MACRO
&N       #DIAG &R1,&R3,&D2
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $DIAG TO #DIAG.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 3, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES A DIAGNOSE MACHINE INSTRUCTION (OPCODE IS
.* X'83'). IF THE THIRD POSITIONAL OPERAND IS PRESENT, THEN AN RS-TYPE
.* INSTRUCTION FORMAT IS USED. IF THE THIRD POSITIONAL OPERAND IS
.* OMITTED, THEN AN RX-TYPE INSTRUCTION FORMAT IS USED.
.*
.*
.*
.* INNER MACROS USED - NONE
.*
         AIF   (K'&D2 EQ 0).RX
&N       LM    &R1,&R3,&D2 GENERATE AN RS-TYPE INSTRUCTION
         AGO   .OPCODE
.RX      ANOP
&N       L     &R1,&R3 GENERATE AN RX-TYPE INSTRUCTION
.OPCODE  ORG   *-4 LOCATE BACK TO CHANGE THE OPCODE
         DC    X'83' GENERATE THE DIAGNOSE OPCODE
         ORG   *+3 RELOCATE FORWARD
         MEND
./ ADD NAME=#DIE     0100-89041-89041-0921-00160-00160-00000-DYNABLD
         MACRO
&NME     #DIE  &O,&A,&B,&C,&TYPE=MSG
.*
.*
.*                                                            DBC 12/84
.* LAST CHANGE DATE - DECEMBER 6, 1964                        DBC 12/84
.*                  - ADDED "0H'0'," TO INSURE THAT GENERATED DBC 12/84
.*                    "00DEAD COMMANDS" ARE HWORD ALIGNED.    DBC 12/84
.*                                                            10/84 DBC
.* LAST CHANGE DATE - OCTOBER 25, 1984                        10/84 DBC
.*                  - MINOR CHANGE TO REDUCE THE NUMBER OF    10/84 DBC
.*                    LINES PRINTED BY THE MACRO EXPANSION.   10/84 DBC
.*                    THE OBJECT CODE REMAINS UNCHANGED.      10/84 DBC
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - MARCH 16, 1983
.*                  - COMMENTARY ADJUSTMENTS
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $DIE TO #DIE.
.*
.* LAST CHANGE DATE - JAUNARY 27, 1981
.*                  - THE MACRO HAS BEEN REWRITTEN TO
.*                    GENERATE INLINE TRAPS WHENEVER
.*                    EXTENDED MNEMONICS FOR THE 'BC' AND
.*                    'BCR' INSTRUCTIONS ARE USED. THIS IS
.*                    ACCOMPLISHED BY USING THE INVERSE OF
.*                    OF THE GIVEN BRANCH CONDITION TO
.*                    SKIP AROUND THE INLINE TRAP.
.*                    IN THOSE CASES WHERE AN INLINE TRAP
.*                    IS NOT DESIRED (SUCH AS WITHIN A
.*                    BRANCH VECTOR TABLE), THE
.*                    NON-EXTENDED FORM OF THE 'BC'
.*                    INSTRUCTION CAN BE USED; E.G.:
.*                         #DIE C,8   INSTEAD OF   #DIE Z
.*                  - A UNIQUE NUMBER IS NOW APPENDED TO
.*                    GIVEN MESSAGES.
.*
.* LAST CHANGE DATE - FEBRUARY 12, 1980
.*                  - TYPE=CMD SUPPORT HAS BEEN ADDED. THIS
.*                    PROVIDES A MEANS OF COMMUNICATING
.*                    COMMANDS TO THE "DEBUGGING CONTROLLER"
.*                    PROGRAM.
.*                  - IF NO BRANCH CONDITIONALS ARE GIVEN,
.*                    THEN THE "DEAD" CODE IS NOW GENERATED
.*                    INLINE. BEFORE, AN UNCONDITIONAL BRANCH
.*                    TO A "DEAD" LITTERAL WAS MADE.
.*
.* LAST CHANGE DATE - APRIL 24, 1978
.*                  - THE MACRO HAS BEEN REWRITTED TO
.*                    GENERATE MESSAGE STRINGS (INSTEAD OF
.*                    JUST A SEQUENCE NUMBER) AT THE BRANCH
.*                    ADDRESS. SUCH MESSAGES COULD BE
.*                    REASONABLY DISPLAYED VIA AN ESTAE
.*                    ROUTINE.
.*
.* LAST CHANGE DATE - DECEMBER 16, 1977
.*                  - 2ND AND 3RD OPERANDS HAVE BEEN ADDED TO
.*                    THE MACRO PROTOTYPE SO AS TO SUPPORT
.*                    THE GENERATION OF BRANCH INSTRUCTIONS
.*                    OTHER THAN JUST CONDITIONAL-BRANCH.
.*                  - WHEN NO OPERANDS ARE GIVEN, AN
.*                    UNCONDITIONAL BRANCH IS NOW GENERATED.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - SEPTEMBER 10, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS
.* CONCERNING IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
         GBLA  &#DIECOD
         GBLC  &#EBCDIC(256)
         LCLA  &L,&M
         LCLC  &MSG,&LAB,&OP,&N,&#
         AIF   ('&TYPE' EQ 'MSG' OR '&TYPE' EQ 'CMD').TYPEOK
         MNOTE 8,'TYPE=&TYPE NOT RECOGNIZED. TYPE=CMD ASSUMED.'
.TYPEOK  ANOP
&N       SETC  '&NME'
&#DIECOD SETA  &#DIECOD+1
&#       SETC  '000&#DIECOD'
&#       SETC  '&#'(K'&#-3,4)
&M       SETA  N'&SYSLIST+1
.MLP     ANOP
&M       SETA  &M-1
         AIF   (&M EQ 0).NOMSG
         AIF   (K'&SYSLIST(&M) EQ 0).MLP
         AIF   ('&SYSLIST(&M)' EQ '''''').NOMSG
&L       SETA  K'&SYSLIST(&M)-2
         AIF   (&L LE 0).NOMSG2
         AIF   ('&SYSLIST(&M)'(1,1) NE '''').NOMSG2
&MSG     SETC  '&SYSLIST(&M)'(2,&L)
         AIF   ('&TYPE' NE 'MSG').MSGDONE
&MSG     SETC  '&#DIECOD &MSG'
&L       SETA  &L+1+K'&#DIECOD
         AGO   .COMN
.*
.NOMSG2  ANOP
&M       SETA  &M+1
.NOMSG   AIF   ('&TYPE' NE 'MSG').MSGDONE
&MSG     SETC  '&#DIECOD'
&L       SETA  K'&MSG
.*
.COMN    AIF   (&L/2*2 EQ &L).MSGDONE
&L       SETA  &L+1
&MSG     SETC  '&MSG '
.MSGDONE ANOP
.*
         AIF   (&M LE 1 OR '&O' EQ '').INLINE
         AIF   (&M EQ 2).INVERT
         AIF   (&M NE 3).GENLIT
         AIF   ('&O'(K'&O,1) NE 'R').GENLIT
.*
.INVERT  ANOP
&OP      SETC  'BN&O'
         AIF   ('&O'(1,1) NE 'N').NVRTDON
&OP      SETC  'B'.'&O'(2,K'&O-1)
.NVRTDON ANOP
.*
         AIF   (&M EQ 2).SETLAB
&N       &OP   &A                  BRANCH IF OK
&N       SETC  ''
         AGO   .INLINE
.SETLAB  ANOP
&LAB     SETC  'DIE&#.Z'
&N       &OP   &LAB                SKIP IF OK
&N       SETC  ''
.INLINE  ANOP
.*                                                            10/84 DBC
         AIF   ('&TYPE' EQ 'MSG').INLMSG
&N       DC    0H'0',X'00DEAD0100',C'&MSG',X'00'
         AGO   .TRAIL
.INLMSG  ANOP                                                 10/84 DBC
&N       DC    0H'0',X'00DEAD',AL1(&L),C'&MSG'
.*                                                            10/84 DBC
.TRAIL   AIF   ('&LAB' EQ '').MEND
&LAB     DS    0H                  RECEIVE SKIP AROUND TRAP
         AGO   .MEND
.*
.GENLIT  AIF   ('&TYPE' EQ 'MSG').LITMSG
&MSG     SETC  '     &MSG '
         AGO   .GOTLIT
.LITMSG  #TEST GEN=EBCDIC
&MSG     SETC  '   &#EBCDIC(&L+1)&MSG'
.GOTLIT  ANOP
.*
         AIF   (&M NE 3).OP4
&N       B&O   &A,=C'&MSG'
         AGO   .MEND
.OP4     ANOP
&N       B&O   &A,&B,=C'&MSG'
.MEND    MEND
./ ADD NAME=#DROP    0100-89041-89041-0921-00040-00040-00000-DYNABLD
         MACRO
         #DROP  &D
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $DROP TO #DROP.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - AUGUST 24, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES A DROP INSTRUCTION THAT RELEASES ALL BASES
.* DECLARED BY A PRIOR #ENTER MACRO EXPANSION.
.*
.*
.*
.* INNER MACROS USED - NONE
.*
         GBLC  &#BS(14)
         LCLA  &W1
         AIF   ('&#BS(14)' EQ '').END
&W1      SETA  14
.LP2     AIF   (&W1 EQ 1).END
&W1      SETA  &W1-1
         AIF   ('&#BS(&W1)' EQ '').LP2
         DROP  &#BS(&W1)
         AGO   .LP2
.END     MEND
./ ADD NAME=#DSA     0100-89041-89041-0921-00057-00057-00000-DYNABLD
         MACRO
&NME     #DSA  &D
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $DSA TO #DSA.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - JANUARY 27, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES A DSECT FOR A STANDARD REGISTER SAVE AREA.
.* FREQUENTLY, A REENTRANT PROGRAM NEEDS TO GETMAIN A "DATA STORAGE
.* AREA" AND USE THE BEGINNING OF IT AS A REGISTER SAVE AREA. IN THIS
.* SITUATION, THIS MACRO CAN BE USED TO MAP THE BEGINNING OF THE DSA.
.* THE REMAINDER OF THE DSA, OF COURSE, WOULD HAVE TO BE MAPPED
.* MANUALLY.
.*
.*   IF THE NAME FIELD ON THE MACRO CALLING STATEMENT IS OMITTED, THEN
.* THE GENERATED DSECT IS NAMED "DSA" AND ALL GENERATED FIELD NAMES ARE
.* PREFIXED WITH "DSA". IF THE NAME FIELD IS USED, THEN IT INSTEAD OF
.* "DSA" IS USED IN THE ABOVE MANNER.
.*
.*   INNER MACROS USED - NONE
.*
.*
.*
         LCLA  &A1
         LCLC  &N
&N       SETC  'DSA'
         AIF   (K'&NME EQ 0).GOTNME
&N       SETC  '&NME'
.GOTNME  ANOP
&N       DSECT  ,                  STANDARD REGISTER SAVE AREA
&N.WD1   DS    A -                 WORD-1 (USED BY PL/1)
&N.HSA   DS    A -                 HIGHER SAVE AREA POINTER
&N.LSA   DS    A -                 LOWER SAVE AREA POINTER
&N.R14   DS    A -                 REGISTER SAVE AREA (RETURN ADDRESS)
&N.R15   DS    A -                 REGISTER SAVE AREA (ENTRY POINT)
&A1      SETA  0-1
.LP      AIF   (&A1 EQ 12).END
&A1      SETA  &A1+1
&N.R&A1  DS    A -                 REGISTER SAVE AREA
         AGO   .LP
.END     MEND
./ ADD NAME=#DSORG   0100-89041-89041-0921-00060-00060-00000-DYNABLD
         MACRO
&N       #DSORG &D
.*
.*
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $DSORG TO #DSORG.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - APRIL 1, 1975
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       809 WHITNEY AVE.
.*       NEW HAVEN, CT. 06511
.*
.*
.*
.*   THIS MACRO WAS WRITTEN TO BE AN INNER MACRO FOR THE #DCBD MACRO.
.* ITS SOLE PURPOSE IS TO GENERATE DSORG FIELD AND BIT NAMES FOR THE
.* #DCBD MACRO.
.*
.*
.*
.* INNER MACROS USED - NONE
.*
         GBLB  &#DCBDSG
         GBLB  &#DCBSW(150)
         LCLC  &P
&P       SETC  'DCB'
         AIF   ('&N' EQ '').GOTPFIX
&P       SETC  '&N'
.GOTPFIX ANOP
&P.DSORG DS    0BL2 -         DATA SET ORGANIZATION BEING USED
&P.DSRG1 DS    BL1 -          FIRST BYTE OF DCBDSORG
         AIF   (&#DCBDSG).SKP1
DCBDSGIS EQU   BIT0 -         IS - INDEXED SEQUENTIAL ORGANIZATION
DCBDSGPS EQU   BIT1 -         PS - SHYSICAL SEQUENTIAL ORGANIZATION
DCBDSGDA EQU   BIT2 -         DA - DIRECT ORGANIZATION
DCBDSGCX EQU   BIT3 -         CX - BTAM OR QTAM LINE GROUP
DCBDSGCQ EQU   BIT4 -         CQ - QTAM DIRECT ACCESS MESSAGE QUEUE
DCBDSGMQ EQU   BIT5 -         MQ - QTAM PROBLEM PROGRAM MESSAGE QUEUE
DCBDSGPO EQU   BIT6 -         PO - PARTITIONED ORGANIZATION
DCBDSGU  EQU   BIT7 -         U  - UNMOVABLE, THE DATA CONTAINS
*                                  LOCATION DEPENDENT INFORMATION
.SKP1    ANOP  ,
&P.DSRG2 DS    BL1 -          SECOND BYTE OF DCBDSORG
         AIF   (&#DCBDSG).SKP2
DCBDSGGS EQU   BIT0 -         GS - GRAPHICS ORGANIZATION
DCBDSGTX EQU   BIT1 -         TX - TCAM LINE GROUP
DCBDSGTQ EQU   BIT2 -         TQ - TCAM MESSAGE QUEUE
DCBACBM  EQU   BIT4 -         ACCESS METHOD CONTROL BLOCK   ICBI DCB-1
         AIF   (&#DCBSW(44)).SKP2
&#DCBSW(44) SETB (1)
DCBDSGTR EQU   BIT5 -         TR - TCAM 3705                    S22024
.SKP2    ANOP
&#DCBDSG SETB  (1)
         MEND
./ ADD NAME=#ENTER   0100-89041-89041-0921-00825-00825-00000-DYNABLD
         MACRO
&N       #ENTER &NME,&ESDTYPE=DEFAULT,&BASES=1,&SAVTYPE=LOCAL,&PFIX=
.*
.*
.*                                                            08/84 DBC
.* LAST CHANGE DATE - AUGUST 8, 1984                          08/84 DBC
.*                  - WHEN BASES=* IS SPECIFIED, #ENTER NOW   08/84 DBC
.*                    DERIVES THE DESIRED BASE ADDRESS BY     08/84 DBC
.*                    SUBTRACTING AN OFFSET FROM THE          08/84 DBC
.*                    CURRENT ENTRY ADDRESS. PREVIOUSLY, IT   08/84 DBC
.*                    WAS JUST LOADING AN ADCON FOR THE       08/84 DBC
.*                    DESIRED BASE ADDRESS. THIS CAUSED       08/84 DBC
.*                    PROBLEMS IF THE #ENTER MACRO WAS        08/84 DBC
.*                    LOCATED WITHIN DYNAMICALLY RELOCATED    08/84 DBC
.*                    CODE.                                   08/84 DBC
.*                  - SIMILARLY, WHEN SAVTYPE=(REMOTE,NME%)   08/84 DBC
.*                    IS SPECIFIED, THE DESIRED SAVE AREA     08/84 DBC
.*                    IS LOCATED BY ADDING AN OFFSET (WHICH   08/84 DBC
.*                    MAY BE NEGATIVE) TO THE CURRENT ENTRY   08/84 DBC
.*                    ADDRESS.                                08/84 DBC
.*                                                            06/84 DBC
.* LAST CHANGE DATE - JUNE 11, 1984                           06/84 DBC
.*                  - ADDED "SAVTYPE=NONE" SUPPORT.           06/84 DBC
.*                  - WHEN A REMOTE SAVE AREA WAS USED,       06/84 DBC
.*                    #ENTER USE TO GENERATE A "USING"        06/84 DBC
.*                    STATEMENT DECLARING R13 AS A BASE FOR   06/84 DBC
.*                    THAT SAVE AREA. THAT "USING" STATEMENT  06/84 DBC
.*                    IS NO LONGER GENERATED.                 06/84 DBC
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 27, 1983
.*                  - MAILING ADDRESS CHANGE.
.*                  - USE OF IBM'S "SAVE" MACRO HAS BEEN
.*                    REPLACED BY LOCAL CODE.
.*                  - THE ASSEMBLY DATE AND TIME ARE NOW
.*                    INCLUDED IN THE MODULE IDENTIFIER
.*                    TEXT.
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $ENTER TO #ENTER.
.*
.* LAST CHANGE DATE - APRIL 15, 1981
.*                  - ADDED ENTRY LINKAGE FOR A PLI ENVIRONMENT.
.*                  - ADDED "#REGS GEN=NO" SUPPORT.
.*
.* LAST CHANGE DATE - JULY 18, 1980
.*                  - BUG FIXED: THE PRECEEDING MODIFICATION INTRODUCED
.*                    AN ERROR WHICH UNDER CERTAIN CIRCUMSTANCES
.*                    GENERATED ASSEMBLY ERRORS.
.*
.* LAST CHANGE DATE - JULY 10, 1980
.*                  - FOR GETMAINED REENTRANT SAVE AREAS, CODE HAS BEEN
.*                    ADDED TO CLEAR THE ENTIRE GETMAINED AREA TO ZEROS
.*                    BEFORE SETING THE CHAIN FIELD.
.*                  - INDIRECT ADDRESSING TO A REMOTE SAVE AREA IS NOW
.*                    SIGNALLED BY A TRAILING PERCENT SIGN RATHER THAN
.*                    A LEADING PERCENT SIGN.
.*
.* LAST CHANGE DATE - OCTOBER 3, 1979
.*                  - CODE HAS BEEN ALTERED SO THAT ADDRESSABILITY TO
.*                    A REMOTE SAVE AREA DOES NOT HAVE TO BE BASED ON
.*                    R15 (I.E., ON THE ENTRY ADDRESS).
.*
.* LAST CHANGE DATE - OCTOBER 3, 1978
.*                  - THE GETMAIN FOR THE RENTRANT SAVE AREA HAS BEEN
.*                    CHANGED SO THAT MORE THAN 4K BYTES CAN BE GOTTEN.
.*
.* LAST CHANGE DATE - FEBRUARY 28, 1978
.*                  - BUG FIXED IN REMOTE SAVE AREA HANDLING
.*
.* LAST CHANGE DATE - JANUARY 29, 1978
.*                  - IN MOST CASES IT IS LOGICALLY INCONSISTANT TO
.*                    CODE 'BASES=*' WHEN ONE OF THE OLD BASES IS R13.
.*                    THIS PROBLEM IS NOW RECOGNIZED AND FLAGGED.
.*
.*                  - A REMOTE SAVE AREA'S NAME CAN NOW BE GIVEN EITHER
.*                    WITH OR WITHOUT A PRECEEDING PERCENT (%) SIGN TO
.*                    INDICATE WHETHER THE NAMED ADDRESS MUST BE
.*                    REACHED BY INDIRECT ADDRESSING.
.*
.* LAST CHANGE DATE - NOVEMBER 4, 1977
.*                  - SUPPORT IS ADDED FOR DEFINING A LOCAL SAVE AREA
.*                    WHOSE LENGTH IS OTHER THAN 72 BYTES.
.*
.* LAST CHANGE DATE - JANUARY 13, 1977
.*                  - THE MF= AND SVID= OPERANDS ARE REPLACED BY THE
.*                    SAVTYPE= OPERAND.
.*                  - SUPPORT FOR THE HANDLING OF A REMOTELY ASSEMBLED
.*                    SAVE AREA.
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - SEPTEMBER 14, 1976
.*                  - IMPLEMENT SUPPORT FOR "BASES=*" WHICH IMPLIES
.*                    THAT BOTH THE BASE ADDRESS AND BASE REGISTERS
.*                    DEFINED BY THE PHYSICALLY PREVIOUS USE OF THE
.*                    #ENTER MACRO ARE TO BE REUSED.
.*
.* LAST CHANGE DATE - AUGUST 23, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES OS STANDARD ENTRY LINKAGE. IT WAS WRITTEN TO
.* PROVIDE A SIMPLE, FLEXIBLE, AND COMPLETE METHOD OF GENERATING SUCH
.* LINKAGE. IN ADDITION, FOR ALMOST ALL OPERAND COMBINATIONS, #ENTER
.* WILL GENERATE THE ABSOLUTE MINIMUM AMOUNT OF CODE NECESSARY.
.*
.*   THE #ENTER MACRO WILL GENERATE THE FOLLOWING:
.*     - A CSECT OR ENTRY CARD (IF DESIRED)
.*     - A MODULE IDENTIFIER WHICH WILL INCLUDE THE ASSEMBLY
.*       DATE AND TIME.
.*     - CODE TO SAVE ALL REGISTERS IN THE HIGHER SAVE AREA
.*     - CODE TO LOAD R13 WITH A POINTER TO A LOWER SAVE AREA
.*     - CODE TO CROSS LINK THE LOWER SAVE AREA WITH THE HIGHER SAVE
.*       AREA
.*     - CODE TO LOAD ANY SET OF BASE REGISTERS
.*     - A USING STATEMENT DECLARING THE SET OF BASE REGISTERS
.*     - EITHER THE LOWER SAVE AREA ITSELF OR CODE TO GETMAIN A
.*       REENTRANT SAVE AREA OF 72 OR MORE BYTES OR CODE TO LOAD THE
.*       ADDRESS OF AN ASSEMBLED SAVE AREA THAT IS REMOTE FROM THE
.*       MACRO EXPANSION.
.*     - FOR A GETMAINED REENTRANT SAVE AREA, CODE TO CLEAR THE AREA TO
.*       ZEROS.
.*
.* &N
.*       THIS IS THE ONLY FIELD REQUIRED FOR THE MACRO CALL. IT MUST
.*       SPECIFY THE DESIRED CONTROL SECTION OR ENTRY NAME.
.*
.* &NME
.*       USE THIS FIELD TO SPECIFY OPTIONAL TEXT TO BE
.*       INCLUDED INTO THE MODULE IDENTIFIER. ENCLOSING
.*       QUOTES ARE OPTIONAL.
.*
.* &ESDTYPE=
.*       THIS OPERAND CONTROLS THE TYPE OF EXTERNAL SYMBOL (IF ANY) TO
.*       BE GENERATED USING &N. VALID VALUES FOR THIS OPERAND IMPLY THE
.*       FOLLOWING:
.*              -OMITTED-    ==> ESDTYPE=ENTRY IF SAVTYPE=PLI
.*              -OMITTED-    ==> ESDTYPE=CSECT OTHERWISE
.*             ESDTYPE=CSECT ==>
.*                     &N       CSECT
.*             ESDTYPE=START ==>
.*                     &N       START
.*             ESDTYPE=ENTRY ==>
.*                              ENTRY &N
.*                     &N       DS    0H
.*             ESDTYPE=     <==>
.*             ESDTYPE=NONE  ==>
.*                     &N       DS    0H
.*
.* &BASES=
.*       USE THIS OPERAND TO SPECIFY EITHER HOW MANY OR EXACTLY WHICH
.*       BASE REGISTERS TO DECLARE AND LOAD. VALID VALUES FOR THIS
.*       OPERAND ARE:
.*             BASES= -A SINGLE SELF DEFINING NUMERIC-
.*                   THIS REQUESTS THAT A SPECIFIC NUMBER OF BASES BE
.*                   LOADED AND DECLARED. THE MACRO IS ALLOWED TO
.*                   DETERMINE FOR ITSELF PRECISELY WHICH REGISERS TO
.*                   DECLARE AS FOLLOWS. FOR SAVTYPE=LOCAL (SEE BELOW)
.*                   THE FIRST BASE REGISTER WILL BE R13; OTHERWISE
.*                   (I.E. FOR SAVTYPE=RENT OR SAVTYPE=REMOTE), THE
.*                   FIRST BASE REGISTER WILL BE R12. IN EITHER CASE,
.*                   ADDITIONAL BASES WILL BE SUCCESSIVELY LOWER
.*                   NUMBERED REGISTERS. EXAMPLES:
.*                   BASES=3,SAVTYPE=RENT  ==> R12, R11, AND R10.
.*                   BASES=2,SAVTYPE=LOCAL ==> R13, AND R12.
.*             BASES= -A SUBLIST OF ONE OR MORE REGISTER NAMES-
.*                   THE LISTED REGISTERS ARE LOADED AND DECLARED AS
.*                   BASES. THE LEFTMOST LISTED REGISTER IS LOADED WITH
.*                   THE LOWEST ADDRESS. EXAMPLE:
.*                   BASES=(R5,6,4) ==> R5, R6, AND R4 IN THAT ORDER.
.*             BASES=*
.*                   THE BASE ADDRESS AND BASE REGISTERS DEFINED BY THE
.*                   PHYSICALLY PREVIOUS #ENTER MACRO ARE REUSED.
.*          THE BASES= OPERAND MAY BE NULLIFIED BY SPECIFYING EITHER:
.*             BASES=
.*             BASES=0
.*       IN THIS CASE, NO BASE REGISTERS ARE LOADED OR DECLARED.
.*          IF THE BASES= OPERAND IS OMITTED, THEN A DEFAULT OF BASES=1
.*       WILL BE USED.
.*
.* &SAVTYPE=
.*       THIS OPERAND IDENTIFIES THE TYPE OR LOCATION OF THE SAVE AREA
.*       TO BE GENERATED OR USED. VALID VALUES ARE:
.*             -OMITTED-
.*             SAVTYPE=
.*             SAVTYPE=LOCAL
.*             SAVTYPE=(,-SAVE AREA NAME-)
.*             SAVTYPE=(LOCAL,-SAVE AREA NAME-)
.*             SAVTYPE=(LOCAL,,-SAVE AREA LENGTH-)
.*             SAVTYPE=(LOCAL,-SAVE AREA NAME-,-SAVE AREA LENGTH-)
.*                     A STANDARD SAVE AREA IS GENERATED IN THE
.*                     THE MACRO EXPANSION AND ITS ADDRESS IS LOADED
.*                     INTO R13. NOTE, DEPENDING UPON THE BASES=
.*                     OPERAND (SEE ABOVE) R13 MAY ALSO BE DECLARED AS
.*                     A PROGRAM BASE.
.*                        IF A -SAVE AREA NAME- IS GIVEN, THEN IT IS
.*                     USED TO LABEL THE SAVE AREA; OTHERWISE, AN
.*                     INTERNAL NAME IS GENERATED.
.*                              IF -SAVE AREA LENGTH- IS GIVEN, THEN IT
.*                              IS USED TO SET THE LENGTH OF THE SAVE
.*                              AREA; OTHERWISE, THE DEFAULT LENGTH OF
.*                              72 BYTES IS USED.
.*             SAVTYPE=(REMOTE,-SAVE AREA ADDRESS-)
.*                     THE ADDRESS OF THE REMOTE SAVE AREA IS
.*                     LOADED INTO R13. NOTE, IN THIS CASE -SAVE AREA
.*                     ADDRESS- IS A REQUIRED SUB-OPERAND. IT MAY BE
.*                     EITHER AN ADDRESS LABEL OR A PARENTHESIZED
.*                     REGISTER NAME OR AN ADDRESS LABEL FOLLOWED BY A
.*                     PERCENT (%) SIGN. IF THE NAME IS JUST AN ADDRESS
.*                     LABEL, THEN A 'LA' INSTRUCTION IS USED TO LOAD
.*                     THE SAVE AREA'S ADDRESS. IF A PERCENT SIGN
.*                     FOLLOWS THE NAME, THEN AN ADDRESS CONSTANT IS
.*                     GENERATED AND A 'L' INSTRUCTION IS USED. IF A
.*                     REGISTER NAME IS GIVEN, THEN A 'LR' INSTRUCTION
.*                     IS USED UNLESS THE MACRO CAN DETERMINE THAT THE
.*                     NAMED REGISTER IS ACTUALLY R13 IN WHICH CASE IT
.*                     IS ASSUMED THAT THE LOWER SAVE AREA IS ALREADY
.*                     PRESENT AND INITIALIZED, SO THE SAVING OF
.*                     REGISTERS AND THE CROSS-CHAINING OF THE SAVE
.*                     AREAS IS BYPASSED.
.*             SAVTYPE=RENT
.*             SAVTYPE=(RENT,(-LENGTH-,-SUBPOOL-),-ERROR ADDRESS-)
.*             SAVTYPE=(RENT,(-LENGTH-,-SUBPOOL-),RETURN)
.*                     THE MACRO EXPANSION IS TO BE REENTRANT. THE SAVE
.*                     AREA IS TO BE GETMAINED. THE SUB-OPERANDS HAVE
.*                     THE FOLLOWING AFFECT:
.*                     -LENGTH- IS OPTIONAL. IF OMITTED, THEN A VALUE
.*                              OF 72 IS USED. IF GIVEN, THEN IT
.*                              INDICATES THE SIZE OF THE SAVE AREA TO
.*                              BE GOTTEN. WARNING, THE VALUE OF
.*                              -LENGTH- SHOULD NEVER BE LESS THAN 72.
.*                     -SUBPOOL- IS OPTIONAL. IF OMITTED, THEN A VALUE
.*                               OF 0 IS IMPLIED. IF GIVEN, THEN IT
.*                               SPECIFIES THE SUBPOOL OUT OF WHICH THE
.*                               SAVE AREA IS TO BE GOTTEN.
.*                     -ERROR ADDRESS- IS OPTIONAL. IF OMITTED, THEN
.*                                     THE SAVE AREA GETMAIN REQUEST IS
.*                                     UNCONDITIONAL. IF GIVEN, THEN
.*                                     THE GETMAIN IS CONDITIONAL, AND
.*                                     IF IT FAILS, THEN CONTROL IS
.*                                     PASSED TO THE INDICATED ADDRESS.
.*                                     NOTE, -ERROR ADDRESS- MAY BE
.*                                     EITHER A STATEMENT LABEL OR A
.*                                     PARENTHESIZED REGISTER NAME.
.*                                     WARNING, -ERROR ADDRESS- MAY BE
.*                                     USED ONLY IN A MVS ENVIRONMENT.
.*                                     IT IS NOT SUPPORTED UNDER MVT.
.*                     RETURN IS A SPECIAL FORM OF -ERROR ADDRESS-
.*                            WHICH, IF GIVEN, CAUSES CONTROL TO BE
.*                            RETURNED IMMEDIATELY TO THE CALLER IN THE
.*                            EVENT OF A GETMAIN FAILURE. ALL REGISTERS
.*                            ARE RESTORED EXCEPT R15 WHICH CONTAINS
.*                            THE RETURN CODE FROM GETMAIN.
.*             SAVTYPE=PLI
.*             SAVTYPE=NONE                                   06/84 DBC
.*                     NO LOCAL LEVEL SAVEAREA IS DEFINED OR  06/84 DBC
.*                     USED.                                  06/84 DBC
.*             SAVTYPE=(PLI,-LENGTH-)
.*                     THE MACRO IS TO EXPAND INTO THE FORMAT OF A PLI
.*                     PROLOG. THE EXPANSION IS REENTRANT. THE SAVE
.*                     AREA WILL BE A PLI DSA. IT WILL PROBABLY BE
.*                     OBTAINED FROM PLI'S ISA. IF -LENGTH- IS GIVEN,
.*                     THEN IT SPECIFIES THE DESIRED LENGTH OF THE DSA
.*                     THAT THIS EXPANSION OBTAINS. WARNING, THE VALUE
.*                     OF -LENGTH- MUST NEVER BE LESS THAN 88.
.*
.* &PFIX=
.*       THE #ENTER MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS
.*       EXPANSION WHEN REFERING TO REGISTERS. THIS IS SO THAT THE USE
.*       OF THE REGISTERS IS INDICATED IN THE ASSEMBLER'S CROSS
.*       REFERENCE LISTING. THE PFIX= OPERAND CAN BE USED TO CONTROL
.*       THE SET OF EQUATES USED. FOR EXAMPLE, IF "PFIX=GPR" IS GIVEN,
.*       THEN "GPR1" IS USED WHENEVER THE EXPANSION REFERS FO REGISTER
.*       1.
.*          IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF REGISTER
.*       EQUATES DEFINED BY THE NEXT PRIOR #REGS MACRO IS USED. IF
.*       THERE ARE NO PRIOR #REGS MACROS, THEN SELF-DEFINING NUMERICS
.*       ARE USED.
.*
.* MISCELLANIOUS CONSIDERATIONS
.*     - SINCE THE #ENTER MACRO EXPANSION USUALLY INCLUDES A CSECT
.*       CARD, THE MACRO CALL SHOULD BE PLACED AT THE PHYSICAL
.*       BEGINNING OF A CONTROL SECTION.
.*     - FOR LOCAL SAVE AREAS IT IS BOTH POSSIBLE AND REASONABLE FOR
.*       R13 TO SERVE AS BOTH THE SAVE AREA POINTER AND A PROGRAM BASE.
.*       THERE ARE, HOWEVER, CERTAIN PRECAUTIONS THAT HAVE TO BE TAKEN
.*       FOR VARIOUS SYSTEM EXIT ROUTINES IF THEY ARE INCLUDED IN THE
.*       PROGRAM. HERE ARE SOME EXAMPLES:
.*           - IOS APPENDAGE ROUTINES: NO BASE REGISTER FOR THE MAIN
.*             PROGRAM, INCLUDING R13, IS AVAILABLE FROM WITHIN AN IOS
.*             APPENDAGE.
.*           - DCB OPEN EXITS: R13 REMAINS A VALID BASE REGISTER.
.*           - EOD ROUTINES: R13 REMAINS A VALID BASE REGISTER.
.*           - SYNAD EXITS: R13 REMAINS A VALID BASE REGISTER UNTIL A
.*             SYNADAF MACRO IS ISSUED. AFTER A SUBSEQUENT SYNADRLS
.*             MACRO, R13 IS AGAIN A VALID PROGRAM BASE.
.*
.*
.*
.* INNER MACROS USED - #USING, #TEST, SAVE, GETMAIN
.*
         GBLA  &#TESERR
         GBLB  &#ENTRNT,&#ENTPLI,&#ENTNUN                     06/84 DBC
         GBLC  &#TESRET(20),&#ENTSIZ,&#ENTSP,&#BS(14)
         LCLA  &A1,&A2,&C1,&C2,&C3,&C4,&B(13),&RMTREGA
         LCLB  &REDUN(13),&OLDBASE,&REMOTE(5),&ALIGND,&LOCAL,&LENGTH
         LCLC  &LID,&@,&#,&N1,&N2,&W2,&W3,&R,&RMTREGC,&SAVLEN,&RMTNAME
         LCLC  &SPOOL,&TB,&ESDT,&C                            06/84 DBC
&#       SETC  '&SYSNDX'
&#ENTRNT SETB  (0)
&#ENTPLI SETB  (0)
&#ENTNUN SETB  (0)
&C1      SETA  11
.*                                                            06/84 DBC
         AIF   ('&SAVTYPE' NE 'NONE').TYPNNON                 06/84 DBC
&#ENTNUN SETB  (1)                                            06/84 DBC
         AGO   .PFXTST                                        06/84 DBC
.TYPNNON ANOP                                                 06/84 DBC
.*                                                            06/84 DBC
         AIF   ('&SAVTYPE(1)' NE 'RENT').TYPNRNT
&#ENTRNT SETB  (1)
&#ENTSIZ SETC  '72'
&#ENTSP  SETC  ''
         #TEST DCODE=&SAVTYPE(2)
&A1      SETA  &#TESRET(1)
         AIF   (&A1 EQ 0).PFXTST
         AIF   ('&#TESRET(2)' EQ '').DFLTLEN
&#ENTSIZ SETC  '&#TESRET(2)'
.DFLTLEN AIF   (&A1 EQ 1).PFXTST
&#ENTSP  SETC  '&#TESRET(3)'
         AGO   .PFXTST
.TYPNRNT ANOP
.*
         AIF   ('&SAVTYPE(1)' NE 'REMOTE').TYPNRMT
&REMOTE(1) SETB (1)
         AIF   ('&SAVTYPE(2)' NE '').GOTRMT2
         MNOTE 12,'ERROR - SAVTYPE(2) (REMOTE AREA''S NAME) OMITTED.'
.GOTRMT2 AIF   ('&SAVTYPE(2)'(1,1) EQ '(').TYPLCL2
&REMOTE(2) SETB (1)
&RMTNAME SETC  '&SAVTYPE(2)'
         AIF   ('&SAVTYPE(2)'(K'&SAVTYPE(2),1) NE '%').PFXTST
&REMOTE(5) SETB (1)
&RMTNAME SETC  '&SAVTYPE(2)'(1,K'&SAVTYPE(2)-1)
         AGO   .PFXTST
.TYPLCL2 #TEST DCODE=&SAVTYPE(2)
&RMTREGC SETC  '&#TESRET(2)'
         #TEST REGS=&RMTREGC
         AIF   (&#TESERR NE 0).PFXTST
&RMTREGA SETA  &#TESRET(1)
         AIF   (&RMTREGA NE 13).PFXTST
&REMOTE(3) SETB (1)
         AGO   .PFXTST
.TYPNRMT ANOP
.*
         AIF   ('&SAVTYPE(1)' NE 'PLI').TYPNPLI
&#ENTPLI SETB  (1)
&C1      SETA  10
         AGO   .PFXTST
.TYPNPLI ANOP
.*
         AIF   ('&SAVTYPE(1)' EQ '' OR '&SAVTYPE(1)' EQ 'LOCAL').TYPLCL
         MNOTE 4,'SAVTYPE(1)=&SAVTYPE(1) IS INVALID.'
         MNOTE 4,'SAVTYPE(1)=LOCAL ASSUMED.'
.TYPLCL  ANOP
&LOCAL   SETB  (1)
&C1      SETA  12
&LID     SETC  'E&#.SVA'
         AIF   ('&SAVTYPE(2)' EQ '').GOTSLID
&LID     SETC  '&SAVTYPE(2)'
.GOTSLID ANOP
&SAVLEN  SETC  '72'
         AIF   ('&SAVTYPE(3)' EQ '').PFXTST
&SAVLEN  SETC  '&SAVTYPE(3)'
.*
.PFXTST  ANOP
&@       SETC  '&PFIX'
         AIF   (K'&PFIX NE 0).GOTPFIX
         #TEST PFIX=
&@       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.GOTPFIX #REGS &PFIX,GEN=NO
.DONPFIX ANOP
.*                                                            06/84 DBC
&A1      SETA  0
         AIF   ('&BASES' NE '*').BSCLR
.BSOLD   AIF   (&A1 EQ 13).BASEND
&A1      SETA  &A1+1
         AIF   ('&#BS(&A1)' EQ '').BSOLD
         #TEST REGS=&#BS(&A1)
&B(&A1)  SETA  16
         AIF   (&#TESERR NE 0).BSOLD
&B(&A1)  SETA  &#TESRET(1)
         AIF   (&B(&A1) NE 13).BSOLD
         AIF   (&A1 NE 13 OR '&#BS(14)' NE '&RMTNAME' OR &#ENTRNT OR &#*
               ENTPLI).BSERROR
&REMOTE(4) SETB (1)
         AGO   .BSOLD
.BSERROR ANOP
         MNOTE 4,'THE OLD BASE REGISTER &B(&A1) CANNOT ALSO FUNCTION'
         MNOTE 4,'AS A SAVE AREA POINTER IN THIS CONTEXT.'
         MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*
               '
         AGO   .BSOLD
.BSCLR   AIF   (&A1 EQ 14).BSCLRD
&A1      SETA  &A1+1
&#BS(&A1) SETC ''
         AGO   .BSCLR
.BSCLRD  AIF   (K'&BASES EQ 0).BASEND
         AIF   ('&BASES' NE '&BASES(1)').TSTNBSE
         #TEST NUM=&BASES
         AIF   (&#TESERR EQ 0).BSEOKX
         MNOTE 4,'"BASES=&BASES" IS INVALID.'
         MNOTE 4,'"BASES=1" ASSUMED.'
&C3      SETA  1
         AGO   .BSESET
.BSEOKX  ANOP
&C3      SETA  &BASES
         AIF   (&C3 LE &C1).BSESET
         MNOTE 4,'"BASES=&BASES" IS OUTSIDE THE RANGE OF 0...&C1..'
         MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*
               '
.BSESET  ANOP
&C1      SETA  &C1+1
&C3      SETA  &C1-&C3
&C4      SETA  13
.BOK     AIF   (&C1 LE &C3).BASEND
&#BS(&C4) SETC '&@&C1'
&B(&C4)  SETA  &C1
&C1      SETA  &C1-1
&C4      SETA  &C4-1
         AGO   .BOK
.TSTNBSE ANOP
&C3      SETA  N'&BASES
         AIF   (&C3 LE &C1).NBSOK
         MNOTE 4,'"BASES=&BASES" SPECIFIES TOO MAY REGISTERS.'
         MNOTE 4,'ONLY THE FIRST &C1 REGISTERS WILL BE USED.'
&C3      SETA  &C1
.NBSOK   ANOP
&C1      SETA  &C1+1
&C4      SETA  13
&C2      SETA  0
.GETBSE  AIF   (&C2 GE &C3).BASEND
&C2      SETA  &C2+1
         AIF   ('&BASES(&C2)' EQ '').IGNR
         #TEST REGS=&BASES(&C2)
&B(&C4)  SETA  16
         AIF   (&#TESERR EQ 16).REGUNK
         AIF   (&#TESRET(1) GE 2 AND &#TESRET(1) LE &C1).BSEOK2
         MNOTE 4,'"BASES(&C2)=&BASES(&C2)" IS OUTSIDE THE RANGE OF 2...*
               &C1..'
         MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*
               '
         AGO   .BSEOK2
.IGNR    AIF   (&C3 GE N'&BASES).GETBSE
&C3      SETA  &C3+1
         AGO   .GETBSE
.BSEOK2  AIF   (NOT &REDUN(&#TESRET(1))).BSEOK3
         MNOTE 4,'"BASES(&C2)=&BASES(&C2) IS REDUNDANT.'
         MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*
               '
.BSEOK3  ANOP
&REDUN(&#TESRET(1)) SETB (1)
&B(&C4)  SETA &#TESRET(1)
.REGUNK  ANOP
&C1      SETA  12
&#BS(&C4) SETC '&BASES(&C2)'
&C4      SETA  &C4-1
         AGO   .GETBSE
.BASEND  ANOP
.*
&R       SETC  '&@.1'
&C3      SETA  0
.WRLP    AIF   (&C3 GE 13).GOTWRG
&C3      SETA  &C3+1
         AIF   ('&#BS(&C3)' EQ '').WRLP
         AIF   (&B(&C3) EQ 13).GOTWRG
&R       SETC  '&#BS(&C3)'
.GOTWRG  ANOP
.*
&ESDT    SETC  '&ESDTYPE(1)'
         AIF   (&#ENTPLI).PLIGEN
.*
         AIF   ('&ESDT' NE 'DEFAULT').GOTESD
&ESDT    SETC  'CSECT'
.GOTESD  ANOP
&N2      SETC  '&N'
         AIF   ('&ESDT' EQ 'NONE' OR '&ESDT' EQ '' OR '&ESDT' EQ 'ENTRY*
               ').NCSCETC
         AIF   ('&ESDT' NE 'CSECT').ESDNCSC
&N       CSECT ,                   START CONTROL SECTION
         AGO   .ESDDONE
.ESDNCSC AIF   ('&ESDT' NE 'START').ESDNSTA
&N       START ,                   START CONTOL SECTION
         AGO   .ESDDONE
.ESDNSTA ANOP
&W2      SETC  '&ESDT'
&N       &W2   0H'0'               START
.ESDDONE ANOP
&N2      SETC  ''
.*
.NCSCETC AIF   ('&ESDT' NE 'ENTRY').NENTRY
         ENTRY &N                  MAKE NAME EXTERNALLY AVAILABLE
.NENTRY  ANOP
.*
         AIF   (K'&NME EQ 0 AND '&ESDT' NE 'CSECT' AND '&ESDT' NE 'STAR*
               T').NMODID
&N2      B     E&#.ZID-&N.(,&@.15) SKIP AROUND THE MODULE ID
&N2      SETC  'E&#.ZID'
         DC    AL1(&N2-E&#.MID)    LENGTH OF TEXT
E&#.MID  DC    C'&N '              ENTRY NAME
&W2      SETC  '&SYSDATE       '(1,8).' '
         DC    C'&W2'              ASSEMBLY DATE
&W2      SETC  '&SYSTIME    '(1,5)
         AIF   (K'&NME EQ 0).NMEZ1
&W2      SETC  '&W2 - '
.NMEZ1   DC    C'&W2'              ASSEMBLY TIME
         AIF   (K'&NME EQ 0).NMEZ2
         AIF   ('&NME'(1,1) EQ '''').QNME
         DC    C'&NME'
         AGO   .NMEZ2
.QNME    DC    C&NME
.NMEZ2   ANOP
.NMODID  ANOP
.*
         AIF   (&REMOTE(3)).RNTRNT1
&W2      SETC  '&@.14,&@.12,12(&@.13)'
&N2      STM   &W2                 SAVE CALLER'S REGISTERS
&N2      SETC  ''
.*
         AIF   (&#ENTRNT OR &#ENTNUN).RNTRNT1                 06/84 DBC
         LR    &R,&@.13            POINT TO HIGHER SA
         AIF   (&REMOTE(1)).LRMTSV1
&C       SETC  '&@.13,&LID-&N.(,&@.15)'                       06/84 DBC
         LA    &C                  POINT TO LOWER SA
         AGO   .LRMTSV2
.LRMTSV1 AIF   (&REMOTE(2)).LRMTSV3
         #TEST REGS=&R
         AIF   (&RMTREGA NE &#TESRET(1)).LRMTSV4
&A1      SETA  20+&RMTREGA*4-&RMTREGA/13*44
         L     &@.13,&A1.(,&@.13)  POINT TO LOWER SA
         AGO   .LRMTSV2
.LRMTSV4 LR    &@.13,&RMTREGC      POINT TO LOWER SA
         AGO   .LRMTSV2
.LRMTSV3 AIF   (&REMOTE(5)).LRMTSV5
         PUSH  USING               SAVE USING ENVIRONMENT
         USING &N,&@.15            DECLARE TEMP BASE
         LA    &@.13,&RMTNAME      POINT TO LOWER SA
         POP   USING               RESTORE USING ENVIRONMENT
         AGO   .LRMTSV2                                       06/84 DBC
.LRMTSV5 ANOP                                                 06/84 DBC
         LR    &@.13,&@.15         POINT TO LOWER SA          08/84 DBC
&C       SETC  '&@.13,E&#.SAP-&N.(,&@.15)'                    06/84 DBC
         AH    &C                                             08/84 DBC
.LRMTSV2 ST    &@.13,8(,&R)        FORWARD CHAIN THE SAVE AREAS
         ST    &R,4(,&@.13)        BACK CHAIN THE SAVE AREAS
         AIF   ('&R' NE '&@.1').RNTRNT1
         L     &@.1,24(,&@.1)      RESTORE REGISTER 1
.RNTRNT1 AIF   ('&#BS(13)' EQ '').SKIPUSE
&C1      SETA  13
         AIF   ('&BASES' NE '*').BSEADR
         AIF   (&REMOTE(4)).EQUATE
&OLDBASE SETB  (1)
&N2      LR    &#BS(13),&@.15      LOAD 1ST BASE REGISTER     08/84 DBC
&N2      SETC  ''                                             08/84 DBC
&C       SETC  '&#BS(13),E&#.BSE-&N.(,&@.15)'                 06/84 DBC
         SH    &C                                             08/84 DBC
         AGO   .EQUATE
.BSEADR  ANOP
&C2      SETA  15
&#BS(14) SETC  '&N'
         AIF   (&#ENTRNT OR &REMOTE(1) OR &#ENTNUN).FLDTST    06/84 DBC
&C2      SETA  13
&#BS(14) SETC  '&LID'
.FLDTST  AIF   (&B(13) EQ &C2).EQUATE
&N2      LR    &#BS(13),&@&C2      LOAD FIRST BASE REGISTER
&N2      SETC  ''
.EQUATE  ANOP
&W2      SETC  '&#BS(&C1)'
         AIF   (&C1 EQ 2).ENDLA
&C1      SETA  &C1-1
         AIF   ('&#BS(&C1)' EQ '').ENDLA
&N2      LA    &#BS(&C1),X'FFF'(,&W2) LOAD NEXT BASE
&N2      SETC  ''
         AGO   .EQUATE
.ENDLA   #USING
.SKIPUSE AIF   (NOT &#ENTRNT).DATACHK
&W2      SETC  ''
&TB      SETC  ''
         AIF   ('&#BS(13)' NE '').GETM2
&N2      LR    &@.14,&@.15         LOAD TEMPORARY BASE
&N2      SETC  ''
         PUSH  USING               SAVE BASES
         DROP  ,                   CLEAR BASES
         USING &N,&@.14            DECLARE TEMPORARY BASE
&TB      SETC  '-&N.(,&@.14)'
.GETM2   ANOP
&N2      L     &@.0,E&#.LEN        LOAD LENGTH (MAYBE SUBPOOL TOO)
&N2      SETC  ''
         AIF   ('&#ENTSP' EQ '' OR '&SAVTYPE(3)' EQ '').GETM4
&SPOOL   SETC  ''
         MNOTE '         GETMAIN RC,LV=(0),SP=&#ENTSP'
         GETMAIN RC,LV=(0),SP=&#ENTSP
         AGO   .GETM5
.GETM4   ANOP
&SPOOL   SETC  '&#ENTSP'
&W3      SETC  'R'
         AIF   ('&SAVTYPE(3)' EQ '').GETM4A
&W3      SETC  'RC'
.GETM4A  MNOTE '         GETMAIN &W3,LV=(0)'
         GETMAIN &W3,LV=(0)
.GETM5   AIF   ('&#BS(13)' NE '').GETM5A
         POP   USING               RESTURE BASES
.GETM5A  AIF   ('&SAVTYPE(3)' EQ '').GETM7
         LTR   &@.15,&@.15         GETMAIN OK?
         AIF   ('&SAVTYPE(3)' EQ 'RETURN').GETM8
         AIF   ('&SAVTYPE(3)'(1,1) EQ '(').GETM6
         BNZ   &SAVTYPE(3)         NO, TAKE ERROR EXIT
         AGO   .GETM7
.GETM6   #TEST DCODE=&SAVTYPE(3)
         BCR   7,&#TESRET(2)       NO, TAKE ERROR EXIT
         AGO   .GETM7
.GETM8   ANOP
&W2      SETC  'E&#.GO'
         BZ    &W2&TB              YES, PROCEED
         L     &@.14,12(,&@.13)    NO, RESTORE REGISTER
         LM    &@.0,&@.12,20(&@.13) RESTORE REGISTERS
         MVI   12(&@.13),X'FF'     SET RETURNED SIGNEL
         BR    &@.14               RETURN TO CALLER
.GETM7   ANOP
&W2      LR    &@.0,&@.1           POINT TO AREA TO CLEAR
         L     &@.1,E&#.LEN&TB     GET LENGTH TO CLEAR
         LR    &@.14,&@.0          SAVE AREA POINTER
         MVCL  &@.0,&@.14          CLEAR THE AREA (R15 SET BY GETMAIN)
         ST    &@.14,8(,&@.13)     FORWARD CHAIN THE SAVE AREAS
         ST    &@.13,4(,&@.14)     BACK CHAIN THE SAVE AREAS
         LM    &@.13,&@.1,8(&@.13) RESTORE REGS AND POINT TO LOWER SA
.DATACHK AIF   (NOT &OLDBASE AND NOT &#ENTRNT AND NOT &REMOTE(5) AND NO*
               T &LOCAL).ENDCHK
         AIF   ('&#BS(13)' EQ '').NOUSING
&N2      B     E&#.END             SKIP AROUND DATA AREA
&N2      SETC  ''
         AGO   .DFNDATA
.NOUSING ANOP
&N2      B     E&#.END-&N.(,&@.15) SKIP AROUND DATA AREA
&N2      SETC  ''
.DFNDATA ANOP                                                 08/84 DBC
.*                                                            08/84 DBC
         AIF   (NOT &OLDBASE).NOLDBSE                         08/84 DBC
E&#.BSE  DC    Y(&N-&#BS(14))       OLD BASE ADDRESS          08/84 DBC
.NOLDBSE ANOP                                                 08/84 DBC
.*                                                            08/84 DBC
         AIF   (NOT &#ENTRNT).NLENGTH                         08/84 DBC
         AIF   ('&SPOOL' EQ '').NSUBPOO
         AIF   (&ALIGND).ALIGND1
         DS    0F                  ALIGNMENT
&ALIGND  SETB  (1)
.ALIGND1 ANOP
E&#.LEN  DC    AL1(&SPOOL),AL3(&#ENTSIZ) SAVE AREA SUBPOOL AND LENGTH
         AGO   .NLENGTH
.NSUBPOO ANOP
E&#.LEN  DC    A(&#ENTSIZ)         SAVE AREA LENGTH
&ALIGND  SETB  (1)
.NLENGTH AIF   (&#ENTRNT OR &#ENTNUN).NSVAREA                 06/84 DBC
         AIF   (&REMOTE(1)).RMTSVPT
         AIF   (&ALIGND).ALIGND2
         DS    0F                  ALIGNMENT
&ALIGND  SETB  (1)
.ALIGND2 ANOP
&LID     DC    (&SAVLEN)X'00'      LOCAL SAVE AREA
         AGO   .NSVAREA
.RMTSVPT ANOP                                                 08/84 DBC
.*                                                            08/84 DBC
         AIF   (NOT &REMOTE(5)).NSVAREA                       08/84 DBC
E&#.SAP  DC    Y(&RMTNAME-&N)       PTR TO REMOTE SA          08/84 DBC
.NSVAREA ANOP                                                 08/84 DBC
.*                                                            08/84 DBC
         AGO   .END                                           08/84 DBC
.*
.PLIGEN  AIF   ('&ESDT' EQ 'DEFAULT').PESDSET
         AIF   (K'&N GT 0 OR '&ESDT' NE 'ENTRY').PESDOK1
         MNOTE 4,'"ESDTYPE=&ESDTYPE" IS INVALID WHEN THE NAME FIELD IS'
         MNOTE 4,'OMITTED FROM THE MACRO CALL.'
         MNOTE 4,'"ESDTYPE=NONE" WILL BE USED INSTEAD.'
&ESDT    SETC  'NONE'
.PESDOK1 ANOP
         AIF   ('&ESDT' EQ 'ENTRY' OR '&ESDT' EQ 'NONE' OR '&ESDT' EQ '*
               ').PESDOK
         MNOTE 4,'"ESDTYPE=&ESDTYPE" IS INVALID WHEN "SAVTYPE=PLI".'
.PESDSET ANOP
&ESDT    SETC  'ENTRY'
         AIF   (K'&N GT 0).PESDOK2
&ESDT    SETC  'NONE'
.PESDOK2 AIF   ('&ESDTYPE' EQ 'DEFAULT').PESDOK
         MNOTE 4,'"ESDTYPE=&ESDT" WILL BE USED INSTEAD.'
.PESDOK  ANOP
         AIF   ('&ESDT' NE 'ENTRY').PNOTENT
         ENTRY &N                  MAKE NAME EXTERNALLY AVAILABLE
.PNOTENT ANOP
.*
&N2      SETC  '&N'
&A1      SETA  K'&N
         AIF   (K'&NME EQ 0).GOTN2
&N2      SETC  '&NME'
&A1      SETA  K'&NME
.GOTN2   ANOP
&N2      SETC  ' '(1,1-(&A1-&A1/2*2)).'&N2'
         DS    0H                  ALIGNMENT
         DC    C'&N2'              ENTRY NAME
         DC    AL1(&A1)            LENGTH OF NAME
.*
&N1      SETC  '&N'
         AIF   (K'&N GT 0).PGOTN1
&N1      SETC  'E&#.ENT'
.PGOTN1  ANOP
         USING &N1,&@.15           DCL LOCAL BASE
&N1      STM   &@.14,&@.12,12(&@.13) SAVE CALLER'S REGISTERS
.*
         #TEST DCODE=&SAVTYPE(2)
&A1      SETA  &#TESRET(1)
&A2      SETA  120
         AIF   (&A1 EQ 0).DSALLA
         AIF   ('&#TESRET(2)' NE '&SAVTYPE(2)').DSALREG
         #TEST NUM=&#TESRET(2)
         AIF   (&#TESERR NE 0).DSALL
&A2      SETA  &#TESRET(2)
         AIF   (&A2 GE 4096-7).DSALL
         AIF   (&A2 GE 120-7).DSALLA
         MNOTE 4,'"SAVTYPE(2)=&SAVTYPE(2)" IS TOO SHORT A LENGTH.'
         MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*
               '
.DSALLA  ANOP
         LA    &@.0,(&A2+7)/8*8    GET DESIRED DSA LENGTH
         AGO   .GOTDSAL
.DSALREG #TEST REGS=&#TESRET(2)
         AIF   (&#TESERR NE 0).DSALLR
         AIF   (&#TESRET(1) EQ 0).GOTLLR
.DSALLR  LR    &@.0,&#TESRET(2)    GET DESIRED DSA LENGTH
.GOTLLR  LA    &@.14,7             ROUND UP -
         AR    &@.0,&@.14           TO -
         OR    &@.0,&@.14            DOUBLE WORD -
         XR    &@.0,&@.14             LENGTH
         AGO   .GOTDSAL
.DSALL   ANOP
&LENGTH  SETB  (1)
         L     &@.0,E&#.LEN        GET DESIRED DSA LENGTH
.GOTDSAL ANOP
.*
         L     &@.1,76(,&@.13)     GET NXT AVAILABLE BLOCK POINTER
         ALR   &@.0,&@.1           --> PAST DESIRED AREA
         CL    &@.0,12(,&@.12)     WOULD THE ISA OVERFLOW?
         BNH   E&#.GOT             NO, PROCEED
         L     &@.15,116(,&@.12)   YES, --> SPECIAL HANDLER
         DROP  &@.15               RELEASE CLOBBERED BASE
         BALR  &@.14,&@.15         GO OBTAIN DESIRED DSA FROM ELSEWHERE
E&#.GOT  LR    &@.14,&@.1          SAVE PTR TO NEW DSA
         LR    &@.15,&@.0          SAVE HI-BYTE OF NAB POINTER REG
         SRL   &@.15,24            ISSOLATE IT
         SLL   &@.15,24            RESTORE ITS POSITION. SET MVCL
*                                  SOURCE LENGTH TO ZERO
         SR    &@.0,&@.1           GET LENGTH OF NEW DSA
         LR    &@.1,&@.0           COPY FOR MVCL SINK LENGTH
         LR    &@.0,&@.14          GET MVCL SINK POINTER
         MVCL  &@.0,&@.14          CLEAR THE NEW DSA
         OR    &@.0,&@.15          RESTORE HI-BYTE TO NAB POINTER REG
         LR    &@.1,&@.0           COPY NEXT AVAILABLE BLOCK POINTER
         L     &@.15,72(,&@.13)    GET LIBRARY WORKSPACE POINTER
         STM   &@.15,&@.1,72(&@.14) STORE INTO OUR NEW DSA
         ST    &@.5,88(,&@.14)     STORE PASSED PARAMETERS POINTER
         ST    &@.13,4(,&@.14)     BACK CHAIN THE DSA
         L     &@.1,24(,&@.13)     RESTORE PLIST POINTER
         LR    &@.13,&@.14         --> NEW DSA (R14 PURIFIED BY MVCL)
         MVI   0(&@.13),X'80'      SET FOR -
         MVI   1(&@.13),X'00'       PLI -
         MVI   86(&@.13),X'91'       ERROR -
         MVI   87(&@.13),X'C0'        HANDLING
.*
&N2      SETC  ''
         AIF   ('&#BS(13)' EQ '').PSKPUSE
&C1      SETA  13
         AIF   ('&BASES' NE '*').PBSEADR
&OLDBASE SETB  (1)
         BALR  &#BS(13),0          LOAD TEMP LOCAL BASE
         L     &#BS(13),E&#.BSE-*(,&#BS(13)) LOAD 1ST PROGRAM BASE
         AGO   .PEQUATE
.PBSEADR ANOP
&N2      SETC  'E&#.BSE'
&#BS(14) SETC  '&N2'
         BALR  &#BS(13),0          LOAD 1ST PROGRAM BASE
.PEQUATE ANOP
&W2      SETC  '&#BS(&C1)'
&C1      SETA  &C1-1
         AIF   (&C1 EQ 1 OR '&#BS(&C1)' EQ '').PENDLA
&N2      LA    &#BS(&C1),X'FFF'(,&W2) LOAD NEXT PROGRAM BASE
&N2      SETC  ''
         AGO   .PEQUATE
.PENDLA  #USING ,
.PSKPUSE ANOP
.*
         AIF   (NOT &LENGTH AND NOT &OLDBASE).ENDCHK
         AIF   ('&#BS(13)' NE '').PGOTBAS
&N2      BALR  &@.15,0             LOAD TEMP BASE
&N2      SETC  ''
         B     E&#.END-*(,&@.15)   SKIP DATA AREA
         AGO   .PDFNDAT
.PGOTBAS ANOP
&N2      B     E&#.END             SKIP DATA AREA
&N2      SETC  ''
.PDFNDAT AIF   (NOT &LENGTH).PNOLEN
E&#.LEN  DC    A((&SAVTYPE(2)+7)/8*8) DESIRED DSA LENGTH
.PNOLEN  AIF   (NOT &OLDBASE).PNOOBAS
E&#.BSE  DC    A(&#BS(14))         OLD BASE ADDRESS
.PNOOBAS ANOP
.*
.END     ANOP
E&#.END  DS    0H
.ENDCHK  AIF   ('&N2' EQ '').MEND
&N2      DS    0H
.MEND    MEND
./ ADD NAME=#EXIT    0100-89041-89041-0921-00357-00357-00000-DYNABLD
         MACRO
&NME     #EXIT &R,&PFIX=,&RC=
.*
.*
.*                                                            10/84 DBC
.* LAST CHANGE DATE - OCTOBER 1, 1984                         10/84 DBC
.*                  - DELETED CODE THAT SET A X'FF' "RETURN   10/84 DBC
.*                    INDICATOR" IN THE HI-BYTE OF DSAR14.    10/84 DBC
.*                    IT WAS NOT APPROPRIATE FOR MVS/XA.      10/84 DBC
.*                                                            06/84 DBC
.* LAST CHANGE DATE - JUNE 11, 1984                           06/84 DBC
.*                  - ADDED SUPPORT FOR "SAVTYPE=NONE" ON THE 06/84 DBC
.*                    #ENTER MACRO.                           06/84 DBC
.*                  - FOR REENTRANT EXIT LINKAGE, CHANGED     06/84 DBC
.*                    THE FREEMAIN SO THAT IT WOULD NO        06/84 DBC
.*                    LONGER GENERATE AN INLINE PLIST.        06/84 DBC
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - CHANGE THE MACRO NAME FROM $EXIT TO #EXIT
.*
.* LAST CHANGE DATE - APRIL 15, 1981
.*                  - ADDED EXIT LINKAGE FOR A PLI ENVIRONMENT.
.*                  - "#REGS GEN=NO" SUPPORT ADDED.
.*
.* LAST CHANGE DATE - OCTOBER 3, 1978
.*                  - FOR REENTRANT SAVE AREAS, THE FREEMAIN HAS BEEN
.*                    CHANGED SO THAT MORE THAN 4K CAN BE FREED.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 10, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES EITHER OS STANDARD OR PLI STANDARD EXIT
.* LINKAGE. IT WAS WRITTEN TO PROVIDE A SIMPLE, FLEXIBLE, AND COMPLETE
.* METHOD FOR GENERATING SUCH LINKAGE. IN ADDITION, FOR ALL POSSIBLE
.* OPERAND COMBINATIONS, #EXIT WILL GENERATE THE ABSOLUTE MINIMUM
.* AMOUNT OF CODE NECESSARY.
.*
.*   THE #EXIT MACRO WILL GENERATE THE FOLLOWING:
.* - CODE TO LOAD REGISTER 13 WITH A POINTER TO THE HIGHER OS SAVE AREA
.*   OR PLI DATA STORAGE AREA
.* - CODE TO RELEASE (VIA FREEMAIN) THE LOWER SAVE AREA IF THE
.*   PRECEEDING #ENTER MACRO CALL GENERATED A REENTRANT EXPANSION
.* - CODE TO RESTORE ANY PARTICULAR SET OF REGISTERS
.* - CODE TO LOAD REGISTER 15 WITH A RETURN CODE THAT IS EITHER AN
.*   ABSOLUTE VALUE OR A VALUE PRELOADED INTO ANY REGISTER
.* - CODE TO RETURN TO THE CALLING PROGRAM VIA REGISTER 14
.*
.*   THE NAME FIELD
.* USE THIS FIELD TO ASSIGN A STATEMENT LABEL TO THE FIRST MACHINE
.* INSTRUCTION OF THE EXPANSION. IF THE NAME FIELD IS OMITTED, THEN NO
.* STATEMENT LABEL IS ASSIGNED.
.*
.*   THE FIRST POSITIONAL OPERAND
.* THIS OPERAND MUST CONSIST OF A SUB-LIST OF ANY NUMBER OF ENTRIES.
.* EACH ENTRY MAY BE EITHER A SINGLE REGISTER NAME OR A PARENTHESIZED
.* PAIR (SEPERATED BY A COMMA) OF REGISTER NAMES - E.G.
.* " (1,11,(7,9),5) ". EACH SINGLE REGISTER NAME SPECIFIES A PARTICULAR
.* REGISTER TO BE RESTORED FROM THE HIGHER SAVE AREA. EACH
.* PARENTHESIZED PAIR OF REGISTER NAMES SPECIFIES A RANGE OF REGISTERS
.* TO BE RESTORED. THUS, THE ABOVE EXAMPLE WOULD CAUSE REGISTERS 1, 5,
.* 7, 8, 9, AND 11 TO BE RESTORED.
.*   SOME NOTES AND WARNINGS:
.* - A REQUEST TO RESTORE REGISTER 13 IS MEANINGLESS AND IS IGNORED.
.* - IF REGISTER 14 IS TO BE LOADED WITH THE RETURN ADDRESS FOUND IN
.*   THE HIGHER SAVE AREA, THEN YOU MUST SPECIFICALLY REQUEST THAT IT
.*   (REGISTER 14) BE RESTORED; OTHERWISE, WHATEVER VALUE IS FOUND IN
.*   REGISTER 14 PRIOR TO THE MACRO CALL WILL BE USED FOR THE RETURN
.*   ADDRESS.
.* - TO RESTORE ALL REGISTERS FROM 14 THROUGH 12, YOU MUST CODE
.*   " ((14,12)) ". CODING " (14,12) " WILL CAUSE ONLY REGISTERS 14 AND
.*   12 TO BE RESTORED.
.* - THE NUMERIC VALUES OF ALL REGISTER NAMES USED IN THIS OPERAND MUST
.*   BE DETERMINABLE AT MACRO PASS TIME. THUS, EACH REGISTER NAME USED
.*   MUST BE EITHER A SELF-DEFINING NUMERIC OR A NAME DEFINED VIA THE
.*   #REGS MACRO.
.* - IF ONLY A SINGLE REGISTER IS TO BE RESTORED, THEN IT NEED NOT BE
.*   ENCLOSED IN PARENTHESES.
.* - IF THE FIRST POSITIONAL OPERAND IS OMITTED, THEN NO REGISTERS ARE
.*   RESTORED.
.*
.*   THE RC= OPERAND
.* THIS OPERAND MUST CONSIST OF A SINGLE VALUE EITHER WITHIN OR NOT
.* WITHIN PARENTHESES. IF ENCLOSED WITHIN PARENTHESES, THEN THE VALUE
.* IS TREATED AS THE NAME OF A REGISTER CONTAINING A RETURN CODE. IF
.* NOT ENCLOSED WITHIN PARENTHESES, THEN THE VALUE IS TREATED AS BEING
.* THE RETURN CODE ITSELF.
.*   IF THE RC= OPERAND SPECIFIES A REGISTER NAME, THEN:
.* - THE VALUE OF THAT NAME NEED NOT BE DETERMINABLE AT MACRO PASS
.*   TIME;
.* - THE REGISTER NAME MAY IDENTIFY ANY REGISTER WHATSOEVER REGUARDLESS
.*   OF WHICH REGISTERS ARE TO BE RESTORED SINCE IN CASES OF POTENTIAL
.*   CONFLICT, THE RETURN CODE IS COPIED INTO REGISTER 15 PRIOR TO
.*   REGISTER RESTORATION;
.* - IT IS ILLOGICAL FOR THE RC= OPERAND TO SPECIFY REGISTER 13.
.* NOTE THAT IF THE RC= OPERAND IS SPECIFIED BUT THE FIRST POSITIONAL
.* OPERAND INDICATES THAT REGISTER 15 IS ALSO TO BE RESTORED, THEN
.* REGISTER 15 IS NOT RESTORED. INSTEAD, IT IS LOADED WITH THE RETURN
.* CODE VALUE.
.*   IF THE RC= OPERAND IS OMITTED, THEN NO CODE IS GENERATED TO LOAD
.* REGISTER 15 WITH A RETURN CODE.
.*
.*   THE PFIX= OPERAND
.* THE #EXIT MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS EXPANSION
.* WHEN REFERING TO REGISTERS. THIS IS SO THAT THE USE OF THE REGISTERS
.* WILL BE INDICATED IN THE CROSS REFERENCE LISTING. THE PFIX= OPERAND
.* CAN BE USED TO CONTROL THE SET OF EQUATES USED. FOR EXAMPLE, IF
.* "PFIX=GPR" IS SPECIFIED, THEN "GPR1" WILL BE USED WHENEVER THE
.* EXPANSION REFERS TO REGISTER 1.
.*   IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF EQUATES DEFINED
.* BY THE FIRST PRIOR #REGS MACRO WILL BE USED. IF THERE IS NO PRIOR
.* #REGS MACRO, THEN NO EQUATES WILL BE USED.
.*
.*   CONSIDERATIONS
.* THE #EXIT MACRO WILL GENERATE AN EXPANSION THAT WILL ACCURATELY
.* RESTORE ALL DESIRED REGISTERS AND SET THE RETURN CODE REGUARDLESS OF
.* WHETHER OR NOT A FREEMAIN SVC IS ISSUED TO RELEASE THE LOWER SAVE
.* AREA AND REGUARDLESS OF THE RELATIONSHIP BETWEEN THE RC= OPERAND AND
.* THE SET OF REGISTERS RESTORED.
.*
.*
.*
.* INNER MACROS USED - #REGS #TEST AND FREEMAIN
.*
         GBLA  &#TESERR
         GBLB  &#ENTRNT,&#ENTPLI,&#ENTNUN                     06/84 DBC
         GBLC  &#TESRET(20),&#ENTSIZ,&#ENTSP
         LCLA  &C1,&R1,&R2,&W1,&W2,&ERRCODE
         LCLB  &RCLA,&RCST,&RSW(16)
         LCLC  &LNME,&@,&RG(16),&REGNME,&RG2SAVE,&RG4SAVE,&RG5SAVE
         LCLC  &C,&#                                          06/84 DBC
&#       SETC  '&SYSNDX'                                      06/84 DBC
&LNME    SETC  '&NME'
.*
&@       SETC  '&PFIX'
         AIF   (K'&PFIX NE 0).GOTPFIX
         #TEST PFIX=
&@       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.GOTPFIX #REGS &PFIX,GEN=NO
.DONPFIX ANOP
.*
&C1      SETA  0                                              06/84 DBC
.RLP     AIF   (&C1 GE N'&R).RFIN
&C1      SETA  &C1+1
         #TEST DCODE=&R(&C1)
         AIF   (&#TESERR NE 0).END
&W1      SETA  &#TESRET(1)
         AIF   (&W1 EQ 0).RLP
&REGNME  SETC  '&#TESRET(2)'
         #TEST REGS=&REGNME
&ERRCODE SETA  1
         AIF   (&#TESERR NE 0).REGERR
.REGOK1  ANOP
&R1      SETA  &#TESRET(1)
&R2      SETA  &R1+3-&R1/14*16
&RG(&R2) SETC  '&REGNME'
&RSW(&R1+1) SETB (1)
         AIF   (&W1 EQ 1).RLP
         AIF   (&W1 EQ 2).TWOND
         MNOTE 4,'"&R(&C1)" CONTAINS EXCESS INFORMATION.'
.TWOND   ANOP
&REGNME  SETC  '&#TESRET(3)'
         #TEST REGS=&REGNME
&ERRCODE SETA  2
         AIF   (&#TESERR NE 0).REGERR
.REGOK2  ANOP
&W2      SETA  &#TESRET(1)
&RSW(&W2+1) SETB (1)
.ENTLP   AIF   (&R1 EQ &#TESRET(1)).ENTEND
&R1      SETA  &R1+1
&R2      SETA  &R2+1
         AIF   (&R1 LE 15).R1OK
&R1      SETA  0
.R1OK    AIF   (&R2 LE 16).R2OK
&R2      SETA  1
.R2OK    ANOP
&RG(&R2) SETC  '&@&R1'
         AGO   .ENTLP
.ENTEND  ANOP
&RG(&R2) SETC  '&REGNME'
         AGO   .RLP
.REGERR  AIF   (&#TESRET(1) GE 0 OR &#TESRET(1) LT 0).REGVALU
         MNOTE 0,'THE ABOVE ERROR IS NOT DUE TO A BUG IN THE MACRO.'
         MNOTE 8,'THE VALUE OF "&REGNME" IS NOT DETERMINABLE.'
         MEXIT
.REGVALU AIF   (&#TESRET(1) GE 0 AND &#TESRET(1) LE 15).REGOK
         MNOTE 8,'THE VALUE OF "&REGNME" IS OUTSIDE THE RANGE OF 0 ... *
               15'
         MEXIT
.REGOK   AIF   (&ERRCODE EQ 1).REGOK1
         AGO   .REGOK2
.RFIN    AIF   (NOT &#ENTPLI).RGOK
         AIF   (NOT &RSW(1)).RG0OK
         MNOTE 4,'&RG(3) NEEDED BY THE EXIT LINKAGE - NOT RESTORED.'
.RG0OK   AIF   (NOT &RSW(2)).RG1OK
         MNOTE 4,'&RG(4) NEEDED BY THE EXIT LINKAGE - NOT RESTORED.'
.RG1OK   ANOP
&RG(3)   SETC  ''
&RG(4)   SETC  ''
.RGOK    ANOP
.*
&RG(16)  SETC  ''
.*
         AIF   (K'&RC EQ 0).NORC
&RG2SAVE SETC  '&RG(2)'
&RG(2)   SETC  ''
         AIF   ('&RG2SAVE' NE '').RG2SOK
&RG2SAVE SETC  '&@.15'
.RG2SOK  ANOP
.*
         AIF   (NOT &RSW(16)).NOPRBLM
         MNOTE 4,'&RG2SAVE SET TO THE RETURN CODE - NOT RESTORED.'
.NOPRBLM ANOP
.*
         AIF   ('&RC' EQ '&RC(1)').RCNTRG
         #TEST REGS=&RC(1)
         AIF   (&#TESERR NE 0).LOADRC
         AIF   ('&#TESRET(1)' NE '13').RCOK
         MNOTE 4,'"RC=&RC" IS ILLOGICAL.'
.RCOK    AIF   ('&#TESRET(1)' EQ '15').NORC
.LOADRC  AIF   ('&RG(1)' EQ '' OR '&RG(3)' EQ '' OR &#ENTPLI).RCLR
&RCST    SETB  (1)
         AGO   .NORC
.RCLR    ANOP
&LNME    LR    &@.15,&RC(1)        LOAD THE RETURN CODE
&LNME    SETC  ''
         AGO   .NORC
.RCNTRG  ANOP
&RCLA    SETB  (1)
         AIF   ('&RG(3)' EQ '' OR '&RG(1)' EQ '').NORC
&RG(2)   SETC  '&RG2SAVE'
.NORC    ANOP
.*
         AIF   (NOT &#ENTPLI).NOTPLI2
&LNME    LR    &@.0,&@.13          COPY OUR DSA POINTER
&LNME    SETC  ''
.NOTPLI2 ANOP
.*
         AIF   (NOT &#ENTRNT OR '&RG(4)' EQ '').NOLRR1
&LNME    LR    &@.1,&@.13          GET SAVE AREA ADDRESS FOR FREEMAIN
&LNME    SETC  ''
.NOLRR1  ANOP
.*
         AIF   (&#ENTNUN).NOLSA                               06/84 DBC
&LNME    L     &@.13,4(,&@.13)     POINT TO THE HIGHER SAVE AREA
&LNME    SETC  ''                                             06/84 DBC
.NOLSA   ANOP                                                 06/84 DBC
         AIF   (NOT &RCST).NORCST
&LNME    ST    &RC(1),16(,&@.13)   STORE THE RC FOR LATER     06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
&RG(2)   SETC  '&RG2SAVE'
.NORCST  ANOP
.*
         AIF   (NOT &#ENTRNT).NTRENT
         AIF   (NOT &RCLA).RG2OK
&RG(2)   SETC  'X'
         AIF   ('&RG(1)&RG(3)' NE '').RG2OK
&RG(2)   SETC  ''
.RG2OK   ANOP
&RG4SAVE SETC  '&RG(4)'
&RG5SAVE SETC  '&RG(5)'
&RG(5)   SETC  'X'
&C1      SETA  0
.STMLP   AIF   (&C1 GE 4).STMEND
&C1      SETA  &C1+1
         AIF   ('&RG(&C1)' NE '').STMLP
&R1      SETA  &C1+13-(&C1+13)/16*16
&R2      SETA  &R1-1
&W1      SETA  &C1*4+8
.STMLP2  ANOP
&R2      SETA  &R2+1
         AIF   (&R2 LE 15).STMR2OK
&R2      SETA  0
.STMR2OK ANOP
&RG(&C1) SETC  '&@&R2'
&C1      SETA  &C1+1
         AIF   ('&RG(&C1)' EQ '').STMLP2
         AIF   (&R1 EQ &R2).ST
&C       SETC  '&@&R1,&@&R2,&W1.(&@.13)'                      06/84 DBC
&LNME    STM   &C                  SAVE AGAINST FREEMAIN      06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
         AGO   .STMLP
.ST      ANOP                                                 06/84 DBC
&LNME    ST    &@&R1,&W1.(,&@.13)  SAVE AGAINST FREEMAIN      06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
         AGO   .STMLP
.STMEND  ANOP
&RG(5)   SETC  '&RG5SAVE'
.GTR1M   AIF   ('&RG4SAVE' NE '').NOGTR1
&LNME    L     &@.1,8(,&@.13)      GET RSA PTR FOR FREEMAIN   06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
.NOGTR1  ANOP                                                 06/84 DBC
&LNME    L     &@.0,E&#.LEN        GET RSA LEN (AND SUBPOOL)  06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
         MNOTE '         FREEMAIN R,A=(1),LV=(0)'             06/84 DBC
         FREEMAIN R,A=(1),LV=(0)                              06/84 DBC
.NTRENT  ANOP
.*
&C1      SETA  0
.LMLP    AIF   (&C1 GE 16).SETRCM
&C1      SETA  &C1+1
         AIF   ('&RG(&C1)' EQ '').LMLP
&R1      SETA  &C1
&W1      SETA  &C1*4+8
.LMLP2   ANOP
&C1      SETA  &C1+1
         AIF   ('&RG(&C1)' NE '').LMLP2
         AIF   (&R1 EQ &C1-1).L
&C       SETC  '&RG(&R1),&RG(&C1-1),&W1.(&@.13)'              06/84 DBC
&LNME    LM    &C                  RESTORE REGISTERS          06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
         AGO   .LMLP
.L       ANOP                                                 06/84 DBC
&C       SETC  '&RG(&R1),&W1.(,&@.13)'                        06/84 DBC
&LNME    L     &C                  RESTORE THE REGISTER       06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
         AGO   .LMLP
.SETRCM  ANOP
.*
         AIF   (NOT &RCLA).RETURN
         AIF   ('&RC' EQ '0').SR
&LNME    LA    &@.15,&RC           GET THE RETURN CODE        06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
         AGO   .RETURN
.SR      ANOP                                                 06/84 DBC
&LNME    SLR   &@.15,&@.15         ZERO THE RETURN CODE       06/84 DBC
&LNME    SETC  ''                                             06/84 DBC
.RETURN  ANOP
.*
         AIF   (NOT &#ENTPLI).NOTPLI3
&LNME    BALR  &@.1,&@.14          RETURN TO CALLER           06/84 DBC
         MEXIT
.NOTPLI3 ANOP
.*
&LNME    BR    &@.14               RETURN                     10/84 DBC
.*                                                            06/84 DBC
         AIF   (NOT &#ENTRNT).END                             06/84 DBC
         AIF   ('&#ENTSP' EQ '').NOSPOOL                      06/84 DBC
         DS    0F                  ALIGN                      06/84 DBC
&C       SETC  'AL1(&#ENTSP),AL3(&#ENTSIZ)'                   06/84 DBC
E&#.LEN  DC    &C                  RSA SUBPOOL AND LENGTH     06/84 DBC
         MEXIT                                                06/84 DBC
.NOSPOOL ANOP
E&#.LEN  DC    A(&#ENTSIZ)         RSA LENGTH                 06/84 DBC
.END     MEND
./ ADD NAME=#PARMS   0100-89041-89041-0921-00287-00287-00000-DYNABLD
         MACRO
&NME     #PARMS &P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8,&P9,&P10,              *
               &P11,&P12,&P13,&P14,&P15,&P16,&P17,&P18,&P19,&P20,      *
               &P21,&P22,&P23,&P24,&P25,&P26,&P27,&P28,&P29,&P30,      *
               &P31,&P32,&P33,&P34,&P35,&P36,&P37,&P38,&P39,&P40,      *
               &SVID=,&WKID=,&SUBAD=,&PFIX=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $PARMS TO #PARMS.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - CHARACTERS NOT WITHIN APOSTROPHIES ARE NOW
.*                    UPCASED.
.*                  - FIXED BUG: THE ERROR RETURN FROM THE PARM
.*                    SUBROUTINE GENERATED BY THE MACRO WAS NEVER
.*                    TAKEN.
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - JUNE 17, 1975
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO WAS WRITTEN TO GENERATE A GENERALIZED PARM FIELD SCAN
.* OUT SUBROUTINE. IT DOES THE FOLLOWING:
.* - IT DETERMINES THE EXISTANCE OF A PARM FIELD.
.* - IT INTERFACES WITH A MESSAGE PRINTING SUBROUTINE TO PRINT
.*   APPROPIATE MESSAGES INCLUDING AN ECHO OF THE PARM FIELD AS WELL AS
.*   ANY ERROR MESSAGES THAT MIGHT BE APPROPIATE.
.* - IT SCANS FOR AND ISSOLATES EACH ENTRY IN THE PARM FIELD,
.*   IDENTIFIES IT AGAINST A LIST OF GIVEN KEYWORDS, AND THEN BRANCHES
.*   TO A GIVEN SPECIALIZED HANDLER ROUTINE.
.* - IF BY THE END OF THE SCAN OUT ANY ERRORS HAVE BEEN DETECTED, THE
.*   ROUTINE WILL MAKE AN ERROR RETURN TO ITS CALLER.
.*
.*
.*
.* THE MACRO CALL USES THE FOLLOWING ARGUEMENTS:
.*
.* THE NAME FIELD (OPTIONAL) -
.*   THIS SPECIFIES BOTH THE NAME OF THE GENERATED SUBROUTINE AND THE
.* PREFIX TO USE FOR ALL GENERATED STATEMENT LABELS. IT SHOULD NOT BE
.* LONGER THAN 4 CHARACTERS. IF OMITTED, THEN THE DEFAULT OF "PARM" IS
.* USED.
.*
.* THE POSITIONAL PARAMETERS (AT LEAST ONE REQUIRED) -
.*   FROM ONE TO 40 POSITIONAL PARAMETERS MAY BE GIVEN. EACH OF THEM
.* MUST CONSIST OF A SUBLIST OF TWO ITEMS. THE FIRST MUST BE A PARM
.* FIELD ENTRY KEYWORD. THE SECOND MUST BE THE ADDRESS (A-TYPE) OF AN
.* ASSOCIATED HANDLING ROUTINE. THIS ROUTINE IS GIVEN CONTROL IF THE
.* ASSOCIATED KEYWORD IS FOUND IN THE PARM FIELD.
.*
.* THE SUBAD= OPERAND (OPTIONAL) -
.*   THIS SPECIFIES THE NAME OF A MESSAGE PRINTING SUBROUTINE TO BE
.* USED BY THE SCAN OUT ROUTINE. IF OMITTED, THEN THE DEFAULT IS TO USE
.* THE PRINTING SUBROUTINE USED BY THE NEXT PREVIOUS #PARMS OR $PUT
.* MACRO.
.*   THE FOLLOWING INFORMATION IS PASSED TO THE MESSAGE PRINTING
.* SUBROUTINE:
.*       R14 --> RETURN ADDRESS
.*       R1 --> A MESSAGE BLOCK. THE FIRST BYTE CONTAINS THE LENGTH OF
.*              THE MESSAGE. THE REMAINDER OF THE BLOCK CONTAINS THE
.*              MESSAGE ITSELF (INCLUDING ASA CARRAGE CONTROL).
.*   THE MESSAGE PRINTING ROUTINE SHOULD RESTORE ALL REGISTERS UPON
.* RETURN.
.*
.* THE SVID= OPERAND (OPTIONAL) -
.*   THIS MUST SPECIFY THE NAME OF AN ALIGNED 8-WORD REGISTER SAVE
.* AREA. IF OMITTED, THEN A SAVE AREA IS GENERATED BY THE MACRO.
.*
.* THE WKID= OPERAND (OPTIONAL) -
.*   THIS MUST SPECIFY THE NAME OF AN ALIGNED 1-WORD WORK AREA. IF
.* OMITTED, THEN A WORK AREA IS GENERATED BY THE MACRO.
.*
.* THE PFIX= OPERAND (OPTIONAL) -
.*   THIS MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS EXPANSION. THIS
.* IS SO THAT THE USE OF THE REGISTERS WILL BE INDICATED IN THE CROSS
.* REFERENCE LISTING. THE PFIX= OPERAND CAN BE USED TO CONTROL THE SET
.* OF EQUATES USED. FOR EXAMPLE, IF "PFIX=GPR" IS SPECIFIED, THEN
.* "GPR1" WILL BE USED WHENEVER THE EXPANSION REFERS TO REGISTER 1.
.*   IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF EQUATES DEFINED
.* BY THE FIRST PRIOR #REGS MACRO WILL BE USED. IF THERE IS NO PRIOR
.* #REGS MACRO, THEN NO EQUATES WILL BE USED.
.*
.*
.*
.* SUBROUTINE PROCESSING INFORMATION
.*
.*       INPUTS:
.*             R14 --> RETURN ADDRESS
.*             R1 --> ANY OS STANDARD PARM FIELD
.*
.*       OUTPUTS:
.*             ALL REGISTERS ARE RESTORED.
.*             THE PARM FIELD IS PROCESSED AND MAY BE DESTROYED.
.*       EXITS:
.*             BRANCH AND LINK TO SPECIFIED HANDLING SUBROUTINES UPON
.*             RECOGNITION OF VALID KEYWORDS.
.*
.*       RETURNS:
.*             NORMAL:  " BR R14 "
.*             ERROR:  " B 4(,R14) "
.*       ATTRIBUTES:
.*             NONE (NOT EVEN SERIEALLY REUSABLE)
.*
.* METHOD OF SCAN -
.*   THE PARM FIELD IS CONSIDERED TO BE A LIST OF KEYWORD ENTRIES.
.* POSITIONAL ENTRIES ARE NOT CONSIDERED.
.*   EACH ENTRY MUST START WITH ONE OF THE KEYWORDS DEFINED IN THE
.* MACRO CALL. ANY CHARACTERS THAT MIGHT BE FOUND IN ADDITION TO THE
.* KEYWORD (I.E. ADJACENT TO AND IMMEDIATELY TO THE RIGHT OF THE
.* KEYWORD) ARE CONSIDERED TO BE THE VALUE ASSIGNED TO THE KEYWORD.
.*   NOTE, THIS ROUTINE DOES NOT EXPLICITLY TEST FOR ANY SEPERATOR
.* CHARACTER BETWEEN THE KEYWORD AND ITS VALUE. SUCH A CHARACTER, IF
.* DESIRED, MUST BE DEFINED AS PART OF THE KEYWORD (E.G. "SEQ=").
.*   ITEMS OF SYNTAX RECOGNIZED BY THIS ROUTINE ARE COMMAS,
.* APOSTROPHIES, AND PARENTHESES. APOSTROPHIES MUST OCCURE IN MATCHING
.* PAIRS. COMMAS AND PARENTHESES FOULD WITHIN MATCHING APOSTROPHIES ARE
.* IGNORED. PARENTHESES NOT FOUND WITHIN APOSTROPHIES MUST BE BALANCED.
.* COMMAS FOUND WITHIN PARENTHESES ARE IGNORED.
.*   COMMAS NOT FOUND WITHING MATCHING APOSTROPHIES OR PARENTHESES ARE
.* TREATED AS PARM FIELD ENTRY DELIMITERS.
.*   EACH PARM FIELD ENTRY IS ISSOLATED AT ITS DELIMITERS AND THEN
.* CHECKED FOR A MATCH IN THE MACRO'S KEYWORD LIST. IF A MATCH IS
.* FOUND, THEN THE ASSOCIATED HANDLING ROUTINE IS CALLED WITH THE
.* FOLLOWING INPUTS:
.*       R14 --> RETURN ADDRESS
.*       R15 --> HANDLER ENTRY ADDRESS
.*       R0 = LENGTH OF THE KEYWORD'S VALUE (IF ANY). IF NO VALUE IS
.*            GIVEN, THEN R0 = 0.
.*       R1 --> FIRST BYTE PAST THE KEYWORD - I.E. AT THE VALUE (IF
.*              ANY).
.*   EACH HANDLER MUST MEET THE FOLLOWING OUTPUT REQUIREMENTS:
.*       - ALL REGISTERS MUST BE RESTORED EXCEPT THAT FOR ERROR RETURNS
.*         R1 MUST POINT TO THE LOCATION OF THE ERROR.
.*   THE FOLLOWING RETURNS ARE PERMITTED:
.*       NORMAL -  " BR R14 "
.*       ERROR -  " B 4(,R14) "
.*
.*
.*
.* INNER MACROS USED - #TEST, #PUT
.*
         GBLC  &#TESRET(20)
         LCLA  &A1,&A2
         LCLC  &N,&@,&SAVEA,&WORKA,&C1
&N       SETC  'PARM'
         AIF   (K'&NME EQ 0).GOTNME
&N       SETC  '&NME'
.GOTNME  ANOP
&@       SETC  '&PFIX'
         AIF   (K'&PFIX NE 0).GOTPFIX
         #TEST PFIX=
&@       SETC  '&#TESRET(1)'
.GOTPFIX ANOP
&SAVEA   SETC  '&SVID'
         AIF   (K'&SVID NE 0).GOTSAVE
&SAVEA   SETC  '&N.SAVE'
.GOTSAVE ANOP
&WORKA   SETC  '&WKID'
         AIF   (K'&WKID NE 0).GOTWORK
&WORKA   SETC  '&N.WORK'
.GOTWORK ANOP
* PARM FIELD SCAN-OUT ROUTINE
*        INPUTS:
*              R14 --> RETURN ADDRESS
*              R1 --> PARM FIELD
         SPACE 1
&N       STM   &@.14,&@.5,&SAVEA   SAVE REGISTERS
         LA    &@.4,0(,&@.1)       PNT TO PARM FIELD (CLEAR HI-BYTE)
         LH    &@.3,0(,&@.4)       GET ITS LENGTH
         LTR   &@.3,&@.3           PARM FIELD GIVEN?
         BZ    &N.RET              NO, GO RETURN TO CALLER
         #PUT  &N.TITL,SUBAD=&SUBAD YES, PRINT AN INTRO LINE
         LA    &@.2,1              GETA BXLE INCREMENT FOR THE SCAN
         AR    &@.3,&@.2           GET LENGTH FOR ECHO MSG
         STC   &@.3,0(,&@.4)       STORE IN THE MSG BLOCK
         MVI   1(&@.4),C'0'        SET CARRAGE CONTROL CHARACTER
         #PUT  (&@.4),SUBAD=&SUBAD ECHO THE PARM FIELD
         AR    &@.3,&@.4           GET THE SCAN BXLE LIMIT
         LA    &@.5,2(,&@.4)       GET THE SCAN BXLE INDEX
&N.LOOP  LR    &@.1,&@.5           SAVE KEYWORD STARTING ADDRESS
         LR    &@.0,&@.2           INIT APOS AND PAREN FLAG
&N.DELM  CLI   0(&@.5),C''''       APOSTROPHIE?
         BNE   &N.NAPO             NO, SKIP
         LCR   &@.0,&@.0           YES, FLIP-FLOP THE APOS FLAG
         B     &N.DEND             GO LOOP FOR NEXT CHARACTER
&N.NAPO  LTR   &@.0,&@.0           WITHIN APOSTROPHIES?
         BNP   &N.DEND             YES, SKIP THIS CHARACTER
         CLI   0(&@.5),C'('        NO, OPEN PAREN?
         BNE   &N.NOPN             NO, SKIP
         CR    &@.0,&@.2           YES, FIRST IN A NEST?
         BNE   &N.N1ST             NO, SKIP
         LR    &@.14,&@.5          YES, SAVE A POINTER TO IT ICO ERROR
&N.N1ST  AR    &@.0,&@.2           COUNT THE NEST LEVEL
         B     &N.DEND             LOOP FOR NEXT CHARACTER
&N.NOPN  CLI   0(&@.5),C')'        CLOSE PAREN?
         BNE   &N.NCPN             NO, SKIP
         SR    &@.0,&@.2           YES, DECR NEST LEVEL; IMBALANCE?
         BP    &N.DEND             NO, LOOP FOR NEXT CHARACTER
         B     &N.SNTX             YES, ERROR; GIVE UP ALTOGETHER
&N.NCPN  OI    0(&@.5),X'40'       UPCASE THE CHARACTER
         CR    &@.0,&@.2           WITHIN PARENS?
         BNE   &N.DEND             YES, SKIP THIS CHARACTER
         CLI   0(&@.5),C','        NO, DELIMITING COMMA?
         BE    &N.GOTC             YES, GOT AN ENTRY; GO PROCESS
&N.DEND  BXLE  &@.5,&@.2,&N.DELM   NO, LOOP FOR NEXT CHARACTER
         CR    &@.0,&@.2           END OF PARM; PARENS & APOS OK?
         BE    &N.GOTC             YES, GO PROCESS LAST ENTRY
         LR    &@.1,&@.14          NO, PNT TO START OF NEST
         BP    &N.ERRR             UNBALANCED PARENS; ISSUE ERROR MSG
&N.BAPO  BCTR  &@.5,0              UNMATCHED APOS; BACK-SCAN
         CLI   0(&@.5),C''''       IS THIS IT?
         BNE   &N.BAPO             NO, CONTINUE BACK-SCAN
&N.SNTX  LR    &@.1,&@.5           YES, POINT TO ERROR
         LR    &@.5,&@.3           PREVENT FURTHER PROCESSING
         B     &N.ERRR             GO FLAG THE ERROR
&N.GOTC  CR    &@.1,&@.5           NULL ENTRY?
         BE    &N.EEND             YES, SKIP
         LA    &@.15,&N.KEYS       NO, POINT TO KEYWORD LIST
         SR    &@.14,&@.14         CLEAR LENGTH REGISTER
&N.SRCH  CLI   0(&@.15),X'FF'      END OF KEYWORDS?
         BE    &N.ERRR             YES, ERROR
         IC    &@.14,3(,&@.15)     NO, GET THIS KEYWORD LENGTH - 1
         CLC   4(*-*,&@.15),0(&@.1) (EXECUTED)
&N.CLC   EX    &@.14,*-6           RIGHT KEYWORD?
         BE    &N.GOTK             YES, GO PASS TO HANDLER
         LA    &@.15,5(&@.14,&@.15) NO, ADVANCE TO NEXT
         B     &N.SRCH             LOOP TO TRY AGAIN
&N.GOTK  MVI   4(&@.15),X'FF'      PREVENT RE-USE OF THIS KEYWORD
         MVC   &WORKA+1(3),0(&@.15) ALIGN THE HANDLER ADDRESS
         L     &@.15,&WORKA        LOAD IT
         LA    &@.1,1(&@.14,&@.1)  POINT TO KEYWORD'S VALUE
         LR    &@.0,&@.5           POINT PAST THE ENTRY
         SR    &@.0,&@.1           GET THE ENTRY'S VALUE'S LENGTH
         BALR  &@.14,&@.15         LINK TO THE HANDLER
         B     &N.EEND             NORMAL RETURN; LOOP FOR NEXT ENTRY
&N.ERRR  MVI   0(&@.1),X'FF'       ERROR RETURN; FLAG THE ERROR
         MVI   1(&@.4),X'00'       SIGNEL THAT AN ERROR HAS OCCURED
&N.EEND  BXLE  &@.5,&@.2,&N.LOOP   LOOP TO PROCESS NEXT ENTRY
         CLI   1(&@.4),C'0'        ANY ERRORS OCCURE?
         BE    &N.RET              NO, GO RETURN TO CALLER
         LA    &@.1,1(,&@.4)       YES, PNT TO PARM CCC.
&N.FLAG  CLI   0(&@.1),X'FF'       ERROR HERE?
         MVI   0(&@.1),C' '        (ASSUME NO)
         BNE   &N.STAR             NO, SKIP TO NEXT CHARACTER
         MVI   0(&@.1),C'*'        YES, SET A VISUAL SIGNEL
&N.STAR  BXLE  &@.1,&@.2,&N.FLAG   LOOP FOR NEXT CHARACTER
         #PUT  (R4),SUBAD=&SUBAD   PRINT THE ERROR FLAG(S)
         #PUT  &N.ERRM,SUBAD=&SUBAD PRINT ERROR INFO
         LTR   &@.14,&@.14         SIGNEL ERROR RETURN
&N.RET   LM    &@.14,&@.5,&SAVEA   (RESTORE REGISTERS)
         BC    7,4(,&@.14)         ERROR RETURN
         BR    &@.14               NORMAL RETURN
         SPACE 3
         AIF   (K'&SVID NE 0).NOSAVE
&SAVEA   DS    8A                  REGISTER SAVE AREA
.NOSAVE  AIF   (K'&WKID NE 0).NOWORK
&WORKA   DS    A                   WORK AREA
.NOWORK  AIF   (K'&SVID NE 0 AND K'&WKID NE 0).NOSPACE
         SPACE 1
.NOSPACE ANOP
&N.KEYS  DS    0H                  KEYWORD LIST
&A1      SETA  0
.LP1     AIF   (&A1 EQ N'&SYSLIST).END1
&A1      SETA  &A1+1
&A2      SETA  K'&SYSLIST(&A1,1)-1
         DC    AL3(&SYSLIST(&A1,2)),AL1(&A2),C'&SYSLIST(&A1,1)'
         AGO   .LP1
.END1    DC    X'FF'               KEYWORD LIST TERMINATOR
         SPACE 1
&C1      SETC  'L'''
         DC    AL1(&C1&N.TITL)
&N.TITL  DC    C'-THE FOLLOWING PARM FIELD HAS BEEN GIVEN.'
         SPACE 1
         DC    AL1(&C1&N.ERRM)
&N.ERRM  DC    C'0ERRORS HAVE BEEN DETECTED AT THE ABOVE ASTERISKS.'
         MEND
./ ADD NAME=#PLIENV  0100-89041-89041-0921-00254-00254-00000-DYNABLD
         MACRO
&N       #PLIENV &ISASIZE=,&DSASIZE=,&RECOVER=LOCAL,&BASES=1,          *
               &ESDTYPE=CSECT,&PFIX=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* THIS MACRO WAS WRITTEN - APRIL 21, 1981
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.* THIS MACRO INTERFACES TO THE 'PLIENV' PROGRAM (WRITTEN IN PLI) TO
.* CREATE A PLI ENVIRONMENT IN WHICH ASSEMBLER LANGUAGE CODE CAN RUN.
.* THE FLOW OF CONTROL IS DESCRIBED IN THE COMMENTARY GIVEN BELOW.
.*
.* THIS MACRO ACCEPTS THE FOLLOWING OPERANDS.
.*
.* THE NAME FIELD.
.*       THIS IS OPTIONAL. IT ASSIGNS A NAME TO THE FIRST SUITABLE
.*       GENERATED INSTRUCTION. NOTE, THE DEFAULT FIRST INSTRUCTION IS
.*       A 'CSECT' CARD.
.*
.* ISASIZE=
.*       THIS IS OPTIONAL. IT SPECIFIES THE DESIRED SIZE OF PLI'S
.*       "INITIAL STORAGE AREA". ITS SYNTAX IS IDENTICAL TO PLI'S
.*       ISASIZE EXECUTION TIME OPTION AS DESCRIBED IN THE PLI
.*       PROGRAMMER'S GUIDE. IF THIS OPERAND IS OMITTED, THEN THE LOCAL
.*       INSTALLATION ESTABLISHED DEFAULT ISASIZE IS OBTAINED. NOTE, A
.*       "REGISTER FORM" OF THIS OPERAND IS NOT SUPPORTED.
.*
.* DSASIZE=
.*       THIS IS OPTIONAL. IT SPECIFIES THE DESIRED DATA STORAGE AREA
.*       SIZE TO BE MADE AVAILABLE TO THE ASSEMBLER CODE FOLLOWING THIS
.*       MACRO. IF OMITTED, THEN THE MINIMUM VALUE (120 BYTES) IS
.*       OBTAINED. DSASIZE MUST SPECIFY A NON-RELOCATABLE EXPRESSION.
.*       THE SPECIFIED VALUE MUST BE EQUAL TO OR GREATER THAN 120 BYTES
.*       SINCE THE FIRST 120 BYTES ARE REQUIRED BY THE PLI SUBROUTINE
.*       LINKAGE CONVENTIONS. A "REGISTER FORM" OF THIS OPERAND IS NOT
.*       SUPPORTED.
.*
.* RECOVER={LOCAL|PLI}
.*       THIS CONTROLS WHETHER OR NOT PLI ESTABLISHES A RECOVERY
.*       ENVIRONMENT (I.E., ISSUES 'ESTAE' AND 'SPIE' MACROS).
.*
.*       RECOVER=LOCAL (THE DEFAULT)
.*       PLI WILL NOT ISSUE 'ESTAE' AND 'SPIE' MACROS. THE ASSEMBLER
.*       CODE FOLLOWING THIS MACRO EXPANSION MUST PROVIDE FOR ITS OWN
.*       RECOVERY.
.*
.*       RECOVER=PLI
.*       PLI WILL ISSUE 'ESTAE' AND 'SPIE' MACROS. ALL ABENDS MUST BE
.*       HANDLER VIA PLI "ON UNITS".
.*
.* BASES=
.*       THIS DEFINES THE REGISTERS THAT ARE TO BE USED AS PROGRAM
.*       BASES FOR THE CODE FOLLOWING THIS MACRO EXPANSION. THIS
.*       OPERAND MAY SPECIFY EITHER A SINGLE SELF-DEFINING TERM OR IT
.*       MAY GIVE A PARENTHESIZED LIST OF ONE OR MORE REGISTER NAMES.
.*
.*       BASES=<A NUMBER>   (THE DEFAULT IS "BASES=1")
.*       THIS DEFINES THE NUMBER OF BASES REGISTERS THAT ARE TO BE
.*       LOADED AND DECLARED BY THE MACRO. REGISTERS ARE SELECTED IN
.*       DESCENDING REGISTER ORDER STARTING WITH REGISTER 11. "NUMBER"
.*       MAY RANGE IN VALUE FROM 0 TO 11.
.*
.*       BASES=(<A LIST OF REGISTER NAMES>)
.*       THIS DEFINES SPECIFIC BASE REGISTERS THAT ARE TO BE LOADED AND
.*       DECLARED BY THE MACRO. ANY REGISTERS BETWEEN R1 AND R11 MAY
.*       BE CHOSEN.
.*
.* ESDTYPE={CSECT|START|ENTRY|DS|NONE|<NULL>}
.*
.*       ESDTYPE=CSECT  (THE DEFAULT)
.*       THIS CAUSES THE MACRO TO GENERATE A 'CSECT' CARD AS THE FIRST
.*       CARD OF THE EXPANSION.
.*
.*       ESDTYPE=START
.*       THIS CAUSES THE MACRO TO GENERATE A 'START' CARD AS THE FIRST
.*       CARD OF THE EXPANSION.
.*
.*       ESDTYPE=ENTRY
.*       THIS CAUSES THE MACRO TO GENERATE A 'ENTRY' CARD NAMING THE
.*       FIRST EXECUTABLE INSTRUCTION IN THE EXPANSION AS AN ENTRY
.*       POINT.
.*
.*       ESDTYPE=DS
.*       THIS CAUSES THE MACRO TO GENERATE A 'DS 0H' CARD AS THE FIRST
.*       CARD OF THE EXPANSION.
.*
.*       ESDTYPE=NONE  OR  ESDTYPE=
.*       THIS SUPPRESSES THIS FUNCTION.
.*
.* PFIX=
.*       THIS CONTROLS THE SET OF REGISTER NAMES TO BE USED BY THE
.*       MACRO EXPANSION. EXAMPLE: "PFIX=GPR" CAUSES THE MACRO TO USE
.*       "GPR1" TO REFER TO REGISTER 1. THE DEFAULT IS TO USE THE
.*       REGISTER NAME PREFIX DEFINED BY THE FIRST PRECEDING '#REGS'
.*       MACRO, IF ANY.
.*
.* INNER MACROS USED - #REGS #TEST #ENTER GETMAIN FREEMAIN LOAD DELETE
.*
         GBLC  &#TESRET(20)
         LCLC  &#,&@,&PARM,&I,&N2,&W1,&W2
&#       SETC  '&SYSNDX'
&@       SETC  '&PFIX'
         AIF   (K'&PFIX NE 0).GOTPFIX
         #TEST PFIX=
&@       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.GOTPFIX #REGS &PFIX,GEN=NO
.DONPFIX ANOP
&PARM    SETC  'NOSTAE,NOSPIE'
         AIF   ('&RECOVER' EQ '' OR '&RECOVER' EQ 'LOCAL').GOTRCVR
&PARM    SETC  ''
         AIF   ('&RECOVER'(1,1) EQ 'P').GOTRCVR
         MNOTE 4,'"&&RECOVER=&RECOVER" NOT RECOGNIZED.'
         MNOTE 4,'"&&RECOVER=PLI" ASSUMED.'
.GOTRCVR ANOP
         AIF   (K'&ISASIZE EQ 0).GOTISA
         AIF   ('&ISASIZE' NE '&ISASIZE(1)').GETPISA
&PARM    SETC  '&PARM.,ISASIZE(&ISASIZE.)'
         AGO   .GOTISA0
.GETPISA ANOP
&PARM    SETC  '&PARM.,ISASIZE&ISASIZE'
.GOTISA0 AIF   ('&PARM'(1,1) NE ',').GOTISA
&PARM    SETC  '&PARM'(2,K'&PARM-1)
.GOTISA  ANOP
&PARM    SETC  '&PARM./'
.*
         SPACE 1
*************************************************************
*        ENTRY CODE -- EXECUTED FIRST.                      *
*        - RECEIVES CONTROL FROM A CALLER.                  *
*        - SAVES REGISTERS.                                 *
*        - CONSTRUCTS A SPECIAL PARM FIELD CONTAINING:      *
*          - PLI EXECUTION TIME OPTIONS;                    *
*          - INFORMATION SPECIFIC TO THE CONTROL OF THIS    *
*            INTERFACE.                                     *
*        - LOCATES THE 'PLIENV' LOAD MODULE.                *
*        - CALLS 'PLIENV' VIA THE 'PLISTART' ENTRY POINT.   *
*        - THIS CAUSES THE CREATION OF A PLI ENVIRONMENT.   *
*        - CONTROL NEXT PASSES TO THE "INTERFACE CODE"      *
*          GENERATED BELOW.                                 *
*************************************************************
         SPACE 1
.*
&N2      SETC  '&N'
&W1      SETC  '&ESDTYPE(1)'
         AIF   ('&W1' EQ 'NONE' OR '&W1' EQ '').ESDDONE
         AIF   ('&W1' EQ 'ENTRY').ESDENT
&W2      SETC  ','
         AIF   ('&W1' EQ 'CSECT' OR '&W1' EQ 'START').ESDNCSC
&W2      SETC  '0H''0'''
.ESDNCSC ANOP
&N       &W1   &W2                 START
&N2      SETC  ''
         AGO   .ESDDONE
.ESDENT  ANOP
         ENTRY &N                  DECLARE ENTRY NAME
.ESDDONE ANOP
.*
&N2      STM   &@.14,&@.12,12(&@.13) SAVE CALLER'S REGISTERS
         BALR  &@.14,0             LOAD LOCAL BASE
         USING *,&@.14             DECLARE IT
         LA    &@.0,L'PNV&#.P+34   GET L'LCL SAVE AREA + L'PARM FIELD
         MNOTE '         GETMAIN R,LV=(0)'
         GETMAIN R,LV=(0)
         LR    &@.2,&@.1           COPY LOCAL AREA POINTER
         MVC   0(20,&@.2),12(&@.13) SAVE CALLER'S R14 THRU R2
         LA    &@.1,24(,&@.2)      --> PARM FIELD
         ST    &@.1,20(,&@.2)      BUILD 1-ENTRY PLIST
         MVI   20(&@.2),B'10000000' FLAG THE LAST ENTRY
         MVC   0(L'PNV&#.P+6,&@.1),PNV&#.P-2 COPY PARM FIELD
         MVC   L'PNV&#.P+6(4,&@.1),12(&@.2) COPY CALLER'S R1 TO PARM
         MNOTE '         LOAD  EPLOC=PNV&#.N'
         LOAD  EPLOC=PNV&#.N
         LR    &@.15,&@.0          GET PLIENV'S ENTRY ADDRESS
         LA    &@.1,20(,&@.2)      --> PARM FIELD
         BALR  &@.14,&@.15         GO ESTABLISH PLI ENVIRONMENT AND
*                                  EXECUTED THE PROGRAM STARTING AT
*                                  PNV####R.
         EJECT ,
*************************************************************
*        EXIT CODE -- EXECUTED LAST.                        *
*        - RECEIVES CONTROL BACK VIA 'PLIENV' UPON          *
*          COMPLETION OF THE ASSEMBLER CODE BELOW.          *
*        - NOTE, AT THIS POINT THE PLI ENVIRONMENT NO       *
*          LONGER EXISTS.                                   *
*        - CLEANS UP AND RESTORES REGISTERS (PRESERVING THE *
*          R15 RECEIVED FROM 'PLIENV').                     *
*        - RETURNS TO "ENTRY CODE'S" CALLER.                *
*************************************************************
         SPACE 1
         USING *,&@.14             THE PROGRAM HAS COMPLETED. DECLARE A
*                                  LOCAL BASE.
         ST    &@.15,4(,&@.2)      STORE CALLED PROGRAM'S RC
         MNOTE '         DELETE EPLOC=PNV&#.N'
         DELETE EPLOC=PNV&#.N
         MVC   12(20,&@.13),0(&@.2) RESTORE CALLER'S REGS TO SAVE AREA
         LA    &@.0,L'PNV&#.P+34   GET L'LOCAL WORK AREA
         MNOTE '         FREEMAIN R,LV=(0),A=(&@.2)'
         FREEMAIN R,LV=(0),A=(&@.2)
         LM    &@.14,&@.2,12(&@.13) RESTORE CALLER'S REGISTERS
         DROP  &@.14               RELEASE LOCAL BASE
         BR    &@.14               RETURN TO CALLER
         SPACE 3
PNV&#.N  DC    CL8'PLIENV'         ROUTINE THAT SETS UP PLI ENVIRONMENT
         DC    Y(L'PNV&#.P+8)      L'PARM FIELD
PNV&#.P  DC    C'&PARM',AL4(PNV&#.R) MOST OF PARM FIELD
         EJECT ,
*************************************************************
*        INTERFACE CODE -- EXECUTED SECOND.                 *
*        - RECEIVES CONTROL FROM 'PLIENV'.                  *
*        - NOTE, AT THIS POINT A PLI ENVIRONMENT EXISTS.    *
*        - ESTABLISHES A LOCAL DSA OF THE DESIRED SIZE.     *
*        - ESTABLISHES THE DESIRED LOCAL PROGRAM BASE       *
*          REGISTERS.                                       *
*        - RESTORES THE R1 VALUE ORIGINALLY RECEIVED BY     *
*          "ENTRY CODE" ABOVE.                              *
*        - FALLS THROUGH TO USER WRITTEN ASSEMBLER CODE.    *
*************************************************************
         SPACE 1
         AIF   ('&DSASIZE' EQ '&DSASIZE(1)').DSASOK
         MNOTE 4,'"DSASIZE=&DSASIZE" IS INVALID.'
         MNOTE 4,'THE CODE GENERATED BELOW WILL NOT FUNCTION CORRECTLY.*
               '
.DSASOK  MNOTE 'PNV&#.R #ENTER &N,SAVTYPE=(PLI,&DSASIZE),BASES=&BASES,'
         MNOTE '               ESDTYPE=NONE,PFIX=&PFIX'
PNV&#.R  #ENTER &N,SAVTYPE=(PLI,&DSASIZE),BASES=&BASES,                *
               ESDTYPE=NONE,PFIX=&PFIX
         L     &@.1,88(,&@.13)     RESTORE INITIAL PARAMETER REGISTER
         EJECT ,
*************************************************************
*        USER CODE.                                         *
*        - IF THIS CODE WISHES TO CALL SUBROUTINES USING    *
*          PLI CONVENTIONS, THEN THE CALLED SUBROUTINES     *
*          SHOULD START WITH A "#ENTER SAVTYPE=PLI" MACRO   *
*          AND END WITH A "#EXIT ((R14,R12)),RC=..." MACRO. *
*        - WHEN THIS CODE WISHES TO RETURN TO ITS CALLER,   *
*          IT SHOULD DO SO VIA A "#EXIT ((R14,R12)),RC=..." *
*          MACRO. THIS WILL CAUSE CONTROL TO RETURN TO      *
*          'PLIENV' WHICH WILL THEN CLEAN UP THE PLI        *
*          ENVIRONMENT AND THEN RETURN CONTROL TO "EXIT     *
*          CODE" ABOVE.                                     *
*************************************************************
         SPACE 1
         MEND
./ ADD NAME=#PUT     0100-89041-89041-0921-00080-00080-00000-DYNABLD
         MACRO
&NME     #PUT  &MSG,&PFIX=,&SUBAD=,&MF=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $PUT TO #PUT.
.*
.* LAST CHANGE DATE - APRIL 20, 1981
.*                  - "#REGS GEN=NO" SUPPORT ADDED.
.*
.* LAST CHANGE DATE - JULY 18, 1980
.*                  - INDIRECT ADDRESSING IS NOW INDICATED BY A
.*                    TRAILING PERCENT SIGN (%) RATHER THAN A LEADING
.*                    ONE.
.*
.* LAST CHANGE DATE - JANUARY 12, 1977
.*                  - HANDLING OF THE SUBAD= OPERAND IS REWRITTEN.
.*                  - MAILING ADDRESS CHANGE.
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
         GBLA  &#TESERR
         GBLC  &#PUTSUB
         GBLC  &#TESRET(20)
         LCLA  &A1
         LCLC  &@,&C1,&N
         AIF   ('&SUBAD' EQ '').SUBOK
         AIF   ('&SUBAD(1)' NE '&SUBAD').SUBOK
&#PUTSUB SETC  '&SUBAD'
.SUBOK   AIF   ('&MF(1)' EQ 'INIT').MEND
&N       SETC  '&NME'
.*
&@       SETC  '&PFIX'
         AIF   ('&PFIX' NE '').PFIXOK
         #TEST PFIX=
&@       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.PFIXOK  #REGS &PFIX,GEN=NO
.DONPFIX ANOP
.*
         AIF   ('&MSG(1)' EQ '&MSG').NOTREG
         #TEST REGS=&MSG(1)
         AIF   (&#TESERR NE 0).LR
         AIF   (&#TESRET(1) EQ 1).BAL
.LR      ANOP
&N       LR    &@.1,&MSG(1)        --> MESSAGE LENGTH FIELD
&N       SETC  ''
         AGO   .BAL
.NOTREG  AIF   ('&MSG' EQ '').BAL
         AIF   ('&MSG'(K'&MSG,1) EQ '%').MSGINDR
&N       LA    &@.1,&MSG-1         --> MESSAGE LENGTH FIELD
         AGO   .MSGOK
.MSGINDR ANOP
&C1      SETC  '&MSG'(1,K'&MSG-1)
&N       L     &@.1,=A(&C1-1)      --> MESSAGE LENGTH FIELD
.MSGOK   ANOP
&N       SETC  ''
.BAL     AIF   ('&SUBAD(1)' NE '&SUBAD').BALR
         AIF   ('&#PUTSUB'(1,1) EQ '%').BALINDR
&N       BAL   &@.14,&#PUTSUB      GO DISPLAY THE MESSAGE
         AGO   .MEND
.BALR    ANOP
&N       BALR  &@.14,&SUBAD(1)     GO DISPLAY THE MESSAGE
         AGO   .MEND
.BALINDR ANOP
&A1      SETA  0
.LP1     ANOP
&A1      SETA  &A1+1
         AIF   ('&#PUTSUB'(1,&A1) NE '&#PUTSUB').LP1
&C1      SETC  '&#PUTSUB'(2,&A1-1)
&N       L     &@.15,=A(&C1)       --> MESSAGE PRINTING ROUTINE
         BALR  &@.14,&@.15         GO DISPLAY THE MESSAGE
.MEND    MEND
./ ADD NAME=#REGS    0100-89041-89041-0921-00197-00197-00000-DYNABLD
         MACRO
         #REGS &GEN=YES
.*
.*
.*                                                            09/84 DBC
.* LAST CHANGE DATE - SEPTEMBER 11, 1984                      09/84 DBC
.*                  - ADDED SUPPORT FOR PL/S STYLE REGISTER   09/84 DBC
.*                    NAMES (@00, @01, ---, @15).             09/84 DBC
.*                  - ATTEMPTS TO MULTIPLY DEFINE THE SAME    09/84 DBC
.*                    NAME TO THE SAME VALUE WILL NOW BE      09/84 DBC
.*                    SUPPRESSED WITHOUT ERROR.               09/84 DBC
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $REGS TO #REGS
.*
.* LAST CHANGE DATE - APRIL 20, 1981
.*                  - SUPPORT FOR THE "GEN={YES|NO}" OPERAND IS ADDED.
.*
.* LAST CHANGE DATE - DECEMBER 5, 1977
.*                  - SINGLE REGISTER EQUATES NOW LINE UP CORRECTLY IN
.*                    THE LISTING.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - APRIL 1, 1975
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THE #REGS MACRO HAS TWO FUNCTIONS. ITS PRIMARY
.* PURPOSE IS TO PROVIDE A SIMPLE MEANS OF DEFINING SETS
.* OF REGISTER NAME EQUATES. ITS SECONDARY PURPOSE IS TO
.* CREATE AN INTERNAL TABLE OF ALL REGISTER NAMES
.* COUPLED WITH THEIR NUMERIC VALUES. THIS TABLE IS THEN
.* MADE AVAILABLE TO CERTAIN OTHER MACROS (E.G. #ENTER
.* AND #EXIT) SO THAT THEY CAN DETERMINE (IF NECESSARY)
.* THE VALUES OF ANY REGISTER NAMES THAT MIGHT BE PASSED
.* TO THEM AS OPERANDS AND SO THAT THEY CAN USE REGISTER
.* NAME EQUATES INSTEAD OF REGISTER NUMBERS IN THE CODE
.* THAT THEY GENERATE. THIS IS SO THAT ALL REFERENCES TO
.* REGISTERS WILL BE INDICATED IN THE ASSEMBLER'S CROSS
.* REFERENCE LISTING.
.*                                                            09/84 DBC
.*   THE #REGS MACRO CAN BE USED ANY NUMBER OF TIMES IN
.* AN ASSEMBLY. EACH TIME THAT IT IS USED, IT CAN BE
.* GIVEN ANY NUMBER OF POSITIONAL OPERANDS. EACH OPERAND      09/84 DBC
.* CAN BE EITHER A SINGLE TERM OR A SUB-LIST OF TWO
.* TERMS.
.*                                                            09/84 DBC
.*   IF AN OPERAND IS A SUB-LIST OF TWO TERMS, THEN THE
.* #REGS MACRO TREATS IT AS A REQUEST TO DEFINE A SINGLE
.* REGISTER NAME AND IT GENERATES A STATEMENT OF THE
.* FORM: " TERM1 EQU TERM2 ". THE FIRST TERM MUST BE ANY
.* VALID NAME NOT PREVIOUSLY DEFINED. THE SECOND TERM
.* MUST BE ANY SELF-DEFINING TERM OR ANY REGISTER NAME
.* THAT HAS BEEN PREVIOUSLY DEFINED BY THIS OR A
.* PREVIOUS #REGS MACRO. IT SHOULD NOT BE AN EXPRESSION,
.* AND IT SHOULD NOT BE ANY NAME NOT PREVIOUSLY DEFINED.
.* THE VALUE OF THE SECOND TERM SHOULD FALL IN THE RANGE
.* OF 0 THROUGH 15. IF THE SECOND TERM FITS THESE
.* REQUIREMENTS, THEN THE REGISTER NAME IS SAVED IN AN
.* INTERNAL TABLE FOR USE BY OTHER MACROS.
.*                                                            09/84 DBC
.*   IF AN OPERAND IS ONLY A SINGLE TERM, THEN THE MACRO
.* TREATS IT AS A REQUEST TO DEFINE A FULL SET OF
.* REGISTER NAME EQUATES WITH THE GIVEN TERM USED AS THE
.* REGISTER NAME PREFIX. AS AN EXAMPLE, ASSUME THAT THE
.* OPERAND IS "GPR". IN THIS CASE, THE #REGS MACRO WILL
.* GENERATE EQUATES DEFINING GPR0, GPR1, ---, GPR15 AND
.* GPRA, GPRB, ---, GPRF (EQUAVALENT TO GPR10, GPR11,
.* ---, GPR15). IN ADDITION, THE GENERATED REGISTER
.* NAMES ARE SAVED IN AN INTERNAL TABLE FOR USE BY OTHER
.* MACROS.
.*                                                            09/84 DBC
.*   A SPECIAL CASE. IF THE SINGLE TERM IS AN "AT SIGN"       09/84 DBC
.* (@), THEN THEN THE GENERATED NAMES WILL BE @00, @01,       09/84 DBC
.* ---, @15. THIS CONFORMS TO PL/S CONVENTIONS.               09/84 DBC
.*                                                            09/84 DBC
.*   IF #REGS IS CALLED WITHOUT OPERANDS, THEN IT IS
.* TREATED AS A REQUEST TO GENERATE A FULL SET OF
.* EQUATES USING "R" AS THE PREFIX.
.*
.*
.*
.* GEN={YES|NO}    (DEFAULT IS GEN=YES)
.*       THIS CONTROLS WHETHER OR NOT THIS MACRO ACTUALLY GENERATES THE
.*       'EQU' STATEMENTS THAT CREATE THE DESIRED REGISTER NAMES. IF
.*       "GEN=NO" IS GIVEN, THEN PRESUMEDLY THE DESIRED NAMES ARE
.*       GENERATED ELSEWHERE. IN THIS CASE THE ONLY FUNCTION PERFORMED
.*       BY THIS MACRO IS TO UPDATE INTERNAL TABLES.
.*
.*
.*
.* INNER MACROS USED - #TEST
.*
         GBLA  &#REGVAL(255)
         GBLA  &#TESERR
         GBLC  &#REGNME(255)
         GBLC  &#TESRET(20)
         LCLA  &ARG,&CTR,&NEXT,&A1
         LCLB  &B1
         LCLC  &LPFX,&C1
&NEXT    SETA  0
.LP1     AIF   (&NEXT GE 255).END1
&NEXT    SETA  &NEXT+1
         AIF   ('&#REGNME(&NEXT)' NE '').LP1
&NEXT    SETA  &NEXT-1
.END1    ANOP
&ARG     SETA  0
.LP2     AIF   (&ARG GE N'&SYSLIST).DONE
&ARG     SETA  &ARG+1
         AIF   (N'&SYSLIST(&ARG) EQ 0).LP2
         AIF   (&NEXT LT 255).NOTFULL
         MNOTE 4,'THE REGISTER NAME SAVE TABLE IS FULL.'
         MNOTE 4,'THE MAXIMUM CAPACITY IS 255 ENTRIES.'
.NOTFULL ANOP
&C1      SETC  '&SYSLIST(&ARG,1)'
         AIF   (N'&SYSLIST(&ARG) GE 2).ONEREG
.NULL    ANOP
&B1      SETB  (1)
         #TEST PFIX=
&LPFX    SETC  '&#TESRET(1)'
.*                                                            09/84 DBC
         AIF   ('&C1' NE '@').NOT@                            09/84 DBC
&CTR     SETA  0-1                                            09/84 DBC
.LP@     AIF   (&CTR EQ 15).END@                              09/84 DBC
&CTR     SETA  &CTR+1                                         09/84 DBC
&C1      SETC  '0&CTR'                                        09/84 DBC
&C1      SETC  '&C1'(K'&C1-1,2)                               09/84 DBC
         #REGS (@&C1,&LPFX&CTR)                               09/84 DBC
         AGO   .LP@                                           09/84 DBC
.END@    AIF   (&NEXT GE 255).LP2                             09/84 DBC
&NEXT    SETA  &NEXT+1                                        09/84 DBC
         AIF   ('&#REGNME(&NEXT)' NE '').END@                 09/84 DBC
&NEXT    SETA  &NEXT-1                                        09/84 DBC
         AGO   .LP2                                           09/84 DBC
.NOT@    ANOP                                                 09/84 DBC
.*                                                            09/84 DBC
&CTR     SETA  0
.LP2A    AIF   (&CTR GE &NEXT).PXSAVE
&CTR     SETA  &CTR+1
         AIF   (&#REGVAL(&CTR) LT 16 OR '&#REGNME(&CTR)' NE '&C1').LP2A
         AGO   .LP2                                           09/84 DBC
.PXSAVE  AIF   (&NEXT GE 255).NOSAVE1                         09/84 DBC
&NEXT    SETA  &NEXT+1
&#REGNME(&NEXT) SETC '&C1'
&#REGVAL(&NEXT) SETA 16
.NOSAVE1 AIF   ('&GEN(1)'(1,1) NE 'Y').LP2
&CTR     SETA  0
.LP3     AIF   (&CTR GT 15).HEX
&C1&CTR  EQU   &LPFX&CTR
&CTR     SETA  &CTR+1
         AGO   .LP3
.HEX     ANOP
&C1.A    EQU   &C1.10
&C1.B    EQU   &C1.11
&C1.C    EQU   &C1.12
&C1.D    EQU   &C1.13
&C1.E    EQU   &C1.14
&C1.F    EQU   &C1.15
         AGO   .LP2
.ONEREG  ANOP
&B1      SETB  (1)
         AIF   (N'&SYSLIST(&ARG) EQ 2).NOXCESS
         MNOTE 4,'"&SYSLIST(&ARG)" CONTAINS EXCESS INFORMATION.'
         MNOTE 4,'THE EXCESS WILL BE IGNORED.'
.NOXCESS #TEST REGS=&SYSLIST(&ARG,2)
         AIF   (&#TESERR EQ 0).REGOK
         MNOTE 4,'THE VALUE OF "&SYSLIST(&ARG,2)" IS NOT DETERMINABLE.'
         AGO   .REGEQU
.REGOK   ANOP                                                 09/84 DBC
&A1      SETA  &#TESRET(1)
&CTR     SETA  0
.LP3A    AIF   (&CTR GE &NEXT).RGSAVE
&CTR     SETA  &CTR+1
         AIF   (&#REGVAL(&CTR) NE &A1 OR '&#REGNME(&CTR)' NE '&C1').LP3*
               A
         AGO   .LP2                                           09/84 DBC
.RGSAVE  AIF   (&NEXT GE 255).REGEQU                          09/84 DBC
&NEXT    SETA  &NEXT+1
&#REGNME(&NEXT) SETC '&C1'
&#REGVAL(&NEXT) SETA &A1
.REGEQU  AIF   ('&GEN(1)'(1,1) NE 'Y').LP2
&C1      EQU   &SYSLIST(&ARG,2)
         AGO   .LP2
.DONE    ANOP
&C1      SETC  'R'
         AIF   (NOT &B1).NULL
         MEND
./ ADD NAME=#RELOAD  0100-89041-89041-0921-00066-00066-00000-DYNABLD
         MACRO
&N       #RELOAD &D,&LCLBASE=NONE,&PGMBASE=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $RELOAD TO #RELOAD.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - AUGUST 23, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE DIRECTED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         GBLC  &#BS(14)
         LCLA  &A1,&A2
         LCLC  &PBA,&#
&#       SETC  '&SYSNDX.'
         AIF   ('&#BS(14)' EQ '').MEND
&PBA     SETC  '#RL&#.B'
         AIF   (K'&PGMBASE EQ 0).RTY
         AIF   ('&PGMBASE' EQ '&PGMBASE(1)').GHJ
         AIF   ('&#BS(13)' EQ '&PGMBASE(1)').KLM
         #TEST REGS=(&#BS(13),&PGMBASE(1))
         AIF   (&#TESERR NE 0).MNO
         AIF   ('&#TESRET(1)' EQ '&#TESRET(2)').KLM
.MNO     ANOP
&N       LR    &#BS(13),&PGMBASE(1) LOAD 1ST PROGRAM BASE
         AGO   .HK
.KLM     ANOP
&N       DS    0H                  1ST PROGRAM BASE ALREADY LOADED
         AGO   .HK
.GHJ     ANOP
&PBA     SETC  '&PGMBASE'
.RTY     AIF   ('&LCLBASE' NE 'NONE').GJ
&N       BALR  &#BS(13),0          GET TEMPORARY BASE
         L     &#BS(13),&PBA-*(,&#BS(13)) LOAD 1ST PROGRAM BASE
         AGO   .HK
.GJ      ANOP
&N       L     &#BS(13),&PBA       LOAD 1ST PROGRAM BASE
.HK      ANOP
&A1      SETA  13
&A2      SETA  13
.LP3     AIF   (&A1 EQ 1).END3
&A1      SETA  &A1-1
         AIF   ('&#BS(&A1)' EQ '').LP3
         LA    &#BS(&A1),X'FFF'(,&#BS(&A2)) LOAD NEXT BASE
&A2      SETA  &A1
         AGO   .LP3
.END3    #USING
         AIF   (K'&PGMBASE NE 0).MEND
         B     #RL&#.Y             SKIP OVER DATA AREA
#RL&#.B  DC    A(&#BS(14))         PROGRAM BASE ADDRESS
#RL&#.Y  DS    0H                  RECEIVE BRANCH
.MEND    MEND
./ ADD NAME=#SAL     0100-89041-89041-0921-00099-00099-00000-DYNABLD
         MACRO
&N       #SAL  &D
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $SAL TO #SAL.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1976
.*
.* THIS MACRO WAS PUT TOGETHER BY DAVID B. COLE. ANY QUESTIONS
.* CONCERNING IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO CAUSES IBM'S STANDARD STAND ALONE LOADER (THE
.* "BOOTSTRAP" LOADER) TO BE PUNCHED. NO OPERANDS ARE ACCEPTED BY THIS
.* MACRO. THE CALL TO THIS MACRO SHOULD BE PLACED PRIOR TO ANY START OR
.* CSECT CARD.
.*
.* THE LOADER PUNCHED BY THIS MACRO IS THE SAME LOADER DISTRIBUTED BY
.* IBM WITH THE IBCDASDI AND IBCDMPRS UTILITIES. THE FOLLOWING
.* INFORMATION IS PERTENANT:
.* - THE LOADER CONSISTS OF SIX CARDS. IT MUST BE PLACED IMMEDIATELY
.*   PRECEEDING THE DECK TO BE LOADED.
.* - THE LOADER WILL LOAD SUCCESSFULLY FROM ANY CARD READER OR TAPE
.*   DRIVE. IF A TAPE DRIVE IS USED, THEN BOTH THE LOADER AND THE DECK
.*   BEING LOADED MUST BE IN THE FORM OF 80-BYTE UNBLOCKED CARD IMAGES.
.* - THE LOADER LOADS SINGLE OBJECT DECKS INTO CORE AT THE ABSOLUTE
.*   ADDRESSES DEFINED IN THE DECK ITSELF.
.* - THE LOADER ITSELF RESIDES BETWEEN X'7C20' AND X'7D9C', SO THE DECK
.*   BEING LOADED MUST NO OVERLAY THESE LOCATIONS.
.* - THE DECK BEING LOADED MUST DEFINE AN INITIAL PSW LOCATED AT
.*   LOCATION X'0'. IT MAY ALSO DEFINE ANY INTERRUPT OLD AND NEW PSW'S
.*   THAT IT REQUIRES EXCEPT FOR THE EXTERNAL INTERRUPT PSW'S SINCE
.*   THESE MIGHT BE OVERLAID IF THE LOADER ENCOUNTERS AN I/O ERROR
.*   DURING ITS PROCESSING.
.* - IF DURING THE LOADING PROCESS AN I/O ERROR DOES OCCURE, THEN THE
.*   LOADER WAITS FOR AN EXTERNAL INTERRUPT UPON WHICH A RE-READ IS
.*   ATTEMPTED.
.* - THE VARIOUS TYPES OF OBJECT CARDS ARE RECOGNIZED BY TESTING ONLY
.*   COLUMN THREE OF EACH CARD.
.* - ESD CARDS ARE IGNORED. NO ATTEMPT IS MADE TO DEAL WITH EXTERNAL
.*   REFERENCES.
.* - RLD CARDS ARE ALSO IGNORED. SINCE ALL RELATIVE ADDRESSES IN THE
.*   OBJECT DECK ARE TREATED AS BEING ABSOLUTE, RLD INFORMATION IS
.*   SIMPLY NOT NEEDED.
.* - THE FOLLOWING TXT FIELDS ARE USED. NEEDLESS TO SAY, THEY CONTAIN
.*   BINARY DATA.
.*   +DISPL(LEN) - USAGE
.*   +2(1)       - MUST BE THE CHARACTER "X" TO IDENTIFY THE CARD
.*   +4(4)       - MUST BE THE ABSOLUTE STARTING ADDRESS FOR THE
.*                 FOLLOWING TEXT DATA
.*   +10(2)      - MUST BE THE LENGTH (IN BYTES) OF THE TEXT DATA
.*   +16(---)    - MUST BE THE TEXT DATA TO BE LOADED
.* - THE END CARD CAUSES THE LOADER TO DO THE FOLLOWING:
.*   - THE IPL DEVICE ADDRESS IS STORED AT LOCATION +2(2).
.*   - A PSW IS LOADED FROM LOCATION +0(8).
.* - IF A CARD IS OTHERWISE UNRECOGNIZABLE, THEN IT IS ASSUMED TO BE A
.*   MANUALLY KEYPUNCHED REP CARD. SUCH CARDS MUST HAVE THE FOLLOWING
.*   FORMAT:
.*   +6(6)       - THE ABSOLUTE ADDRESS (IN HEX) FOR THE START OF THE
.*                 REP DATA
.*   +16(---)    - CONSECUATIVE 4-DIGIT FIELDS (SEPERATED BY COMMAS) OF
.*                 HEX REP DATA.
.*   THE REP DATA MUST BE GIVEN IN UNITS OF 4-DIGIT (2-BYTE) FIELDS.
.*   THE REP ADDRESS NEED NOT, HOWEVER, BE HALFWORD ALIGNED. NO
.*   VALIDITY CHECKING WHATSOEVER IS DONE. INVALID REP DATA WILL RESULT
.*   IN EITHER UNEXPECTED REP'S OR PROGRAM CHECK LOOPS. LEADING ZEROS
.*   MUST BE SUPPLIED. EXAMPLES:
.*    000341    1234,ABCD,EFGH
.*    01ABCC    8888
.*   REP CARDS MAY BE FREELY INTERMIXED INTO THE OBJECT DECK.
.*
.* INNER MACROS USED - NONE
.*
.*
.*
         REPRO
   0  @   @    &  @                IBM STANDARD STAND ALONE LOADER DECK
         REPRO
  @    &  @    &  @Q   &  '    & 0     -}  &1 &&    0   -   -   0   0
         REPRO
0   -   0   0 nS1   0 nL1   0 nX1  -0   1   1     1       0  00       1
         REPRO
  0  7  } &     0 &  *b 1 nN1  -0  -} b }   1      &1  ^0  &1   1
         REPRO
   ^0 n,    0  00         nF    0     nF    0     i     1
         REPRO
  1     0         '<   &          C
         MEND
./ ADD NAME=#SEARCH  0100-89041-89041-0921-00223-00223-00000-DYNABLD
         MACRO
&NME     #SEARCH &DUMMY,&PFIX=,&SVID=,&CMPRID=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - SEPTEMBER 8, 1981
.*                  - THE PARAMETERIZATION OF THE SEARCH ROUTINE WAS
.*                    CHANGED FROM:
.*                       - R15 = L'LIST
.*                       - R0 = L'LIST ENTRY
.*                       - R1 --> SO-LIST
.*                    TO:
.*                       - R15 --> SO-LIST
.*                         R0 = L'LIST ENTRY
.*                         R1 --> EO-LIST
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $SEARCH TO #SEARCH.
.*
.* LAST CHANGE DATE - APRIL 20, 1981
.*                  - "#REGS GEN=NO" SUPPORT ADDED.
.*
.* LAST CHANGE DATE - MARCH 12, 1980
.*                  - SUPPORT FOR AN EMPTY LIST HAS BEEN FIXED.
.*
.* LAST CHANGE DATE - SEPTEMBER 18, 1978
.*                  - IF THE LIST HAS MULTIPLE ENTRIES WITH THE SAME
.*                    KEY AS THE SEARCH OBJECT, THEN THIS ROUTINE NOW
.*                    RETURNS THE LAST (SEQUENTIALLY) SUCH LIST ENTRY.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - OCTOBER 28, 1975
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES A SUBROUTINE THAT SEARCHES A SORTED LIST.  A
.* BINARY SEARCH METHOD IS USED.
.*
.*   THE SEARCH SUBROUTINE REQUIRES THE FOLLOWING INPUTS:
.*       - R14 POINTS TO THE RETURN ADDRESS;
.*       - R15 POINTS TO THE START OF THE LIST TO BE SEARCHED;
.*       - R0 CONTAINS THE LENGTH (IN BYTES) OF EACH ENTRY IN
.*         THE LIST;
.*       - R1 POINTS PAST THE END OF THE LIST.
.*
.*   ON OUTPUT THE CONDITION CODE AND R1 ARE SET AS FOLLOWS:
.*       - CC=0 (EQUAL) MEANS THAT THE SEARCH OBJECT WAS FOUND. R1
.*         POINTS TO IT. IF THE LIST CONTAINS MORE THAN ONE OBJECT
.*         HAVING THE SAME KEY AS THE SEARCH OBJECT, THEN R1 POINTS TO
.*         THE LAST SUCH OBJECT IN THE LIST.
.*       - CC=2 (HIGH) MEANS THAT THE SEARCH OBJECT WAS NOT FOUND. R1
.*         POINTS TO WHERE IT SHOULD BE INSERTED.
.* ALL OTHER REGISTERS ARE RESTORED.
.*
.*   THE SEARCH SUBROUTINE IS NOT REENTRANT, BUT IT IS SERIALLY
.* REUSABLE.
.*
.*   THE NAME FIELD
.* THIS FIELD IS OPTIONAL. IT CAN BE USED TO DEFINE BOTH THE NAME OF
.* THE SUBROUTINE AND THE PREFIX USED IN ALL GENERATED STATEMENT
.* LABELS. IF OMITTED, THEN THE CHARACTERS "SRCH" WILL BE USED. IF
.* GIVEN, THEN NO MORE THAN FOUR CHARACTERS SHOULD BE SPECIFIED.
.*
.*   THE PFIX= OPERAND
.* THE #SEARCH MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS EXPANSION
.* WHEN REFERING TO REGISTERS. THIS IS SO THAT THE USE OF THE REGISTERS
.* WILL BE INDICATED IN THE CROSS REFERENCE LISTING. THE PFIX= OPERAND
.* CAN BE USED TO CONTROL THE SET OF EQUATES USED. FOR EXAMPLE, IF
.* "PFIX=GPR" IS SPECIFIED, THEN "GPR1" WILL BE USED WHENEVER THE
.* EXPANSION REFERS TO REGISTER 1.
.*   IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF EQUATES DEFINED
.* BY THE FIRST PRIOR #REGS MACRO WILL BE USED. IF THERE IS NO PRIOR
.* #REGS MACRO, THEN NO EQUATES WILL BE USED.
.*
.*   THE CMPRID= OPERAND
.* THIS OPERAND IS REQUIRED. IT INDICATES THE ADDRESS OF A SUBROUTINE
.* TO BE USED BY THE SEARCH ROUTINE FOR COMPARING THE SEARCH OBJECT
.* WITH A LIST ENTRY. EITHER A STATEMENT LABEL OR A REGISTER MAY BE
.* SPECIFIED.
.*   THE SPECIFIED COMPARISON ROUTINE IS GIVEN THE FOLLOWING INPUTS:
.*       - R14 POINTS TO THE RETURN ADDRESS.
.*       - R15 POINTS TO THE LIST ENTRY TO BE COMPARED AGAINST THE
.*         SEARCH OBJECT.
.*       - R0 THROUGH R6 CONTAIN DATA ON WHICH THE SEARCH ROUTINE IS
.*         DEPENDANT.
.*       - R7 THROUGH R13 CONTAIN WHAT WAS IN THEM PRIOR TO THE START
.*         OF THE SEARCH ROUTINE.
.* ON OUTPUT THE COMPARISON ROUTINE MUST PROVIDE THE FOLLOWING:
.*       - R14 THROUGH R6 MAY NOT BE ALTERED BY THE COMPARISON
.*         ROUTINE.
.*       - R7 THROUGH R13 (EXCEPT THOSE THAT ARE USED AS
.*         PROGRAM BASES) MAY BE USED FREELY SINCE THE SEARCH ROUTINE
.*         RESTORES ALL REGISTERS WHEN IT IS FINISHED.
.*       - THE CONDITION CODE MUST BE SET AS FOLLOWS:
.*             - CC=0 (EQUAL) MEANS THAT THE SEARCH OBJECT MATCHES THE
.*               CURRENT LIST ENTRY.
.*             - CC=1 (LOW) MEANS THAT THE SEARCH OBJECT IS LOWER THAN
.*               THE CURRENT LIST ENTRY.
.*             - CC=2 (HIGH) MEANS THAT THE SEARCH OBJECT IS HIGHER
.*               THAN THE CURRENT LIST ENTRY.
.*
.*   THE SVID= OPERAND
.* USE THIS OPERAND TO SPECIFY THE NAME OF A 16-WORD REGISTER SAVE
.* AREA. IF OMITTED, THEN THE MACRO WILL GENERATE A LOCAL SAVE AREA.
.*
.* INNER MACROS USED - #REGS #TEST #DIE
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLC  &N,&R,&SAVEA
&N       SETC  'SRCH'
         AIF   (K'&NME EQ 0).GOTNME
&N       SETC  '&NME'
.GOTNME  ANOP
.*
&R       SETC  '&PFIX'
         AIF   (K'&PFIX NE 0).GOTPFIX
         #TEST PFIX=
&R       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.GOTPFIX #REGS &PFIX,GEN=NO
.DONPFIX ANOP
.*
* BINARY SEARCH ROUTINE
*        INPUTS:
*        - R14 POINTS TO THE RETURN ADDRESS
*        - R15 POINTS TO THE START OF THE LIST TO BE SEARCHED
*        - R0 CONTAINS THE LENGTH OF EACH LIST ENTRY (IN BYTES)
*        - R1 POINTS PAST THE END OF THE LIST
         SPACE 1
* COMPARE ROUTINE INPUTS:
*        - R15 POINTS TO THE LIST ENTRY TO BE COMPARED AGAINST THE
*          SEARCH OBJECT.
*        - R14 POINTS TO THE RETURN ADDRESS.
*        - R14 THROUGH R6 CONTAIN DATA CRITICAL TO THE SEARCH ROUTINE.
*          THEY MUST NOT BE ALTERED BY THE COMPARE ROUTINE.
         SPACE 1
* COMPARE ROUTINE OUTPUTS:
*        - CC=0 (EQUAL) MEANS THAT THE SEARCH OBJECT MATCHES THE
*          CURRENT LIST ENTRY.
*        - CC=1 (LOW) MEANS THAT THE SEARCH OBJECT IS LOWER THAN THE
*          CURRENT LIST ENTRY.
*        - CC=2 (HIGH) MEANS THAT THE SEARCH OBJECT IS HIGHER THAN THE
*          CURRENT LIST ENTRY.
&SAVEA   SETC  '&N.SAVE'
         AIF   (K'&SVID EQ 0).GOTSAVE
&SAVEA   SETC  '&SVID'
.GOTSAVE ANOP
&N       STM   &R.14,&R.13,&SAVEA  SAVE ALL WORK REGISTERS
         AIF   ('&CMPRID' EQ '&CMPRID(1)').NOCMPR1
         #TEST REGS=&CMPRID(1)
         AIF   ( &#TESERR EQ 0 AND '&#TESRET(1)' EQ '2').NOCMPR2
         LR    &R.2,&CMPRID(1)     POINT TO COMPARISON ROUTINE
         AGO   .NOCMPR2
.NOCMPR1 LA    &R.2,&CMPRID        POINT TO COMPARISON ROUTINE
.NOCMPR2 ANOP
         LNR   &R.15,&R.15         GET NEGATIVE SO-LIST
         AR    &R.15,&R.1          GET L'LIST
         SR    &R.1,&R.15          GET SO-LIST
         SR    &R.14,&R.14         CLEAR FOR DIVIDE
         DR    &R.14,&R.0          GET LIST'S ENTRY COUNT
         LTR   &R.4,&R.14          GET INITIAL SEARCH INDEX; WAS THE
*                                  ABOVE DIVIDE EVEN?
         #DIE  NZ,'SEARCH LIST SIZE INCOMPATIBLE WITH LIST ENTRY SIZE'
         LTR   &R.3,&R.15          YES, GET LIST ENTRY COUNT; EMPTY?
         BZ    &N.NULL             YES, GO RETURN "NOT FOUND"
         LA    &R.5,1(,&R.3)       NO, GET INITIAL WIDTH; INSURE  0
         LA    &R.6,1              GET COMBO OF "1" AND DIRECTION FLAG
         SPACE 1
&N.UP    LCR   &R.6,&R.6           COMPLEMENT FOR TEST
         CR    &R.5,&R.6           WAS PREV WIDTH 1 AND DIRECTION DOWN?
         BE    &N.NFND             YES, SEARCH OBJECT NOT FOUND
&N.UP2   LPR   &R.6,&R.6           NO, SET DIRECTION UP
         AR    &R.5,&R.6           FORCE WIDTH TO ROUND UP UPON DIVIDE
         SRL   &R.5,1              CUT WIDTH IN HALF (ROUND UP)
         AR    &R.4,&R.5           ADVANCE THE SEARCH INDEX
         B     &N.CMPR             PROCEED
         SPACE 1
&N.DOWN  LNR   &R.6,&R.6           SET DIRECTION DOWN
         SR    &R.5,&R.6           FORCE WIDTH TO ROUND UP UPON DIVIDE
         SRL   &R.5,1              CUT WIDTH IN HALF (ROUND UP)
         SR    &R.4,&R.5           RETREAT THE SEARCH INDEX
         SPACE 1
&N.CMPR  BM    &N.UP               SCAN UP IF BELOW THE LIST
         CR    &R.4,&R.3           ABOVE THE LIST?
         BNL   &N.DOWN             YES, MUST SCAN DOWN
         SPACE 1
         LR    &R.15,&R.4          GET CURRENT POSITION INDEX
         MR    &R.14,&R.0          CNVRT TO LIST DISPLACEMENT
         AR    &R.15,&R.1          CNVRT TO ABSOLUTE ENTRY POINTER
         BALR  &R.14,&R.2          LINK TO COMPARISON ROUTINE
         BL    &N.DOWN             TOO HIGH; MUST MOVE DOWN
         BH    &N.UP               TOO LOW; MUST MOVE UP
         SPACE 1
         LCR   &R.6,&R.6           A HIT; COMPLEMENT FOR TEST
         CR    &R.5,&R.6           WAS PREVIOUS WIDTH 1 AND DOWN?
         BE    &N.FND              YES, FOUND LAST OF DUPLICATE KEYS
         LA    &R.5,4              NO, SET TO FWD SCAN PAST DUP KEYS
         B     &N.UP2              LOOP TO SKIP PAST DUP KEYS
         SPACE 1
&N.NFND  LA    &R.15,1(,&R.4)      NOT FOUND; GET INDEX TO INSERT POINT
         MR    &R.14,&R.0          CNVRT TO DISPLACEMENT
&N.NULL  AR    &R.15,&R.1          CNVRT TO ABSOLUTE
         CLI   *,0                 SET CC =0
&N.FND   ST    &R.15,&SAVEA+12     PRESERVE ENTRY PTR IN R1 SLOT
         LM    &R.14,&R.13,&SAVEA  RESTORE REGISTERS
         BR    &R.14               RETURN TO CALLER WITH CC SET
         AIF   (K'&SVID NE 0).MEND
         SPACE 1
&N.SAVE  DC    16A(0)              REGISTER SAVE AREA
.MEND    MEND
./ ADD NAME=#SLD     0100-89041-89041-0921-00051-00051-00000-DYNABLD
         MACRO
&N       #SLD  &R,&A
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM SLD TO #SLD.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 3, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO SIMULATES A HYPOTHETICAL "SUBTRACT LOGICAL DOUBLE"
.* MACHINE INSTRUCTION. ITS FUNCTION IS SIMILAR TO THE "SL" MACHINE
.* INSTRUCTION EXCEPT THAT IT OPERATES ON 64-BIT NUMBERS. WARNING, THE
.* RESULTING CONDITION CODE IS NOT AN ANALOGOUS EXTENSION FROM THE "SL"
.* INSTRUCTION.
.*
.* INNER MACROS USED - #TEST
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLA  &A1
         LCLC  &RODD
&RODD    SETC  '&R+1'
         #TEST REGS=&R
         AIF   (&#TESERR NE 0).REGUNKN
&A1      SETA  &#TESRET(1)+1
         AIF   (&A1 LE 15).GOTA1
&A1      SETA  0
.GOTA1   #TEST PFIX=
&RODD    SETC  '&#TESRET(1)&A1'
.REGUNKN ANOP
&N       SL    &RODD,4+&A LOW-ORDER DIFFERENCE; HI-ORDER AFFECTED?
         BC    3,SLD&SYSNDX NO, SKIP
         BCTR  &R,0 YES, ADJUST HI-ORDER
SLD&SYSNDX SL  &R,&A GET HI-ORDER DIFFERENCE
         MEND
./ ADD NAME=#SLDR    0100-89041-89041-0921-00060-00060-00000-DYNABLD
         MACRO
&N       #SLDR &R1,&R2
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $SLDR TO #SLDR.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 3, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING IT
.* MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO SIMULATES A HYPOTHETICAL "SUBTRACT LOGICAL DOUBLE
.* REGISTER" MACHINE INSTRUCTION. ITS FUNCTION IS SIMILAR TO THE "SLR"
.* MACHINE INSTRUCTION EXCEPT THAT IT OPERATES ON 64-BIT NUMBERS.
.* WARNING, THE RESULTING CONDITION CODE IS NOT AN ANALOGOUS EXTENSION
.* FROM THE "SLR" INSTRUCTION.
.*
.* INNER MACROS USED - #TEST
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLA  &A1
         LCLC  &R1ODD,&R2ODD
&R1ODD   SETC  '&R1+1'
         #TEST REGS=&R1
         AIF   (&#TESERR NE 0).R1UNKN
&A1      SETA  &#TESRET(1)+1
         AIF   (&A1 LE 15).GOTA1A
&A1      SETA  0
.GOTA1A  #TEST PFIX=
&R1ODD   SETC  '&#TESRET(1)&A1'
.R1UNKN  ANOP
&R2ODD   SETC  '&R2+1'
         #TEST REGS=&R2
         AIF   (&#TESERR NE 0).R2UNKN
&A1      SETA  &#TESRET(1)+1
         AIF   (&A1 LE 15).GOTA1B
&A1      SETA  0
.GOTA1B  #TEST PFIX=
&R2ODD   SETC  '&#TESRET(1)&A1'
.R2UNKN  ANOP
&N       SLR   &R1ODD,&R2ODD LOW-ORDER DIFFERENCE; HI-ORDER AFFECTED?
         BC    3,SLDR&SYSNDX NO, SKIP
         BCTR  &R1,0 YES, ADJUST HI-ORDER
SLDR&SYSNDX SLR &R1,&R2 GET HI-ORDER DIFFERENCE
         MEND
./ ADD NAME=#SORT    0100-89041-89041-0921-00247-00247-00000-DYNABLD
         MACRO
&NME     #SORT &SEQ,&PFIX=,&SVID=,&CMPRID=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $SORT TO #SORT.
.*
.* LAST CHANGE DATE - APRIL 20, 1981
.*                  - "#REGS GEN=NO" SUPPORT ADDED.
.*
.* LAST CHANGE DATE - SEPTEMBER 12, 1978
.*                  - THE SORT ROUTINE IS NOW REENTRANT.
.*                  - THE LINKAGE FROM A COMPARE ROUTINE IS DIFFERENT
.*                    IF THE COMPARE ROUTINE ALSO PERFORMS THE
.*                    EXCHANGE.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - OCTOBER 28, 1975
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES A SUBROUTINE THAT SORTS A LIST OF ITEMS USING
.* THE INTERNAL SORTING TECHNIQUE KNOWN AS THE "SHELL SORT".
.*
.*   THE SORT SUBROUTINE REQUIRES THE FOLLOWING INPUTS:
.*       - REGISTER 14 POINTS TO THE RETURN ADDRESS;
.*       - REGISTER 15 CONTAINS THE LENGTH (IN BYTES) OF THE LIST TO BE
.*         SORTED;
.*       - REGISTER 0 CONTAINS THE LENGTH (IN BYTES) OF EACH ENTRY IN
.*         THE LIST;
.*       - REGISTER 1 POINTS TO THE START OF THE LIST.
.*
.*   ON OUTPUT THE LIST DESCRIBED BY THE INPUT PARAMETERS IS SORTED IN
.* EITHER ASCENDING OR DESCENDING COALATING SEQUENCE (DEPENDING UPON
.* THE MACRO CALL). ALL REGISTERS ARE RESTORED.
.*
.*   THE SORT SUBROUTINE IS REENTRANT.
.*
.*   THE NAME FIELD
.* THIS FIELD IS OPTIONAL. IT CAN BE USED TO DEFINE BOTH THE NAME OF
.* THE SUBROUTINE AND THE PREFIX USED IN ALL GENERATED STATEMENT
.* LABELS. IF OMITTED, THE THE CHARACTERS "SORT" WILL BE USED. IF
.* GIVEN, THEN NO MORE THAN FOUR CHARACTERS SHOULD BE SPECIFIED.
.*
.*   THE FIRST POSITIONAL OPERAND
.* THIS FIELD IS OPTIONAL. IT CAN BE USED TO SPECIFY WHETHER THE LIST
.* IS TO BE SORTED IN ASCENDING OT DESCENDING ORDER. IF OMITTED, THEN
.* ASCENDING ORDER IS ASSUMED. IF GIVEN, THEN IT SHOULD BE EITHER "A"
.* OR "D".
.*
.*   THE PFIX= OPERAND
.* THE #SORT MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS EXPANSION
.* WHEN REFERING TO REGISTERS. THIS IS SO THAT THE USE OF THE REGISTERS
.* WILL BE INDICATED IN THE CROSS REFERENCE LISTING. THE PFIX= OPERAND
.* CAN BE USED TO CONTROL THE SET OF EQUATES USED. FOR EXAMPLE, IF
.* "PFIX=GPR" IS SPECIFIED, THEN "GPR1" WILL BE USED WHENEVER THE
.* EXPANSION REFERS TO REGISTER 1.
.*   IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF EQUATES DEFINED
.* BY THE FIRST PRIOR #REGS MACRO WILL BE USED. IF THERE IS NO PRIOR
.* #REGS MACRO, THEN NO EQUATES WILL BE USED.
.*
.*   THE CMPRID= OPERAND
.* WHEN THE CMPRID= OPERAND IS OMITTED, THEN FOR SORTING PURPOSES A CLC
.* INSTRUCTION IS USED TO COMPARE THE ENTIRETY OF EACH LIST ENTRY. IF
.* THIS IS NOT ACCEPTABLE, THEN THE CMPRID= OPERAND CAN BE USED TO
.* INDICATE THAT ENTRY COMPARISON IS TO BE DONE VIA SUBROUTINE CALL. IF
.* "CMPRID=0" IS GIVEN, THEN THE PROGRAMMER MUST PRELOAD THE ADDRESS OF
.* THE COMPARE SUBROUTINE INTO THE ADDRESS LABELLED "SORTCMPR". ON THE
.* OTHER HAND, IF CMPRID= IS SET EQUAL TO SOMETHING OTHER THAN 0, THEN
.* THE GIVEN VALUE IS USED EITHER AS THE NAME OF THE SUBROUTINE, OR AS
.* A REGISTER CONTAINING A POINTER TO THE SUBROUTINE.
.*   ON ENTRY TO THE COMPARE ROUTINE, R6 AND R7 POINT TO THE TWO LIST
.* ENTRIES TO BE COMPARED. THE ENTRY POINTED TO BY R6 SEQUENTIALLY
.* PRECEEDS THE ONE POINTED TO BY R7. R14 POINTS TO THE RETURN ADDRESS.
.*   UPON RETURN, THE COMPARE ROUTINE MUST SET THE CONDITION CODE AS
.* FOLLOWS:
.*       - CC=0 (EQUAL) MEANS THAT THE TWO LIST ENTRIES ARE EQUAL IN
.*         VALUE AND SHOULD NOT BE EXCHANGED.
.*       - CC=1 (LOW) MEANS THAT THE FIRST LIST ENTRY HAS A LOWER VALUE
.*         THAN THE SECOND. WHETHER OR NOT THEY ARE EXCHANGED DEPENDS
.*         UPON WHETHER OR NOT THIS IS AN ASCENDING OR DESCENDING ORDER
.*         SORT.
.*       - CC=2 (HIGH) MEANS THAT THE FIRST LIST ENTRY HAS A HIGHER
.*         VALUE THAN THE SECOND. WHETHER OR NOT THEY ARE EXCHANGED
.*         DEPENDS UPON WHETHER OR NOT THIS IS AN ASCENDING OR
.*         DESCENDING ORDER SORT.
.*       - CC=3 (OVERFLOW) MEANDS THAT THE TWO ENTRIES WERE OUT OF
.*         ORDER AND HAVE ALREADY BEEN EXCHANGED BY THE COMPARE
.*         ROUTINE. THIS RETURN SHOULD BE USED IF THE NATURE OF THE
.*         LIST ENTRIES IS SUCH THAT THE EXCHANGE CODE GENERATED BY
.*         THIS MACRO WOULD FAIL.
.*   THE COMPARE ROUTINE MUST NOT ALTER REGISTERS 14 THROUGH 7. ANY OF
.* THE REGISTERS 8 THROUGH 13 (EXCEPTING THOSE THAT ARE USED AS PROGRAM
.* BASES) MAY BE USED FREELY SINCE THE SORT ROUTINE RESTORES ALL
.* REGISTERS WHEN IT IS FINISHED.
.*
.*   THE SVID= OPERAND
.* USE THIS OPERAND TO SPECIFY THE NAME OF A REGISTER SAVE AREA. IF
.* OMITTED, THEN THE MACRO WILL GENERATE A LOCAL SAVE AREA.
.*   IF THE CMPRID= OPERAND IS GIVEN, THEN THE SAVE AREA MUST BE 16
.* WORDS LONG; OTHERWISE, IT NEED BE ONLY 10 WORDS LONG (FOR REGISTERS
.* 14 THROUGH 7).
.*
.*
.*
.* INNER MACROS USED - #REGS #TEST
.*
.*
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLA  &SAVESZ,&SL
         LCLC  &N,&R,&SAVEA
&N       SETC  'SORT'
         AIF   (K'&NME EQ 0).GOTNME
&N       SETC  '&NME'
.GOTNME  ANOP
.*
&R       SETC  '&PFIX'
         AIF   (K'&PFIX NE 0).GOTPFIX
         #TEST PFIX=
&R       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.GOTPFIX #REGS &PFIX,GEN=NO
.DONPFIX ANOP
.*
         AIF   ('&SEQ' EQ 'D').DCNDCMT
* ASCENDING ORDER SORT ROUTINE
         AGO   .CMT2
.DCNDCMT ANOP
* DESCENDING ORDER SORT ROUTINE
.CMT2    ANOP
&SAVESZ  SETA  10
&SL      SETA  7
         AIF   (K'&CMPRID EQ 0).NOCMPR1
&SAVESZ  SETA  16
&SL      SETA  13
* WITH A CALLER PROVIDED SUBROUTINE FOR ENTRY COMPARISON
.NOCMPR1 SPACE 1
* SORT ROUTINE INPUTS:
*        - R14 POINTS TO THE RETURN ADDRESS
*        - R15 CONTAINS THE LENGTH OF THE LIST (IN BYTES)
*        - R0 CONTAINS THE LENGTH OF EACH LIST ENTRY (IN BYTES)
*        - R1 POINTS TO THE START OF THE LIST
         AIF   (K'&CMPRID EQ 0).NOCMPR2
         SPACE 1
* COMPARE ROUTINE INPUTS:
*        - R6 AND R7 POINT TO THE TWO LIST ENTRIES TO BE COMPARED. THE
*          ENTRY POINTED TO BY R6 SEQUENTIALLY PRECEEDS THE ONE POINTED
*          TO BY R7.
*        - R14 POINTS TO A RETURN ADDRESS.
*        - R14 THROUGH R7 CONTAIN DATA CRITICAL TO THE SORT ROUTINE.
*          THEY MUST NOT BE ALTERED BY THE COMPARE ROUTINE.
         SPACE 1
* COMPARE ROUTINE OUTPUTS:
*        - CC=0 (EQUAL) MEANS THAT THE TWO LIST ENTRIES HAVE EQUAL
*          VALUES. THEY SHOULD NOT BE EXCHANGED.
*        - CC=1 (LOW) MEANS THAT THE FIRST ENTRY HAS A VALUE LOWER THAN
*          THE SECOND. IF THIS IS AN ASCENDING SORT, THEN THEY WILL NOT
*          BE EXCHANGED.
*        - CC=2 (HIGH) MEANS THAT THE FIRST ENTRY HAS A VALUE HIGHER
*          THAN THE SECOND. IF THIS IS AN ASCENDING SORT, THEN THEY
*          WILL BE EXCHANGED.
*        - CC=3 (OVERFLOW) MEANS THAT THE TWO ENTRIES WERE OUT OF ORDER
*          AND THAT THEY HAVE NOW BEEN EXCHANGED BY THE COMPARE
*          ROUTINE.
.NOCMPR2 SPACE 1
&SAVEA   SETC  '&N.SAVE'
         AIF   (K'&SVID EQ 0).GOTSAVE
&SAVEA   SETC  '&SVID'
.GOTSAVE ANOP
&N       STM   &R.14,&R.&SL,&SAVEA SAVE ALL WORK REGSITERS
         AIF   ('&CMPRID' EQ '').GOTCMPR
         AIF   ('&CMPRID' NE '0').CMPRN0
         L     &R.15,&N.CMPR       --> CALLER PROVIDED COMPARE ROUTINE
         AGO   .GOTCMPR
.CMPRN0  AIF   ('&CMPRID' NE '&CMPRID(1)').CMPRREG
         LA    &R.15,&CMPRID       --> CALLER PROVIDED COMPARE ROUTINE
         AGO   .GOTCMPR
.CMPRREG #TEST REGS=&CMPRID(1)
         AIF   (&#TESERR NE 0).CMPRROK
         AIF   (&#TESRET(1) GT 1 AND &#TESRET(1) LT 14).CMPRROK
         MNOTE 8,'ERROR - CMPRID= MAY NOT IDENTIFY REGISTER &$TESRET(1)*
               '
.CMPRROK LR    &R.15,&CMPRID(1)    --> CALLER PROVIDED COMPARE ROUTINE
.GOTCMPR LR    &R.4,&R.0           GET THE ENTRY LENGTH
         LR    &R.1,&R.0           GET ENTRY LENGTH FOR 'EX'
         BCTR  &R.1,0              GET THE ENTRY'S MACHINE LENGTH
         LR    &R.2,&R.4           GET ENTRY LENGTH
&N.DUBL  AR    &R.2,&R.2           DOUBLE IT
         C     &R.2,&SAVEA+4       GREATER THAN LIST LENGTH YET?
         BNH   &N.DUBL             NO, GO RE-DOUBLE
         SR    &R.2,&R.4           YES, GOT INITIAL INCREMENT
&N.LP1   SR    &R.2,&R.4           SUBTRACT ONE AND -
         BZ    &N.RET               (ALL DONE; GO RESTORE AND RETURN)
         SRL   &R.2,1               TRUNCATE DEVIDE BY TWO
         L     &R.5,&SAVEA+4       GET THE LENGTH OF THE LIST
         SR    &R.5,&R.2           SUBTRACT OFF THE INCREMENT
         LR    &R.3,&R.4           GET THE ENTRY LENGTH
&N.LP2   LR    &R.0,&R.4           GET THE ENTRY LENGTH AGAIN
&N.LP3   LR    &R.6,&R.3           DEVELOPE -
         A     &R.6,&SAVEA+12       THE FIRST -
         SR    &R.6,&R.0             COMPARE ADDRESS
         LA    &R.7,0(&R.2,&R.6)   DEVELOPE THE SECOND ADDRESS
         AIF   ('&CMPRID' EQ '').NOCMPR6
         BALR  &R.14,&R.15         LINK TO CALLER'S COMPARE ROUTINE
         BO    &N.NLP3             OUT OF ORDER BUT NOW EXCHANGED
         AGO   .NOCMPR7
.NOCMPR6 EX    &R.1,&N.CLC         COMPARE THE TWO ENTRIES
.NOCMPR7 AIF   ('&SEQ' EQ 'D').DESCEND
         BNH   &N.NLP2             RIGHT ORDER (ASCENDING); DON'T XCHNG
         AGO   .ASCEND
.DESCEND BNL   &N.NLP2             RIGHT ORDER (DESCENDING); DON'T XCHG
.ASCEND  EX    &R.1,&N.XC1         WRONG -
         EX    &R.1,&N.XC2          ORDER; -
         EX    &R.1,&N.XC1           EXCHANGE
&N.NLP3  BXLE  &R.0,&R.2,&N.LP3    LOOP TO SHIFT THE BUBBLE
&N.NLP2  BXLE  &R.3,&R.4,&N.LP2    ADVANCE ONE INCREMENT
         B     &N.LP1              LOOP TO DECREASE THE INCREMENT
&N.RET   LM    &R.14,&R.&SL,&SAVEA SORT DONE; RESTORE REGS
         BR    &R.14               RETURN TO CALLER
         SPACE 1
         AIF   ('&CMPRID' NE '').DATA1
&N.CLC   CLC   0(*-*,&R.6),0(&R.7) (EXECUTED)
.DATA1   ANOP
&N.XC1   XC    0(*-*,&R.6),0(&R.7) (EXECUTED)
&N.XC2   XC    0(*-*,&R.7),0(&R.6) (EXECUTED)
         AIF   ('&CMPRID' NE '0' AND '&SVID' NE '').DATA2
         SPACE 1
.DATA2   AIF   ('&CMPRID' NE '0').DATA3
&N.CMPR  DC    A(*-*)              THE POINTER TO THE COMPARE ROUTINE
*                                  MUST BE FILLED IN PRIOR TO THE FIRST
*                                  CALL TO THE SORT ROUTINE.
.DATA3   AIF   ('&SVID' NE '').DATA4
&N.SAVE  DC    &SAVESZ.A(0)        LOCAL SAVE AREA
.DATA4   MEND
./ ADD NAME=#TEST    0100-89041-89041-0921-00648-00648-00000-DYNABLD
         MACRO
&N       #TEST &DCODE=OMITTED,&MEXCL=,&NUM=OMITTED,                    *
               &PFIX=OMITTED,&REGS=,&SIZE=,&GEN=
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - MARCH 16, 1983
.*                  - COMMENTARY CHANGES
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - DECEMBER 4, 1981
.*                  - THE "SIZE=" FUNCTION HAS BEEN ENHANCED
.*                    TO INCLUDE SUPPORT FOR THE "NE"
.*                    RELATION.
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $TEST TO #TEST
.*
.* LAST CHANGE DATE - APRIL 15, 1981
.*                  - THE "NUM" FUNCTION NO LONGER ISSUES AN
.*                    ERROR MESSAGE WHEN IT ENCOUNTERS A
.*                    NON-DIGIT. IT ONLY SETS A RETURN CODE
.*                    OF 16 IN &#TESERR.
.*
.* LAST CHANGE DATE - APRIL 24, 1978
.*                    THE GEN=EBCDIC FUNCTION HAS BEEN ADDED
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - SEPTEMBER 10, 1976
.*                    THE &SIZE= OPERAND SUPPORT IS CHANGED
.*                    TO REQUIRE THREE SUB-OPERANDS WITH THE
.*                    SECOND SPECIFYING ONE OF THE RELATION
.*                    OPERATIONS: LT, LE, EQ, GE, OR GT.
.*                    NOTE, THIS IS NOT COMPATIBLE WITH THE
.*                    PREVIOUS IMPLEMENTATION.
.*
.* LAST CHANGE DATE - FEBRUARY 10, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE.  ANY QUESTIONS
.* CONCERNING IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*                                 GENERAL INFORMATION
.*   THE #TEST MACRO IS INTENDED TO BE USED AS AN INNER
.* MACRO. IT PERFORMS A NUMBER OF DIFFERENT TESTS AND
.* MANIPULATIONS WHICH ARE WHOLELY INDEPENDANT OF EACH OTHER.
.* FOR EACH OF THESE FUNCTIONS, INPUT MIGHT BE SPECIFIED
.* EITHER VIA MACRO OPERANDS OR BOTH MACRO OPERANDS AND GLOBAL
.* SYMBOLS (DEPENDING UPON THE FUNCTION). OUTPUT IS USUALLY
.* COMMUNICATED VIA THE GLOBAL SYMBOLS &#TESERR AND &#TESRET.
.*   &#TESERR IS A SCALER SETA SYMBOL WHICH IS USED IN A
.* MANNER SIMILAR TO A PROGRAM'S COMPLETION CODE TO
.* COMMUNICATE A GROSS INDICATION OF AN UNUSUAL OR ERROR
.* CONDITION. IF UPON RETURN FROM #TEST &#TESERR EQUALS ZERO,
.* THEN THE MACRO FUNCTIONED "OK"; OTHERWISE, THE VALUE OF
.* &#TESERR VARIES DIRECTLY WITH THE SERIOUSNESS OF THE
.* UNUSUAL OR ERROR CONDITION, AND IT IS ALWAYS SET TO
.* REFLECT THE MOST SERIOUS CONDITION ENCOUNTERED DURING A
.* PARTICULAR INVOCATION OF THE #TEST MACRO.
.*   &#TESRET IS A SETC ARRAY WHICH IS USED TO CONTAIN
.* RETURN VALUES FOR THOSE FUNCTIONS FOR WHICH RETURN
.* VALUES ARE APPROPIATE. EACH ELEMENT OF THE ARRAY HOLDS ONE
.* RETURN VALUE. ONLY AS MANY ELEMENTS ARE USED AS ARE
.* NEEDED. THOSE ELEMENTS USED ALWAYS START WITH ELEMENT
.* NUMBER ONE. IF TWO OR MORE TEST FUNCTIONS ARE INVOKED ON
.* A SINGLE CALL AND IF EACH OF THEM GENERATE ONE OR MORE
.* RETURN VALUES, THEN THE FIRST FUNCTION PROCESSED WILL USE
.* THE LOW ORDER ENTRIES IN &#TESRET. THE NEXT FUNCTION WILL
.* USE THE NEXT ENTRIES, ETC. THE VARIOUS TEST FUNCTIONS
.* WILL ALWAYS BE PROCESSED IN THE SAME ORDER WITH WHICH
.* THEY APPEAR BELOW.
.*
.*
.*
.* INNER MACROS USED - NONE
.*
         GBLA  &#REGVAL(255),&#TESERR
         GBLC  &#REGNME(255),&#TESRET(20)
         GBLC  &#EBCDIC(256)
         LCLA  &CTR,&RETPTR,&P,&L,&K,&A1,&A2,&RV(22)
         LCLB  &MESW
         LCLC  &RN(22),&BASE
&#TESERR SETA  0
.*
.*
.*
.*                                 THE "DCODE" FUNCTION
.*   THIS FUNCTION WAS WRITTEN BECAUSE THE MACRO LANGUAGE
.* DOES NOT SUPPORT THE DECODING OF "SUB-SUB-LIST" NOTATION.
.*   THE INPUT IS COMMUNICATED VIA THE "DCODE=" OPERAND AS A
.* CHARACTER STRING TO BE DECODED. THIS STRING MUST BE
.* EITHER NULL, UNPARENTHESIZED, OR A PARENTHESIZED LIST OF
.* ELEMENTS SEPERATED FROM EACH OTHER BY COMMAS. THE
.* ELEMENTS THEMSELVES MAY BE NULL.
.*   FOR A STRING OF N ELEMENTS, THE OUTPUT CONSISTS OF N+1
.* ENTRIES IN &#TESRET. THE FIRST ENTRY CONTAINS THE VALUE
.* N. THE REMAINING ENTRIES CONTAIN EACH OF THE ELEMENTS
.* EXTRACTED FROM THE ORIGINAL STRING. IF THE ORIGINAL
.* STRING IS NULL, THEN IT IS TREATED AS A SUB-LIST
.* CONTAINING ZERO ELEMENTS. IF THE STRING IS
.* UNPARENTHESIZED, THEN IT IS TREATED AS A SUB-LIST
.* CONTAINING A SINGLE ELEMENT - NAMELY, ITSELF.
.*   THE DCODE FUNCTION WILL NOT PROPERLY HANDLE THE
.* FOLLOWING CONDITIONS:
.*       A.) A SUB-LIST ELEMENT LONGER THAN EIGHT CHARACTERS;
.*       B.) A SUB-LIST ELEMENT THAT ITSELF CONSISTS OF A
.*           SUB-LIST;
.*       C.) A SUB-LIST CONTAINING MORE THAN NINETEEN
.*           ELEMENTS.
.*
.DCODE   AIF   ('&DCODE' EQ 'OMITTED').DCODEND
&RETPTR  SETA  &RETPTR+1
&CTR     SETA  0
         AIF   (K'&DCODE EQ 0).DCDFIN
         AIF   ('&DCODE'(1,1) EQ '(').DCDSLST
&CTR     SETA  1
&#TESRET(&RETPTR+1) SETC '&DCODE'
         AGO   .DCDFIN
.DCDSLST ANOP
&K       SETA  K'&DCODE
         AIF   ('&DCODE'(&K,1) EQ ')').DCDOK
         MNOTE 8,'"&DCODE" HAS INVALID SUBLIST SYNTAX.'
&#TESERR SETA  16
         AGO   .DCDFIN
.DCDOK   ANOP
&P       SETA  1
&L       SETA  0
.DCDLP1  ANOP
&P       SETA  &P+&L+1
&L       SETA  0-1
&CTR     SETA  &CTR+1
&#TESRET(&RETPTR+&CTR) SETC ''
.DCDLP2  ANOP
&L       SETA  &L+1
         AIF   ('&DCODE'(&P+&L,1) NE ',' AND &P+&L NE &K).DCDLP2
         AIF   (&L EQ 0).DCDLPET
&#TESRET(&RETPTR+&CTR) SETC '&DCODE'(&P,&L)
         AIF   ('&#TESRET(&RETPTR+&CTR)' EQ '&DCODE'(&P,&L)).DCDLPET
         MNOTE 8,'ERROR - THE FOLLOWING TRUNCATION HAS OCCURED:'
         MNOTE *,'        &DCODE'
         MNOTE *,'        &#TESRET(&RETPTR+&CTR)'
.DCDLPET AIF   (&P+&L NE &K).DCDLP1
.DCDFIN  ANOP
&#TESRET(&RETPTR) SETC '&CTR'
&RETPTR  SETA  &RETPTR+&CTR
.DCODEND ANOP
.*
.*
.*
.*                            THE "MEXCL" FUNCTION
.*   THIS FUNCTION CAN BE USED TO DETERMINE IF TWO OR MORE
.* MUTUALLY EXCLUSIVE OPERANDS (OR WHATEVER) HAVE BEEN
.* PASSED TO THE CALLING MACRO.
.*   THE INPUT IS COMMUNICATED VIA THE "MEXCL=" OPERAND AS A
.* SUB-LIST WITH ANY NUMBER OF ENTRIES. IF THE MEXCL
.* FUNCTION FINDS MORE THAN ONE NON-NULL ENTRY IN THE
.* SUB-LIST, THEN IT ISSUES A SEVERITY 8 ERROR MESSAGE, AND
.* IT SETS &#TESERR TO A VALUE OF 16.
.*
.MEXCL   AIF   (N'&MEXCL LT 2).MEXCEND
&CTR     SETA  0
.MELP    AIF   (&CTR EQ N'&MEXCL).MEXCEND
&CTR     SETA  &CTR+1
         AIF   (K'&MEXCL(&CTR) EQ 0).MELP
         AIF   (&MESW EQ 1).MEERR
&MESW    SETB  (1)
         AGO   .MELP
.MEERR   MNOTE 8,'ERROR - MUTUALLY EXCLUSIVE OPERANDS HAVE BEEN USED:'
         MNOTE *,'        &MEXCL'
&#TESERR SETA  16
.MEXCEND ANOP
.*
.*
.*
.*                            THE "NUM" FUNCTION
.*   THIS FUNCTION CAN BE USED TO DETERMINE WHETHER OR NOT A
.* GIVEN VALUE CONSISTS ENTIRELY OF DIGITS.
.*   THE INPUT IS COMMUNICATED VIA THE "NUM=" OPERAND. IF
.* THE NUM FUNCTION FINDS THAT ANY CHARACTER IN THE GIVEN
.* STRING IS NOT A DIGIT, THEN IT SETS &#TESERR TO A VALUE
.* OF 16.
.*
.NUM     AIF   ('&NUM' EQ 'OMITTED').NUMEND
         AIF   (K'&NUM EQ 0).NUMERR
&CTR     SETA  0
.NUMLP   AIF   (&CTR EQ K'&NUM).NUMEND
&CTR     SETA  &CTR+1
         AIF   ('&NUM'(&CTR,1) LT '0').NUMERR
         AIF   ('&NUM'(&CTR,1) LE '9').NUMLP
.NUMERR  ANOP
&#TESERR SETA  16
.NUMEND  ANOP
.*
.*
.*
.*                            THE "PFIX" FUNCTION
.*   THIS FUNCTION CAN BE USED TO DETERMINE THE VALIDITY OF
.* A GIVEN REGISTER NAME PREFIX (E.G. "R" IN "R15").
.*   THE INPUT CONSISTS OF A REGISTER NAME PREFIX
.* COMMUNICATED VIA THE "PFIX=" OPERAND AND A TABLE OF VALID
.* REGISTER NAME PREFIXES GENERATED VIA PRIOR #REGS MACROS
.* AND CONTAINED IN THE &#REGNME AND &#REGVAL GLOBAL
.* SYMBOLS. IF THE GIVEN PREFIX IS NULL, THEN A DEFAULT IS
.* USED. IF THE GIVEN PREFIX IS INVALID, THEN A SEVERITY 4
.* ERROR MESSAGE IS ISSUED AND A DEFAULT PREFIX IS USED. THE
.* DEFAULT IS EITHER THE FIRST PREFIX DEFINED VIA A PRIOR
.* #REGS MACRO OR NULL IF NO PRIOR #REGS MACRO HAS DEFINED
.* ANY PREFIXES.
.*   FOR OUTPUT, THE NEXT AVAILABLE &#TESRET ENTRY IS FILLED
.* WITH EITHER THE GIVEN PREFIX OR THE DEFAULT PREFIX.
.*
.PFIX    AIF   ('&PFIX' EQ 'OMITTED').PFIXEND
&RETPTR  SETA  &RETPTR+1
&#TESRET(&RETPTR) SETC ''
&CTR     SETA  0
.PFXLP1  AIF   (&CTR GE 255).PFXGDEF
&CTR     SETA  &CTR+1
         AIF   ('&#REGNME(&CTR)' EQ '').PFXGDEF
         AIF   (&#REGVAL(&CTR) LE 15).PFXLP1
&#TESRET(&RETPTR) SETC '&#REGNME(&CTR)'
.PFXGDEF AIF   (K'&PFIX EQ 0).PFIXEND
&CTR     SETA  &CTR-1
.PFXLP2  AIF   (&CTR GE 255).PFXERR
&CTR     SETA  &CTR+1
         AIF   ('&#REGNME(&CTR)' EQ '').PFXERR
         AIF   (&#REGVAL(&CTR) LE 15).PFXLP2
         AIF   ('&PFIX' NE '&#REGNME(&CTR)').PFXLP2
&#TESRET(&RETPTR) SETC '&PFIX'
         AGO   .PFIXEND
.PFXERR  MNOTE 4,'WARNING - "&PFIX" HAS NOT BEEN PREDEFINED.'
         MNOTE *,'          A DEFAULT VALUE WILL BE USED.'
         MNOTE *,'          CHECK YOUR USAGE OF THE #REGS'
         MNOTE *,'          MACRO.'
.PFIXEND ANOP
.*
.*
.*
.*                            THE "REGS" FUNCTION
.*   THIS FUNCTION CAN BE USED TO CONVERT A CERTAIN CLASS OF
.* REGISTER NAMES TO THEIR CORRESPONDING NUMERIC VALUES. IN
.* ORDER FOR A GIVEN NAME TO BE CONVERTED, IT MUST BE EITHER
.* A SELF-DEFINING NUMERIC OR A NAME THAT HAS BEEN DEFINED
.* VIA A PRIOR #REGS MACRO. THE PURPOSE OF THIS FUNCTION IS
.* TO PROVIDE ARITHMETICLY MANIPULATABLE REGISTER NUMBERS.
.*   THE INPUT CONSISTS OF A SUB-LIST OF REGISTER NAMES
.* COMMUNICATED VIA THE "REGS=" OPERAND AND A TABLE OF VALID
.* REGISTER NAME PREFIXES GENERATED VIA PRIOR #REGS MACROS
.* AND COMMUNICATED VIA THE &#REGNME AND &#REGVAL GLOBAL
.* SYMBOLS.
.*   FOR A SUB-LIST OF N REGISTER NAMES, THE OUTPUT CONSISTS
.* OF N ENTRIES IN &#TESRET EACH CONTAINING THE NUMBER OF
.* THE REGISTER REPRESENTED BY THE CORRESPONDING NAME FROM
.* THE INPUT SUB-LIST.
.*   IF ANY REGISTER NAME CANNOT BE PROPERLY DECODED, THEN
.* &#TESERR IS SET TO A VALUE OF 16. NO ERROR MESSAGE IS
.* ISSUED.
.*
.REGS    AIF   (N'&REGS EQ 0).REGSEND
&CTR     SETA  0
.REGLP1  AIF   (&CTR GE 16).REGLP2
&RN(&CTR+1) SETC '&CTR'
&RV(&CTR+1) SETA &CTR
&CTR     SETA  &CTR+1
         AGO   .REGLP1
.REGLP2  AIF   (&CTR GE 22).REGND2
&CTR     SETA  &CTR+1
&RN(&CTR) SETC 'ABCDEF'(&CTR-16,1)
&RV(&CTR) SETA &CTR-7
         AGO   .REGLP2
.REGND2  ANOP
&CTR     SETA  0
.REGLP3  AIF   (&CTR GE N'&REGS).REGSEND
&CTR     SETA  &CTR+1
&RETPTR  SETA  &RETPTR+1
&#TESRET(&RETPTR) SETC ''
         AIF   (K'&REGS(&CTR) EQ 0).REGLP3
&#TESRET(&RETPTR) SETC '&REGS(&CTR)'
         AIF   (T'&REGS(&CTR) NE 'N').REGLP3A
         AIF   (&REGS(&CTR) LT 0 OR &REGS(&CTR) GT 15).REGERR
         AGO   .REGLP3
.REGLP3A ANOP
&A1      SETA  0
.REGLP4  AIF   (&A1 GE 255).REGND4
&A1      SETA  &A1+1
         AIF   ('&#REGNME(&A1)' EQ '').REGND4
         AIF   (&#REGVAL(&A1) GT 15).REGPFX
         AIF   ('&REGS(&CTR)' NE '&#REGNME(&A1)').REGLP4
&#TESRET(&RETPTR) SETC '&#REGVAL(&A1)'
         AGO   .REGLP3
.REGPFX  ANOP
&A2      SETA  0
.REGLP5  AIF   (&A2 GE 22).REGLP4
&A2      SETA  &A2+1
         AIF   ('&REGS(&CTR)' NE '&#REGNME(&A1)&RN(&A2)').REGLP5
&#TESRET(&RETPTR) SETC '&RV(&A2)'
         AGO   .REGLP3
.REGND4  ANOP
&A2      SETA  0
.REGLP6  AIF   (&A2 GE 16).REGERR
&A2      SETA  &A2+1
         AIF   ('&REGS(&CTR)' NE '&RN(&A2)').REGLP6
         AGO   .REGLP3
.REGERR  ANOP
&#TESERR SETA  16
         AGO   .REGLP3
.REGSEND ANOP
.*
.*
.*
.*                            THE "SIZE" FUNCTION
.*   THIS FUNCTION WAS WRITTEN BECAUSE OF THE LIMITATION
.* THAT MACRO CODE CANNOT ARITHMETICLY MANIPULATE OPERANDS
.* CONSISTING OF EITHER EXPRESSIONS OR EQUATE SYMBOLS.
.* BECAUSE OF THIS, IN SITUATIONS WHERE A PROGRAMMER WOULD
.* NORMALLY WANT TO USE AN EXPRESSION, ETC., HE MAY INSTEAD
.* BE FORCED TO USE A SELF DEFINING NUMERIC. THE PROBLEM IS
.* THAT IF SUBSEQUENT MODIFICATIONS AFFECT THE VALUE OF SUCH
.* AN EXPRESSION, THE PROGRAMMER MIGHT FORGET TO CHANGE THE
.* SELF DEFINING NUMERIC ACCORDINGLY. THE SIZE FUNCTION CAN
.* BE USED TO ALLEVIATE THIS PROBLEM.
.*   THE INPUT IS COMMUNICATED VIA THE "SIZE=" OPERAND AND
.* IT MUST CONSIST OF A THREE ELEMENT SUB-LIST. THE FIRST
.* AND THIRD ELEMENTS MUST BE SUCH THAT THEY RESULTS IN
.* NON-RELOCATABLE VALUES WHEN ASSEMBLED. THE SECOND OPERAND
.* MUST BE ONE OF THE FOLLOWING RELATIONAL OPERATORS:
.*       LT, LE, EQ, GE, GT, NE
.* MEANING "LESS THAN", "LESS THAN OR EQUAL", "EQUAL",
.* "GREATER THAN OR EQUAL", "GREATER THAN", AND "NOT EQUAL"
.* RESPECTIVELY.
.*   THE OUTPUT CONSISTS OF A GENERATED STATEMENT WHICH
.* PRODUCES NO OBJECT CODE BUT WHICH CAUSES AN ERROR
.* WHENEVER THE TWO GIVEN ELEMENTS VIOLATE THE INDICATED
.* RELATION.
.*
.SIZE    AIF   (N'&SIZE EQ 0).SIZEEND
         AIF   ('&SIZE(2)' EQ 'EQ' OR '&SIZE(2)' EQ 'GE' OR '&SIZE(2)' *
               EQ 'LE' OR '&SIZE(2)' EQ 'GT' OR '&SIZE(2)' EQ 'LT' OR '*
               &SIZE(2)' EQ 'NE').OPOK
         MNOTE 8,'ERROR - "&SIZE(2)" NOT A VALID RELATIONAL OPERATOR'
&#TESERR SETA  16
         AGO   .SIZEEND
.OPOK    AIF   ('&SIZE(2)' NE 'EQ').OPNTEQ
         DC    0YL2(X'7FFF'-(&SIZE(1))+&SIZE(3),X'7FFF'-(&SIZE(3))+&SIZ*
               E(1))
         AGO   .SIZEEND
.OPNTEQ  AIF   ('&SIZE(2)' NE 'NE').OPNTNE
         DC    0YL2(X'8000'-(&SIZE(3)-(&SIZE(1)))/(&SIZE(3)-(&SIZE(1)))*
               )
         AGO   .SIZEEND
.OPNTNE  ANOP
&BASE    SETC  '7FFF'
         AIF   ('&SIZE(2)'(2,1) EQ 'E').NOPLUS1
&BASE    SETC  '8000'
.NOPLUS1 AIF   ('&SIZE(2)'(1,1) EQ 'G').OPG
         DC    0YL2(X'&BASE'-(&SIZE(3))+&SIZE(1))
         AGO   .SIZEEND
.OPG     ANOP
         DC    0YL2(X'&BASE'-(&SIZE(1))+&SIZE(3))
.SIZEEND ANOP
.*
.*
.*
.*                                 THE "GEN" FUNCTION
.*    THIS FUNCTION CAN BE USED TO GENERATE VARIOUS SPECIFIC
.* OBJECTS. CURRENTLY, THE SUPPORTED OBJECTS ARE:
.*       EBCDIC - A GLOBAL TABLE CONTAINING THE ENTIRE
.*                256-ENTRY EBCDIC CHARACTER SET SUCH THAT
.*                THE VALUE OF THE ITH ENTRY IS I-1.
.*
.GEN     AIF   (N'&GEN EQ 0).GENEND
&A1      SETA  0
.GENLP   AIF   (&A1 EQ N'&GEN).GENEND
&A1      SETA  &A1+1
         AIF   ('&GEN(&A1)' EQ '').GENLP
         AIF   ('&GEN(&A1)' NE 'EBCDIC').GNTEBCD
         AIF   ('&#EBCDIC(194)' EQ 'A').GENLP
&#EBCDIC(001) SETC ' '
&#EBCDIC(002) SETC ' '
&#EBCDIC(003) SETC ' '
&#EBCDIC(004) SETC ' '
&#EBCDIC(005) SETC ' '
&#EBCDIC(006) SETC ' '
&#EBCDIC(007) SETC ' '
&#EBCDIC(008) SETC ' '
&#EBCDIC(009) SETC ' '
&#EBCDIC(010) SETC ' '
&#EBCDIC(011) SETC ' '
&#EBCDIC(012) SETC ' '
&#EBCDIC(013) SETC ' '
&#EBCDIC(014) SETC ' '
&#EBCDIC(015) SETC ' '
&#EBCDIC(016) SETC ' '
&#EBCDIC(017) SETC ' '
&#EBCDIC(018) SETC ' '
&#EBCDIC(019) SETC ' '
&#EBCDIC(020) SETC ' '
&#EBCDIC(021) SETC ' '
&#EBCDIC(022) SETC ' '
&#EBCDIC(023) SETC ' '
&#EBCDIC(024) SETC ' '
&#EBCDIC(025) SETC ' '
&#EBCDIC(026) SETC ' '
&#EBCDIC(027) SETC ' '
&#EBCDIC(028) SETC ' '
&#EBCDIC(029) SETC ' '
&#EBCDIC(030) SETC ' '
&#EBCDIC(031) SETC ' '
&#EBCDIC(032) SETC ' '
&#EBCDIC(033) SETC ' '
&#EBCDIC(034) SETC ' '
&#EBCDIC(035) SETC ' '
&#EBCDIC(036) SETC ' '
&#EBCDIC(037) SETC ' '
&#EBCDIC(038) SETC ' '
&#EBCDIC(039) SETC ' '
&#EBCDIC(040) SETC ' '
&#EBCDIC(041) SETC ' '
&#EBCDIC(042) SETC ' '
&#EBCDIC(043) SETC ' '
&#EBCDIC(044) SETC ' '
&#EBCDIC(045) SETC ' '
&#EBCDIC(046) SETC ' '
&#EBCDIC(047) SETC ' '
&#EBCDIC(048) SETC ' '
&#EBCDIC(049) SETC ' '
&#EBCDIC(050) SETC ' '
&#EBCDIC(051) SETC ' '
&#EBCDIC(052) SETC ' '
&#EBCDIC(053) SETC ' '
&#EBCDIC(054) SETC ' '
&#EBCDIC(055) SETC ' '
&#EBCDIC(056) SETC ' '
&#EBCDIC(057) SETC ' '
&#EBCDIC(058) SETC ' '
&#EBCDIC(059) SETC ' '
&#EBCDIC(060) SETC ' '
&#EBCDIC(061) SETC ' '
&#EBCDIC(062) SETC ' '
&#EBCDIC(063) SETC ' '
&#EBCDIC(064) SETC ' '
&#EBCDIC(065) SETC ' '
&#EBCDIC(066) SETC ' '
&#EBCDIC(067) SETC ' '
&#EBCDIC(068) SETC ' '
&#EBCDIC(069) SETC ' '
&#EBCDIC(070) SETC ' '
&#EBCDIC(071) SETC ' '
&#EBCDIC(072) SETC ' '
&#EBCDIC(073) SETC ' '
&#EBCDIC(074) SETC ' '
&#EBCDIC(075) SETC '['
&#EBCDIC(076) SETC '.'
&#EBCDIC(077) SETC '<'
&#EBCDIC(078) SETC '('
&#EBCDIC(079) SETC '+'
&#EBCDIC(080) SETC '|'
&#EBCDIC(081) SETC '&&'
&#EBCDIC(082) SETC ' '
&#EBCDIC(083) SETC ' '
&#EBCDIC(084) SETC ' '
&#EBCDIC(085) SETC ' '
&#EBCDIC(086) SETC ' '
&#EBCDIC(087) SETC ' '
&#EBCDIC(088) SETC ' '
&#EBCDIC(089) SETC ' '
&#EBCDIC(090) SETC ' '
&#EBCDIC(091) SETC '!'
&#EBCDIC(092) SETC '$'
&#EBCDIC(093) SETC '*'
&#EBCDIC(094) SETC ')'
&#EBCDIC(095) SETC ';'
&#EBCDIC(096) SETC ' '
&#EBCDIC(097) SETC '-'
&#EBCDIC(098) SETC '/'
&#EBCDIC(099) SETC ' '
&#EBCDIC(100) SETC ' '
&#EBCDIC(101) SETC ' '
&#EBCDIC(102) SETC ' '
&#EBCDIC(103) SETC ' '
&#EBCDIC(104) SETC ' '
&#EBCDIC(105) SETC ' '
&#EBCDIC(106) SETC ' '
&#EBCDIC(107) SETC '|'
&#EBCDIC(108) SETC ','
&#EBCDIC(109) SETC '%'
&#EBCDIC(110) SETC '_'
&#EBCDIC(111) SETC '>'
&#EBCDIC(112) SETC '?'
&#EBCDIC(113) SETC ' '
&#EBCDIC(114) SETC ' '
&#EBCDIC(115) SETC ' '
&#EBCDIC(116) SETC ' '
&#EBCDIC(117) SETC ' '
&#EBCDIC(118) SETC ' '
&#EBCDIC(119) SETC ' '
&#EBCDIC(120) SETC ' '
&#EBCDIC(121) SETC ' '
&#EBCDIC(122) SETC ' '
&#EBCDIC(123) SETC ':'
&#EBCDIC(124) SETC '#'
&#EBCDIC(125) SETC '@'
&#EBCDIC(126) SETC ''''''
&#EBCDIC(127) SETC '='
&#EBCDIC(128) SETC '"'
&#EBCDIC(129) SETC ' '
&#EBCDIC(130) SETC 'a'
&#EBCDIC(131) SETC 'b'
&#EBCDIC(132) SETC 'c'
&#EBCDIC(133) SETC 'd'
&#EBCDIC(134) SETC 'e'
&#EBCDIC(135) SETC 'f'
&#EBCDIC(136) SETC 'g'
&#EBCDIC(137) SETC 'h'
&#EBCDIC(138) SETC 'i'
&#EBCDIC(139) SETC ' '
&#EBCDIC(140) SETC ' '
&#EBCDIC(141) SETC ' '
&#EBCDIC(142) SETC ' '
&#EBCDIC(143) SETC ' '
&#EBCDIC(144) SETC ' '
&#EBCDIC(145) SETC ' '
&#EBCDIC(146) SETC 'j'
&#EBCDIC(147) SETC 'k'
&#EBCDIC(148) SETC 'l'
&#EBCDIC(149) SETC 'm'
&#EBCDIC(150) SETC 'n'
&#EBCDIC(151) SETC 'o'
&#EBCDIC(152) SETC 'p'
&#EBCDIC(153) SETC 'q'
&#EBCDIC(154) SETC 'r'
&#EBCDIC(155) SETC ' '
&#EBCDIC(156) SETC ' '
&#EBCDIC(157) SETC ' '
&#EBCDIC(158) SETC ' '
&#EBCDIC(159) SETC ' '
&#EBCDIC(160) SETC ' '
&#EBCDIC(161) SETC ' '
&#EBCDIC(162) SETC '~'
&#EBCDIC(163) SETC 's'
&#EBCDIC(164) SETC 't'
&#EBCDIC(165) SETC 'u'
&#EBCDIC(166) SETC 'v'
&#EBCDIC(167) SETC 'w'
&#EBCDIC(168) SETC 'x'
&#EBCDIC(169) SETC 'y'
&#EBCDIC(170) SETC 'z'
&#EBCDIC(171) SETC ' '
&#EBCDIC(172) SETC ' '
&#EBCDIC(173) SETC ' '
&#EBCDIC(174) SETC ' '
&#EBCDIC(175) SETC ' '
&#EBCDIC(176) SETC ' '
&#EBCDIC(177) SETC '^'
&#EBCDIC(178) SETC ' '
&#EBCDIC(179) SETC ' '
&#EBCDIC(180) SETC ' '
&#EBCDIC(181) SETC ' '
&#EBCDIC(182) SETC ' '
&#EBCDIC(183) SETC ' '
&#EBCDIC(184) SETC ' '
&#EBCDIC(185) SETC ' '
&#EBCDIC(186) SETC ' '
&#EBCDIC(187) SETC '['
&#EBCDIC(188) SETC ']'
&#EBCDIC(189) SETC ' '
&#EBCDIC(190) SETC ' '
&#EBCDIC(191) SETC ' '
&#EBCDIC(192) SETC ' '
&#EBCDIC(193) SETC '{'
&#EBCDIC(194) SETC 'A'
&#EBCDIC(195) SETC 'B'
&#EBCDIC(196) SETC 'C'
&#EBCDIC(197) SETC 'D'
&#EBCDIC(198) SETC 'E'
&#EBCDIC(199) SETC 'F'
&#EBCDIC(200) SETC 'G'
&#EBCDIC(201) SETC 'H'
&#EBCDIC(202) SETC 'I'
&#EBCDIC(203) SETC ' '
&#EBCDIC(204) SETC ' '
&#EBCDIC(205) SETC ' '
&#EBCDIC(206) SETC ' '
&#EBCDIC(207) SETC ' '
&#EBCDIC(208) SETC ' '
&#EBCDIC(209) SETC '}'
&#EBCDIC(210) SETC 'J'
&#EBCDIC(211) SETC 'K'
&#EBCDIC(212) SETC 'L'
&#EBCDIC(213) SETC 'M'
&#EBCDIC(214) SETC 'N'
&#EBCDIC(215) SETC 'O'
&#EBCDIC(216) SETC 'P'
&#EBCDIC(217) SETC 'Q'
&#EBCDIC(218) SETC 'R'
&#EBCDIC(219) SETC ' '
&#EBCDIC(220) SETC ' '
&#EBCDIC(221) SETC ' '
&#EBCDIC(222) SETC ' '
&#EBCDIC(223) SETC ' '
&#EBCDIC(224) SETC ' '
&#EBCDIC(225) SETC '\'
&#EBCDIC(226) SETC ''
&#EBCDIC(227) SETC 'S'
&#EBCDIC(228) SETC 'T'
&#EBCDIC(229) SETC 'U'
&#EBCDIC(230) SETC 'V'
&#EBCDIC(231) SETC 'W'
&#EBCDIC(232) SETC 'X'
&#EBCDIC(233) SETC 'Y'
&#EBCDIC(234) SETC 'Z'
&#EBCDIC(235) SETC ' '
&#EBCDIC(236) SETC ' '
&#EBCDIC(237) SETC ' '
&#EBCDIC(238) SETC ' '
&#EBCDIC(239) SETC ' '
&#EBCDIC(240) SETC ' '
&#EBCDIC(241) SETC '0'
&#EBCDIC(242) SETC '1'
&#EBCDIC(243) SETC '2'
&#EBCDIC(244) SETC '3'
&#EBCDIC(245) SETC '4'
&#EBCDIC(246) SETC '5'
&#EBCDIC(247) SETC '6'
&#EBCDIC(248) SETC '7'
&#EBCDIC(249) SETC '8'
&#EBCDIC(250) SETC '9'
&#EBCDIC(251) SETC ' '
&#EBCDIC(252) SETC ' '
&#EBCDIC(253) SETC ' '
&#EBCDIC(254) SETC ' '
&#EBCDIC(255) SETC ' '
&#EBCDIC(256) SETC ' '
         AGO   .GENLP
.GNTEBCD MNOTE 8,'ERROR - &&GEN(&A1)=&GEN(&A1) IS UNRECOGNIZED'
         AGO   .GENLP
.GENEND  ANOP
.*
.*
.*
.END     MEND
./ ADD NAME=#UNALIGN 0100-89041-89041-0921-00089-00089-00000-DYNABLD
         MACRO
&NME     #UNALIGN &OP,&A1,&A2,&A3
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $UNALIGN TO #UNALIGN.
.*
.* LAST CHANGE DATE - FEBRUARY 19, 1978
.*                  - ADD SUPPORT FOR THE 'LM' AND 'STM' INSTRUCTIONS
.*
.* LAST CHANGE DATE - JANUARY 15, 1978
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
         LCLA  &W1
         LCLC  &N(30),&O(30)
&N(1)    SETC  'A'
&N(2)    SETC  'C'
&N(3)    SETC  'D'
&N(4)    SETC  'L'
&N(5)    SETC  'M'
&N(6)    SETC  'N'
&N(7)    SETC  'O'
&N(8)    SETC  'S'
&N(9)    SETC  'X'
&N(10)   SETC  'AH'
&N(11)   SETC  'AL'
&N(12)   SETC  'CH'
&N(13)   SETC  'CL'
&N(14)   SETC  'LH'
&N(15)   SETC  'LM'
&N(16)   SETC  'MH'
&N(17)   SETC  'SH'
&N(18)   SETC  'SL'
&N(19)   SETC  'ST'
&N(20)   SETC  'CVB'
&N(21)   SETC  'CVD'
&N(22)   SETC  'STH'
&N(23)   SETC  'STM'
&N(24)   SETC  '        '
&O(1)    SETC  '5A'
&O(2)    SETC  '59'
&O(3)    SETC  '5D'
&O(4)    SETC  '58'
&O(5)    SETC  '5C'
&O(6)    SETC  '54'
&O(7)    SETC  '56'
&O(8)    SETC  '5B'
&O(9)    SETC  '57'
&O(10)   SETC  '4A'
&O(11)   SETC  '5E'
&O(12)   SETC  '49'
&O(13)   SETC  '55'
&O(14)   SETC  '48'
&O(15)   SETC  '98'
&O(16)   SETC  '4C'
&O(17)   SETC  '4B'
&O(18)   SETC  '5F'
&O(19)   SETC  '50'
&O(20)   SETC  '4F'
&O(21)   SETC  '4E'
&O(22)   SETC  '40'
&O(23)   SETC  '90'
&O(24)   SETC  ''
&W1      SETA  0
.LP1     ANOP
&W1      SETA  &W1+1
         AIF   ('&N(&W1)' LT '&OP').LP1
         AIF   ('&N(&W1)' EQ '&OP').END1
&W1      SETA  24
.END1    AIF   ('&O(&W1)' GE '80').RS
&NME     LA    &A1,&A2
         AGO   .COMMON
.RS      ANOP
&NME     ICM   &A1,&A2,&A3
.COMMON  ANOP
         ORG   *-4
         DC    X'&O(&W1)'
         ORG   *+3
         MEND
./ ADD NAME=#USING   0100-89041-89041-0921-00042-00042-00000-DYNABLD
         MACRO
         #USING &D
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $USING TO #USING.
.*
.* LAST CHANGE DATE - FEBRUARY 2, 1977
.*                  - MAILING ADDRESS CHANGE.
.*
.* LAST CHANGE DATE - AUGUST 23, 1976
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*
.*   THIS MACRO GENERATES A USING INSTRUCTION THAT REDECLARES ALL BASES
.* (IF ANY) DECLARED BY A PRIOR #ENTER MACRO EXPANSION.
.*
.*
.*
.* INNER MACROS USED - NONE
.*
         GBLC  &#BS(14)
         LCLA  &A1,&DISPL
         AIF   ('&#BS(14)' EQ '').END
&DISPL   SETA  &DISPL-4095
&A1      SETA  14
.LP      AIF   (&A1 EQ 2).END
&A1      SETA  &A1-1
         AIF   ('&#BS(&A1)' EQ '').LP
&DISPL   SETA  &DISPL+4095
         USING &#BS(14)+&DISPL,&#BS(&A1)
         AGO   .LP
.END     MEND
./ ADD NAME=#XXC     0100-89041-89041-0921-00433-00433-00000-DYNABLD
         MACRO
&NAME    #XXC  &OP,&T,&F,&L,&SVID=,&PFIX=,&MF=INLINE
.*
.*
.*
.* LAST CHANGE DATE - OCTOBER 18, 1983
.*                  - MAILING ADDRESS CHANGE
.*
.* LAST CHANGE DATE - MARCH 8, 1982
.*                  - THE LENGTH VERIFICATION TEST ("#TEST SIZE=...")
.*                    HAS BEEN REMOVED. IT IS NOT REALLY NEEDED.
.*
.* LAST CHANGE DATE - DECEMBER 1, 1981
.*                  - "PFIX=(...,NOSAVE)" SUPPORT HAS BEEN ADDED. THIS
.*                    PROVIDES A MEANS OF BYPASSING THE ISSUENCE OF THE
.*                    #REGS MACRO. (SOMETIMES, THE #REGS MACRO THAT I
.*                    WOULD GET IS NOT THE ONE I WANT).
.*
.* LAST CHANGE DATE - JUNE 1, 1981
.*                  - BUG FIXED. NOW, IF MF=SUBROUTINE AND
.*                    OP=TRT, THEN R1 IS NOT RESTORED WHEN
.*                    THE SUBROUTINE COMPLETES.
.*
.* LAST CHANGE DATE - APRIL 21, 1981
.*                  - MACRO NAME CHANGED FROM $XXC TO #XXC.
.*
.* LAST CHANGE DATE - APRIL 20, 1981
.*                  - "#REGS GEN=NO" SUPPORT ADDED.
.*
.* LAST CHANGE DATE - DECEMBER 12, 1977
.*                  - SYNTAX BUG FIXED. A CONTINUATION CHARACTER WAS
.*                    NOT PLACE IN COLUMN 72.
.*
.* LAST CHANGE DATE - JANUARY 17, 1977
.*                  - FORM OF &MF= OPERAND REDESIGNED.
.*                  - DEFAULT MEANINGS OF &T AND &F AND (FOR
.*                    MF=SUBROUTINE) &L REMOVED.
.*                  - REGISTER FORM OF &SVID= SUPPORTED.
.*                  - COMMENTARY REWRITTEN.
.*                  - MAILING ADDRESS CHANGED.
.*
.* LAST CHANGE DATE - SEPTEMBER 27, 1976
.*                  - FIXED BUG: MISSING SEQUENCE SYMBOL - .TLR
.*                  - CHANGED LENGTH SIZE TEST TO BE GENERATED WHENEVER
.*                    &L(2) WAS GIVEN WITH THE NON-ROUTINE/SUBROUTINE
.*                    FORM OF THE MACRO CALL.
.*                  - IF THE CALL IS A KNOWN LENGTH FORM AND IF THE
.*                    LENGTH'S DERIVATIVE EXPRESSION IS GIVEN (&L(2))
.*                    THEN IT IS USED TO DERIVE THE LENGTH FIELD OF THE
.*                    LAST SS INSTRUCTION GENERATED.
.*
.* LAST CHANGE DATE - JUNE 6, 1975
.*
.* THIS MACRO WAS WRITTEN BY DAVID B. COLE. ANY QUESTIONS CONCERNING
.* IT MAY BE ADDRESSED TO:
.*       RR#2 BOX 712
.*       AFTON, VA. 22920
.*
.*
.*    THIS MACRO GENERATES ROUTINES TO PERFORM NON-DECIMAL
.* STORAGE-TO-STORAGE FUNCTIONS ON OPERANDS OF ARBITRARY LENGTH.
.* SUPPORTED "SS-FUNCTIONS" ARE:
.*       CLC      MVZ      TR
.*       MVC      NC       TRT
.*       MVN      OC       XC
.*
.*    THIS MACRO HAS TWO DIFFERENT MODES OF EXPANSION:
.*     - IF THE OPERAND LENGTHS ARE KNOWN AT ASSEMBLY TIME, THEN THE
.*       EXPANSION CAN CONSIST OF A SUFFICIENT NUMBER OF
.*       SS-INSTRUCTIONS TO ACCOMODATE THE GIVEN LENGTH. FOR EACH
.*       SUCCESSIVE SS-INSTRUCTION GENERATED, THE SINK OPERAND POINTER
.*       IS INCREMENTED BY 256. THE SOURCE OPERAND POINTER IS ALSO
.*       INCREMENTED BY 256 UNLESS THE OPERATOR IS EITHER "TR" OR
.*       "TRT". ADDITIONALLY FOR "CLC" AND "TRT", CONDITIONAL BRANCH
.*       INSTRUCTIONS ARE INSERTED IN THE EXPANSION SO THAT UPON THE
.*       FIRST OCCURANCE OF A NOT-EQUAL CONDITION THE REMAINING
.*       SS-INSTRUCTIONS ARE BYPASSED.
.*     - IF THE OPERAND LENGTHS CANNOT BE KNOWN UNTIL EXECUTION TIME,
.*       THEN THE EXPANSION IS A GENERALIZED SUBROUTINE CAPABLE OF
.*       PROCESSING ANY LENGTH.
.*
.* &NAME
.*       THIS OPERAND IS OPTIONAL. IF GIVEN, THEN, OF COURSE, IT LABELS
.*       THE GENERATED CODE.
.*
.* &MF=
.*       THIS OPERAND IS OPTIONAL. IF OMITTED, THEN MF=INLINE IS
.*       ASSUMED. &MF= CONTROLS THE OVERALL FORM OF THE MACRO
.*       EXPANSION. &MF= MAY BE GIVEN IN THE FOLLOWING FORMS:
.*       -OMITTED-
.*       MF=
.*       MF=INLINE
.*             THE SINK OPERAND LENGTH IS KNOWN AT ASSEMBLY TIME. THE
.*             MACRO EXPANDS INTO A SUFFICIENT REPETITION OF
.*             SS-INSTRUCTIONS TO PERFORM THE FUNCTION.
.*       MF=(SUBROUTINE, --- )
.*             THE SINK OPERAND LENGTH CANNOT BE KNOWN UNTIL ASSEMBLY
.*             TIME. THE MACRO EXPANDS INTO A GENERALIZED SUBROUTINE
.*             CAPABLE OF PERFORMING THE REQUIRED SS-FUNCTION ON
.*             OPERANDS OF ARBITRARY LENGTH.
.*       MF=SUBROUTINE
.*       MF=(SUBROUTINE,(14))
.*             WHEN THE SS-FUNCTION SUBROUTINE COMPLETES, A RETURN IS
.*             MADE TO THE ADDRESS POINTED TO BY REGISTER-14.
.*       MF=(SUBROUTINE,(-X-))
.*             -X- MUST BE AN ABSOLUTE EXPRESSION REPRESENTING THE NAME
.*             OF A REGISTER CONTAINING A RETURN ADDRESS.
.*       MF=(SUBROUTINE,-X-)
.*             -X- MUST BE AN ABSOLUTE OR RELOCATABLE EXPRESSION
.*             REPRESENTING A FIXED RETURN ADDRESS.
.*       MF=(SUBROUTINE,*)
.*             WHEN THE SS-FUNCTION SUBROUTINE COMPLETES, IT FALLS
.*             THROUGH TO CODE FOLLOWING THE MACRO EXPANSION.
.*
.* &OP
.*       THIS OPERAND IS REQUIRED. IT IDENTIFIES THE SS-FUNCTION TO BE
.*       PERFORMED. IF SHOULD BE EITHER:
.*          CLC      MVZ      TR
.*          MVC      NC       TRT
.*          MVN      OC       XC
.*       IF IT IS ANYTHING ELSE, THEN A SEVERITY-4 DIAGNOSTIC IS ISSUED
.*       BEFORE THE EXPANSION IS ATTEMPTED.
.*
.* &T
.*       THIS OPERAND IS REQUIRED. IT IDENTIFIES THE LOCATION OF THE
.*       SINK OPERAND. IT MAY BE EITHER AN ADDRESS, A REGISTER, OR A
.*       BASE/DISPLACEMENT COMBINATION AS FOLLOWS:
.*       -X- (ADDRESS FORM): -X- MAY BE EITHER AN ABSOLUTE OR
.*           RELOCATABLE EXPRESSION IDENTIFYING THE LOCATION OF THE
.*           SINK OPERAND.
.*       (-X-) (REGISTER FORM): -X- MUST BE AN ABSOLUTE EXPRESSION
.*             REPRESENTING THE NAME OF A REGISTER CONTAINING THE
.*             ADDRESS OF THE SINK OPERAND.
.*       (-X-,-Y-) (BASE/DISPLACEMENT FORM): -X- MUST BE AN ABSOLUTE
.*                 EXPRESSION REPRESENTING A DISPLACEMENT. -Y- MUST BE
.*                 AN ABSOLUTE EXPRESSION REPRESENTING A BASE (REGISTER
.*                 NAME). TOGETHER THE BASE AND DISPLACEMENT GIVE THE
.*                 ADDRESS OF THE SINK OPERAND.
.*
.* &F
.*       THIS OPERAND IS REQUIRED. IT IDENTIFIES THE LOCATION OF THE
.*       SOURCE OPERAND. IT MAY BE EITHER AN ADDRESS, A REGISTER, OR A
.*       BASE/DISPLACEMENT COMBINATION AS FOLLOWS:
.*       -X- (ADDRESS FORM): -X- MAY BE EITHER AN ABSOLUTE OR
.*           RELOCATABLE EXPRESSION IDENTIFYING THE LOCATION OF THE
.*           SOURCE OPERAND.
.*       (-X-) (REGISTER FORM): -X- MUST BE AN ABSOLUTE EXPRESSION
.*             REPRESENTING THE NAME OF A REGISTER CONTAINING THE
.*             ADDRESS OF THE SOURCE OPERAND.
.*       (-X-,-Y-) (BASE/DISPLACEMENT FORM): -X- MUST BE AN ABSOLUTE
.*                 EXPRESSION REPRESENTING A DISPLACEMENT. -Y- MUST BE
.*                 AN ABSOLUTE EXPRESSION REPRESENTING A BASE (REGISTER
.*                 NAME). TOGETHER THE BASE AND DISPLACEMENT GIVE THE
.*                 ADDRESS OF THE SOURCE OPERAND.
.*
.* &L
.*       THIS OPERAND RELATES TO THE LENGTH OF THE SINK (AND,
.*       THEREFORE, THE SOURCE) OPERAND. ITS PRECISE MEANING, HOWEVER,
.*       DIFFERS DEPENDING UPON THE VALUE OF THE &MF= OPERAND.
.*
.* &L    (MF ==> INLINE)
.*       HERE, &L IS AN OPTIONAL OPERAND REPRESENTING THE ACTUAL LENGTH
.*       OF THE SINK OPERAND. IT MAY BE GIVEN IN THE FOLLOWING FORMS:
.*       -OMITTED-: THE MACRO ATTEMPTS TO USE THE IMPLIED LENGTH OF THE
.*                  SINK OPERAND. IF THE IMPLIED LENGTH CAN BE KNOWN AT
.*                  MACRO PASS TIME, THEN IT IS USED TO CONTROL THE
.*                  NUMBER OF SS-INSTRUCTIONS GENERATED; OTHERWISE,
.*                  ONLY ONE SS-INSTRUCTION IS GENERATED.
.*       -X-: -X- MUST BE A SELF-DEFINING TERM (I.E. RESOLVABLE AT
.*            MACRO PASS TIME) REPRESENTING THE LENGTH OF THE SINK
.*            OPERAND. IT IS USED TO CONTROL THE NUMBER OF
.*            SS-INSTRUCTIONS GENERATED.
.*       (-X-,-Y-): -X- MUST BE AS ABOVE. -Y- MUST BE A ABSOLUTE
.*                  EXPRESSION (I.E. RESOLVABLE BY FINAL-PASS TIME)
.*                  ALSO REPRESENTING THE LENGTH OF THE SINK OPERAND.
.*                  IN OTHER WORDS, -X- AND -Y- MUST REPRESENT THE SAME
.*                  VALUE. THE DISTINCTION IS THAT -Y- CAN BE
.*                  RESPONSIVE TO SUCH THINGS AS LENGTH ATTRIBUTES AND
.*                  EQUATE VALUES WHEREAS -X- CANNOT. -Y- IS NOT USED
.*                  TO CONTROL THE MACRO EXPANSION. INSTEAD, IT IS USED
.*                  AS A VALIDITY CHECK ON -X-. WHEN -Y- IS GIVEN, A
.*                  STATEMENT OF THE FORM:
.*                        DC    0Y(X'7FFF'-(X-Y),X'7FFF'-(Y-X))
.*                  IS GENERATED. THIS STATEMENT DOES NOT CREATE ANY
.*                  OBJECT CODE, BUT IF -X- AND -Y- HAVE UNEQUAL
.*                  VALUES, THEN IT DOES GENERATE AN ASSEMBLY ERROR.
.*
.* &L    (&MF ==> SUBROUTINE)
.*       HERE, &L IS A REQUIRED OPERAND. IT REPRESENTS THE LOCATION OF
.*       THE LENGTH OF THE SINK OPERAND. IT MAY BE GIVEN IN THE
.*       FOLLOWING FORMS:
.*       -X- (ADDRESS FORM): -X- MUST BE EITHER AN ABSOLUTE OR
.*           RELOCATABLE EXPRESSION REPRESENTING THE ADDRESS OF A
.*           FULLWORD CONTAINING THE LENGTH OF THE SINK OPERAND.
.*       (-X-) (REGISTER FORM): -X- MUST BE AN ABSOLUTE EXPRESSION
.*             REPRESENTING THE NAME OF A REGISTER CONTAINING THE
.*             LENGTH OF THE SINK OPERAND.
.*
.* &SVID=
.*       THIS OPERAND IS OPTIONAL. IT IDENTIFIES THE LOCATION OF A
.*       4-WORD REGISTER SAVE AREA FOR USE BY THE SUBROUTINE FORM OF
.*       THE MACRO EXPANSION. (FOR THE INLINE FORM OF THE EXPANSION,
.*       THE &SVID= OPERAND IS IGNORED.) &SVID= MAY BE GIVEN IN THE
.*       FOLLOWING FORMS:
.*       -OMITTED-: A 4-WORD SAVE AREA IS INCLUDED IN THE EXPANSION
.*       SVID=-X- (ADDRESS FORM): -X- MUST BE EITHER AN ABSOLUTE OR
.*             RELOCATABLE EXPRESSION REPRESENTING THE ADDRESS OF A
.*             4-WORD SAVE AREA.
.*       SVID=(-X-) (REGISTER FORM): -X- MUST BE AN ABSOLUTE EXPRESSION
.*             REPRESENTING THE NAME OF A REGISTER CONTAINING THE
.*             ADDRESS OF A 4-WORD REGISTER SAVE AREA. WARNING, THE
.*             REGISTER CANNOT BE EITHER 14, 15, 0, OR 1.
.*
.* &PFIX=
.*       THE #XXC MACRO ATTEMPTS TO USE REGISTER EQUATES IN ITS
.*       EXPANSION WHEN REFERING TO REGISTERS. THIS IS SO THAT THE USE
.*       OF THE REGISTERS IS INDICATED IN THE ASSEMBLER'S CROSS
.*       REFERENCE LISTING. THE PFIX= OPERAND CAN BE USED TO CONTROL
.*       THE SET OF EQUATES USED. FOR EXAMPLE, IF "PFIX=GPR" IS GIVEN,
.*       THEN "GPR1" IS USED WHENEVER THE EXPANSION REFERS FO REGISTER
.*       1.
.*          IF THE PFIX= OPERAND IS OMITTED, THEN THE SET OF REGISTER
.*       EQUATES DEFINED BY THE NEXT PRIOR #REGS MACRO IS USED. IF
.*       THERE ARE NO PRIOR #REGS MACROS, THEN SELF-DEFINING NUMERICS
.*       ARE USED.
.*
.* &PFIX=(...,NOSAVE)
.*       THIS PREVENTS THIS MACRO FROM INVOKING THE #REGS MACRO.
.*
.*
.*
.*
.* INNER MACROS USED - #REGS #TEST
.*
         GBLA  &#TESERR
         GBLC  &#TESRET(20)
         LCLA  &TDI,&TRI,&TR
         LCLA  &FDI,&FRI,&FR
         LCLA  &A,&D1,&RE
         LCLB  &LOADR1
         LCLC  &TZ,&TC,&TLP,&TRP
         LCLC  &FZ,&FC,&FLP,&FRP
         LCLC  &#,&C,&CD1,&CD2,&N,&@,&SAVEA
&#       SETC  '&SYSNDX'
&N       SETC  '&NAME'
         AIF   ('&OP' EQ 'CLC' OR '&OP' EQ 'MVC' OR '&OP' EQ 'MVN' OR '*
               &OP' EQ 'MVZ' OR '&OP' EQ 'NC' OR '&OP' EQ 'OC' OR '&OP'*
                EQ 'TR' OR '&OP' EQ 'TRT' OR '&OP' EQ 'XC').OPCOK
         MNOTE 4,'WARNING - THE OPCODE IS "&OP".'
         MNOTE 4,'THIS EXPANSION WILL PROBABLY NOT BE USEFULL.'
.OPCOK   ANOP
&TDI     SETA  1
&TRI     SETA  2
         AIF   (N'&T GT 1).TREG
         AIF   ('&T' EQ '&T(1)').TDCODED
&TDI     SETA  2
&TRI     SETA  1
&TZ      SETC  '0'
.TREG    ANOP
&TC      SETC  ','
&TLP     SETC  '('
&TRP     SETC  ')'
.TDCODED ANOP
&FDI     SETA  1
&FRI     SETA  2
         AIF   (N'&F GT 1).FREG
         AIF   ('&F' EQ '&F(1)').FDCODED
&FDI     SETA  2
&FRI     SETA  1
&FZ      SETC  '0'
.FREG    ANOP
&FC      SETC  ','
&FLP     SETC  '('
&FRP     SETC  ')'
.FDCODED ANOP
         AIF   ('&MF(1)' EQ 'INLINE' OR '&MF(1)' EQ '').XXC
         AIF   ('&MF(1)' EQ 'SUBROUTINE').SUB
         MNOTE 8,'MF(1)=&MF(1) IS INVALID.'
         AGO   .MEND
.SUB     ANOP
.*
&@       SETC  '&PFIX(1)'
         AIF   ('&PFIX(2). '(1,1) EQ 'N').DONPFIX
         AIF   (K'&PFIX(1) NE 0).GOTPFIX
         #TEST PFIX=
&@       SETC  '&#TESRET(1)'
         AGO   .DONPFIX
.GOTPFIX #REGS &PFIX(1),GEN=NO
.DONPFIX ANOP
.*
&SAVEA   SETC  'X&#.SVA'
         AIF   ('&SVID(1)' EQ '').GOTSAVA
&SAVEA   SETC  '&SVID'
         AIF   ('&SVID(1)' EQ '&SVID').GOTSAVA
&SAVEA   SETC  '0(&SVID(1))'
.GOTSAVA AIF   ('&F(&FRI)' EQ '').GOTFR
         #TEST REGS=&F(&FRI)
         AIF   (&#TESERR NE 0).GOTFR
&FR      SETA  &#TESRET(1)
.GOTFR   ANOP
&N       STM   &@.14,&@.1,&SAVEA   SAVE WORK REGISTERS
         AIF   ('&TZ' EQ '').TLA
         #TEST REGS=&T(&TRI)
         AIF   (&#TESERR NE 0).TLR
&TR      SETA  &#TESRET(1)
         AIF   (&TR EQ 15).TDONE
.TLR     LR    &@.15,&T(&TRI)      LOAD SINK REGISTER
         AGO   .TDONE
.TLA     LA    &@.15,&T(&TDI)&TLP&TC&T(&TRI)&TRP LOAD SINK REGISTER
.TDONE   ANOP
&LOADR1  SETB  (('&OP' NE 'TR' AND '&OP' NE 'TRT') OR (&FR EQ 14 OR &FR*
                EQ 15))
         AIF   (NOT &LOADR1).FDONE
         AIF   ('&FZ' EQ '').FLA
         AIF   (&FR EQ 15).FLR15
         AIF   (&FR EQ 1).FDONE
.FLR     LR    &@.1,&F(&FRI)       LOAD SOURCE REGISTER
         AGO   .FDONE
.FLR15   AIF   (&TR EQ 15).FLR
         L     &@.1,&SAVEA+4       LOAD SOURCE REGISTER
         AGO   .FDONE
.FLA     AIF   (&FR EQ 15).FL15
&FR      SETA  0
.FLAA    LA    &@.1,&F(&FDI)&FLP&FC&F(&FRI)&FRP LOAD SOURCE REGISTER
         AGO   .FDONE
.FL15    AIF   (&TR EQ 15).FLAA
         L     &@.1,&SAVEA+4       LOAD -
         LA    &@.1,&F(&FDI)(,&@.1) SOURCE REGISTER
.FDONE   AIF   ('&L' EQ '&L(1)').LL
         #TEST REGS=&L(1)
         AIF   (&#TESERR NE 0).LLTR
&A       SETA  4
&D1      SETA  &TR
         AIF   (&#TESRET(1) EQ 15).LLSVA
         AIF   (&#TESRET(1) NE 1).LLTR
&A       SETA  12
&D1      SETA  &FR
.LLSVA   AIF   (&#TESRET(1) EQ &D1).LLTR
         L     &@.0,&SAVEA+&A      LOAD LENGTH REGISTER
         AGO   .LLTR0
.LLTR    LTR   &@.0,&L(1)          LOAD LENGTH REGISTER; > 0?
         AGO   .LDONE
.LL      L     &@.0,&L             LOAD LENGTH REGISTER
.LLTR0   LTR   &@.0,&@.0           LENGTH > 0?
.LDONE   BNP   X&#.RET             NO, EXIT
         LA    &@.14,256           YES, GET MAX SINGLE EXECUTE LENGTH
X&#.LP   CR    &@.14,&@.0          LENGTH NEARLY EXHAUSTED YET?
         BNH   X&#.EX              NO, GO EXECUTE MAX LENGTH
         LR    &@.14,&@.0          YES, GET LAST EXECUTE LENGTH
X&#.EX   BCTR  &@.14,0             CONVERT LENGTH TO MACHINE LENGTH
         EX    &@.14,X&#.XXC       EXECUTE THE FUNCTION
         AIF   ('&OP' NE 'TRT' AND '&OP' NE 'CLC').TSTSKIP
         BNE   X&#.RET             INEQUALITY; GO RETURN TO CALLER
.TSTSKIP LA    &@.14,1(,&@.14)     RESTORE ORIGINAL LENGTH
         AR    &@.15,&@.14         ADVANCE SINK REGISTER
         AIF   ('&OP' EQ 'TRT' OR '&OP' EQ 'TR').NOINCR
         AR    &@.1,&@.14          ADVANCE SOURCE REGISTER
.NOINCR  SR    &@.0,&@.14          DECRIMENT THE LENGTH; DONE YET?
         BP    X&#.LP              NO, KEEP LOOPING
         AIF   ('&OP' NE 'TRT' OR NOT &LOADR1).NOTTRTX
         L     &@.1,&SAVEA+12      YES, TRT MISSED; INSURE R1 RESTORED
.NOTTRTX ANOP
&RE      SETA  1
         AIF   ('&OP' NE 'TRT').GOTRE
&RE      SETA  0
.GOTRE   ANOP
X&#.RET  LM    &@.14,&@&RE,&SAVEA  RESTORE REGISTERS
         AIF   ('&MF(2)' EQ '').BR14
         AIF   ('&MF(2)' EQ '*').BEND
         AIF   ('&MF(2)'(1,1) EQ '(').BREG
         B     &MF(2)              EXIT
         AGO   .DATA
.BR14    BR    &@.14               RETURN
         AGO   .DATA
.BEND    B     X&#.END             EXIT
         AGO   .DATA
.BREG    #TEST DCODE=&MF(2)
         BR    &#TESRET(2)         RETURN
.DATA    AIF   ('&SVID(1)' NE '').NOSAVEA
X&#.SVA  DS    4A                  REGISTER SAVE AREA
.NOSAVEA AIF   (NOT &LOADR1).TRTRTO
X&#.XXC  &OP   0(*-*,&@.15),0(&@.1) (EXECUTED)
         AGO   .ENDTST
.TRTRTO  ANOP
X&#.XXC  &OP   0(*-*,&@.15),&FZ&F(&FDI)&FLP&F(&FRI)&FRP (EXECUTED)
.ENDTST  AIF   ('&MF(2)' NE '*').MEND
X&#.END  DS    0H
         AGO   .MEND
.XXC     ANOP
&C       SETC  T'&L(1)
         AIF   ('&C' NE 'O').GOTLEN
&C       SETC  T'&T(&TDI)
         AIF   ('&C' EQ 'M' OR '&C' EQ 'N' OR '&C' EQ 'O' OR '&C' EQ 'T*
               ' OR '&C' EQ 'U' OR '&C' EQ 'W' OR '&C' EQ '$').NOLNGTH
&A       SETA  L'&T(&TDI)
         AIF   (&A GT 256).LONGMVC
.NOLNGTH ANOP
&N       &OP   &TZ&T(&TDI)&TLP&TC&T(&TRI)&TRP,&FZ&F(&FDI)&FLP&F(&FRI)&F*
               RP
         AGO   .MEND
.GOTLEN  AIF   ('&C' NE 'N').SHORTMV
&A       SETA  &L(1)
         AIF   (&A GT 256).LONGMVC
.SHORTMV ANOP
&A       SETA  1
         AIF   (K'&L(2) EQ 0).SHORT2
&A       SETA  2
.SHORT2  ANOP
&N       &OP   &TZ&T(&TDI)(&L(&A)&TC&T(&TRI)),&FZ&F(&FDI)&FLP&F(&FRI)&F*
               RP
         AGO   .MEND
.LONGMVC ANOP
&N       &OP   &TZ&T(&TDI)&CD1.(256&TC&T(&TRI)),&FZ&F(&FDI)&CD2&FLP&F(&*
               FRI)&FRP
&N       SETC  ''
         AIF   ('&OP' NE 'TRT' AND '&OP' NE 'CLC').NOTEST
         BNE   X&#.END
.NOTEST  ANOP
&A       SETA  &A-256
&D1      SETA  &D1+256
&CD1     SETC  '+'.'&D1'
         AIF   ('&OP' EQ 'TR' OR '&OP' EQ 'TRT').TROP
&CD2     SETC  '&CD1'
.TROP    AIF   (&A GT 256).LONGMVC
         AIF   (K'&L(2) EQ 0).LAST2
         &OP   &TZ&T(&TDI)&CD1.(&L(2)-&D1&TC&T(&TRI)),&FZ&F(&FDI)&CD2&F*
               LP&F(&FRI)&FRP
         AGO   .LAST1
.LAST2   &OP   &TZ&T(&TDI)&CD1.(&A&TC&T(&TRI)),&FZ&F(&FDI)&CD2&FLP&F(&F*
               RI)&FRP
.LAST1   AIF   ('&OP' NE 'CLC' AND '&OP' NE 'TRT').MEND
X&#.END  DS    0H
.MEND    MEND
./ ADD NAME=ASMJCL   8000-02071-02071-2134-00030-00030-00000-SYZYGY1
//SYZYGYA JOB (BRIAN),WESTERMAN,CLASS=A,MSGCLASS=A,NOTIFY=SYZYGY1
//***********************************************************
//*                                                         *
//*      SAMPLE JCL TO ASSEMBLE AND LINKEDIT THE DYNABLDL   *
//*      PROGRAM.                                           *
//*                                                         *
//*      "COLE.MACLIB" IS AVAILABLE FROM THE CBT TAPE AS OF *
//*      VERSION 224 (JANUARY 15, 1984) IN FILE 408.        *
//*                                                         *
//***********************************************************
//*
//ASM     EXEC PGM=IFOX00,REGION=1024K,
//             PARM='TEST,TERM,LOAD,NODECK'
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DSN=SYZYGY.DYNABLDL,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSGO    DD  DSN=&&OBJECT,UNIT=SYSDA,SPACE=(CYL,(1,1)),DISP=(,PASS)
//SYSIN    DD  DSN=SYZYGY.DYNABLDL(DYNABLDL),DISP=SHR
//*
//LKED    EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),
//             PARM='TEST,NCAL,LIST,XREF'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSLMOD  DD  DSN=SYZYGY.LINKLIB(DYNABLDL),DISP=SHR
//SYSLIN   DD  DSN=&&OBJECT,DISP=(OLD,DELETE)
./ ADD NAME=DBREPORT 0100-89041-89041-0921-00003-00003-00000-DYNABLD
//IEFPROC EXEC PGM=DYNABLDL,REGION=100K,PARM=R
//SYSPRINT DD  DDNAME=IEFRDER
//IEFRDER  DD  SYSOUT=A
./ ADD NAME=DBSTART  0100-89041-89041-0921-00001-00001-00000-DYNABLD
//IEFPROC EXEC PGM=DYNABLDL,REGION=100K
./ ADD NAME=DBSTOP   0100-89041-89041-0921-00001-00001-00000-DYNABLD
//IEFPROC EXEC PGM=DYNABLDL,REGION=100K,PARM=P
./ ADD NAME=DYNABLDL 8002-02071-02072-1159-04409-04397-00000-SYZYGY1
DYNABLDL TITLE ' '                                            11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
* MODULE NAME = DYNABLDL.                                   * 11/83 DBC
*                                                           * 11/83 DBC
* DESCRIPTIVE NAME = DYNAMIC BLDL FACILITY.                 * 11/83 DBC
*                                                           * 11/83 DBC
* COPYRIGHT = DAVID B. COLE - 1983.                         * 11/83 DBC
*                                                           * 11/83 DBC
* STATUS = RELEASE 85, MODIFICATION LEVEL W.                * 03/02 BHW
* STATUS =             HERCULES RELEASE MVS 3.8J            * 03/02 BHW
* STATUS =             NBRIAN WESTERMAN 03/12/02            * 03/02 BHW
* STATUS = RELEASE 84, MODIFICATION LEVEL C.                * 03/02 BHW
*                                                           * 11/83 DBC
* FUNCTION = MAINTAIN A DYNAMICALLY UPDATED LIST OF THE     * 11/83 DBC
*            MOST FREQUENTLY USED BLDL ENTRIES FROM THE     * 11/83 DBC
*            LINK LIST LIBRARIES.                           * 11/83 DBC
*                                                           * 11/83 DBC
*            THIS PROGRAM IS CONCEPTUALLY BASED ON THE      * 11/83 DBC
*            VARIOUS DYNAMIC BLDL PROGRAMS AVAILABLE FROM   * 11/83 DBC
*            THE "CBT MODS" TAPE. HOWEVER, THIS VERSION IS  * 11/83 DBC
*            A COMPLETE REWRITE THAT INCORPORATES A SERIES  * 11/83 DBC
*            OF IMPROVEMENTS LISTED BELOW UNDER "CHANGE     * 11/83 DBC
*            HISTORY".                                      * 11/83 DBC
*                                                           * 11/83 DBC
* PROCESSOR = OS/VS ASSEMBLER.                              * 11/83 DBC
*                                                           * 11/83 DBC
* ATTRIBUTES = NOT REENTRANT.                               * 11/83 DBC
*                                                           * 11/83 DBC
* DEPENDANCIES = STRUCTURE OF IGC018.                       * 11/83 DBC
*                                                           * 11/83 DBC
* AUTHOR = DAVID B. COLE (DBC)                              * 11/83 DBC
*          RR#2 BOX 712                                     * 11/83 DBC
*          AFTON, VA. 22920                                 * 11/83 DBC
*                                                           * 05/84 DBC
*          ADDITIONAL MODIFICATIONS MADE BY:                * 05/84 DBC
*                                                           * 09/84 DBC
*          JERRY L. CALLEN (JLC)                            * 05/84 DBC
*          UNIVERSITY OF CHICAGO                            * 05/84 DBC
*          COMPUTER CENTER                                  * 05/84 DBC
*          5640 SOUTH ELLIS AVENUE                          * 05/84 DBC
*          CHICAGO, IL. 60637                               * 05/84 DBC
*                                                           * 09/84 DBC
*          BILL HORTEN (WRH)                                * 09/84 DBC
*          TENNESSEE EASTMAN COMPANY                        * 09/84 DBC
*          BOX 1973                                         * 09/84 DBC
*          KINGSPORT, TN. 37662                             * 09/84 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'CHANGE HISTORY'                               11/83 DBC
************************************************************* 03/02 BHW
*                                                           * 03/02 BHW
* RELEASE 85W                                               * 03/02 BHW
*                                                           * 03/02 BHW
* LAST CHANGE DATE = MARCH 12, 2002    BRIAN WESTERMAN      * 03/02 BHW
*                                                           * 03/02 BHW
*                  - REWORKED FOR HERCULES VERSION OF SVC18 * 03/02 BHW
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
* RELEASE 84C                                               * 09/84 DBC
*                                                           * 09/84 DBC
* LAST CHANGE DATE = SEPTEMBER 27, 1974                     * 09/84 DBC
*                                                           * 09/84 DBC
*                  - INCLUDED ADDITIONAL VERSION TABLES     * 09/84 DBC
*                    WORKED OUT BY BILL HORTEN OF TENNESSEE * 09/84 DBC
*                    EASTMAN COMPANY.                       * 09/84 DBC
*                                                           * 09/84 DBC
*                  - MODIFIED THE SRCHPDS HOOK TO PROPERLY  * 09/84 DBC
*                    HANDLE SOME CHANGES IN THE DFP         * 09/84 DBC
*                    VERSIONS OF IGC018. THESE NEWER        * 09/84 DBC
*                    VERSIONS WILL SOMETIMES SWITCH TO THE  * 09/84 DBC
*                    DEB'S PROTECT KEY (INSTEAD OF THE      * 09/84 DBC
*                    CALLER'S PROTECT KEY) BEFORE STORING   * 09/84 DBC
*                    THE RETURNED DIRECTORY INFORMATION.    * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         EJECT ,                                              09/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
* RELEASE 84B                                               * 08/84 DBC
*                                                           * 08/84 DBC
* LAST CHANGE DATE = AUGUST 27,  1984                       * 08/84 DBC
*                                                           * 08/84 DBC
*                  - SUPPORT FOR ADDITIONAL VERSIONS OF     * 08/84 DBC
*                    IGC018 (VERSIONS 7 AND 8) HAS BEEN     * 08/84 DBC
*                    ADDED. THANKS TO VAL PITCHETT OF STATE * 08/84 DBC
*                    FARM INSURANCE FOR HELP WITH THIS.     * 08/84 DBC
*                                                           * 08/84 DBC
*                  - THE DYNABLDL REPORT NOW FLAGS THOSE    * 08/84 DBC
*                    LOAD MODULES THAT ARE REENTRANT. THIS  * 08/84 DBC
*                    WILL BE HELPFUL IN DETERMINING WHICH   * 08/84 DBC
*                    MODULES MIGHT BE BETTER PLACED IN      * 08/84 DBC
*                    SYS1.LPALIB.                           * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         EJECT ,                                              08/84 DBC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
* RELEASE 84A                                               * 05/84 DBC
*                                                           * 04/84 JLC
* LAST CHANGE DATE = MAY 29, 1984                           * 05/84 DBC
*                                                           * 04/84 JLC
*                  - "TYPO" TYPE BUGS FIXED AT LABELS       * 04/84 JLC
*                    "ENTCNT" AND "SIZESCAN". (BY CHANCE    * 04/84 JLC
*                    THE BUGS HAD NO FUNCTIONAL EFFECT).    * 04/84 JLC
*                                                           * 04/84 JLC
*                  - SUPPORT ADDED FOR THE UZ61167 LEVEL OF * 04/84 JLC
*                    IGC018.                                * 04/84 JLC
*                                                           * 05/84 DBC
*                  - SUPPORT FOR A SECOND VARIATION OF THE  * 05/84 DBC
*                    UZ61168 LEVEL OF IGC018 ADDED.         * 05/84 DBC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         EJECT ,                                              05/84 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
* RELEASE 83.A                                              * 11/83 DBC
*                                                           * 11/83 DBC
* LAST CHANGE DATE - NOVEMBER 15, 1983                      * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THIS VERSION OF DYNABLDL IS CAPABLE OF * 11/83 DBC
*                    RECOGNIZING AND HOOKING INTO ANY OF    * 11/83 DBC
*                    SEVERAL VERSIONS OF IBM'S IGC018. THE  * 11/83 DBC
*                    RECOGNITION CODE IS TABLE DRIVEN, AND  * 11/83 DBC
*                    ADDITIONAL RECOGNITION TABLES CAN BE   * 11/83 DBC
*                    FAIRLY EASILY ADDED.                   * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE RECOGNITION TABLES ARE             * 11/83 DBC
*                    COMPREHENSIVE. EACH TABLE CONSISTS OF  * 11/83 DBC
*                    FOUR PARTS. THE FIRST, LABELED "ID#"   * 11/83 DBC
*                    (WHERE "#" REPRESENTS AN ARBITRARY     * 11/83 DBC
*                    UNIQUE NUMERIC SUFIX), MUST MATCH AN   * 11/83 DBC
*                    IGC018'S IDENTIFICATION HEADER. THIS   * 11/83 DBC
*                    IS USED TO DISTINGUISH ONE IGC018 FROM * 11/83 DBC
*                    ANOTHER. THE SECOND AND THIRD PARTS,   * 11/83 DBC
*                    LABELED "SRCHPO#" AND "DFOUND#", MUST  * 11/83 DBC
*                    MATCH THE TWO LOCATIONS IN IGC018      * 11/83 DBC
*                    WHERE DYNABLDL INSERTS ITS JUMPS TO    * 11/83 DBC
*                    ITS INTERCEPT ROUTINES. THE FOURTH     * 11/83 DBC
*                    PART CONSISTS OF A LIST OF DESCRIPTORS * 11/83 DBC
*                    OF ALL IBM PRIVATE DATA FIELDS         * 11/83 DBC
*                    REFERENCED BY THE INTERCEPT ROUTINES.  * 11/83 DBC
*                    MOST OF THE DESCRIPTORS ARE S-CONS     * 11/83 DBC
*                    GIVING THE BASE REGISTER BY WHICH      * 11/83 DBC
*                    IGC018 REFERENCES A FIELD AND THE      * 11/83 DBC
*                    DISPLACEMENT OF THAT FIELD INTO THE    * 11/83 DBC
*                    IBM PRIVATE CONTROL BLOCK. THE         * 11/83 DBC
*                    DYNABLDL INITIALIZATION ROUTINE USES   * 11/83 DBC
*                    THIS LIST TO DYNAMICALLY MODIFY ALL    * 11/83 DBC
*                    MACHINE INSTRUCTIONS IN THE TWO        * 11/83 DBC
*                    INTERCEPT ROUTINES SO THAT THEY        * 11/83 DBC
*                    CORRECTLY MATCH THE PARTICULAR VERSION * 11/83 DBC
*                    OF IGC018 BEING HOOKED INTO. NOTE, THE * 11/83 DBC
*                    TWO IBM PRIVATE CONTROL BLOCKS         * 11/83 DBC
*                    INVOLVED HERE ARE THE "BLDL WORK AREA" * 11/83 DBC
*                    AND BLDL'S "SVRB EXTENDED SAVE AREA".  * 11/83 DBC
*                                                           * 11/83 DBC
*                  - ALL ROUTINES RELATED TO DYNABLDL HAVE  * 11/83 DBC
*                    BEEN CONSOLIDATED INTO A SINGLE        * 11/83 DBC
*                    PROGRAM. THIS RELIEVES THE POTENTIAL   * 11/83 DBC
*                    FOR ERRORS ARISING FROM PARTIAL        * 11/83 DBC
*                    MODIFICATIONS.                         * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE DYNAMIC BLDL TABLE IS NOW          * 11/83 DBC
*                    MAINTAINED BY A STRAIGHT FORWARD       * 11/83 DBC
*                    "LEAST RECENTLY USED" ALGORITHM. THE   * 11/83 DBC
*                    PREVIOUSLY USED PERIODIC SORTS AND     * 11/83 DBC
*                    PARTIAL REFILL METHOD HAS BEEN         * 11/83 DBC
*                    DISCARDED.                             * 11/83 DBC
*                                                           * 11/83 DBC
*                  - PRIOR VERSIONS OF DYNABLDL DID NOT     * 11/83 DBC
*                    INTERCEPT LINKLIST BLDL REQUESTS IN    * 11/83 DBC
*                    WHICH THE USER REQUESTED TWO OR MORE   * 11/83 DBC
*                    NAMES. FURTHER, PRIOR DYNABLDLS DID    * 11/83 DBC
*                    NOT COUNT SUCH IGNORED REQUESTS AS     * 11/83 DBC
*                    "MISSES". CONSEQUENTLY, THE "HIT RATE" * 11/83 DBC
*                    REPORTED BACK WAS INCORRECT. (IT WAS   * 11/83 DBC
*                    TOO HIGH). THIS VERSION OF DYNABLDL    * 11/83 DBC
*                    DOES HANDLE MULTI-ENTRY BLDL REQUESTS, * 11/83 DBC
*                    AND MY EXPERIENCE HAS BEEN THAT THE    * 11/83 DBC
*                    TRUE HIT RATE HAS RISEN FROM ABOUT 80% * 11/83 DBC
*                    TO BETTER THAN 95%.                    * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE REPORT FUNCTION NOW PRODUCES THREE * 11/83 DBC
*                    LISTINGS OF THE DYNAMIC TABLE (PRINTED * 11/83 DBC
*                    IN 3-COLUMN FORMAT USING LESS THAN 79  * 11/83 DBC
*                    CHARACTERS PER LINE - SUITABLE FOR     * 11/83 DBC
*                    3270 DISPLAY). ONE LISTING IS SORTED   * 11/83 DBC
*                    BY NAME; A SECOND IS SORTED BY HITS    * 11/83 DBC
*                    COUNT; THE THIRD IS SORTED BY L.R.U.   * 11/83 DBC
*                    CHARACTERISTIC.                        * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE DYNABLDL STOP FUNCTION NOW         * 11/83 DBC
*                    COMPLETELY REMOVES DYNABLDL FROM THE   * 11/83 DBC
*                    SYSTEM RATHER THAN JUST DISABLING THE  * 11/83 DBC
*                    HOOK ROUTINES.                         * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'DOCUMANTATION'                                11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*              INSTALLATION GUIDE                           * 11/83 DBC
*                                                           * 11/83 DBC
* USE THE FOLLOWING STEPS TO INSTALL DYNABLDL.              * 11/83 DBC
*                                                           * 11/83 DBC
* EXAMINE THE MICROFICHE FOR THE VERSION OF IGC018 (THE     * 11/83 DBC
* BLDL SVC ROUTINE) THAT EXISTS ON YOUR SYSTEM. IN          * 11/83 DBC
* PARTICULAR, EXAMINE THE FOLLOWING.                        * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE MODULE IDENTIFICATION FIELDS LOCATED NEAR    * 11/83 DBC
*          THE START OF IGC018. THIS IS USED BY DYNABLDL TO * 11/83 DBC
*          IDENTIFY THE VERSION OF IGC018 THAT EXISTS IN    * 11/83 DBC
*          YOUR SYSTEM.                                     * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE CODE LOCATED AT IGC018'S LABEL "SRCHPDS".    * 11/83 DBC
*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC
*          DYNAMIC TABLE LOOKUP ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE CODE LOCATED AT ICG018'S LABEL "DFOUND".     * 11/83 DBC
*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC
*          DYNAMIC TABLE UPDATE ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE BASE REGISTER (USUALLY R13) AND              * 11/83 DBC
*          DISPLACEMENTS OF THE FOLLOWING FIELDS IN THE     * 11/83 DBC
*          "WORKAREA" DSECT.                                * 11/83 DBC
*              RDAREA                                       * 11/83 DBC
*              CONCAT#                                      * 11/83 DBC
*          THESE ARE FIELDS REFERENCED BY THE INTERCEPT     * 11/83 DBC
*          ROUTINES.                                        * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE BASE REGISTER (USUALLY R6) AND DISPLACEMENTS * 09/84 DBC
*          OF THE FOLLOWING FIELDS IN THE SVRB EXTENDED     * 09/84 DBC
*          SAVE AREA. (REMEMBER THAT AN ASSEMBLY XREF FOR   * 09/84 DBC
*          IGC018 WILL LIST THE VALUES OF THE FOLLOWING     * 09/84 DBC
*          LABELS AT +X'40' GREATER THAT THEIR TRUE OFFSETS * 09/84 DBC
*          BECAUSE OF THE PRESENCE OF AN X'40'-BYTE PREFIX  * 09/84 DBC
*          SECTION IN THE RB DSECT MAP).                    * 09/84 DBC
*              EXSKEY                                       * 09/84 DBC
*              EXSFLG                                       * 09/84 DBC
*              EXSBLDL (FLAG BIT)                           * 09/84 DBC
*          THESE FIELDS AND FLAGS ARE REFERENCES BY THE     * 09/84 DBC
*          INTERCEPT ROUTINES.                              * 09/84 DBC
*                                                           * 11/83 DBC
*        - THE REGISTER (USUALLY R12 AND NAMED "RBASE")     * 11/83 DBC
*          USED AS IGC018'S PROGRAM BASE, AND ITS RELATIVE  * 11/83 DBC
*          BASE ADDRESS (USUALLY X'2').                     * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE BASE REGISTERS USED BY IGC018 TO POINT TO:   * 11/83 DBC
*              - THE DCB OF THE LIBRARIES CURRENTLY BEING   * 11/83 DBC
*                SEARCHED (USUALLY R11 AND NAMED "RDCB"),   * 11/83 DBC
*              - THE USER'S PARAMETER LIST THAT WAS PASSED  * 11/83 DBC
*                TO THE BLDL ROUTINE (USUALLY R10 AND NAMED * 11/83 DBC
*                "RLIST"),                                  * 11/83 DBC
*              - THE PDS DIRECTORY ENTRY FOUND BY IGC018 AT * 11/83 DBC
*                THE TIME THAT "DFOUND" IS CALLED (USUALLY  * 11/83 DBC
*                R8 AND NAMED "RPDS1").                     * 11/83 DBC
*                                                           * 11/83 DBC
* EXAMINE THE VERSION TABLES ALREADY EXISTING IN THIS       * 11/83 DBC
* DYNABLDL TO SEE IF ANY OF THEM MATCH YOUR VERSION OF      * 11/83 DBC
* IGC018. IF SO, THEN DYNABLDL WILL FUNCTION ON YOUR SYSTEM * 11/83 DBC
* WITHOUT MODIFICATION. IF NOT, THEN YOU WILL HAVE TO ADD A * 11/83 DBC
* VERSION TABLE TO DYNABLDL DESCRIBING YOUR IGC018.  UNLESS * 11/83 DBC
* THE LOGIC OF IGC018 CHANGES DRASTICLY, CREATING A NEW     * 11/83 DBC
* VERSION TABLE SHOULD BE ALL THAT YOU NEED TO DO; YOU      * 11/83 DBC
* SHOULD NOT HAVE TO CHANGE ANYTHING ELSE IN DYNABLDL.      * 11/83 DBC
*                                                           * 11/83 DBC
* NOTE, AN EASY TEST WOULD BE TO SIMPLY RUN DYNABLDL AS     * 11/83 DBC
* RECEIVED. IF IT RECOGNIZES YOUR IGC018, THEN IT WILL RUN. * 11/83 DBC
* IF IT CANNOT RECOGNIZE YOUR IGC018, THEN IT WILL SAY SO   * 11/83 DBC
* AND TERMINATE.                                            * 11/83 DBC
*                                                           * 11/83 DBC
* IF YOU NEED TO ADD A NEW VERSION TABLE, THEN DO THE       * 11/83 DBC
* FOLLOWING:                                                * 11/83 DBC
*                                                           * 11/83 DBC
*        - USING THE INFORMATION GATHERED BY YOUR           * 11/83 DBC
*          EXAMINATION OF IGC018, CREATE A NEW VERSION      * 11/83 DBC
*          TABLE MODELED ON THE VERSION TABLES ALREADY      * 11/83 DBC
*          PROVIDED. BE SURE TO INCLUDE A 4-ELEMENT VECTOR  * 11/83 DBC
*          POINTING TO THE FOUR PARTS OF YOUR NEW VERSION   * 11/83 DBC
*          TABLE.                                           * 11/83 DBC
*                                                           * 11/83 DBC
*        - ADD TO THE "VERSIONS" VECTOR AN ENTRY POINTING   * 11/83 DBC
*          TO YOUR 4-ELEMENT VECTOR.                        * 11/83 DBC
*                                                           * 11/83 DBC
*        - REASSEMBLE DYNABLDL USING "SYS1.MACLIB",         * 11/83 DBC
*          "SYS1.AMODGEN", AND THE MACLIB PROVIDED WITH THE * 11/83 DBC
*          DYNABLDL DISTRIBUTION.                           * 11/83 DBC
*                                                           * 11/83 DBC
* LINK EDIT DYNABLDL INTO A LINKLIST LIBRARY OR SOME OTHER  * 11/83 DBC
* AUTHORIZED LIBRARY. NOTE, ALTHOUGH THE INTERCEPT ROUTINES * 11/83 DBC
* INSERTED INTO IGC018 ARE REENTRANT, DYNABLDL ITSELF IS    * 11/83 DBC
* NOT. THEREFORE, DYNABLDL SHOULD NOT BE PLACED IN          * 11/83 DBC
* SYS1.LPALIB.                                              * 11/83 DBC
*                                                           * 11/83 DBC
* CREATE THE FOLLOWING PROC NAMED DYNABLDL:                 * 11/83 DBC
*                                                           * 11/83 DBC
*        //IEFPROC EXEC PGM=DYNABLDL,REGION=100K            * 11/83 DBC
*        //STEPLIB  DD  DSN= --- (ONLY IF NOT IN LINKLIST)  * 11/83 DBC
*        //IEFRDER  DD  DDNAME=SYSPRINT                     * 11/83 DBC
*        //SYSPRINT DD  SYSOUT=A (USED FOR REPORT FUNCTION) * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*              USER'S GUIDE                                 * 11/83 DBC
*                                                           * 11/83 DBC
* THE FOLLOWING ASSUMES THAT DYNABLDL HAS BEEN INSTALLED AS * 11/83 DBC
* DESCRIBED ABOVE.                                          * 11/83 DBC
*                                                           * 11/83 DBC
* TO START DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.     * 11/83 DBC
*        S DYNABLDL                -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=START     -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=S                                  * 11/83 DBC
* DYNABLDL WILL (A) ATTEMPT TO RECOGNIZE THE VERSION OF     * 11/83 DBC
* IGC018 RUNNING ON YOUR SYSTEM, (B) DETERMINE WHETHER OR   * 11/83 DBC
* DYNAMIC BLDL PROCESSING IS ALREADY UP AND RUNNING,        * 11/83 DBC
* (C) GENERATE INTERCEPT ROUTINES IN FIXED GLOBAL MEMORY,   * 11/83 DBC
* (D) INSERT INTO IGC018 JUMPS TO THE INTERCEPT ROUTINES,   * 11/83 DBC
* AND (E) TERMINATE LEAVING BEHIND THE ENABLED INTERCEPT    * 11/83 DBC
* ROUTINES.                                                 * 11/83 DBC
*                                                           * 11/83 DBC
* TO STOP DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.      * 11/83 DBC
*        S DYNABLDL,PARM=STOP      -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=P                                  * 11/83 DBC
* DYNABLDL WILL REMOVE THE HOOKS FROM IGC018 (BY RESTORING  * 11/83 DBC
* THE ORIGINAL CODE) AND FREE THE GLOBAL MEMORY CONTAINING  * 11/83 DBC
* THE INTERCEPT ROUTINES.                                   * 11/83 DBC
*                                                           * 11/83 DBC
* A DYNABLDL ACTIVITY REPORT CAN BE GENERATED ONLY WHILE    * 11/83 DBC
* DYNABLDL PROCESSING IS ACTIVE. TO GENERATE AN ACTIVITY    * 11/83 DBC
* REPORT, USE THE FOLLOWING OPERATOR COMMAND.               * 11/83 DBC
*        S DYNABLDL,PARM=REPORT    -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=R                                  * 11/83 DBC
*                                                           * 11/83 DBC
* TO GENERATE ONLY AN ACTIVITY SUMMARY MESSAGE (WTO), USE   * 11/83 DBC
* THE FOLLOWING OPERATOR COMMAND.                           * 11/83 DBC
*        S DYNABLDL,DSN=NULLFILE,PARM=REPORT  -- OR --      * 11/83 DBC
*        S DYNABLDL,DSN=NULLFILE,PARM=R                     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'IHASVC MACRO'                                 11/83 DBC
         MACRO                                                11/83 DBC
         IHASVC &D                                            11/83 DBC
SVC      DSECT ,                                              11/83 DBC
SVCENTRY DS    0XL8                SVC TABLE ENTRY            11/83 DBC
SVCEP    DS    A                   A(SVC ROUTINE)             11/83 DBC
SVCATTR1 DS    BL2                 ATTRIBUTES                 11/83 DBC
SVCTP1   EQU   B'00000000'         TYPE 0                     11/83 DBC
SVCTP2   EQU   B'10000000'         TYPE 2                     11/83 DBC
SVCTP34  EQU   B'11000000'         TYPE 3/4                   11/83 DBC
SVCTP6   EQU   B'00100000'         TYPE 6                     11/83 DBC
SVCAPF   EQU   B'00001000'         CALLER MUST BE AUTHORIZED  11/83 DBC
SVCESR   EQU   B'00000100'         "ESR" SVC                  11/83 DBC
SVCNP    EQU   B'00000010'         NON-PREEMPTIVE SVC         11/83 DBC
SVCLOCKS DS    BL2                 LOCK ATTRIBUTES            11/83 DBC
SVCLL    EQU   B'10000000'         LOCAL LOCK                 11/83 DBC
SVCCMS   EQU   B'01000000'         CMS LOCK                   11/83 DBC
SVCOPT   EQU   B'00100000'         OPT LOCK                   11/83 DBC
SVCALLOC EQU   B'00010000'         SALLOC LOCK                11/83 DBC
SVCDISP  EQU   B'00001000'         DISP LOCK                  11/83 DBC
         MEND                                                 11/83 DBC
         TITLE '@ZAP MACRO'                                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        THIS MACRO BUILDS A ROUTINE TO DYNAMICALLY ADJUST  * 11/83 DBC
*        AT EXECUTION TIME THOSE MACHINE INSTRUCTIONS THAT  * 11/83 DBC
*        REFERENCE PRIVATE IBM DATA FIELDS.                 * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MACRO                                                11/83 DBC
&N       @ZAP  &X                                             11/83 DBC
         GBLA  &@ZAP#,&@ZCNT,&@ZAPFO(1024)                    11/83 DBC
         GBLC  &@ZAPZN(1024),&@ZAPFN(1024)                    11/83 DBC
         LCLA  &F#,&FO,&SIGN                                  11/83 DBC
         LCLC  &ZN,&CN,&FN,&NN,&VALUE,&C1                     11/83 DBC
         AIF   ('&X' EQ '').DUMP                              11/83 DBC
.*                                                            11/83 DBC
&@ZAP#   SETA  &@ZAP#+1                                       11/83 DBC
&ZN      SETC  'ZAP&@ZAP#'                                    11/83 DBC
         AIF   ('&N' EQ '').GOTZN                             11/83 DBC
&ZN      SETC  '&N'                                           11/83 DBC
.GOTZN   ANOP                                                 11/83 DBC
&ZN      DS    0H                                             11/83 DBC
.*                                                            11/83 DBC
&F#      SETA  0                                              11/83 DBC
.LP1     AIF   (&F# GE N'&SYSLIST).END1                       11/83 DBC
&F#      SETA  &F#+1                                          11/83 DBC
&@ZCNT   SETA  &@ZCNT+1                                       11/83 DBC
&@ZAPZN(&@ZCNT) SETC '&ZN'                                    11/83 DBC
&@ZAPFN(&@ZCNT) SETC '&SYSLIST(&F#,1)'                        11/83 DBC
&VALUE   SETC  '&SYSLIST(&F#,2)'                              11/83 DBC
&C1      SETC  '&VALUE'(1,1)                                  11/83 DBC
&SIGN    SETA  1                                              11/83 DBC
         AIF   ('&C1' NE '+' AND '&C1' NE '-').GOTNUM         11/83 DBC
&VALUE   SETC  '&VALUE'(2,K'&VALUE-1)                         11/83 DBC
         AIF   ('&C1' EQ '+').GOTNUM                          11/83 DBC
&SIGN    SETA  -1                                             11/83 DBC
.GOTNUM  ANOP                                                 11/83 DBC
&@ZAPFO(&@ZCNT) SETA &SIGN*&VALUE                             11/83 DBC
         AGO   .LP1                                           11/83 DBC
.*                                                            11/83 DBC
.END1    MEXIT                                                11/83 DBC
.*                                                            11/83 DBC
.*                                                            11/83 DBC
.*                                                            11/83 DBC
.DUMP    ANOP                                                 11/83 DBC
&NN      SETC  '&N'                                           11/83 DBC
&F#      SETA  0                                              11/83 DBC
.LP2     AIF   (&F# GE &@ZCNT).END2                           11/83 DBC
&F#      SETA  &F#+1                                          11/83 DBC
         AIF   ('&ZN' EQ '&@ZAPZN(&F#)').NSPACE               11/83 DBC
         SPACE 1                                              11/83 DBC
&ZN      SETC  '&@ZAPZN(&F#)'                                 11/83 DBC
.NSPACE  ANOP                                                 11/83 DBC
&FN      SETC  '&@ZAPFN(&F#)'                                 11/83 DBC
&FO      SETA  &@ZAPFO(&F#)                                   11/83 DBC
&C1      SETC  '+'                                            11/83 DBC
         AIF   (&FO GE 0).GOTSIGN                             11/83 DBC
&C1      SETC  '-'                                            11/83 DBC
.GOTSIGN ANOP                                                 11/83 DBC
         AIF   (&FO/2*2 NE &FO).IMED                          11/83 DBC
&NN      LH    R0,&ZN&C1&FO                                   11/83 DBC
&NN      SETC  ''                                             11/83 DBC
         AH    R0,&FN                                         11/83 DBC
         STH   R0,&ZN&C1&FO                                   11/83 DBC
         AGO   .LP2                                           11/83 DBC
.IMED    ANOP                                                 11/83 DBC
&NN      OC    &ZN&C1&FO.(1),&FN                              11/83 DBC
&NN      SETC  ''                                             11/83 DBC
         AGO   .LP2                                           11/83 DBC
.*                                                            11/83 DBC
.END2    ANOP                                                 11/83 DBC
&@ZCNT   SETA  0                                              11/83 DBC
         MEND                                                 11/83 DBC
         TITLE 'IBM CONTROL BLOCK MAPS'                       11/83 DBC
         PUNCH '         SETCODE AC(1)'                       11/83 DBC
         SPACE 3                                              11/83 DBC
DYNABLDL CSECT ,                                              11/83 DBC
         PRINT NOGEN                                          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CVT = COMMUNICATIONS VECTOR TABLE                  * 11/83 DBC
*        CVTFIX = PREFIX AND BASIC SECTIONS DSECT           * 11/83 DBC
*        CVTFIX = PREFIX SECTION BASE                       * 11/83 DBC
*        CVTMAP = BASIC SECTION BASE                        * 11/83 DBC
*        CVTXTNT1 = OS COMMON EXTENSION DSECT AND BASE      * 11/83 DBC
*        CVTXTNT2 = VS1/VS2 COMMON EXTENSION DSECT AND BASE * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CVT   DSECT=YES,PREFIX=YES,LIST=YES                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DCB = DATA CONTROL BLOCK                           * 11/83 DBC
*        IHADCB = DSECT AND BASE                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         DCBD  DSORG=(PS,PO)                                  11/83 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*        PDS2 = PARTITIONED DATASET DIRECTORY ENTRIES FOR   * 08/84 DBC
*               LOAD MODULES AS SHOWN BY THE BLDL SVC.      * 08/84 DBC
*        PDS2 = DSECT AND BASE                              * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
         IHAPDS ,                                             08/84 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SCVT = SECONDARY COMMUNICATIONS VECTOR TABLE       * 11/83 DBC
*        SCVTSECT = DSECT AND BASE                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IHASCVT LIST=YES                                     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SVCTABLE = SVC TABLE ENTRY                         * 11/83 DBC
*        SVC = DSECT AND BASE                               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IHASVC ,                                             11/83 DBC
SVCENTLN EQU   *-SVC               TABLE ENTRY LENGTH         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        STANDARD REGISTER NAMES                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #REGS R,                  STANDARD REGISTER NAMES    11/83 DBC*
               (BLDLBASE,R10),     IGC018 LOCATION POINTER    11/83 DBC*
               (VERSBASE,R9),      SPECIFIC VERSION VECTOR PT 11/83 DBC*
               (TABLBASE,R8)       HOOK ROUTINES AREA BASE    11/83 DBC
         SPACE 1                                              11/83 DBC
BLDLSVC  EQU   18                  BLDL SVC NUMBER            11/83 DBC
ENTRYCNT EQU   256                 DYNAMIC LIST SIZE          11/83 DBC
CLOKSHFT EQU   10                  A SHIFT VALUE FOR          11/83 DBC
*                                  SELECTING BITS 10-41 OF    11/83 DBC
*                                  THE TOD CLOCK. NOTE, THESE 11/83 DBC
*                                  ARE THE SAME BITS USED BY  11/83 DBC
*                                  THE SRM FOR ITS INTERVAL   11/83 DBC
*                                  TIMINGS.                   11/83 DBC
LINKSVC  EQU   1                   BLDL'S SIGNAL RETURNED TO  11/83 DBC
*                                  THE USER THAT THE          11/83 DBC
*                                  DIRECTORY ENTRY WAS FOUND  11/83 DBC
*                                  IN EITHER SVCLIB OR A      11/83 DBC
*                                  LINKLIST LIBRARY.          11/83 DBC
LEN3270  EQU   79                  LENGTH OF A 3270 DISPLAY   11/83 DBC
*                                  LINE                       11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  SUBAD=PUTWTO,MF=INIT                           11/83 DBC
         SPACE 3                                              11/83 DBC
         PRINT ON,GEN,NODATA                                  11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        BLDLIST -- THIS DSECT MAPS PLIST HEADER FIELDS     * 11/83 DBC
*        THAT A USER OF THE BLDL SVC PASSES TO BLDL.        * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
BLDLIST  DSECT ,                   BLDL PLIST HEADER          11/83 DBC
BLDENTS  DS    H                   NUMBER OF ELEMENTS BEING   11/83 DBC
*                                  PASSED                     11/83 DBC
BLDELEN  DS    H                   THE LENGTH OF EACH ELEMENT 11/83 DBC
BLDENT   DS    0C                  THE START OF THE FIRST     11/83 DBC
*                                  ELEMENT                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PDS1 -- THIS DSECT MAPS A PDS DIRECTORY ENTRY.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PDS1     DSECT ,                   PDS DIRECTORY ENTRY        11/83 DBC
PDS1NAME DS    CL8                 MEMBER NAME                11/83 DBC
PDS1TTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC
*                                  LIBRARY                    11/83 DBC
PDS1INDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC
PDS1LUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC
PDS1USRD DS    0X                  USER DATA FIELDS           11/83 DBC
         TITLE 'DYNAHEAD DSECT'                               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DYNAHEAD -- THIS DSECT MAPS THE DYNAMIC AREA       * 11/83 DBC
*        DESCRIPTOR TABLE.                                  * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNAHEAD DSECT ,                                              11/83 DBC
DHID     DC    CL8'DYNAHEAD'       ID FIELD                   11/83 DBC
AREA     DC    A(DYNAHEAD)         A(DYNA AREA)               11/83 DBC
AREASPLN DS    A                   AREA'S SUBPOOL AND LENGTH  11/83 DBC
SRCHPOPT DS    A                   A(SRCHPDS HOOK ROUTINE)    11/83 DBC
DFOUNDPT DS    A                   A(DFOUND HOOK ROUTINE)     11/83 DBC
         SPACE 1                                              11/83 DBC
DYNAFIRS DC    A(*-*)            | --> FIRST DYNALIST ENTRY   11/83 DBC
DYNAELEN DC    A(DYNLLEN)        | L' EACH DYNLLIST ENTRY     11/83 DBC
DYNALAST DC    A(*-*+(ENTRYCNT-1)*DYNLLEN) --> LAST ENTRY     11/83 DBC
DYNACLOK DS    F                   STARTUP TIME (BITS 10-41)  11/83 DBC
DYNAHITS DC    F'0'                LIST HITS                  11/83 DBC
DYNAMISS DC    F'0'                LIST MISSES                11/83 DBC
DYNADDED DC    F'0'                NAMES ADDED TO LIST        11/83 DBC
*                                  (INCLUDING STEALS)         11/83 DBC
DHEADLEN EQU   *-DYNAHEAD          L'HEADER                   11/83 DBC
         TITLE 'DYNL DSECT'                                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DYNL -- THIS DSECT MAPS A DYNAMIC BLDL LIST ENTRY. * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNL     DSECT ,                                              11/83 DBC
DYNLLRU# DS    F                   L.R.U. ALGORYTHM CONTROL   11/83 DBC
DYNLHITS DS    F                   HIT COUNT                  11/83 DBC
DYNLCLOK DS    F                   ENTRY CREATION TIME        11/83 DBC
DYNLELEN DS    H                   L'DIRECTORY ENTRY IN THIS  11/83 DBC
*                                  SLOT                       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GENERAL FORMAT PDS DIRECTORY ENTRY                 * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DENT     DS    0D                                             11/83 DBC
DENTNAME DS    CL8                 MEMBER NAME. NOTE, THIS    11/83 DBC
*                                  FIELD MUST BE DWORD        11/83 DBC
*                                  ALIGNED DUE TO A "CDS"     11/83 DBC
*                                  INSTRUCTION THAT IS ISSUED 11/83 DBC
*                                  AGAINST IT                 11/83 DBC
DYNLLOCK EQU   DENTNAME+3-DENTNAME LOCAL CONTROL LOCK BYTE    11/83 DBC
UNLOCKED EQU   C' '                LOCAL CONTROL LOCK FLAG    11/83 DBC
DENTTTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC
*                                  LIBRARY                    11/83 DBC
DENTCNCT DS    FL1                 LIBRARY CONCATENATION      11/83 DBC
*                                  INDEX                      11/83 DBC
DENTLIBF DC    AL1(LINKSVC)        ORIGINATING LIBRARY TYPE   11/83 DBC
*                                  ALWAYS "LINKLIST LIB")     11/83 DBC
DENTINDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC
DENTLUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC
DENTUSRD DS    XL(DENTLUSR*2)      USER DATA (MAX LENGTH)     11/83 DBC
DENTLEN  EQU   *-DENT              MAX D'ENTRY LENGTH         11/83 DBC
         SPACE 1                                              11/83 DBC
DYNLEND  DS    0D                  ALIGNMENT                  11/83 DBC
DYNLLEN  EQU   DYNLEND-DYNL        L'DYNAMIC BLDL LIST ENTRY  11/83 DBC
         TITLE 'IGC018 DSECT'                                 11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IGC018 -- THIS IS A DUMMY DSECT USED SIMPLY TO     * 11/83 DBC
*        SHOW WHERE, IN THE CODE, "BLDLBASE" IS LOADED AND  * 11/83 DBC
*        WHERE IT IS NOT.                                   * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
IGC018   DSECT ,                                              11/83 DBC
         TITLE 'VERSION DSECT'                                11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        VERSION -- THIS DSECT MAPS A VECTOR CONTAINING     * 11/83 DBC
*        POINTERS TO THE FOUR PARTS OF A VERSION TABLE.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSION  DSECT ,                                              11/83 DBC
IDVV     DS    A                   --> VERSION VERIFIER       11/83 DBC
SRCHPOVV DS    A                   --> ORIGINAL "SRCHPDS" COD 11/83 DBC
DFOUNDVV DS    A                   --> ORIGINAL "DFOUND" CODE 11/83 DBC
DATAOFFS DS    A                   --> IBM DATA FIELDS DESCRIPTORS  DBC
         TITLE 'ORIGINAL DSECT'                               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        ORIGINAL -- THIS DSECT MAPS CONTROL BLOCKS (PARTS  * 11/83 DBC
*        ONE, TWO, AND THREE OF THE VARIOUS VERSION TABLES) * 11/83 DBC
*        THAT DESCRIBE SECTIONS OF ORIGINAL CODE IN IGC018. * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ORIGINAL DSECT ,                                              11/83 DBC
ORIGLOC  DS    Y                   OFFSET TO ORIGINAL CODE'S LOCATION C
ORIGLEN  DS    Y                   ORIGINAL CODE'S LENGTH     11/83 DBC
ORIGCODE DS    0X                  ORIGINAL CODE              11/83 DBC
         TITLE 'FIELDS DSECT'                                 11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        FIELDS -- THIS DSECT MAPS TABLES THAT DESCRIBE IBM * 11/83 DBC
*        PRIVATE DATA FIELDS. EACH ENTRY CORRESPONDS EITHER * 11/83 DBC
*        TO A DATA FIELD OR TO IMMEDIATE DATA THAT DYNABLDL * 11/83 DBC
*        REFERENCES BUT THAT IS PRIVATE TO IBM AND,         * 11/83 DBC
*        THEREFORE, MAY CHANGE ACCROSS VARIOUS VERSIONS OF  * 11/83 DBC
*        IGC018.                                            * 11/83 DBC
*                                                           * 11/83 DBC
*        DATA FIELD ENTRIES CONSIST OF AN S-CON             * 11/83 DBC
*        (BASE-REGISTER/DISPLACEMENT) WHICH CAN BE USED TO  * 11/83 DBC
*        REFERENCE THAT FIELD IN A PARTICULAR VERSION OF    * 11/83 DBC
*        IGC018.                                            * 11/83 DBC
*                                                           * 11/83 DBC
*        "IMMEDIATE DATA" ENTRIES CONSIST OF A SINGLE BYTE  * 11/83 DBC
*        CONTAINING THE ACTUAL BIT PATTERN USED BY A        * 11/83 DBC
*        PARTICULAR VERSION OF IGC018 TO REPRESENT THE      * 11/83 DBC
*        IMMEDIATE DATA.                                    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
FIELDS   DSECT ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        VARIOUS BASE REGISTERS USED BY IGC018.             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
RBASE    DS    S                   IGC018'S PROGRAM BASE      11/83 DBC
*                                  REGISTER DESCRIPTOR. THIS  11/83 DBC
*                                  S-CON GIVES THE            11/83 DBC
*                                  PROGRAMMING BASE REGISTER  11/83 DBC
*                                  (USUALLY R12) AND THE      11/83 DBC
*                                  RELATIVE BASE ADDRESS      11/83 DBC
*                                  (USUALLY +2) USED BY       11/83 DBC
*                                  IGC018.                    11/83 DBC
         SPACE 1                                              11/83 DBC
RPDS1    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC
*                                  POINT TO THE FOUND PDS     11/83 DBC
*                                  DIRECTORY ENTRY AT THE     11/83 DBC
*                                  TIME THAT "DFOUND" IS      11/83 DBC
*                                  CALLED.                    11/83 DBC
RLIST    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC
*                                  POINT TO THE USER'S BLDL   11/83 DBC
*                                  PARAMETER LIST.            11/83 DBC
RDCB     DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC
*                                  POINT TO THE DCB FOR THE   11/83 DBC
*                                  LIBRARIES CURRENTLY BEING  11/83 DBC
*                                  SEARCHED.                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FIELDS IN IGC018'S DYNAMIC WORK AREA               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
RDAREA   DS    S                   BASE/DISPLACEMENT          11/83 DBC
*                                  NOTE, THIS FIELD IS A 256  11/83 DBC
*                                  BYTE DIRECTORY BLOCK       11/83 DBC
*                                  BUFFER WHOSE INTERNAL      11/83 DBC
*                                  STRUCTURE IS PUBLIC AND    11/83 DBC
*                                  WHICH, AT THE TIME THE     11/83 DBC
*                                  SRCHPDS HOOK ROUTINE IS    11/83 DBC
*                                  CALLED, CAN BE USED BY     11/83 DBC
*                                  DYNABLDL FOR ITS OWN       11/83 DBC
*                                  PURPOSES.                  11/83 DBC
         SPACE 1                                              11/83 DBC
CONCAT#  DS    S                   BASE/DISPLACEMENT          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FIELDS IN IGC018'S SVRB EXTENDED SAVE AREA         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
EXSKEY   DS    S                   BASE/DISPLACEMENT          11/83 DBC
EXSFLG   DS    S                   BASE/DISPLACEMENT          09/84 DBC
EXSBLDL  DS    B                   FLAG'S BIT VALUE           09/84 DBC
         SPACE 3                                              11/83 DBC
FIELDSLN EQU   *-FIELDS            L'DATA AREA                11/83 DBC
         TITLE 'DYNAWA DSECT'                                 11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DYNAWA -- DYNAMIC WORK AREA USED BY THE TWO HOOK   * 11/83 DBC
*        ROUTINES. THE "SRCHPDS" ROUTINE MAPS THIS AREA     * 11/83 DBC
*        INTO THE "RDAREA" FIELD OF BLDL'S "WORKAREA" DSECT * 11/83 DBC
*        WHICH IS AN I/O BUFFER FOR DIRECTORY BLOCKS AND IS * 11/83 DBC
*        NOT IN USE AT THE TIME THAT "SRCHPDS" IS CALLED.   * 11/83 DBC
*        THE "DFOUND" ROUTINE HAS TO GETMAIN ITS "DYNAWA"   * 11/83 DBC
*        AREA SINCE THE "RDAREA" FIELD IS IN USE AT THE     * 11/83 DBC
*        TIME THAT "DFOUND" IS CALLED.                      * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNAWA   DSECT ,                   LOCAL DYNAMIC WORK AREA    11/83 DBC
REGSAVE  DS    13A                 REGISTER SAVE AREA         11/83 DBC
CLOKSAVE DS    2A                  "STCK" BUFFER              11/83 DBC
KEYSAVE  DS    X                   CALLER'S KEY SAVE AREA     11/83 DBC
USERKEY  DS    X                   USER'S KEY SAVE AREA       11/83 DBC
BLDLFLG  DS    B                   IGC018'S EXSFLG SAVE AREA  09/84 DBC
CCIDSAVE DS    X                   CONCATENATION INDEX SAVE A 11/83 DBC
DYNAWAL  EQU   *-DYNAWA            L'DYNAWA                   11/83 DBC
         #TEST SIZE=(DYNAWAL,LE,256) MUST FIT WITHIN IGC018'S 11/83 DBC*
                                   "RDAREA" FIELD             11/83 DBC
         TITLE 'INFO DSECT'                                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        INFO -- THIS DSECT MAPS THE INFORMATION MESSAGE    * 11/83 DBC
*        PRINTED BY THE REPORT FUNCTION FOR EACH DYNAMIC    * 11/83 DBC
*        BLDL TABLE ENTRY. NOTE, EACH MESSAGE LINE CONTAINS * 11/83 DBC
*        THREE SEGMENTS. THE FIRST CONTAINS INFORMATION     * 11/83 DBC
*        SORTED BY BLDL MEMBER NAME. THE SECOND CONTAINS    * 11/83 DBC
*        INFORMATION SORTED BY HITS FREQUENCY. THE THIRD    * 11/83 DBC
*        CONTAINS INFORMATION SORTED BY LEAST RECENT USAGE. * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
INFO     DSECT ,                                              11/83 DBC
COUNT    DS    CL3,C' '            MSG LINE NUMBER            11/83 DBC
         SPACE 1                                              11/83 DBC
NAMEBAR  DS    C'|',C' '           GUTTER                     11/83 DBC
NAMENAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC
NAMELIB# DS    CL2,C' '            LINKLIST LIB ID NUMBER     11/83 DBC
NAMEHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC
         SPACE 1                                              11/83 DBC
HITSBAR  DS    C'|',C' '           GUTTER                     11/83 DBC
HITSHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC
HITSRENT DS    C                   REENTRANT MODULE SIGNAL    08/84 DBC
HITSNAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC
HITSIDLE DS    CL4,C' '            ENTRY'S IDLE TIME          11/83 DBC
HITSAGE  DS    CL4,C' '            ENTRY AGE                  11/83 DBC
         SPACE 1                                              11/83 DBC
LRUBAR   DS    C'|',C' '           GUTTER                     11/83 DBC
LRUIDLE  DS    CL4,C' '            IDLE INTERVAL              11/83 DBC
LRUNAME  DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC
LRUHITS  DS    CL5                 HITS COUNT                 11/83 DBC
         SPACE 1                                              11/83 DBC
INFOLEN  EQU   *-INFO              MESSAGE LENGTH             11/83 DBC
         #TEST SIZE=(INFOLEN,LE,LEN3270) SHOULD FIT ON A 3270 11/83 DBC
         TITLE 'INITIAL ENTRY - FUNCTION SELECTION'           11/83 DBC
************************************************************* 11/83 DBC
*        STANDARD NON-REENTRANT ENTRY LINKAGE               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNABLDL #ENTER 'COPYRIGHT DAVID B. COLE - 1983',BASES=2      11/83 DBC
         L     R3,0(,R1)           LOAD THE PARM FIELD PTR    11/83 DBC
         LA    R3,0(,R3)           PURIFY IT                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        ENQ TO SERIALIZE DYNABLDL PROCESSING               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ENQ   MF=(E,SERIALIZ)                                11/83 DBC
         OI    FLAG,ENQED          SET AUDIT FLAG             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GET THE CURRENT T.O.D. ISSOLATE BITS 10-41 WHICH   * 11/83 DBC
*        MEASURE TIME RANGING FROM ABOUT 1/1000TH OF A      * 11/83 DBC
*        SECOND UP TO APPROXIMATELY ONE MONTH. NOTE, THIS   * 11/83 DBC
*        IS THE SAME TIME SCALE USED BY THE SRM FOR ITS     * 11/83 DBC
*        INTERVAL TIMINGS.                                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STCK  CLOCK               GET THE TOD CLOCK          11/83 DBC
         LM    R0,R1,CLOCK         LOAD THE VALUE             11/83 DBC
         SLDL  R0,CLOKSHFT         ISSOLATE BITS 10-41 INTO   11/83 DBC
*                                  REGISTER 0.                11/83 DBC
         ST    R0,CLOCK            STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        LOCATE THE BLDL SVC ROUTINE (IGC018).              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     BLDLBASE,CVTPTR     --> CVT                    11/83 DBC
         L     BLDLBASE,CVTABEND-CVTMAP(,BLDLBASE) --> SCVT   11/83 DBC
         L     BLDLBASE,SCVTSVCT-SCVTSECT(,BLDLBASE) --> SVCTABLE 3 DBC
         L     BLDLBASE,SVCENTRY-SVC+BLDLSVC*SVCENTLN(,BLDLBASE) 83 DBC
*                                  --> IGC018                 11/83 DBC
         USING IGC018,BLDLBASE     SIGNAL THIS FACT           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        IDENTIFY WHICH VERSION OF IGC018 IS IN THIS        * 11/83 DBC
*        SYSTEM.                                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R2,VERSIONS-4       --> RECOGNITION VECTOR     11/83 DBC
         BALR  R4,0                LOAD LOOP POINT            11/83 DBC
         LA    R2,4(,R2)           --> NEXT TABLES PTR        11/83 DBC
         ICM   VERSBASE,15,0(R2)   --> SPECIFIC TABLES VECTOR 11/83 DBC
*                                  EO-RECOG VECTOR?           11/83 DBC
         BZ    UNRECOGN            YES, IGC018 NOT RECOGNIZED 11/83 DBC
         USING VERSION,VERSBASE    NO, DCL TABLE VECTOR BASE  11/83 DBC
         L     R1,IDVV             --> IDENTIFIER CODE        11/83 DBC
         BAL   R14,VERIFY          DOES IGC018 MATCH THIS?    11/83 DBC
         BR    R4                  +0 NO, KEEP TRYING         11/83 DBC
         NOPR  0                      (FILLER)                11/83 DBC
*                                  +4 YES, PROCEED            11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        THE CURRENT VERSION OF IGC018 HAS BEEN RECOGNIZED. * 11/83 DBC
*        NOW EXAMINE THE "SRCHPDS" HOOK LOCATION TO SEE     * 11/83 DBC
*        WHAT IT CONTAINS.                                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC
         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC
         CLC   0(SRCHPOAA-SRCHPOHH,R15),SRCHPOHH HAS THE      11/83 DBC
*                                  SRCHPO HOOK ALREADY BEEN   11/83 DBC
*                                  SET?                       11/83 DBC
         BE    VEROK1              YES, PROCEED               11/83 DBC
         OI    FLAG,SRCHPO00       NO, REMEMBER               11/83 DBC
         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC
*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC
         B     BADSTRUC            +0 NO, ERROR               11/83 DBC
*                                  +4 YES, PROCEED            11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
VEROK1   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW DO THE SAME FOR THE "DFOUND" HOOK LOCATION.    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC
         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC
         CLC   0(DFOUNDAA-DFOUNDHH,R15),DFOUNDHH HAS THE      11/83 DBC
*                                  DFOUND HOOK ALREADY BEEN   11/83 DBC
*                                  SET?                       11/83 DBC
         BE    VEROK2              YES, PROCEED               11/83 DBC
         OI    FLAG,DFOUND00       NO, REMEMBER               11/83 DBC
         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC
*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC
         B     BADSTRUC            +0 NO, ERROR               11/83 DBC
*                                  +4 YES, PROCEED            11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
VEROK2   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        EXAMINE THE PARM FIELD TO DETERMINE THE DESIRED    * 11/83 DBC
*        FUNCTION ("START", "STOP", OR "REPORT").           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LTR   R3,R3               IS A PARM FIELD SET UP?    11/83 DBC
         BZ    START               NO, ASSUME "START"         11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,PARMS-(PRMROOTL-(L'PRMLEN-1)) YES, PRIME   11/83 DBC
         SR    R2,R2               PRIME LENGTH REGISTER      11/83 DBC
         BALR  R14,0               LOAD SCAN LOOP HEAD        11/83 DBC
         LA    R15,PRMROOTL-(L'PRMLEN-1)(R2,R15) --> NEXT ENT 11/83 DBC
         ICM   R2,3,PRMLEN(R15)    GET L'ENTRY; EO-TABLE?     11/83 DBC
         BM    INVALID             YES, ERROR                 11/83 DBC
         LA    R2,L'PRMLEN-1(,R2)  NO, GET L'TEXT+L'LENFLD-1  11/83 DBC
         CLC   0(*-*,R3),PRMTEXT-2(R15) (EXECUTED)            11/83 DBC
         #TEST SIZE=(PRMTEXT-2,EQ,PRMLEN)                     11/83 DBC
         EX    R2,*-6              RIGHT ENTRY?               11/83 DBC
         BHR   R14                 NOT YET, CONTINUE SEARCH   11/83 DBC
         BL    INVALID             NO, INVALID PARM           11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R15,PRMHNDLR(,R15)  YES, LOAD HANDLER ADDRESS  11/83 DBC
         BR    R15                 GOTO THE HANDLER           11/83 DBC
         TITLE 'START -- DYNAMIC BLDL STARTUP ROUTINE'        11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        START -- THIS ROUTINE STARTS UP DYNAMIC BLDL       * 11/83 DBC
*        PROCESSING.                                        * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        START PROCESSING REQUIRES AUTHORIZATION. TEST THIS * 11/83 DBC
*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC
*        STATE.                                             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
START    MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC
         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        START PROCESSING CAN PROCEED ONLY IF BOTH IGC018   * 11/83 DBC
*        HOOKS ARE NOT YET SET. CHECK THIS OUT.             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOK LOCATIONS 11/83 DBC
*                                  CLEAR?                     11/83 DBC
         BZ    DONEB4              NO, BOTH ARE SET; EXIT.    11/83 DBC
         BM    MESS                NO, ONE IS, ONE ISN'T; THE 11/83 DBC
*                                  USER MUST INVOKE STOP      11/83 DBC
*                                  PROCESSING TO CLEAN UP THE 11/83 DBC
*                                  MESS.                      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        IGC018 HAS BEEN POSITIVELY RECOGNIZED. NOW ADJUST  * 11/83 DBC
*        ALL IBM PRIVATE FIELD REFERENCES, CONTAINED IN THE * 11/83 DBC
*        TWO HOOK ROUTINES ("SRCHPDS" AND "DFOUND"), SO     * 11/83 DBC
*        THAT THEY CORRESPOND CORRECTLY TO THE RECOGNIZED   * 11/83 DBC
*        VERSION OF IGC018. NOTE, I DO THIS NOW, PRIOR TO   * 11/83 DBC
*        MOVING THE HOOK ROUTINES TO SP245, SO THAT I DON'T * 11/83 DBC
*        HAVE TO DO IT IN KEY-0.                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        DEVELOP A RETURN DESCRIPTOR FOR THE SRCHPDS HOOK.  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DATAOFFS         --> IBM PRIVATE FIELDS     11/83 DBC
*                                  DESCRIPTORS                11/83 DBC
         USING FIELDS,R1           DCL A BASE FOR THEM        11/83 DBC
         SR    R14,R14             CLEAR FOR INSERT           11/83 DBC
         ICM   R14,3,RBASE         GET IGC018'S BASE          11/83 DBC
*                                  DESCRIPTOR                 11/83 DBC
         SRDL  R14,12              SEPARATE THE DISPLACEMENT  11/83 DBC
*                                  FROM THE BASE REG          11/83 DBC
         SRL   R15,20              ALIGN THE DISPLACEMENT     11/83 DBC
         SLL   R14,12              ALIGN THE REG VALUE        11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,SRCHPOVV         --> SRCHPDS VERIFY DATA    11/83 DBC
         DROP  R1                  RELEASE FIELDS BASE        11/83 DBC
         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC
         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC
         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC
*                                  DISPLACEMENT               11/83 DBC
         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC
*                                  TO DETERMINE THE ADDRESS   11/83 DBC
*                                  OF THE LOCATION PAST THE   11/83 DBC
*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC
*                                  BASE REGISTER.             11/83 DBC
         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC
         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC
         OR    R0,R14              NO, GET COMBINED           11/83 DBC
*                                  BASE/DISPLACEMENT VALUE    11/83 DBC
         STH   R0,SRCHPOXX         STORE FOR USE BY @ZAP      11/83 DBC
         DROP  R1                  RELEASE SRCHPDS VERIFY     11/83 DBC
*                                  DATA BASE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW DO THE SAME FOR THE DFOUND HOOK.               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> DFOUND VERIFY DATA     11/83 DBC
         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC
         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC
         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC
*                                  DISPLACEMENT               11/83 DBC
         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC
*                                  TO DETERMINE THE ADDRESS   11/83 DBC
*                                  OF THE LOCATION PAST THE   11/83 DBC
*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC
*                                  BASE REGISTER.             11/83 DBC
         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC
         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC
         OR    R0,R14              NO, GET COMBINED           11/83 DBC
*                                  BASE/DISPLACEMENT VALUE    11/83 DBC
         STH   R0,DFOUNDXX         STORE FOR USE BY @ZAP      11/83 DBC
         DROP  R1                  RELEASE DFOUND VERIFY DATA 11/83 DBC
*                                  BASE                       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW CALL @ZAP TO ADJUST ALL REFERENCES TO IBM      * 11/83 DBC
*        PRIVATE DATA FIELDS.                               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DATAOFFS         --> THE TABLE OF IBM       11/83 DBC
*                                  PRIVATE FIELD REFERENCE    11/83 DBC
*                                  DESCRIPTORS.               11/83 DBC
         L     R15,=A(@ZAP)        --> THE GRAND ADJUSTER     11/83 DBC
         BALR  R14,R15             ADJUST IBM FIELDS REFS     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        NOW ALLOCATE GLOBAL, FIXED, KEY-0, FETCH           * 11/83 DBC
*        ACCESSABLE MEMORY (SP245) INTO WHICH THE HOOK      * 11/83 DBC
*        ROUTINES AND DYNAMIC BLDL TABLE WILL BE BUILT. THE * 11/83 DBC
*        AREA WILL BE USED AS FOLLOWS.                      * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE "DYNAHEAD" TABLE.                            * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE "SRCHPDS" HOOK ROUTINE CONSTRUCTED AS        * 11/83 DBC
*          FOLLOWS:                                         * 11/83 DBC
*          - THE "SRCHPDS" CODE RELOCATED FROM THIS MODULE, * 11/83 DBC
*          - THE "SRCHPDS" VERIFIED CODE COPIED FROM        * 11/83 DBC
*            IGC018,                                        * 11/83 DBC
*          - THE "SRCHPOBC" BRANCH STATEMENT.               * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE "DFOUND" HOOK ROUTINE CONSTRUCTED AS         * 11/83 DBC
*          FOLLOWS:                                         * 11/83 DBC
*          - THE "DFOUND" CODE RELOCATED FROM THIS MODULE,  * 11/83 DBC
*          - THE "DFOUND" VERIFIED CODE COPIED FROM IGC018, * 11/83 DBC
*          - THE "DFOUNDBC" BRANCH STATEMENT.               * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE DYNAMIC BLDL TABLE, DWORD ALIGNED.           * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE  THE AMOUNT OF MEMORY NEEDED.            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R0,7                GET DWORD ROUNDER          11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R3,(DHEADLEN+7)/8*8 GET L'DYNAHEAD ROUNDED     11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,SRCHPOVV         --> VERIFIER               11/83 DBC
         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC
         LA    R1,SRCHPOLL+L'SRCHPOBC+7(,R1) INCLUDE L'BODY - 11/83 DBC
         OR    R1,R0                ROUNDED UP TO -           11/83 DBC
         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC
         AR    R3,R1               ACCUMULATE                 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> VERIFIER               11/83 DBC
         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC
         LA    R1,DFOUNDLL+L'DFOUNDBC+7(,R1) INCLUDE L'BODY - 11/83 DBC
         OR    R1,R0                ROUNDED UP TO -           11/83 DBC
         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC
         AR    R3,R1               ACCUMULATE                 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,DYNLLEN          GET L'DLIST ENTRY          11/83 DBC
         #TEST SIZE=(DYNLLEN/8*8,EQ,DYNLLEN)                  11/83 DBC
         MH    R1,=Y(ENTRYCNT)     GET DLIST TABLE SIZE       11/83 DBC
         AR    R3,R1               ACCUMULATE IT              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GETMAIN AND CLEAR THE AREA                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2 KEY0    11/83 DBC
         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC
         SPACE 1                                              11/83 DBC
         ICM   R3,8,=AL1(245)      GET SUBPOOL ID             11/83 DBC
         GETMAIN R,LV=(R3)         ALLOCATE GLOBAL MEMORY     11/83 DBC
         LR    TABLBASE,R1         COPY AREA PTR              11/83 DBC
         USING DYNAHEAD,TABLBASE   DCL A BASE FOR IT          11/83 DBC
         LR    R0,R1               COPY THE AREA PTR          11/83 DBC
         LR    R1,R3               COPY THE AREA LENGTH       11/83 DBC
         SR    R15,R15             PREPARE TO CLEAR THE AREA  11/83 DBC
         MVCL  R0,R14              CLEAR THE AREA             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        BEGIN TO CONSTRUCT THE DYNAHEAD TABLE              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   DHID,=CL8'DYNAHEAD' STORE TABLE ID             11/83 DBC
         ST    TABLBASE,AREA       SAVE A(AREA)               11/83 DBC
         ST    R3,AREASPLN         SAVE SP & LEN OF AREA      11/83 DBC
         MVC   DYNACLOK,CLOCK      COPY TOD BITS 10-41        11/83 DBC
         LA    R14,DYNAHEAD+(DHEADLEN+7)/8*8 --> PAST TABLE   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE SRCHPDS HOOK ROUTINE                 * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R14,SRCHPOAA        STORE IGC018'S POINTER     11/83 DBC
         ST    R14,SRCHPOPT        STORE A(SRCHPDS HOOK)      11/83 DBC
         ST    TABLBASE,SRCHPODH   A(DYNAHEAD) --> SRCHPDS    11/83 DBC
         LA    R0,SRCHPDS          --> SRCHPDS SOURCE         11/83 DBC
         LA    R1,SRCHPOLL         GET ITS LENGTH             11/83 DBC
         LR    R15,R1              GET L'SINK                 11/83 DBC
         MVCL  R14,R0              COPY BODY OF SRCHPDS HOOK  11/83 DBC
         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC
         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC
         LR    R1,R15              COPY                       11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC
         MVC   0(L'SRCHPOBC,R14),SRCHPOBC COPY RETURN INSTR   11/83 DBC
         LA    R14,L'SRCHPOBC+7(,R14) ADVANCE -               11/83 DBC
         SRL   R14,3                SCANNER -                 11/83 DBC
         SLL   R14,3                 ROUNDED                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE DFOUND HOOK ROUTINE                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R14,DFOUNDAA        STORE IGC018'S POINTER     11/83 DBC
         ST    R14,DFOUNDPT        STORE A(DFOUND HOOK)       11/83 DBC
         ST    TABLBASE,DFOUNDDH   A(DYNAHEAD) --> DFOUND     11/83 DBC
         LA    R0,DFOUND           --> DFOUND SOURCE          11/83 DBC
         LA    R1,DFOUNDLL         GET ITS LENGTH             11/83 DBC
         LR    R15,R1              GET L'SINK                 11/83 DBC
         MVCL  R14,R0              COPY BODY OF DFOUND HOOK   11/83 DBC
         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC
         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC
         LR    R1,R15              COPY                       11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC
         MVC   0(L'DFOUNDBC,R14),DFOUNDBC COPY RETURN INSTR   11/83 DBC
         LA    R14,L'DFOUNDBC+7(,R14) ADVANCE -               11/83 DBC
         SRL   R14,3                SCANNER -                 11/83 DBC
         SLL   R14,3                 ROUNDED                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE DYNAMIC LIST TABLE DESCRIPTOR AND    * 11/83 DBC
*        SKELETON.                                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R14,DYNAFIRS        STORE SO-TABLE             11/83 DBC
         LA    R0,DYNLLEN          GET L'ENTRY                11/83 DBC
         ST    R0,DYNAELEN         STORE                      11/83 DBC
         LR    R1,R0               COPY                       11/83 DBC
         MH    R1,=Y(ENTRYCNT-1)   GET OFFSET TO LAST ENTRY   11/83 DBC
         AR    R1,R14              CNVRT TO ADDRESS           11/83 DBC
         ST    R1,DYNALAST         STORE                      11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R14            DCL DYNL ENTRY BASE        11/83 DBC
DYNLINIT OI    DENTNAME+DYNLLOCK,UNLOCKED "NOT LOCKED"        11/83 DBC
         BXLE  R14,R0,DYNLINIT     LOOP FOR ALL ENTRIES       11/83 DBC
         DROP  R14                 RELEASE DYNL ENTRY BASE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        COPY THE HOOKS TO IGC018.                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC
         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC
         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC
         MVC   0(DFOUNDHL,R1),DFOUNDHH COPY HOOK TO IGC018    11/83 DBC
         NI    FLAG,255-DFOUND00   REMEMBER HOOK NOW SET      11/83 DBC
         SPACE 3                                              11/83 DBC
         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC
         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC
         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC
         MVC   0(SRCHPOHL,R1),SRCHPOHH COPY HOOK TO IGC018    11/83 DBC
         NI    FLAG,255-SRCHPO00   REMEMBER HOOK NOW SET      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        START PROCESSING DONE. CLEAN UP AND EXIT.          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  TABLBASE            RELEASE GLOBAL AREA BASE   11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET KEYADDR=PSWKEY,WORKREG=2 RESTORE KEY8        11/83 DBC
         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC
         SPACE 1                                              11/83 DBC
         B     STARTED             ISSUE MSG AND EXIT         11/83 DBC
         TITLE 'STOP -- DYNAMIC BLDL SHUTDOWN ROUTINE'        11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        STOP -- THIS ROUTINE SHUTS DOWN DYNAMIC BLDL       * 11/83 DBC
*        PROCESSING.                                        * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        STOP PROCESSING REQUIRES AUTHORIZATION. TEST THIS  * 11/83 DBC
*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC
*        STATE.                                             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
STOP     MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC
         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        I WILL PROCEED ONLY IF AT LEAST ONE HOOK IS SET.   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SRCHPO00+DFOUND00 IS EITHER HOOK SET?     11/83 DBC
         BO    STOPDB4             NO, JUST EXIT              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        AT LEAST ONE HOOK HAS BEEN PREVIOUSLY SET. LOAD    * 11/83 DBC
*        KEY0 SO THAT I CAN CLEAR IT (OR THEM).             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2         11/83 DBC
         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CLEAR THE "DFOUND" HOOK FIRST.                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         BALR  TABLBASE,0          LOAD A NON-ZERO POINTER TO 11/83 DBC
*                                  AN ACCESSIBLE GARBAGE AREA 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,DFOUND00       IS THIS HOOK ALREADY CLER? 11/83 DBC
         BNZ   CLEARD1             YES, SKIP                  11/83 DBC
         L     R1,DFOUNDVV         NO, --> VERIFY DATA        11/83 DBC
         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC
         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC
         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC
         L     TABLBASE,DFOUNDAA-DFOUNDHH(,R15) --> INTERCEPT 11/83 DBC
         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC
*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC
         MVC   0(DFOUNDHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC
         OI    FLAG,DFOUND00       SET AUDIT FLAG             11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
CLEARD1  DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW CLEAR THE "SRCHPDS" HOOK.                      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SRCHPO00       IS THIS HOOK ALREADY CLER? 11/83 DBC
         BNZ   CLEARD2             YES, SKIP                  11/83 DBC
         L     R1,SRCHPOVV         NO, --> VERIFY DATA        11/83 DBC
         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC
         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC
         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC
         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' IS     11/83 DBC
*                                  CONTROL TABLE PTR OK?      11/83 DBC
         BE    GOTDHPTR            YES, PROCEED               11/83 DBC
         L     TABLBASE,SRCHPOAA-SRCHPOHH(,R15) NO, -->       11/83 DBC
*                                  INTERCEPT ROUTINE          11/83 DBC
         L     TABLBASE,SRCHPODH-SRCHPDS(,TABLBASE) -->       11/83 DBC
*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC
GOTDHPTR MVC   0(SRCHPOHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC
         OI    FLAG,SRCHPO00       SET AUDIT FLAG             11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
CLEARD2  DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW, IF I WAS ABLE TO GET A POINTER TO THE HEADER  * 11/83 DBC
*        TABLE, THEN FREEMAIN DYNABLDL'S GLOBAL DATA AREA.  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' DO I   11/83 DBC
*                                  HAVE A PTR TO THE CONTROL  11/83 DBC
*                                  TABLE?                     11/83 DBC
         BNE   FREED               NO, FORGET IT              11/83 DBC
         USING DYNAHEAD,TABLBASE   YES, DCL HEADER TABLE'S    11/83 DBC
*                                  BASE                       11/83 DBC
         L     R1,AREA             --> GLOBAL AREA            11/83 DBC
         L     R0,AREASPLN         GET ITS SUBPOOL AND LENGTH 11/83 DBC
         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC
         DROP  TABLBASE            RELEASE BASE               11/83 DBC
         SR    TABLBASE,TABLBASE   SET "TABLE FREED" SIGNAL   11/83 DBC
FREED    DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RESTORE KEY8.                                      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET KEYADDR=PSWKEY,WORKREG=2                     11/83 DBC
         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        EXIT ACCORDING TO WHETHER OR NOT I WAS ABLE TO     * 11/83 DBC
*        FREE THE GLOBAL AREA.                              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LTR   TABLBASE,TABLBASE   WAS THE GLOBAL AREA FOUND? 11/83 DBC
         BNZ   PARTSTOP            NO, ISSUE SPECIAL MSG      11/83 DBC
         B     STOPPED             YES, EXIT NORMALLY         11/83 DBC
         TITLE 'REPORT -- DYNAMIC BLDL ACTIVITY REPORTING ROUTINE'  DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        REPORT -- THIS ROUTINE GENERATES A REPORT OF       * 11/83 DBC
*        DYNAMIC BLDL'S ACTIVITY. THREE SORTS OF THE TABLE  * 11/83 DBC
*        ARE PRINTED IN 3-COLUMN FORMAT. THE FIRST LISTS    * 11/83 DBC
*        THE TABLE BY MEMBER NAME. THE SECOND LISTS IT BY   * 11/83 DBC
*        HIT COUNT (MOST HITS TO LEAST HITS). THE THIRD     * 11/83 DBC
*        LISTS THE TABLE BY L.R.U. CHARACTERISTIC (MOST TO  * 11/83 DBC
*        LEAST RECENTLY USED). ALSO A SUMMARY MESSAGE IS    * 11/83 DBC
*        BOTH PRINTED AND DISPLAYED VIA WTO GIVING THE      * 11/83 DBC
*        "HIT RATE" AND OTHER DATA.                         * 11/83 DBC
*                                                           * 11/83 DBC
*        OUTPUT IS WRITTEN TO SYSPRINT WHICH CAN HAVE ANY   * 11/83 DBC
*        RECORD FORMAT AND ANY RECORD LENGTH THAT CAN HOLD  * 11/83 DBC
*        AT LEAST 79 BYTES OF DATA. NOTE THAT THE RECORD    * 11/83 DBC
*        LENGTH IS SUITABLE FOR DISPLAY ON A 3270 TERMINAL. * 11/83 DBC
*                                                           * 11/83 DBC
*        IF SYSPRINT IS OMITTED, THEN ONLY A SUMMARY        * 11/83 DBC
*        MESSAGE IS DISPLAYED TO THE OPERATORS.             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        PROCEED ONLY IF DYNABLDL IS CURRENTLY ACTIVE.      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
REPORT   TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOKS IN?      11/83 DBC
         BNZ   DOWN                NO, EXIT                   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DYNABLDL IS ACTIVE. LOCATE THE DYNABLDL GLOBAL     * 11/83 DBC
*        AREA.                                              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     TABLBASE,DFOUNDVV   --> VERIFY DATA            11/83 DBC
         LH    TABLBASE,ORIGLOC-ORIGINAL(,TABLBASE) GET HOOK  11/83 DBC
*                                  OFFSET                     11/83 DBC
         LA    TABLBASE,IGC018(TABLBASE) CNVRT TO ADDRESS     11/83 DBC
         L     TABLBASE,DFOUNDAA-DFOUNDHH(,TABLBASE) -->      11/83 DBC
*                                  "SRCHPDS" INTERCEPT        11/83 DBC
         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC
*                                  CONTROL TABLE              11/83 DBC
         USING DYNAHEAD,TABLBASE   DCL ITS BASE               11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE FIRST SUMMARY MESSAGE.               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   STATBUF(11),=C'TABLE LIFE '                    11/83 DBC
         L     R1,CLOCK            GET CURRENT TIME           11/83 DBC
*                                  (SECONDS*1024)             11/83 DBC
         S     R1,DYNACLOK         GET TABLE LIFE             11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         SR    R0,R0               CLEAR AGAIN                11/83 DBC
         D     R0,=F'60'           CNVRT TO HOURS(R1) & MINS  11/83 DBC
         BAL   R14,ZONEIT          CNVRT HOURS TO EBCDIC      11/83 DBC
         MVC   STATBUF+11(*-*),0(R1) (EXECUTED)               11/83 DBC
         EX    R15,*-6             COPY TO MSG L-J            11/83 DBC
         LA    R5,STATBUF+12(R15)  LOAD SCANNER               11/83 DBC
         MVI   0(R5),C':'          DELIMITER                  11/83 DBC
         CVD   R0,DWORK            CNVRT MINS TO DECIMAL      11/83 DBC
         UNPK  1(2,R5),DWORK(8)    ZONE IT                    11/83 DBC
         OI    2(R5),C'0'          FIX THE FUCKING SIGN       11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   3(10,R5),=C', ENTRIES '                        11/83 DBC
         LM    R1,R3,DYNAFIRS      LOAD TABLE DESCRIPTOR      11/83 DBC
         LR    R0,R1               SAVE SO-TABLE              11/83 DBC
ENTCNT   CLI   DENTNAME-DYNL(R1),0 UNUSED SLOT YET?           04/84 JLC
         BE    ENTCNTZ             YES, DONE HERE             11/83 DBC
         BXLE  R1,R2,ENTCNT        NO, KEEP SCANNING          11/83 DBC
ENTCNTZ  SR    R1,R0               YES, GET LIST SIZE         11/83 DBC
         SR    R0,R0               CLEAR FIR DIVIDE           11/83 DBC
         DR    R0,R2               GET # USED SLOTS           11/83 DBC
         BAL   R14,ZONEIT          CONVERT IT TO EBCDIC       11/83 DBC
         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY IT JEFT JUSTIFIED     11/83 DBC
         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         CL    R5,=A(STATBUF+L'STATBUF) BUFFER OVERFLOW?      11/83 DBC
         #DIE  H                   YES, DESIGN ERROR          11/83 DBC
         LA    R1,STATBUF          NO, --> SO-BUFFER          11/83 DBC
         SR    R5,R1               GET L'MSG                  11/83 DBC
         STC   R5,STATBUF-1        STORE FOR OUTPUT ROUTINES  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE FIRST SUMMARY MESSAGE TO THE           * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC
         BNH   STATLNOK            NO, PROCEED                11/83 DBC
         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC
STATLNOK MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC
         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF COPY     11/83 DBC
         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC
         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR "PUTWTO"       11/83 DBC
         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE SECOND SUMMARY MESSAGE.              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   STATBUF2(5),=C'HITS '                          11/83 DBC
         L     R7,DYNAHITS         LOAD TOTAL HITS COUNT      11/83 DBC
         LR    R1,R7               COPY FOR CONVERSION        11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   STATBUF2+5(*-*),0(R1) (EXECUTED)               11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,STATBUF2+6(R15)  ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(9,R5),=C', MISSES '                          11/83 DBC
         ICM   R2,15,DYNAMISS      LOAD TOTAL MISSES; ANY?    11/83 DBC
         BZ    NO2NDMSG            NO, NO USAGE               11/83 DBC
         LR    R1,R2               COPY FOR CONVERSION        11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   9(*-*,R5),0(R1)     (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,10(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(13,R5),=C' (GOOD NAMES '                     11/83 DBC
         L     R3,DYNADDED         GET STEAL COUNT            11/83 DBC
         LR    R1,R3               COPY FOR CONVERSION        11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(12,R5),=C', BAD NAMES '                      11/83 DBC
         LR    R1,R2               GET MISS COUNT             11/83 DBC
         SR    R1,R3               SUBTR STEAL COUNT          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,13(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(12,R5),=C'), HIT RATE ' YES                  11/83 DBC
         AR    R2,R7               TOTAL USE COUNT            11/83 DBC
         MH    R7,=H'1000'         SHIFT THE DECIMAL PLACE    11/83 DBC
         SR    R6,R6               CLEAR FOR DIVIDE           11/83 DBC
         DR    R6,R2               GET HIT RATE TO A 10TH OF  11/83 DBC
*                                  A PERCENT                  11/83 DBC
         SR    R1,R1               CLEAR ROUNDER              11/83 DBC
         AR    R6,R6               DOUBLE THE REMAINDER       11/83 DBC
         CR    R6,R2               NEED TO ROUND UP?          11/83 DBC
         BL    NOROUNUP            NO, SKIP                   11/83 DBC
         LA    R1,1                YES, RESET THE ROUNDER     11/83 DBC
NOROUNUP AR    R1,R7               COPY AND ROUND FOR CNVRSN  11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,12(R15,R5)       --> LAST DIGIT ("10THS")   11/83 DBC
         MVC   1(1,R5),0(R5)       MOVE IT OUT OF THE WAY     11/83 DBC
         MVI   0(R5),C'.'          INSERT DECIMAL POINT       11/83 DBC
         MVI   2(R5),C'%'          INSERT PERCENT SIGN        11/83 DBC
         LA    R5,3(,R5)           ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         CL    R5,=A(STATBUF2+L'STATBUF2) BUFFER OVERFLOW?    11/83 DBC
         #DIE  H                   YES, DESIGN ERROR          11/83 DBC
         LA    R1,STATBUF2         NO, --> SO-BUFFER          11/83 DBC
         SR    R5,R1               GET L'MSG                  11/83 DBC
         STC   R5,STATBUF2-1       STORE FOR OUTPUT ROUTINES  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE SECOND SUMMARY MESSAGE TO THE          * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC
         BNH   STATLOK2            NO, PROCEED                11/83 DBC
         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC
STATLOK2 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC
         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF2 COPY    11/83 DBC
         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC
         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR "PUTWTO"       11/83 DBC
         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC
NO2NDMSG DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE THIRD SUMMARY MESSAGE.               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   STATBUF3(14),=C'MAX ENTRY AGE ' TEXT           11/83 DBC
         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC
         USING DYNL,R5             DCL SLOT BASE              11/83 DBC
         ICM   R0,15,DYNLCLOK      ANY SLOTS USED?            11/83 DBC
         BZ    NO3RDMSG            NO, SKIP THIS MSG          11/83 DBC
MXAGESCN CL    R0,DYNLCLOK         YES, ALREADY GOT OLDEST    11/83 DBC
*                                  BIRTHDATE?                 11/83 DBC
         BNH   MXAGENXT            YES, SKIP                  11/83 DBC
         ICM   R1,15,DYNLCLOK      NO, GET OLDEST; EO-USED?   11/83 DBC
         BZ    MXAGEGOT            YES, DONE HERE             11/83 DBC
         LR    R0,R1               NO, COPY                   11/83 DBC
MXAGENXT BXLE  R5,R6,MXAGESCN      CONTINUE SCANNING          11/83 DBC
         DROP  R5                  RELEASE SLOT BASE          11/83 DBC
MXAGEGOT L     R1,CLOCK            GET CURRENT TIME           11/83 DBC
         SR    R1,R0               CNVRT BIRTHDATE TO AGE     11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   STATBUF3+14(*-*),0(R1) (EXECUTED)              11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R4,STATBUF3+15(R15) ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(30,R4),=C' MINUTES, MAX ENTRY IDLE TIME '    11/83 DBC
         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC
         USING DYNL,R5             DCL SLOT BASE              11/83 DBC
         L     R0,DYNLLRU#         PRINT LIMIT TESTER         11/83 DBC
MXIDLELP CL    R0,DYNLLRU#         ALREADY GOT MOST IDLE?     11/83 DBC
         BNH   MXIDLENX            YES, SKIP                  11/83 DBC
         ICM   R1,15,DYNLLRU#      NO, GET MOST IDLE; EO-USD? 11/83 DBC
         BZ    MXIDLEGO            YES, DONE HERE             11/83 DBC
         LR    R0,R1               NO, COPY                   11/83 DBC
MXIDLENX BXLE  R5,R6,MXIDLELP      CONTINUE SCANNING          11/83 DBC
         DROP  R5                  RELEASE SLOT BASE          11/83 DBC
MXIDLEGO L     R1,CLOCK            GET CURRENT TIME           11/83 DBC
         SR    R1,R0               CNVRT IDLE TIME TO INTERVA 11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   30(*-*,R4),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R4,31(R15,R4)       ADVANCE SCANNER            11/83 DBC
         MVC   0(8,R4),=C' MINUTES' MORE TEXT                 11/83 DBC
         LA    R4,8(,R4)           ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         CL    R4,=A(STATBUF3+L'STATBUF3) BUFFER OVERFLOW?    11/83 DBC
         #DIE  H                   YES, DESIGN ERROR          11/83 DBC
         LA    R1,STATBUF3         NO, --> SO-BUFFER          11/83 DBC
         SR    R4,R1               GET L'MSG                  11/83 DBC
         STC   R4,STATBUF3-1       STORE FOR OUTPUT ROUTINES  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE THIRD SUMMARY MESSAGE TO THE           * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R4,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC
         BNH   STATLOK3            NO, PROCEED                11/83 DBC
         LA    R4,WTOMAXL-9        YES, RESET                 11/83 DBC
STATLOK3 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC
         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF3 COPY    11/83 DBC
         LA    R4,9(,R4)           ADJ L'MSG                  11/83 DBC
         STC   R4,WTOBUF+L'WTOHEAD-1 STORE FOR "PUTWTO"       11/83 DBC
         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC
NO3RDMSG DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        ATTEMPT TO OPEN SYSPRINT AND WRITE TITLE AND       * 11/83 DBC
*        STATUS LINES.                                      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         OPEN  (SYSPRINT,OUTPUT)   ATTEMPT THE OPEN           11/83 DBC
         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN OPENED?      11/83 DBC
         BZ    NOSYSP              NO, EXIT                   11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  DYNATIT,SUBAD=PUTSYSP YES, SEND TITLE          11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  NULL                SEND SPACER                11/83 DBC
         #PUT  STATBUF             SEND SUMMARY MESSAGE       11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  STATBUF2            PRINT 2ND MSG, IF ANY      11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  STATBUF3            PRINT 3RD MSG, IF ANY      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE THE LOCATION AND SIZE OF THE DYNAMIC     * 11/83 DBC
*        BLDL TABLE, AND THEN GETMAIN A LOCAL AREA THAT IS  * 11/83 DBC
*        LARGE ENOUGH TO HOLD THREE COPIES.                 * 05/84 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R5,R7,DYNAFIRS      LOAD THE TABLE DESCRIPTOR  11/83 DBC
         LR    R1,R5               COPY SCANNER               11/83 DBC
SIZESCAN CLI   DENTNAME-DYNL(R1),0 EMPTY SLOT YET?            04/84 JLC
         BE    SIZEGOTN            YES, SIZE FOUND            11/83 DBC
         BXLE  R1,R6,SIZESCAN      NO, CONTINUE SCANNING      11/83 DBC
SIZEGOTN SR    R1,R5               EMPTY SLOT FOUND; GET      11/83 DBC
*                                  TABLE SIZE; EMPTY?         11/83 DBC
         BNP   EMPTY               YES, EXIT WITH MSG         11/83 DBC
         LR    R7,R1               NO, SAVE TABLE SIZE        11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R0,0(R1,R1)         DOUBLE IT                  11/83 DBC
         AR    R0,R1               TRIPLE IT                  11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R0,RTBLSIZE         SAVE FOR FREEMAIN          11/83 DBC
         GETMAIN R,LV=(0)          GET A LOCAL AREA           11/83 DBC
         ST    R1,RTBLPTR          SAVE FOR FREEMAIN          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW MAKE THE FIRST COPY OF THE ACTIVE TABLE, AND   * 11/83 DBC
*        DETERMINE POINTERS TO WHERE THE OTHER TWO COPIES   * 11/83 DBC
*        WILL GO.                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R3,R1               SAVE 1ST COPY POINTER      11/83 DBC
         LR    R14,R5              --> COPY SOURCE            11/83 DBC
         LR    R15,R7              GET ITS LENGTH             11/83 DBC
         LR    R0,R3               --> COPY SINK              11/83 DBC
         LR    R1,R7               GET ITS LENGTH             11/83 DBC
         MVCL  R0,R14              MAKE THE 1ST COPY          11/83 DBC
         LR    R4,R0               SAVE SECOND COPY POINTER   11/83 DBC
         LA    R5,0(R7,R4)         GET 3RD COPY POINTER       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SORT THE FIRST COPY OF THE DYNA-TABLE IN           * 11/83 DBC
*        DESCENDING ORDER BY HITS COUNT.                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R15,R7              GET L'LIST                 11/83 DBC
         LR    R0,R6               GET L'ENTRY                11/83 DBC
         LR    R1,R3               GET A(LIST)                11/83 DBC
         LA    R2,SORTHITS         --> COMPARE ROUTINE        11/83 DBC
         BAL   R14,SORT            SORT THE MOTHER            11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CREATE AND SORT THE L.R.U. ORDERED LIST.           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R14,R4              --> COPY SINK              11/83 DBC
         LR    R15,R7              GET L'SINK                 11/83 DBC
         LR    R0,R3               --> COPY SOURCE            11/83 DBC
         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC
         MVCL  R14,R0              MAKE THE 2ND COPY          11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R15,R7              GET L'LIST                 11/83 DBC
         LR    R0,R6               GET L'ENTRY                11/83 DBC
         LR    R1,R4               GET A(LIST)                11/83 DBC
         LA    R2,SORTLRU          --> COMPARE ROUTINE        11/83 DBC
         BAL   R14,SORT            SORT THE LIST              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CREATE AND SORT THE NAME ORDERED LIST.             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R14,R5              --> COPY SINK              11/83 DBC
         LR    R15,R7              GET L'SINK                 11/83 DBC
         LR    R0,R3               --> COPY SOURCE            11/83 DBC
         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC
         MVCL  R14,R0              MAKE THE 3RD COPY          11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R15,R7              GET L'LIST                 11/83 DBC
         LR    R0,R6               GET L'ENTRY                11/83 DBC
         LR    R1,R5               GET A(LIST)                11/83 DBC
         LA    R2,SORTNAME         --> COMPARE ROUTINE        11/83 DBC
         BAL   R14,SORT            SORT THE LIST              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        PRINT THE TABLE TITLE LINES.                       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  NULL                SPACE                      11/83 DBC
         #PUT  NULL                SPACE                      11/83 DBC
         #PUT  SORTTIT             TITLE                      11/83 DBC
         #PUT  SORTTIT0            SUB-TITLE                  08/84 DBC
         #PUT  SORTSUBT            SUB-TITLE                  11/83 DBC
         #PUT  INFOBUF             BARRED SPACER              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SCAN THE THREE TABLES SIMULTANIOUSLY TO GENERATE   * 11/83 DBC
*        THE THREE REPORTS IN 3-COLUMN FORMAT.              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R2,INFOBUF          --> MSG BUFFER             11/83 DBC
         USING INFO,R2             DECLARE A BASE FOR IT      11/83 DBC
         SPACE 1                                              11/83 DBC
         AR    R7,R3               --> PAST 1ST TABLE         11/83 DBC
         SR    R7,R6               --> LAST ENTRY (BXLE LIM)  11/83 DBC
         SPACE 1                                              11/83 DBC
INFOLOOP MVI   INFO,C' '           CLEAR THE -                11/83 DBC
         MVC   INFO+1(INFOLEN-1),INFO MESSAGE BUFFER          11/83 DBC
         MVI   NAMEBAR,C'|'        INSERT GUTTER              11/83 DBC
         MVI   HITSBAR,C'|'        INSERT GUTTER              11/83 DBC
         MVI   LRUBAR,C'|'         INSERT GUTTER              11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,1                GET INCRIMENT              11/83 DBC
         AH    R1,COUNTER          INCRIMENT LINE COUNTER     11/83 DBC
         STH   R1,COUNTER          STORE NEW VALUE            11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   COUNT,0(R1)         COPY TO MSG L-J            11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FORMAT INFO FROM THE HITS SORTED TABLE.            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC
         MVC   HITSNAME,DENTNAME   MEMBER NAME                11/83 DBC
         SPACE 1                                              08/84 DBC
         MVI   HITSRENT,C' '       CLEAR RENT SIGNAL          08/84 DBC
         TM    PDS2ATR-PDS2+DENT,PDS2RENT REENTRANT MODULE?   08/84 DBC
         BZ    HINORENT            NO, SKIP                   08/84 DBC
         MVI   HITSRENT,C'*'       YES, SIGNAL THAT FACT      08/84 DBC
HINORENT DS    0H                                             08/84 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC
*                                  SECONDS*1024)              11/83 DBC
         S     R1,DYNLLRU#         CNVRT TO INTERVAL          11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC
         MVC   HITSIDLE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY      11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'HITSIDLE-1,C' ' OVERFLOW?  11/83 DBC
         BE    HIFITS              NO, SKIP                   11/83 DBC
         MVC   HITSIDLE,=10C'*'    YES, "SAY SO"              11/83 DBC
HIFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC
*                                  SECONDS*1024)              11/83 DBC
         S     R1,DYNLCLOK         CNVRT TO INTERVAL          11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC
         MVC   HITSAGE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY       11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'HITSAGE-1,C' ' OVERFLOW?   11/83 DBC
         BE    HAFITS              NO, SKIP                   11/83 DBC
         MVC   HITSAGE,=10C'*'     YES, "SAY SO"              11/83 DBC
HAFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   HITSHITS,ZONEBUF+L'ZONEBUF-L'HITSHITS COPY     11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'HITSHITS-1,C' ' OVERFLOW?  11/83 DBC
         BE    HHFITS              NO, PROCEED                11/83 DBC
         MVC   HITSHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC
HHFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R3                  RELEASE HITS TABLE ENT BAS 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FORMAT INFO FROM THE L.R.U. SORTED TABLE.          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R4             DCL TABLE ENTRY BASE       11/83 DBC
         MVC   LRUNAME,DENTNAME    MEMBER NAME                11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CLOCK            CRNT TIME IN SECS*1024     11/83 DBC
         S     R1,DYNLLRU#         CNVRT TO IDLE INTERVAL     11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO APPROX SECS       11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC
         MVC   LRUIDLE,ZONEBUF+L'ZONEBUF-L'LRUIDLE  COPY      11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'LRUIDLE-1,C' ' OVERFLOW?   11/83 DBC
         BE    LUFITS              NO, PROCEED                11/83 DBC
         MVC   LRUIDLE,=10C'*'     YES, SAY SO                11/83 DBC
LUFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   LRUHITS,ZONEBUF+L'ZONEBUF-L'LRUHITS COPY       11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'LRUHITS-1,C' ' OVERFLOW?   11/83 DBC
         BE    LHFITS              NO, PROCEED                11/83 DBC
         MVC   LRUHITS,=10C'*'     YES, SIGNAL THAT           11/83 DBC
LHFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R4                  RELEASE DURA TABLE ENT BAS 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FORMAT INFO FROM THE NAMES SORTED TABLE.           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R5             DCL TABLE ENTRY BASE       11/83 DBC
         MVC   NAMENAME,DENTNAME   MEMBER NAME                11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R1,R1               CLEAR FOR INSERT           11/83 DBC
         IC    R1,DENTCNCT         GET LIB#                   11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   NAMELIB#,0(R1)      COPY TO MSG                11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   NAMEHITS,ZONEBUF+L'ZONEBUF-L'NAMEHITS COPY     11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'NAMEHITS-1,C' ' OVERFLOW?  11/83 DBC
         BE    NHFITS              NO, PROCEED                11/83 DBC
         MVC   NAMEHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC
NHFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R5                  RELEASE NAME TABLE ENT BAS 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE MESSAGE AND THEN LOOP FOR THE NEXT     * 11/83 DBC
*        ENTRIES.                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  INFOBUF             DISPLAY THE MSG            11/83 DBC
         SPACE 1                                              11/83 DBC
         AR    R4,R6               ADVANCE 2ND TABLE SCANNER  11/83 DBC
         AR    R5,R6               ADVANCE 3RD TABLE SCANNER  11/83 DBC
         BXLE  R3,R6,INFOLOOP      ADVANCE 1ST TBL SCNR & LOO 11/83 DBC
         DROP  R2                  RELEASE MSG BUFFER BASE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DONE. FREEMAIN AND EXIT.                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R0,R1,RTBLSIZE      LOAD REPORT AREA DESCRIPTR 11/83 DBC
         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R1,R1               SINGAL NO TERMINATION MSG  11/83 DBC
         B     EXIT0               GO EXIT                    11/83 DBC
         DROP  TABLBASE            RELEASE CONTROL TABLE BASE 11/83 DBC
         TITLE 'VARIOUS TERMINATION SETUPS'                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING ARE VARIOUS TERMINATION SETUP        * 11/83 DBC
*        ROUTINES.                                          * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 3                                              11/83 DBC
BADSTRUC BAL   R1,EXIT16                                      11/83 DBC
         DC    AL1(L'MBADSTRU)                                11/83 DBC
MBADSTRU DC    C'DYNABLDL CANNOT FIND THE PROPER HOOK POINTS IN THE VER*
               SION OF IGC018 INSTALLED ON THIS SYSTEM'       11/83 DBC
         SPACE 3                                              11/83 DBC
DONEB4   BAL   R1,EXIT4                                       11/83 DBC
         DC    AL1(L'MDONEB4)                                 11/83 DBC
MDONEB4  DC    C'DYNABLDL IS ALREADY ACTIVE'                  11/83 DBC
         SPACE 3                                              11/83 DBC
MESS     BAL   R1,EXIT8                                       11/83 DBC
         DC    AL1(L'MMESS)                                   11/83 DBC
MMESS    DC    C'DYNABLDL IS ALREADY PARTIALLY ACTIVE - IT MUST BE STOP*
               PED AND THEN STARTED'                          11/83 DBC
         SPACE 3                                              11/83 DBC
STOPDB4  BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MSTOPDB4)                                11/83 DBC
MSTOPDB4 DC    C'DYNABLDL IS ALREADY STOPPED'                 11/83 DBC
         SPACE 3                                              11/83 DBC
DOWN     BAL   R1,EXIT8                                       11/83 DBC
         DC    AL1(L'MDOWN)                                   11/83 DBC
MDOWN    DC    C'DYNABLDL IS NOT ACTIVE'                      11/83 DBC
         SPACE 3                                              11/83 DBC
UNRECOGN BAL   R1,EXIT16                                      11/83 DBC
         DC    AL1(L'MUNRECOG)                                11/83 DBC
MUNRECOG DC    C'DYNABLDL IS UNABLE TO RECOGNIZE THE VERSION OF IGC018 *
               INSTALLED ON THIS SYSTEM'                      11/83 DBC
         SPACE 3                                              11/83 DBC
INVALID  BAL   R1,EXIT16                                      11/83 DBC
         DC    AL1(L'MINVALID)                                11/83 DBC
MINVALID DC    C'DYNABLDL PARM FIELD IS INVALID - ONLY START, STOP, OR *
               REPORT MAY BE SPECIFIED'                       11/83 DBC
         SPACE 3                                              11/83 DBC
STARTED  BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MSTARTED)                                11/83 DBC
MSTARTED DC    C'DYNABLDL STARTED'                            11/83 DBC
         SPACE 3                                              11/83 DBC
STOPPED  BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MSTOPPED)                                11/83 DBC
MSTOPPED DC    C'DYNABLDL STOPPED'                            11/83 DBC
         SPACE 3                                              11/83 DBC
PARTSTOP BAL   R1,EXIT4                                       11/83 DBC
         DC    AL1(L'MPARTSTO)                                11/83 DBC
MPARTSTO DC    C'DYNABLDL STOPPED BUT THE DYNAMIC BLDL TABLE COULD NOT *
               BE FREED'                                      11/83 DBC
         SPACE 3                                              11/83 DBC
EMPTY    BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MEMPTY)                                  11/83 DBC
MEMPTY   DC    C'DYNABLDL TABLE IS EMPTY'                     11/83 DBC
         SPACE 3                                              11/83 DBC
NOSYSP   SR    R1,R1               SIGNAL NO MESSAGE          11/83 DBC
         B     EXIT4               EXIT                       11/83 DBC
         TITLE 'TERMINATION'                                  11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        CLEAN UP AND EXIT PROCESSING                       * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        COMPLETION CODE VECTOR                             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
EXIT16   BAL   R0,EXIT             COMPLETION 16              11/83 DBC
EXIT12   BAL   R0,EXIT             COMPLETION 12              11/83 DBC
EXIT8    BAL   R0,EXIT             COMPLETION 8               11/83 DBC
EXIT4    BAL   R0,EXIT             COMPLETION 4               11/83 DBC
EXIT0    BAL   R0,EXIT             COMPLETION 0               11/83 DBC
EXIT     LA    R15,EXIT            LOAD VECTOR BASE           11/83 DBC
         SR    R15,R0              CNVRT TO COMPLETION CPODE  11/83 DBC
         LA    R15,0(,R15)         PURIFY                     11/83 DBC
         CH    R15,RCD             HIGHEST PRODUCED?          11/83 DBC
         BNH   RCDZ                NO, KEEP HIGHER VALUE      11/83 DBC
         STH   R15,RCD             YES, STORE NEW HIGH        11/83 DBC
RCDZ     DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        IF SYSPRINT IS OPENED, THEN WRITE A COMPLETION     * 11/83 DBC
*        MESSAGE, IF ANY, TO IT, AND THEN CLOSE IT.         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN IS IT OPEN?  11/83 DBC
         BZ    NOPRT               NO, SKIP                   11/83 DBC
         LTR   R2,R1               YES, IS THERE A            11/83 DBC
*                                  TERMINATION MESSAGE?       11/83 DBC
         BZ    NOPRTMSG            NO, SKIP                   11/83 DBC
         #PUT  NULL,SUBAD=PUTSYSP  YES, SPACE A LINE          11/83 DBC
         #PUT  NULL                SPACE ANOTHER LINE         11/83 DBC
         #PUT  (R2)                PRINT THE MESSAGE          11/83 DBC
NOPRTMSG DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         CLOSE SYSPRINT            CLOSE THE FILE             11/83 DBC
         FREEPOOL SYSPRINT         FREE ITS BUFFERS           11/83 DBC
         LR    R1,R2               RESTORE MSG PTR            11/83 DBC
NOPRT    DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        WRITE A COMPLETION MESSAGE, IF ANY, TO THE         * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LTR   R1,R1               IS THERE A FINAL MSG?      11/83 DBC
         BZ    MSGZ                NO, SKIP                   11/83 DBC
         #PUT  (R1),SUBAD=PUTWTO   YES, WRITE IT              11/83 DBC
MSGZ     DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO PROBLEM MODE.                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SUPER          IN SUPERVISOR STATE?       11/83 DBC
         BZ    SUPERZ              NO, SKIP                   11/83 DBC
         NI    FLAG,255-SUPER      YES, CLEAR AUDIT           11/83 DBC
         MODESET MODE=PROB         RESUME PROBLEM MODE        11/83 DBC
SUPERZ   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DE-SERIALIZE                                       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,ENQED          SERIALIZED?                11/83 DBC
         BZ    ENQEDZ              NO, SKIP                   11/83 DBC
         NI    FLAG,255-ENQED      YES, CLEAR AUDIT           11/83 DBC
         DEQ   MF=(E,SERIALIZ)     DEQ                        11/83 DBC
ENQEDZ   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RESTORE REGS AND RETURN TO CALLER                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LH    R15,RCD             LOAD COMPLETION CODE       11/83 DBC
         #EXIT ((R14,R12)),RC=(R15) EXIT TO CALLER            11/83 DBC
         TITLE 'PUTSYSP -- SEND MESSAGES TO A PRINT FILE'     11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PUTSYSP -- THIS ROUTINE SEND MESSAGES TO A PRINT   * 11/83 DBC
*        FILE. ALL RECFMS ARE SUPPORTED.                    * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC
*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - IF THE SYSPRINT FILE IS OPEN, AND IF THE   * 11/83 DBC
*                GIVEN MESSAGE IS NON-NULL, THEN THE        * 11/83 DBC
*                MESSAGE IS WRITTEN TO SYSPRINT.            * 11/83 DBC
*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTSYSP  TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN SYSPRINT     11/83 DBC
*                                  AVAILABLE?                 11/83 DBC
         BZR   R14                 NO, RETURN DOING NOTHING   11/83 DBC
         STM   R14,R2,SAVEPUTS     YES, SAVE REGISTERS        11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R2,R2               CLEAR FOR INSERT           11/83 DBC
         ICM   R2,1,0(R1)          GET L'MSG; NULL?           11/83 DBC
         BZ    PUTSRET             YES, RETURN DOING NOTHING  11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECU NO, RECFM=U?  11/83 DBC
         BNM   PUTRECU             YES, GO HANDLE             11/83 DBC
         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECF NO, RECFM=F?  11/83 DBC
         BO    PUTRECF             YES, GO HANDLE             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=V HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTRECV  LA    R0,4(,R2)           GET NEEDED LRECL           11/83 DBC
         STH   R0,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC
*                                  LOCATE                     11/83 DBC
         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R0,4(,R2)           GET REC LEN AGAIN          11/83 DBC
         SLL   R0,16               SHIFT                      11/83 DBC
         ST    R0,0(,R1)           STORE RDW                  11/83 DBC
         L     R15,SAVEPUTS+12     --> MESSAGE                11/83 DBC
         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC
         MVC   4(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC
         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC
         B     PUTSRET             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=F HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTRECF  PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC
         LR    R0,R1               --> COPY SINK              11/83 DBC
         LH    R1,DCBLRECL-IHADCB+SYSPRINT GET L'SINK         11/83 DBC
         L     R14,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC
         LA    R14,1(,R14)         --> COPY SOURCE            11/83 DBC
         LR    R15,R2              GET L'SOURCE               11/83 DBC
         ICM   R15,8,=C' '         GET PADDING BYTE           11/83 DBC
         MVCL  R0,R14              COPY MSG TO BUFFER         11/83 DBC
         B     PUTSRET             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=U HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTRECU  STH   R2,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC
*                                  LOCATE                     11/83 DBC
         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC
         L     R15,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC
         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC
         MVC   0(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC
         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO CALLER                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTSRET  LM    R14,R2,SAVEPUTS     RESTORE REGISTERS          11/83 DBC
         BR    R14                 RETURN                     11/83 DBC
         TITLE 'PUTWTO -- ISSUE MESSAGES TO THE OPERATORS'    11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PUTWTO -- THIS ROUTINE ISSUES MESSAGES TO THE      * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
*                                                           * 11/83 DBC
*        ROUTE CODES USED:                                  * 11/83 DBC
*              - 2 IS "MASTER CONSOLE INFORMATION"          * 11/83 DBC
*              - 11 IS "PROGRAMMER INFORMATION"             * 11/83 DBC
*                                                           * 11/83 DBC
*        DESCRIPTOR CODES USED:                             * 11/83 DBC
*              - 4 IS "SYSTEM STATUS"                       * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE MESSAGE, IF NON-NULL, HAS BEEN ISSUED. * 11/83 DBC
*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTWTO   STM   R14,R1,SAVEPUTW     SAVE REGISTERS             11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R15,R15             CLEAR FOR INSERT           11/83 DBC
         ICM   R15,1,0(R1)         GET L'MSG; NULL?           11/83 DBC
         BZ    PUTWRET             YES, RETURN TO CALLER      11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   WTOBUF(L'WTOHEAD),WTOHEAD COPY HEADER FIELDS   11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R15,=Y(WTOMAXL)     NO, TOO LONG?              11/83 DBC
         BNH   PUTWLNOK            NO, PROCEED                11/83 DBC
         LA    R15,WTOMAXL         YES, TRUNCATE              11/83 DBC
PUTWLNOK DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         BCTR  R15,0               ADJ FOR "EX"               11/83 DBC
         MVC   WTOBUF+L'WTOHEAD(*-*),1(R1) (EXECUTED)         11/83 DBC
         EX    R15,*-6             COPY MSG TO WTO BUFFER     11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,L'WTOHEAD+1(,R15) GET L'MSG+4              11/83 DBC
         STH   R15,WTOBUF          STORE INTO PLIST           11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,WTOBUF(R15)     --> PAST THE TEXT          11/83 DBC
         MVC   0(L'WTOTAIL,R15),WTOTAIL COPY TRAILER FIELDS   11/83 DBC
         SPACE 1                                              11/83 DBC
         WTO   MF=(E,WTOBUF)       ISSUE THE MSG              11/83 DBC
         SPACE 1                                              11/83 DBC
PUTWRET  LM    R14,R1,SAVEPUTW     RESTORE REGISTERS          11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         TITLE 'SORT -- AN INPLACE-SORTING ROUTINE'           11/83 DBC
SORT     #SORT CMPRID=(R2),SVID=SAVESORT                      11/83 DBC
         TITLE 'SORTHITS/SORTLRU/SORTNAME -- VARIOUS SORTING COMPARISON*
                ROUTINES'                                     11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        SORTHITS -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC
*        BLDL TABLE ENTRIES IN DESCENDING ORDER BY HITS     * 11/83 DBC
*        COUNT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
*        SORTLRU -- THIS COMPARISON ROUTINE SORTS DYNAMIC   * 11/83 DBC
*        BLDL TABLE ENTRIES IN L.R.U. ORDER - MOST TO LEAST * 11/83 DBC
*        RECENTLY USED.                                     * 11/83 DBC
*                                                           * 11/83 DBC
*        SORTNAME -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC
*        BLDL TABLE ENTRIES IN ASCENDING ORDER BY MEMBER    * 11/83 DBC
*        NAME.                                              * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R6 POINTS TO A SEQUENTIALLY PRIOR TABLE    * 11/83 DBC
*                ENTRY.                                     * 11/83 DBC
*              - R7 POINTS TO A SEQUENTIALLY FOLLOWING      * 11/83 DBC
*                TABLE ENTRY.                               * 11/83 DBC
*              - R14 POINTS TO THE RETURN ADDRESS IN THE    * 11/83 DBC
*                SORT ROUTINE.                              * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE TWO ENTRIES ARE SUITABLY COMPARED AND  * 11/83 DBC
*                THE CONDITION CODE IS SET AS FOLLOWS:      * 11/83 DBC
*                - CC=2 (I.E. IMPLIES "HIGH") INDICATES     * 11/83 DBC
*                  THAT THE SORT ROUTINE MUST EXCHANGE THE  * 11/83 DBC
*                  TWO TABLE ENTRIES.                       * 11/83 DBC
*                - CC=0 OR 1 (I.E. IMPLIES "EQUAL" OR       * 11/83 DBC
*                  "LOW") INDICATES THAT THE SORT ROUTINE   * 11/83 DBC
*                  MUST NOT EXCHANGE THE TWO TABLE ENTRIES. * 11/83 DBC
*              - ALL REGISTERS REMAIN UNCHANGED.            * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 3                                              11/83 DBC
SORTHITS CLC   DYNLHITS-DYNL(,R7),DYNLHITS-DYNL(R6)           11/83 DBC
         BNER  R14                                            11/83 DBC
         CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC
         BR    R14                                            11/83 DBC
         SPACE 3                                              11/83 DBC
SORTLRU  CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC
         BR    R14                                            11/83 DBC
         SPACE 3                                              11/83 DBC
SORTNAME CLC   DENTNAME-DYNL(,R6),DENTNAME-DYNL(R7)           11/83 DBC
         BR    R14                                            11/83 DBC
         TITLE 'VERIFY -- CODE MATCH VERIFICATION ROUTINE'    11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        VERIFY -- THIS ROUTINE CHECKS A SECTION OF IGC018  * 11/83 DBC
*        TO SEE IF ITS CONTENTS ARE AS EXPECTED.            * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A PLIST MAPPED BY THE         * 11/83 DBC
*                "ORIGINAL" DSECT. THIS IDENTIFIES A        * 11/83 DBC
*                LOCATION OF IGC018 AND ITS EXPECTED        * 11/83 DBC
*                CONTENTS.                                  * 11/83 DBC
*              - BLDLBASE POINTS TO IGC018.                 * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - ERROR: THE CONTENTS OF IGC018 ARE NOT AS   * 11/83 DBC
*                EXPECTED.                                  * 11/83 DBC
*              - R14: THE HI-BITS MAY BE CHANGED.           * 11/83 DBC
*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 4(,R14):                                    * 11/83 DBC
*              - THE CONTENTS OF IGC018 ARE AS EXPECTED.    * 11/83 DBC
*              - R14 IS INCRIMENTED BY 4.                   * 11/83 DBC
*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING ORIGINAL,R1         DCL PLIST BASE             11/83 DBC
VERIFY   STM   R14,R15,SAVEVERI    SAVE REGISTERS             11/83 DBC
         LH    R15,ORIGLOC         GET OFFSET INTO IGC018     11/83 DBC
         LA    R15,IGC018(R15)     GET LOCATION INTO IGC018   11/83 DBC
         LH    R14,ORIGLEN         GET LENGTH TO CHECK        11/83 DBC
         BCTR  R14,0               ADJ FOR "EX-CLC"           11/83 DBC
         CLC   0(*-*,R15),ORIGCODE (EXECUTED)                 11/83 DBC
         EX    R14,*-6             IS IGC018 AS EXPECTED?     11/83 DBC
         BNE   VERIRET0            NO, RETURN +0              11/83 DBC
*                                  YES, RETURN +4             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO CALLER                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         BAL   R15,VERIRET         +4 IGC018 IS AS EXPECTED   11/83 DBC
VERIRET0 BAL   R15,VERIRET         +0 IGC018 IS NOT CORRECT   11/83 DBC
VERIRET  LA    R14,VERIRET         LOAD VECTOR BASE           11/83 DBC
         SR    R14,R15             GET RETURN OFFSET          11/83 DBC
         A     R14,SAVEVERI        GET RETURN ADDRESS         11/83 DBC
         L     R15,SAVEVERI+4      RESTORE REGISTER           11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         DROP  R1                  RELEASE PLIST BASE         11/83 DBC
         TITLE 'ZONEIT -- BINARY TO EBCDIC CONVERSION'        11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        ZONEIT -- THIS ROUTINE CONVERTS A BINARY NUMBER TO * 11/83 DBC
*        A CHARACTER STRING THAT IS SUFFICIENTLY PADDED ON  * 11/83 DBC
*        BOTH THE LEFT AND RIGHT WITH BLANKS. IF THE NUMBER * 11/83 DBC
*        IS NEGATIVE, THEN THE STRING IS PREFIXED WITH A    * 11/83 DBC
*        MINUS SIGN (-).                                    * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 CONTAINS THE NUMBER TO BE CONVERTED.    * 11/83 DBC
*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE NUMBER HAS BEEN CONVERTED AS DESCRIBED * 11/83 DBC
*                ABOVE.                                     * 11/83 DBC
*              - ZONEBUF CONTAINS THE CHARACTER STRING      * 11/83 DBC
*                RIGHT JUSTIFIED AND LEFT PADDED WITH       * 11/83 DBC
*                BLANKS. ALSO, ZONEBUF IS TRAILED BLANKS.   * 11/83 DBC
*              - R1 POINTS TO THE START OF THE CHARACTER    * 11/83 DBC
*                STRING.                                    * 11/83 DBC
*              - R15 CONTAINS THE LENGTH-1 OF THE CHARACTER * 11/83 DBC
*                STRING.                                    * 11/83 DBC
*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ZONEIT   CVD   R1,DWORK            CNVRT TO DECIMAL           11/83 DBC
         MVI   ZONEBUF-1,C' '      LOAD LEFT PADDING BYTE     11/83 DBC
         MVI   ZONEBUF,X'20'       LOAD EDIT CONTROL BYTE     11/83 DBC
         MVC   ZONEBUF+1(L'ZONEBUF-1),ZONEBUF PROPAGATE IT    11/83 DBC
         EDMK  ZONEBUF-1(L'ZONEBUF+1),DWORK CNVRT TO EBCDIC   11/83 DBC
         BNZ   ZNOTZERO            JUMP IF VALUE WAS NOT 0    11/83 DBC
         MVI   ZONEBUF+L'ZONEBUF-1,C'0' (WAS 0; STICK IT IN)  11/83 DBC
         LA    R1,ZONEBUF+L'ZONEBUF-1 (SET STRING PTR)        11/83 DBC
ZNOTZERO BNM   ZNOTNEG             WASN'T NEGATIVE, SKIP      11/83 DBC
         BCTR  R1,0                WAS NEG; BACK UP           11/83 DBC
         MVI   0(R1),C'-'          INSERT SIGN                11/83 DBC
ZNOTNEG  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,ZONEBUF+L'ZONEBUF-1 --> TO LAST CHARACTER  11/83 DBC
         SR    R15,R1              GET L'STRING-1             11/83 DBC
         SPACE 1                                              11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         TITLE 'DATA'                                         11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        VERSIONS VECTOR                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSIONS DC    A(VERSN#01)                                    11/83 DBC
         DC    A(VERSN#02)                                    11/83 DBC
         DC    A(VERSN#03)                                    11/83 DBC
         DC    A(VERSN#04)                                    11/83 DBC
         DC    A(VERSN#05)                                    04/84 JLC
         DC    A(VERSN#06)                                    05/84 DBC
         DC    A(VERSN#07)                                    08/84 DBC
         DC    A(VERSN#08)                                    06/84 WRH
         DC    A(VERSN#09)                                    09/84 DBC
         DC    A(VERSN#10)                                    DBC 01/85
         DC    A(0)                                           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        LOCAL SOUBROUTINE SAVE AREAS                       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SAVEPUTS DC    5A(0)               PUTSYSP                    11/83 DBC
SAVEPUTW DC    4A(0)               PUTWTO                     11/83 DBC
SAVESORT DC    16A(0)              SORT                       11/83 DBC
SAVEVERI DC    2A(0)               VERIFY                     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        PARM FIELD ANALYSIS CONTROL DATA                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PARMS    DS    0X                  START OF TABLE (SORTED)    11/83 DBC
         DC    AL4(START),AL2(0)                              11/83 DBC
         DC    AL4(STOP),AL2(1),C'P'                          11/83 DBC
         DC    AL4(REPORT),AL2(1),C'R'                        11/83 DBC
         DC    AL4(START),AL2(1),C'S'                         11/83 DBC
         DC    AL4(STOP),AL2(4),C'STOP'                       11/83 DBC
         DC    AL4(START),AL2(5),C'START'                     11/83 DBC
         DC    AL4(REPORT),AL2(6),C'REPORT'                   11/83 DBC
         DC    AL4(INVALID),X'FF'                             11/83 DBC
         SPACE 1                                              11/83 DBC
PRMHNDLR EQU   0,4                 A(HANDLER ROUTINE)         11/83 DBC
PRMLEN   EQU   PRMHNDLR+L'PRMHNDLR,2 L'TEXT                   11/83 DBC
PRMTEXT  EQU   PRMLEN+L'PRMLEN     TEXT                       11/83 DBC
PRMROOTL EQU   PRMTEXT             ENTRY'S ROOT LENGTH        11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SERIALIZATION ENQ CONTROL DATA                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SERIALIZ ENQ   (QNAME,RNAME,E,L'RNAME,SYSTEM),RET=NONE,MF=L   11/83 DBC
QNAME    DC    CL8'DYNABLDL'                                  11/83 DBC
RNAME    DC    C'SERIALIZE'                                   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        WTO MESSAGE BUFFER AND CONTROLS                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
WTOFLDS  WTO   ' ',ROUTCDE=(2,11),DESC=4,MF=L SKELETON        11/83 DBC
WTOHEAD  EQU   WTOFLDS,4           HEADER FIELDS              11/83 DBC
WTOTAIL  EQU   WTOHEAD+L'WTOHEAD+1,*-(WTOHEAD+L'WTOHEAD+1)    11/83 DBC
*                                  TRAILER FIELDS             11/83 DBC
WTOMAXL  EQU   124                 MAX WTO TEXT LENGTH        11/83 DBC
         SPACE 1                                              11/83 DBC
         DS    0F                  ALIGNMENT                  11/83 DBC
WTOBUF   DC    XL(L'WTOHEAD+WTOMAXL+L'WTOTAIL)'00' BUFFER     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SYSPRINT CONTROL DATA                              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         PRINT NOGEN                                          11/83 DBC
SYSPRINT DCB   DDNAME=SYSPRINT,                               11/83 DBC*
               DSORG=PS,                                      11/83 DBC*
               MACRF=PL,                                      11/83 DBC*
               OPTCD=C,                                       11/83 DBC*
               BUFNO=5,                                       11/83 DBC*
               EXLST=PRTXLIST                                 11/83 DBC
         PRINT GEN                                            11/83 DBC
         SPACE 1                                              11/83 DBC
PRTXLIST DS    0F                  DCB EXIT LIST              11/83 DBC
         DC    X'85',AL3(PRTEXIT)  DCB OPEN EXIT              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        HOOK SKELETONS                                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CNOP  0,4                 ALIGNMENT                  11/83 DBC
SRCHPOHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC
         L     R15,SRCHPOAA-*(,R15) --> HOOK ROUTINE          11/83 DBC
         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC
SRCHPOAA DC    AL4(SRCHPDS-SRCHPDS) --> HOOK ROUTINE          11/83 DBC
SRCHPOHL EQU   *-SRCHPOHH          L'HOOK                     11/83 DBC
         SPACE 3                                              11/83 DBC
         CNOP  0,4                 ALIGNMENT                  11/83 DBC
DFOUNDHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC
         L     R15,DFOUNDAA-*(,R15) --> HOOK ROUTINE          11/83 DBC
         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC
         DC    CL8'DAVECOLE'       HOOK RECOGNITION STRING    11/83 DBC
DFOUNDAA DC    AL4(DFOUND-DFOUND)  --> HOOK ROUTINE           11/83 DBC
DFOUNDHL EQU   *-DFOUNDHH          L'HOOK                     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        HOOK RETURN CONTROL DATA                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPOXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC
*                                  RETURN FROM SRCHPDS HOOK   11/83 DBC
DFOUNDXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC
*                                  RETURN FROM DFOUND HOOK    11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPOBC B     SRCHPOXX-SRCHPOXX   RETURN TO IGC018 FROM      11/83 DBC
         @ZAP  (SRCHPOXX,-2)       SRCHPDS HOOK               11/83 DBC
         SPACE 1                                              11/83 DBC
DFOUNDBC B     DFOUNDXX-DFOUNDXX   RETURN TO IGC018 FROM      11/83 DBC
         @ZAP  (DFOUNDXX,-2)       DFOUND HOOK                11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        MISC DATA                                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DWORK    DS    D                   DWORD WORK AREA            11/83 DBC
CLOCK    DS    2F                  STCK BUFFER                11/83 DBC
         SPACE 1                                              11/83 DBC
RTBLSIZE DC    A(0)              | REPORTS TABLE SIZE         11/83 DBC
RTBLPTR  DC    A(0)              V REPORTS TABLE ADDRESS      11/83 DBC
         SPACE 1                                              11/83 DBC
COUNTER  DC    H'0'                REPORT LINES COUNTER       11/83 DBC
RCD      DC    H'0'                PROGRAM COMPLETION CODE    11/83 DBC
         SPACE 1                                              11/83 DBC
         DC    C' '                LEFT-PADDING BLANK         11/83 DBC
ZONEBUF  DS    CL(8*2-1)           EDMK SINK                  11/83 DBC
         DC    CL(L'ZONEBUF-1)' '  RIGHT-PADDING BLANKS       11/83 DBC
         SPACE 1                                              11/83 DBC
PSWKEY   DS    X                   SAVE AREA                  11/83 DBC
         SPACE 1                                              11/83 DBC
FLAG     DC    B'00000000'         AUDIT FLAG                 11/83 DBC
SUPER    EQU   B'10000000'         IN SUPERVISOR STATE        11/83 DBC
KEY0     EQU   B'01000000'         IN KEY ZERO                11/83 DBC
ENQED    EQU   B'00100000'         SERIALIZED                 11/83 DBC
SRCHPO00 EQU   B'00010000'         THE SRCHPDS HOOK HAS NOT   11/83 DBC
*                                  NOT NOT BEEN SET           11/83 DBC
DFOUND00 EQU   B'00001000'         THE DFOUND HOOK HAS NOT    11/83 DBC
*                                  NOT NOT BEEN SET           11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        MESSAGES                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'NULL)                                    11/83 DBC
NULL     DC    C' '                                           11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'DYNATIT)                                 11/83 DBC
DYNATIT  DC    C'DYNAMIC BLDL ACTIVITY REPORT'                11/83 DBC
         SPACE 3                                              11/83 DBC
         DS    AL1                                            11/83 DBC
STATBUF  DS    CL(LEN3270)                                    11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(0)                                         11/83 DBC
STATBUF2 DS    CL(LEN3270)                                    11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(0)                                         11/83 DBC
STATBUF3 DS    CL(LEN3270)                                    11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'INFOBUF)                                 11/83 DBC
INFOBUF  DC    CL(INFOLEN)' '                                 11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEBAR-INFO+INFOBUF                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSBAR-INFO+INFOBUF                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUBAR-INFO+INFOBUF                            11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'SORTTIT)                                 11/83 DBC
SORTTIT  DC    CL(INFOLEN)' '                                 11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEBAR-INFO+SORTTIT                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMENAME-INFO+SORTTIT                          11/83 DBC
         DC    C'SORTED BY NAME'                              11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSBAR-INFO+SORTTIT                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSHITS-INFO+SORTTIT                          11/83 DBC
         DC    C'SORTED BY HITS'                              11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUBAR-INFO+SORTTIT                            11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUIDLE-INFO+SORTTIT                           11/83 DBC
         DC    C'SORTED BY L.R.U.'                            11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   ,                                              11/83 DBC
         SPACE 3                                              08/84 DBC
         DC    AL1(L'SORTTIT0)                                08/84 DBC
SORTTIT0 DC    CL(INFOLEN)' '                                 08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   NAMEBAR-INFO+SORTTIT0                          08/84 DBC
         DC    C'|'                                           08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   HITSBAR-INFO+SORTTIT0                          08/84 DBC
         DC    C'|'                                           08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   HITSHITS-INFO+SORTTIT0                         08/84 DBC
         DC    C'(* MEANS REENTRANT)'                         08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   LRUBAR-INFO+SORTTIT0                           08/84 DBC
         DC    C'|'                                           08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   ,                                              08/84 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'SORTSUBT)                                11/83 DBC
SORTSUBT DC    CL(INFOLEN)' '                                 11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   COUNT-INFO+SORTSUBT                            11/83 DBC
         DC    C'CNT'                                         11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEBAR-INFO+SORTSUBT                          11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMENAME-INFO+SORTSUBT                         11/83 DBC
         DC    C'NAME'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMELIB#-1-INFO+SORTSUBT                       11/83 DBC
         DC    C'LIB#'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEHITS+L'NAMEHITS-4-INFO+SORTSUBT            11/83 DBC
         DC    C'HITS'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSBAR-INFO+SORTSUBT                          11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSHITS+L'HITSHITS-4-INFO+SORTSUBT            11/83 DBC
         DC    C'HITS'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSIDLE+L'HITSIDLE-4-INFO+SORTSUBT            11/83 DBC
         DC    C'IDLE'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSAGE+L'HITSAGE-3-INFO+SORTSUBT              11/83 DBC
         DC    C'AGE'                                         11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSNAME-INFO+SORTSUBT                         11/83 DBC
         DC    C'NAME'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUBAR-INFO+SORTSUBT                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUIDLE+L'LRUIDLE-4-INFO+SORTSUBT              11/83 DBC
         DC    C'IDLE'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUHITS+L'LRUHITS-4-INFO+SORTSUBT              11/83 DBC
         DC    C'HITS'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUNAME-INFO+SORTSUBT                          11/83 DBC
         DC    C'NAME'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   ,                                              11/83 DBC
         TITLE 'SRCHPDS -- IGC018 HOOK ROUTINE'               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        SRCHPDS -- THIS ROUTINE RECEIVES CONTROL VIA A     * 11/83 DBC
*        HOOK PLACED AT LABEL "SRCHPDS" IN IGC018. (IGC018  * 11/83 DBC
*        BRANCHES TO "SRCHPDS" AFTER IT HAS SEARCHED THE    * 11/83 DBC
*        RESIDENT BLDL TABLE AND WHEN IT IS READY TO READ   * 11/83 DBC
*        THE PDS DIRECTORIES ON DISK). THIS INTERCEPT       * 11/83 DBC
*        ROUTINE DETERMINES IF THE PDS DIRECTORIES ABOUT TO * 11/83 DBC
*        BE SEARCHED ARE FOR THE LINKLIST LIBRARIES. IF SO, * 11/83 DBC
*        THEN IT SCANS THE USER'S BLDL PLIST AGAINST ITS    * 11/83 DBC
*        OWN DYNA-TABLE AND FILLS IN ALL USER REQUESTS FOR  * 11/83 DBC
*        NAMES THAT ARE FOUND IN THE DYNA-TABLE. THUS DISK  * 11/83 DBC
*        DIRECTORY SEARCHES FOR THOSE NAMES ARE BYPASSED.   * 11/83 DBC
*                                                           * 11/83 DBC
*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC
*        DONE.                                              * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC
*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC
*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC
*                VERSION OF IGC018.                         * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC
*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC
*                LABEL "SRCHPDS") THAT WERE OVERLAID BY THE * 11/83 DBC
*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC
*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC
*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        STATIC INPUTS:                                     * 11/83 DBC
*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC
*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC
*                RESTORED.                                  * 11/83 DBC
*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC
*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC
*              - THE "RDAREA" FIELD IN IGC018'S WORK AREA,  * 11/83 DBC
*                SINCE IT IS ABOUT TO BE READ INTO BY EXCP, * 11/83 DBC
*                IS AVAILABLE FOR LOCAL USE AT THIS TIME.   * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING SRCHPDS,R15         DCL LOCAL BASE             11/83 DBC
SRCHPDS  DS    0F                  ALIGNMENT                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE WHETHER OR NOT THE CURRENT SEARCH IS OF  * 11/83 DBC
*        THE LINKLIST LIBRARIES.                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CVTPTR           --> CVT                    11/83 DBC
         LA    R0,0(,RDCB-RDCB)    GET CRNT DCB PTR           11/83 DBC
         @ZAP  (RDCB,-2)                                      11/83 DBC
         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC
         BNE   SRCHPOZZ            NO, IGNORE THIS CALL       11/83 DBC
         SPACE 1                                              11/83 DBC
         CLI   CONCAT#-CONCAT#,0   YES, 1ST PASS FOR THIS     11/83 DBC
         @ZAP  (CONCAT#,-2)        PLIST?                     11/83 DBC
         BNE   SRCHPOZZ            NO, DYNA-TABLE SEARCH      11/83 DBC
*                                  ALREADY MADE; IGNORE THIS  11/83 DBC
*                                  CALL                       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S ENVIRONMENT AND SET UP A LOCAL ONE.  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STM   R2,R14,REGSAVE-DYNAWA+RDAREA-RDAREA SAVE       11/83 DBC
         @ZAP  (RDAREA,-2)         IGC018'S REGISTERS         11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   USERKEY-DYNAWA+RDAREA-RDAREA,EXSKEY-EXSKEY     11/83 DBC
         @ZAP  (RDAREA,-4),        SAVE IGC018'S USER'S KEY   11/83 DBC*
               (EXSKEY,-2)                                    11/83 DBC
         SPACE 1                                              09/84 DBC
         MVC   BLDLFLG-DYNAWA+RDAREA-RDAREA,EXSFLG-EXSFLG     09/84 DBC
         @ZAP  (RDAREA,-4),        SAVE IGC018'S CONTROL      09/84 DBC*
               (EXSFLG,-2)         FLAGS                      09/84 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,0(,RLIST-RLIST)  COPY USER'S PLIST PTR TO A 11/83 DBC
         @ZAP  (RLIST,-2)          SAFE REGISTER              11/83 DBC
         USING BLDLIST,R1          DCL USER'S PLIST BASE      11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R13,RDAREA-RDAREA   --> LOCAL WORK AREA        11/83 DBC
         @ZAP  (RDAREA,-2)                                    11/83 DBC
*                                  NOTE, DIRECT USE OF        11/83 DBC
*                                  IGC018'S REGISTERS IS NOW  11/83 DBC
*                                  NO LONGER SAFE.            11/83 DBC
         USING DYNAWA,R13          DCL WORK AREA BASE         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S CURRENT KEY AND LOAD KEY-0.          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IPK   ,                   DETERMINE CURRENT KEY      11/83 DBC
         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC
         SPKA  0                   SET KEY-0                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC
         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC
         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC
         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        PREPARE TO SCAN THE USER'S PLIST                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R2,BLDENT           --> 1ST PLIST ENTRY        11/83 DBC
         USING PDS2,R2             DCL A BASE FOR IT          11/83 DBC
         LH    R0,BLDENTS          GET ENTRY COUNT            11/83 DBC
         LTR   R0,R0               NULL?                      11/83 DBC
         BNP   SRCHRET             YES, EXIT BACK TO IGC018   11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R8,SRCHPODH         NO, --> CONTROL TABLE      11/83 DBC
         USING DYNAHEAD,R8         DCL A BASE FOR IT          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SEARCH THE DYNA-TABLE FOR EACH USER REQUESTED NAME * 11/83 DBC
*        THAT HAS NOT ALREADY BEEN FOUND.                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
NAMELOOP CLI   PDS2TTRP+2,0        HAS THIS NAME BEEN FOUND?  11/83 DBC
         BNE   NAMENEXT            YES, SKIP IT               11/83 DBC
         TM    PDS2NAME+DYNLLOCK,UNLOCKED NO, BUT WILL THE    11/83 DBC
*                                  NAME CONFUSE ME?           11/83 DBC
         BZ    NAMEMISS            YES, IGNORE IT             11/83 DBC
         LM    R3,R5,DYNAFIRS      NO, LOAD DYNA-TABLE DESCRI 11/83 DBC
         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC
         SPACE 1                                              11/83 DBC
DYNLSCAN CLC   PDS2NAME,DENTNAME   NAME FOUND IN TABLE?       11/83 DBC
         BE    NAMEHIT             YES, GO PROCESS            11/83 DBC
         BXLE  R3,R4,DYNLSCAN      NO, KEEP SEARCHING         11/83 DBC
         DROP  R3                  NO, RELEASE TABLE ENTRY BA 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        A USER REQUESTED NAME WAS NOT FOUND IN THE         * 11/83 DBC
*        DYNA-TABLE. COUNT THE MISS AND LOOP TO THE NEXT    * 11/83 DBC
*        ENTRY IN THE USER'S PLIST.                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
NAMEMISS LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNAMISS         COUNT THE MISS             11/83 DBC
         ST    R4,DYNAMISS         STORE BACK. NOTE, I DO NOT 11/83 DBC
*                                  BOTHER WITH A 'CS' BECAUSE 11/83 DBC
*                                  ABSOLUTE ACCURACY HERE IS  11/83 DBC
*                                  NOT REALLY THAT IMPORTANT. 11/83 DBC
         SPACE 1                                              11/83 DBC
         B     NAMENEXT            GO ADVANCE TO NEXT NAME    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        A USER REQUESTED NAME HAS BEEN FOUND IN THE        * 11/83 DBC
*        DYNA-TABLE. ATTEMPT TO LOCK OWNERSHIP OF THE       * 11/83 DBC
*        DYNA-TABLE SLOT.                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R3             RESTORE SLOT BASE          11/83 DBC
NAMEHIT  LM    R4,R5,PDS2NAME      GET THE GIVEN NAME         11/83 DBC
         LR    R6,R4               COPY                       11/83 DBC
         LR    R7,R5               COPY                       11/83 DBC
         X     R6,=A(UNLOCKED)     SET LOCK SIGNAL            11/83 DBC
         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK SIGNAL MUST BE   11/83 DBC*
                                   BYTE #3 OF THE NAME        11/83 DBC
         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC
*                                  GOT IT?                    11/83 DBC
         BNE   NAMEMISS            NO, GIVE UP ON THIS NAME   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        I NOW OWN THE SLOT. NOW COPY THE DIRECTORY DATA TO * 11/83 DBC
*        THE USER'S PLIST.                                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LH    R4,BLDELEN          GET L'USER'S PLIST ENTRY   11/83 DBC
         CH    R4,DYNLELEN         COMPARE WITH L'D-ENTRY     11/83 DBC
         BNH   GOTBDLEN            LOW; USE USER'S LENGTH     11/83 DBC
         LH    R4,DYNLELEN         HIGH; USE L'D-ENTRY        11/83 DBC
GOTBDLEN SH    R4,=Y(PDS2TTRP-PDS2+1) DECRIMENT BY L'ROOT     11/83 DBC
*                                  SECTION. ALSO DECRIMENT    11/83 DBC
*                                  FOR "EX-MVC". IS USER'S    11/83 DBC
*                                  SLOT LONG ENOUGH?          11/83 DBC
         BNM   BLDLMOVE            YES, PROCEED               11/83 DBC
         OI    DENTNAME+DYNLLOCK,UNLOCKED NO, RELEASE THE     11/83 DBC
*                                  SLOT                       11/83 DBC
         B     NAMEMISS            IGNORE THIS NAME           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SET THE USER'S KEY AND THEN COPY THE BLDL ENTRY TO * 11/83 DBC
*        HIS PLIST. NOTE, THE DESIRED USER KEY WILL BE      * 09/84 DBC
*              EITHER IS EXECUTION KEY OR THE KEY FROM THE  * 09/84 DBC
*        DEB FOR THE PDS BEING SEARCHED. IF THE DESIRED KEY * 09/84 DBC
*        IS THE DEB KEY, THEN IGC018'S EXECUTION KEY        * 09/84 DBC
*        MATCHES THE DEB KEY.                               * 09/84 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
BLDLMOVE IC    R5,USERKEY          GET USER'S EXECUTION KEY   09/84 DBC
         TM    BLDLFLG,EXSBLDL-EXSBLDL DOING A BLDL?          09/84 DBC
         @ZAP  (EXSBLDL,-3)                                   09/84 DBC
         BNZ   SINKKEY             YES, PROCEED               09/84 DBC
         IC    R5,KEYSAVE          NO, DOING A FIND. GET      09/84 DBC
*                                  IGC018'S EXECUTION KEY     09/84 DBC
*                                  (WHICH WILL MATCH THE      09/84 DBC
*                                  USER'S DEB KEY).           09/84 DBC
SINKKEY  SPKA  0(R5)               SET USER'S KEY             09/84 DBC
         SPACE 1                                              09/84 DBC
         MVC   PDS2TTRP(*-*),DENTTTRP (EXECUTED)              11/83 DBC
         EX    R4,*-6              COPY STUFF TO USER'S PLIST 11/83 DBC
         SPKA  0                   RESUME KEY-0               11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        UPDATE THE SLOT'S LRU FIELD (MAKING IT M.R.U.),    * 11/83 DBC
*        COUNT THE HIT, AND UNLOCK THE DYNA-SLOT.           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   DYNLLRU#,CLOKSAVE   MAKE SLOT M.R.U.         * 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNLHITS         COUNT THE SLOT'S HITS      11/83 DBC
         ST    R4,DYNLHITS         STORE BACK                 11/83 DBC
         SPACE 1                                              11/83 DBC
         OI    DENTNAME+DYNLLOCK,UNLOCKED RELEASE THE SLOT    11/83 DBC
         DROP  R3                  RELEASE SLOT BASE          11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNAHITS         COUNT TOTAL HITS           11/83 DBC
         ST    R4,DYNAHITS         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        ADVANCE TO THE NEXT NAME IN THE USER'S PLIST.      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
NAMENEXT AH    R2,BLDELEN          --> NEXT PLIST ENTRY       11/83 DBC
         BCT   R0,NAMELOOP         LOOP IF THERE ARE MORE     11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R2                  NO MORE, REL PLIST ENTRY B 11/83 DBC
         DROP  R8                  REL DYNA-CONTROL TBL BASE  11/83 DBC
         DROP  R1                  RELEASE PLIST BASE         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC
         SPKA  0(R2)               RESTORE IT                 11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGS      11/83 DBC
         DROP  R13                 RELEASE LCL WORK AREA BASE 11/83 DBC
         SPACE 1                                              11/83 DBC
         B     SRCHPOZZ            GO BACK TO IGC018          11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        STATIC DATA                                        * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPODH DC    A(DYNAHEAD-DYNAHEAD) --> CONTROL TABLE         11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPOZZ DS    0H                                             11/83 DBC
SRCHPOLL EQU   SRCHPOZZ-SRCHPDS                               11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        THE ORIGINAL SRCHPDS CODE FROM IGC018 GETS COPIED  * 11/83 DBC
*        FOLLOWING HERE.                                    * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'DFOUND -- IGC018 HOOK ROUTINE'                11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DFOUND -- THIS ROUTINE RECEIVES CONTROL VIA A HOOK * 11/83 DBC
*        PLACED AT LABEL "DFOUND" IN IGC018. (IGC018        * 11/83 DBC
*        BRANCHES TO "DFOUND" WHEN IT HAS SUCCESSFULLY READ * 11/83 DBC
*        A PDS DIRECTORY BLOCK AND LOCATED THE DESIRED      * 11/83 DBC
*        ENTRY WITHIN IT). IF THE MEMBER IS FROM A LINKLIST * 11/83 DBC
*        LIBRARY BUT HAD NOT BEEN PREVIOUSLY COPIED TO THE  * 11/83 DBC
*        DYNA-TABLE, THEN THIS INTERCEPT DOES THAT.         * 11/83 DBC
*                                                           * 11/83 DBC
*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC
*        DONE.                                              * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC
*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC
*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC
*                VERSION OF IGC018.                         * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC
*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC
*                LABEL "DFOUND") THAT WERE OVERLAID BY THE  * 11/83 DBC
*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC
*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC
*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        STATIC INPUTS:                                     * 11/83 DBC
*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC
*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC
*                RESTORED.                                  * 11/83 DBC
*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC
*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DFOUND,R15          DCL LOCAL BASE             11/83 DBC
DFOUND   DS    0F                  ALIGNMENT                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE WHETHER OR NOT THE CURRENT MEMBER NAME   * 11/83 DBC
*        IS FROM THE LINKLIST LIBRARIES.                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CVTPTR           --> CVT                    11/83 DBC
         LA    R0,0(,RDCB-RDCB)    COPY PDS DCB PTR           11/83 DBC
         @ZAP  (RDCB,-2)                                      11/83 DBC
         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC
         BNE   DFOUNDZZ            NO, IGNORE THIS CALL       11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    PDS1NAME+DYNLLOCK-PDS1(RPDS1-RPDS1),UNLOCKED   11/83 DBC
         @ZAP  (RPDS1,-2)          YES, BUT WILL THIS NAME    11/83 DBC*
                                   CONFUSE ME?                11/83 DBC
         BZ    DFOUNDZZ            YES, IGNORE THIS CALL      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        AQUIRE A LOCAL DYNAMIC WORK AREA                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R0,=AL1(229,0,0,DYNAWAL) SP/LEN                11/83 DBC
         GETMAIN R,LV=(0)          GET AN AREA                11/83 DBC
         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC
         USING DYNAWA,R1           DCL WORK AREA BASE         11/83 DBC
         BALR  R15,0               RELOAD A LOCAL BASE        11/83 DBC
         USING *,R15               DECLARE IT                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S ENVIRONMENT AND SET UP MY OWN.       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STM   R2,R14,REGSAVE      SAVE IGC018'S REGISTERS    11/83 DBC
         MVC   CCIDSAVE,CONCAT#-CONCAT# SAVE CONCAT INDEX     11/83 DBC
         @ZAP  (CONCAT#,-2)                                   11/83 DBC
         LA    R0,0(,RPDS1-RPDS1)  --> FOUND D-ENTRY          11/83 DBC
         @ZAP  (RPDS1,-2)                                     11/83 DBC
         LR    R13,R1              COPY LCL DYNAWA PTR.       11/83 DBC
*                                  NOTE, DIRECT USE OF        11/83 DBC
*                                  IGC018'S REGISTERS IS NOW  11/83 DBC
*                                  NO LONGER SAFE.            11/83 DBC
         DROP  R1                  RELEASE TEMP DYNAWA BASE   11/83 DBC
         USING DYNAWA,R13          DCL NEW ONE                11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R1,R0               COPY D-ENTRY POINTER       11/83 DBC
         USING PDS1,R1             DCL A BASE FOR IT          11/83 DBC
         SPACE 1                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S KEY AND LOAD KEY-0                     11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IPK   ,                   GET IGC018'S KEY           11/83 DBC
         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC
         SPKA  0                   LOAD KEY-0                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC
         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC
         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC
         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SCAN THE DYNA-TABLE IN SEARCH OF A STEALABLE SLOT. * 11/83 DBC
*        NOTE, THE NAME MIGHT ALREADY EXIST IN THE TABLE,   * 11/83 DBC
*        SO CHECK THAT TOO.                                 * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R8,DFOUNDDH         --> CONTROL TABLE          11/83 DBC
         USING DYNAHEAD,R8         DCL CONTROL TABLE BASE     11/83 DBC
RESCAN   LM    R3,R5,DYNAFIRS      --> DYNA-TABLE             11/83 DBC
         USING DYNL,R3             DCL SLOT BASE              11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R0,R0               LOAD LOGICAL HIGH -        11/83 DBC
         BCTR  R0,0                 VALUE (4X'FF')            11/83 DBC
         SPACE 1                                              11/83 DBC
SCANLOOP CL    R0,DYNLLRU#         LESS RECENTLY USED SLOT?   11/83 DBC
         BL    SCANNAME            NO, SKIP                   11/83 DBC
         LR    R2,R3               YES, SAVE ITS POINTER      11/83 DBC
         ICM   R0,15,DYNLLRU#      GET LRU#; UNUSED SLOT?     11/83 DBC
         BZ    SCANGRAB            YES, GO USE IT.            11/83 DBC
SCANNAME CLC   DENTNAME,PDS1NAME   NO, IS THE NAME ACTUALLY   11/83 DBC
*                                  ALREADY IN THE DYNA-TABLE? 11/83 DBC
         BE    SCANRET             YES, NOTHING TO DO HERE    11/83 DBC
         BXLE  R3,R4,SCANLOOP      NO, CONTINUE SEARCHING     11/83 DBC
         DROP  R3                  RELEASE SLOT BASE          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        A STEALABLE (OR UNUSED) SLOT HAS BEEN FOUND.       * 11/83 DBC
*        ATTEMPT TO LOCK CONTROL OF IT.                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R2             DCL SLOT BASE              11/83 DBC
SCANGRAB CLC   DYNLLRU#,CLOKSAVE   IF THE DYNA-TABLE IS VERY  11/83 DBC
*                                  SMALL (SUCH AS 1 OR 2      11/83 DBC
*                                  ENTRIES), THEN THE GRAB    11/83 DBC
*                                  ATTEMPT COULD CONCEIVABLY  11/83 DBC
*                                  FAIL ON EVERY SLOT AND     11/83 DBC
*                                  THAT WOULD LEAD TO AN      11/83 DBC
*                                  UNCONTROLLED LOOP. THIS    11/83 DBC
*                                  TEST GUARDS AGAINST THAT.  11/83 DBC
*                                  HAVE I ALREADY TRIED AND   11/83 DBC
*                                  FAILED TO GRAB THIS SLOT?  11/83 DBC
         BE    SCANRET             YES, GIVE UP.              11/83 DBC
         MVC   DYNLLRU#,CLOKSAVE   NO, RESET THIS SLOT'S LRU# 11/83 DBC
*                                  REGUARDLESS OF WHETHER OR  11/83 DBC
*                                  I CAN LOCK IT.             11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R4,R5,DENTNAME      GET THE SLOT'S NAME        11/83 DBC
         O     R4,=A(UNLOCKED)     SET UNLOCKED IN CASE       11/83 DBC
*                                  ALREADY LOCKED JUST NOW BY 11/83 DBC
*                                  SOMEONE ELSE               11/83 DBC
         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK BIT MUST BE IN   11/83 DBC*
                                   THE NAME'S 4TH BYTE        11/83 DBC
         LR    R6,R4               COPY THE -                 11/83 DBC
         LR    R7,R5                NAME                      11/83 DBC
         X     R6,=A(UNLOCKED)     SET "LOCKED" SIGNAL        11/83 DBC
         #TEST SIZE=(DYNLLOCK,EQ,3)                           11/83 DBC
         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC
*                                  GOT IT?                    11/83 DBC
         BNE   RESCAN              NO, TRY TO GET ANOTHER     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        I'VE NOW GOT A STEALABLE SLOT. COUNT IT AND STEAL  * 11/83 DBC
*        IT.                                                * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         XC    DYNL(DYNLLEN),DYNL CLEAR THE SLOT              11/83 DBC
         MVC   DYNLLRU#,CLOKSAVE   MAKE M.R.U.                11/83 DBC
         MVC   DYNLCLOK,CLOKSAVE   SET BIRTHDATE              11/83 DBC
         MVC   DENTCNCT,CCIDSAVE   SAVE LIB CONCAT INDEX      11/83 DBC
         MVI   DENTLIBF,LINKSVC    SET "FROM LINKLIST" SIGNAL 11/83 DBC
         SPACE 1                                              11/83 DBC
         IC    R4,PDS1INDC         GET L'UDAT/2               11/83 DBC
         N     R4,=A(PDS1LUSR)     ISSOLATE IT                11/83 DBC
         AR    R4,R4               CNVRT TO TRUE VALUE        11/83 DBC
         LA    R5,DENTUSRD-DENT(,R4) CNVRT TO SLOT ENTRY LEN  11/83 DBC
         STH   R5,DYNLELEN         SAVE                       11/83 DBC
         MVC   DENTINDC(*-*),PDS1INDC (EXECUTED)              11/83 DBC
         EX    R4,*-6              COPY FLAGS, LENGTH, AND    11/83 DBC
*                                  USER DATA TO THE SLOT      11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   DENTNAME(L'DENTNAME+L'DENTTTRP),PDS1NAME COPY  11/83 DBC
*                                  REST OF INFO TO SLOT. ALSO 11/83 DBC
*                                  UNLOCK THE SLOT.           11/83 DBC
         DROP  R2                  RELEASE SLOT BASE          11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNADDED         INCR STEAL COUNTER         11/83 DBC
         ST    R4,DYNADDED         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SCANRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC
         SPKA  0(R2)               RESTORE IT                 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,DYNAWA           SAVE WORK AREA PTR         11/83 DBC
         DROP  R1                  RELEASE D-ENTRY BASE       11/83 DBC
         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGISTERS 11/83 DBC
         DROP  R8                  RELEASE CONTROL TABLE BASE 11/83 DBC
         DROP  R13                 RELEASE WORK AREA BASE     11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R0,=AL1(229,0,0,DYNAWAL) GET SP/LEN            11/83 DBC
         FREEMAIN R,LV=(0),A=(1)   RELEASE THE WORK AREA      11/83 DBC
         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC
         BALR  R15,0               LOAD NEW LOCAL BASE        11/83 DBC
         B     DFOUNDZZ-*(,R15)    GO EXIT TO IGC018          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        LOCAL DATA                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 1                                              11/83 DBC
DFOUNDDH DC    A(DYNAHEAD-DYNAHEAD) HEADER TABLE PTR          11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFOUNDZZ DS    0H                                             11/83 DBC
DFOUNDLL EQU   DFOUNDZZ-DFOUND                                11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        THE ORIGINAL DFOUND CODE FROM IGC018 GETS COPIED   * 11/83 DBC
*        FOLLOWING HERE.                                    * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE '@ZAP -- IBM PRIVATE FIELDS REFERENCE ADJUSTMENTS' 3 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        @ZAP -- THIS ROUTINE ADJUSTS ALL FLAGGED           * 11/83 DBC
*        REFERENCES TO IBM PRIVATE FIELDS TO CORRESPOND TO  * 11/83 DBC
*        THE CURRENT VERSION OF IGC018.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A TABLE OF FIELD DESCRIPTORS. * 11/83 DBC
*              - THE PROGRAM BASE REGISTERS ARE AS          * 11/83 DBC
*                ESTABLISHED BY THE #ENTER MACRO AT         * 11/83 DBC
*                DYNABLDL'S ENTRY POINT.                    * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC
*              - R0 MAY BE DESTROYED.                       * 11/83 DBC
*              - NOTE, A LOCAL BASE IS NOT NEEDED HERE.     * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE REQUIRED ADJUSTMENTS HAVE BEEN MADE.   * 11/83 DBC
*              - R0 IS DESTROYED.                           * 11/83 DBC
*              - ALL OTHER REGISTERS ARE RESTORED.          * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #USING ,                  RESTORE ADDRESSABILITY     11/83 DBC
         USING FIELDS,R1           DCL FIELDS BASE            11/83 DBC
@ZAP     @ZAP  ,                                              11/83 DBC
         SPACE 1                                              11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         TITLE 'PRTEXIT -- SYSPRINT DCB OPEN EXIT'            11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PRTEXIT -- THIS IS A DCB OPEN EXIT ROUTINE FOR THE * 11/83 DBC
*        SYSPRINT FILE. IT EXAMINES THE RECFM, LRECL, AND   * 11/83 DBC
*        BLKSIZE DCB FIELDS TO ENFORCE VALID COMBINATIONS   * 11/83 DBC
*        AND TO SET THE FOLLOWING DEFAULTS AS APPROPRIATE.  * 11/83 DBC
*                                                           * 11/83 DBC
*        IF NEITHER RECFM=F, =V, OR =U IS GIVEN, THEN       * 11/83 DBC
*        RECFM=V IS SET.                                    * 11/83 DBC
*                                                           * 11/83 DBC
*        IF RECFM=A OR =M IS GIVEN, THEN THAT IS CLEARED.   * 11/83 DBC
*        (CARRIAGE CONTROL IS NOT SUPPORTED BY DYNABLDL).   * 11/83 DBC
*                                                           * 11/83 DBC
*        FOR RECFM=U, LRECL IS FORCED TO ZERO.              * 11/83 DBC
*                                                           * 11/83 DBC
*        IF BLKSIZE=0 IS GIVEN, THEN A TENTATIVE DEFAULT    * 11/83 DBC
*        BLKSIZE IS CHOSEN AS FOLLOWS:                      * 11/83 DBC
*        - IF RECFM=F, THEN BLKSIZE=3120.                   * 11/83 DBC
*        - IF RECFM=V, THEN BLKSIZE=4096.                   * 11/83 DBC
*        - IF RECFM=U, THEN BLKSIZE=79.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        IF LRECL=0 IS GIVEN, THEN A DEFAULT LRECL IS       * 11/83 DBC
*        CHOSEN AS FOLLOWS:                                 * 11/83 DBC
*        - IF RECFM=F, THEN LRECL=80.                       * 11/83 DBC
*        - IF RECFM=V, THEN LRECL=83.                       * 11/83 DBC
*                                                           * 11/83 DBC
*        FOR RECFM=F, IF BLKSIZE IS NOT A MULTIPLE OF       * 11/83 DBC
*        LRECL, THEN IT IS ROUNDED DOWN TO A LRECL          * 11/83 DBC
*        MULTIPLE.                                          * 11/83 DBC
*                                                           * 11/83 DBC
*        IF, AT THIS POINT, BLKSIZE IS NOT LARGE ENOUGH     * 11/83 DBC
*        WHEN COMPARED TO LRECL, THEN A NEW BLKSIZE IS SET  * 11/83 DBC
*        AS FOLLOWS:                                        * 11/83 DBC
*        - IF RECFM=F, THEN BLKSIZE=LRECL.                  * 11/83 DBC
*        - IF RECFM=V, THEN BLKSIZE=LRECL+4.                * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO THE SYSPRINT DCB.             * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS (SVC 3).    * 11/83 DBC
*              - R15 POINTS TO THIS ROUTINE'S ENTRY         * 11/83 DBC
*                ADDRESS.                                   * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE ABOVE DESCRIBED PROCESSING HAS BEEN    * 11/83 DBC
*                COMPLETED.                                 * 11/83 DBC
*              - R14 REMAINS UNCHANGED.                     * 11/83 DBC
*              - OTHER REGISTERS MAY BE ALTERED.            * 11/83 DBC
*                (RESTORATION IS NOT NECESSARY).            * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING IHADCB,R1           DCL DCB BASE               11/83 DBC
         USING PRTEXIT,R15         DCL LOCAL BASE             11/83 DBC
PRTEXIT  LH    R4,DCBLRECL         GET LRECL                  11/83 DBC
         LH    R3,DCBBLKSI         SET BLKSIZE                11/83 DBC
         SPACE 1                                              11/83 DBC
         OI    DCBRECFM,DCBRECBR   ASSUME BLOCKED RECORDS     11/83 DBC
         SPACE 1                                              11/83 DBC
         NI    DCBRECFM,255-DCBRECCC CLEAR CARRIAGE CONTROL   11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    DCBRECFM,DCBRECU    RECFM DEFINED?             11/83 DBC
         BO    PRTRECU             YES, RECFM=U               11/83 DBC
         BNZ   PRTRECFV            YES, RECFM=F OR =V         11/83 DBC
         OI    DCBRECFM,DCBRECV    NO, SET RECFM=V            11/83 DBC
PRTRECFV TM    DCBRECFM,DCBRECF    RECFM=F?                   11/83 DBC
         BO    PRTRECF             YES, GO HANDLE             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=V HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRECV  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC
         BNZ   PRTRVCK2            NO, SKIP                   11/83 DBC
         LH    R3,=Y(4096)         YES, SET DEFAULT           11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRVCK2 CH    R4,=Y(LEN3270+4)    LRECL LARGE ENOUGH?        11/83 DBC
         BNL   PRTRVCK3            YES, SKIP                  11/83 DBC
         LA    R4,LEN3270+4        NO, RESET                  11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRVCK3 LA    R0,4(,R4)           GET LRECL+4                11/83 DBC
         CR    R0,R3               BLKSIZE LARGE ENOUGH?      11/83 DBC
         BH    PRTLBOK             YES, DONE HERE             11/83 DBC
         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC
         LR    R3,R0               RESET THE BLKSIZE          11/83 DBC
         B     PRTLBOK             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=F HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRECF  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC
         BNZ   PRTRFCK2            NO, SKIP                   11/83 DBC
         LA    R3,3120             YES, SET DEFAULT           11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRFCK2 CH    R4,=Y(LEN3270)      LRECL LARGE ENOUGH?        11/83 DBC
         BNL   PRTRFCK3            YES, SKIP                  11/83 DBC
         LA    R4,80               NO, SET DEFAULT            11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRFCK3 SR    R2,R2               CLEAR FOR DIVIDE           11/83 DBC
         DR    R2,R4               ROUND BLKSIZE DOWN -       11/83 DBC
         MR    R2,R4                TO A LRECL MULTIPLE       11/83 DBC
         SPACE 1                                              11/83 DBC
         CR    R3,R4               IS BLKSIZE LARGE ENOUGH?   11/83 DBC
*                                  (MIGHT BE ZEROED BY THE    11/83 DBC
*                                  ABOVE DIVIDE)              11/83 DBC
         BH    PRTLBOK             YES, DONE HERE             11/83 DBC
         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC
         LR    R3,R4               RESET BLKSIZE              11/83 DBC
         B     PRTLBOK             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=U HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRECU  NI    DCBRECFM,255-DCBRECBR SIGNAL UNBLOCKED         11/83 DBC
         SR    R4,R4               SET LRECL=0                11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R3,=Y(LEN3270)      IS BLKSIZE LARGE ENOUGH?   11/83 DBC
         BNL   PRTLBOK             YES, DONE HERE             11/83 DBC
         LA    R3,LEN3270          NO, RESET THE BLKSIZE      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO CALLER (OPEN VIA SVC 3)                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTLBOK  STH   R3,DCBBLKSI         STORE NEW BLKSIZE          11/83 DBC
         STH   R4,DCBLRECL         STORE NEW LRECL            11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         TITLE 'VERSION TABLES'                               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018  (HERCULES VERSION 3/12/02)         * 03/02 BHW
*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC
*        LEVEL: 8206                                        * 11/83 DBC
*        PTF: UZ56064                                       * 11/83 DBC
*        APAR: AZ60132                                      * 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#01 CSECT ,                                              11/83 DBC
         DC    A(ID#01)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#01)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#01)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#01)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#01    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#01VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#01V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA60132'         00000E          DC    C'@ZA60132'
*                                                  DC    C'&SYSDATE'
         DC    C'03/27/82'         000016+         DC    C'03/27/82'BHW
*        DC    C'5740-AM7'         00001E          DC    C'5740-AM7 BHW
* PREVIOUS LINE REMOVED FOR HERCULES VERSION 03/12/02               BHW
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#01VLN EQU   *-ID#01V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#01  DS    0H                                             11/83 DBC
         DC    Y(X'52A')           VERIFY LOCATION            03/02 BHW
         DC    Y(SRCH#01L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#01V DS    0H                  00052A SRCHPDS  EQU   *
         BAL   R14,X'4B2'(,R12)    00052A          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00052E          TM    EXSFLG,EXSSYDC
         BO    X'538'(,R12)        000532          BO    SRCHKYOK
*                                  ************************************
* PREVIOUS 4 LINES CHANGED FOR HERCULES VERSION 03/12/02      03/02 BHW
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#01L EQU   *-SRCH#01V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#01L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#01  DS    0H                                             11/83 DBC
         DC    Y(X'77C')           VERIFY LOCATION            03/02 BHW
         DC    Y(DFND#01L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#01V MVC   X'8'(3,R7),X'8'(R8) 00077C DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        000782          IC    RX,PDS1INDC
         NR    R4,R14              000786          NR    RX,RZ
         LA    R5,X'E'             000788          LA    RY,PDS2USRD-PD
         LCR   R5,R5               00078C          LCR   RY,RY
         AH    R5,X'2'(,R10)       00078E          AH    RY,BLDELEN
*                                  ************************************
* PREVIOUS 6 LINES CHANGED FOR HERCULES VERSION 03/12/02      03/02 BHW
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#01L EQU   *-DFND#01V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#01L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#01  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#01,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC
*        LEVEL: 8107                                        * 09/84 DBC
*        PTF: UZ37480                                       * 09/84 DBC
*        APAR: AZ49924                                      * 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#02 CSECT ,                                              11/83 DBC
         DC    A(ID#02)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#02)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#02)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#02)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#02    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#02VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#02V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA49924'         00000E          DC    C'@ZA49924'
*                                                  DC    C'&SYSDATE'
         DC    C'05/28/81'         000016+         DC    C'05/28/81'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#02VLN EQU   *-ID#02V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#02  DS    0H                                             11/83 DBC
         DC    Y(X'566')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#02L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#02V DS    0H                  000566 SRCHPDS  EQU   *
         BAL   R14,X'4EE'(,R12)    000566          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00056A          TM    EXSFLG,EXSSYDC
         BO    X'574'(,R12)        00056E          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#02L EQU   *-SRCH#02V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#02L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#02  DS    0H                                             11/83 DBC
         DC    Y(X'7B8')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#02L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#02V MVC   X'8'(3,R7),X'8'(R8) 0007B8 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007BE          IC    RX,PDS1INDC
         NR    R4,R14              0007C2          NR    RX,RZ
         LA    R5,X'E'             0007C4          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007C8          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007CA          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#02L EQU   *-DFND#02V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#02L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#02  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#02,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: MVS SCP 3.8 (5752-MVS)                    * 11/83 DBC
*        LEVEL: 8009                                        * 11/83 DBC
*        PTF: UZ32516                                       * 11/83 DBC
*        APAR: AZ47610                                      * 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#03 CSECT ,                                              11/83 DBC
         DC    A(ID#03)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#03)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#03)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#03)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#03    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#03VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#03V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZZ47610'         00000E          DC    C'@ZZ47610'
*                                                  DC    C'&SYSDATE'
         DC    C'07/09/80'         000016+         DC    C'07/09/80'
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#03VLN EQU   *-ID#03V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#03  DS    0H                                             11/83 DBC
         DC    Y(X'4B2')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#03L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#03V DS    0H                  0004B2 SRCHPDS  EQU   *
         BAL   R14,X'43A'(,R12)    0004B2          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               0004B6          SR    R0,R0
         IC    R0,X'141'(,R13)     0004B8 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     0004BC          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#03L EQU   *-SRCH#03V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#03L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#03  DS    0H                                             11/83 DBC
         DC    Y(X'6A0')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#03L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#03V MVC   X'8'(3,R7),X'8'(R8) 0006A0 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0006A6          IC    RX,PDS1INDC
         NR    R4,R14              0006AA          NR    RX,RZ
         LA    R5,X'E'             0006AC          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0006B0          LCR   RY,RY
         AH    R5,X'2'(,R10)       0006B2          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#03L EQU   *-DFND#03V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#03L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#03  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#03,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC
*        LEVEL: 8303                                        * 11/83 DBC
*        PTF: UZ61168 (VARIATION "@HZA")                    * 05/84 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#04 CSECT ,                                              11/83 DBC
         DC    A(ID#04)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#04)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#04)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#04)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#04    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#04VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#04V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'    @HZA'         00000E          DC    C'    @HZA'
*                                                  DC    C'&SYSDATE'
         DC    C'11/19/82'         000016+         DC    C'11/19/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#04VLN EQU   *-ID#04V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#04  DS    0H                                             11/83 DBC
         DC    Y(X'58C')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#04L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#04V DS    0H                  00058C SRCHPDS  EQU   *
         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               000590          SR    R0,R0
         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#04L EQU   *-SRCH#04V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#04L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#04  DS    0H                                             11/83 DBC
         DC    Y(X'808')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#04L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#04V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC
         NR    R4,R14              000812          NR    RX,RZ
         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD
         LCR   R5,R5               000818          LCR   RY,RY
         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#04L EQU   *-DFND#04V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#04L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#04  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#04,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        MODULE: IGC018                                     * 04/84 JLC
*        PRODUCT: DF/DS (5740-AM7)                          * 04/84 JLC
*        LEVEL: 8303                                        * 04/84 JLC
*        PTF: UZ61167                                       * 04/84 JLC
*                                                           * 04/84 JLC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 04/84 JLC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 04/84 JLC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 04/84 JLC
*        DSECT.                                             * 04/84 JLC
*                                                           * 04/84 JLC
*        PREPARED 04/20/84 BY J.CALLEN AT U OF C            * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
VERSN#05 CSECT ,                                              04/84 JLC
         DC    A(ID#05)            --> VERSION VERIFIER       04/84 JLC
         DC    A(SRCH#05)          --> ORIGINAL "SRCHPDS" COD 04/84 JLC
         DC    A(DFND#05)          --> ORIGINAL "DFOUND" CODE 04/84 JLC
         DC    A(DOFF#05)          --> IBM DATA FIELDS DESCRIPTORS  JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 04/84 JLC
*        DSECT.                                             * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
ID#05    DS    0H                                             04/84 JLC
         DC    Y(X'6')             VERIFY LOCATION            04/84 JLC
         DC    Y(ID#05VLN)         VERIFY LENGTH              04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#05V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA66915'         00000E          DC    C'ZA66915A'
*                                                  DC    C'&SYSDATE'
         DC    C'11/19/82'         000016+         DC    C'11/19/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              04/84 JLC
ID#05VLN EQU   *-ID#05V            VERIFY LENGTH              04/84 JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
SRCH#05  DS    0H                                             04/84 JLC
         DC    Y(X'57A')           VERIFY LOCATION            04/84 JLC
         DC    Y(SRCH#05L)         VERIFY LENGTH              04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#05V DS    0H                  00057A SRCHPDS  EQU   *
         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYDC
         BO    X'588'(,R12)        000582          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              04/84 JLC
SRCH#05L EQU   *-SRCH#05V          VERIFY LENGTH              04/84 JLC
         #TEST SIZE=(SRCH#05L,GE,SRCHPOHL)                    04/84 JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
DFND#05  DS    0H                                             04/84 JLC
         DC    Y(X'7CC')           VERIFY LOCATION            04/84 JLC
         DC    Y(DFND#05L)         VERIFY LENGTH              04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#05V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC
         NR    R4,R14              0007D6          NR    RX,RZ
         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007DC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              04/84 JLC
DFND#05L EQU   *-DFND#05V          VERIFY LENGTH              04/84 JLC
         #TEST SIZE=(DFND#05L,GE,DFOUNDHL)                    04/84 JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 04/84 JLC
*        DSECT.                                             * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
DOFF#05  DS    0H                                             04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              04/84 JLC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              04/84 JLC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              04/84 JLC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              04/84 JLC
         #TEST SIZE=(*-DOFF#05,EQ,FIELDSLN)                   04/84 JLC
         EJECT ,                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        MODULE: IGC018                                     * 05/84 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 05/84 DBC
*        LEVEL: 8303                                        * 05/84 DBC
*        PTF: UZ61168 (VARIATION "@H2A")                    * 05/84 DBC
*                                                           * 05/84 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 05/84 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 05/84 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 05/84 DBC
*        DSECT.                                             * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
VERSN#06 CSECT ,                                              05/84 DBC
         DC    A(ID#06)            --> VERSION VERIFIER       05/84 DBC
         DC    A(SRCH#06)          --> ORIGINAL "SRCHPDS" COD 05/84 DBC
         DC    A(DFND#06)          --> ORIGINAL "DFOUND" CODE 05/84 DBC
         DC    A(DOFF#06)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 05/84 DBC
*        DSECT.                                             * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
ID#06    DS    0H                                             05/84 DBC
         DC    Y(X'6')             VERIFY LOCATION            05/84 DBC
         DC    Y(ID#06VLN)         VERIFY LENGTH              05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#06V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'    @H2A'         00000E          DC    C'    @H2A'
*                                                  DC    C'&SYSDATE'
         DC    C'11/19/82'         000016+         DC    C'11/19/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              05/84 DBC
ID#06VLN EQU   *-ID#06V            VERIFY LENGTH              05/84 DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
SRCH#06  DS    0H                                             05/84 DBC
         DC    Y(X'58C')           VERIFY LOCATION            05/84 DBC
         DC    Y(SRCH#06L)         VERIFY LENGTH              05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#06V DS    0H                  00058C SRCHPDS  EQU   *
         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               000590          SR    R0,R0
         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              05/84 DBC
SRCH#06L EQU   *-SRCH#06V          VERIFY LENGTH              05/84 DBC
         #TEST SIZE=(SRCH#06L,GE,SRCHPOHL)                    05/84 DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
DFND#06  DS    0H                                             05/84 DBC
         DC    Y(X'808')           VERIFY LOCATION            05/84 DBC
         DC    Y(DFND#06L)         VERIFY LENGTH              05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#06V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC
         NR    R4,R14              000812          NR    RX,RZ
         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD
         LCR   R5,R5               000818          LCR   RY,RY
         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              05/84 DBC
DFND#06L EQU   *-DFND#06V          VERIFY LENGTH              05/84 DBC
         #TEST SIZE=(DFND#06L,GE,DFOUNDHL)                    05/84 DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 05/84 DBC
*        DSECT.                                             * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
DOFF#06  DS    0H                                             05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              05/84 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              05/84 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              05/84 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              05/84 DBC
         #TEST SIZE=(*-DOFF#06,EQ,FIELDSLN)                   05/84 DBC
         EJECT ,                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        MODULE: IGC018                                     * 08/84 DBC
*        PRODUCT: DFP (5665-295/A)                          * 08/84 DBC
*                                                           * 08/84 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 08/84 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 08/84 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 08/84 DBC
*        DSECT.                                             * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
VERSN#07 CSECT ,                                              08/84 DBC
         DC    A(ID#07)            --> VERSION VERIFIER       08/84 DBC
         DC    A(SRCH#07)          --> ORIGINAL "SRCHPDS" COD 08/84 DBC
         DC    A(FINDK#07)         --> ORIGINAL "FINDKEY" COD 08/84 DBC
         DC    A(DOFF#07)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 08/84 DBC
*        DSECT.                                             * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
ID#07    DS    0H                                             08/84 DBC
         DC    Y(X'6')             VERIFY LOCATION            08/84 DBC
         DC    Y(ID#07VLN)         VERIFY LENGTH              08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#07V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'JDQ1110 '         00000E          DC    C'JDQ1110 '
*                                                  DC    C'&SYSDATE'
         DC    C'10/19/83'         000016+         DC    C'10/19/83'
         DC    C'5665-295'         00001E          DC    C'5665-295 ---
*                                  ************************************
         SPACE 1                                              08/84 DBC
ID#07VLN EQU   *-ID#07V            VERIFY LENGTH              08/84 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
SRCH#07  DS    0H                                             08/84 DBC
         DC    Y(X'52C')           VERIFY LOCATION            08/84 DBC
         DC    Y(SRCH#07L)         VERIFY LENGTH              08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#07V DS    0H                  00052C SRCHPDS  EQU   *
         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0
         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT
         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT
*                                  ************************************
         SPACE 1                                              08/84 DBC
SRCH#07L EQU   *-SRCH#07V          VERIFY LENGTH              08/84 DBC
         #TEST SIZE=(SRCH#07L,GE,SRCHPOHL)                    08/84 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 08/84 DBC
*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 08/84 DBC
*        LOCATED AT LABEL "FINDKEY" WHICH IS NOW JUST PAST  * 08/84 DBC
*        LABEL "DFOUND".                                    * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
FINDK#07 DS    0H                                             08/84 DBC
         DC    Y(X'7BC')           VERIFY LOCATION            08/84 DBC
         DC    Y(FIND#07L)         VERIFY LENGTH              08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  0007BC FINDKEY  EQU   *
FIND#07V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC
         NR    R4,R14              0007C6          NR    RX,RZ
         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007CC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              08/84 DBC
FIND#07L EQU   *-FIND#07V          VERIFY LENGTH              08/84 DBC
         #TEST SIZE=(FIND#07L,GE,DFOUNDHL)                    08/84 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 08/84 DBC
*        DSECT.                                             * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
DOFF#07  DS    0H                                             08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              08/84 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              08/84 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              08/84 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              08/84 DBC
         #TEST SIZE=(*-DOFF#07,EQ,FIELDSLN)                   08/84 DBC
         EJECT ,                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        MODULE: IGC018                                     * 06/84 WRH
*        PRODUCT: DF/DS (5740-AM7)                          * 06/84 WRH
*        LEVEL: 8402                                        * 06/84 WRH
*        PTF: UZ69197                                       * 06/84 WRH
*        APAR: AZ66915                                      * 06/84 WRH
*                                                           * 06/84 WRH
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 06/84 WRH
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 06/84 WRH
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 06/84 WRH
*        DSECT.                                             * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
VERSN#08 CSECT ,                                              06/84 WRH
         DC    A(ID#08)            --> VERSION VERIFIER       06/84 WRH
         DC    A(SRCH#08)          --> ORIGINAL "SRCHPDS" COD 06/84 WRH
         DC    A(DFND#08)          --> ORIGINAL "DFOUND" CODE 06/84 WRH
         DC    A(DOFF#08)          --> IBM DATA FIELDS DESCRIPTORS  WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 06/84 WRH
*        DSECT.                                             * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
ID#08    DS    0H                                             06/84 WRH
         DC    Y(X'6')             VERIFY LOCATION            06/84 WRH
         DC    Y(ID#08VLN)         VERIFY LENGTH              06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#08V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA66915'         00000E          DC    C'@ZA66915'
*                                                  DC    C'&SYSDATE'
         DC    C'11/22/83'         000016+         DC    C'11/22/83'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              06/84 WRH
ID#08VLN EQU   *-ID#08V            VERIFY LENGTH              06/84 WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
SRCH#08  DS    0H                                             06/84 WRH
         DC    Y(X'57A')           VERIFY LOCATION            06/84 WRH
         DC    Y(SRCH#08L)         VERIFY LENGTH              06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#08V DS    0H                  00057A SRCHPDS  EQU   *
         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYCD
         BO    X'588'(,R12)        000582          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              06/84 WRH
SRCH#08L EQU   *-SRCH#08V          VERIFY LENGTH              06/84 WRH
         #TEST SIZE=(SRCH#08L,GE,SRCHPOHL)                    06/84 WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
DFND#08  DS    0H                                             06/84 WRH
         DC    Y(X'7CC')           VERIFY LOCATION            06/84 WRH
         DC    Y(DFND#08L)         VERIFY LENGTH              06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#08V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC
         NR    R4,R14              0007D6          NR    RX,RZ
         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007DC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              06/84 WRH
DFND#08L EQU   *-DFND#08V          VERIFY LENGTH              06/84 WRH
         #TEST SIZE=(DFND#08L,GE,DFOUNDHL)                    06/84 WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 06/84 WRH
*        DSECT.                                             * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
DOFF#08  DS    0H                                             06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              06/84 WRH
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              06/84 WRH
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              06/84 WRH
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              06/84 WRH
         #TEST SIZE=(*-DOFF#08,EQ,FIELDSLN)                   06/84 WRH
         EJECT ,                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        MODULE: IGC018                                     * 09/84 DBC
*        PRODUCT: DFP (5665-295/A)                          * 09/84 DBC
*                                                           * 09/84 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 09/84 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 09/84 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 09/84 DBC
*        DSECT.                                             * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
VERSN#09 CSECT ,                                              09/84 DBC
         DC    A(ID#09)            --> VERSION VERIFIER       09/84 DBC
         DC    A(SRCH#09)          --> ORIGINAL "SRCHPDS" COD 09/84 DBC
         DC    A(FINDK#09)         --> ORIGINAL "FINDKEY" COD 09/84 DBC
         DC    A(DOFF#09)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 09/84 DBC
*        DSECT.                                             * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
ID#09    DS    0H                                             09/84 DBC
         DC    Y(X'6')             VERIFY LOCATION            09/84 DBC
         DC    Y(ID#09VLN)         VERIFY LENGTH              09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#09V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'ZA76850 '         00000E          DC    C'ZA76850 '
*                                                  DC    C'&SYSDATE'
         DC    C'03/28/84'         000016+         DC    C'03/28/84'
         DC    C'5665-295'         00001E          DC    C'5665-295 ---
*                                  ************************************
         SPACE 1                                              09/84 DBC
ID#09VLN EQU   *-ID#09V            VERIFY LENGTH              09/84 DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
SRCH#09  DS    0H                                             09/84 DBC
         DC    Y(X'52C')           VERIFY LOCATION            09/84 DBC
         DC    Y(SRCH#09L)         VERIFY LENGTH              09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#09V DS    0H                  00052C SRCHPDS  EQU   *
         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0
         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT
         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT
*                                  ************************************
         SPACE 1                                              09/84 DBC
SRCH#09L EQU   *-SRCH#09V          VERIFY LENGTH              09/84 DBC
         #TEST SIZE=(SRCH#09L,GE,SRCHPOHL)                    09/84 DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 09/84 DBC
*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 09/84 DBC
*        LOCATED AT LABEL "FINDKEY" WHICH IS NOW JUST PAST  * 09/84 DBC
*        LABEL "DFOUND".                                    * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
FINDK#09 DS    0H                                             09/84 DBC
         DC    Y(X'7BC')           VERIFY LOCATION            09/84 DBC
         DC    Y(FIND#09L)         VERIFY LENGTH              09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  0007BC FINDKEY  EQU   *
FIND#09V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC
         NR    R4,R14              0007C6          NR    RX,RZ
         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007CC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              09/84 DBC
FIND#09L EQU   *-FIND#09V          VERIFY LENGTH              09/84 DBC
         #TEST SIZE=(FIND#09L,GE,DFOUNDHL)                    09/84 DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 09/84 DBC
*        DSECT.                                             * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
DOFF#09  DS    0H                                             09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              09/84 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              09/84 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              09/84 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              09/84 DBC
         #TEST SIZE=(*-DOFF#09,EQ,FIELDSLN)                   09/84 DBC
         EJECT ,                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        MODULE: IGC018                                     * DBC 01/85
*        PRODUCT: DF/DS (5740-AM7)                          * DBC 01/85
*        LEVEL: 8406                                        * DBC 01/85
*        PTF: UZ70857                                       * DBC 01/85
*                                                           * DBC 01/85
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * DBC 01/85
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * DBC 01/85
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * DBC 01/85
*        DSECT.                                             * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
VERSN#10 CSECT ,                                              DBC 01/85
         DC    A(ID#10)            --> VERSION VERIFIER       DBC 01/85
         DC    A(SRCH#10)          --> ORIGINAL "SRCHPDS" COD DBC 01/85
         DC    A(DFND#10)          --> ORIGINAL "DFOUND" CODE DBC 01/85
         DC    A(DOFF#10)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * DBC 01/85
*        DSECT.                                             * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
ID#10    DS    0H                                             DBC 01/85
         DC    Y(X'6')             VERIFY LOCATION            DBC 01/85
         DC    Y(ID#10VLN)         VERIFY LENGTH              DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#10V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA74904'         00000E          DC    C'@ZA74904'
*                                                  DC    C'&SYSDATE'
         DC    C'03/27/84'         000016+         DC    C'03/27/84'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              DBC 01/85
ID#10VLN EQU   *-ID#10V            VERIFY LENGTH              DBC 01/85
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
SRCH#10  DS    0H                                             DBC 01/85
         DC    Y(X'58C')           VERIFY LOCATION            DBC 01/85
         DC    Y(SRCH#10L)         VERIFY LENGTH              DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#10V DS    0H                  00058C SRCHPDS  EQU   *
         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               000590          SR    R0,R0DBC 01/85
         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              DBC 01/85
SRCH#10L EQU   *-SRCH#10V          VERIFY LENGTH              DBC 01/85
         #TEST SIZE=(SRCH#10L,GE,SRCHPOHL)                    DBC 01/85
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
DFND#10  DS    0H                                             DBC 01/85
         DC    Y(X'808')           VERIFY LOCATION            DBC 01/85
         DC    Y(DFND#10L)         VERIFY LENGTH              DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#10V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC
         NR    R4,R14              000812          NR    RX,RZDBC 01/85
         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD
         LCR   R5,R5               000818          LCR   RY,RYDBC 01/85
         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              DBC 01/85
DFND#10L EQU   *-DFND#10V          VERIFY LENGTH              DBC 01/85
         #TEST SIZE=(DFND#10L,GE,DFOUNDHL)                    DBC 01/85
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * DBC 01/85
*        DSECT.                                             * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
DOFF#10  DS    0H                                             DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              DBC 01/85
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              DBC 01/85
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256DBC 01/85
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              DBC 01/85
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              DBC 01/85
         #TEST SIZE=(*-DOFF#10,EQ,FIELDSLN)                   DBC 01/85
         END   ,                                              11/83
./ ADD NAME=DYNABLDO 8000-02071-02071-2138-04394-04394-00000-SYZYGY1
DYNABLDL TITLE ' '                                            11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
* MODULE NAME = DYNABLDL.                                   * 11/83 DBC
*                                                           * 11/83 DBC
* DESCRIPTIVE NAME = DYNAMIC BLDL FACILITY.                 * 11/83 DBC
*                                                           * 11/83 DBC
* COPYRIGHT = DAVID B. COLE - 1983.                         * 11/83 DBC
*                                                           * 11/83 DBC
* STATUS = RELEASE 84, MODIFICATION LEVEL C.                * 09/84 DBC
*                                                           * 11/83 DBC
* FUNCTION = MAINTAIN A DYNAMICALLY UPDATED LIST OF THE     * 11/83 DBC
*            MOST FREQUENTLY USED BLDL ENTRIES FROM THE     * 11/83 DBC
*            LINK LIST LIBRARIES.                           * 11/83 DBC
*                                                           * 11/83 DBC
*            THIS PROGRAM IS CONCEPTUALLY BASED ON THE      * 11/83 DBC
*            VARIOUS DYNAMIC BLDL PROGRAMS AVAILABLE FROM   * 11/83 DBC
*            THE "CBT MODS" TAPE. HOWEVER, THIS VERSION IS  * 11/83 DBC
*            A COMPLETE REWRITE THAT INCORPORATES A SERIES  * 11/83 DBC
*            OF IMPROVEMENTS LISTED BELOW UNDER "CHANGE     * 11/83 DBC
*            HISTORY".                                      * 11/83 DBC
*                                                           * 11/83 DBC
* PROCESSOR = OS/VS ASSEMBLER.                              * 11/83 DBC
*                                                           * 11/83 DBC
* ATTRIBUTES = NOT REENTRANT.                               * 11/83 DBC
*                                                           * 11/83 DBC
* DEPENDANCIES = STRUCTURE OF IGC018.                       * 11/83 DBC
*                                                           * 11/83 DBC
* AUTHOR = DAVID B. COLE (DBC)                              * 11/83 DBC
*          RR#2 BOX 712                                     * 11/83 DBC
*          AFTON, VA. 22920                                 * 11/83 DBC
*                                                           * 05/84 DBC
*          ADDITIONAL MODIFICATIONS MADE BY:                * 05/84 DBC
*                                                           * 09/84 DBC
*          JERRY L. CALLEN (JLC)                            * 05/84 DBC
*          UNIVERSITY OF CHICAGO                            * 05/84 DBC
*          COMPUTER CENTER                                  * 05/84 DBC
*          5640 SOUTH ELLIS AVENUE                          * 05/84 DBC
*          CHICAGO, IL. 60637                               * 05/84 DBC
*                                                           * 09/84 DBC
*          BILL HORTEN (WRH)                                * 09/84 DBC
*          TENNESSEE EASTMAN COMPANY                        * 09/84 DBC
*          BOX 1973                                         * 09/84 DBC
*          KINGSPORT, TN. 37662                             * 09/84 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'CHANGE HISTORY'                               11/83 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
* RELEASE 84C                                               * 09/84 DBC
*                                                           * 09/84 DBC
* LAST CHANGE DATE = SEPTEMBER 27, 1974                     * 09/84 DBC
*                                                           * 09/84 DBC
*                  - INCLUDED ADDITIONAL VERSION TABLES     * 09/84 DBC
*                    WORKED OUT BY BILL HORTEN OF TENNESSEE * 09/84 DBC
*                    EASTMAN COMPANY.                       * 09/84 DBC
*                                                           * 09/84 DBC
*                  - MODIFIED THE SRCHPDS HOOK TO PROPERLY  * 09/84 DBC
*                    HANDLE SOME CHANGES IN THE DFP         * 09/84 DBC
*                    VERSIONS OF IGC018. THESE NEWER        * 09/84 DBC
*                    VERSIONS WILL SOMETIMES SWITCH TO THE  * 09/84 DBC
*                    DEB'S PROTECT KEY (INSTEAD OF THE      * 09/84 DBC
*                    CALLER'S PROTECT KEY) BEFORE STORING   * 09/84 DBC
*                    THE RETURNED DIRECTORY INFORMATION.    * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         EJECT ,                                              09/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
* RELEASE 84B                                               * 08/84 DBC
*                                                           * 08/84 DBC
* LAST CHANGE DATE = AUGUST 27,  1984                       * 08/84 DBC
*                                                           * 08/84 DBC
*                  - SUPPORT FOR ADDITIONAL VERSIONS OF     * 08/84 DBC
*                    IGC018 (VERSIONS 7 AND 8) HAS BEEN     * 08/84 DBC
*                    ADDED. THANKS TO VAL PITCHETT OF STATE * 08/84 DBC
*                    FARM INSURANCE FOR HELP WITH THIS.     * 08/84 DBC
*                                                           * 08/84 DBC
*                  - THE DYNABLDL REPORT NOW FLAGS THOSE    * 08/84 DBC
*                    LOAD MODULES THAT ARE REENTRANT. THIS  * 08/84 DBC
*                    WILL BE HELPFUL IN DETERMINING WHICH   * 08/84 DBC
*                    MODULES MIGHT BE BETTER PLACED IN      * 08/84 DBC
*                    SYS1.LPALIB.                           * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         EJECT ,                                              08/84 DBC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
* RELEASE 84A                                               * 05/84 DBC
*                                                           * 04/84 JLC
* LAST CHANGE DATE = MAY 29, 1984                           * 05/84 DBC
*                                                           * 04/84 JLC
*                  - "TYPO" TYPE BUGS FIXED AT LABELS       * 04/84 JLC
*                    "ENTCNT" AND "SIZESCAN". (BY CHANCE    * 04/84 JLC
*                    THE BUGS HAD NO FUNCTIONAL EFFECT).    * 04/84 JLC
*                                                           * 04/84 JLC
*                  - SUPPORT ADDED FOR THE UZ61167 LEVEL OF * 04/84 JLC
*                    IGC018.                                * 04/84 JLC
*                                                           * 05/84 DBC
*                  - SUPPORT FOR A SECOND VARIATION OF THE  * 05/84 DBC
*                    UZ61168 LEVEL OF IGC018 ADDED.         * 05/84 DBC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         EJECT ,                                              05/84 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
* RELEASE 83.A                                              * 11/83 DBC
*                                                           * 11/83 DBC
* LAST CHANGE DATE - NOVEMBER 15, 1983                      * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THIS VERSION OF DYNABLDL IS CAPABLE OF * 11/83 DBC
*                    RECOGNIZING AND HOOKING INTO ANY OF    * 11/83 DBC
*                    SEVERAL VERSIONS OF IBM'S IGC018. THE  * 11/83 DBC
*                    RECOGNITION CODE IS TABLE DRIVEN, AND  * 11/83 DBC
*                    ADDITIONAL RECOGNITION TABLES CAN BE   * 11/83 DBC
*                    FAIRLY EASILY ADDED.                   * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE RECOGNITION TABLES ARE             * 11/83 DBC
*                    COMPREHENSIVE. EACH TABLE CONSISTS OF  * 11/83 DBC
*                    FOUR PARTS. THE FIRST, LABELED "ID#"   * 11/83 DBC
*                    (WHERE "#" REPRESENTS AN ARBITRARY     * 11/83 DBC
*                    UNIQUE NUMERIC SUFIX), MUST MATCH AN   * 11/83 DBC
*                    IGC018'S IDENTIFICATION HEADER. THIS   * 11/83 DBC
*                    IS USED TO DISTINGUISH ONE IGC018 FROM * 11/83 DBC
*                    ANOTHER. THE SECOND AND THIRD PARTS,   * 11/83 DBC
*                    LABELED "SRCHPO#" AND "DFOUND#", MUST  * 11/83 DBC
*                    MATCH THE TWO LOCATIONS IN IGC018      * 11/83 DBC
*                    WHERE DYNABLDL INSERTS ITS JUMPS TO    * 11/83 DBC
*                    ITS INTERCEPT ROUTINES. THE FOURTH     * 11/83 DBC
*                    PART CONSISTS OF A LIST OF DESCRIPTORS * 11/83 DBC
*                    OF ALL IBM PRIVATE DATA FIELDS         * 11/83 DBC
*                    REFERENCED BY THE INTERCEPT ROUTINES.  * 11/83 DBC
*                    MOST OF THE DESCRIPTORS ARE S-CONS     * 11/83 DBC
*                    GIVING THE BASE REGISTER BY WHICH      * 11/83 DBC
*                    IGC018 REFERENCES A FIELD AND THE      * 11/83 DBC
*                    DISPLACEMENT OF THAT FIELD INTO THE    * 11/83 DBC
*                    IBM PRIVATE CONTROL BLOCK. THE         * 11/83 DBC
*                    DYNABLDL INITIALIZATION ROUTINE USES   * 11/83 DBC
*                    THIS LIST TO DYNAMICALLY MODIFY ALL    * 11/83 DBC
*                    MACHINE INSTRUCTIONS IN THE TWO        * 11/83 DBC
*                    INTERCEPT ROUTINES SO THAT THEY        * 11/83 DBC
*                    CORRECTLY MATCH THE PARTICULAR VERSION * 11/83 DBC
*                    OF IGC018 BEING HOOKED INTO. NOTE, THE * 11/83 DBC
*                    TWO IBM PRIVATE CONTROL BLOCKS         * 11/83 DBC
*                    INVOLVED HERE ARE THE "BLDL WORK AREA" * 11/83 DBC
*                    AND BLDL'S "SVRB EXTENDED SAVE AREA".  * 11/83 DBC
*                                                           * 11/83 DBC
*                  - ALL ROUTINES RELATED TO DYNABLDL HAVE  * 11/83 DBC
*                    BEEN CONSOLIDATED INTO A SINGLE        * 11/83 DBC
*                    PROGRAM. THIS RELIEVES THE POTENTIAL   * 11/83 DBC
*                    FOR ERRORS ARISING FROM PARTIAL        * 11/83 DBC
*                    MODIFICATIONS.                         * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE DYNAMIC BLDL TABLE IS NOW          * 11/83 DBC
*                    MAINTAINED BY A STRAIGHT FORWARD       * 11/83 DBC
*                    "LEAST RECENTLY USED" ALGORITHM. THE   * 11/83 DBC
*                    PREVIOUSLY USED PERIODIC SORTS AND     * 11/83 DBC
*                    PARTIAL REFILL METHOD HAS BEEN         * 11/83 DBC
*                    DISCARDED.                             * 11/83 DBC
*                                                           * 11/83 DBC
*                  - PRIOR VERSIONS OF DYNABLDL DID NOT     * 11/83 DBC
*                    INTERCEPT LINKLIST BLDL REQUESTS IN    * 11/83 DBC
*                    WHICH THE USER REQUESTED TWO OR MORE   * 11/83 DBC
*                    NAMES. FURTHER, PRIOR DYNABLDLS DID    * 11/83 DBC
*                    NOT COUNT SUCH IGNORED REQUESTS AS     * 11/83 DBC
*                    "MISSES". CONSEQUENTLY, THE "HIT RATE" * 11/83 DBC
*                    REPORTED BACK WAS INCORRECT. (IT WAS   * 11/83 DBC
*                    TOO HIGH). THIS VERSION OF DYNABLDL    * 11/83 DBC
*                    DOES HANDLE MULTI-ENTRY BLDL REQUESTS, * 11/83 DBC
*                    AND MY EXPERIENCE HAS BEEN THAT THE    * 11/83 DBC
*                    TRUE HIT RATE HAS RISEN FROM ABOUT 80% * 11/83 DBC
*                    TO BETTER THAN 95%.                    * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE REPORT FUNCTION NOW PRODUCES THREE * 11/83 DBC
*                    LISTINGS OF THE DYNAMIC TABLE (PRINTED * 11/83 DBC
*                    IN 3-COLUMN FORMAT USING LESS THAN 79  * 11/83 DBC
*                    CHARACTERS PER LINE - SUITABLE FOR     * 11/83 DBC
*                    3270 DISPLAY). ONE LISTING IS SORTED   * 11/83 DBC
*                    BY NAME; A SECOND IS SORTED BY HITS    * 11/83 DBC
*                    COUNT; THE THIRD IS SORTED BY L.R.U.   * 11/83 DBC
*                    CHARACTERISTIC.                        * 11/83 DBC
*                                                           * 11/83 DBC
*                  - THE DYNABLDL STOP FUNCTION NOW         * 11/83 DBC
*                    COMPLETELY REMOVES DYNABLDL FROM THE   * 11/83 DBC
*                    SYSTEM RATHER THAN JUST DISABLING THE  * 11/83 DBC
*                    HOOK ROUTINES.                         * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'DOCUMANTATION'                                11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*              INSTALLATION GUIDE                           * 11/83 DBC
*                                                           * 11/83 DBC
* USE THE FOLLOWING STEPS TO INSTALL DYNABLDL.              * 11/83 DBC
*                                                           * 11/83 DBC
* EXAMINE THE MICROFICHE FOR THE VERSION OF IGC018 (THE     * 11/83 DBC
* BLDL SVC ROUTINE) THAT EXISTS ON YOUR SYSTEM. IN          * 11/83 DBC
* PARTICULAR, EXAMINE THE FOLLOWING.                        * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE MODULE IDENTIFICATION FIELDS LOCATED NEAR    * 11/83 DBC
*          THE START OF IGC018. THIS IS USED BY DYNABLDL TO * 11/83 DBC
*          IDENTIFY THE VERSION OF IGC018 THAT EXISTS IN    * 11/83 DBC
*          YOUR SYSTEM.                                     * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE CODE LOCATED AT IGC018'S LABEL "SRCHPDS".    * 11/83 DBC
*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC
*          DYNAMIC TABLE LOOKUP ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE CODE LOCATED AT ICG018'S LABEL "DFOUND".     * 11/83 DBC
*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC
*          DYNAMIC TABLE UPDATE ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE BASE REGISTER (USUALLY R13) AND              * 11/83 DBC
*          DISPLACEMENTS OF THE FOLLOWING FIELDS IN THE     * 11/83 DBC
*          "WORKAREA" DSECT.                                * 11/83 DBC
*              RDAREA                                       * 11/83 DBC
*              CONCAT#                                      * 11/83 DBC
*          THESE ARE FIELDS REFERENCED BY THE INTERCEPT     * 11/83 DBC
*          ROUTINES.                                        * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE BASE REGISTER (USUALLY R6) AND DISPLACEMENTS * 09/84 DBC
*          OF THE FOLLOWING FIELDS IN THE SVRB EXTENDED     * 09/84 DBC
*          SAVE AREA. (REMEMBER THAT AN ASSEMBLY XREF FOR   * 09/84 DBC
*          IGC018 WILL LIST THE VALUES OF THE FOLLOWING     * 09/84 DBC
*          LABELS AT +X'40' GREATER THAT THEIR TRUE OFFSETS * 09/84 DBC
*          BECAUSE OF THE PRESENCE OF AN X'40'-BYTE PREFIX  * 09/84 DBC
*          SECTION IN THE RB DSECT MAP).                    * 09/84 DBC
*              EXSKEY                                       * 09/84 DBC
*              EXSFLG                                       * 09/84 DBC
*              EXSBLDL (FLAG BIT)                           * 09/84 DBC
*          THESE FIELDS AND FLAGS ARE REFERENCES BY THE     * 09/84 DBC
*          INTERCEPT ROUTINES.                              * 09/84 DBC
*                                                           * 11/83 DBC
*        - THE REGISTER (USUALLY R12 AND NAMED "RBASE")     * 11/83 DBC
*          USED AS IGC018'S PROGRAM BASE, AND ITS RELATIVE  * 11/83 DBC
*          BASE ADDRESS (USUALLY X'2').                     * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE BASE REGISTERS USED BY IGC018 TO POINT TO:   * 11/83 DBC
*              - THE DCB OF THE LIBRARIES CURRENTLY BEING   * 11/83 DBC
*                SEARCHED (USUALLY R11 AND NAMED "RDCB"),   * 11/83 DBC
*              - THE USER'S PARAMETER LIST THAT WAS PASSED  * 11/83 DBC
*                TO THE BLDL ROUTINE (USUALLY R10 AND NAMED * 11/83 DBC
*                "RLIST"),                                  * 11/83 DBC
*              - THE PDS DIRECTORY ENTRY FOUND BY IGC018 AT * 11/83 DBC
*                THE TIME THAT "DFOUND" IS CALLED (USUALLY  * 11/83 DBC
*                R8 AND NAMED "RPDS1").                     * 11/83 DBC
*                                                           * 11/83 DBC
* EXAMINE THE VERSION TABLES ALREADY EXISTING IN THIS       * 11/83 DBC
* DYNABLDL TO SEE IF ANY OF THEM MATCH YOUR VERSION OF      * 11/83 DBC
* IGC018. IF SO, THEN DYNABLDL WILL FUNCTION ON YOUR SYSTEM * 11/83 DBC
* WITHOUT MODIFICATION. IF NOT, THEN YOU WILL HAVE TO ADD A * 11/83 DBC
* VERSION TABLE TO DYNABLDL DESCRIBING YOUR IGC018.  UNLESS * 11/83 DBC
* THE LOGIC OF IGC018 CHANGES DRASTICLY, CREATING A NEW     * 11/83 DBC
* VERSION TABLE SHOULD BE ALL THAT YOU NEED TO DO; YOU      * 11/83 DBC
* SHOULD NOT HAVE TO CHANGE ANYTHING ELSE IN DYNABLDL.      * 11/83 DBC
*                                                           * 11/83 DBC
* NOTE, AN EASY TEST WOULD BE TO SIMPLY RUN DYNABLDL AS     * 11/83 DBC
* RECEIVED. IF IT RECOGNIZES YOUR IGC018, THEN IT WILL RUN. * 11/83 DBC
* IF IT CANNOT RECOGNIZE YOUR IGC018, THEN IT WILL SAY SO   * 11/83 DBC
* AND TERMINATE.                                            * 11/83 DBC
*                                                           * 11/83 DBC
* IF YOU NEED TO ADD A NEW VERSION TABLE, THEN DO THE       * 11/83 DBC
* FOLLOWING:                                                * 11/83 DBC
*                                                           * 11/83 DBC
*        - USING THE INFORMATION GATHERED BY YOUR           * 11/83 DBC
*          EXAMINATION OF IGC018, CREATE A NEW VERSION      * 11/83 DBC
*          TABLE MODELED ON THE VERSION TABLES ALREADY      * 11/83 DBC
*          PROVIDED. BE SURE TO INCLUDE A 4-ELEMENT VECTOR  * 11/83 DBC
*          POINTING TO THE FOUR PARTS OF YOUR NEW VERSION   * 11/83 DBC
*          TABLE.                                           * 11/83 DBC
*                                                           * 11/83 DBC
*        - ADD TO THE "VERSIONS" VECTOR AN ENTRY POINTING   * 11/83 DBC
*          TO YOUR 4-ELEMENT VECTOR.                        * 11/83 DBC
*                                                           * 11/83 DBC
*        - REASSEMBLE DYNABLDL USING "SYS1.MACLIB",         * 11/83 DBC
*          "SYS1.AMODGEN", AND THE MACLIB PROVIDED WITH THE * 11/83 DBC
*          DYNABLDL DISTRIBUTION.                           * 11/83 DBC
*                                                           * 11/83 DBC
* LINK EDIT DYNABLDL INTO A LINKLIST LIBRARY OR SOME OTHER  * 11/83 DBC
* AUTHORIZED LIBRARY. NOTE, ALTHOUGH THE INTERCEPT ROUTINES * 11/83 DBC
* INSERTED INTO IGC018 ARE REENTRANT, DYNABLDL ITSELF IS    * 11/83 DBC
* NOT. THEREFORE, DYNABLDL SHOULD NOT BE PLACED IN          * 11/83 DBC
* SYS1.LPALIB.                                              * 11/83 DBC
*                                                           * 11/83 DBC
* CREATE THE FOLLOWING PROC NAMED DYNABLDL:                 * 11/83 DBC
*                                                           * 11/83 DBC
*        //IEFPROC EXEC PGM=DYNABLDL,REGION=100K            * 11/83 DBC
*        //STEPLIB  DD  DSN= --- (ONLY IF NOT IN LINKLIST)  * 11/83 DBC
*        //IEFRDER  DD  DDNAME=SYSPRINT                     * 11/83 DBC
*        //SYSPRINT DD  SYSOUT=A (USED FOR REPORT FUNCTION) * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*              USER'S GUIDE                                 * 11/83 DBC
*                                                           * 11/83 DBC
* THE FOLLOWING ASSUMES THAT DYNABLDL HAS BEEN INSTALLED AS * 11/83 DBC
* DESCRIBED ABOVE.                                          * 11/83 DBC
*                                                           * 11/83 DBC
* TO START DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.     * 11/83 DBC
*        S DYNABLDL                -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=START     -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=S                                  * 11/83 DBC
* DYNABLDL WILL (A) ATTEMPT TO RECOGNIZE THE VERSION OF     * 11/83 DBC
* IGC018 RUNNING ON YOUR SYSTEM, (B) DETERMINE WHETHER OR   * 11/83 DBC
* DYNAMIC BLDL PROCESSING IS ALREADY UP AND RUNNING,        * 11/83 DBC
* (C) GENERATE INTERCEPT ROUTINES IN FIXED GLOBAL MEMORY,   * 11/83 DBC
* (D) INSERT INTO IGC018 JUMPS TO THE INTERCEPT ROUTINES,   * 11/83 DBC
* AND (E) TERMINATE LEAVING BEHIND THE ENABLED INTERCEPT    * 11/83 DBC
* ROUTINES.                                                 * 11/83 DBC
*                                                           * 11/83 DBC
* TO STOP DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.      * 11/83 DBC
*        S DYNABLDL,PARM=STOP      -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=P                                  * 11/83 DBC
* DYNABLDL WILL REMOVE THE HOOKS FROM IGC018 (BY RESTORING  * 11/83 DBC
* THE ORIGINAL CODE) AND FREE THE GLOBAL MEMORY CONTAINING  * 11/83 DBC
* THE INTERCEPT ROUTINES.                                   * 11/83 DBC
*                                                           * 11/83 DBC
* A DYNABLDL ACTIVITY REPORT CAN BE GENERATED ONLY WHILE    * 11/83 DBC
* DYNABLDL PROCESSING IS ACTIVE. TO GENERATE AN ACTIVITY    * 11/83 DBC
* REPORT, USE THE FOLLOWING OPERATOR COMMAND.               * 11/83 DBC
*        S DYNABLDL,PARM=REPORT    -- OR --                 * 11/83 DBC
*        S DYNABLDL,PARM=R                                  * 11/83 DBC
*                                                           * 11/83 DBC
* TO GENERATE ONLY AN ACTIVITY SUMMARY MESSAGE (WTO), USE   * 11/83 DBC
* THE FOLLOWING OPERATOR COMMAND.                           * 11/83 DBC
*        S DYNABLDL,DSN=NULLFILE,PARM=REPORT  -- OR --      * 11/83 DBC
*        S DYNABLDL,DSN=NULLFILE,PARM=R                     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'IHASVC MACRO'                                 11/83 DBC
         MACRO                                                11/83 DBC
         IHASVC &D                                            11/83 DBC
SVC      DSECT ,                                              11/83 DBC
SVCENTRY DS    0XL8                SVC TABLE ENTRY            11/83 DBC
SVCEP    DS    A                   A(SVC ROUTINE)             11/83 DBC
SVCATTR1 DS    BL2                 ATTRIBUTES                 11/83 DBC
SVCTP1   EQU   B'00000000'         TYPE 0                     11/83 DBC
SVCTP2   EQU   B'10000000'         TYPE 2                     11/83 DBC
SVCTP34  EQU   B'11000000'         TYPE 3/4                   11/83 DBC
SVCTP6   EQU   B'00100000'         TYPE 6                     11/83 DBC
SVCAPF   EQU   B'00001000'         CALLER MUST BE AUTHORIZED  11/83 DBC
SVCESR   EQU   B'00000100'         "ESR" SVC                  11/83 DBC
SVCNP    EQU   B'00000010'         NON-PREEMPTIVE SVC         11/83 DBC
SVCLOCKS DS    BL2                 LOCK ATTRIBUTES            11/83 DBC
SVCLL    EQU   B'10000000'         LOCAL LOCK                 11/83 DBC
SVCCMS   EQU   B'01000000'         CMS LOCK                   11/83 DBC
SVCOPT   EQU   B'00100000'         OPT LOCK                   11/83 DBC
SVCALLOC EQU   B'00010000'         SALLOC LOCK                11/83 DBC
SVCDISP  EQU   B'00001000'         DISP LOCK                  11/83 DBC
         MEND                                                 11/83 DBC
         TITLE '@ZAP MACRO'                                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        THIS MACRO BUILDS A ROUTINE TO DYNAMICALLY ADJUST  * 11/83 DBC
*        AT EXECUTION TIME THOSE MACHINE INSTRUCTIONS THAT  * 11/83 DBC
*        REFERENCE PRIVATE IBM DATA FIELDS.                 * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MACRO                                                11/83 DBC
&N       @ZAP  &X                                             11/83 DBC
         GBLA  &@ZAP#,&@ZCNT,&@ZAPFO(1024)                    11/83 DBC
         GBLC  &@ZAPZN(1024),&@ZAPFN(1024)                    11/83 DBC
         LCLA  &F#,&FO,&SIGN                                  11/83 DBC
         LCLC  &ZN,&CN,&FN,&NN,&VALUE,&C1                     11/83 DBC
         AIF   ('&X' EQ '').DUMP                              11/83 DBC
.*                                                            11/83 DBC
&@ZAP#   SETA  &@ZAP#+1                                       11/83 DBC
&ZN      SETC  'ZAP&@ZAP#'                                    11/83 DBC
         AIF   ('&N' EQ '').GOTZN                             11/83 DBC
&ZN      SETC  '&N'                                           11/83 DBC
.GOTZN   ANOP                                                 11/83 DBC
&ZN      DS    0H                                             11/83 DBC
.*                                                            11/83 DBC
&F#      SETA  0                                              11/83 DBC
.LP1     AIF   (&F# GE N'&SYSLIST).END1                       11/83 DBC
&F#      SETA  &F#+1                                          11/83 DBC
&@ZCNT   SETA  &@ZCNT+1                                       11/83 DBC
&@ZAPZN(&@ZCNT) SETC '&ZN'                                    11/83 DBC
&@ZAPFN(&@ZCNT) SETC '&SYSLIST(&F#,1)'                        11/83 DBC
&VALUE   SETC  '&SYSLIST(&F#,2)'                              11/83 DBC
&C1      SETC  '&VALUE'(1,1)                                  11/83 DBC
&SIGN    SETA  1                                              11/83 DBC
         AIF   ('&C1' NE '+' AND '&C1' NE '-').GOTNUM         11/83 DBC
&VALUE   SETC  '&VALUE'(2,K'&VALUE-1)                         11/83 DBC
         AIF   ('&C1' EQ '+').GOTNUM                          11/83 DBC
&SIGN    SETA  -1                                             11/83 DBC
.GOTNUM  ANOP                                                 11/83 DBC
&@ZAPFO(&@ZCNT) SETA &SIGN*&VALUE                             11/83 DBC
         AGO   .LP1                                           11/83 DBC
.*                                                            11/83 DBC
.END1    MEXIT                                                11/83 DBC
.*                                                            11/83 DBC
.*                                                            11/83 DBC
.*                                                            11/83 DBC
.DUMP    ANOP                                                 11/83 DBC
&NN      SETC  '&N'                                           11/83 DBC
&F#      SETA  0                                              11/83 DBC
.LP2     AIF   (&F# GE &@ZCNT).END2                           11/83 DBC
&F#      SETA  &F#+1                                          11/83 DBC
         AIF   ('&ZN' EQ '&@ZAPZN(&F#)').NSPACE               11/83 DBC
         SPACE 1                                              11/83 DBC
&ZN      SETC  '&@ZAPZN(&F#)'                                 11/83 DBC
.NSPACE  ANOP                                                 11/83 DBC
&FN      SETC  '&@ZAPFN(&F#)'                                 11/83 DBC
&FO      SETA  &@ZAPFO(&F#)                                   11/83 DBC
&C1      SETC  '+'                                            11/83 DBC
         AIF   (&FO GE 0).GOTSIGN                             11/83 DBC
&C1      SETC  '-'                                            11/83 DBC
.GOTSIGN ANOP                                                 11/83 DBC
         AIF   (&FO/2*2 NE &FO).IMED                          11/83 DBC
&NN      LH    R0,&ZN&C1&FO                                   11/83 DBC
&NN      SETC  ''                                             11/83 DBC
         AH    R0,&FN                                         11/83 DBC
         STH   R0,&ZN&C1&FO                                   11/83 DBC
         AGO   .LP2                                           11/83 DBC
.IMED    ANOP                                                 11/83 DBC
&NN      OC    &ZN&C1&FO.(1),&FN                              11/83 DBC
&NN      SETC  ''                                             11/83 DBC
         AGO   .LP2                                           11/83 DBC
.*                                                            11/83 DBC
.END2    ANOP                                                 11/83 DBC
&@ZCNT   SETA  0                                              11/83 DBC
         MEND                                                 11/83 DBC
         TITLE 'IBM CONTROL BLOCK MAPS'                       11/83 DBC
         PUNCH '         SETCODE AC(1)'                       11/83 DBC
         SPACE 3                                              11/83 DBC
DYNABLDL CSECT ,                                              11/83 DBC
         PRINT NOGEN                                          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CVT = COMMUNICATIONS VECTOR TABLE                  * 11/83 DBC
*        CVTFIX = PREFIX AND BASIC SECTIONS DSECT           * 11/83 DBC
*        CVTFIX = PREFIX SECTION BASE                       * 11/83 DBC
*        CVTMAP = BASIC SECTION BASE                        * 11/83 DBC
*        CVTXTNT1 = OS COMMON EXTENSION DSECT AND BASE      * 11/83 DBC
*        CVTXTNT2 = VS1/VS2 COMMON EXTENSION DSECT AND BASE * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CVT   DSECT=YES,PREFIX=YES,LIST=YES                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DCB = DATA CONTROL BLOCK                           * 11/83 DBC
*        IHADCB = DSECT AND BASE                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         DCBD  DSORG=(PS,PO)                                  11/83 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*        PDS2 = PARTITIONED DATASET DIRECTORY ENTRIES FOR   * 08/84 DBC
*               LOAD MODULES AS SHOWN BY THE BLDL SVC.      * 08/84 DBC
*        PDS2 = DSECT AND BASE                              * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
         IHAPDS ,                                             08/84 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SCVT = SECONDARY COMMUNICATIONS VECTOR TABLE       * 11/83 DBC
*        SCVTSECT = DSECT AND BASE                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IHASCVT LIST=YES                                     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SVCTABLE = SVC TABLE ENTRY                         * 11/83 DBC
*        SVC = DSECT AND BASE                               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IHASVC ,                                             11/83 DBC
SVCENTLN EQU   *-SVC               TABLE ENTRY LENGTH         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        STANDARD REGISTER NAMES                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #REGS R,                  STANDARD REGISTER NAMES    11/83 DBC*
               (BLDLBASE,R10),     IGC018 LOCATION POINTER    11/83 DBC*
               (VERSBASE,R9),      SPECIFIC VERSION VECTOR PT 11/83 DBC*
               (TABLBASE,R8)       HOOK ROUTINES AREA BASE    11/83 DBC
         SPACE 1                                              11/83 DBC
BLDLSVC  EQU   18                  BLDL SVC NUMBER            11/83 DBC
ENTRYCNT EQU   256                 DYNAMIC LIST SIZE          11/83 DBC
CLOKSHFT EQU   10                  A SHIFT VALUE FOR          11/83 DBC
*                                  SELECTING BITS 10-41 OF    11/83 DBC
*                                  THE TOD CLOCK. NOTE, THESE 11/83 DBC
*                                  ARE THE SAME BITS USED BY  11/83 DBC
*                                  THE SRM FOR ITS INTERVAL   11/83 DBC
*                                  TIMINGS.                   11/83 DBC
LINKSVC  EQU   1                   BLDL'S SIGNAL RETURNED TO  11/83 DBC
*                                  THE USER THAT THE          11/83 DBC
*                                  DIRECTORY ENTRY WAS FOUND  11/83 DBC
*                                  IN EITHER SVCLIB OR A      11/83 DBC
*                                  LINKLIST LIBRARY.          11/83 DBC
LEN3270  EQU   79                  LENGTH OF A 3270 DISPLAY   11/83 DBC
*                                  LINE                       11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  SUBAD=PUTWTO,MF=INIT                           11/83 DBC
         SPACE 3                                              11/83 DBC
         PRINT ON,GEN,NODATA                                  11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        BLDLIST -- THIS DSECT MAPS PLIST HEADER FIELDS     * 11/83 DBC
*        THAT A USER OF THE BLDL SVC PASSES TO BLDL.        * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
BLDLIST  DSECT ,                   BLDL PLIST HEADER          11/83 DBC
BLDENTS  DS    H                   NUMBER OF ELEMENTS BEING   11/83 DBC
*                                  PASSED                     11/83 DBC
BLDELEN  DS    H                   THE LENGTH OF EACH ELEMENT 11/83 DBC
BLDENT   DS    0C                  THE START OF THE FIRST     11/83 DBC
*                                  ELEMENT                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PDS1 -- THIS DSECT MAPS A PDS DIRECTORY ENTRY.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PDS1     DSECT ,                   PDS DIRECTORY ENTRY        11/83 DBC
PDS1NAME DS    CL8                 MEMBER NAME                11/83 DBC
PDS1TTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC
*                                  LIBRARY                    11/83 DBC
PDS1INDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC
PDS1LUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC
PDS1USRD DS    0X                  USER DATA FIELDS           11/83 DBC
         TITLE 'DYNAHEAD DSECT'                               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DYNAHEAD -- THIS DSECT MAPS THE DYNAMIC AREA       * 11/83 DBC
*        DESCRIPTOR TABLE.                                  * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNAHEAD DSECT ,                                              11/83 DBC
DHID     DC    CL8'DYNAHEAD'       ID FIELD                   11/83 DBC
AREA     DC    A(DYNAHEAD)         A(DYNA AREA)               11/83 DBC
AREASPLN DS    A                   AREA'S SUBPOOL AND LENGTH  11/83 DBC
SRCHPOPT DS    A                   A(SRCHPDS HOOK ROUTINE)    11/83 DBC
DFOUNDPT DS    A                   A(DFOUND HOOK ROUTINE)     11/83 DBC
         SPACE 1                                              11/83 DBC
DYNAFIRS DC    A(*-*)            | --> FIRST DYNALIST ENTRY   11/83 DBC
DYNAELEN DC    A(DYNLLEN)        | L' EACH DYNLLIST ENTRY     11/83 DBC
DYNALAST DC    A(*-*+(ENTRYCNT-1)*DYNLLEN) --> LAST ENTRY     11/83 DBC
DYNACLOK DS    F                   STARTUP TIME (BITS 10-41)  11/83 DBC
DYNAHITS DC    F'0'                LIST HITS                  11/83 DBC
DYNAMISS DC    F'0'                LIST MISSES                11/83 DBC
DYNADDED DC    F'0'                NAMES ADDED TO LIST        11/83 DBC
*                                  (INCLUDING STEALS)         11/83 DBC
DHEADLEN EQU   *-DYNAHEAD          L'HEADER                   11/83 DBC
         TITLE 'DYNL DSECT'                                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DYNL -- THIS DSECT MAPS A DYNAMIC BLDL LIST ENTRY. * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNL     DSECT ,                                              11/83 DBC
DYNLLRU# DS    F                   L.R.U. ALGORYTHM CONTROL   11/83 DBC
DYNLHITS DS    F                   HIT COUNT                  11/83 DBC
DYNLCLOK DS    F                   ENTRY CREATION TIME        11/83 DBC
DYNLELEN DS    H                   L'DIRECTORY ENTRY IN THIS  11/83 DBC
*                                  SLOT                       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GENERAL FORMAT PDS DIRECTORY ENTRY                 * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DENT     DS    0D                                             11/83 DBC
DENTNAME DS    CL8                 MEMBER NAME. NOTE, THIS    11/83 DBC
*                                  FIELD MUST BE DWORD        11/83 DBC
*                                  ALIGNED DUE TO A "CDS"     11/83 DBC
*                                  INSTRUCTION THAT IS ISSUED 11/83 DBC
*                                  AGAINST IT                 11/83 DBC
DYNLLOCK EQU   DENTNAME+3-DENTNAME LOCAL CONTROL LOCK BYTE    11/83 DBC
UNLOCKED EQU   C' '                LOCAL CONTROL LOCK FLAG    11/83 DBC
DENTTTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC
*                                  LIBRARY                    11/83 DBC
DENTCNCT DS    FL1                 LIBRARY CONCATENATION      11/83 DBC
*                                  INDEX                      11/83 DBC
DENTLIBF DC    AL1(LINKSVC)        ORIGINATING LIBRARY TYPE   11/83 DBC
*                                  ALWAYS "LINKLIST LIB")     11/83 DBC
DENTINDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC
DENTLUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC
DENTUSRD DS    XL(DENTLUSR*2)      USER DATA (MAX LENGTH)     11/83 DBC
DENTLEN  EQU   *-DENT              MAX D'ENTRY LENGTH         11/83 DBC
         SPACE 1                                              11/83 DBC
DYNLEND  DS    0D                  ALIGNMENT                  11/83 DBC
DYNLLEN  EQU   DYNLEND-DYNL        L'DYNAMIC BLDL LIST ENTRY  11/83 DBC
         TITLE 'IGC018 DSECT'                                 11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IGC018 -- THIS IS A DUMMY DSECT USED SIMPLY TO     * 11/83 DBC
*        SHOW WHERE, IN THE CODE, "BLDLBASE" IS LOADED AND  * 11/83 DBC
*        WHERE IT IS NOT.                                   * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
IGC018   DSECT ,                                              11/83 DBC
         TITLE 'VERSION DSECT'                                11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        VERSION -- THIS DSECT MAPS A VECTOR CONTAINING     * 11/83 DBC
*        POINTERS TO THE FOUR PARTS OF A VERSION TABLE.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSION  DSECT ,                                              11/83 DBC
IDVV     DS    A                   --> VERSION VERIFIER       11/83 DBC
SRCHPOVV DS    A                   --> ORIGINAL "SRCHPDS" COD 11/83 DBC
DFOUNDVV DS    A                   --> ORIGINAL "DFOUND" CODE 11/83 DBC
DATAOFFS DS    A                   --> IBM DATA FIELDS DESCRIPTORS  DBC
         TITLE 'ORIGINAL DSECT'                               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        ORIGINAL -- THIS DSECT MAPS CONTROL BLOCKS (PARTS  * 11/83 DBC
*        ONE, TWO, AND THREE OF THE VARIOUS VERSION TABLES) * 11/83 DBC
*        THAT DESCRIBE SECTIONS OF ORIGINAL CODE IN IGC018. * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ORIGINAL DSECT ,                                              11/83 DBC
ORIGLOC  DS    Y                   OFFSET TO ORIGINAL CODE'S LOCATION C
ORIGLEN  DS    Y                   ORIGINAL CODE'S LENGTH     11/83 DBC
ORIGCODE DS    0X                  ORIGINAL CODE              11/83 DBC
         TITLE 'FIELDS DSECT'                                 11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        FIELDS -- THIS DSECT MAPS TABLES THAT DESCRIBE IBM * 11/83 DBC
*        PRIVATE DATA FIELDS. EACH ENTRY CORRESPONDS EITHER * 11/83 DBC
*        TO A DATA FIELD OR TO IMMEDIATE DATA THAT DYNABLDL * 11/83 DBC
*        REFERENCES BUT THAT IS PRIVATE TO IBM AND,         * 11/83 DBC
*        THEREFORE, MAY CHANGE ACCROSS VARIOUS VERSIONS OF  * 11/83 DBC
*        IGC018.                                            * 11/83 DBC
*                                                           * 11/83 DBC
*        DATA FIELD ENTRIES CONSIST OF AN S-CON             * 11/83 DBC
*        (BASE-REGISTER/DISPLACEMENT) WHICH CAN BE USED TO  * 11/83 DBC
*        REFERENCE THAT FIELD IN A PARTICULAR VERSION OF    * 11/83 DBC
*        IGC018.                                            * 11/83 DBC
*                                                           * 11/83 DBC
*        "IMMEDIATE DATA" ENTRIES CONSIST OF A SINGLE BYTE  * 11/83 DBC
*        CONTAINING THE ACTUAL BIT PATTERN USED BY A        * 11/83 DBC
*        PARTICULAR VERSION OF IGC018 TO REPRESENT THE      * 11/83 DBC
*        IMMEDIATE DATA.                                    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
FIELDS   DSECT ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        VARIOUS BASE REGISTERS USED BY IGC018.             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
RBASE    DS    S                   IGC018'S PROGRAM BASE      11/83 DBC
*                                  REGISTER DESCRIPTOR. THIS  11/83 DBC
*                                  S-CON GIVES THE            11/83 DBC
*                                  PROGRAMMING BASE REGISTER  11/83 DBC
*                                  (USUALLY R12) AND THE      11/83 DBC
*                                  RELATIVE BASE ADDRESS      11/83 DBC
*                                  (USUALLY +2) USED BY       11/83 DBC
*                                  IGC018.                    11/83 DBC
         SPACE 1                                              11/83 DBC
RPDS1    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC
*                                  POINT TO THE FOUND PDS     11/83 DBC
*                                  DIRECTORY ENTRY AT THE     11/83 DBC
*                                  TIME THAT "DFOUND" IS      11/83 DBC
*                                  CALLED.                    11/83 DBC
RLIST    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC
*                                  POINT TO THE USER'S BLDL   11/83 DBC
*                                  PARAMETER LIST.            11/83 DBC
RDCB     DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC
*                                  POINT TO THE DCB FOR THE   11/83 DBC
*                                  LIBRARIES CURRENTLY BEING  11/83 DBC
*                                  SEARCHED.                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FIELDS IN IGC018'S DYNAMIC WORK AREA               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
RDAREA   DS    S                   BASE/DISPLACEMENT          11/83 DBC
*                                  NOTE, THIS FIELD IS A 256  11/83 DBC
*                                  BYTE DIRECTORY BLOCK       11/83 DBC
*                                  BUFFER WHOSE INTERNAL      11/83 DBC
*                                  STRUCTURE IS PUBLIC AND    11/83 DBC
*                                  WHICH, AT THE TIME THE     11/83 DBC
*                                  SRCHPDS HOOK ROUTINE IS    11/83 DBC
*                                  CALLED, CAN BE USED BY     11/83 DBC
*                                  DYNABLDL FOR ITS OWN       11/83 DBC
*                                  PURPOSES.                  11/83 DBC
         SPACE 1                                              11/83 DBC
CONCAT#  DS    S                   BASE/DISPLACEMENT          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FIELDS IN IGC018'S SVRB EXTENDED SAVE AREA         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
EXSKEY   DS    S                   BASE/DISPLACEMENT          11/83 DBC
EXSFLG   DS    S                   BASE/DISPLACEMENT          09/84 DBC
EXSBLDL  DS    B                   FLAG'S BIT VALUE           09/84 DBC
         SPACE 3                                              11/83 DBC
FIELDSLN EQU   *-FIELDS            L'DATA AREA                11/83 DBC
         TITLE 'DYNAWA DSECT'                                 11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DYNAWA -- DYNAMIC WORK AREA USED BY THE TWO HOOK   * 11/83 DBC
*        ROUTINES. THE "SRCHPDS" ROUTINE MAPS THIS AREA     * 11/83 DBC
*        INTO THE "RDAREA" FIELD OF BLDL'S "WORKAREA" DSECT * 11/83 DBC
*        WHICH IS AN I/O BUFFER FOR DIRECTORY BLOCKS AND IS * 11/83 DBC
*        NOT IN USE AT THE TIME THAT "SRCHPDS" IS CALLED.   * 11/83 DBC
*        THE "DFOUND" ROUTINE HAS TO GETMAIN ITS "DYNAWA"   * 11/83 DBC
*        AREA SINCE THE "RDAREA" FIELD IS IN USE AT THE     * 11/83 DBC
*        TIME THAT "DFOUND" IS CALLED.                      * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNAWA   DSECT ,                   LOCAL DYNAMIC WORK AREA    11/83 DBC
REGSAVE  DS    13A                 REGISTER SAVE AREA         11/83 DBC
CLOKSAVE DS    2A                  "STCK" BUFFER              11/83 DBC
KEYSAVE  DS    X                   CALLER'S KEY SAVE AREA     11/83 DBC
USERKEY  DS    X                   USER'S KEY SAVE AREA       11/83 DBC
BLDLFLG  DS    B                   IGC018'S EXSFLG SAVE AREA  09/84 DBC
CCIDSAVE DS    X                   CONCATENATION INDEX SAVE A 11/83 DBC
DYNAWAL  EQU   *-DYNAWA            L'DYNAWA                   11/83 DBC
         #TEST SIZE=(DYNAWAL,LE,256) MUST FIT WITHIN IGC018'S 11/83 DBC*
                                   "RDAREA" FIELD             11/83 DBC
         TITLE 'INFO DSECT'                                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        INFO -- THIS DSECT MAPS THE INFORMATION MESSAGE    * 11/83 DBC
*        PRINTED BY THE REPORT FUNCTION FOR EACH DYNAMIC    * 11/83 DBC
*        BLDL TABLE ENTRY. NOTE, EACH MESSAGE LINE CONTAINS * 11/83 DBC
*        THREE SEGMENTS. THE FIRST CONTAINS INFORMATION     * 11/83 DBC
*        SORTED BY BLDL MEMBER NAME. THE SECOND CONTAINS    * 11/83 DBC
*        INFORMATION SORTED BY HITS FREQUENCY. THE THIRD    * 11/83 DBC
*        CONTAINS INFORMATION SORTED BY LEAST RECENT USAGE. * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
INFO     DSECT ,                                              11/83 DBC
COUNT    DS    CL3,C' '            MSG LINE NUMBER            11/83 DBC
         SPACE 1                                              11/83 DBC
NAMEBAR  DS    C'|',C' '           GUTTER                     11/83 DBC
NAMENAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC
NAMELIB# DS    CL2,C' '            LINKLIST LIB ID NUMBER     11/83 DBC
NAMEHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC
         SPACE 1                                              11/83 DBC
HITSBAR  DS    C'|',C' '           GUTTER                     11/83 DBC
HITSHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC
HITSRENT DS    C                   REENTRANT MODULE SIGNAL    08/84 DBC
HITSNAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC
HITSIDLE DS    CL4,C' '            ENTRY'S IDLE TIME          11/83 DBC
HITSAGE  DS    CL4,C' '            ENTRY AGE                  11/83 DBC
         SPACE 1                                              11/83 DBC
LRUBAR   DS    C'|',C' '           GUTTER                     11/83 DBC
LRUIDLE  DS    CL4,C' '            IDLE INTERVAL              11/83 DBC
LRUNAME  DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC
LRUHITS  DS    CL5                 HITS COUNT                 11/83 DBC
         SPACE 1                                              11/83 DBC
INFOLEN  EQU   *-INFO              MESSAGE LENGTH             11/83 DBC
         #TEST SIZE=(INFOLEN,LE,LEN3270) SHOULD FIT ON A 3270 11/83 DBC
         TITLE 'INITIAL ENTRY - FUNCTION SELECTION'           11/83 DBC
************************************************************* 11/83 DBC
*        STANDARD NON-REENTRANT ENTRY LINKAGE               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DYNABLDL #ENTER 'COPYRIGHT DAVID B. COLE - 1983',BASES=2      11/83 DBC
         L     R3,0(,R1)           LOAD THE PARM FIELD PTR    11/83 DBC
         LA    R3,0(,R3)           PURIFY IT                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        ENQ TO SERIALIZE DYNABLDL PROCESSING               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ENQ   MF=(E,SERIALIZ)                                11/83 DBC
         OI    FLAG,ENQED          SET AUDIT FLAG             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GET THE CURRENT T.O.D. ISSOLATE BITS 10-41 WHICH   * 11/83 DBC
*        MEASURE TIME RANGING FROM ABOUT 1/1000TH OF A      * 11/83 DBC
*        SECOND UP TO APPROXIMATELY ONE MONTH. NOTE, THIS   * 11/83 DBC
*        IS THE SAME TIME SCALE USED BY THE SRM FOR ITS     * 11/83 DBC
*        INTERVAL TIMINGS.                                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STCK  CLOCK               GET THE TOD CLOCK          11/83 DBC
         LM    R0,R1,CLOCK         LOAD THE VALUE             11/83 DBC
         SLDL  R0,CLOKSHFT         ISSOLATE BITS 10-41 INTO   11/83 DBC
*                                  REGISTER 0.                11/83 DBC
         ST    R0,CLOCK            STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        LOCATE THE BLDL SVC ROUTINE (IGC018).              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     BLDLBASE,CVTPTR     --> CVT                    11/83 DBC
         L     BLDLBASE,CVTABEND-CVTMAP(,BLDLBASE) --> SCVT   11/83 DBC
         L     BLDLBASE,SCVTSVCT-SCVTSECT(,BLDLBASE) --> SVCTABLE 3 DBC
         L     BLDLBASE,SVCENTRY-SVC+BLDLSVC*SVCENTLN(,BLDLBASE) 83 DBC
*                                  --> IGC018                 11/83 DBC
         USING IGC018,BLDLBASE     SIGNAL THIS FACT           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        IDENTIFY WHICH VERSION OF IGC018 IS IN THIS        * 11/83 DBC
*        SYSTEM.                                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R2,VERSIONS-4       --> RECOGNITION VECTOR     11/83 DBC
         BALR  R4,0                LOAD LOOP POINT            11/83 DBC
         LA    R2,4(,R2)           --> NEXT TABLES PTR        11/83 DBC
         ICM   VERSBASE,15,0(R2)   --> SPECIFIC TABLES VECTOR 11/83 DBC
*                                  EO-RECOG VECTOR?           11/83 DBC
         BZ    UNRECOGN            YES, IGC018 NOT RECOGNIZED 11/83 DBC
         USING VERSION,VERSBASE    NO, DCL TABLE VECTOR BASE  11/83 DBC
         L     R1,IDVV             --> IDENTIFIER CODE        11/83 DBC
         BAL   R14,VERIFY          DOES IGC018 MATCH THIS?    11/83 DBC
         BR    R4                  +0 NO, KEEP TRYING         11/83 DBC
         NOPR  0                      (FILLER)                11/83 DBC
*                                  +4 YES, PROCEED            11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        THE CURRENT VERSION OF IGC018 HAS BEEN RECOGNIZED. * 11/83 DBC
*        NOW EXAMINE THE "SRCHPDS" HOOK LOCATION TO SEE     * 11/83 DBC
*        WHAT IT CONTAINS.                                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC
         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC
         CLC   0(SRCHPOAA-SRCHPOHH,R15),SRCHPOHH HAS THE      11/83 DBC
*                                  SRCHPO HOOK ALREADY BEEN   11/83 DBC
*                                  SET?                       11/83 DBC
         BE    VEROK1              YES, PROCEED               11/83 DBC
         OI    FLAG,SRCHPO00       NO, REMEMBER               11/83 DBC
         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC
*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC
         B     BADSTRUC            +0 NO, ERROR               11/83 DBC
*                                  +4 YES, PROCEED            11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
VEROK1   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW DO THE SAME FOR THE "DFOUND" HOOK LOCATION.    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC
         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC
         CLC   0(DFOUNDAA-DFOUNDHH,R15),DFOUNDHH HAS THE      11/83 DBC
*                                  DFOUND HOOK ALREADY BEEN   11/83 DBC
*                                  SET?                       11/83 DBC
         BE    VEROK2              YES, PROCEED               11/83 DBC
         OI    FLAG,DFOUND00       NO, REMEMBER               11/83 DBC
         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC
*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC
         B     BADSTRUC            +0 NO, ERROR               11/83 DBC
*                                  +4 YES, PROCEED            11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
VEROK2   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        EXAMINE THE PARM FIELD TO DETERMINE THE DESIRED    * 11/83 DBC
*        FUNCTION ("START", "STOP", OR "REPORT").           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LTR   R3,R3               IS A PARM FIELD SET UP?    11/83 DBC
         BZ    START               NO, ASSUME "START"         11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,PARMS-(PRMROOTL-(L'PRMLEN-1)) YES, PRIME   11/83 DBC
         SR    R2,R2               PRIME LENGTH REGISTER      11/83 DBC
         BALR  R14,0               LOAD SCAN LOOP HEAD        11/83 DBC
         LA    R15,PRMROOTL-(L'PRMLEN-1)(R2,R15) --> NEXT ENT 11/83 DBC
         ICM   R2,3,PRMLEN(R15)    GET L'ENTRY; EO-TABLE?     11/83 DBC
         BM    INVALID             YES, ERROR                 11/83 DBC
         LA    R2,L'PRMLEN-1(,R2)  NO, GET L'TEXT+L'LENFLD-1  11/83 DBC
         CLC   0(*-*,R3),PRMTEXT-2(R15) (EXECUTED)            11/83 DBC
         #TEST SIZE=(PRMTEXT-2,EQ,PRMLEN)                     11/83 DBC
         EX    R2,*-6              RIGHT ENTRY?               11/83 DBC
         BHR   R14                 NOT YET, CONTINUE SEARCH   11/83 DBC
         BL    INVALID             NO, INVALID PARM           11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R15,PRMHNDLR(,R15)  YES, LOAD HANDLER ADDRESS  11/83 DBC
         BR    R15                 GOTO THE HANDLER           11/83 DBC
         TITLE 'START -- DYNAMIC BLDL STARTUP ROUTINE'        11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        START -- THIS ROUTINE STARTS UP DYNAMIC BLDL       * 11/83 DBC
*        PROCESSING.                                        * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        START PROCESSING REQUIRES AUTHORIZATION. TEST THIS * 11/83 DBC
*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC
*        STATE.                                             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
START    MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC
         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        START PROCESSING CAN PROCEED ONLY IF BOTH IGC018   * 11/83 DBC
*        HOOKS ARE NOT YET SET. CHECK THIS OUT.             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOK LOCATIONS 11/83 DBC
*                                  CLEAR?                     11/83 DBC
         BZ    DONEB4              NO, BOTH ARE SET; EXIT.    11/83 DBC
         BM    MESS                NO, ONE IS, ONE ISN'T; THE 11/83 DBC
*                                  USER MUST INVOKE STOP      11/83 DBC
*                                  PROCESSING TO CLEAN UP THE 11/83 DBC
*                                  MESS.                      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        IGC018 HAS BEEN POSITIVELY RECOGNIZED. NOW ADJUST  * 11/83 DBC
*        ALL IBM PRIVATE FIELD REFERENCES, CONTAINED IN THE * 11/83 DBC
*        TWO HOOK ROUTINES ("SRCHPDS" AND "DFOUND"), SO     * 11/83 DBC
*        THAT THEY CORRESPOND CORRECTLY TO THE RECOGNIZED   * 11/83 DBC
*        VERSION OF IGC018. NOTE, I DO THIS NOW, PRIOR TO   * 11/83 DBC
*        MOVING THE HOOK ROUTINES TO SP245, SO THAT I DON'T * 11/83 DBC
*        HAVE TO DO IT IN KEY-0.                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        DEVELOP A RETURN DESCRIPTOR FOR THE SRCHPDS HOOK.  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DATAOFFS         --> IBM PRIVATE FIELDS     11/83 DBC
*                                  DESCRIPTORS                11/83 DBC
         USING FIELDS,R1           DCL A BASE FOR THEM        11/83 DBC
         SR    R14,R14             CLEAR FOR INSERT           11/83 DBC
         ICM   R14,3,RBASE         GET IGC018'S BASE          11/83 DBC
*                                  DESCRIPTOR                 11/83 DBC
         SRDL  R14,12              SEPARATE THE DISPLACEMENT  11/83 DBC
*                                  FROM THE BASE REG          11/83 DBC
         SRL   R15,20              ALIGN THE DISPLACEMENT     11/83 DBC
         SLL   R14,12              ALIGN THE REG VALUE        11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,SRCHPOVV         --> SRCHPDS VERIFY DATA    11/83 DBC
         DROP  R1                  RELEASE FIELDS BASE        11/83 DBC
         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC
         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC
         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC
*                                  DISPLACEMENT               11/83 DBC
         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC
*                                  TO DETERMINE THE ADDRESS   11/83 DBC
*                                  OF THE LOCATION PAST THE   11/83 DBC
*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC
*                                  BASE REGISTER.             11/83 DBC
         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC
         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC
         OR    R0,R14              NO, GET COMBINED           11/83 DBC
*                                  BASE/DISPLACEMENT VALUE    11/83 DBC
         STH   R0,SRCHPOXX         STORE FOR USE BY @ZAP      11/83 DBC
         DROP  R1                  RELEASE SRCHPDS VERIFY     11/83 DBC
*                                  DATA BASE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW DO THE SAME FOR THE DFOUND HOOK.               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> DFOUND VERIFY DATA     11/83 DBC
         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC
         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC
         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC
*                                  DISPLACEMENT               11/83 DBC
         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC
*                                  TO DETERMINE THE ADDRESS   11/83 DBC
*                                  OF THE LOCATION PAST THE   11/83 DBC
*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC
*                                  BASE REGISTER.             11/83 DBC
         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC
         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC
         OR    R0,R14              NO, GET COMBINED           11/83 DBC
*                                  BASE/DISPLACEMENT VALUE    11/83 DBC
         STH   R0,DFOUNDXX         STORE FOR USE BY @ZAP      11/83 DBC
         DROP  R1                  RELEASE DFOUND VERIFY DATA 11/83 DBC
*                                  BASE                       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW CALL @ZAP TO ADJUST ALL REFERENCES TO IBM      * 11/83 DBC
*        PRIVATE DATA FIELDS.                               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DATAOFFS         --> THE TABLE OF IBM       11/83 DBC
*                                  PRIVATE FIELD REFERENCE    11/83 DBC
*                                  DESCRIPTORS.               11/83 DBC
         L     R15,=A(@ZAP)        --> THE GRAND ADJUSTER     11/83 DBC
         BALR  R14,R15             ADJUST IBM FIELDS REFS     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        NOW ALLOCATE GLOBAL, FIXED, KEY-0, FETCH           * 11/83 DBC
*        ACCESSABLE MEMORY (SP245) INTO WHICH THE HOOK      * 11/83 DBC
*        ROUTINES AND DYNAMIC BLDL TABLE WILL BE BUILT. THE * 11/83 DBC
*        AREA WILL BE USED AS FOLLOWS.                      * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE "DYNAHEAD" TABLE.                            * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE "SRCHPDS" HOOK ROUTINE CONSTRUCTED AS        * 11/83 DBC
*          FOLLOWS:                                         * 11/83 DBC
*          - THE "SRCHPDS" CODE RELOCATED FROM THIS MODULE, * 11/83 DBC
*          - THE "SRCHPDS" VERIFIED CODE COPIED FROM        * 11/83 DBC
*            IGC018,                                        * 11/83 DBC
*          - THE "SRCHPOBC" BRANCH STATEMENT.               * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE "DFOUND" HOOK ROUTINE CONSTRUCTED AS         * 11/83 DBC
*          FOLLOWS:                                         * 11/83 DBC
*          - THE "DFOUND" CODE RELOCATED FROM THIS MODULE,  * 11/83 DBC
*          - THE "DFOUND" VERIFIED CODE COPIED FROM IGC018, * 11/83 DBC
*          - THE "DFOUNDBC" BRANCH STATEMENT.               * 11/83 DBC
*                                                           * 11/83 DBC
*        - THE DYNAMIC BLDL TABLE, DWORD ALIGNED.           * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE  THE AMOUNT OF MEMORY NEEDED.            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R0,7                GET DWORD ROUNDER          11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R3,(DHEADLEN+7)/8*8 GET L'DYNAHEAD ROUNDED     11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,SRCHPOVV         --> VERIFIER               11/83 DBC
         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC
         LA    R1,SRCHPOLL+L'SRCHPOBC+7(,R1) INCLUDE L'BODY - 11/83 DBC
         OR    R1,R0                ROUNDED UP TO -           11/83 DBC
         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC
         AR    R3,R1               ACCUMULATE                 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> VERIFIER               11/83 DBC
         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC
         LA    R1,DFOUNDLL+L'DFOUNDBC+7(,R1) INCLUDE L'BODY - 11/83 DBC
         OR    R1,R0                ROUNDED UP TO -           11/83 DBC
         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC
         AR    R3,R1               ACCUMULATE                 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,DYNLLEN          GET L'DLIST ENTRY          11/83 DBC
         #TEST SIZE=(DYNLLEN/8*8,EQ,DYNLLEN)                  11/83 DBC
         MH    R1,=Y(ENTRYCNT)     GET DLIST TABLE SIZE       11/83 DBC
         AR    R3,R1               ACCUMULATE IT              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GETMAIN AND CLEAR THE AREA                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2 KEY0    11/83 DBC
         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC
         SPACE 1                                              11/83 DBC
         ICM   R3,8,=AL1(245)      GET SUBPOOL ID             11/83 DBC
         GETMAIN R,LV=(R3)         ALLOCATE GLOBAL MEMORY     11/83 DBC
         LR    TABLBASE,R1         COPY AREA PTR              11/83 DBC
         USING DYNAHEAD,TABLBASE   DCL A BASE FOR IT          11/83 DBC
         LR    R0,R1               COPY THE AREA PTR          11/83 DBC
         LR    R1,R3               COPY THE AREA LENGTH       11/83 DBC
         SR    R15,R15             PREPARE TO CLEAR THE AREA  11/83 DBC
         MVCL  R0,R14              CLEAR THE AREA             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        BEGIN TO CONSTRUCT THE DYNAHEAD TABLE              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   DHID,=CL8'DYNAHEAD' STORE TABLE ID             11/83 DBC
         ST    TABLBASE,AREA       SAVE A(AREA)               11/83 DBC
         ST    R3,AREASPLN         SAVE SP & LEN OF AREA      11/83 DBC
         MVC   DYNACLOK,CLOCK      COPY TOD BITS 10-41        11/83 DBC
         LA    R14,DYNAHEAD+(DHEADLEN+7)/8*8 --> PAST TABLE   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE SRCHPDS HOOK ROUTINE                 * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R14,SRCHPOAA        STORE IGC018'S POINTER     11/83 DBC
         ST    R14,SRCHPOPT        STORE A(SRCHPDS HOOK)      11/83 DBC
         ST    TABLBASE,SRCHPODH   A(DYNAHEAD) --> SRCHPDS    11/83 DBC
         LA    R0,SRCHPDS          --> SRCHPDS SOURCE         11/83 DBC
         LA    R1,SRCHPOLL         GET ITS LENGTH             11/83 DBC
         LR    R15,R1              GET L'SINK                 11/83 DBC
         MVCL  R14,R0              COPY BODY OF SRCHPDS HOOK  11/83 DBC
         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC
         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC
         LR    R1,R15              COPY                       11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC
         MVC   0(L'SRCHPOBC,R14),SRCHPOBC COPY RETURN INSTR   11/83 DBC
         LA    R14,L'SRCHPOBC+7(,R14) ADVANCE -               11/83 DBC
         SRL   R14,3                SCANNER -                 11/83 DBC
         SLL   R14,3                 ROUNDED                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE DFOUND HOOK ROUTINE                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R14,DFOUNDAA        STORE IGC018'S POINTER     11/83 DBC
         ST    R14,DFOUNDPT        STORE A(DFOUND HOOK)       11/83 DBC
         ST    TABLBASE,DFOUNDDH   A(DYNAHEAD) --> DFOUND     11/83 DBC
         LA    R0,DFOUND           --> DFOUND SOURCE          11/83 DBC
         LA    R1,DFOUNDLL         GET ITS LENGTH             11/83 DBC
         LR    R15,R1              GET L'SINK                 11/83 DBC
         MVCL  R14,R0              COPY BODY OF DFOUND HOOK   11/83 DBC
         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC
         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC
         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC
         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC
         LR    R1,R15              COPY                       11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC
         MVC   0(L'DFOUNDBC,R14),DFOUNDBC COPY RETURN INSTR   11/83 DBC
         LA    R14,L'DFOUNDBC+7(,R14) ADVANCE -               11/83 DBC
         SRL   R14,3                SCANNER -                 11/83 DBC
         SLL   R14,3                 ROUNDED                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE DYNAMIC LIST TABLE DESCRIPTOR AND    * 11/83 DBC
*        SKELETON.                                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R14,DYNAFIRS        STORE SO-TABLE             11/83 DBC
         LA    R0,DYNLLEN          GET L'ENTRY                11/83 DBC
         ST    R0,DYNAELEN         STORE                      11/83 DBC
         LR    R1,R0               COPY                       11/83 DBC
         MH    R1,=Y(ENTRYCNT-1)   GET OFFSET TO LAST ENTRY   11/83 DBC
         AR    R1,R14              CNVRT TO ADDRESS           11/83 DBC
         ST    R1,DYNALAST         STORE                      11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R14            DCL DYNL ENTRY BASE        11/83 DBC
DYNLINIT OI    DENTNAME+DYNLLOCK,UNLOCKED "NOT LOCKED"        11/83 DBC
         BXLE  R14,R0,DYNLINIT     LOOP FOR ALL ENTRIES       11/83 DBC
         DROP  R14                 RELEASE DYNL ENTRY BASE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        COPY THE HOOKS TO IGC018.                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC
         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC
         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC
         MVC   0(DFOUNDHL,R1),DFOUNDHH COPY HOOK TO IGC018    11/83 DBC
         NI    FLAG,255-DFOUND00   REMEMBER HOOK NOW SET      11/83 DBC
         SPACE 3                                              11/83 DBC
         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC
         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC
         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC
         MVC   0(SRCHPOHL,R1),SRCHPOHH COPY HOOK TO IGC018    11/83 DBC
         NI    FLAG,255-SRCHPO00   REMEMBER HOOK NOW SET      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        START PROCESSING DONE. CLEAN UP AND EXIT.          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  TABLBASE            RELEASE GLOBAL AREA BASE   11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET KEYADDR=PSWKEY,WORKREG=2 RESTORE KEY8        11/83 DBC
         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC
         SPACE 1                                              11/83 DBC
         B     STARTED             ISSUE MSG AND EXIT         11/83 DBC
         TITLE 'STOP -- DYNAMIC BLDL SHUTDOWN ROUTINE'        11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        STOP -- THIS ROUTINE SHUTS DOWN DYNAMIC BLDL       * 11/83 DBC
*        PROCESSING.                                        * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        STOP PROCESSING REQUIRES AUTHORIZATION. TEST THIS  * 11/83 DBC
*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC
*        STATE.                                             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
STOP     MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC
         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        I WILL PROCEED ONLY IF AT LEAST ONE HOOK IS SET.   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SRCHPO00+DFOUND00 IS EITHER HOOK SET?     11/83 DBC
         BO    STOPDB4             NO, JUST EXIT              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        AT LEAST ONE HOOK HAS BEEN PREVIOUSLY SET. LOAD    * 11/83 DBC
*        KEY0 SO THAT I CAN CLEAR IT (OR THEM).             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2         11/83 DBC
         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CLEAR THE "DFOUND" HOOK FIRST.                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         BALR  TABLBASE,0          LOAD A NON-ZERO POINTER TO 11/83 DBC
*                                  AN ACCESSIBLE GARBAGE AREA 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,DFOUND00       IS THIS HOOK ALREADY CLER? 11/83 DBC
         BNZ   CLEARD1             YES, SKIP                  11/83 DBC
         L     R1,DFOUNDVV         NO, --> VERIFY DATA        11/83 DBC
         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC
         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC
         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC
         L     TABLBASE,DFOUNDAA-DFOUNDHH(,R15) --> INTERCEPT 11/83 DBC
         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC
*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC
         MVC   0(DFOUNDHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC
         OI    FLAG,DFOUND00       SET AUDIT FLAG             11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
CLEARD1  DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW CLEAR THE "SRCHPDS" HOOK.                      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SRCHPO00       IS THIS HOOK ALREADY CLER? 11/83 DBC
         BNZ   CLEARD2             YES, SKIP                  11/83 DBC
         L     R1,SRCHPOVV         NO, --> VERIFY DATA        11/83 DBC
         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC
         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC
         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC
         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' IS     11/83 DBC
*                                  CONTROL TABLE PTR OK?      11/83 DBC
         BE    GOTDHPTR            YES, PROCEED               11/83 DBC
         L     TABLBASE,SRCHPOAA-SRCHPOHH(,R15) NO, -->       11/83 DBC
*                                  INTERCEPT ROUTINE          11/83 DBC
         L     TABLBASE,SRCHPODH-SRCHPDS(,TABLBASE) -->       11/83 DBC
*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC
GOTDHPTR MVC   0(SRCHPOHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC
         OI    FLAG,SRCHPO00       SET AUDIT FLAG             11/83 DBC
         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC
CLEARD2  DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW, IF I WAS ABLE TO GET A POINTER TO THE HEADER  * 11/83 DBC
*        TABLE, THEN FREEMAIN DYNABLDL'S GLOBAL DATA AREA.  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' DO I   11/83 DBC
*                                  HAVE A PTR TO THE CONTROL  11/83 DBC
*                                  TABLE?                     11/83 DBC
         BNE   FREED               NO, FORGET IT              11/83 DBC
         USING DYNAHEAD,TABLBASE   YES, DCL HEADER TABLE'S    11/83 DBC
*                                  BASE                       11/83 DBC
         L     R1,AREA             --> GLOBAL AREA            11/83 DBC
         L     R0,AREASPLN         GET ITS SUBPOOL AND LENGTH 11/83 DBC
         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC
         DROP  TABLBASE            RELEASE BASE               11/83 DBC
         SR    TABLBASE,TABLBASE   SET "TABLE FREED" SIGNAL   11/83 DBC
FREED    DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RESTORE KEY8.                                      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MODESET KEYADDR=PSWKEY,WORKREG=2                     11/83 DBC
         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        EXIT ACCORDING TO WHETHER OR NOT I WAS ABLE TO     * 11/83 DBC
*        FREE THE GLOBAL AREA.                              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LTR   TABLBASE,TABLBASE   WAS THE GLOBAL AREA FOUND? 11/83 DBC
         BNZ   PARTSTOP            NO, ISSUE SPECIAL MSG      11/83 DBC
         B     STOPPED             YES, EXIT NORMALLY         11/83 DBC
         TITLE 'REPORT -- DYNAMIC BLDL ACTIVITY REPORTING ROUTINE'  DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        REPORT -- THIS ROUTINE GENERATES A REPORT OF       * 11/83 DBC
*        DYNAMIC BLDL'S ACTIVITY. THREE SORTS OF THE TABLE  * 11/83 DBC
*        ARE PRINTED IN 3-COLUMN FORMAT. THE FIRST LISTS    * 11/83 DBC
*        THE TABLE BY MEMBER NAME. THE SECOND LISTS IT BY   * 11/83 DBC
*        HIT COUNT (MOST HITS TO LEAST HITS). THE THIRD     * 11/83 DBC
*        LISTS THE TABLE BY L.R.U. CHARACTERISTIC (MOST TO  * 11/83 DBC
*        LEAST RECENTLY USED). ALSO A SUMMARY MESSAGE IS    * 11/83 DBC
*        BOTH PRINTED AND DISPLAYED VIA WTO GIVING THE      * 11/83 DBC
*        "HIT RATE" AND OTHER DATA.                         * 11/83 DBC
*                                                           * 11/83 DBC
*        OUTPUT IS WRITTEN TO SYSPRINT WHICH CAN HAVE ANY   * 11/83 DBC
*        RECORD FORMAT AND ANY RECORD LENGTH THAT CAN HOLD  * 11/83 DBC
*        AT LEAST 79 BYTES OF DATA. NOTE THAT THE RECORD    * 11/83 DBC
*        LENGTH IS SUITABLE FOR DISPLAY ON A 3270 TERMINAL. * 11/83 DBC
*                                                           * 11/83 DBC
*        IF SYSPRINT IS OMITTED, THEN ONLY A SUMMARY        * 11/83 DBC
*        MESSAGE IS DISPLAYED TO THE OPERATORS.             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        PROCEED ONLY IF DYNABLDL IS CURRENTLY ACTIVE.      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
REPORT   TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOKS IN?      11/83 DBC
         BNZ   DOWN                NO, EXIT                   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DYNABLDL IS ACTIVE. LOCATE THE DYNABLDL GLOBAL     * 11/83 DBC
*        AREA.                                              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     TABLBASE,DFOUNDVV   --> VERIFY DATA            11/83 DBC
         LH    TABLBASE,ORIGLOC-ORIGINAL(,TABLBASE) GET HOOK  11/83 DBC
*                                  OFFSET                     11/83 DBC
         LA    TABLBASE,IGC018(TABLBASE) CNVRT TO ADDRESS     11/83 DBC
         L     TABLBASE,DFOUNDAA-DFOUNDHH(,TABLBASE) -->      11/83 DBC
*                                  "SRCHPDS" INTERCEPT        11/83 DBC
         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC
*                                  CONTROL TABLE              11/83 DBC
         USING DYNAHEAD,TABLBASE   DCL ITS BASE               11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE FIRST SUMMARY MESSAGE.               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   STATBUF(11),=C'TABLE LIFE '                    11/83 DBC
         L     R1,CLOCK            GET CURRENT TIME           11/83 DBC
*                                  (SECONDS*1024)             11/83 DBC
         S     R1,DYNACLOK         GET TABLE LIFE             11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         SR    R0,R0               CLEAR AGAIN                11/83 DBC
         D     R0,=F'60'           CNVRT TO HOURS(R1) & MINS  11/83 DBC
         BAL   R14,ZONEIT          CNVRT HOURS TO EBCDIC      11/83 DBC
         MVC   STATBUF+11(*-*),0(R1) (EXECUTED)               11/83 DBC
         EX    R15,*-6             COPY TO MSG L-J            11/83 DBC
         LA    R5,STATBUF+12(R15)  LOAD SCANNER               11/83 DBC
         MVI   0(R5),C':'          DELIMITER                  11/83 DBC
         CVD   R0,DWORK            CNVRT MINS TO DECIMAL      11/83 DBC
         UNPK  1(2,R5),DWORK(8)    ZONE IT                    11/83 DBC
         OI    2(R5),C'0'          FIX THE FUCKING SIGN       11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   3(10,R5),=C', ENTRIES '                        11/83 DBC
         LM    R1,R3,DYNAFIRS      LOAD TABLE DESCRIPTOR      11/83 DBC
         LR    R0,R1               SAVE SO-TABLE              11/83 DBC
ENTCNT   CLI   DENTNAME-DYNL(R1),0 UNUSED SLOT YET?           04/84 JLC
         BE    ENTCNTZ             YES, DONE HERE             11/83 DBC
         BXLE  R1,R2,ENTCNT        NO, KEEP SCANNING          11/83 DBC
ENTCNTZ  SR    R1,R0               YES, GET LIST SIZE         11/83 DBC
         SR    R0,R0               CLEAR FIR DIVIDE           11/83 DBC
         DR    R0,R2               GET # USED SLOTS           11/83 DBC
         BAL   R14,ZONEIT          CONVERT IT TO EBCDIC       11/83 DBC
         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY IT JEFT JUSTIFIED     11/83 DBC
         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         CL    R5,=A(STATBUF+L'STATBUF) BUFFER OVERFLOW?      11/83 DBC
         #DIE  H                   YES, DESIGN ERROR          11/83 DBC
         LA    R1,STATBUF          NO, --> SO-BUFFER          11/83 DBC
         SR    R5,R1               GET L'MSG                  11/83 DBC
         STC   R5,STATBUF-1        STORE FOR OUTPUT ROUTINES  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE FIRST SUMMARY MESSAGE TO THE           * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC
         BNH   STATLNOK            NO, PROCEED                11/83 DBC
         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC
STATLNOK MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC
         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF COPY     11/83 DBC
         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC
         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR "PUTWTO"       11/83 DBC
         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE SECOND SUMMARY MESSAGE.              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   STATBUF2(5),=C'HITS '                          11/83 DBC
         L     R7,DYNAHITS         LOAD TOTAL HITS COUNT      11/83 DBC
         LR    R1,R7               COPY FOR CONVERSION        11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   STATBUF2+5(*-*),0(R1) (EXECUTED)               11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,STATBUF2+6(R15)  ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(9,R5),=C', MISSES '                          11/83 DBC
         ICM   R2,15,DYNAMISS      LOAD TOTAL MISSES; ANY?    11/83 DBC
         BZ    NO2NDMSG            NO, NO USAGE               11/83 DBC
         LR    R1,R2               COPY FOR CONVERSION        11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   9(*-*,R5),0(R1)     (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,10(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(13,R5),=C' (GOOD NAMES '                     11/83 DBC
         L     R3,DYNADDED         GET STEAL COUNT            11/83 DBC
         LR    R1,R3               COPY FOR CONVERSION        11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(12,R5),=C', BAD NAMES '                      11/83 DBC
         LR    R1,R2               GET MISS COUNT             11/83 DBC
         SR    R1,R3               SUBTR STEAL COUNT          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,13(R15,R5)       ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(12,R5),=C'), HIT RATE ' YES                  11/83 DBC
         AR    R2,R7               TOTAL USE COUNT            11/83 DBC
         MH    R7,=H'1000'         SHIFT THE DECIMAL PLACE    11/83 DBC
         SR    R6,R6               CLEAR FOR DIVIDE           11/83 DBC
         DR    R6,R2               GET HIT RATE TO A 10TH OF  11/83 DBC
*                                  A PERCENT                  11/83 DBC
         SR    R1,R1               CLEAR ROUNDER              11/83 DBC
         AR    R6,R6               DOUBLE THE REMAINDER       11/83 DBC
         CR    R6,R2               NEED TO ROUND UP?          11/83 DBC
         BL    NOROUNUP            NO, SKIP                   11/83 DBC
         LA    R1,1                YES, RESET THE ROUNDER     11/83 DBC
NOROUNUP AR    R1,R7               COPY AND ROUND FOR CNVRSN  11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R5,12(R15,R5)       --> LAST DIGIT ("10THS")   11/83 DBC
         MVC   1(1,R5),0(R5)       MOVE IT OUT OF THE WAY     11/83 DBC
         MVI   0(R5),C'.'          INSERT DECIMAL POINT       11/83 DBC
         MVI   2(R5),C'%'          INSERT PERCENT SIGN        11/83 DBC
         LA    R5,3(,R5)           ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         CL    R5,=A(STATBUF2+L'STATBUF2) BUFFER OVERFLOW?    11/83 DBC
         #DIE  H                   YES, DESIGN ERROR          11/83 DBC
         LA    R1,STATBUF2         NO, --> SO-BUFFER          11/83 DBC
         SR    R5,R1               GET L'MSG                  11/83 DBC
         STC   R5,STATBUF2-1       STORE FOR OUTPUT ROUTINES  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE SECOND SUMMARY MESSAGE TO THE          * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC
         BNH   STATLOK2            NO, PROCEED                11/83 DBC
         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC
STATLOK2 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC
         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF2 COPY    11/83 DBC
         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC
         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR "PUTWTO"       11/83 DBC
         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC
NO2NDMSG DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CONSTRUCT THE THIRD SUMMARY MESSAGE.               * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   STATBUF3(14),=C'MAX ENTRY AGE ' TEXT           11/83 DBC
         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC
         USING DYNL,R5             DCL SLOT BASE              11/83 DBC
         ICM   R0,15,DYNLCLOK      ANY SLOTS USED?            11/83 DBC
         BZ    NO3RDMSG            NO, SKIP THIS MSG          11/83 DBC
MXAGESCN CL    R0,DYNLCLOK         YES, ALREADY GOT OLDEST    11/83 DBC
*                                  BIRTHDATE?                 11/83 DBC
         BNH   MXAGENXT            YES, SKIP                  11/83 DBC
         ICM   R1,15,DYNLCLOK      NO, GET OLDEST; EO-USED?   11/83 DBC
         BZ    MXAGEGOT            YES, DONE HERE             11/83 DBC
         LR    R0,R1               NO, COPY                   11/83 DBC
MXAGENXT BXLE  R5,R6,MXAGESCN      CONTINUE SCANNING          11/83 DBC
         DROP  R5                  RELEASE SLOT BASE          11/83 DBC
MXAGEGOT L     R1,CLOCK            GET CURRENT TIME           11/83 DBC
         SR    R1,R0               CNVRT BIRTHDATE TO AGE     11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   STATBUF3+14(*-*),0(R1) (EXECUTED)              11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R4,STATBUF3+15(R15) ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   0(30,R4),=C' MINUTES, MAX ENTRY IDLE TIME '    11/83 DBC
         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC
         USING DYNL,R5             DCL SLOT BASE              11/83 DBC
         L     R0,DYNLLRU#         PRINT LIMIT TESTER         11/83 DBC
MXIDLELP CL    R0,DYNLLRU#         ALREADY GOT MOST IDLE?     11/83 DBC
         BNH   MXIDLENX            YES, SKIP                  11/83 DBC
         ICM   R1,15,DYNLLRU#      NO, GET MOST IDLE; EO-USD? 11/83 DBC
         BZ    MXIDLEGO            YES, DONE HERE             11/83 DBC
         LR    R0,R1               NO, COPY                   11/83 DBC
MXIDLENX BXLE  R5,R6,MXIDLELP      CONTINUE SCANNING          11/83 DBC
         DROP  R5                  RELEASE SLOT BASE          11/83 DBC
MXIDLEGO L     R1,CLOCK            GET CURRENT TIME           11/83 DBC
         SR    R1,R0               CNVRT IDLE TIME TO INTERVA 11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   30(*-*,R4),0(R1)    (EXECUTED)                 11/83 DBC
         EX    R15,*-6             COPY TO MSG                11/83 DBC
         LA    R4,31(R15,R4)       ADVANCE SCANNER            11/83 DBC
         MVC   0(8,R4),=C' MINUTES' MORE TEXT                 11/83 DBC
         LA    R4,8(,R4)           ADVANCE SCANNER            11/83 DBC
         SPACE 1                                              11/83 DBC
         CL    R4,=A(STATBUF3+L'STATBUF3) BUFFER OVERFLOW?    11/83 DBC
         #DIE  H                   YES, DESIGN ERROR          11/83 DBC
         LA    R1,STATBUF3         NO, --> SO-BUFFER          11/83 DBC
         SR    R4,R1               GET L'MSG                  11/83 DBC
         STC   R4,STATBUF3-1       STORE FOR OUTPUT ROUTINES  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE THIRD SUMMARY MESSAGE TO THE           * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R4,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC
         BNH   STATLOK3            NO, PROCEED                11/83 DBC
         LA    R4,WTOMAXL-9        YES, RESET                 11/83 DBC
STATLOK3 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC
         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF3 COPY    11/83 DBC
         LA    R4,9(,R4)           ADJ L'MSG                  11/83 DBC
         STC   R4,WTOBUF+L'WTOHEAD-1 STORE FOR "PUTWTO"       11/83 DBC
         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC
NO3RDMSG DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        ATTEMPT TO OPEN SYSPRINT AND WRITE TITLE AND       * 11/83 DBC
*        STATUS LINES.                                      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         OPEN  (SYSPRINT,OUTPUT)   ATTEMPT THE OPEN           11/83 DBC
         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN OPENED?      11/83 DBC
         BZ    NOSYSP              NO, EXIT                   11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  DYNATIT,SUBAD=PUTSYSP YES, SEND TITLE          11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  NULL                SEND SPACER                11/83 DBC
         #PUT  STATBUF             SEND SUMMARY MESSAGE       11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  STATBUF2            PRINT 2ND MSG, IF ANY      11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  STATBUF3            PRINT 3RD MSG, IF ANY      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE THE LOCATION AND SIZE OF THE DYNAMIC     * 11/83 DBC
*        BLDL TABLE, AND THEN GETMAIN A LOCAL AREA THAT IS  * 11/83 DBC
*        LARGE ENOUGH TO HOLD THREE COPIES.                 * 05/84 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R5,R7,DYNAFIRS      LOAD THE TABLE DESCRIPTOR  11/83 DBC
         LR    R1,R5               COPY SCANNER               11/83 DBC
SIZESCAN CLI   DENTNAME-DYNL(R1),0 EMPTY SLOT YET?            04/84 JLC
         BE    SIZEGOTN            YES, SIZE FOUND            11/83 DBC
         BXLE  R1,R6,SIZESCAN      NO, CONTINUE SCANNING      11/83 DBC
SIZEGOTN SR    R1,R5               EMPTY SLOT FOUND; GET      11/83 DBC
*                                  TABLE SIZE; EMPTY?         11/83 DBC
         BNP   EMPTY               YES, EXIT WITH MSG         11/83 DBC
         LR    R7,R1               NO, SAVE TABLE SIZE        11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R0,0(R1,R1)         DOUBLE IT                  11/83 DBC
         AR    R0,R1               TRIPLE IT                  11/83 DBC
         SPACE 1                                              11/83 DBC
         ST    R0,RTBLSIZE         SAVE FOR FREEMAIN          11/83 DBC
         GETMAIN R,LV=(0)          GET A LOCAL AREA           11/83 DBC
         ST    R1,RTBLPTR          SAVE FOR FREEMAIN          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        NOW MAKE THE FIRST COPY OF THE ACTIVE TABLE, AND   * 11/83 DBC
*        DETERMINE POINTERS TO WHERE THE OTHER TWO COPIES   * 11/83 DBC
*        WILL GO.                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R3,R1               SAVE 1ST COPY POINTER      11/83 DBC
         LR    R14,R5              --> COPY SOURCE            11/83 DBC
         LR    R15,R7              GET ITS LENGTH             11/83 DBC
         LR    R0,R3               --> COPY SINK              11/83 DBC
         LR    R1,R7               GET ITS LENGTH             11/83 DBC
         MVCL  R0,R14              MAKE THE 1ST COPY          11/83 DBC
         LR    R4,R0               SAVE SECOND COPY POINTER   11/83 DBC
         LA    R5,0(R7,R4)         GET 3RD COPY POINTER       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SORT THE FIRST COPY OF THE DYNA-TABLE IN           * 11/83 DBC
*        DESCENDING ORDER BY HITS COUNT.                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R15,R7              GET L'LIST                 11/83 DBC
         LR    R0,R6               GET L'ENTRY                11/83 DBC
         LR    R1,R3               GET A(LIST)                11/83 DBC
         LA    R2,SORTHITS         --> COMPARE ROUTINE        11/83 DBC
         BAL   R14,SORT            SORT THE MOTHER            11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CREATE AND SORT THE L.R.U. ORDERED LIST.           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R14,R4              --> COPY SINK              11/83 DBC
         LR    R15,R7              GET L'SINK                 11/83 DBC
         LR    R0,R3               --> COPY SOURCE            11/83 DBC
         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC
         MVCL  R14,R0              MAKE THE 2ND COPY          11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R15,R7              GET L'LIST                 11/83 DBC
         LR    R0,R6               GET L'ENTRY                11/83 DBC
         LR    R1,R4               GET A(LIST)                11/83 DBC
         LA    R2,SORTLRU          --> COMPARE ROUTINE        11/83 DBC
         BAL   R14,SORT            SORT THE LIST              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        CREATE AND SORT THE NAME ORDERED LIST.             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R14,R5              --> COPY SINK              11/83 DBC
         LR    R15,R7              GET L'SINK                 11/83 DBC
         LR    R0,R3               --> COPY SOURCE            11/83 DBC
         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC
         MVCL  R14,R0              MAKE THE 3RD COPY          11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R15,R7              GET L'LIST                 11/83 DBC
         LR    R0,R6               GET L'ENTRY                11/83 DBC
         LR    R1,R5               GET A(LIST)                11/83 DBC
         LA    R2,SORTNAME         --> COMPARE ROUTINE        11/83 DBC
         BAL   R14,SORT            SORT THE LIST              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        PRINT THE TABLE TITLE LINES.                       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  NULL                SPACE                      11/83 DBC
         #PUT  NULL                SPACE                      11/83 DBC
         #PUT  SORTTIT             TITLE                      11/83 DBC
         #PUT  SORTTIT0            SUB-TITLE                  08/84 DBC
         #PUT  SORTSUBT            SUB-TITLE                  11/83 DBC
         #PUT  INFOBUF             BARRED SPACER              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SCAN THE THREE TABLES SIMULTANIOUSLY TO GENERATE   * 11/83 DBC
*        THE THREE REPORTS IN 3-COLUMN FORMAT.              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R2,INFOBUF          --> MSG BUFFER             11/83 DBC
         USING INFO,R2             DECLARE A BASE FOR IT      11/83 DBC
         SPACE 1                                              11/83 DBC
         AR    R7,R3               --> PAST 1ST TABLE         11/83 DBC
         SR    R7,R6               --> LAST ENTRY (BXLE LIM)  11/83 DBC
         SPACE 1                                              11/83 DBC
INFOLOOP MVI   INFO,C' '           CLEAR THE -                11/83 DBC
         MVC   INFO+1(INFOLEN-1),INFO MESSAGE BUFFER          11/83 DBC
         MVI   NAMEBAR,C'|'        INSERT GUTTER              11/83 DBC
         MVI   HITSBAR,C'|'        INSERT GUTTER              11/83 DBC
         MVI   LRUBAR,C'|'         INSERT GUTTER              11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,1                GET INCRIMENT              11/83 DBC
         AH    R1,COUNTER          INCRIMENT LINE COUNTER     11/83 DBC
         STH   R1,COUNTER          STORE NEW VALUE            11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   COUNT,0(R1)         COPY TO MSG L-J            11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FORMAT INFO FROM THE HITS SORTED TABLE.            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC
         MVC   HITSNAME,DENTNAME   MEMBER NAME                11/83 DBC
         SPACE 1                                              08/84 DBC
         MVI   HITSRENT,C' '       CLEAR RENT SIGNAL          08/84 DBC
         TM    PDS2ATR-PDS2+DENT,PDS2RENT REENTRANT MODULE?   08/84 DBC
         BZ    HINORENT            NO, SKIP                   08/84 DBC
         MVI   HITSRENT,C'*'       YES, SIGNAL THAT FACT      08/84 DBC
HINORENT DS    0H                                             08/84 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC
*                                  SECONDS*1024)              11/83 DBC
         S     R1,DYNLLRU#         CNVRT TO INTERVAL          11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC
         MVC   HITSIDLE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY      11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'HITSIDLE-1,C' ' OVERFLOW?  11/83 DBC
         BE    HIFITS              NO, SKIP                   11/83 DBC
         MVC   HITSIDLE,=10C'*'    YES, "SAY SO"              11/83 DBC
HIFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC
*                                  SECONDS*1024)              11/83 DBC
         S     R1,DYNLCLOK         CNVRT TO INTERVAL          11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC
         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC
         MVC   HITSAGE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY       11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'HITSAGE-1,C' ' OVERFLOW?   11/83 DBC
         BE    HAFITS              NO, SKIP                   11/83 DBC
         MVC   HITSAGE,=10C'*'     YES, "SAY SO"              11/83 DBC
HAFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   HITSHITS,ZONEBUF+L'ZONEBUF-L'HITSHITS COPY     11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'HITSHITS-1,C' ' OVERFLOW?  11/83 DBC
         BE    HHFITS              NO, PROCEED                11/83 DBC
         MVC   HITSHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC
HHFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R3                  RELEASE HITS TABLE ENT BAS 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FORMAT INFO FROM THE L.R.U. SORTED TABLE.          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R4             DCL TABLE ENTRY BASE       11/83 DBC
         MVC   LRUNAME,DENTNAME    MEMBER NAME                11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CLOCK            CRNT TIME IN SECS*1024     11/83 DBC
         S     R1,DYNLLRU#         CNVRT TO IDLE INTERVAL     11/83 DBC
         SRL   R1,CLOKSHFT         CNVRT TO APPROX SECS       11/83 DBC
         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC
         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC
         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC
         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC
         MVC   LRUIDLE,ZONEBUF+L'ZONEBUF-L'LRUIDLE  COPY      11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'LRUIDLE-1,C' ' OVERFLOW?   11/83 DBC
         BE    LUFITS              NO, PROCEED                11/83 DBC
         MVC   LRUIDLE,=10C'*'     YES, SAY SO                11/83 DBC
LUFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   LRUHITS,ZONEBUF+L'ZONEBUF-L'LRUHITS COPY       11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'LRUHITS-1,C' ' OVERFLOW?   11/83 DBC
         BE    LHFITS              NO, PROCEED                11/83 DBC
         MVC   LRUHITS,=10C'*'     YES, SIGNAL THAT           11/83 DBC
LHFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R4                  RELEASE DURA TABLE ENT BAS 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        FORMAT INFO FROM THE NAMES SORTED TABLE.           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R5             DCL TABLE ENTRY BASE       11/83 DBC
         MVC   NAMENAME,DENTNAME   MEMBER NAME                11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R1,R1               CLEAR FOR INSERT           11/83 DBC
         IC    R1,DENTCNCT         GET LIB#                   11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   NAMELIB#,0(R1)      COPY TO MSG                11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC
         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC
         MVC   NAMEHITS,ZONEBUF+L'ZONEBUF-L'NAMEHITS COPY     11/83 DBC
         CLI   ZONEBUF+L'ZONEBUF-L'NAMEHITS-1,C' ' OVERFLOW?  11/83 DBC
         BE    NHFITS              NO, PROCEED                11/83 DBC
         MVC   NAMEHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC
NHFITS   DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R5                  RELEASE NAME TABLE ENT BAS 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DISPLAY THE MESSAGE AND THEN LOOP FOR THE NEXT     * 11/83 DBC
*        ENTRIES.                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #PUT  INFOBUF             DISPLAY THE MSG            11/83 DBC
         SPACE 1                                              11/83 DBC
         AR    R4,R6               ADVANCE 2ND TABLE SCANNER  11/83 DBC
         AR    R5,R6               ADVANCE 3RD TABLE SCANNER  11/83 DBC
         BXLE  R3,R6,INFOLOOP      ADVANCE 1ST TBL SCNR & LOO 11/83 DBC
         DROP  R2                  RELEASE MSG BUFFER BASE    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DONE. FREEMAIN AND EXIT.                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R0,R1,RTBLSIZE      LOAD REPORT AREA DESCRIPTR 11/83 DBC
         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R1,R1               SINGAL NO TERMINATION MSG  11/83 DBC
         B     EXIT0               GO EXIT                    11/83 DBC
         DROP  TABLBASE            RELEASE CONTROL TABLE BASE 11/83 DBC
         TITLE 'VARIOUS TERMINATION SETUPS'                   11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING ARE VARIOUS TERMINATION SETUP        * 11/83 DBC
*        ROUTINES.                                          * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 3                                              11/83 DBC
BADSTRUC BAL   R1,EXIT16                                      11/83 DBC
         DC    AL1(L'MBADSTRU)                                11/83 DBC
MBADSTRU DC    C'DYNABLDL CANNOT FIND THE PROPER HOOK POINTS IN THE VER*
               SION OF IGC018 INSTALLED ON THIS SYSTEM'       11/83 DBC
         SPACE 3                                              11/83 DBC
DONEB4   BAL   R1,EXIT4                                       11/83 DBC
         DC    AL1(L'MDONEB4)                                 11/83 DBC
MDONEB4  DC    C'DYNABLDL IS ALREADY ACTIVE'                  11/83 DBC
         SPACE 3                                              11/83 DBC
MESS     BAL   R1,EXIT8                                       11/83 DBC
         DC    AL1(L'MMESS)                                   11/83 DBC
MMESS    DC    C'DYNABLDL IS ALREADY PARTIALLY ACTIVE - IT MUST BE STOP*
               PED AND THEN STARTED'                          11/83 DBC
         SPACE 3                                              11/83 DBC
STOPDB4  BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MSTOPDB4)                                11/83 DBC
MSTOPDB4 DC    C'DYNABLDL IS ALREADY STOPPED'                 11/83 DBC
         SPACE 3                                              11/83 DBC
DOWN     BAL   R1,EXIT8                                       11/83 DBC
         DC    AL1(L'MDOWN)                                   11/83 DBC
MDOWN    DC    C'DYNABLDL IS NOT ACTIVE'                      11/83 DBC
         SPACE 3                                              11/83 DBC
UNRECOGN BAL   R1,EXIT16                                      11/83 DBC
         DC    AL1(L'MUNRECOG)                                11/83 DBC
MUNRECOG DC    C'DYNABLDL IS UNABLE TO RECOGNIZE THE VERSION OF IGC018 *
               INSTALLED ON THIS SYSTEM'                      11/83 DBC
         SPACE 3                                              11/83 DBC
INVALID  BAL   R1,EXIT16                                      11/83 DBC
         DC    AL1(L'MINVALID)                                11/83 DBC
MINVALID DC    C'DYNABLDL PARM FIELD IS INVALID - ONLY START, STOP, OR *
               REPORT MAY BE SPECIFIED'                       11/83 DBC
         SPACE 3                                              11/83 DBC
STARTED  BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MSTARTED)                                11/83 DBC
MSTARTED DC    C'DYNABLDL STARTED'                            11/83 DBC
         SPACE 3                                              11/83 DBC
STOPPED  BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MSTOPPED)                                11/83 DBC
MSTOPPED DC    C'DYNABLDL STOPPED'                            11/83 DBC
         SPACE 3                                              11/83 DBC
PARTSTOP BAL   R1,EXIT4                                       11/83 DBC
         DC    AL1(L'MPARTSTO)                                11/83 DBC
MPARTSTO DC    C'DYNABLDL STOPPED BUT THE DYNAMIC BLDL TABLE COULD NOT *
               BE FREED'                                      11/83 DBC
         SPACE 3                                              11/83 DBC
EMPTY    BAL   R1,EXIT0                                       11/83 DBC
         DC    AL1(L'MEMPTY)                                  11/83 DBC
MEMPTY   DC    C'DYNABLDL TABLE IS EMPTY'                     11/83 DBC
         SPACE 3                                              11/83 DBC
NOSYSP   SR    R1,R1               SIGNAL NO MESSAGE          11/83 DBC
         B     EXIT4               EXIT                       11/83 DBC
         TITLE 'TERMINATION'                                  11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        CLEAN UP AND EXIT PROCESSING                       * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        COMPLETION CODE VECTOR                             * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
EXIT16   BAL   R0,EXIT             COMPLETION 16              11/83 DBC
EXIT12   BAL   R0,EXIT             COMPLETION 12              11/83 DBC
EXIT8    BAL   R0,EXIT             COMPLETION 8               11/83 DBC
EXIT4    BAL   R0,EXIT             COMPLETION 4               11/83 DBC
EXIT0    BAL   R0,EXIT             COMPLETION 0               11/83 DBC
EXIT     LA    R15,EXIT            LOAD VECTOR BASE           11/83 DBC
         SR    R15,R0              CNVRT TO COMPLETION CPODE  11/83 DBC
         LA    R15,0(,R15)         PURIFY                     11/83 DBC
         CH    R15,RCD             HIGHEST PRODUCED?          11/83 DBC
         BNH   RCDZ                NO, KEEP HIGHER VALUE      11/83 DBC
         STH   R15,RCD             YES, STORE NEW HIGH        11/83 DBC
RCDZ     DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        IF SYSPRINT IS OPENED, THEN WRITE A COMPLETION     * 11/83 DBC
*        MESSAGE, IF ANY, TO IT, AND THEN CLOSE IT.         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN IS IT OPEN?  11/83 DBC
         BZ    NOPRT               NO, SKIP                   11/83 DBC
         LTR   R2,R1               YES, IS THERE A            11/83 DBC
*                                  TERMINATION MESSAGE?       11/83 DBC
         BZ    NOPRTMSG            NO, SKIP                   11/83 DBC
         #PUT  NULL,SUBAD=PUTSYSP  YES, SPACE A LINE          11/83 DBC
         #PUT  NULL                SPACE ANOTHER LINE         11/83 DBC
         #PUT  (R2)                PRINT THE MESSAGE          11/83 DBC
NOPRTMSG DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         CLOSE SYSPRINT            CLOSE THE FILE             11/83 DBC
         FREEPOOL SYSPRINT         FREE ITS BUFFERS           11/83 DBC
         LR    R1,R2               RESTORE MSG PTR            11/83 DBC
NOPRT    DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        WRITE A COMPLETION MESSAGE, IF ANY, TO THE         * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LTR   R1,R1               IS THERE A FINAL MSG?      11/83 DBC
         BZ    MSGZ                NO, SKIP                   11/83 DBC
         #PUT  (R1),SUBAD=PUTWTO   YES, WRITE IT              11/83 DBC
MSGZ     DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO PROBLEM MODE.                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,SUPER          IN SUPERVISOR STATE?       11/83 DBC
         BZ    SUPERZ              NO, SKIP                   11/83 DBC
         NI    FLAG,255-SUPER      YES, CLEAR AUDIT           11/83 DBC
         MODESET MODE=PROB         RESUME PROBLEM MODE        11/83 DBC
SUPERZ   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DE-SERIALIZE                                       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    FLAG,ENQED          SERIALIZED?                11/83 DBC
         BZ    ENQEDZ              NO, SKIP                   11/83 DBC
         NI    FLAG,255-ENQED      YES, CLEAR AUDIT           11/83 DBC
         DEQ   MF=(E,SERIALIZ)     DEQ                        11/83 DBC
ENQEDZ   DS    0H                                             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RESTORE REGS AND RETURN TO CALLER                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LH    R15,RCD             LOAD COMPLETION CODE       11/83 DBC
         #EXIT ((R14,R12)),RC=(R15) EXIT TO CALLER            11/83 DBC
         TITLE 'PUTSYSP -- SEND MESSAGES TO A PRINT FILE'     11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PUTSYSP -- THIS ROUTINE SEND MESSAGES TO A PRINT   * 11/83 DBC
*        FILE. ALL RECFMS ARE SUPPORTED.                    * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC
*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - IF THE SYSPRINT FILE IS OPEN, AND IF THE   * 11/83 DBC
*                GIVEN MESSAGE IS NON-NULL, THEN THE        * 11/83 DBC
*                MESSAGE IS WRITTEN TO SYSPRINT.            * 11/83 DBC
*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTSYSP  TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN SYSPRINT     11/83 DBC
*                                  AVAILABLE?                 11/83 DBC
         BZR   R14                 NO, RETURN DOING NOTHING   11/83 DBC
         STM   R14,R2,SAVEPUTS     YES, SAVE REGISTERS        11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R2,R2               CLEAR FOR INSERT           11/83 DBC
         ICM   R2,1,0(R1)          GET L'MSG; NULL?           11/83 DBC
         BZ    PUTSRET             YES, RETURN DOING NOTHING  11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECU NO, RECFM=U?  11/83 DBC
         BNM   PUTRECU             YES, GO HANDLE             11/83 DBC
         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECF NO, RECFM=F?  11/83 DBC
         BO    PUTRECF             YES, GO HANDLE             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=V HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTRECV  LA    R0,4(,R2)           GET NEEDED LRECL           11/83 DBC
         STH   R0,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC
*                                  LOCATE                     11/83 DBC
         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R0,4(,R2)           GET REC LEN AGAIN          11/83 DBC
         SLL   R0,16               SHIFT                      11/83 DBC
         ST    R0,0(,R1)           STORE RDW                  11/83 DBC
         L     R15,SAVEPUTS+12     --> MESSAGE                11/83 DBC
         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC
         MVC   4(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC
         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC
         B     PUTSRET             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=F HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTRECF  PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC
         LR    R0,R1               --> COPY SINK              11/83 DBC
         LH    R1,DCBLRECL-IHADCB+SYSPRINT GET L'SINK         11/83 DBC
         L     R14,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC
         LA    R14,1(,R14)         --> COPY SOURCE            11/83 DBC
         LR    R15,R2              GET L'SOURCE               11/83 DBC
         ICM   R15,8,=C' '         GET PADDING BYTE           11/83 DBC
         MVCL  R0,R14              COPY MSG TO BUFFER         11/83 DBC
         B     PUTSRET             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=U HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTRECU  STH   R2,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC
*                                  LOCATE                     11/83 DBC
         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC
         L     R15,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC
         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC
         MVC   0(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC
         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO CALLER                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTSRET  LM    R14,R2,SAVEPUTS     RESTORE REGISTERS          11/83 DBC
         BR    R14                 RETURN                     11/83 DBC
         TITLE 'PUTWTO -- ISSUE MESSAGES TO THE OPERATORS'    11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PUTWTO -- THIS ROUTINE ISSUES MESSAGES TO THE      * 11/83 DBC
*        OPERATORS.                                         * 11/83 DBC
*                                                           * 11/83 DBC
*        ROUTE CODES USED:                                  * 11/83 DBC
*              - 2 IS "MASTER CONSOLE INFORMATION"          * 11/83 DBC
*              - 11 IS "PROGRAMMER INFORMATION"             * 11/83 DBC
*                                                           * 11/83 DBC
*        DESCRIPTOR CODES USED:                             * 11/83 DBC
*              - 4 IS "SYSTEM STATUS"                       * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE MESSAGE, IF NON-NULL, HAS BEEN ISSUED. * 11/83 DBC
*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PUTWTO   STM   R14,R1,SAVEPUTW     SAVE REGISTERS             11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R15,R15             CLEAR FOR INSERT           11/83 DBC
         ICM   R15,1,0(R1)         GET L'MSG; NULL?           11/83 DBC
         BZ    PUTWRET             YES, RETURN TO CALLER      11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   WTOBUF(L'WTOHEAD),WTOHEAD COPY HEADER FIELDS   11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R15,=Y(WTOMAXL)     NO, TOO LONG?              11/83 DBC
         BNH   PUTWLNOK            NO, PROCEED                11/83 DBC
         LA    R15,WTOMAXL         YES, TRUNCATE              11/83 DBC
PUTWLNOK DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         BCTR  R15,0               ADJ FOR "EX"               11/83 DBC
         MVC   WTOBUF+L'WTOHEAD(*-*),1(R1) (EXECUTED)         11/83 DBC
         EX    R15,*-6             COPY MSG TO WTO BUFFER     11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,L'WTOHEAD+1(,R15) GET L'MSG+4              11/83 DBC
         STH   R15,WTOBUF          STORE INTO PLIST           11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,WTOBUF(R15)     --> PAST THE TEXT          11/83 DBC
         MVC   0(L'WTOTAIL,R15),WTOTAIL COPY TRAILER FIELDS   11/83 DBC
         SPACE 1                                              11/83 DBC
         WTO   MF=(E,WTOBUF)       ISSUE THE MSG              11/83 DBC
         SPACE 1                                              11/83 DBC
PUTWRET  LM    R14,R1,SAVEPUTW     RESTORE REGISTERS          11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         TITLE 'SORT -- AN INPLACE-SORTING ROUTINE'           11/83 DBC
SORT     #SORT CMPRID=(R2),SVID=SAVESORT                      11/83 DBC
         TITLE 'SORTHITS/SORTLRU/SORTNAME -- VARIOUS SORTING COMPARISON*
                ROUTINES'                                     11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        SORTHITS -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC
*        BLDL TABLE ENTRIES IN DESCENDING ORDER BY HITS     * 11/83 DBC
*        COUNT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
*        SORTLRU -- THIS COMPARISON ROUTINE SORTS DYNAMIC   * 11/83 DBC
*        BLDL TABLE ENTRIES IN L.R.U. ORDER - MOST TO LEAST * 11/83 DBC
*        RECENTLY USED.                                     * 11/83 DBC
*                                                           * 11/83 DBC
*        SORTNAME -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC
*        BLDL TABLE ENTRIES IN ASCENDING ORDER BY MEMBER    * 11/83 DBC
*        NAME.                                              * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R6 POINTS TO A SEQUENTIALLY PRIOR TABLE    * 11/83 DBC
*                ENTRY.                                     * 11/83 DBC
*              - R7 POINTS TO A SEQUENTIALLY FOLLOWING      * 11/83 DBC
*                TABLE ENTRY.                               * 11/83 DBC
*              - R14 POINTS TO THE RETURN ADDRESS IN THE    * 11/83 DBC
*                SORT ROUTINE.                              * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE TWO ENTRIES ARE SUITABLY COMPARED AND  * 11/83 DBC
*                THE CONDITION CODE IS SET AS FOLLOWS:      * 11/83 DBC
*                - CC=2 (I.E. IMPLIES "HIGH") INDICATES     * 11/83 DBC
*                  THAT THE SORT ROUTINE MUST EXCHANGE THE  * 11/83 DBC
*                  TWO TABLE ENTRIES.                       * 11/83 DBC
*                - CC=0 OR 1 (I.E. IMPLIES "EQUAL" OR       * 11/83 DBC
*                  "LOW") INDICATES THAT THE SORT ROUTINE   * 11/83 DBC
*                  MUST NOT EXCHANGE THE TWO TABLE ENTRIES. * 11/83 DBC
*              - ALL REGISTERS REMAIN UNCHANGED.            * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 3                                              11/83 DBC
SORTHITS CLC   DYNLHITS-DYNL(,R7),DYNLHITS-DYNL(R6)           11/83 DBC
         BNER  R14                                            11/83 DBC
         CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC
         BR    R14                                            11/83 DBC
         SPACE 3                                              11/83 DBC
SORTLRU  CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC
         BR    R14                                            11/83 DBC
         SPACE 3                                              11/83 DBC
SORTNAME CLC   DENTNAME-DYNL(,R6),DENTNAME-DYNL(R7)           11/83 DBC
         BR    R14                                            11/83 DBC
         TITLE 'VERIFY -- CODE MATCH VERIFICATION ROUTINE'    11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        VERIFY -- THIS ROUTINE CHECKS A SECTION OF IGC018  * 11/83 DBC
*        TO SEE IF ITS CONTENTS ARE AS EXPECTED.            * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A PLIST MAPPED BY THE         * 11/83 DBC
*                "ORIGINAL" DSECT. THIS IDENTIFIES A        * 11/83 DBC
*                LOCATION OF IGC018 AND ITS EXPECTED        * 11/83 DBC
*                CONTENTS.                                  * 11/83 DBC
*              - BLDLBASE POINTS TO IGC018.                 * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - ERROR: THE CONTENTS OF IGC018 ARE NOT AS   * 11/83 DBC
*                EXPECTED.                                  * 11/83 DBC
*              - R14: THE HI-BITS MAY BE CHANGED.           * 11/83 DBC
*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 4(,R14):                                    * 11/83 DBC
*              - THE CONTENTS OF IGC018 ARE AS EXPECTED.    * 11/83 DBC
*              - R14 IS INCRIMENTED BY 4.                   * 11/83 DBC
*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING ORIGINAL,R1         DCL PLIST BASE             11/83 DBC
VERIFY   STM   R14,R15,SAVEVERI    SAVE REGISTERS             11/83 DBC
         LH    R15,ORIGLOC         GET OFFSET INTO IGC018     11/83 DBC
         LA    R15,IGC018(R15)     GET LOCATION INTO IGC018   11/83 DBC
         LH    R14,ORIGLEN         GET LENGTH TO CHECK        11/83 DBC
         BCTR  R14,0               ADJ FOR "EX-CLC"           11/83 DBC
         CLC   0(*-*,R15),ORIGCODE (EXECUTED)                 11/83 DBC
         EX    R14,*-6             IS IGC018 AS EXPECTED?     11/83 DBC
         BNE   VERIRET0            NO, RETURN +0              11/83 DBC
*                                  YES, RETURN +4             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO CALLER                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         BAL   R15,VERIRET         +4 IGC018 IS AS EXPECTED   11/83 DBC
VERIRET0 BAL   R15,VERIRET         +0 IGC018 IS NOT CORRECT   11/83 DBC
VERIRET  LA    R14,VERIRET         LOAD VECTOR BASE           11/83 DBC
         SR    R14,R15             GET RETURN OFFSET          11/83 DBC
         A     R14,SAVEVERI        GET RETURN ADDRESS         11/83 DBC
         L     R15,SAVEVERI+4      RESTORE REGISTER           11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         DROP  R1                  RELEASE PLIST BASE         11/83 DBC
         TITLE 'ZONEIT -- BINARY TO EBCDIC CONVERSION'        11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        ZONEIT -- THIS ROUTINE CONVERTS A BINARY NUMBER TO * 11/83 DBC
*        A CHARACTER STRING THAT IS SUFFICIENTLY PADDED ON  * 11/83 DBC
*        BOTH THE LEFT AND RIGHT WITH BLANKS. IF THE NUMBER * 11/83 DBC
*        IS NEGATIVE, THEN THE STRING IS PREFIXED WITH A    * 11/83 DBC
*        MINUS SIGN (-).                                    * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 CONTAINS THE NUMBER TO BE CONVERTED.    * 11/83 DBC
*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE NUMBER HAS BEEN CONVERTED AS DESCRIBED * 11/83 DBC
*                ABOVE.                                     * 11/83 DBC
*              - ZONEBUF CONTAINS THE CHARACTER STRING      * 11/83 DBC
*                RIGHT JUSTIFIED AND LEFT PADDED WITH       * 11/83 DBC
*                BLANKS. ALSO, ZONEBUF IS TRAILED BLANKS.   * 11/83 DBC
*              - R1 POINTS TO THE START OF THE CHARACTER    * 11/83 DBC
*                STRING.                                    * 11/83 DBC
*              - R15 CONTAINS THE LENGTH-1 OF THE CHARACTER * 11/83 DBC
*                STRING.                                    * 11/83 DBC
*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ZONEIT   CVD   R1,DWORK            CNVRT TO DECIMAL           11/83 DBC
         MVI   ZONEBUF-1,C' '      LOAD LEFT PADDING BYTE     11/83 DBC
         MVI   ZONEBUF,X'20'       LOAD EDIT CONTROL BYTE     11/83 DBC
         MVC   ZONEBUF+1(L'ZONEBUF-1),ZONEBUF PROPAGATE IT    11/83 DBC
         EDMK  ZONEBUF-1(L'ZONEBUF+1),DWORK CNVRT TO EBCDIC   11/83 DBC
         BNZ   ZNOTZERO            JUMP IF VALUE WAS NOT 0    11/83 DBC
         MVI   ZONEBUF+L'ZONEBUF-1,C'0' (WAS 0; STICK IT IN)  11/83 DBC
         LA    R1,ZONEBUF+L'ZONEBUF-1 (SET STRING PTR)        11/83 DBC
ZNOTZERO BNM   ZNOTNEG             WASN'T NEGATIVE, SKIP      11/83 DBC
         BCTR  R1,0                WAS NEG; BACK UP           11/83 DBC
         MVI   0(R1),C'-'          INSERT SIGN                11/83 DBC
ZNOTNEG  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R15,ZONEBUF+L'ZONEBUF-1 --> TO LAST CHARACTER  11/83 DBC
         SR    R15,R1              GET L'STRING-1             11/83 DBC
         SPACE 1                                              11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         TITLE 'DATA'                                         11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        VERSIONS VECTOR                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSIONS DC    A(VERSN#01)                                    11/83 DBC
         DC    A(VERSN#02)                                    11/83 DBC
         DC    A(VERSN#03)                                    11/83 DBC
         DC    A(VERSN#04)                                    11/83 DBC
         DC    A(VERSN#05)                                    04/84 JLC
         DC    A(VERSN#06)                                    05/84 DBC
         DC    A(VERSN#07)                                    08/84 DBC
         DC    A(VERSN#08)                                    06/84 WRH
         DC    A(VERSN#09)                                    09/84 DBC
         DC    A(VERSN#10)                                    DBC 01/85
         DC    A(0)                                           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        LOCAL SOUBROUTINE SAVE AREAS                       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SAVEPUTS DC    5A(0)               PUTSYSP                    11/83 DBC
SAVEPUTW DC    4A(0)               PUTWTO                     11/83 DBC
SAVESORT DC    16A(0)              SORT                       11/83 DBC
SAVEVERI DC    2A(0)               VERIFY                     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        PARM FIELD ANALYSIS CONTROL DATA                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PARMS    DS    0X                  START OF TABLE (SORTED)    11/83 DBC
         DC    AL4(START),AL2(0)                              11/83 DBC
         DC    AL4(STOP),AL2(1),C'P'                          11/83 DBC
         DC    AL4(REPORT),AL2(1),C'R'                        11/83 DBC
         DC    AL4(START),AL2(1),C'S'                         11/83 DBC
         DC    AL4(STOP),AL2(4),C'STOP'                       11/83 DBC
         DC    AL4(START),AL2(5),C'START'                     11/83 DBC
         DC    AL4(REPORT),AL2(6),C'REPORT'                   11/83 DBC
         DC    AL4(INVALID),X'FF'                             11/83 DBC
         SPACE 1                                              11/83 DBC
PRMHNDLR EQU   0,4                 A(HANDLER ROUTINE)         11/83 DBC
PRMLEN   EQU   PRMHNDLR+L'PRMHNDLR,2 L'TEXT                   11/83 DBC
PRMTEXT  EQU   PRMLEN+L'PRMLEN     TEXT                       11/83 DBC
PRMROOTL EQU   PRMTEXT             ENTRY'S ROOT LENGTH        11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SERIALIZATION ENQ CONTROL DATA                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SERIALIZ ENQ   (QNAME,RNAME,E,L'RNAME,SYSTEM),RET=NONE,MF=L   11/83 DBC
QNAME    DC    CL8'DYNABLDL'                                  11/83 DBC
RNAME    DC    C'SERIALIZE'                                   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        WTO MESSAGE BUFFER AND CONTROLS                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
WTOFLDS  WTO   ' ',ROUTCDE=(2,11),DESC=4,MF=L SKELETON        11/83 DBC
WTOHEAD  EQU   WTOFLDS,4           HEADER FIELDS              11/83 DBC
WTOTAIL  EQU   WTOHEAD+L'WTOHEAD+1,*-(WTOHEAD+L'WTOHEAD+1)    11/83 DBC
*                                  TRAILER FIELDS             11/83 DBC
WTOMAXL  EQU   124                 MAX WTO TEXT LENGTH        11/83 DBC
         SPACE 1                                              11/83 DBC
         DS    0F                  ALIGNMENT                  11/83 DBC
WTOBUF   DC    XL(L'WTOHEAD+WTOMAXL+L'WTOTAIL)'00' BUFFER     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SYSPRINT CONTROL DATA                              * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         PRINT NOGEN                                          11/83 DBC
SYSPRINT DCB   DDNAME=SYSPRINT,                               11/83 DBC*
               DSORG=PS,                                      11/83 DBC*
               MACRF=PL,                                      11/83 DBC*
               OPTCD=C,                                       11/83 DBC*
               BUFNO=5,                                       11/83 DBC*
               EXLST=PRTXLIST                                 11/83 DBC
         PRINT GEN                                            11/83 DBC
         SPACE 1                                              11/83 DBC
PRTXLIST DS    0F                  DCB EXIT LIST              11/83 DBC
         DC    X'85',AL3(PRTEXIT)  DCB OPEN EXIT              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        HOOK SKELETONS                                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         CNOP  0,4                 ALIGNMENT                  11/83 DBC
SRCHPOHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC
         L     R15,SRCHPOAA-*(,R15) --> HOOK ROUTINE          11/83 DBC
         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC
SRCHPOAA DC    AL4(SRCHPDS-SRCHPDS) --> HOOK ROUTINE          11/83 DBC
SRCHPOHL EQU   *-SRCHPOHH          L'HOOK                     11/83 DBC
         SPACE 3                                              11/83 DBC
         CNOP  0,4                 ALIGNMENT                  11/83 DBC
DFOUNDHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC
         L     R15,DFOUNDAA-*(,R15) --> HOOK ROUTINE          11/83 DBC
         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC
         DC    CL8'DAVECOLE'       HOOK RECOGNITION STRING    11/83 DBC
DFOUNDAA DC    AL4(DFOUND-DFOUND)  --> HOOK ROUTINE           11/83 DBC
DFOUNDHL EQU   *-DFOUNDHH          L'HOOK                     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        HOOK RETURN CONTROL DATA                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPOXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC
*                                  RETURN FROM SRCHPDS HOOK   11/83 DBC
DFOUNDXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC
*                                  RETURN FROM DFOUND HOOK    11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPOBC B     SRCHPOXX-SRCHPOXX   RETURN TO IGC018 FROM      11/83 DBC
         @ZAP  (SRCHPOXX,-2)       SRCHPDS HOOK               11/83 DBC
         SPACE 1                                              11/83 DBC
DFOUNDBC B     DFOUNDXX-DFOUNDXX   RETURN TO IGC018 FROM      11/83 DBC
         @ZAP  (DFOUNDXX,-2)       DFOUND HOOK                11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        MISC DATA                                          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DWORK    DS    D                   DWORD WORK AREA            11/83 DBC
CLOCK    DS    2F                  STCK BUFFER                11/83 DBC
         SPACE 1                                              11/83 DBC
RTBLSIZE DC    A(0)              | REPORTS TABLE SIZE         11/83 DBC
RTBLPTR  DC    A(0)              V REPORTS TABLE ADDRESS      11/83 DBC
         SPACE 1                                              11/83 DBC
COUNTER  DC    H'0'                REPORT LINES COUNTER       11/83 DBC
RCD      DC    H'0'                PROGRAM COMPLETION CODE    11/83 DBC
         SPACE 1                                              11/83 DBC
         DC    C' '                LEFT-PADDING BLANK         11/83 DBC
ZONEBUF  DS    CL(8*2-1)           EDMK SINK                  11/83 DBC
         DC    CL(L'ZONEBUF-1)' '  RIGHT-PADDING BLANKS       11/83 DBC
         SPACE 1                                              11/83 DBC
PSWKEY   DS    X                   SAVE AREA                  11/83 DBC
         SPACE 1                                              11/83 DBC
FLAG     DC    B'00000000'         AUDIT FLAG                 11/83 DBC
SUPER    EQU   B'10000000'         IN SUPERVISOR STATE        11/83 DBC
KEY0     EQU   B'01000000'         IN KEY ZERO                11/83 DBC
ENQED    EQU   B'00100000'         SERIALIZED                 11/83 DBC
SRCHPO00 EQU   B'00010000'         THE SRCHPDS HOOK HAS NOT   11/83 DBC
*                                  NOT NOT BEEN SET           11/83 DBC
DFOUND00 EQU   B'00001000'         THE DFOUND HOOK HAS NOT    11/83 DBC
*                                  NOT NOT BEEN SET           11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        MESSAGES                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'NULL)                                    11/83 DBC
NULL     DC    C' '                                           11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'DYNATIT)                                 11/83 DBC
DYNATIT  DC    C'DYNAMIC BLDL ACTIVITY REPORT'                11/83 DBC
         SPACE 3                                              11/83 DBC
         DS    AL1                                            11/83 DBC
STATBUF  DS    CL(LEN3270)                                    11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(0)                                         11/83 DBC
STATBUF2 DS    CL(LEN3270)                                    11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(0)                                         11/83 DBC
STATBUF3 DS    CL(LEN3270)                                    11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'INFOBUF)                                 11/83 DBC
INFOBUF  DC    CL(INFOLEN)' '                                 11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEBAR-INFO+INFOBUF                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSBAR-INFO+INFOBUF                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUBAR-INFO+INFOBUF                            11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'SORTTIT)                                 11/83 DBC
SORTTIT  DC    CL(INFOLEN)' '                                 11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEBAR-INFO+SORTTIT                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMENAME-INFO+SORTTIT                          11/83 DBC
         DC    C'SORTED BY NAME'                              11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSBAR-INFO+SORTTIT                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSHITS-INFO+SORTTIT                          11/83 DBC
         DC    C'SORTED BY HITS'                              11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUBAR-INFO+SORTTIT                            11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUIDLE-INFO+SORTTIT                           11/83 DBC
         DC    C'SORTED BY L.R.U.'                            11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   ,                                              11/83 DBC
         SPACE 3                                              08/84 DBC
         DC    AL1(L'SORTTIT0)                                08/84 DBC
SORTTIT0 DC    CL(INFOLEN)' '                                 08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   NAMEBAR-INFO+SORTTIT0                          08/84 DBC
         DC    C'|'                                           08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   HITSBAR-INFO+SORTTIT0                          08/84 DBC
         DC    C'|'                                           08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   HITSHITS-INFO+SORTTIT0                         08/84 DBC
         DC    C'(* MEANS REENTRANT)'                         08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   LRUBAR-INFO+SORTTIT0                           08/84 DBC
         DC    C'|'                                           08/84 DBC
         SPACE 1                                              08/84 DBC
         ORG   ,                                              08/84 DBC
         SPACE 3                                              11/83 DBC
         DC    AL1(L'SORTSUBT)                                11/83 DBC
SORTSUBT DC    CL(INFOLEN)' '                                 11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   COUNT-INFO+SORTSUBT                            11/83 DBC
         DC    C'CNT'                                         11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEBAR-INFO+SORTSUBT                          11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMENAME-INFO+SORTSUBT                         11/83 DBC
         DC    C'NAME'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMELIB#-1-INFO+SORTSUBT                       11/83 DBC
         DC    C'LIB#'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   NAMEHITS+L'NAMEHITS-4-INFO+SORTSUBT            11/83 DBC
         DC    C'HITS'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSBAR-INFO+SORTSUBT                          11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSHITS+L'HITSHITS-4-INFO+SORTSUBT            11/83 DBC
         DC    C'HITS'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSIDLE+L'HITSIDLE-4-INFO+SORTSUBT            11/83 DBC
         DC    C'IDLE'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSAGE+L'HITSAGE-3-INFO+SORTSUBT              11/83 DBC
         DC    C'AGE'                                         11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   HITSNAME-INFO+SORTSUBT                         11/83 DBC
         DC    C'NAME'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUBAR-INFO+SORTSUBT                           11/83 DBC
         DC    C'|'                                           11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUIDLE+L'LRUIDLE-4-INFO+SORTSUBT              11/83 DBC
         DC    C'IDLE'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUHITS+L'LRUHITS-4-INFO+SORTSUBT              11/83 DBC
         DC    C'HITS'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   LRUNAME-INFO+SORTSUBT                          11/83 DBC
         DC    C'NAME'                                        11/83 DBC
         SPACE 1                                              11/83 DBC
         ORG   ,                                              11/83 DBC
         TITLE 'SRCHPDS -- IGC018 HOOK ROUTINE'               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        SRCHPDS -- THIS ROUTINE RECEIVES CONTROL VIA A     * 11/83 DBC
*        HOOK PLACED AT LABEL "SRCHPDS" IN IGC018. (IGC018  * 11/83 DBC
*        BRANCHES TO "SRCHPDS" AFTER IT HAS SEARCHED THE    * 11/83 DBC
*        RESIDENT BLDL TABLE AND WHEN IT IS READY TO READ   * 11/83 DBC
*        THE PDS DIRECTORIES ON DISK). THIS INTERCEPT       * 11/83 DBC
*        ROUTINE DETERMINES IF THE PDS DIRECTORIES ABOUT TO * 11/83 DBC
*        BE SEARCHED ARE FOR THE LINKLIST LIBRARIES. IF SO, * 11/83 DBC
*        THEN IT SCANS THE USER'S BLDL PLIST AGAINST ITS    * 11/83 DBC
*        OWN DYNA-TABLE AND FILLS IN ALL USER REQUESTS FOR  * 11/83 DBC
*        NAMES THAT ARE FOUND IN THE DYNA-TABLE. THUS DISK  * 11/83 DBC
*        DIRECTORY SEARCHES FOR THOSE NAMES ARE BYPASSED.   * 11/83 DBC
*                                                           * 11/83 DBC
*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC
*        DONE.                                              * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC
*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC
*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC
*                VERSION OF IGC018.                         * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC
*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC
*                LABEL "SRCHPDS") THAT WERE OVERLAID BY THE * 11/83 DBC
*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC
*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC
*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        STATIC INPUTS:                                     * 11/83 DBC
*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC
*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC
*                RESTORED.                                  * 11/83 DBC
*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC
*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC
*              - THE "RDAREA" FIELD IN IGC018'S WORK AREA,  * 11/83 DBC
*                SINCE IT IS ABOUT TO BE READ INTO BY EXCP, * 11/83 DBC
*                IS AVAILABLE FOR LOCAL USE AT THIS TIME.   * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING SRCHPDS,R15         DCL LOCAL BASE             11/83 DBC
SRCHPDS  DS    0F                  ALIGNMENT                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE WHETHER OR NOT THE CURRENT SEARCH IS OF  * 11/83 DBC
*        THE LINKLIST LIBRARIES.                            * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CVTPTR           --> CVT                    11/83 DBC
         LA    R0,0(,RDCB-RDCB)    GET CRNT DCB PTR           11/83 DBC
         @ZAP  (RDCB,-2)                                      11/83 DBC
         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC
         BNE   SRCHPOZZ            NO, IGNORE THIS CALL       11/83 DBC
         SPACE 1                                              11/83 DBC
         CLI   CONCAT#-CONCAT#,0   YES, 1ST PASS FOR THIS     11/83 DBC
         @ZAP  (CONCAT#,-2)        PLIST?                     11/83 DBC
         BNE   SRCHPOZZ            NO, DYNA-TABLE SEARCH      11/83 DBC
*                                  ALREADY MADE; IGNORE THIS  11/83 DBC
*                                  CALL                       11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S ENVIRONMENT AND SET UP A LOCAL ONE.  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STM   R2,R14,REGSAVE-DYNAWA+RDAREA-RDAREA SAVE       11/83 DBC
         @ZAP  (RDAREA,-2)         IGC018'S REGISTERS         11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   USERKEY-DYNAWA+RDAREA-RDAREA,EXSKEY-EXSKEY     11/83 DBC
         @ZAP  (RDAREA,-4),        SAVE IGC018'S USER'S KEY   11/83 DBC*
               (EXSKEY,-2)                                    11/83 DBC
         SPACE 1                                              09/84 DBC
         MVC   BLDLFLG-DYNAWA+RDAREA-RDAREA,EXSFLG-EXSFLG     09/84 DBC
         @ZAP  (RDAREA,-4),        SAVE IGC018'S CONTROL      09/84 DBC*
               (EXSFLG,-2)         FLAGS                      09/84 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,0(,RLIST-RLIST)  COPY USER'S PLIST PTR TO A 11/83 DBC
         @ZAP  (RLIST,-2)          SAFE REGISTER              11/83 DBC
         USING BLDLIST,R1          DCL USER'S PLIST BASE      11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R13,RDAREA-RDAREA   --> LOCAL WORK AREA        11/83 DBC
         @ZAP  (RDAREA,-2)                                    11/83 DBC
*                                  NOTE, DIRECT USE OF        11/83 DBC
*                                  IGC018'S REGISTERS IS NOW  11/83 DBC
*                                  NO LONGER SAFE.            11/83 DBC
         USING DYNAWA,R13          DCL WORK AREA BASE         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S CURRENT KEY AND LOAD KEY-0.          * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IPK   ,                   DETERMINE CURRENT KEY      11/83 DBC
         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC
         SPKA  0                   SET KEY-0                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC
         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC
         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC
         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        PREPARE TO SCAN THE USER'S PLIST                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R2,BLDENT           --> 1ST PLIST ENTRY        11/83 DBC
         USING PDS2,R2             DCL A BASE FOR IT          11/83 DBC
         LH    R0,BLDENTS          GET ENTRY COUNT            11/83 DBC
         LTR   R0,R0               NULL?                      11/83 DBC
         BNP   SRCHRET             YES, EXIT BACK TO IGC018   11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R8,SRCHPODH         NO, --> CONTROL TABLE      11/83 DBC
         USING DYNAHEAD,R8         DCL A BASE FOR IT          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SEARCH THE DYNA-TABLE FOR EACH USER REQUESTED NAME * 11/83 DBC
*        THAT HAS NOT ALREADY BEEN FOUND.                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
NAMELOOP CLI   PDS2TTRP+2,0        HAS THIS NAME BEEN FOUND?  11/83 DBC
         BNE   NAMENEXT            YES, SKIP IT               11/83 DBC
         TM    PDS2NAME+DYNLLOCK,UNLOCKED NO, BUT WILL THE    11/83 DBC
*                                  NAME CONFUSE ME?           11/83 DBC
         BZ    NAMEMISS            YES, IGNORE IT             11/83 DBC
         LM    R3,R5,DYNAFIRS      NO, LOAD DYNA-TABLE DESCRI 11/83 DBC
         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC
         SPACE 1                                              11/83 DBC
DYNLSCAN CLC   PDS2NAME,DENTNAME   NAME FOUND IN TABLE?       11/83 DBC
         BE    NAMEHIT             YES, GO PROCESS            11/83 DBC
         BXLE  R3,R4,DYNLSCAN      NO, KEEP SEARCHING         11/83 DBC
         DROP  R3                  NO, RELEASE TABLE ENTRY BA 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        A USER REQUESTED NAME WAS NOT FOUND IN THE         * 11/83 DBC
*        DYNA-TABLE. COUNT THE MISS AND LOOP TO THE NEXT    * 11/83 DBC
*        ENTRY IN THE USER'S PLIST.                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
NAMEMISS LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNAMISS         COUNT THE MISS             11/83 DBC
         ST    R4,DYNAMISS         STORE BACK. NOTE, I DO NOT 11/83 DBC
*                                  BOTHER WITH A 'CS' BECAUSE 11/83 DBC
*                                  ABSOLUTE ACCURACY HERE IS  11/83 DBC
*                                  NOT REALLY THAT IMPORTANT. 11/83 DBC
         SPACE 1                                              11/83 DBC
         B     NAMENEXT            GO ADVANCE TO NEXT NAME    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        A USER REQUESTED NAME HAS BEEN FOUND IN THE        * 11/83 DBC
*        DYNA-TABLE. ATTEMPT TO LOCK OWNERSHIP OF THE       * 11/83 DBC
*        DYNA-TABLE SLOT.                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R3             RESTORE SLOT BASE          11/83 DBC
NAMEHIT  LM    R4,R5,PDS2NAME      GET THE GIVEN NAME         11/83 DBC
         LR    R6,R4               COPY                       11/83 DBC
         LR    R7,R5               COPY                       11/83 DBC
         X     R6,=A(UNLOCKED)     SET LOCK SIGNAL            11/83 DBC
         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK SIGNAL MUST BE   11/83 DBC*
                                   BYTE #3 OF THE NAME        11/83 DBC
         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC
*                                  GOT IT?                    11/83 DBC
         BNE   NAMEMISS            NO, GIVE UP ON THIS NAME   11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        I NOW OWN THE SLOT. NOW COPY THE DIRECTORY DATA TO * 11/83 DBC
*        THE USER'S PLIST.                                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         LH    R4,BLDELEN          GET L'USER'S PLIST ENTRY   11/83 DBC
         CH    R4,DYNLELEN         COMPARE WITH L'D-ENTRY     11/83 DBC
         BNH   GOTBDLEN            LOW; USE USER'S LENGTH     11/83 DBC
         LH    R4,DYNLELEN         HIGH; USE L'D-ENTRY        11/83 DBC
GOTBDLEN SH    R4,=Y(PDS2TTRP-PDS2+1) DECRIMENT BY L'ROOT     11/83 DBC
*                                  SECTION. ALSO DECRIMENT    11/83 DBC
*                                  FOR "EX-MVC". IS USER'S    11/83 DBC
*                                  SLOT LONG ENOUGH?          11/83 DBC
         BNM   BLDLMOVE            YES, PROCEED               11/83 DBC
         OI    DENTNAME+DYNLLOCK,UNLOCKED NO, RELEASE THE     11/83 DBC
*                                  SLOT                       11/83 DBC
         B     NAMEMISS            IGNORE THIS NAME           11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SET THE USER'S KEY AND THEN COPY THE BLDL ENTRY TO * 11/83 DBC
*        HIS PLIST. NOTE, THE DESIRED USER KEY WILL BE      * 09/84 DBC
*              EITHER IS EXECUTION KEY OR THE KEY FROM THE  * 09/84 DBC
*        DEB FOR THE PDS BEING SEARCHED. IF THE DESIRED KEY * 09/84 DBC
*        IS THE DEB KEY, THEN IGC018'S EXECUTION KEY        * 09/84 DBC
*        MATCHES THE DEB KEY.                               * 09/84 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
BLDLMOVE IC    R5,USERKEY          GET USER'S EXECUTION KEY   09/84 DBC
         TM    BLDLFLG,EXSBLDL-EXSBLDL DOING A BLDL?          09/84 DBC
         @ZAP  (EXSBLDL,-3)                                   09/84 DBC
         BNZ   SINKKEY             YES, PROCEED               09/84 DBC
         IC    R5,KEYSAVE          NO, DOING A FIND. GET      09/84 DBC
*                                  IGC018'S EXECUTION KEY     09/84 DBC
*                                  (WHICH WILL MATCH THE      09/84 DBC
*                                  USER'S DEB KEY).           09/84 DBC
SINKKEY  SPKA  0(R5)               SET USER'S KEY             09/84 DBC
         SPACE 1                                              09/84 DBC
         MVC   PDS2TTRP(*-*),DENTTTRP (EXECUTED)              11/83 DBC
         EX    R4,*-6              COPY STUFF TO USER'S PLIST 11/83 DBC
         SPKA  0                   RESUME KEY-0               11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        UPDATE THE SLOT'S LRU FIELD (MAKING IT M.R.U.),    * 11/83 DBC
*        COUNT THE HIT, AND UNLOCK THE DYNA-SLOT.           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   DYNLLRU#,CLOKSAVE   MAKE SLOT M.R.U.         * 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNLHITS         COUNT THE SLOT'S HITS      11/83 DBC
         ST    R4,DYNLHITS         STORE BACK                 11/83 DBC
         SPACE 1                                              11/83 DBC
         OI    DENTNAME+DYNLLOCK,UNLOCKED RELEASE THE SLOT    11/83 DBC
         DROP  R3                  RELEASE SLOT BASE          11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNAHITS         COUNT TOTAL HITS           11/83 DBC
         ST    R4,DYNAHITS         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        ADVANCE TO THE NEXT NAME IN THE USER'S PLIST.      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
NAMENEXT AH    R2,BLDELEN          --> NEXT PLIST ENTRY       11/83 DBC
         BCT   R0,NAMELOOP         LOOP IF THERE ARE MORE     11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  R2                  NO MORE, REL PLIST ENTRY B 11/83 DBC
         DROP  R8                  REL DYNA-CONTROL TBL BASE  11/83 DBC
         DROP  R1                  RELEASE PLIST BASE         11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC
         SPKA  0(R2)               RESTORE IT                 11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGS      11/83 DBC
         DROP  R13                 RELEASE LCL WORK AREA BASE 11/83 DBC
         SPACE 1                                              11/83 DBC
         B     SRCHPOZZ            GO BACK TO IGC018          11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        STATIC DATA                                        * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPODH DC    A(DYNAHEAD-DYNAHEAD) --> CONTROL TABLE         11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCHPOZZ DS    0H                                             11/83 DBC
SRCHPOLL EQU   SRCHPOZZ-SRCHPDS                               11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        THE ORIGINAL SRCHPDS CODE FROM IGC018 GETS COPIED  * 11/83 DBC
*        FOLLOWING HERE.                                    * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE 'DFOUND -- IGC018 HOOK ROUTINE'                11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        DFOUND -- THIS ROUTINE RECEIVES CONTROL VIA A HOOK * 11/83 DBC
*        PLACED AT LABEL "DFOUND" IN IGC018. (IGC018        * 11/83 DBC
*        BRANCHES TO "DFOUND" WHEN IT HAS SUCCESSFULLY READ * 11/83 DBC
*        A PDS DIRECTORY BLOCK AND LOCATED THE DESIRED      * 11/83 DBC
*        ENTRY WITHIN IT). IF THE MEMBER IS FROM A LINKLIST * 11/83 DBC
*        LIBRARY BUT HAD NOT BEEN PREVIOUSLY COPIED TO THE  * 11/83 DBC
*        DYNA-TABLE, THEN THIS INTERCEPT DOES THAT.         * 11/83 DBC
*                                                           * 11/83 DBC
*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC
*        DONE.                                              * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC
*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC
*                                                           * 11/83 DBC
*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC
*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC
*                VERSION OF IGC018.                         * 11/83 DBC
*                                                           * 11/83 DBC
*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC
*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC
*                LABEL "DFOUND") THAT WERE OVERLAID BY THE  * 11/83 DBC
*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC
*                                                           * 11/83 DBC
*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC
*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC
*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        STATIC INPUTS:                                     * 11/83 DBC
*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC
*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC
*                RESTORED.                                  * 11/83 DBC
*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC
*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DFOUND,R15          DCL LOCAL BASE             11/83 DBC
DFOUND   DS    0F                  ALIGNMENT                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        DETERMINE WHETHER OR NOT THE CURRENT MEMBER NAME   * 11/83 DBC
*        IS FROM THE LINKLIST LIBRARIES.                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R1,CVTPTR           --> CVT                    11/83 DBC
         LA    R0,0(,RDCB-RDCB)    COPY PDS DCB PTR           11/83 DBC
         @ZAP  (RDCB,-2)                                      11/83 DBC
         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC
         BNE   DFOUNDZZ            NO, IGNORE THIS CALL       11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    PDS1NAME+DYNLLOCK-PDS1(RPDS1-RPDS1),UNLOCKED   11/83 DBC
         @ZAP  (RPDS1,-2)          YES, BUT WILL THIS NAME    11/83 DBC*
                                   CONFUSE ME?                11/83 DBC
         BZ    DFOUNDZZ            YES, IGNORE THIS CALL      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        AQUIRE A LOCAL DYNAMIC WORK AREA                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R0,=AL1(229,0,0,DYNAWAL) SP/LEN                11/83 DBC
         GETMAIN R,LV=(0)          GET AN AREA                11/83 DBC
         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC
         USING DYNAWA,R1           DCL WORK AREA BASE         11/83 DBC
         BALR  R15,0               RELOAD A LOCAL BASE        11/83 DBC
         USING *,R15               DECLARE IT                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S ENVIRONMENT AND SET UP MY OWN.       * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STM   R2,R14,REGSAVE      SAVE IGC018'S REGISTERS    11/83 DBC
         MVC   CCIDSAVE,CONCAT#-CONCAT# SAVE CONCAT INDEX     11/83 DBC
         @ZAP  (CONCAT#,-2)                                   11/83 DBC
         LA    R0,0(,RPDS1-RPDS1)  --> FOUND D-ENTRY          11/83 DBC
         @ZAP  (RPDS1,-2)                                     11/83 DBC
         LR    R13,R1              COPY LCL DYNAWA PTR.       11/83 DBC
*                                  NOTE, DIRECT USE OF        11/83 DBC
*                                  IGC018'S REGISTERS IS NOW  11/83 DBC
*                                  NO LONGER SAFE.            11/83 DBC
         DROP  R1                  RELEASE TEMP DYNAWA BASE   11/83 DBC
         USING DYNAWA,R13          DCL NEW ONE                11/83 DBC
         SPACE 1                                              11/83 DBC
         LR    R1,R0               COPY D-ENTRY POINTER       11/83 DBC
         USING PDS1,R1             DCL A BASE FOR IT          11/83 DBC
         SPACE 1                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SAVE IGC018'S KEY AND LOAD KEY-0                     11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         IPK   ,                   GET IGC018'S KEY           11/83 DBC
         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC
         SPKA  0                   LOAD KEY-0                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC
         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC
         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC
         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        SCAN THE DYNA-TABLE IN SEARCH OF A STEALABLE SLOT. * 11/83 DBC
*        NOTE, THE NAME MIGHT ALREADY EXIST IN THE TABLE,   * 11/83 DBC
*        SO CHECK THAT TOO.                                 * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R8,DFOUNDDH         --> CONTROL TABLE          11/83 DBC
         USING DYNAHEAD,R8         DCL CONTROL TABLE BASE     11/83 DBC
RESCAN   LM    R3,R5,DYNAFIRS      --> DYNA-TABLE             11/83 DBC
         USING DYNL,R3             DCL SLOT BASE              11/83 DBC
         SPACE 1                                              11/83 DBC
         SR    R0,R0               LOAD LOGICAL HIGH -        11/83 DBC
         BCTR  R0,0                 VALUE (4X'FF')            11/83 DBC
         SPACE 1                                              11/83 DBC
SCANLOOP CL    R0,DYNLLRU#         LESS RECENTLY USED SLOT?   11/83 DBC
         BL    SCANNAME            NO, SKIP                   11/83 DBC
         LR    R2,R3               YES, SAVE ITS POINTER      11/83 DBC
         ICM   R0,15,DYNLLRU#      GET LRU#; UNUSED SLOT?     11/83 DBC
         BZ    SCANGRAB            YES, GO USE IT.            11/83 DBC
SCANNAME CLC   DENTNAME,PDS1NAME   NO, IS THE NAME ACTUALLY   11/83 DBC
*                                  ALREADY IN THE DYNA-TABLE? 11/83 DBC
         BE    SCANRET             YES, NOTHING TO DO HERE    11/83 DBC
         BXLE  R3,R4,SCANLOOP      NO, CONTINUE SEARCHING     11/83 DBC
         DROP  R3                  RELEASE SLOT BASE          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        A STEALABLE (OR UNUSED) SLOT HAS BEEN FOUND.       * 11/83 DBC
*        ATTEMPT TO LOCK CONTROL OF IT.                     * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING DYNL,R2             DCL SLOT BASE              11/83 DBC
SCANGRAB CLC   DYNLLRU#,CLOKSAVE   IF THE DYNA-TABLE IS VERY  11/83 DBC
*                                  SMALL (SUCH AS 1 OR 2      11/83 DBC
*                                  ENTRIES), THEN THE GRAB    11/83 DBC
*                                  ATTEMPT COULD CONCEIVABLY  11/83 DBC
*                                  FAIL ON EVERY SLOT AND     11/83 DBC
*                                  THAT WOULD LEAD TO AN      11/83 DBC
*                                  UNCONTROLLED LOOP. THIS    11/83 DBC
*                                  TEST GUARDS AGAINST THAT.  11/83 DBC
*                                  HAVE I ALREADY TRIED AND   11/83 DBC
*                                  FAILED TO GRAB THIS SLOT?  11/83 DBC
         BE    SCANRET             YES, GIVE UP.              11/83 DBC
         MVC   DYNLLRU#,CLOKSAVE   NO, RESET THIS SLOT'S LRU# 11/83 DBC
*                                  REGUARDLESS OF WHETHER OR  11/83 DBC
*                                  I CAN LOCK IT.             11/83 DBC
         SPACE 1                                              11/83 DBC
         LM    R4,R5,DENTNAME      GET THE SLOT'S NAME        11/83 DBC
         O     R4,=A(UNLOCKED)     SET UNLOCKED IN CASE       11/83 DBC
*                                  ALREADY LOCKED JUST NOW BY 11/83 DBC
*                                  SOMEONE ELSE               11/83 DBC
         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK BIT MUST BE IN   11/83 DBC*
                                   THE NAME'S 4TH BYTE        11/83 DBC
         LR    R6,R4               COPY THE -                 11/83 DBC
         LR    R7,R5                NAME                      11/83 DBC
         X     R6,=A(UNLOCKED)     SET "LOCKED" SIGNAL        11/83 DBC
         #TEST SIZE=(DYNLLOCK,EQ,3)                           11/83 DBC
         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC
*                                  GOT IT?                    11/83 DBC
         BNE   RESCAN              NO, TRY TO GET ANOTHER     11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        I'VE NOW GOT A STEALABLE SLOT. COUNT IT AND STEAL  * 11/83 DBC
*        IT.                                                * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         XC    DYNL(DYNLLEN),DYNL CLEAR THE SLOT              11/83 DBC
         MVC   DYNLLRU#,CLOKSAVE   MAKE M.R.U.                11/83 DBC
         MVC   DYNLCLOK,CLOKSAVE   SET BIRTHDATE              11/83 DBC
         MVC   DENTCNCT,CCIDSAVE   SAVE LIB CONCAT INDEX      11/83 DBC
         MVI   DENTLIBF,LINKSVC    SET "FROM LINKLIST" SIGNAL 11/83 DBC
         SPACE 1                                              11/83 DBC
         IC    R4,PDS1INDC         GET L'UDAT/2               11/83 DBC
         N     R4,=A(PDS1LUSR)     ISSOLATE IT                11/83 DBC
         AR    R4,R4               CNVRT TO TRUE VALUE        11/83 DBC
         LA    R5,DENTUSRD-DENT(,R4) CNVRT TO SLOT ENTRY LEN  11/83 DBC
         STH   R5,DYNLELEN         SAVE                       11/83 DBC
         MVC   DENTINDC(*-*),PDS1INDC (EXECUTED)              11/83 DBC
         EX    R4,*-6              COPY FLAGS, LENGTH, AND    11/83 DBC
*                                  USER DATA TO THE SLOT      11/83 DBC
         SPACE 1                                              11/83 DBC
         MVC   DENTNAME(L'DENTNAME+L'DENTTTRP),PDS1NAME COPY  11/83 DBC
*                                  REST OF INFO TO SLOT. ALSO 11/83 DBC
*                                  UNLOCK THE SLOT.           11/83 DBC
         DROP  R2                  RELEASE SLOT BASE          11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R4,1                LOAD INCRIMENT             11/83 DBC
         AL    R4,DYNADDED         INCR STEAL COUNTER         11/83 DBC
         ST    R4,DYNADDED         STORE BACK                 11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SCANRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC
         SPKA  0(R2)               RESTORE IT                 11/83 DBC
         SPACE 1                                              11/83 DBC
         LA    R1,DYNAWA           SAVE WORK AREA PTR         11/83 DBC
         DROP  R1                  RELEASE D-ENTRY BASE       11/83 DBC
         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGISTERS 11/83 DBC
         DROP  R8                  RELEASE CONTROL TABLE BASE 11/83 DBC
         DROP  R13                 RELEASE WORK AREA BASE     11/83 DBC
         SPACE 1                                              11/83 DBC
         L     R0,=AL1(229,0,0,DYNAWAL) GET SP/LEN            11/83 DBC
         FREEMAIN R,LV=(0),A=(1)   RELEASE THE WORK AREA      11/83 DBC
         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC
         BALR  R15,0               LOAD NEW LOCAL BASE        11/83 DBC
         B     DFOUNDZZ-*(,R15)    GO EXIT TO IGC018          11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        LOCAL DATA                                         * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 1                                              11/83 DBC
DFOUNDDH DC    A(DYNAHEAD-DYNAHEAD) HEADER TABLE PTR          11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO IGC018                                   * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFOUNDZZ DS    0H                                             11/83 DBC
DFOUNDLL EQU   DFOUNDZZ-DFOUND                                11/83 DBC
         SPACE 1                                              11/83 DBC
************************************************************* 11/83 DBC
*        THE ORIGINAL DFOUND CODE FROM IGC018 GETS COPIED   * 11/83 DBC
*        FOLLOWING HERE.                                    * 11/83 DBC
************************************************************* 11/83 DBC
         TITLE '@ZAP -- IBM PRIVATE FIELDS REFERENCE ADJUSTMENTS' 3 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        @ZAP -- THIS ROUTINE ADJUSTS ALL FLAGGED           * 11/83 DBC
*        REFERENCES TO IBM PRIVATE FIELDS TO CORRESPOND TO  * 11/83 DBC
*        THE CURRENT VERSION OF IGC018.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO A TABLE OF FIELD DESCRIPTORS. * 11/83 DBC
*              - THE PROGRAM BASE REGISTERS ARE AS          * 11/83 DBC
*                ESTABLISHED BY THE #ENTER MACRO AT         * 11/83 DBC
*                DYNABLDL'S ENTRY POINT.                    * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC
*              - R0 MAY BE DESTROYED.                       * 11/83 DBC
*              - NOTE, A LOCAL BASE IS NOT NEEDED HERE.     * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE REQUIRED ADJUSTMENTS HAVE BEEN MADE.   * 11/83 DBC
*              - R0 IS DESTROYED.                           * 11/83 DBC
*              - ALL OTHER REGISTERS ARE RESTORED.          * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         #USING ,                  RESTORE ADDRESSABILITY     11/83 DBC
         USING FIELDS,R1           DCL FIELDS BASE            11/83 DBC
@ZAP     @ZAP  ,                                              11/83 DBC
         SPACE 1                                              11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         TITLE 'PRTEXIT -- SYSPRINT DCB OPEN EXIT'            11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        PRTEXIT -- THIS IS A DCB OPEN EXIT ROUTINE FOR THE * 11/83 DBC
*        SYSPRINT FILE. IT EXAMINES THE RECFM, LRECL, AND   * 11/83 DBC
*        BLKSIZE DCB FIELDS TO ENFORCE VALID COMBINATIONS   * 11/83 DBC
*        AND TO SET THE FOLLOWING DEFAULTS AS APPROPRIATE.  * 11/83 DBC
*                                                           * 11/83 DBC
*        IF NEITHER RECFM=F, =V, OR =U IS GIVEN, THEN       * 11/83 DBC
*        RECFM=V IS SET.                                    * 11/83 DBC
*                                                           * 11/83 DBC
*        IF RECFM=A OR =M IS GIVEN, THEN THAT IS CLEARED.   * 11/83 DBC
*        (CARRIAGE CONTROL IS NOT SUPPORTED BY DYNABLDL).   * 11/83 DBC
*                                                           * 11/83 DBC
*        FOR RECFM=U, LRECL IS FORCED TO ZERO.              * 11/83 DBC
*                                                           * 11/83 DBC
*        IF BLKSIZE=0 IS GIVEN, THEN A TENTATIVE DEFAULT    * 11/83 DBC
*        BLKSIZE IS CHOSEN AS FOLLOWS:                      * 11/83 DBC
*        - IF RECFM=F, THEN BLKSIZE=3120.                   * 11/83 DBC
*        - IF RECFM=V, THEN BLKSIZE=4096.                   * 11/83 DBC
*        - IF RECFM=U, THEN BLKSIZE=79.                     * 11/83 DBC
*                                                           * 11/83 DBC
*        IF LRECL=0 IS GIVEN, THEN A DEFAULT LRECL IS       * 11/83 DBC
*        CHOSEN AS FOLLOWS:                                 * 11/83 DBC
*        - IF RECFM=F, THEN LRECL=80.                       * 11/83 DBC
*        - IF RECFM=V, THEN LRECL=83.                       * 11/83 DBC
*                                                           * 11/83 DBC
*        FOR RECFM=F, IF BLKSIZE IS NOT A MULTIPLE OF       * 11/83 DBC
*        LRECL, THEN IT IS ROUNDED DOWN TO A LRECL          * 11/83 DBC
*        MULTIPLE.                                          * 11/83 DBC
*                                                           * 11/83 DBC
*        IF, AT THIS POINT, BLKSIZE IS NOT LARGE ENOUGH     * 11/83 DBC
*        WHEN COMPARED TO LRECL, THEN A NEW BLKSIZE IS SET  * 11/83 DBC
*        AS FOLLOWS:                                        * 11/83 DBC
*        - IF RECFM=F, THEN BLKSIZE=LRECL.                  * 11/83 DBC
*        - IF RECFM=V, THEN BLKSIZE=LRECL+4.                * 11/83 DBC
*                                                           * 11/83 DBC
*        INPUTS:                                            * 11/83 DBC
*              - R1 POINTS TO THE SYSPRINT DCB.             * 11/83 DBC
*              - R14 POINTS TO A RETURN ADDRESS (SVC 3).    * 11/83 DBC
*              - R15 POINTS TO THIS ROUTINE'S ENTRY         * 11/83 DBC
*                ADDRESS.                                   * 11/83 DBC
*                                                           * 11/83 DBC
*        RETURN 0(,R14):                                    * 11/83 DBC
*              - THE ABOVE DESCRIBED PROCESSING HAS BEEN    * 11/83 DBC
*                COMPLETED.                                 * 11/83 DBC
*              - R14 REMAINS UNCHANGED.                     * 11/83 DBC
*              - OTHER REGISTERS MAY BE ALTERED.            * 11/83 DBC
*                (RESTORATION IS NOT NECESSARY).            * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
         USING IHADCB,R1           DCL DCB BASE               11/83 DBC
         USING PRTEXIT,R15         DCL LOCAL BASE             11/83 DBC
PRTEXIT  LH    R4,DCBLRECL         GET LRECL                  11/83 DBC
         LH    R3,DCBBLKSI         SET BLKSIZE                11/83 DBC
         SPACE 1                                              11/83 DBC
         OI    DCBRECFM,DCBRECBR   ASSUME BLOCKED RECORDS     11/83 DBC
         SPACE 1                                              11/83 DBC
         NI    DCBRECFM,255-DCBRECCC CLEAR CARRIAGE CONTROL   11/83 DBC
         SPACE 1                                              11/83 DBC
         TM    DCBRECFM,DCBRECU    RECFM DEFINED?             11/83 DBC
         BO    PRTRECU             YES, RECFM=U               11/83 DBC
         BNZ   PRTRECFV            YES, RECFM=F OR =V         11/83 DBC
         OI    DCBRECFM,DCBRECV    NO, SET RECFM=V            11/83 DBC
PRTRECFV TM    DCBRECFM,DCBRECF    RECFM=F?                   11/83 DBC
         BO    PRTRECF             YES, GO HANDLE             11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=V HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRECV  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC
         BNZ   PRTRVCK2            NO, SKIP                   11/83 DBC
         LH    R3,=Y(4096)         YES, SET DEFAULT           11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRVCK2 CH    R4,=Y(LEN3270+4)    LRECL LARGE ENOUGH?        11/83 DBC
         BNL   PRTRVCK3            YES, SKIP                  11/83 DBC
         LA    R4,LEN3270+4        NO, RESET                  11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRVCK3 LA    R0,4(,R4)           GET LRECL+4                11/83 DBC
         CR    R0,R3               BLKSIZE LARGE ENOUGH?      11/83 DBC
         BH    PRTLBOK             YES, DONE HERE             11/83 DBC
         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC
         LR    R3,R0               RESET THE BLKSIZE          11/83 DBC
         B     PRTLBOK             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=F HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRECF  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC
         BNZ   PRTRFCK2            NO, SKIP                   11/83 DBC
         LA    R3,3120             YES, SET DEFAULT           11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRFCK2 CH    R4,=Y(LEN3270)      LRECL LARGE ENOUGH?        11/83 DBC
         BNL   PRTRFCK3            YES, SKIP                  11/83 DBC
         LA    R4,80               NO, SET DEFAULT            11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRFCK3 SR    R2,R2               CLEAR FOR DIVIDE           11/83 DBC
         DR    R2,R4               ROUND BLKSIZE DOWN -       11/83 DBC
         MR    R2,R4                TO A LRECL MULTIPLE       11/83 DBC
         SPACE 1                                              11/83 DBC
         CR    R3,R4               IS BLKSIZE LARGE ENOUGH?   11/83 DBC
*                                  (MIGHT BE ZEROED BY THE    11/83 DBC
*                                  ABOVE DIVIDE)              11/83 DBC
         BH    PRTLBOK             YES, DONE HERE             11/83 DBC
         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC
         LR    R3,R4               RESET BLKSIZE              11/83 DBC
         B     PRTLBOK             DONE HERE                  11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RECFM=U HANDLER                                    * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTRECU  NI    DCBRECFM,255-DCBRECBR SIGNAL UNBLOCKED         11/83 DBC
         SR    R4,R4               SET LRECL=0                11/83 DBC
         SPACE 1                                              11/83 DBC
         CH    R3,=Y(LEN3270)      IS BLKSIZE LARGE ENOUGH?   11/83 DBC
         BNL   PRTLBOK             YES, DONE HERE             11/83 DBC
         LA    R3,LEN3270          NO, RESET THE BLKSIZE      11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*        RETURN TO CALLER (OPEN VIA SVC 3)                  * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
PRTLBOK  STH   R3,DCBBLKSI         STORE NEW BLKSIZE          11/83 DBC
         STH   R4,DCBLRECL         STORE NEW LRECL            11/83 DBC
         BR    R14                 RETURN TO CALLER           11/83 DBC
         DROP  ,                   RELEASE ALL BASES          11/83 DBC
         SPACE 1                                              11/83 DBC
         LTORG ,                                              11/83 DBC
         TITLE 'VERSION TABLES'                               11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC
*        LEVEL: 8206                                        * 11/83 DBC
*        PTF: UZ56064                                       * 11/83 DBC
*        APAR: AZ60132                                      * 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#01 CSECT ,                                              11/83 DBC
         DC    A(ID#01)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#01)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#01)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#01)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#01    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#01VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#01V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA60132'         00000E          DC    C'@ZA60132'
*                                                  DC    C'&SYSDATE'
         DC    C'03/26/82'         000016+         DC    C'03/26/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#01VLN EQU   *-ID#01V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#01  DS    0H                                             11/83 DBC
         DC    Y(X'572')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#01L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#01V DS    0H                  000572 SRCHPDS  EQU   *
         BAL   R14,X'4FA'(,R12)    000572          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     000576          TM    EXSFLG,EXSSYDC
         BO    X'580'(,R12)        00057A          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#01L EQU   *-SRCH#01V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#01L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#01  DS    0H                                             11/83 DBC
         DC    Y(X'7C4')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#01L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#01V MVC   X'8'(3,R7),X'8'(R8) 0007C4 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007CA          IC    RX,PDS1INDC
         NR    R4,R14              0007CE          NR    RX,RZ
         LA    R5,X'E'             0007D0          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007D4          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007D6          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#01L EQU   *-DFND#01V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#01L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#01  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#01,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC
*        LEVEL: 8107                                        * 09/84 DBC
*        PTF: UZ37480                                       * 09/84 DBC
*        APAR: AZ49924                                      * 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#02 CSECT ,                                              11/83 DBC
         DC    A(ID#02)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#02)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#02)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#02)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#02    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#02VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#02V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA49924'         00000E          DC    C'@ZA49924'
*                                                  DC    C'&SYSDATE'
         DC    C'05/28/81'         000016+         DC    C'05/28/81'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#02VLN EQU   *-ID#02V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#02  DS    0H                                             11/83 DBC
         DC    Y(X'566')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#02L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#02V DS    0H                  000566 SRCHPDS  EQU   *
         BAL   R14,X'4EE'(,R12)    000566          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00056A          TM    EXSFLG,EXSSYDC
         BO    X'574'(,R12)        00056E          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#02L EQU   *-SRCH#02V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#02L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#02  DS    0H                                             11/83 DBC
         DC    Y(X'7B8')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#02L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#02V MVC   X'8'(3,R7),X'8'(R8) 0007B8 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007BE          IC    RX,PDS1INDC
         NR    R4,R14              0007C2          NR    RX,RZ
         LA    R5,X'E'             0007C4          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007C8          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007CA          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#02L EQU   *-DFND#02V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#02L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#02  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#02,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: MVS SCP 3.8 (5752-MVS)                    * 11/83 DBC
*        LEVEL: 8009                                        * 11/83 DBC
*        PTF: UZ32516                                       * 11/83 DBC
*        APAR: AZ47610                                      * 11/83 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#03 CSECT ,                                              11/83 DBC
         DC    A(ID#03)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#03)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#03)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#03)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#03    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#03VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#03V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZZ47610'         00000E          DC    C'@ZZ47610'
*                                                  DC    C'&SYSDATE'
         DC    C'07/09/80'         000016+         DC    C'07/09/80'
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#03VLN EQU   *-ID#03V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#03  DS    0H                                             11/83 DBC
         DC    Y(X'4B2')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#03L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#03V DS    0H                  0004B2 SRCHPDS  EQU   *
         BAL   R14,X'43A'(,R12)    0004B2          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               0004B6          SR    R0,R0
         IC    R0,X'141'(,R13)     0004B8 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     0004BC          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#03L EQU   *-SRCH#03V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#03L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#03  DS    0H                                             11/83 DBC
         DC    Y(X'6A0')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#03L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#03V MVC   X'8'(3,R7),X'8'(R8) 0006A0 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0006A6          IC    RX,PDS1INDC
         NR    R4,R14              0006AA          NR    RX,RZ
         LA    R5,X'E'             0006AC          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0006B0          LCR   RY,RY
         AH    R5,X'2'(,R10)       0006B2          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#03L EQU   *-DFND#03V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#03L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#03  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#03,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE: IGC018                                     * 11/83 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC
*        LEVEL: 8303                                        * 11/83 DBC
*        PTF: UZ61168 (VARIATION "@HZA")                    * 05/84 DBC
*                                                           * 11/83 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
VERSN#04 CSECT ,                                              11/83 DBC
         DC    A(ID#04)            --> VERSION VERIFIER       11/83 DBC
         DC    A(SRCH#04)          --> ORIGINAL "SRCHPDS" COD 11/83 DBC
         DC    A(DFND#04)          --> ORIGINAL "DFOUND" CODE 11/83 DBC
         DC    A(DOFF#04)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
ID#04    DS    0H                                             11/83 DBC
         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC
         DC    Y(ID#04VLN)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#04V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'    @HZA'         00000E          DC    C'    @HZA'
*                                                  DC    C'&SYSDATE'
         DC    C'11/19/82'         000016+         DC    C'11/19/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              11/83 DBC
ID#04VLN EQU   *-ID#04V            VERIFY LENGTH              11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
SRCH#04  DS    0H                                             11/83 DBC
         DC    Y(X'58C')           VERIFY LOCATION            11/83 DBC
         DC    Y(SRCH#04L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#04V DS    0H                  00058C SRCHPDS  EQU   *
         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               000590          SR    R0,R0
         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              11/83 DBC
SRCH#04L EQU   *-SRCH#04V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(SRCH#04L,GE,SRCHPOHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DFND#04  DS    0H                                             11/83 DBC
         DC    Y(X'808')           VERIFY LOCATION            11/83 DBC
         DC    Y(DFND#04L)         VERIFY LENGTH              11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#04V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC
         NR    R4,R14              000812          NR    RX,RZ
         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD
         LCR   R5,R5               000818          LCR   RY,RY
         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              11/83 DBC
DFND#04L EQU   *-DFND#04V          VERIFY LENGTH              11/83 DBC
         #TEST SIZE=(DFND#04L,GE,DFOUNDHL)                    11/83 DBC
         SPACE 3                                              11/83 DBC
************************************************************* 11/83 DBC
*                                                           * 11/83 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 11/83 DBC
*        DSECT.                                             * 11/83 DBC
*                                                           * 11/83 DBC
************************************************************* 11/83 DBC
         SPACE 1                                              11/83 DBC
DOFF#04  DS    0H                                             11/83 DBC
         SPACE 1                                              11/83 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              11/83 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              11/83 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              11/83 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              11/83 DBC
         #TEST SIZE=(*-DOFF#04,EQ,FIELDSLN)                   11/83 DBC
         EJECT ,                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        MODULE: IGC018                                     * 04/84 JLC
*        PRODUCT: DF/DS (5740-AM7)                          * 04/84 JLC
*        LEVEL: 8303                                        * 04/84 JLC
*        PTF: UZ61167                                       * 04/84 JLC
*                                                           * 04/84 JLC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 04/84 JLC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 04/84 JLC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 04/84 JLC
*        DSECT.                                             * 04/84 JLC
*                                                           * 04/84 JLC
*        PREPARED 04/20/84 BY J.CALLEN AT U OF C            * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
VERSN#05 CSECT ,                                              04/84 JLC
         DC    A(ID#05)            --> VERSION VERIFIER       04/84 JLC
         DC    A(SRCH#05)          --> ORIGINAL "SRCHPDS" COD 04/84 JLC
         DC    A(DFND#05)          --> ORIGINAL "DFOUND" CODE 04/84 JLC
         DC    A(DOFF#05)          --> IBM DATA FIELDS DESCRIPTORS  JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 04/84 JLC
*        DSECT.                                             * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
ID#05    DS    0H                                             04/84 JLC
         DC    Y(X'6')             VERIFY LOCATION            04/84 JLC
         DC    Y(ID#05VLN)         VERIFY LENGTH              04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#05V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA66915'         00000E          DC    C'ZA66915A'
*                                                  DC    C'&SYSDATE'
         DC    C'11/19/82'         000016+         DC    C'11/19/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              04/84 JLC
ID#05VLN EQU   *-ID#05V            VERIFY LENGTH              04/84 JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
SRCH#05  DS    0H                                             04/84 JLC
         DC    Y(X'57A')           VERIFY LOCATION            04/84 JLC
         DC    Y(SRCH#05L)         VERIFY LENGTH              04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#05V DS    0H                  00057A SRCHPDS  EQU   *
         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYDC
         BO    X'588'(,R12)        000582          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              04/84 JLC
SRCH#05L EQU   *-SRCH#05V          VERIFY LENGTH              04/84 JLC
         #TEST SIZE=(SRCH#05L,GE,SRCHPOHL)                    04/84 JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
DFND#05  DS    0H                                             04/84 JLC
         DC    Y(X'7CC')           VERIFY LOCATION            04/84 JLC
         DC    Y(DFND#05L)         VERIFY LENGTH              04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#05V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC
         NR    R4,R14              0007D6          NR    RX,RZ
         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007DC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              04/84 JLC
DFND#05L EQU   *-DFND#05V          VERIFY LENGTH              04/84 JLC
         #TEST SIZE=(DFND#05L,GE,DFOUNDHL)                    04/84 JLC
         SPACE 3                                              04/84 JLC
************************************************************* 04/84 JLC
*                                                           * 04/84 JLC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 04/84 JLC
*        DSECT.                                             * 04/84 JLC
*                                                           * 04/84 JLC
************************************************************* 04/84 JLC
         SPACE 1                                              04/84 JLC
DOFF#05  DS    0H                                             04/84 JLC
         SPACE 1                                              04/84 JLC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              04/84 JLC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              04/84 JLC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              04/84 JLC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              04/84 JLC
         #TEST SIZE=(*-DOFF#05,EQ,FIELDSLN)                   04/84 JLC
         EJECT ,                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        MODULE: IGC018                                     * 05/84 DBC
*        PRODUCT: DF/DS (5740-AM7)                          * 05/84 DBC
*        LEVEL: 8303                                        * 05/84 DBC
*        PTF: UZ61168 (VARIATION "@H2A")                    * 05/84 DBC
*                                                           * 05/84 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 05/84 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 05/84 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 05/84 DBC
*        DSECT.                                             * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
VERSN#06 CSECT ,                                              05/84 DBC
         DC    A(ID#06)            --> VERSION VERIFIER       05/84 DBC
         DC    A(SRCH#06)          --> ORIGINAL "SRCHPDS" COD 05/84 DBC
         DC    A(DFND#06)          --> ORIGINAL "DFOUND" CODE 05/84 DBC
         DC    A(DOFF#06)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 05/84 DBC
*        DSECT.                                             * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
ID#06    DS    0H                                             05/84 DBC
         DC    Y(X'6')             VERIFY LOCATION            05/84 DBC
         DC    Y(ID#06VLN)         VERIFY LENGTH              05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#06V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'    @H2A'         00000E          DC    C'    @H2A'
*                                                  DC    C'&SYSDATE'
         DC    C'11/19/82'         000016+         DC    C'11/19/82'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              05/84 DBC
ID#06VLN EQU   *-ID#06V            VERIFY LENGTH              05/84 DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
SRCH#06  DS    0H                                             05/84 DBC
         DC    Y(X'58C')           VERIFY LOCATION            05/84 DBC
         DC    Y(SRCH#06L)         VERIFY LENGTH              05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#06V DS    0H                  00058C SRCHPDS  EQU   *
         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               000590          SR    R0,R0
         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              05/84 DBC
SRCH#06L EQU   *-SRCH#06V          VERIFY LENGTH              05/84 DBC
         #TEST SIZE=(SRCH#06L,GE,SRCHPOHL)                    05/84 DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
DFND#06  DS    0H                                             05/84 DBC
         DC    Y(X'808')           VERIFY LOCATION            05/84 DBC
         DC    Y(DFND#06L)         VERIFY LENGTH              05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#06V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC
         NR    R4,R14              000812          NR    RX,RZ
         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD
         LCR   R5,R5               000818          LCR   RY,RY
         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              05/84 DBC
DFND#06L EQU   *-DFND#06V          VERIFY LENGTH              05/84 DBC
         #TEST SIZE=(DFND#06L,GE,DFOUNDHL)                    05/84 DBC
         SPACE 3                                              05/84 DBC
************************************************************* 05/84 DBC
*                                                           * 05/84 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 05/84 DBC
*        DSECT.                                             * 05/84 DBC
*                                                           * 05/84 DBC
************************************************************* 05/84 DBC
         SPACE 1                                              05/84 DBC
DOFF#06  DS    0H                                             05/84 DBC
         SPACE 1                                              05/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              05/84 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              05/84 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              05/84 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              05/84 DBC
         #TEST SIZE=(*-DOFF#06,EQ,FIELDSLN)                   05/84 DBC
         EJECT ,                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        MODULE: IGC018                                     * 08/84 DBC
*        PRODUCT: DFP (5665-295/A)                          * 08/84 DBC
*                                                           * 08/84 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 08/84 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 08/84 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 08/84 DBC
*        DSECT.                                             * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
VERSN#07 CSECT ,                                              08/84 DBC
         DC    A(ID#07)            --> VERSION VERIFIER       08/84 DBC
         DC    A(SRCH#07)          --> ORIGINAL "SRCHPDS" COD 08/84 DBC
         DC    A(FINDK#07)         --> ORIGINAL "FINDKEY" COD 08/84 DBC
         DC    A(DOFF#07)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 08/84 DBC
*        DSECT.                                             * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
ID#07    DS    0H                                             08/84 DBC
         DC    Y(X'6')             VERIFY LOCATION            08/84 DBC
         DC    Y(ID#07VLN)         VERIFY LENGTH              08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#07V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'JDQ1110 '         00000E          DC    C'JDQ1110 '
*                                                  DC    C'&SYSDATE'
         DC    C'10/19/83'         000016+         DC    C'10/19/83'
         DC    C'5665-295'         00001E          DC    C'5665-295 ---
*                                  ************************************
         SPACE 1                                              08/84 DBC
ID#07VLN EQU   *-ID#07V            VERIFY LENGTH              08/84 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
SRCH#07  DS    0H                                             08/84 DBC
         DC    Y(X'52C')           VERIFY LOCATION            08/84 DBC
         DC    Y(SRCH#07L)         VERIFY LENGTH              08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#07V DS    0H                  00052C SRCHPDS  EQU   *
         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0
         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT
         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT
*                                  ************************************
         SPACE 1                                              08/84 DBC
SRCH#07L EQU   *-SRCH#07V          VERIFY LENGTH              08/84 DBC
         #TEST SIZE=(SRCH#07L,GE,SRCHPOHL)                    08/84 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 08/84 DBC
*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 08/84 DBC
*        LOCATED AT LABEL "FINDKEY" WHICH IS NOW JUST PAST  * 08/84 DBC
*        LABEL "DFOUND".                                    * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
FINDK#07 DS    0H                                             08/84 DBC
         DC    Y(X'7BC')           VERIFY LOCATION            08/84 DBC
         DC    Y(FIND#07L)         VERIFY LENGTH              08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  0007BC FINDKEY  EQU   *
FIND#07V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC
         NR    R4,R14              0007C6          NR    RX,RZ
         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007CC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              08/84 DBC
FIND#07L EQU   *-FIND#07V          VERIFY LENGTH              08/84 DBC
         #TEST SIZE=(FIND#07L,GE,DFOUNDHL)                    08/84 DBC
         SPACE 3                                              08/84 DBC
************************************************************* 08/84 DBC
*                                                           * 08/84 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 08/84 DBC
*        DSECT.                                             * 08/84 DBC
*                                                           * 08/84 DBC
************************************************************* 08/84 DBC
         SPACE 1                                              08/84 DBC
DOFF#07  DS    0H                                             08/84 DBC
         SPACE 1                                              08/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              08/84 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              08/84 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              08/84 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              08/84 DBC
         #TEST SIZE=(*-DOFF#07,EQ,FIELDSLN)                   08/84 DBC
         EJECT ,                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        MODULE: IGC018                                     * 06/84 WRH
*        PRODUCT: DF/DS (5740-AM7)                          * 06/84 WRH
*        LEVEL: 8402                                        * 06/84 WRH
*        PTF: UZ69197                                       * 06/84 WRH
*        APAR: AZ66915                                      * 06/84 WRH
*                                                           * 06/84 WRH
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 06/84 WRH
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 06/84 WRH
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 06/84 WRH
*        DSECT.                                             * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
VERSN#08 CSECT ,                                              06/84 WRH
         DC    A(ID#08)            --> VERSION VERIFIER       06/84 WRH
         DC    A(SRCH#08)          --> ORIGINAL "SRCHPDS" COD 06/84 WRH
         DC    A(DFND#08)          --> ORIGINAL "DFOUND" CODE 06/84 WRH
         DC    A(DOFF#08)          --> IBM DATA FIELDS DESCRIPTORS  WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 06/84 WRH
*        DSECT.                                             * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
ID#08    DS    0H                                             06/84 WRH
         DC    Y(X'6')             VERIFY LOCATION            06/84 WRH
         DC    Y(ID#08VLN)         VERIFY LENGTH              06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#08V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA66915'         00000E          DC    C'@ZA66915'
*                                                  DC    C'&SYSDATE'
         DC    C'11/22/83'         000016+         DC    C'11/22/83'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              06/84 WRH
ID#08VLN EQU   *-ID#08V            VERIFY LENGTH              06/84 WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
SRCH#08  DS    0H                                             06/84 WRH
         DC    Y(X'57A')           VERIFY LOCATION            06/84 WRH
         DC    Y(SRCH#08L)         VERIFY LENGTH              06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#08V DS    0H                  00057A SRCHPDS  EQU   *
         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY
         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYCD
         BO    X'588'(,R12)        000582          BO    SRCHKYOK
*                                  ************************************
         SPACE 1                                              06/84 WRH
SRCH#08L EQU   *-SRCH#08V          VERIFY LENGTH              06/84 WRH
         #TEST SIZE=(SRCH#08L,GE,SRCHPOHL)                    06/84 WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
DFND#08  DS    0H                                             06/84 WRH
         DC    Y(X'7CC')           VERIFY LOCATION            06/84 WRH
         DC    Y(DFND#08L)         VERIFY LENGTH              06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#08V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC
         NR    R4,R14              0007D6          NR    RX,RZ
         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007DC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              06/84 WRH
DFND#08L EQU   *-DFND#08V          VERIFY LENGTH              06/84 WRH
         #TEST SIZE=(DFND#08L,GE,DFOUNDHL)                    06/84 WRH
         SPACE 3                                              06/84 WRH
************************************************************* 06/84 WRH
*                                                           * 06/84 WRH
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 06/84 WRH
*        DSECT.                                             * 06/84 WRH
*                                                           * 06/84 WRH
************************************************************* 06/84 WRH
         SPACE 1                                              06/84 WRH
DOFF#08  DS    0H                                             06/84 WRH
         SPACE 1                                              06/84 WRH
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              06/84 WRH
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              06/84 WRH
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1
         SPACE 1                                              06/84 WRH
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              06/84 WRH
         #TEST SIZE=(*-DOFF#08,EQ,FIELDSLN)                   06/84 WRH
         EJECT ,                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        MODULE: IGC018                                     * 09/84 DBC
*        PRODUCT: DFP (5665-295/A)                          * 09/84 DBC
*                                                           * 09/84 DBC
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 09/84 DBC
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 09/84 DBC
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * 09/84 DBC
*        DSECT.                                             * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
VERSN#09 CSECT ,                                              09/84 DBC
         DC    A(ID#09)            --> VERSION VERIFIER       09/84 DBC
         DC    A(SRCH#09)          --> ORIGINAL "SRCHPDS" COD 09/84 DBC
         DC    A(FINDK#09)         --> ORIGINAL "FINDKEY" COD 09/84 DBC
         DC    A(DOFF#09)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * 09/84 DBC
*        DSECT.                                             * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
ID#09    DS    0H                                             09/84 DBC
         DC    Y(X'6')             VERIFY LOCATION            09/84 DBC
         DC    Y(ID#09VLN)         VERIFY LENGTH              09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#09V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'ZA76850 '         00000E          DC    C'ZA76850 '
*                                                  DC    C'&SYSDATE'
         DC    C'03/28/84'         000016+         DC    C'03/28/84'
         DC    C'5665-295'         00001E          DC    C'5665-295 ---
*                                  ************************************
         SPACE 1                                              09/84 DBC
ID#09VLN EQU   *-ID#09V            VERIFY LENGTH              09/84 DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
SRCH#09  DS    0H                                             09/84 DBC
         DC    Y(X'52C')           VERIFY LOCATION            09/84 DBC
         DC    Y(SRCH#09L)         VERIFY LENGTH              09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#09V DS    0H                  00052C SRCHPDS  EQU   *
         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0
         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT
         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT
*                                  ************************************
         SPACE 1                                              09/84 DBC
SRCH#09L EQU   *-SRCH#09V          VERIFY LENGTH              09/84 DBC
         #TEST SIZE=(SRCH#09L,GE,SRCHPOHL)                    09/84 DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * 09/84 DBC
*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 09/84 DBC
*        LOCATED AT LABEL "FINDKEY" WHICH IS NOW JUST PAST  * 09/84 DBC
*        LABEL "DFOUND".                                    * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
FINDK#09 DS    0H                                             09/84 DBC
         DC    Y(X'7BC')           VERIFY LOCATION            09/84 DBC
         DC    Y(FIND#09L)         VERIFY LENGTH              09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  0007BC FINDKEY  EQU   *
FIND#09V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC
         NR    R4,R14              0007C6          NR    RX,RZ
         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD
         LCR   R5,R5               0007CC          LCR   RY,RY
         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              09/84 DBC
FIND#09L EQU   *-FIND#09V          VERIFY LENGTH              09/84 DBC
         #TEST SIZE=(FIND#09L,GE,DFOUNDHL)                    09/84 DBC
         SPACE 3                                              09/84 DBC
************************************************************* 09/84 DBC
*                                                           * 09/84 DBC
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * 09/84 DBC
*        DSECT.                                             * 09/84 DBC
*                                                           * 09/84 DBC
************************************************************* 09/84 DBC
         SPACE 1                                              09/84 DBC
DOFF#09  DS    0H                                             09/84 DBC
         SPACE 1                                              09/84 DBC
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              09/84 DBC
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              09/84 DBC
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              09/84 DBC
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              09/84 DBC
         #TEST SIZE=(*-DOFF#09,EQ,FIELDSLN)                   09/84 DBC
         EJECT ,                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        MODULE: IGC018                                     * DBC 01/85
*        PRODUCT: DF/DS (5740-AM7)                          * DBC 01/85
*        LEVEL: 8406                                        * DBC 01/85
*        PTF: UZ70857                                       * DBC 01/85
*                                                           * DBC 01/85
*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * DBC 01/85
*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * DBC 01/85
*        VERSION OF IGC018. IT IS MAPPED BY THE "VERSION"   * DBC 01/85
*        DSECT.                                             * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
VERSN#10 CSECT ,                                              DBC 01/85
         DC    A(ID#10)            --> VERSION VERIFIER       DBC 01/85
         DC    A(SRCH#10)          --> ORIGINAL "SRCHPDS" COD DBC 01/85
         DC    A(DFND#10)          --> ORIGINAL "DFOUND" CODE DBC 01/85
         DC    A(DOFF#10)          --> IBM DATA FIELDS DESCRIPTORS  DBC
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        MODULE IDENTIFIER CODE. MAPPED BY THE "ORIGINAL"   * DBC 01/85
*        DSECT.                                             * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
ID#10    DS    0H                                             DBC 01/85
         DC    Y(X'6')             VERIFY LOCATION            DBC 01/85
         DC    Y(ID#10VLN)         VERIFY LENGTH              DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
ID#10V   DC    C'IGC018  '         000006          DC    C'IGC018  '
         DC    C'@ZA74904'         00000E          DC    C'@ZA74904'
*                                                  DC    C'&SYSDATE'
         DC    C'03/27/84'         000016+         DC    C'03/27/84'
         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---
*                                  ************************************
         SPACE 1                                              DBC 01/85
ID#10VLN EQU   *-ID#10V            VERIFY LENGTH              DBC 01/85
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        "SRCHPDS" TRAP. MAPPED BY THE "ORIGINAL" DSECT.    * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
SRCH#10  DS    0H                                             DBC 01/85
         DC    Y(X'58C')           VERIFY LOCATION            DBC 01/85
         DC    Y(SRCH#10L)         VERIFY LENGTH              DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
SRCH#10V DS    0H                  00058C SRCHPDS  EQU   *
         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY
         SR    R0,R0               000590          SR    R0,R0DBC 01/85
         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#
*                                        ******************************
*                                        * NOTE, "SRCHTTR" IS NOT     *
*                                        * REFERENCED IN IGC018, SO   *
*                                        * NO PROBLEM EXISTS HERE.    *
*                                        ******************************
         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC
*                                  ************************************
         SPACE 1                                              DBC 01/85
SRCH#10L EQU   *-SRCH#10V          VERIFY LENGTH              DBC 01/85
         #TEST SIZE=(SRCH#10L,GE,SRCHPOHL)                    DBC 01/85
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        "DFOUND" TRAP. MAPPED BY THE "ORIGINAL" DSECT.     * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
DFND#10  DS    0H                                             DBC 01/85
         DC    Y(X'808')           VERIFY LOCATION            DBC 01/85
         DC    Y(DFND#10L)         VERIFY LENGTH              DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
DFND#10V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T
         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC
         NR    R4,R14              000812          NR    RX,RZDBC 01/85
         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD
         LCR   R5,R5               000818          LCR   RY,RYDBC 01/85
         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN
*                                  ************************************
         SPACE 1                                              DBC 01/85
DFND#10L EQU   *-DFND#10V          VERIFY LENGTH              DBC 01/85
         #TEST SIZE=(DFND#10L,GE,DFOUNDHL)                    DBC 01/85
         SPACE 3                                              DBC 01/85
************************************************************* DBC 01/85
*                                                           * DBC 01/85
*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE "FIELDS" * DBC 01/85
*        DSECT.                                             * DBC 01/85
*                                                           * DBC 01/85
************************************************************* DBC 01/85
         SPACE 1                                              DBC 01/85
DOFF#10  DS    0H                                             DBC 01/85
         SPACE 1                                              DBC 01/85
*                                  ************************************
*                                  *          IGC018 CODE             *
*                                  ************************************
*                                  000000 IGC018   CSECT ,
*                                  000000          BALR  RBASE,0
         DC    S(X'2'(R12))        000002          USING *,RBASE
         SPACE 1                                              DBC 01/85
         DC    S(0(R8))            000008 RPDS1    EQU   8
         DC    S(0(R10))           00000A RLIST    EQU   10
         DC    S(0(R11))           00000B RDCB     EQU   11
         SPACE 1                                              DBC 01/85
*                                  000000 WORKAREA DSECT ,
         DC    S(0(R13))           000000 RDAREA   DS    CL256DBC 01/85
         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1
         SPACE 1                                              DBC 01/85
*                                 -000040 RBPRFX   DSECT ,
*                                  000000 RBBASIC  DS    0F
         DC    S(X'60'(R6))        000060 EXSKEY   DS    X
         DC    S(X'61'(R6))        000061 EXSFLG   DS    B
         DC    B'00100000'                EXSBLDL  EQU   B'00100000'
*                                  ************************************
         SPACE 1                                              DBC 01/85
         #TEST SIZE=(*-DOFF#10,EQ,FIELDSLN)                   DBC 01/85
         END   ,                                              11/83
./ ADD NAME=EXPORT   0100-89041-89041-0921-00037-00037-00000-DYNABLD
//*
//UNLOAD  EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//I1       DD  DSN=SYS3.DYNABLDL.ASM,DISP=SHR
//I2       DD  DSN=SYS3.DYNABLDL.COMNET,DISP=SHR
//I3       DD  DSN=SYS3.DYNABLDL.LOAD,DISP=SHR
//I4       DD  DSN=SYS3.COLE.MACLIB,DISP=SHR
//O1A      DD  DSN=ASM,UNIT=TAPE,LABEL=(,NL),DISP=(,PASS)
//O1B      DD  DSN=ASM,VOL=REF=*.O1A,LABEL=(2,NL),DISP=(,PASS)
//O2A      DD  DSN=COMNET,VOL=REF=*.O1A,LABEL=(3,NL),DISP=(,PASS)
//O2B      DD  DSN=COMNET,VOL=REF=*.O1A,LABEL=(4,NL),DISP=(,PASS)
//O3A      DD  DSN=LOAD,VOL=REF=*.O1A,LABEL=(5,NL),DISP=(,PASS)
//O3B      DD  DSN=LOAD,VOL=REF=*.O1A,LABEL=(6,NL),DISP=(,PASS)
//O4A      DD  DSN=MACLIB,VOL=REF=*.O1A,LABEL=(7,NL),DISP=(,PASS)
//O4B      DD  DSN=MACLIB,VOL=REF=*.O1A,LABEL=(8,NL),DISP=(,PASS)
         C     I=I1,O=O1A
         C     I=I1,O=O1B
         C     I=I2,O=O2A
         C     I=I2,O=O2B
         C     I=I3,O=O3A
         C     I=I3,O=O3B
         C     I=I4,O=O4A
         C     I=I4,O=O4B
//*
//COPY1  EXEC  PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DSN=SYS3.DYNABLDL.REPORT,DISP=SHR
//SYSUT2   DD  DSN=REPORT,VOL=REF=*.UNLOAD.O1A,LABEL=(9,NL),
//             DISP=(,PASS)
//*
//COPY2  EXEC  PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DSN=SYS3.DYNABLDL.REPORT,DISP=SHR
//SYSUT2   DD  DSN=REPORT,VOL=REF=*.UNLOAD.O1A,LABEL=(10,NL),
//             DISP=(,KEEP)
./ ADD NAME=GSAMCALL 0100-89041-89041-0921-00223-00223-00000-DYNABLD
         MACRO
&LABEL   GSAMCALL &VERB,                                               *
               &MF=,                                                   *
               &POOL=,                                                 *
               &FILE=,                                                 *
               &OPTIONS=,                                              *
               &BUFFER=,                                               *
               &BUFFLEN=,                                              *
               &RECLEN=,                                               *
               &MSGAREA=,                                              *
               &RBA=,                                                  *
               &PASS=
.************************************************************
.*                                                          *
.* MACRO NAME = GSAMCALL                                    *
.*                                                          *
.* DESCRIPTIVE NAME = FAKE GSAM CALL MACRO.                 *
.*                                                          *
.* FUNCTION = MODIFIES A GSB AND "BALR"S TO A GSAM          *
.*            SIMULATION ROUTINE WHICH TRANSLATES THE GSAM  *
.*            CALL INTO A SIMPLE VSAM CALL.                 *
.*                                                          *
.* PROCESSOR = ASSEMBLER XF                                 *
.*                                                          *
.* DATA AREAS = GSB                                         *
.*                                                          *
.************************************************************
         LCLC  &SET
         LCLC  &RESET
         LCLA  &I,&GSAMSVC
         LCLB  &ZERO
         LCLC  &R
.************************************************************
.*       CHANGE THE FOLLOWING LINE IF A DIFFERENT SVC       *
.*       NUMBER IS ASSIGNED AT YOUR INSTALLATION            *
.************************************************************
&GSAMSVC SETA  999                 IMPLIES GSAM NOT AVAILABLE
         AIF   (K'&LABEL EQ 0).NOLAB
&LABEL   DS    0H
.NOLAB   ANOP
.*       LOCATE THE GSB
         AIF   ('&MF(1)' NE 'E').BADMF
         AIF   ('&MF(2)' EQ '').BADMF
         AIF   ('&MF(2)' EQ '(1)').GOTMF
         IHBSETR &MF(2),1
.GOTMF   ANOP
.*       PROCESS OPTIONS LOOP
&I       SETA  1
.OPTLOOP AIF   ('&OPTIONS(&I)' EQ '').ENDOPT
         AIF   ('&OPTIONS(&I)' NE 'RESET').NZERO
&ZERO    SETB  (1)
         AGO   .NEXTOPT
.NZERO   AIF   ('&OPTIONS(&I)' NE 'INITIAL').NA1
         MVC   GSBID-GSB(4,1),=CL4'GSB'
         XC    4(GSBLEN-4,1),4(1)
&ZERO    SETB  (1)
         AGO   .NEXTOPT
.NA1     AIF   ('&OPTIONS(&I)' NE 'WAIT').NA2
&SET     SETC  '&SET+GSBWAIT'
         AGO   .NEXTOPT
.NA2     AIF   ('&OPTIONS(&I)' NE 'NOWAIT').NB1
&RESET   SETC  '&RESET-GSBWAIT'
         AGO   .NEXTOPT
.NB1     AIF   ('&OPTIONS(&I)' NE 'UPDATE').NB2
&SET     SETC  '&SET+GSBUPD'
         AGO   .NEXTOPT
.NB2     AIF   ('&OPTIONS(&I)' NE 'NOUPDATE').NC1
&RESET   SETC  '&RESET-GSBUPD'
         AGO   .NEXTOPT
.NC1     AIF   ('&OPTIONS(&I)' NE 'ASYNC').NC2
&SET     SETC  '&SET+GSBASYNC'
         AGO   .NEXTOPT
.NC2     AIF   ('&OPTIONS(&I)' NE 'SYNC').ND1
&RESET   SETC  '&RESET-GSBASYNC'
         AGO   .NEXTOPT
.ND1     AIF   ('&OPTIONS(&I)' NE 'DIR').ND2
&SET     SETC  '&SET+GSBDIR'
         AGO   .NEXTOPT
.ND2     AIF   ('&OPTIONS(&I)' NE 'SEQ').NE1
&RESET   SETC  '&RESET-GSBDIR'
         AGO   .NEXTOPT
.NE1     AIF   ('&OPTIONS(&I)' NE 'BACK').NE2
&SET     SETC  '&SET+GSBBACK'
         AGO   .NEXTOPT
.NE2     AIF   ('&OPTIONS(&I)' NE 'FWD').NF1
&RESET   SETC  '&RESET-GSBBACK'
         AGO   .NEXTOPT
.NF1     AIF   ('&OPTIONS(&I)' NE 'PTY').NF2
&SET     SETC  '&SET+GSBPTY'
         AGO   .NEXTOPT
.NF2     AIF   ('&OPTIONS(&I)' NE 'NOPTY').NH1
&RESET   SETC  '&RESET-GSBPTY'
         AGO   .NEXTOPT
.NH1     AIF   ('&OPTIONS(&I)' NE 'ABTERM').NH2
&SET     SETC  '&SET+GSBABTRM'
         AGO   .NEXTOPT
.NH2     AIF   ('&OPTIONS(&I)' NE 'NOABTERM').NI1
&RESET   SETC  '&RESET-GSBABTRM'
         AGO   .NEXTOPT
.NI1     AIF   ('&OPTIONS(&I)' NE 'DEBUG').NI2
&SET     SETC  '&SET+GSBDEBUG'
         AGO   .NEXTOPT
.NI2     AIF   ('&OPTIONS(&I)' NE 'NODEBUG').NJ1
&RESET   SETC  '&RESET-GSBDEBUG'
         AGO   .NEXTOPT
.NJ1     MNOTE 8,'GSAM002E INVALID OPTION &OPTIONS(&I)'
.NEXTOPT ANOP
&I       SETA  &I+1
         AGO   .OPTLOOP
.ENDOPT  ANOP
.*       NOW EXPAND OUT OPTION BIT SETTING INSTRUCTIONS
         AIF   (&ZERO).SET2
         AIF   ('&SET' EQ '').SET1
&SET     SETC  '&SET'(2,K'&SET-1)
         OI    GSBFLGS-GSB(1),&SET
.SET1    AIF   ('&RESET' EQ '').SET3
         NI    GSBFLGS-GSB(1),X'FF'&RESET
         AGO   .SET3
.SET2    AIF   ('&SET' EQ '').SET3
&SET     SETC  '&SET'(2,K'&SET-1)
         MVI   GSBFLGS-GSB(1),&SET
.SET3    ANOP
         AIF   ('&POOL' EQ '').NOPOOL
&R       SETC  '&POOL(1)'
         AIF   ('&R' NE '&POOL').GOTPOOL
         LA    15,&POOL
&R       SETC  '15'
.GOTPOOL ANOP
         STH   &R,GSBPOOL-GSB(,1)
.NOPOOL  AIF   ('&FILE' EQ '').NOFILE
         AIF   ('&FILE'(1,1) NE '''').GETFILE
         MVC   GSBFILE-GSB(8,1),=CL8&FILE
         AGO   .NOFILE
.GETFILE ANOP
&R       SETC  '&FILE(1)'
         AIF   ('&R' NE '&FILE').GOTFILE
         LA    15,&FILE
&R       SETC  '15'
.GOTFILE ANOP
         MVC   GSBFILE-GSB(8,1),0(&R)
.NOFILE  AIF   ('&BUFFER' EQ '').NOBUF
&R       SETC  '&BUFFER(1)'
         AIF   ('&R' NE '&BUFFER').GOTBUF
         AIF   ('&BUFFER' NE '-1').GETBUF
         SR    15,15
         BCTR  15,0
         AGO   .GETBUF2
.GETBUF  ANOP
         LA    15,&BUFFER
.GETBUF2 ANOP
&R       SETC  '15'
.GOTBUF  ANOP
         ST    &R,GSBBUFA-GSB(,1)
.NOBUF   AIF   ('&BUFFLEN' EQ '').NOBUFL
&R       SETC  '&BUFFLEN(1)'
         AIF   ('&R' NE '&BUFFLEN').GOTBUFL
         LA    15,&BUFFLEN
&R       SETC  '15'
.GOTBUFL ANOP
         ST    &R,GSBBUFL-GSB(,1)
.NOBUFL  AIF   ('&RECLEN' EQ '').NORECL
&R       SETC  '&RECLEN(1)'
         AIF   ('&R' NE '&RECLEN').GOTRECL
         LA    15,&RECLEN
&R       SETC  '15'
.GOTRECL ANOP
         ST    &R,GSBRECL-GSB(,1)
.NORECL  AIF   ('&MSGAREA' EQ '').NOMSG
&R       SETC  '&MSGAREA(1)'
         AIF   ('&R' NE '&MSGAREA').GOTMSG
         LA    15,&MSGAREA
&R       SETC  '15'
.GOTMSG  ANOP
         ST    &R,GSBMSGA-GSB(,1)
.NOMSG   AIF   ('&RBA' EQ '').NORBA
&R       SETC  '&RBA(1)'
         AIF   ('&R' NE '&RBA').GOTRBA
         LA    15,&RBA
&R       SETC  '15'
.GOTRBA  ANOP
         MVC   GSBRBA-GSB(4,1),0(&R)
.NORBA   AIF   ('&PASS' EQ '').NOPASS
&R       SETC  '&PASS(1)'
         AIF   ('&R' NE '&PASS').GOTPASS
         LA    15,&PASS
&R       SETC  '15'
.GOTPASS ANOP
         ST    &R,GSBPASSW-GSB(,1)
.NOPASS  AIF   ('&VERB' EQ 'MODIFY').EXIT
         AIF   ('&VERB' NE 'READ').NREAD
         SR    0,0                 INDICATE READ
         AGO   .SVC
.NREAD   AIF   ('&VERB' NE 'WRITE').NWRITE
         LA    0,1                 INDICATE WRITE
         AGO   .SVC
.NWRITE  AIF   ('&VERB' NE 'REWRITE').NREWRIT
         LA    0,2                 INDICATE REWRITE
         AGO   .SVC
.NREWRIT AIF   ('&VERB' NE 'DELETE').NDEL
         LA    0,3                 INDICATE DELETE
         AGO   .SVC
.NDEL    AIF   ('&VERB' NE 'RELEASE').NRLSE
         LA    0,4                 INIDCATE RELEASE
         AGO   .SVC
.NRLSE   AIF   ('&VERB' NE 'MONITOR').NMON
         LA    0,5                 INDICATE MONITOR
         AGO   .SVC
.NMON    AIF   ('&VERB' NE 'MAINTAIN').NMAINT
         LA    0,6                 INDICATE MAINTAIN
         AGO   .SVC
.NMAINT  AIF   ('&VERB' NE 'FINISH').VERBERR
         LA    0,7
         AGO   .SVC
.VERBERR MNOTE 8,'GSAM001E UNRECOGNIZED VERB: &VERB'
.SVC     AIF   (&GSAMSVC GT 255).FAKEIT
         SVC   &GSAMSVC            ISSUE SVC
         MEXIT
.FAKEIT  ANOP
         L     R15,=V(FAKEGSAM)    --> SUBSTITUTE ROUTINE
         BALR  R14,R15             GO PERFORM THE VSAM I/O
         MEXIT
.BADMF   MNOTE 8,'GSAM003E IMPROPER OR OMITTED ''MF'' PARAMETER'
.EXIT    MEND
./ ADD NAME=GSB      0100-89041-89041-0921-00154-00154-00000-DYNABLD
         MACRO
         GSB   &DSECT=YES
.************************************************************
.*                                                          *
.* MACRO NAME = GSB                                         *
.*                                                          *
.* DESCRIPTIVE NAME = GSAM SIMULATION ROUTINE'S PARAMETER   *
.*                    BLOCK.                                *
.*                                                          *
.* PROCESSOR = ASSEMBLER XF                                 *
.*                                                          *
.************************************************************
*************************************************************
*                                                           *
*        GSB -- GSAM SVC PARAMETER BLOCK                    *
*                                                           *
*************************************************************
         SPACE 1
         IEZBITS ,
         AIF   ('&DSECT' NE 'YES').NODSECT
GSB      DSECT ,
         AGO   .YESDSEC
.NODSECT ANOP
GSB      DS    0F                  ALIGNMENT
.YESDSEC ANOP
GSBID    DC    CL4'GSB'            MUST BE FILLED IN
GSBFILE  DS    CL8                 FILE NAME DEFINED TO GSRTASK
GSBPOOL  DS    H                   VALUES 0-7. KEY OF GSR POOL.
GSBFLGW  DS    0H                  OPTION BITS FOR USER -
GSBFLG1  DS    X                    IN HALFWORD SO THEY CAN -
GSBFLGS  DS    X                     BE SET IN FORTRAN AND COBOL
GSBWAIT  EQU   BIT0                INDICATION THAT USER
*                                  WANTS TO WAIT FOR A
*                                  RECORD. APPLICABLE ONLY
*                                  IF UPDATE INDICATOR SET.
GSBUPD   EQU   BIT1                USER WANTS TO UPDATE THE
*                                  RECORD. GSAM WILL OBTAIN
*                                  OWNERSHIP OF THE RECORD
GSBASYNC EQU   BIT2                THE USER WANTS TO
*                                  ASYNCHRONOUSLY CONTEND FOR
*                                  RECORD OWNERSHIP.
*                                  GSBUPD MUST BE ON,
*                                  GSBWAIT MUST BE OFF
GSBDIR   EQU   BIT3                THIS IS A DIRECT REQUEST.
*                                  FOR A KSDS, A KEY IS IN
*                                  THE BUFFER. OTHERWISE, IT
*                                  IS IN GSBRBA.
GSBBACK  EQU   BIT4                THIS IS A 'BACKWARDS'
*                                  OPERATION. THE USER WANTS
*                                  TO SEQUENTIALLY READ RECORDS
*                                  IN DESCENDING ORDER OF KEY OR
*                                  ADDRESS. GSBDIR MUST BE OFF.
GSBPTY   EQU   BIT5                PRIORITY REQUEST. CALLER
*                                  MUST BE IN SYSTEM KEY OR
*                                  SUPERVISOR STATE. UPDATE BIT
*                                  MUST BE ON. CALLER WILL
*                                  STEAL RECORD OWNERSHIP FROM
*                                  ANYONE WHO HOLDS IT.
GSBABTRM EQU   BIT6                ABEND MY TASK WHEN GSAM
*                                  GOES DOWN OR THIS FILE IS
*                                  PURGED
GSBDEBUG EQU   BIT7                INVOKE DBC (REQUIRES AUTH
*                                  LEVEL 2 AND DEBUG FLAG)
GSBINDX  DS    H                   INDEX OF OUR GSAM PLACEHOLDER
*                                  SET TO ZERO BEFORE FIRST CALL
*                                  USER MUST NOT SUBSEQUENTLY
*                                  MODIFY THIS FIELD
GSBRSV1  DS    H                   RESERVED
GSBBUFL  DS    F                   TOTAL LENGTH OF BUFFER WHOSE
*                                  ADDRESS IS SPECIFIED IN GSBBUFA.
*                                  SPECIFIED BY USER.
*                                  ON A READ REQUEST, BUFFER IS
*                                  PADDED WITH BLANKS FOR A LENGTH OF
*                                  GSBBUFL.
*                                  CANNOT BE GREATER THAN INSTALLATION
*                                  SPECIFIED MAX.
GSBBUFA  DS    A                   -> USER BUFFER FOR READS, REWRITES,
*                                  DELETES.
*                                  IF F'-1' THEN THE MSG AREA & BUFFER
*                                  FOLLOW THE GSB (FOR LANGUAGES THAT
*                                  DO NOT SUPPORT THE PTR DATA TYPE)
GSBRECL  DS    A                   FOR READ, LENGTH OF BUFFER RETURNED
*                                  TO USER. FOR REWRITE, WRITE, LENGTH
*                                  OF RECORD, SUPPLIED BY USER.
*                                  MUST BE >0, <=GSBBUFL
GSBMSGA  DS    A                   ->128 BYTE AREA FOR RETURNING I/O
*                                  ERROR MESSAGES, OR NULL.
GSBVSAM  DS    F                   VSAM FEEDBACK CODE THAT CAUSED
*                                  THE SVC'S NON-0 RETURN CODE. 0 IF
*                                  NONE APPLIES.
*                                  OR, ON SUCCESSFUL COMPLETION,
*                                  THE VSAM FEEDBACK CODE FOR 0
*                                  RETURN CODE. (SEE VSAM MANUAL).
GSBVSFN  DS    F                   VSAM FUNCTION CODE ON LOGICAL
*                                  OR PHYSICAL ERROR. -1 WHEN NONE
*                                  APPLIES.
GSBECB   DS    A                   ECB WHICH WILL BE POSTED
*                                  WHEN ASYNCHRONOUS REQUEST FOR
*                                  RECORD OWNERSHIP COMPLETES
GSBRBA   DS    F                   RBA OF RECORD FOR READ, REWRITE,
*                                  WRITE (RETURNED BY SVC).
*                                  ONLY TRUE WHEN GSBPATH IS OFF
*                                  RBAS ARE NOT RETURNED BY VSAM FOR
*                                  A PATH.
GSBPASSW DS    CL8                 PASSWORD-FOR EXAMINATION BY
*                                  INSTALLATION EXITS
*        THE GSBFIL.. FIELDS ARE RETURNED TO THE USER
*        WHENEVER THE GSAM FILE SPECIFIED IS FOUND BY THE SVC.
GSBFILKL DS    F                   KEY LENGTH OF FILE. 0 FOR ESDS.
GSBFILKO DS    F                   KEY OFFSET IN RECS. 0 FOR ESDS.
*                                  0-INDEXED.
GSBFILRL DS    F                   MAXINUM RECORD LENGTH FOR THE FILE.
GSBFILCL DS    F                   CONTROL INTERVAL LENGTH OF FILE
*                                  (RETURNED W/ OTHER GSBFIL.. FIELDS)
GSBFILAC DS    C                   ACCESS CODE OF FILE
*                                  RETURNED WITH OTHER GSBFIL.. INFO
GSBACC1  EQU   C'1'                READ-ONLY ACCESS.
GSBACC2  EQU   C'2'                UPDATE ACCESS.
GSBACC3  EQU   C'3'                WRITE-ONLY,TO AN ESDS.
GSBFILFG DS    C                   FLAGS RETURNED,DESCRIBING FILE
*                                  (ALONG WITH OTHER GSBFIL.. FIELDS)
GSBRD    EQU   C'R'                READ ONLY
GSBWT    EQU   C'W'                WRITE ONLY
GSBRDWT  EQU   C'*'                FULL ACCESS
GSBNO    EQU   C'C'                NO ACCESS
GSBLEN   EQU   *-GSB
         SPACE 3
*************************************************************
* OPTIONAL FIELDS (IF GSBBUFA IS F'-1')                     *
*************************************************************
         SPACE 1
GSBMSGX  DS    CL128               CONTIGUOUS MESSAGE AREA
GSBBUFX  DS    0C                  CONTIGUOUS BUFFER.
         SPACE 3
*************************************************************
*        RETURN CODES TO CALLER OF GSAM SVC:                *
*        (NOTE THAT MEANINGS OF RETURN CODES DEPEND ON      *
*        THE VSAM RETURN CODE-GSBVSAM).                     *
*************************************************************
         SPACE 1
GSAMEKEY EQU   4                   KEY OR ENDFILE CONDITION
GSAMEREC EQU   8                   RECORD CONDITION
GSAMENAV EQU   12                  SOME GSR OBJECT UNAVAILABLE
GSAMEFIL EQU   16                  UNDEFINEDFILE CONDITION.
GSAMEPOS EQU   20                  POSITIONING ERROR.
GSAMEDS  EQU   24                  DATASET FULL OR BAD.
GSAMEAUT EQU   28                  AUTHORIZATION ERROR.
GSAMEACC EQU   32                  WRONG KIND OF ACCESS FOR THISFILE.
GSAMECOR EQU   36                  NOT ENOUGH CORE AVAILABLE.
GSAMEPRM EQU   40                  PARMS BAD OR INCONSISTANT.
GSAMEIO  EQU   44                  I/O PHYSICAL ERROR
GSAMEBUG EQU   48                  BUG IN THE SVC
GSAMEUBG EQU   52                  BUG IN INSTALLATION EXIT
         MEND
./ ADD NAME=PROC     0100-89041-89041-0921-00003-00003-00000-DYNABLD
//IEFPROC EXEC PGM=DYNABLDL,REGION=100K
//SYSPRINT DD  DDNAME=IEFRDER
//IEFRDER  DD  SYSOUT=A
./ ADD NAME=SAMPLE   0100-89041-89041-0921-00324-00324-00000-DYNABLD
Below is a typical activity report generated by my DYNABLDL.
 
Shown are the contents of the currently active dyna-table sorted three
ways: (1) alphabetically by load module name, (2) by the number of
times that the name was searched for and found in the dyna-table
("hits"), and (3) by the number of minutes that have elapsed since the
name was last searched for ("L.R.U." or "Least Recently Used").
 
Also shown is the following information:
 
DYNABLDL processing has been active for 7 hours and 19 minutes.
 
The table currently contains 256 entries, which in this case completely
fills the table. (The maximum table size is determined at DYNABLDL
assembly time. Each table entry takes 96 <decimal> bytes of fixed,
common memory).
 
Many table entries have gone unreferenced for nearly two hours (up to
107 minutes, in fact). Possibly, I have generated a larger table than I
really need. (An installation can choose any table size it desires
whenever it re-assembles DYNABLDL).
 
The dyna-table has enjoyed a hit rate of over 91% and, therefore, has
save a considerable amount of disk I/O.
 
Of the 654 misses, 403 were for modules that subsequently were found in
one or another of the linklist libraries. Once found, these names were
added to the dyna-table replacing older names that had been used the
least recently. (Note, the next such miss will replace a name that
hasn't been used for nearly two hours). You may notice that a few table
entries show a zero hit count. These are entries that have not yet been
referenced again since they were first added to the table.
 
Of the 654 misses, 251 were for modules that were NOT found in the
linklist libraries. These were either CLIST names or invalid names.
 
Each of the three sorted lists shows the number of times each entry
satisfied a BLDL request - "hits".
 
The NAME sorted list shows the concatination id number of the linklist
library in which each load module was found. (Our installation has nine
datasets in its linklist concatination).
 
The HITS sorted list shows the length of time (in minutes) each entry
has survived in the dyna-table.
 
The HITS sorted list also shows which modules are reentrant. When such
a module has a high hit count, it would be worth considering placing it
into LPALIB.
 
Both the HITS sorted list and the L.R.U. sorted list show the length of
time (in minutes) each entry has gone unreferenced.
 
                                                      - Dave Cole
 
 
 
     DYNAMIC BLDL ACTIVITY REPORT
 
     TABLE LIFE 7:19, ENTRIES 256
     HITS 7029, MISSES 654 (GOOD NAMES 403, BAD NAMES 251), HIT RATE 91.5%
     MAX ENTRY AGE 439 MINUTES, MAX ENTRY IDLE TIME 107 MINUTES
 
 
         | SORTED BY NAME    | SORTED BY HITS            | SORTED BY L.R.U.
         |                   | (* MEANS REENTRANT)       |
     CNT | NAME    LIB# HITS |  HITS  NAME     IDLE  AGE | IDLE NAME      HITS
         |                   |                           |
     1   | $AUTHEXT 8     72 |   508 *IEEVSEND    0  374 |    0 DYNABLDL     0
     2   | $DASDMNT 8      1 |   437 *EXEC        0  390 |    0 PGM         11
     3   | $DATECNV 8      1 |   343 *ALLOC       0  390 |    0 ALLOC      343
     4   | $MINDX   8      2 |   319 *IBMBOPCA    3  262 |    0 IEEVSEND   508
     5   | $MNTMON  8      0 |   319 *IBMBOPBA    3  262 |    0 EXEC       437
     6   | $MNTMRG  8      0 |   319 *IBMBOPAA    3  262 |    0 SORT        84
     7   | $MNTREN  8      0 |   318 *IBMBOPDA    3  262 |    0 IOFCMD      43
     8   | $NEWPARS 8     72 |   239 *IBMBOCAA    3  262 |    0 IOFSPF      36
     9   | $OPTIONR 8      2 |   115 *FREE        3  390 |    1 IEWL        53
     10  | $OPTIONS 8      8 |   105 *IEEVSTAR   38  439 |    1 IDCTSUV0    33
     11  | $PDSFA31 5      5 |    96 *IBMBOPEA   11  251 |    2 PDS         25
     12  | $PDSXF31 5      5 |    84  SORT        0  326 |    2 IDCTSLC0    23
     13  | $SM      8      2 |    82  ICEAM1     11  326 |    2 IDCLC01     23
     14  | $SP      8      7 |    72  $AUTHEXT    5  119 |    2 IDCCDLC     23
     15  | $SPCUB   8      4 |    72  $NEWPARS    5  119 |    2 IDCRILT     34
     16  | $STATUS  8      2 |    71 *IKJEFF10    4  374 |    2 IDCRI04     32
     17  | $TAU     8     11 |    71 *IKJEFF04    4  374 |    2 IDCTSTP0    34
     18  | $VALASM2 8      1 |    69 *SUBMIT      4  374 |    2 IDCTSEX0    34
     19  | $VUDATA  8      1 |    68 *IBMBREFA   11  262 |    2 IDCIO04     32
     20  | AHLCWRIT 0      2 |    67 *IKJEFT25    3  390 |    2 IDCSATO     32
     21  | AHLGTF   0      2 |    67 *LOGOFF      9  343 |    2 LISTC       31
     22  | AHLTMON  0      2 |    64 *IKJEES73    3  390 |    2 IKJEHSIR    36
     23  | AHLWTASK 0      2 |    63 *IBMBPGRA    3  262 |    2 LISTD       15
     24  | ALLOC    3    343 |    63 *IBMBPIIA    3  262 |    3 FREE       115
     25  | ALLOCATE 3     33 |    62 *IKJEFF18    4  390 |    3 TERMINAL     3
     26  | AMASPZAP 0      2 |    61 *IBMBPITA    3  262 |    3 LIS         52
     27  | AMDPRCMC 0      1 |    57 *IEEPALTR    3  431 |    3 IKJEFT25    67
     28  | AMDPRDMP 0      3 |    56 *IBMBRQAA   11  262 |    3 IKJEES73    64
     29  | AMDPRECT 0      3 |    53  IEWL        1  277 |    3 IEECB811    39
     30  | AMDPRLOD 0      3 |    52  LIS         3  390 |    3 IBMBPITA    61
     31  | AMDPRMST 0      1 |    51 *IBMBSTVA    3  251 |    3 IBMBOCAA   239
     32  | APFPGM   2      7 |    43 *IOFCMD      0  345 |    3 IBMBSTVA    51
     33  | ATTRIB   3     35 |    41 *EX         19  211 |    3 IBMBOPDA   318
     34  | CMD      2      1 |    39 *IEECB811    3  439 |    3 IBMBOPCA   319
     35  | COMPRESS 2      0 |    38 *IKJEFF53    5  144 |    3 IBMBOPBA   319
     36  | COPY     2      0 |    36 *IOFSPF      0  338 |    3 IBMBOPAA   319
     37  | DBCCMD   2      3 |    36 *IKJEHSIR    2  147 |    3 IBMBPGRA    63
     38  | DBCGBL   5      1 |    35  ICEEXIT    18  326 |    3 IBMBPIIA    63
     39  | DBCHELPM 5      1 |    35  ICEOPUT    18  326 |    3 IEEPALTR    57
     40  | DEL      3     17 |    35  ICEIPUT    18  326 |    4 IFOX62       1
     41  | DES      2      1 |    35 *ATTRIB     23  390 |    4 IFOX61       1
     42  | DFSAFMD0 0      4 |    34 *IDCRILT     2  356 |    4 IFOX51       1
     43  | DYNABLDL 5      0 |    34  IDCTSTP0    2  356 |    4 IFOX41       1
     44  | EDIT     3      3 |    34  IDCTSEX0    2  356 |    4 IFOX06       1
     45  | END      3     13 |    33  IDCTSUV0    1  356 |    4 IFOX05       1
     46  | EX       3     41 |    33 *IBMBSTAB   11  251 |    4 IFOX31       1
     47  | EXEC     3    437 |    33 *IEECB800   17  409 |    4 IFOX21       1
     48  | FRA      2      5 |    33 *L          19   98 |    4 IFOX11       1
     49  | FREE     3    115 |    33 *ALLOCATE   65  180 |    4 IFOX04       1
     50  | FREEALL  2      5 |    32 *IDCRI04     2  119 |    4 IFOX03       1
     51  | FSE      2      1 |    32  IDCIO04     2  119 |    4 IFOX02       1
     52  | FSESYSCD 2      0 |    32  IDCSATO     2  119 |    4 IFOX01       1
     53  | HELP     3      8 |    32 *IBMBSTIA   53  251 |    4 IFOX00       1
     54  | IBMBKDOA 6      0 |    31 *LISTC       2  119 |    4 IKJEFF18    62
     55  | IBMBKMRA 6      0 |    31 *IKJCT469    5  126 |    4 IKJEFF10    71
     56  | IBMBKPTA 6      0 |    30 *OUTPUT      5  126 |    4 IKJEFF04    71
     57  | IBMBOCAA 6    239 |    26 *IEE3603D   24  437 |    4 SUBMIT      69
     58  | IBMBOPAA 6    319 |    25 *PDS         2  211 |    5 IKJEFF53    38
     59  | IBMBOPBA 6    319 |    25 *IKJEBEPS   19  103 |    5 IKJCT469    31
     60  | IBMBOPCA 6    319 |    25 *TERM       25  390 |    5 OUTPUT      30
     61  | IBMBOPDA 6    318 |    24  IEBGENER   10  374 |    5 LISTS        7
     62  | IBMBOPEA 6     96 |    23 *IDCTSLC0    2  119 |    5 $OPTIONS     8
     63  | IBMBPERA 6      0 |    23 *IDCLC01     2  119 |    5 $AUTHEXT    72
     64  | IBMBPESA 6      0 |    23 *IDCCDLC     2  119 |    5 $MINDX       2
     65  | IBMBPEVA 6      0 |    23 *LOGON      62  187 |    5 $NEWPARS    72
     66  | IBMBPGRA 6     63 |    22  IEBCOPY     6  275 |    5 $TAU        11
     67  | IBMBPIIA 6     63 |    22  ICEDEG     11  219 |    5 $SM          2
     68  | IBMBPITA 6     61 |    22  ICEDYN     11  219 |    5 $PDSFA31     5
     69  | IBMBRABA 6      0 |    22  ICEDED     11  219 |    5 SEAPT002     4
     70  | IBMBRDAA 6      3 |    22  ICEDEC     11  219 |    5 SEAPR001     4
     71  | IBMBREFA 6     68 |    22  ICEDEF     11  219 |    5 $PDSXF31     5
     72  | IBMBRLAA 6      0 |    22  IOFOWNRS   93  182 |    5 PDSFAST      4
     73  | IBMBRQAA 6     56 |    21  IKFCBL60    8  129 |    5 APFPGM       7
     74  | IBMBRQBA 6      0 |    21  IKFCBL51    8  129 |    6 FRA          5
     75  | IBMBSOFA 6     13 |    21  IKFCBL50    8  129 |    6 DFSAFMD0     4
     76  | IBMBSTAB 6     33 |    21  IKFCBL40    8  129 |    6 IEAVTFMT     4
     77  | IBMBSTIA 6     32 |    21  IKFCBL30    8  129 |    6 IECDAFMT     4
     78  | IBMBSTVA 6     51 |    21  IKFCBL20    8  129 |    6 IEBCOPY     22
     79  | ICEAM1   4     82 |    21  IKFCBL1B    8  129 |    8 IKFCBL60    21
     80  | ICECRE   4     21 |    21  IKFCBL10    8  129 |    8 IKFCBL51    21
     81  | ICECRO   4     17 |    21  IKFCBL00    8  129 |    8 IKFCBL50    21
     82  | ICEDEC   4     22 |    21  ICEMOS     11  219 |    8 IKFCBL40    21
     83  | ICEDED   4     22 |    21  ICECRE     11  219 |    8 IKFCBL30    21
     84  | ICEDEF   4     22 |    21  ICEDEV     11  219 |    8 IKFCBL20    21
     85  | ICEDEG   4     22 |    20  JOB        23  390 |    8 IKFCBL1B    21
     86  | ICEDEV   4     21 |    17  ICECRO     11  219 |    8 IKFCBL10    21
     87  | ICEDYN   4     22 |    17 *DEL        22   34 |    8 IKFCBL70    11
     88  | ICEEXIT  4     35 |    17  IEHMVESS   89   91 |    8 IKFCBL00    21
     89  | ICEIPUT  4     35 |    15 *LISTD       2  148 |    8 IKFCBL6A    10
     90  | ICEKPUS  4     12 |    15  IEHMVESJ   89   91 |    8 IKFCBL01    10
     91  | ICEKPUT  4     12 |    13 *END        46  229 |    9 LOGOFF      67
     92  | ICEMOS   4     21 |    13 *IBMBSOFA   52   76 |   10 IEBGENER    24
     93  | ICEOBS   4      8 |    12  ICEKPUS    18  326 |   11 IBMBREFA    68
     94  | ICEOPUT  4     35 |    12  ICEKPUT    18  326 |   11 IBMBOPEA    96
     95  | ICERCB   4      0 |    11 *PGM         0  145 |   11 IBMBSTAB    33
     96  | ICERCM   4      0 |    11 *$TAU        5  119 |   11 IBMBRQAA    56
     97  | ICERCO   4      0 |    11  IKFCBL70    8  129 |   11 IEEMB813     9
     98  | ICERCZ   4      0 |    11 *LIST       24   89 |   11 ICEMOS      21
     99  | ICEXCP   4      0 |    11  IEHMVESU   89   91 |   11 ICECRO      17
     100 | IDCCDDL  0      8 |    10  IKFCBL6A    8  129 |   11 ICECRE      21
     101 | IDCCDLC  0     23 |    10  IKFCBL01    8  129 |   11 ICEXCP       0
     102 | IDCDL01  0      7 |    10 *IKJEFF51   27  144 |   11 ICEDEV      21
     103 | IDCIO04  0     32 |    10 *IKJEFF50   27  144 |   11 ICEDEG      22
     104 | IDCLC01  0     23 |     9 *IEEMB813   11  314 |   11 ICEDYN      22
     105 | IDCRILT  0     34 |     9  IEHPROGM   19  438 |   11 ICEOBS       8
     106 | IDCRI04  0     32 |     9 *SCHEDRUN   47  405 |   11 ICEDED      22
     107 | IDCSATO  0     32 |     9 *LISTCAT    81  110 |   11 ICEDEC      22
     108 | IDCTSDL0 0      7 |     9  PRO        95  102 |   11 ICEAM1      82
     109 | IDCTSEX0 0     34 |     8 *$OPTIONS    5  119 |   11 ICEDEF      22
     110 | IDCTSLC0 0     23 |     8  ICEOBS     11  219 |   16 RENAME       7
     111 | IDCTSLC1 0      2 |     8 *IDCCDDL    22   34 |   16 IKJEHMEM     4
     112 | IDCTSTP0 0     34 |     8  IERRCO00   28  105 |   17 IEECB800    33
     113 | IDCTSTP6 0      2 |     8 *HELP       76  118 |   18 ICEEXIT     35
     114 | IDCTSUV0 0     33 |     7  LISTS       5  122 |   18 ICEOPUT     35
     115 | IEAFTRT2 0      1 |     7 *APFPGM      5  186 |   18 ICEKPUS     12
     116 | IEAVTFMT 0      4 |     7 *RENAME     16  101 |   18 ICEKPUT     12
     117 | IEAVTFRT 0      1 |     7 *IDCTSDL0   22   34 |   18 ICEIPUT     35
     118 | IEAVTFSD 0      1 |     7 *IDCDL01    22   34 |   19 EX          41
     119 | IEBCOPY  0     22 |     7  $SP       101  105 |   19 IKJEBEPS    25
     120 | IEBGENER 0     24 |     6 *STATUS     27  105 |   19 L           33
     121 | IEBPTPCH 0      5 |     5  $PDSFA31    5  186 |   19 IEHPROGM     9
     122 | IECDAFMT 0      4 |     5  $PDSXF31    5  186 |   22 IDCTSDL0     7
     123 | IEECB800 0     33 |     5  FRA         6   66 |   22 IDCDL01      7
     124 | IEECB801 0      3 |     5 *PROFILE    23   40 |   22 IDCCDDL      8
     125 | IEECB804 0      3 |     5 *FREEALL    23   40 |   22 DEL         17
     126 | IEECB811 0     39 |     5  IEBPTPCH   38   41 |   23 ATTRIB      35
     127 | IEEMB813 0      9 |     5 *SASCP      48  100 |   23 PROFILE      5
     128 | IEEPALTR 0     57 |     5  IEHDPRNT   86   87 |   23 FREEALL      5
     129 | IEEVSEND 0    508 |     5  IEHMVEST   89   91 |   23 JOB         20
     130 | IEEVSTAR 0    105 |     4  SEAPT002    5  186 |   24 IEE3603D    26
     131 | IEE3603D 0     26 |     4  SEAPR001    5  186 |   24 IEECB801     3
     132 | IEHDAOUT 0      1 |     4  PDSFAST     5  186 |   24 IEECB804     3
     133 | IEHDASDR 0      1 |     4 *DFSAFMD0    6  134 |   24 LIST        11
     134 | IEHDASDS 0      1 |     4 *IEAVTFMT    6  134 |   24 CMD          1
     135 | IEHDDUMP 0      1 |     4 *IECDAFMT    6  134 |   25 TERM        25
     136 | IEHDPASS 0      1 |     4 *IKJEHMEM   16   85 |   27 IKJEFF51    10
     137 | IEHDPRNT 0      5 |     4  IEHMVESZ   89   91 |   27 IKJEFF50    10
     138 | IEHDSCAN 0      3 |     4  IEHMVXSF   89   91 |   27 STATUS       6
     139 | IEHLIST  0      0 |     4  $SPCUB    101  118 |   28 IERRCO00     8
     140 | IEHMOVE  0      1 |     3 *TERMINAL    3   72 |   28 MTRACE       1
     141 | IEHMVESA 0      1 |     3 *IEECB801   24   61 |   28 IEAFTRT2     1
     142 | IEHMVESE 0      3 |     3 *IEECB804   24   61 |   28 IEAVTFRT     1
     143 | IEHMVESJ 0     15 |     3  AMDPRLOD   32   93 |   28 IEAVTFSD     1
     144 | IEHMVESK 0      1 |     3  AMDPRECT   32   93 |   29 AMDPRCMC     1
     145 | IEHMVESN 0      0 |     3  AMDPRDMP   32   93 |   29 AMDPRMST     1
     146 | IEHMVESP 0      0 |     3 *IBMBRDAA   34   68 |   29 COMPRESS     0
     147 | IEHMVESR 0      2 |     3 *EDIT       44   78 |   31 ST           2
     148 | IEHMVESS 0     17 |     3 *LISTDS     76   85 |   32 AMDPRLOD     3
     149 | IEHMVEST 0      5 |     3  IEHDSCAN   86   87 |   32 AMDPRECT     3
     150 | IEHMVESU 0     11 |     3  POINT      87   89 |   32 AMDPRDMP     3
     151 | IEHMVESV 0      0 |     3  IEHMVESE   89   91 |   32 OUT          0
     152 | IEHMVESX 0      0 |     3 *PROTECT    91   94 |   33 IBMBPERA     0
     153 | IEHMVESY 0      0 |     3 *DBCCMD    105  188 |   33 IBMBKDOA     0
     154 | IEHMVESZ 0      4 |     2  $MINDX      5   90 |   33 IBMBKPTA     0
     155 | IEHMVETJ 0      0 |     2  $SM         5   90 |   33 IBMBKMRA     0
     156 | IEHMVXSE 0      1 |     2 *ST         31   33 |   33 IBMBPEVA     0
     157 | IEHMVXSF 0      4 |     2 *LISTALC    64   88 |   33 IBMBPESA     0
     158 | IEHPROGM 0      9 |     2  AMASPZAP   65   93 |   33 IBMBRLAA     0
     159 | IERRCO00 4      8 |     2 *IKJEBEDA   77   78 |   34 IBMBRDAA     3
     160 | IEWL     0     53 |     2 *IDCTSLC1   82  110 |   34 IBMBRABA     0
     161 | IFOX00   0      1 |     2 *IDCTSTP6   82  110 |   34 IBMBRQBA     0
     162 | IFOX01   0      1 |     2  IEHMVESR   89   89 |   38 IEEVSTAR   105
     163 | IFOX02   0      1 |     2  AHLCWRIT   90  147 |   38 IEBPTPCH     5
     164 | IFOX03   0      1 |     2  AHLWTASK   90  147 |   44 IKJEBEEX     1
     165 | IFOX04   0      1 |     2  AHLTMON    90  147 |   44 IKJEBEFC     1
     166 | IFOX05   0      1 |     2  AHLGTF     90  147 |   44 IKJEBESA     0
     167 | IFOX06   0      1 |     2  $STATUS   107  118 |   44 IKJEBEIP     0
     168 | IFOX11   0      1 |     2 *$OPTIONR  107  118 |   44 IKJEBELE     1
     169 | IFOX21   0      1 |     1  IFOX62      4  101 |   44 IKJEBEMA     1
     170 | IFOX31   0      1 |     1  IFOX61      4  101 |   44 IKJEBEAA     1
     171 | IFOX41   0      1 |     1  IFOX51      4  102 |   44 IKJEBEUI     1
     172 | IFOX51   0      1 |     1  IFOX41      4  102 |   44 IKJEBEMS     1
     173 | IFOX61   0      1 |     1  IFOX06      4  102 |   44 EDIT         3
     174 | IFOX62   0      1 |     1  IFOX05      4  102 |   46 END         13
     175 | IHCSTAE  7      0 |     1  IFOX31      4  103 |   47 SCHEDRUN     9
     176 | IKFCBL00 7     21 |     1  IFOX21      4  103 |   48 SASCP        5
     177 | IKFCBL01 7     10 |     1  IFOX11      4  104 |   52 IBMBSOFA    13
     178 | IKFCBL1B 7     21 |     1  IFOX04      4  104 |   53 IBMBSTIA    32
     179 | IKFCBL10 7     21 |     1  IFOX03      4  104 |   60 TMSSVC       0
     180 | IKFCBL20 7     21 |     1  IFOX02      4  104 |   60 U$PEEK       0
     181 | IKFCBL30 7     21 |     1  IFOX01      4  104 |   62 LOGON       23
     182 | IKFCBL40 7     21 |     1  IFOX00      4  104 |   64 LISTALC      2
     183 | IKFCBL50 7     21 |     1 *CMD        24   24 |   65 ALLOCATE    33
     184 | IKFCBL51 7     21 |     1 *MTRACE     28   92 |   65 AMASPZAP     2
     185 | IKFCBL6A 7     10 |     1 *IEAFTRT2   28   92 |   72 SEND         1
     186 | IKFCBL60 7     21 |     1 *IEAVTFRT   28   92 |   73 FSESYSCD     0
     187 | IKFCBL70 7     11 |     1 *IEAVTFSD   28   92 |   75 IOF          1
     188 | IKJCT469 0     31 |     1  AMDPRCMC   29   92 |   75 FSE          1
     189 | IKJEBEAA 3      1 |     1  AMDPRMST   29   92 |   76 LISTDS       3
     190 | IKJEBECH 3      0 |     1 *IKJEBEEX   44   77 |   76 HELP         8
     191 | IKJEBECI 3      0 |     1 *IKJEBEFC   44   78 |   77 IKJEBEDA     2
     192 | IKJEBECO 3      0 |     1 *IKJEBELE   44   78 |   78 SUB          1
     193 | IKJEBEDA 3      2 |     1 *IKJEBEMA   44   78 |   78 IKJEBECI     0
     194 | IKJEBEEX 3      1 |     1 *IKJEBEAA   44   78 |   78 IKJEBESU     0
     195 | IKJEBEFC 3      1 |     1 *IKJEBEUI   44   78 |   78 IKJEBECH     0
     196 | IKJEBEIP 3      0 |     1 *IKJEBEMS   44   78 |   78 IKJEBETO     0
     197 | IKJEBELE 3      1 |     1 *SEND       72   72 |   78 IKJEBECO     0
     198 | IKJEBEMA 3      1 |     1 *IOF        75   75 |   78 IKJEBEUT     0
     199 | IKJEBEMS 3      1 |     1  FSE        75   75 |   80 IHCSTAE      0
     200 | IKJEBEPS 3     25 |     1 *SUB        78   78 |   81 LISTCAT      9
     201 | IKJEBESA 3      0 |     1  IEHDAOUT   86   87 |   82 IDCTSLC1     2
     202 | IKJEBESU 3      0 |     1  IEHDPASS   86   87 |   82 IDCTSTP6     2
     203 | IKJEBETO 3      0 |     1  IEHDDUMP   86   87 |   86 IEHDPRNT     5
     204 | IKJEBEUI 3      1 |     1  IEHDASDS   86   87 |   86 IEHDAOUT     1
     205 | IKJEBEUT 3      0 |     1  IEHDASDR   86   87 |   86 IEHDPASS     1
     206 | IKJEES73 0     64 |     1  IEHMVESK   89   91 |   86 IEHDDUMP     1
     207 | IKJEFF04 0     71 |     1  IEHMVESA   89   91 |   86 IEHDSCAN     3
     208 | IKJEFF10 0     71 |     1  IEHMVXSE   89   91 |   86 IEHDASDS     1
     209 | IKJEFF18 0     62 |     1  IEHMOVE    89   91 |   86 IEHDASDR     1
     210 | IKJEFF50 0     10 |     1  DES        96   97 |   87 POINT        3
     211 | IKJEFF51 0     10 |     1  DBCHELPM  105  188 |   89 IEHMVESK     1
     212 | IKJEFF53 0     38 |     1  DBCGBL    105  188 |   89 IEHMVESU    11
     213 | IKJEFT25 0     67 |     1  $VUDATA   107  118 |   89 IEHMVESP     0
     214 | IKJEHMEM 3      4 |     1  $DATECNV  107  118 |   89 IEHMVESN     0
     215 | IKJEHSIR 3     36 |     1  $VALASM2  107  118 |   89 IEHMVESR     2
     216 | IOF      5      1 |     1  $DASDMNT  107  118 |   89 IEHMVETJ     0
     217 | IOFCMD   5     43 |     0  DYNABLDL    0    0 |   89 IEHMVESY     0
     218 | IOFOWNRS 5     22 |     0  ICEXCP     11   11 |   89 IEHMVESV     0
     219 | IOFSPF   5     36 |     0  COMPRESS   29   29 |   89 IEHMVESX     0
     220 | JOB      2     20 |     0 *OUT        32   32 |   89 IEHMVESZ     4
     221 | L        2     33 |     0 *IBMBPERA   33   33 |   89 IEHMVXSF     4
     222 | LIS      2     52 |     0 *IBMBKDOA   33   33 |   89 IEHMVEST     5
     223 | LIST     2     11 |     0 *IBMBKPTA   33   33 |   89 IEHMVESS    17
     224 | LISTALC  3      2 |     0 *IBMBKMRA   33   33 |   89 IEHMVESJ    15
     225 | LISTC    3     31 |     0 *IBMBPEVA   33   33 |   89 IEHMVESE     3
     226 | LISTCAT  3      9 |     0 *IBMBPESA   33   33 |   89 IEHMVESA     1
     227 | LISTD    3     15 |     0 *IBMBRLAA   33   33 |   89 IEHMVXSE     1
     228 | LISTDS   3      3 |     0 *IBMBRABA   34   34 |   89 IEHMOVE      1
     229 | LISTS    2      7 |     0 *IBMBRQBA   34   34 |   89 IEHLIST      0
     230 | LOGOFF   3     67 |     0 *IKJEBESA   44   44 |   90 AHLCWRIT     2
     231 | LOGON    3     23 |     0 *IKJEBEIP   44   44 |   90 AHLWTASK     2
     232 | MTRACE   0      1 |     0  TMSSVC     60   60 |   90 AHLTMON      2
     233 | OUT      3      0 |     0  U$PEEK     60   60 |   90 AHLGTF       2
     234 | OUTPUT   3     30 |     0  FSESYSCD   73   73 |   91 PROTECT      3
     235 | PDS      2     25 |     0 *IKJEBECI   78   78 |   93 ICERCZ       0
     236 | PDSFAST  5      4 |     0 *IKJEBESU   78   78 |   93 ICERCB       0
     237 | PGM      2     11 |     0 *IKJEBECH   78   78 |   93 ICERCM       0
     238 | POINT    2      3 |     0 *IKJEBETO   78   78 |   93 ICERCO       0
     239 | PRO      2      9 |     0 *IKJEBECO   78   78 |   93 IOFOWNRS    22
     240 | PROFILE  3      5 |     0 *IKJEBEUT   78   78 |   95 PRO          9
     241 | PROTECT  3      3 |     0  IHCSTAE    80   80 |   96 DES          1
     242 | RENAME   3      7 |     0  IEHMVESP   89   89 |  101 $SPCUB       4
     243 | SASCP    2      5 |     0  IEHMVESN   89   89 |  101 $SP          7
     244 | SCHEDRUN 5      9 |     0  IEHMVETJ   89   89 |  103 COPY         0
     245 | SEAPR001 5      4 |     0  IEHMVESY   89   89 |  105 DBCHELPM     1
     246 | SEAPT002 5      4 |     0  IEHMVESV   89   89 |  105 DBCGBL       1
     247 | SEND     3      1 |     0  IEHMVESX   89   89 |  105 DBCCMD       3
     248 | SORT     4     84 |     0  IEHLIST    89   89 |  107 $MNTREN      0
     249 | ST       3      2 |     0  ICERCZ     93   93 |  107 $MNTMRG      0
     250 | STATUS   3      6 |     0  ICERCB     93   93 |  107 $STATUS      2
     251 | SUB      3      1 |     0  ICERCM     93   93 |  107 $OPTIONR     2
     252 | SUBMIT   3     69 |     0  ICERCO     93   93 |  107 $MNTMON      0
     253 | TERM     3     25 |     0 *COPY      103  103 |  107 $VUDATA      1
     254 | TERMINAL 3      3 |     0  $MNTREN   107  107 |  107 $DATECNV     1
     255 | TMSSVC   5      0 |     0  $MNTMRG   107  107 |  107 $VALASM2     1
     256 | U$PEEK   5      0 |     0  $MNTMON   107  107 |  107 $DAS
./ ADD NAME=SFR      0100-89041-89041-0921-00124-00124-00000-DYNABLD
         MACRO
&NME     SFR   &MF=D
         LCLC  &D
         AIF   ('&MF(1)' EQ 'L').MFL
         AIF   ('&MF(1)' EQ 'D').MFD
         MNOTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS ASSUMED.'
.MFD     ANOP
&D       SETC  'DSECT'
         AIF   ('&MF(2)' EQ '').MFDOK3
         AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3
&D       SETC  'DS'
         AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3
         MNOTE 8,'MF=&MF IS INVALID. MF=(&MF(1),N) IS ASSUMED.'
.MFDOK3  ANOP
*************************************************************
*                                                           *
*        SFR -- SCHEDULE FILE RECORD                        *
*                                                           *
*        A NEW SCHEDULE FILE CAN BE ALLOCATED VIA AN AMS    *
*        COMMAND SUCH AS THE FOLLOWING:                     *
*                                                           *
*        DEF CL(NAME('SYSVSAM.SCHEDULE') VOL(SYSRES) -      *
*            ATT(3) CODE(SCHEDULE) ERAS KEYS(12 0) -        *
*            OWNER(DAVECOLE) TO(99365) UNQ MRPW(XYZZY) -    *
*            RDPW(SCHEDULE)) -                              *
*                                                           *
*            DATA(NAME('SYSVSAM.SCHEDULE.DATA')-            *
*            RECORDS(1000 100) RECSZ(X'48' X'12D')) -       *
*                                                           *
*            INDEX(NAME('SYSVSAM.SCHEDULE.INDEX'))          *
*                                                           *
*************************************************************
         SPACE 1
         AIF   ('&NME' EQ '').MFDOK1
&NME     &D    0H
SFR      DS    0H                  MAP NAME
         AGO   .MFDOK2
.MFDOK1  ANOP
SFR      &D    0H
.MFDOK2  ANOP
SFRYR    DS    H                   SCHEDULED YEAR
SFRMO    DS    H                   SCHEDULED MONTH
SFRDY    DS    H                   SCHEDULED DAY
SFRYMD   EQU   SFRYR,*-SFRYR       DATE SEGMENT
SFRHR    DS    H                   SCHEDULED HOUR
SFRMN    DS    H                   SCHEDULED MINUTE
SFRHM    EQU   SFRHR,*-SFRHR       TIME-OF-DAY SEGMENT
SFRTIME  EQU   SFRYR,*-SFRYR       SCHEDULED TIME
SFRID    DS    H                   UNIQUE IDENTIFICATION NUMBER
SFRKEY   EQU   SFRYR,*-SFRYR       RECORD'S KEY FIELD
SFRNAME  DS    CL8                 APPLICATION NAME
         SPACE 1
SFRWK    DS    H                   SCHEDULED DAY OF THE WEEK
         SPACE 1
SFRXYR   DS    H                   YEAR OF LAST EXECUTION
SFRXMO   DS    H                   MONTH OF LAST EXECUTION
SFRXDY   DS    H                   DAY OF LAST EXECUTION
SFRXYMD  EQU   SFRXYR,*-SFRXYR     DATE SEGMENT
SFRXHR   DS    H                   HOUR OF LAST EXECUTION
SFRXMN   DS    H                   MINUTE OF LAST EXECUTION
SFRXHM   EQU   SFRXHR,*-SFRXHR     TIME-OF-DAY SEGMENT
SFRXTIME EQU   SFRXYR,*-SFRXYR     LAST EXECUTION TIME
         SPACE 1
SFRWHR   DS    H                   LENGTH OF EXECUTION WINDOW: HOURS
SFRWMN   DS    H                   LENGTH OF EXECUTION WINDOW: MINUTES
         SPACE 1
SFRSYSID DS    CL4                 SMF-SYSID OF SYSTEM ON WHICH THIS
*                                  COMMAND MAY BE EXECUTED. X'0000'
*                                  IMPLIES "ANY" SYSTEM.
         SPACE 1
SFRFLAG  DS    B                   FLAG BYTE
SFRFIPLF EQU   B'10000000'         FORCE REEXECUTION OF THIS COMMAND
*                                  IF AN IPL OCCURS WITHIN THE CURRENT
*                                  WINDOW EVEN IF THIS COMMAND HAS
*                                  ALREADY BEEN EXECUTED IN THIS SAME
*                                  WINDOW.
SFRFOVRD EQU   B'01000000'         THIS COMMAND OVERRIDES ALL OTHER
*                                  COMMANDS FOR THIS APPLICATION FOR
*                                  THIS DATE FOR WHICH THIS FLAG IS
*                                  OFF.
SFRFOBSO EQU   B'00100000'         THIS COMMAND IS OBSOLETE. (SET BY
*                                  SCHEDRUN. CHECKED BY SCHEDULE).
         SPACE 1
SFRCMDL  DS    2H                  L'COMMAND TEXT, ZERO
SFRCMD   DS    CL255               COMMAND TEXT
         SPACE 1
SFREND   EQU   *                   MAX END OF SFR
SFRLEN   EQU   SFREND-SFR          MAX L'SFR
         SPACE 3
*************************************************************
*        SCHEDULE FILE'S MASTER RECORD                      *
*************************************************************
         SPACE 1
         ORG   SFR                 LOCATE TO START OF BUFFER
SFMR     DS    0H
SFMRKEY  DS    XL(L'SFRKEY)      | KEY (ALL HEX-FF)
SFMRFID  DC    CL8'SCHEDULE'     V FILE ID
SFMRNXID DS    H                   NEXT DATA RECORD ID VALUE
SFMREND  EQU   *                   EO-SFMR
SFMRLEN  EQU   SFMREND-SFMR        L'SFMR
         ORG   SFREND              RELOCATE HIGH
         MEXIT
.*
.MFL     AIF   ('&MF(2)' EQ '').MFLD
         AIF   ('&MF(2)'(1,1) EQ 'M').MFLM
         MNOTE 8,'MF=&MF IS INVALID. MF=L IS ASSUMED'
.MFLD    ANOP
&NME     DS    0H
         DC    5H'0'               SCHEDULED TIME
         DC    2H'0'               SFRID, SFRWK
         DC    5H'0'               LAST EXECUTION TIME
         DC    2H'0'               EXECUTION WINDOW
         DC    CL4' '              APPLICATION NAME
         DC    B'00000000'         FLAG BYTE
         DC    2H'0'               SFRCMDL
         DC    CL255' '            SFRCMD
         MEXIT
.*
.MFLM    ANOP
&NME     DS    0H
         DC    (L'SFMRKEY)X'FF'    SFMRKEY
         DC    CL(L'SFMRFID)'SCHEDULE' SFMRFID
         DC    H'0'                SFMRNXID
         MEND
./ ADD NAME=SSSHIPE  0100-89041-89041-0921-00134-00134-00000-DYNABLD
         MACRO
&NME     SSSHIPE &IID=,&IADR=,&IDA=,&SVC#=,&PRIO=,&MF=D
         LCLC  &LIID,&LIADR,&LIDA,&LSVC#,&LPRIO,&LBL,&R,&D
&LIID    SETC  '*'
         AIF   ('&IID' EQ '').GOTIID
&LIID    SETC  '&IID'
         AIF   ('&IID'(1,1) NE '''').GOTIID
&LIID    SETC  ' '
         AIF   (K'&IID LE 2).GOTIID
&LIID    SETC  '&IID'(2,K'&IID-2)
.GOTIID  ANOP
&LIADR   SETC  '*-*'
         AIF   ('&IADR' EQ '').GOTIADR
&LIADR   SETC  '&IADR'
.GOTIADR ANOP
&LIDA    SETC  '*-*'
         AIF   ('&IDA' EQ '').GOTIDA
&LIDA    SETC  '&IDA'
.GOTIDA  ANOP
&LSVC#   SETC  '*-*'
         AIF   ('&SVC#' EQ '').GOTSVC#
&LSVC#   SETC  '&SVC#'
.GOTSVC# ANOP
&LPRIO   SETC  '128'
         AIF   ('&PRIO' EQ '').GOTPRIO
&LPRIO   SETC  '&PRIO'
.GOTPRIO AIF   ('&MF(1)' EQ 'E').MFE
         AIF   ('&MF(1)' EQ 'L').MFL
         AIF   ('&MF(1)' EQ 'D').MFD
         MNOTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS ASSUMED.'
.MFD     ANOP
&D       SETC  'DSECT'
         AIF   ('&MF(2)' EQ '').MFDOK3
         AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3
&D       SETC  'DS'
         AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3
         MNOTE 8,'MF(2)=&MF(2) IS INVALID. MF(2)=N IS ASSUMED.'
.MFDOK3  ANOP
*************************************************************
*                                                           *
*        SSSHIPE -- INTERCEPT PARAMETER ENTRY. THIS AREA    *
*        DESCRIBES DATA ASSOCIATED WITH INDIVIDUAL          *
*        SUB-SCREEN INTERCEPT ROUTINES.                     *
*                                                           *
*************************************************************
         SPACE 1
         AIF   ('&NME' EQ ' ').MFDOK1
&NME     &D    0F
SSSHIPE  DS    0F                  MAP NAME
         AGO   .MFDOK2
.MFDOK1  ANOP
SSSHIPE  &D    0F
.MFDOK2  ANOP
SSSHIID  DC    CL8'&LIID'          IDENTIFIER ASSOCIATED WITH THIS
*                                  INTERCEPT.
SSSHIADR DC    A(&LIADR)           ADDRESS OF THE INTERCEPT ROUTINE. A
*                                  ZERO VALUE MEANS THAT THE INTERCEPT
*                                  DESCRIBED BY THIS IPE IS TO BE
*                                  DELETED.
SSSHIDA  DC    A(&LIDA)            VALUE TO BE MADE AVAILABLE TO THE
*                                  INTERCEPT ROUTINE.
SSSHSVC# DC    AL1(&LSVC#)         SVC WHICH THIS ROUTINE INTERCEPTS.
SSSHPRIO DC    AL1(&LPRIO)         PRIORITY AT WHICH THIS INTERCEPT
*                                  ROUTINE IS QUEUED.
SSSHCC   DC    FL1'0'              HIGHEST COMPLETION CODE ASSOCIATED
*                                  WITH THE ATTEMPT TO QUEUE OR DELETE
*                                  THIS INTERCEPT ROUTINE. MUST BE
*                                  PRE-ZEROED BY THE CALLER.
SSSHIEND DS    0F                  END OF THE IPE.
SSSHILEN EQU   SSSHIEND-SSSHIPE    LENGTH OF THE IPE.
         MEXIT
.MFL     ANOP
&NME     DS    0F
         DC    CL8'&LIID'          IDENTIFIER ASSOCIATED WITH THIS
*                                  INTERCEPT
         DC    A(&LIADR)           ADDRESS OF THE INTERCEPT ROUTINE. A
*                                  ZERO VALUE MEANS THAT THE INTERCEPT
*                                  DESCRIBED BY THIS IPE IS TO BE
*                                  DELETED.
         DC    A(&LIDA)            VALUE TO BE MADE AVAILABLE TO THE
*                                  INTERCEPT ROUTINE.
         DC    AL1(&LSVC#)         SVC WHICH THIS ROUTINE INTERCEPTS.
         DC    AL1(&LPRIO)         PRIORITY AT WHICH THIS INTERCEPT
*                                  ROUTINE IS QUEUED.
         DC    FL1'0'              HIGHEST COMPLETION CODE ASSOCIATED
*                                  WITH THE ATTEMPT TO QUEUE OR DELETE
*                                  THIS INTERCEPT ROUTINE. MUST BE
*                                  PRE-ZEROED BY THE CALLER.
         MEXIT
.MFE     ANOP
&LBL     SETC  '&NME'
&R       SETC  '1'
         AIF   ('&MF(2)' NE '').GETMF2
&LBL     LA    &R,SSSHIPE          --> IPE
&LBL     SETC  ''
         AGO   .GOTMF2
.GETMF2  AIF   ('&MF(2)'(1,1) EQ '(').MF2REG
&LBL     LA    &R,&MF(2)           --> IPE
&LBL     SETC  ''
         AGO   .GOTMF2
.MF2REG  ANOP
&R       SETC  '&MF(2)'(2,K'&MF(2)-2)
.GOTMF2  ANOP
&LBL     MVI   SSSHCC-SSSHIPE(&R),0 RESET THE COMPLETION CODE
&LBL     SETC  ''
         AIF   ('&IID' EQ '').NOIID
         AIF   (K'&LIID LE 8).LIIDOK
         MNOTE 4,'IID=&IID IS TOO LONG.'
.LIIDOK  ANOP
         MVC   SSSHIID-SSSHIPE(,&R),=CL8'&LIID' SET NEW IID
.NOIID   AIF   ('&IADR' EQ '').NOIADR
         AIF   ('&IADR' NE '&IADR(1)').IADRREG
         LA    0,&IADR             --> INTERCEPT
         ST    0,SSSHIADR-SSSHIPE(,&R) STORE
         AGO   .NOIADR
.IADRREG ST    &IADR(1),SSSHIADR-SSSHIPE(,&R) STORE DATA AREA ADDRESS
.NOIADR  AIF   ('&IDA' EQ '').NOIDA
         AIF   ('&IDA' NE '&IDA(1)').IDAREG
         LA    0,&IDA              --> DATA AREA
         ST    0,SSSHIDA-SSSHIPE(,&R) STORE
         AGO   .NOIDA
.IDAREG  ST    &IDA(1),SSSHIDA-SSSHIPE(,&R) STORE DATA AREA ADDRESS
.NOIDA   AIF   ('&SVC#' EQ '').NOSVC#
         AIF   ('&SVC#' NE '&SVC#(1)').SVC#REG
         MVI   SSSHSVC#-SSSHIPE(&R),&SVC# SET SVC NUMBER
         AGO   .NOSVC#
.SVC#REG STC   &SVC#(1),SSSHSVC#-SSSHIPE(,&R) STORE SVC NUMBER
.NOSVC#  AIF   ('&PRIO' EQ '').NOPRIO
         AIF   ('&PRIO' NE '&PRIO(1)').PRIOREG
         MVI   SSSHPRIO-SSSHIPE(&R),&PRIO SET QUEUING PRIORITY
         AGO   .NOPRIO
.PRIOREG STC   &PRIO(1),SSSHPRIO-SSSHIPE(,&R) STORE QUEUING PRIORITY
.NOPRIO  ANOP
         MEND
./ ADD NAME=SSSHSPE  0100-89041-89041-0921-00142-00142-00000-DYNABLD
         MACRO
&NME     SSSHSPE &SID=,&SDA=,&TCB=,&FLAG=,&SVC=XXX,&MF=D
         LCLA  &A1
         LCLC  &LSID,&LSDA,&LTCB,&LFLAG,&LBL,&R,&D
&LSID    SETC  '*'
         AIF   ('&SID' EQ '').GOTSID
&LSID    SETC  '&SID'
         AIF   ('&SID'(1,1) NE '''').GOTSID
&LSID    SETC  ' '
         AIF   (K'&SID LE 2).GOTSID
&LSID    SETC  '&SID'(2,K'&SID-2)
.GOTSID  ANOP
&LSDA    SETC  '*-*'
         AIF   ('&SDA' EQ '').GOTSDA
&LSDA    SETC  '&SDA'
.GOTSDA  ANOP
&LTCB    SETC  '0'
         AIF   ('&TCB' EQ '').GOTTCB
&LTCB    SETC  '&TCB'
.GOTTCB  ANOP
&LFLAG   SETC  '0'
&A1      SETA  0
.LP1     AIF   (&A1 EQ N'&FLAG).END1
&A1      SETA  &A1+1
&LFLAG   SETC  '&LFLAG+SSSH&FLAG(&A1)'
         AGO   .LP1
.END1    AIF   ('&LFLAG' EQ '0').GOTFLAG
&LFLAG   SETC  '&LFLAG'(3,K'&LFLAG-2)
.GOTFLAG AIF   ('&MF(1)' EQ 'E').MFE
         AIF   ('&MF(1)' EQ 'L').MFL
         AIF   ('&MF(1)' EQ 'D').MFD
         MNOTE 8,'MF(1)=&MF(1) IS INVALID. MF(1)=D IS ASSUMED.'
.MFD     ANOP
&D       SETC  'DSECT'
         AIF   ('&MF(2)' EQ '').MFDOK3
         AIF   ('&MF(2)'(1,1) EQ 'Y').MFDOK3
&D       SETC  'DS'
         AIF   ('&MF(2)'(1,1) EQ 'N').MFDOK3
         MNOTE 8,'MF(2)=&MF(2) IS INVALID. MF(2)=N IS ASSUMED.'
.MFDOK3  ANOP
*************************************************************
*                                                           *
*        SSSHSPE -- SUB-SCREEN PARAMETER ENTRY. THIS AREA   *
*        CONTAINS DATA THAT IS ASSOCIATED WITH AN ENTIRE    *
*        SUB-SCREEN.                                        *
*                                                           *
*************************************************************
         SPACE 1
         AIF   ('&NME' EQ '').MFDOK1
&NME     &D    0F
SSSHSPE  DS    0F                  MAP NAME
         AGO   .MFDOK2
.MFDOK1  ANOP
SSSHSPE  &D    0F
.MFDOK2  ANOP
SSSHSID  DC    CL8'&LSID'          NAME OF THIS SUB-SCREEN
SSSHSDA  DC    A(&LSDA)            VALUE TO BE PROVIDED TO ALL
*                                  INTERCEPT ROUTINES DEFINED UNDER
*                                  THIS SUB-SCREEN.
SSSHTCB  DC    A(&LTCB)            IF SSSHFTCB, THEN THE ADDRESS OF THE
*                                  (FIRST) TCB TO WHICH THIS SUB-SCREEN
*                                  IS TO BE ASSIGNED.
SSSHFLAG DC    AL1(&LFLAG)         FLAG BYTE.
*                                  NOTE, AT LEAST ONE OF SSSHFCRN,
*                                  SSSHFTCB, OR SSSHFALL MUST BE ON.
*                                  REDUNDANT BIT SETTINGS ARE ALLOWED.
SSSHFDEL EQU   B'10000000'         THIS SUB-SCREEN IS TO BE DELETED
*                                  FROM THE INDICATED TCB'S.
SSSHFSUB EQU   B'01000000'         THIS SUB-SCREEN IS TO BE PROPAGATED
*                                  TO OR DELETED FROM ALL SUBTASKS OF
*                                  THE INDICATED TCB'S.
SSSHFCRN EQU   B'00100000'         THIS SUB-SCREEN IS TO BE ASSIGNED TO
*                                  OR DELETED FROM THE CURRENT TCB.
SSSHFTCB EQU   B'00010000'         THIS SUB-SCREEN IS TO BE ASSIGNED TO
*                                  OR DELETED FROM THE TCB POINTED TO
*                                  BY SSSHTCB.
SSSHFALL EQU   B'00001000'         THIS SUB-SCREEN IS TO BE ASSIGNED TO
*                                  OR DELETED FROM ALL TCB'S IN THIS
*                                  ADDRESS SPACE EXCEPT THE FIRST TCB
*                                  (THE REGION CONTROL TASK'S TCB).
SSSHSEND DS    0F                  END OF SSSHSPE.
SSSHSLEN EQU   SSSHSEND-SSSHSPE    LENGTH OF SSSHSPE.
         AIF   ('&SVC' EQ '').NOSVC
         SPACE 3
SSSHSVC  EQU   &SVC                SSSH'S SVC
.NOSVC   MEXIT
.MFL     ANOP
&NME     DS    0F
         DC    CL8'&LSID'          NAME OF THIS SUB-SCREEN
         DC    A(&LSDA)            VALUE TO BE PROVIDED TO ALL
*                                  INTERCEPT ROUTINES DEFINED UNDER
*                                  THIS SUB-SCREEN.
         DC    A(&LTCB)            IF SSSHFTCB, THEN THE ADDRESS OF THE
*                                  (FIRST) TCB TO WHICH THIS SUB-SCREEN
*                                  IS TO BE ASSIGNED.
         DC    AL1(&LFLAG)         FLAG BYTE.
*                                  NOTE, AT LEAST ONE OF SSSHFCRN,
*                                  SSSHFTCB, OR SSSHFALL MUST BE ON.
*                                  REDUNDANT BIT SETTINGS ARE ALLOWED.
         MEXIT
.MFE     ANOP
&LBL     SETC  '&NME'
&R       SETC  '1'
         AIF   ('&MF(2)' NE '').GETMF2
&LBL     LA    &R,SSSHSPE          --> SPE
&LBL     SETC  ''
         AGO   .GOTMF2
.GETMF2  AIF   ('&MF(2)'(1,1) EQ '(').MF2REG
&LBL     LA    &R,&MF(2)           --> SPE
&LBL     SETC  ''
         AGO   .GOTMF2
.MF2REG  ANOP
&R       SETC  '&MF(2)'(2,K'&MF(2)-2)
.GOTMF2  AIF   ('&SID' EQ '').NOSID
         AIF   (K'&LSID LE 8).LSIDOK
         MNOTE 4,'SID=&SID IS TOO LONG.'
.LSIDOK  ANOP
&LBL     MVC   SSSHSID-SSSHSPE(,&R),=CL8'&LSID' SET NEW SID
&LBL     SETC  ''
.NOSID   AIF   ('&SDA' EQ '').NOSDA
         AIF   ('&SDA' NE '&SDA(1)').SDAREG
&LBL     LA    0,&SDA              --> SDA
&LBL     SETC  ''
         ST    0,SSSHSDA-SSSHSPE(,&R) STORE
         AGO   .NOSDA
.SDAREG  ANOP
&LBL     ST    &SDA(1),SSSHSDA-SSSHSPE(,&R) STORE SDA VALUE
&LBL     SETC  ''
.NOSDA   AIF   ('&TCB' EQ '').NOTCB
         AIF   ('&TCB' NE '&TCB(1)').TCBREG
&LBL     LA    0,&TCB              --> OBJECT TCB
&LBL     SETC  ''
         ST    0,SSSHTCB-SSSHSPE(,&R) STORE
         AGO   .NOTCB
.TCBREG  ANOP
&LBL     ST    &TCB(1),SSSHTCB-SSSHSPE(,&R) STORE TCB PTR
&LBL     SETC  ''
.NOTCB   AIF   ('&FLAG' EQ '').NOFLAG
&LBL     MVC   SSSHFLAG-SSSHSPE(&R),&LFLAG SET FLAGS
&LBL     SETC  ''
.NOFLAG  ANOP
         MEND
